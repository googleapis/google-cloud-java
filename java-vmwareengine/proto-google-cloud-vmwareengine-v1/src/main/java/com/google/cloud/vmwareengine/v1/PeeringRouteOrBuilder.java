/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vmwareengine/v1/vmwareengine_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.vmwareengine.v1;

public interface PeeringRouteOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.vmwareengine.v1.PeeringRoute)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. Destination range of the peering route in CIDR notation.
   * </pre>
   *
   * <code>string dest_range = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The destRange.
   */
  java.lang.String getDestRange();
  /**
   *
   *
   * <pre>
   * Output only. Destination range of the peering route in CIDR notation.
   * </pre>
   *
   * <code>string dest_range = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for destRange.
   */
  com.google.protobuf.ByteString getDestRangeBytes();

  /**
   *
   *
   * <pre>
   * Output only. Type of the route in the peer VPC network.
   * </pre>
   *
   * <code>
   * .google.cloud.vmwareengine.v1.PeeringRoute.Type type = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   *
   *
   * <pre>
   * Output only. Type of the route in the peer VPC network.
   * </pre>
   *
   * <code>
   * .google.cloud.vmwareengine.v1.PeeringRoute.Type type = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The type.
   */
  com.google.cloud.vmwareengine.v1.PeeringRoute.Type getType();

  /**
   *
   *
   * <pre>
   * Output only. Region containing the next hop of the peering route. This
   * field only applies to dynamic routes in the peer VPC network.
   * </pre>
   *
   * <code>string next_hop_region = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The nextHopRegion.
   */
  java.lang.String getNextHopRegion();
  /**
   *
   *
   * <pre>
   * Output only. Region containing the next hop of the peering route. This
   * field only applies to dynamic routes in the peer VPC network.
   * </pre>
   *
   * <code>string next_hop_region = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for nextHopRegion.
   */
  com.google.protobuf.ByteString getNextHopRegionBytes();

  /**
   *
   *
   * <pre>
   * Output only. The priority of the peering route.
   * </pre>
   *
   * <code>int64 priority = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The priority.
   */
  long getPriority();

  /**
   *
   *
   * <pre>
   * Output only. True if the peering route has been imported from a peered
   * VPC network; false otherwise. The import happens if the field
   * `NetworkPeering.importCustomRoutes` is true for this network,
   * `NetworkPeering.exportCustomRoutes` is true for the peer VPC network, and
   * the import does not result in a route conflict.
   * </pre>
   *
   * <code>bool imported = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The imported.
   */
  boolean getImported();

  /**
   *
   *
   * <pre>
   * Output only. Direction of the routes exchanged with the peer network, from
   * the VMware Engine network perspective:
   *
   * * Routes of direction `INCOMING` are imported from the peer network.
   * * Routes of direction `OUTGOING` are exported from the intranet VPC network
   * of the VMware Engine network.
   * </pre>
   *
   * <code>
   * .google.cloud.vmwareengine.v1.PeeringRoute.Direction direction = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for direction.
   */
  int getDirectionValue();
  /**
   *
   *
   * <pre>
   * Output only. Direction of the routes exchanged with the peer network, from
   * the VMware Engine network perspective:
   *
   * * Routes of direction `INCOMING` are imported from the peer network.
   * * Routes of direction `OUTGOING` are exported from the intranet VPC network
   * of the VMware Engine network.
   * </pre>
   *
   * <code>
   * .google.cloud.vmwareengine.v1.PeeringRoute.Direction direction = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The direction.
   */
  com.google.cloud.vmwareengine.v1.PeeringRoute.Direction getDirection();
}
