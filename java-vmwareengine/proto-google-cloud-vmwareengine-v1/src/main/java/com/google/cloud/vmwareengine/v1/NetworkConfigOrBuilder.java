/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vmwareengine/v1/vmwareengine_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.vmwareengine.v1;

public interface NetworkConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.vmwareengine.v1.NetworkConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Management CIDR used by VMware management appliances.
   * </pre>
   *
   * <code>string management_cidr = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The managementCidr.
   */
  java.lang.String getManagementCidr();
  /**
   *
   *
   * <pre>
   * Required. Management CIDR used by VMware management appliances.
   * </pre>
   *
   * <code>string management_cidr = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for managementCidr.
   */
  com.google.protobuf.ByteString getManagementCidrBytes();

  /**
   *
   *
   * <pre>
   * Optional. The relative resource name of the VMware Engine network attached
   * to the private cloud. Specify the name in the following form:
   * `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * where `{project}` can either be a project number or a project ID.
   * </pre>
   *
   * <code>
   * string vmware_engine_network = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The vmwareEngineNetwork.
   */
  java.lang.String getVmwareEngineNetwork();
  /**
   *
   *
   * <pre>
   * Optional. The relative resource name of the VMware Engine network attached
   * to the private cloud. Specify the name in the following form:
   * `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * where `{project}` can either be a project number or a project ID.
   * </pre>
   *
   * <code>
   * string vmware_engine_network = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for vmwareEngineNetwork.
   */
  com.google.protobuf.ByteString getVmwareEngineNetworkBytes();

  /**
   *
   *
   * <pre>
   * Output only. The canonical name of the VMware Engine network in the form:
   * `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * </pre>
   *
   * <code>
   * string vmware_engine_network_canonical = 6 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The vmwareEngineNetworkCanonical.
   */
  java.lang.String getVmwareEngineNetworkCanonical();
  /**
   *
   *
   * <pre>
   * Output only. The canonical name of the VMware Engine network in the form:
   * `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
   * </pre>
   *
   * <code>
   * string vmware_engine_network_canonical = 6 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for vmwareEngineNetworkCanonical.
   */
  com.google.protobuf.ByteString getVmwareEngineNetworkCanonicalBytes();

  /**
   *
   *
   * <pre>
   * Output only. The IP address layout version of the management IP address
   * range. Possible versions include:
   * * `managementIpAddressLayoutVersion=1`: Indicates the legacy IP address
   * layout used by some existing private clouds. This is no longer supported
   * for new private clouds as it does not support all features.
   * * `managementIpAddressLayoutVersion=2`: Indicates the latest IP address
   * layout used by all newly created private clouds. This version supports all
   * current features.
   * </pre>
   *
   * <code>
   * int32 management_ip_address_layout_version = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The managementIpAddressLayoutVersion.
   */
  int getManagementIpAddressLayoutVersion();

  /**
   *
   *
   * <pre>
   * Output only. DNS Server IP of the Private Cloud.
   * All DNS queries can be forwarded to this address for name resolution of
   * Private Cloud's management entities like vCenter, NSX-T Manager and
   * ESXi hosts.
   * </pre>
   *
   * <code>string dns_server_ip = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The dnsServerIp.
   */
  java.lang.String getDnsServerIp();
  /**
   *
   *
   * <pre>
   * Output only. DNS Server IP of the Private Cloud.
   * All DNS queries can be forwarded to this address for name resolution of
   * Private Cloud's management entities like vCenter, NSX-T Manager and
   * ESXi hosts.
   * </pre>
   *
   * <code>string dns_server_ip = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for dnsServerIp.
   */
  com.google.protobuf.ByteString getDnsServerIpBytes();
}
