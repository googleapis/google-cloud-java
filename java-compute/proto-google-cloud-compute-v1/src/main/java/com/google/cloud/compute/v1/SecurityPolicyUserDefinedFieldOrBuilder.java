/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.compute.v1;

public interface SecurityPolicyUserDefinedFieldOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.SecurityPolicyUserDefinedField)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
   * Check the Base enum for the list of possible values.
   * </pre>
   *
   * <code>optional string base = 3016401;</code>
   *
   * @return Whether the base field is set.
   */
  boolean hasBase();
  /**
   *
   *
   * <pre>
   * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
   * Check the Base enum for the list of possible values.
   * </pre>
   *
   * <code>optional string base = 3016401;</code>
   *
   * @return The base.
   */
  java.lang.String getBase();
  /**
   *
   *
   * <pre>
   * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
   * Check the Base enum for the list of possible values.
   * </pre>
   *
   * <code>optional string base = 3016401;</code>
   *
   * @return The bytes for base.
   */
  com.google.protobuf.ByteString getBaseBytes();

  /**
   *
   *
   * <pre>
   * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
   * </pre>
   *
   * <code>optional string mask = 3344108;</code>
   *
   * @return Whether the mask field is set.
   */
  boolean hasMask();
  /**
   *
   *
   * <pre>
   * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
   * </pre>
   *
   * <code>optional string mask = 3344108;</code>
   *
   * @return The mask.
   */
  java.lang.String getMask();
  /**
   *
   *
   * <pre>
   * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
   * </pre>
   *
   * <code>optional string mask = 3344108;</code>
   *
   * @return The bytes for mask.
   */
  com.google.protobuf.ByteString getMaskBytes();

  /**
   *
   *
   * <pre>
   * The name of this field. Must be unique within the policy.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   *
   *
   * <pre>
   * The name of this field. Must be unique within the policy.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * The name of this field. Must be unique within the policy.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Offset of the first byte of the field (in network byte order) relative to 'base'.
   * </pre>
   *
   * <code>optional int32 offset = 53961875;</code>
   *
   * @return Whether the offset field is set.
   */
  boolean hasOffset();
  /**
   *
   *
   * <pre>
   * Offset of the first byte of the field (in network byte order) relative to 'base'.
   * </pre>
   *
   * <code>optional int32 offset = 53961875;</code>
   *
   * @return The offset.
   */
  int getOffset();

  /**
   *
   *
   * <pre>
   * Size of the field in bytes. Valid values: 1-4.
   * </pre>
   *
   * <code>optional int32 size = 3530753;</code>
   *
   * @return Whether the size field is set.
   */
  boolean hasSize();
  /**
   *
   *
   * <pre>
   * Size of the field in bytes. Valid values: 1-4.
   * </pre>
   *
   * <code>optional int32 size = 3530753;</code>
   *
   * @return The size.
   */
  int getSize();
}
