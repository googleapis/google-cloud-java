/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.compute.v1;

public interface LicenseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.License)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that can replace this license. Note: such replacements are allowed even if removable_from_disk is false.
   * </pre>
   *
   * <code>repeated string allowed_replacement_licenses = 195677718;</code>
   *
   * @return A list containing the allowedReplacementLicenses.
   */
  java.util.List<java.lang.String> getAllowedReplacementLicensesList();

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that can replace this license. Note: such replacements are allowed even if removable_from_disk is false.
   * </pre>
   *
   * <code>repeated string allowed_replacement_licenses = 195677718;</code>
   *
   * @return The count of allowedReplacementLicenses.
   */
  int getAllowedReplacementLicensesCount();

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that can replace this license. Note: such replacements are allowed even if removable_from_disk is false.
   * </pre>
   *
   * <code>repeated string allowed_replacement_licenses = 195677718;</code>
   *
   * @param index The index of the element to return.
   * @return The allowedReplacementLicenses at the given index.
   */
  java.lang.String getAllowedReplacementLicenses(int index);

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that can replace this license. Note: such replacements are allowed even if removable_from_disk is false.
   * </pre>
   *
   * <code>repeated string allowed_replacement_licenses = 195677718;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the allowedReplacementLicenses at the given index.
   */
  com.google.protobuf.ByteString getAllowedReplacementLicensesBytes(int index);

  /**
   *
   *
   * <pre>
   * If true, this license can be appended to an existing disk's set of licenses.
   * </pre>
   *
   * <code>optional bool appendable_to_disk = 16959254;</code>
   *
   * @return Whether the appendableToDisk field is set.
   */
  boolean hasAppendableToDisk();

  /**
   *
   *
   * <pre>
   * If true, this license can be appended to an existing disk's set of licenses.
   * </pre>
   *
   * <code>optional bool appendable_to_disk = 16959254;</code>
   *
   * @return The appendableToDisk.
   */
  boolean getAppendableToDisk();

  /**
   *
   *
   * <pre>
   * [Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee.
   * </pre>
   *
   * <code>optional bool charges_use_fee = 372412622;</code>
   *
   * @return Whether the chargesUseFee field is set.
   */
  boolean hasChargesUseFee();

  /**
   *
   *
   * <pre>
   * [Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee.
   * </pre>
   *
   * <code>optional bool charges_use_fee = 372412622;</code>
   *
   * @return The chargesUseFee.
   */
  boolean getChargesUseFee();

  /**
   *
   *
   * <pre>
   * [Output Only] Creation timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>optional string creation_timestamp = 30525366;</code>
   *
   * @return Whether the creationTimestamp field is set.
   */
  boolean hasCreationTimestamp();

  /**
   *
   *
   * <pre>
   * [Output Only] Creation timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>optional string creation_timestamp = 30525366;</code>
   *
   * @return The creationTimestamp.
   */
  java.lang.String getCreationTimestamp();

  /**
   *
   *
   * <pre>
   * [Output Only] Creation timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>optional string creation_timestamp = 30525366;</code>
   *
   * @return The bytes for creationTimestamp.
   */
  com.google.protobuf.ByteString getCreationTimestampBytes();

  /**
   *
   *
   * <pre>
   * An optional textual description of the resource; provided by the client when the resource is created.
   * </pre>
   *
   * <code>optional string description = 422937596;</code>
   *
   * @return Whether the description field is set.
   */
  boolean hasDescription();

  /**
   *
   *
   * <pre>
   * An optional textual description of the resource; provided by the client when the resource is created.
   * </pre>
   *
   * <code>optional string description = 422937596;</code>
   *
   * @return The description.
   */
  java.lang.String getDescription();

  /**
   *
   *
   * <pre>
   * An optional textual description of the resource; provided by the client when the resource is created.
   * </pre>
   *
   * <code>optional string description = 422937596;</code>
   *
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString getDescriptionBytes();

  /**
   *
   *
   * <pre>
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   * </pre>
   *
   * <code>optional uint64 id = 3355;</code>
   *
   * @return Whether the id field is set.
   */
  boolean hasId();

  /**
   *
   *
   * <pre>
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   * </pre>
   *
   * <code>optional uint64 id = 3355;</code>
   *
   * @return The id.
   */
  long getId();

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that are incompatible with this license. If a license is incompatible with this license, it cannot be attached to the same disk or image.
   * </pre>
   *
   * <code>repeated string incompatible_licenses = 334239768;</code>
   *
   * @return A list containing the incompatibleLicenses.
   */
  java.util.List<java.lang.String> getIncompatibleLicensesList();

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that are incompatible with this license. If a license is incompatible with this license, it cannot be attached to the same disk or image.
   * </pre>
   *
   * <code>repeated string incompatible_licenses = 334239768;</code>
   *
   * @return The count of incompatibleLicenses.
   */
  int getIncompatibleLicensesCount();

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that are incompatible with this license. If a license is incompatible with this license, it cannot be attached to the same disk or image.
   * </pre>
   *
   * <code>repeated string incompatible_licenses = 334239768;</code>
   *
   * @param index The index of the element to return.
   * @return The incompatibleLicenses at the given index.
   */
  java.lang.String getIncompatibleLicenses(int index);

  /**
   *
   *
   * <pre>
   * Specifies licenseCodes of licenses that are incompatible with this license. If a license is incompatible with this license, it cannot be attached to the same disk or image.
   * </pre>
   *
   * <code>repeated string incompatible_licenses = 334239768;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the incompatibleLicenses at the given index.
   */
  com.google.protobuf.ByteString getIncompatibleLicensesBytes(int index);

  /**
   *
   *
   * <pre>
   * [Output Only] Type of resource. Always compute#license for licenses.
   * </pre>
   *
   * <code>optional string kind = 3292052;</code>
   *
   * @return Whether the kind field is set.
   */
  boolean hasKind();

  /**
   *
   *
   * <pre>
   * [Output Only] Type of resource. Always compute#license for licenses.
   * </pre>
   *
   * <code>optional string kind = 3292052;</code>
   *
   * @return The kind.
   */
  java.lang.String getKind();

  /**
   *
   *
   * <pre>
   * [Output Only] Type of resource. Always compute#license for licenses.
   * </pre>
   *
   * <code>optional string kind = 3292052;</code>
   *
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString getKindBytes();

  /**
   *
   *
   * <pre>
   * [Output Only] The unique code used to attach this license to images, snapshots, and disks.
   * </pre>
   *
   * <code>optional uint64 license_code = 1467179;</code>
   *
   * @return Whether the licenseCode field is set.
   */
  boolean hasLicenseCode();

  /**
   *
   *
   * <pre>
   * [Output Only] The unique code used to attach this license to images, snapshots, and disks.
   * </pre>
   *
   * <code>optional uint64 license_code = 1467179;</code>
   *
   * @return The licenseCode.
   */
  long getLicenseCode();

  /**
   *
   *
   * <pre>
   * If set, this license will be unable to be removed or replaced once attached to a disk until the minimum_retention period has passed.
   * </pre>
   *
   * <code>optional .google.cloud.compute.v1.Duration minimum_retention = 155398189;</code>
   *
   * @return Whether the minimumRetention field is set.
   */
  boolean hasMinimumRetention();

  /**
   *
   *
   * <pre>
   * If set, this license will be unable to be removed or replaced once attached to a disk until the minimum_retention period has passed.
   * </pre>
   *
   * <code>optional .google.cloud.compute.v1.Duration minimum_retention = 155398189;</code>
   *
   * @return The minimumRetention.
   */
  com.google.cloud.compute.v1.Duration getMinimumRetention();

  /**
   *
   *
   * <pre>
   * If set, this license will be unable to be removed or replaced once attached to a disk until the minimum_retention period has passed.
   * </pre>
   *
   * <code>optional .google.cloud.compute.v1.Duration minimum_retention = 155398189;</code>
   */
  com.google.cloud.compute.v1.DurationOrBuilder getMinimumRetentionOrBuilder();

  /**
   *
   *
   * <pre>
   * If true, this license can only be used on VMs on multi tenant nodes.
   * </pre>
   *
   * <code>optional bool multi_tenant_only = 274395163;</code>
   *
   * @return Whether the multiTenantOnly field is set.
   */
  boolean hasMultiTenantOnly();

  /**
   *
   *
   * <pre>
   * If true, this license can only be used on VMs on multi tenant nodes.
   * </pre>
   *
   * <code>optional bool multi_tenant_only = 274395163;</code>
   *
   * @return The multiTenantOnly.
   */
  boolean getMultiTenantOnly();

  /**
   *
   *
   * <pre>
   * Name of the resource. The name must be 1-63 characters long and comply with RFC1035.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return Whether the name field is set.
   */
  boolean hasName();

  /**
   *
   *
   * <pre>
   * Name of the resource. The name must be 1-63 characters long and comply with RFC1035.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return The name.
   */
  java.lang.String getName();

  /**
   *
   *
   * <pre>
   * Name of the resource. The name must be 1-63 characters long and comply with RFC1035.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * If true, indicates this is an OS license. Only one OS license can be attached to a disk or image at a time.
   * </pre>
   *
   * <code>optional bool os_license = 487986406;</code>
   *
   * @return Whether the osLicense field is set.
   */
  boolean hasOsLicense();

  /**
   *
   *
   * <pre>
   * If true, indicates this is an OS license. Only one OS license can be attached to a disk or image at a time.
   * </pre>
   *
   * <code>optional bool os_license = 487986406;</code>
   *
   * @return The osLicense.
   */
  boolean getOsLicense();

  /**
   *
   *
   * <pre>
   * If true, this license can be removed from a disk's set of licenses, with no replacement license needed.
   * </pre>
   *
   * <code>optional bool removable_from_disk = 25854638;</code>
   *
   * @return Whether the removableFromDisk field is set.
   */
  boolean hasRemovableFromDisk();

  /**
   *
   *
   * <pre>
   * If true, this license can be removed from a disk's set of licenses, with no replacement license needed.
   * </pre>
   *
   * <code>optional bool removable_from_disk = 25854638;</code>
   *
   * @return The removableFromDisk.
   */
  boolean getRemovableFromDisk();

  /**
   *
   *
   * <pre>
   * Specifies the set of permissible coattached licenseCodes of licenses that satisfy the coattachment requirement of this license. At least one license from the set must be attached to the same disk or image as this license.
   * </pre>
   *
   * <code>repeated string required_coattached_licenses = 129195265;</code>
   *
   * @return A list containing the requiredCoattachedLicenses.
   */
  java.util.List<java.lang.String> getRequiredCoattachedLicensesList();

  /**
   *
   *
   * <pre>
   * Specifies the set of permissible coattached licenseCodes of licenses that satisfy the coattachment requirement of this license. At least one license from the set must be attached to the same disk or image as this license.
   * </pre>
   *
   * <code>repeated string required_coattached_licenses = 129195265;</code>
   *
   * @return The count of requiredCoattachedLicenses.
   */
  int getRequiredCoattachedLicensesCount();

  /**
   *
   *
   * <pre>
   * Specifies the set of permissible coattached licenseCodes of licenses that satisfy the coattachment requirement of this license. At least one license from the set must be attached to the same disk or image as this license.
   * </pre>
   *
   * <code>repeated string required_coattached_licenses = 129195265;</code>
   *
   * @param index The index of the element to return.
   * @return The requiredCoattachedLicenses at the given index.
   */
  java.lang.String getRequiredCoattachedLicenses(int index);

  /**
   *
   *
   * <pre>
   * Specifies the set of permissible coattached licenseCodes of licenses that satisfy the coattachment requirement of this license. At least one license from the set must be attached to the same disk or image as this license.
   * </pre>
   *
   * <code>repeated string required_coattached_licenses = 129195265;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the requiredCoattachedLicenses at the given index.
   */
  com.google.protobuf.ByteString getRequiredCoattachedLicensesBytes(int index);

  /**
   *
   *
   * <pre>
   * [Input Only] Deprecated.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.LicenseResourceRequirements resource_requirements = 214292769;
   * </code>
   *
   * @return Whether the resourceRequirements field is set.
   */
  boolean hasResourceRequirements();

  /**
   *
   *
   * <pre>
   * [Input Only] Deprecated.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.LicenseResourceRequirements resource_requirements = 214292769;
   * </code>
   *
   * @return The resourceRequirements.
   */
  com.google.cloud.compute.v1.LicenseResourceRequirements getResourceRequirements();

  /**
   *
   *
   * <pre>
   * [Input Only] Deprecated.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.LicenseResourceRequirements resource_requirements = 214292769;
   * </code>
   */
  com.google.cloud.compute.v1.LicenseResourceRequirementsOrBuilder
      getResourceRequirementsOrBuilder();

  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 456214797;</code>
   *
   * @return Whether the selfLink field is set.
   */
  boolean hasSelfLink();

  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 456214797;</code>
   *
   * @return The selfLink.
   */
  java.lang.String getSelfLink();

  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for the resource.
   * </pre>
   *
   * <code>optional string self_link = 456214797;</code>
   *
   * @return The bytes for selfLink.
   */
  com.google.protobuf.ByteString getSelfLinkBytes();

  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for this resource with the resource id.
   * </pre>
   *
   * <code>optional string self_link_with_id = 44520962;</code>
   *
   * @return Whether the selfLinkWithId field is set.
   */
  boolean hasSelfLinkWithId();

  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for this resource with the resource id.
   * </pre>
   *
   * <code>optional string self_link_with_id = 44520962;</code>
   *
   * @return The selfLinkWithId.
   */
  java.lang.String getSelfLinkWithId();

  /**
   *
   *
   * <pre>
   * [Output Only] Server-defined URL for this resource with the resource id.
   * </pre>
   *
   * <code>optional string self_link_with_id = 44520962;</code>
   *
   * @return The bytes for selfLinkWithId.
   */
  com.google.protobuf.ByteString getSelfLinkWithIdBytes();

  /**
   *
   *
   * <pre>
   * If true, this license can only be used on VMs on sole tenant nodes.
   * </pre>
   *
   * <code>optional bool sole_tenant_only = 427525559;</code>
   *
   * @return Whether the soleTenantOnly field is set.
   */
  boolean hasSoleTenantOnly();

  /**
   *
   *
   * <pre>
   * If true, this license can only be used on VMs on sole tenant nodes.
   * </pre>
   *
   * <code>optional bool sole_tenant_only = 427525559;</code>
   *
   * @return The soleTenantOnly.
   */
  boolean getSoleTenantOnly();

  /**
   *
   *
   * <pre>
   * If false, licenses will not be copied from the source resource when creating an image from a disk, disk from snapshot, or snapshot from disk.
   * </pre>
   *
   * <code>optional bool transferable = 4349893;</code>
   *
   * @return Whether the transferable field is set.
   */
  boolean hasTransferable();

  /**
   *
   *
   * <pre>
   * If false, licenses will not be copied from the source resource when creating an image from a disk, disk from snapshot, or snapshot from disk.
   * </pre>
   *
   * <code>optional bool transferable = 4349893;</code>
   *
   * @return The transferable.
   */
  boolean getTransferable();

  /**
   *
   *
   * <pre>
   * [Output Only] Last update timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>optional string update_timestamp = 120894752;</code>
   *
   * @return Whether the updateTimestamp field is set.
   */
  boolean hasUpdateTimestamp();

  /**
   *
   *
   * <pre>
   * [Output Only] Last update timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>optional string update_timestamp = 120894752;</code>
   *
   * @return The updateTimestamp.
   */
  java.lang.String getUpdateTimestamp();

  /**
   *
   *
   * <pre>
   * [Output Only] Last update timestamp in RFC3339 text format.
   * </pre>
   *
   * <code>optional string update_timestamp = 120894752;</code>
   *
   * @return The bytes for updateTimestamp.
   */
  com.google.protobuf.ByteString getUpdateTimestampBytes();
}
