/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.compute.v1;

public interface NetworkPeeringConnectionStatusTrafficConfigurationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Whether custom routes are being exported to the peer network.
   * </pre>
   *
   * <code>optional bool export_custom_routes_to_peer = 286428404;</code>
   *
   * @return Whether the exportCustomRoutesToPeer field is set.
   */
  boolean hasExportCustomRoutesToPeer();

  /**
   *
   *
   * <pre>
   * Whether custom routes are being exported to the peer network.
   * </pre>
   *
   * <code>optional bool export_custom_routes_to_peer = 286428404;</code>
   *
   * @return The exportCustomRoutesToPeer.
   */
  boolean getExportCustomRoutesToPeer();

  /**
   *
   *
   * <pre>
   * Whether subnet routes with public IP ranges are being exported to the peer network.
   * </pre>
   *
   * <code>optional bool export_subnet_routes_with_public_ip_to_peer = 8358601;</code>
   *
   * @return Whether the exportSubnetRoutesWithPublicIpToPeer field is set.
   */
  boolean hasExportSubnetRoutesWithPublicIpToPeer();

  /**
   *
   *
   * <pre>
   * Whether subnet routes with public IP ranges are being exported to the peer network.
   * </pre>
   *
   * <code>optional bool export_subnet_routes_with_public_ip_to_peer = 8358601;</code>
   *
   * @return The exportSubnetRoutesWithPublicIpToPeer.
   */
  boolean getExportSubnetRoutesWithPublicIpToPeer();

  /**
   *
   *
   * <pre>
   * Whether custom routes are being imported from the peer network.
   * </pre>
   *
   * <code>optional bool import_custom_routes_from_peer = 398584470;</code>
   *
   * @return Whether the importCustomRoutesFromPeer field is set.
   */
  boolean hasImportCustomRoutesFromPeer();

  /**
   *
   *
   * <pre>
   * Whether custom routes are being imported from the peer network.
   * </pre>
   *
   * <code>optional bool import_custom_routes_from_peer = 398584470;</code>
   *
   * @return The importCustomRoutesFromPeer.
   */
  boolean getImportCustomRoutesFromPeer();

  /**
   *
   *
   * <pre>
   * Whether subnet routes with public IP ranges are being imported from the peer network.
   * </pre>
   *
   * <code>optional bool import_subnet_routes_with_public_ip_from_peer = 234712361;</code>
   *
   * @return Whether the importSubnetRoutesWithPublicIpFromPeer field is set.
   */
  boolean hasImportSubnetRoutesWithPublicIpFromPeer();

  /**
   *
   *
   * <pre>
   * Whether subnet routes with public IP ranges are being imported from the peer network.
   * </pre>
   *
   * <code>optional bool import_subnet_routes_with_public_ip_from_peer = 234712361;</code>
   *
   * @return The importSubnetRoutesWithPublicIpFromPeer.
   */
  boolean getImportSubnetRoutesWithPublicIpFromPeer();

  /**
   *
   *
   * <pre>
   * Which IP version(s) of traffic and routes are being imported or exported between peer networks.
   * Check the StackType enum for the list of possible values.
   * </pre>
   *
   * <code>optional string stack_type = 425908881;</code>
   *
   * @return Whether the stackType field is set.
   */
  boolean hasStackType();

  /**
   *
   *
   * <pre>
   * Which IP version(s) of traffic and routes are being imported or exported between peer networks.
   * Check the StackType enum for the list of possible values.
   * </pre>
   *
   * <code>optional string stack_type = 425908881;</code>
   *
   * @return The stackType.
   */
  java.lang.String getStackType();

  /**
   *
   *
   * <pre>
   * Which IP version(s) of traffic and routes are being imported or exported between peer networks.
   * Check the StackType enum for the list of possible values.
   * </pre>
   *
   * <code>optional string stack_type = 425908881;</code>
   *
   * @return The bytes for stackType.
   */
  com.google.protobuf.ByteString getStackTypeBytes();
}
