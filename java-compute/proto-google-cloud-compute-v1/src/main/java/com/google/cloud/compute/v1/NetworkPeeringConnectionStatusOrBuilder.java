/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.compute.v1;

public interface NetworkPeeringConnectionStatusOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.NetworkPeeringConnectionStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The consensus state contains information about the status of update and delete for a consensus peering connection.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState consensus_state = 379772617;
   * </code>
   *
   * @return Whether the consensusState field is set.
   */
  boolean hasConsensusState();

  /**
   *
   *
   * <pre>
   * The consensus state contains information about the status of update and delete for a consensus peering connection.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState consensus_state = 379772617;
   * </code>
   *
   * @return The consensusState.
   */
  com.google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState getConsensusState();

  /**
   *
   *
   * <pre>
   * The consensus state contains information about the status of update and delete for a consensus peering connection.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState consensus_state = 379772617;
   * </code>
   */
  com.google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusStateOrBuilder
      getConsensusStateOrBuilder();

  /**
   *
   *
   * <pre>
   * The active connectivity settings for the peering connection based on the settings of the network peerings.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration traffic_configuration = 133016116;
   * </code>
   *
   * @return Whether the trafficConfiguration field is set.
   */
  boolean hasTrafficConfiguration();

  /**
   *
   *
   * <pre>
   * The active connectivity settings for the peering connection based on the settings of the network peerings.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration traffic_configuration = 133016116;
   * </code>
   *
   * @return The trafficConfiguration.
   */
  com.google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration
      getTrafficConfiguration();

  /**
   *
   *
   * <pre>
   * The active connectivity settings for the peering connection based on the settings of the network peerings.
   * </pre>
   *
   * <code>
   * optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration traffic_configuration = 133016116;
   * </code>
   */
  com.google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfigurationOrBuilder
      getTrafficConfigurationOrBuilder();

  /**
   *
   *
   * <pre>
   * The update strategy determines the update/delete semantics for this peering connection.
   * Check the UpdateStrategy enum for the list of possible values.
   * </pre>
   *
   * <code>optional string update_strategy = 6123049;</code>
   *
   * @return Whether the updateStrategy field is set.
   */
  boolean hasUpdateStrategy();

  /**
   *
   *
   * <pre>
   * The update strategy determines the update/delete semantics for this peering connection.
   * Check the UpdateStrategy enum for the list of possible values.
   * </pre>
   *
   * <code>optional string update_strategy = 6123049;</code>
   *
   * @return The updateStrategy.
   */
  java.lang.String getUpdateStrategy();

  /**
   *
   *
   * <pre>
   * The update strategy determines the update/delete semantics for this peering connection.
   * Check the UpdateStrategy enum for the list of possible values.
   * </pre>
   *
   * <code>optional string update_strategy = 6123049;</code>
   *
   * @return The bytes for updateStrategy.
   */
  com.google.protobuf.ByteString getUpdateStrategyBytes();
}
