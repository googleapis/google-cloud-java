/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.compute.v1;

public interface TagsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.Tags)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
   * </pre>
   *
   * <code>optional string fingerprint = 234678500;</code>
   *
   * @return Whether the fingerprint field is set.
   */
  boolean hasFingerprint();
  /**
   *
   *
   * <pre>
   * Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
   * </pre>
   *
   * <code>optional string fingerprint = 234678500;</code>
   *
   * @return The fingerprint.
   */
  java.lang.String getFingerprint();
  /**
   *
   *
   * <pre>
   * Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
   * </pre>
   *
   * <code>optional string fingerprint = 234678500;</code>
   *
   * @return The bytes for fingerprint.
   */
  com.google.protobuf.ByteString getFingerprintBytes();

  /**
   *
   *
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
   * </pre>
   *
   * <code>repeated string items = 100526016;</code>
   *
   * @return A list containing the items.
   */
  java.util.List<java.lang.String> getItemsList();
  /**
   *
   *
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
   * </pre>
   *
   * <code>repeated string items = 100526016;</code>
   *
   * @return The count of items.
   */
  int getItemsCount();
  /**
   *
   *
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
   * </pre>
   *
   * <code>repeated string items = 100526016;</code>
   *
   * @param index The index of the element to return.
   * @return The items at the given index.
   */
  java.lang.String getItems(int index);
  /**
   *
   *
   * <pre>
   * An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
   * </pre>
   *
   * <code>repeated string items = 100526016;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the items at the given index.
   */
  com.google.protobuf.ByteString getItemsBytes(int index);
}
