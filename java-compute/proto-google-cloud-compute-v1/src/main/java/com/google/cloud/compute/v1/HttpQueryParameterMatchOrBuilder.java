/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.compute.v1;

public interface HttpQueryParameterMatchOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.HttpQueryParameterMatch)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch, or regexMatch must be set.
   * </pre>
   *
   * <code>optional string exact_match = 457641093;</code>
   *
   * @return Whether the exactMatch field is set.
   */
  boolean hasExactMatch();
  /**
   *
   *
   * <pre>
   * The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch, or regexMatch must be set.
   * </pre>
   *
   * <code>optional string exact_match = 457641093;</code>
   *
   * @return The exactMatch.
   */
  java.lang.String getExactMatch();
  /**
   *
   *
   * <pre>
   * The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch, or regexMatch must be set.
   * </pre>
   *
   * <code>optional string exact_match = 457641093;</code>
   *
   * @return The bytes for exactMatch.
   */
  com.google.protobuf.ByteString getExactMatchBytes();

  /**
   *
   *
   * <pre>
   * The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   *
   *
   * <pre>
   * The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.
   * </pre>
   *
   * <code>optional string name = 3373707;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch, or regexMatch must be set.
   * </pre>
   *
   * <code>optional bool present_match = 67435841;</code>
   *
   * @return Whether the presentMatch field is set.
   */
  boolean hasPresentMatch();
  /**
   *
   *
   * <pre>
   * Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch, or regexMatch must be set.
   * </pre>
   *
   * <code>optional bool present_match = 67435841;</code>
   *
   * @return The presentMatch.
   */
  boolean getPresentMatch();

  /**
   *
   *
   * <pre>
   * The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For more information about regular expression syntax, see Syntax. Only one of presentMatch, exactMatch, or regexMatch must be set. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
   * </pre>
   *
   * <code>optional string regex_match = 107387853;</code>
   *
   * @return Whether the regexMatch field is set.
   */
  boolean hasRegexMatch();
  /**
   *
   *
   * <pre>
   * The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For more information about regular expression syntax, see Syntax. Only one of presentMatch, exactMatch, or regexMatch must be set. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
   * </pre>
   *
   * <code>optional string regex_match = 107387853;</code>
   *
   * @return The regexMatch.
   */
  java.lang.String getRegexMatch();
  /**
   *
   *
   * <pre>
   * The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For more information about regular expression syntax, see Syntax. Only one of presentMatch, exactMatch, or regexMatch must be set. Regular expressions can only be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
   * </pre>
   *
   * <code>optional string regex_match = 107387853;</code>
   *
   * @return The bytes for regexMatch.
   */
  com.google.protobuf.ByteString getRegexMatchBytes();
}
