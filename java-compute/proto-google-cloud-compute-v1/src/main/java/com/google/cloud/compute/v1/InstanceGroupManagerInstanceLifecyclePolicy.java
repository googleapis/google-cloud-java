/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.compute.v1;

/**
 *
 *
 * <pre>
 * </pre>
 *
 * Protobuf type {@code google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy}
 */
public final class InstanceGroupManagerInstanceLifecyclePolicy
    extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy)
    InstanceGroupManagerInstanceLifecyclePolicyOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use InstanceGroupManagerInstanceLifecyclePolicy.newBuilder() to construct.
  private InstanceGroupManagerInstanceLifecyclePolicy(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private InstanceGroupManagerInstanceLifecyclePolicy() {
    defaultActionOnFailure_ = "";
    forceUpdateOnRepair_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new InstanceGroupManagerInstanceLifecyclePolicy();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_InstanceGroupManagerInstanceLifecyclePolicy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.compute.v1.Compute
        .internal_static_google_cloud_compute_v1_InstanceGroupManagerInstanceLifecyclePolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.class,
            com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.DefaultActionOnFailure}
   */
  public enum DefaultActionOnFailure implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_DEFAULT_ACTION_ON_FAILURE = 0;</code>
     */
    UNDEFINED_DEFAULT_ACTION_ON_FAILURE(0),
    /**
     *
     *
     * <pre>
     * MIG does not repair a failed or an unhealthy VM.
     * </pre>
     *
     * <code>DO_NOTHING = 451307513;</code>
     */
    DO_NOTHING(451307513),
    /**
     *
     *
     * <pre>
     * (Default) MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG.
     * </pre>
     *
     * <code>REPAIR = 266277773;</code>
     */
    REPAIR(266277773),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_DEFAULT_ACTION_ON_FAILURE = 0;</code>
     */
    public static final int UNDEFINED_DEFAULT_ACTION_ON_FAILURE_VALUE = 0;
    /**
     *
     *
     * <pre>
     * MIG does not repair a failed or an unhealthy VM.
     * </pre>
     *
     * <code>DO_NOTHING = 451307513;</code>
     */
    public static final int DO_NOTHING_VALUE = 451307513;
    /**
     *
     *
     * <pre>
     * (Default) MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG.
     * </pre>
     *
     * <code>REPAIR = 266277773;</code>
     */
    public static final int REPAIR_VALUE = 266277773;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DefaultActionOnFailure valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DefaultActionOnFailure forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_DEFAULT_ACTION_ON_FAILURE;
        case 451307513:
          return DO_NOTHING;
        case 266277773:
          return REPAIR;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DefaultActionOnFailure>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DefaultActionOnFailure>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DefaultActionOnFailure>() {
              public DefaultActionOnFailure findValueByNumber(int number) {
                return DefaultActionOnFailure.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final DefaultActionOnFailure[] VALUES = values();

    public static DefaultActionOnFailure valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DefaultActionOnFailure(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.DefaultActionOnFailure)
  }

  /**
   *
   *
   * <pre>
   * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.ForceUpdateOnRepair}
   */
  public enum ForceUpdateOnRepair implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_FORCE_UPDATE_ON_REPAIR = 0;</code>
     */
    UNDEFINED_FORCE_UPDATE_ON_REPAIR(0),
    /** <code>NO = 2497;</code> */
    NO(2497),
    /** <code>YES = 87751;</code> */
    YES(87751),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A value indicating that the enum field is not set.
     * </pre>
     *
     * <code>UNDEFINED_FORCE_UPDATE_ON_REPAIR = 0;</code>
     */
    public static final int UNDEFINED_FORCE_UPDATE_ON_REPAIR_VALUE = 0;
    /** <code>NO = 2497;</code> */
    public static final int NO_VALUE = 2497;
    /** <code>YES = 87751;</code> */
    public static final int YES_VALUE = 87751;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ForceUpdateOnRepair valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ForceUpdateOnRepair forNumber(int value) {
      switch (value) {
        case 0:
          return UNDEFINED_FORCE_UPDATE_ON_REPAIR;
        case 2497:
          return NO;
        case 87751:
          return YES;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ForceUpdateOnRepair>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ForceUpdateOnRepair>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ForceUpdateOnRepair>() {
              public ForceUpdateOnRepair findValueByNumber(int number) {
                return ForceUpdateOnRepair.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.getDescriptor()
          .getEnumTypes()
          .get(1);
    }

    private static final ForceUpdateOnRepair[] VALUES = values();

    public static ForceUpdateOnRepair valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ForceUpdateOnRepair(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.ForceUpdateOnRepair)
  }

  private int bitField0_;
  public static final int DEFAULT_ACTION_ON_FAILURE_FIELD_NUMBER = 61383253;

  @SuppressWarnings("serial")
  private volatile java.lang.Object defaultActionOnFailure_ = "";
  /**
   *
   *
   * <pre>
   * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
   * Check the DefaultActionOnFailure enum for the list of possible values.
   * </pre>
   *
   * <code>optional string default_action_on_failure = 61383253;</code>
   *
   * @return Whether the defaultActionOnFailure field is set.
   */
  @java.lang.Override
  public boolean hasDefaultActionOnFailure() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
   * Check the DefaultActionOnFailure enum for the list of possible values.
   * </pre>
   *
   * <code>optional string default_action_on_failure = 61383253;</code>
   *
   * @return The defaultActionOnFailure.
   */
  @java.lang.Override
  public java.lang.String getDefaultActionOnFailure() {
    java.lang.Object ref = defaultActionOnFailure_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      defaultActionOnFailure_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
   * Check the DefaultActionOnFailure enum for the list of possible values.
   * </pre>
   *
   * <code>optional string default_action_on_failure = 61383253;</code>
   *
   * @return The bytes for defaultActionOnFailure.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDefaultActionOnFailureBytes() {
    java.lang.Object ref = defaultActionOnFailure_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      defaultActionOnFailure_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FORCE_UPDATE_ON_REPAIR_FIELD_NUMBER = 356302027;

  @SuppressWarnings("serial")
  private volatile java.lang.Object forceUpdateOnRepair_ = "";
  /**
   *
   *
   * <pre>
   * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
   * Check the ForceUpdateOnRepair enum for the list of possible values.
   * </pre>
   *
   * <code>optional string force_update_on_repair = 356302027;</code>
   *
   * @return Whether the forceUpdateOnRepair field is set.
   */
  @java.lang.Override
  public boolean hasForceUpdateOnRepair() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
   * Check the ForceUpdateOnRepair enum for the list of possible values.
   * </pre>
   *
   * <code>optional string force_update_on_repair = 356302027;</code>
   *
   * @return The forceUpdateOnRepair.
   */
  @java.lang.Override
  public java.lang.String getForceUpdateOnRepair() {
    java.lang.Object ref = forceUpdateOnRepair_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      forceUpdateOnRepair_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
   * Check the ForceUpdateOnRepair enum for the list of possible values.
   * </pre>
   *
   * <code>optional string force_update_on_repair = 356302027;</code>
   *
   * @return The bytes for forceUpdateOnRepair.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getForceUpdateOnRepairBytes() {
    java.lang.Object ref = forceUpdateOnRepair_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      forceUpdateOnRepair_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 61383253, defaultActionOnFailure_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 356302027, forceUpdateOnRepair_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(
              61383253, defaultActionOnFailure_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(356302027, forceUpdateOnRepair_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy)) {
      return super.equals(obj);
    }
    com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy other =
        (com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy) obj;

    if (hasDefaultActionOnFailure() != other.hasDefaultActionOnFailure()) return false;
    if (hasDefaultActionOnFailure()) {
      if (!getDefaultActionOnFailure().equals(other.getDefaultActionOnFailure())) return false;
    }
    if (hasForceUpdateOnRepair() != other.hasForceUpdateOnRepair()) return false;
    if (hasForceUpdateOnRepair()) {
      if (!getForceUpdateOnRepair().equals(other.getForceUpdateOnRepair())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDefaultActionOnFailure()) {
      hash = (37 * hash) + DEFAULT_ACTION_ON_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultActionOnFailure().hashCode();
    }
    if (hasForceUpdateOnRepair()) {
      hash = (37 * hash) + FORCE_UPDATE_ON_REPAIR_FIELD_NUMBER;
      hash = (53 * hash) + getForceUpdateOnRepair().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * </pre>
   *
   * Protobuf type {@code google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy)
      com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_InstanceGroupManagerInstanceLifecyclePolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_InstanceGroupManagerInstanceLifecyclePolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.class,
              com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.Builder
                  .class);
    }

    // Construct using
    // com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      defaultActionOnFailure_ = "";
      forceUpdateOnRepair_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.compute.v1.Compute
          .internal_static_google_cloud_compute_v1_InstanceGroupManagerInstanceLifecyclePolicy_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
        getDefaultInstanceForType() {
      return com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy build() {
      com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy buildPartial() {
      com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy result =
          new com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.defaultActionOnFailure_ = defaultActionOnFailure_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.forceUpdateOnRepair_ = forceUpdateOnRepair_;
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy) {
        return mergeFrom(
            (com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy other) {
      if (other
          == com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
              .getDefaultInstance()) return this;
      if (other.hasDefaultActionOnFailure()) {
        defaultActionOnFailure_ = other.defaultActionOnFailure_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasForceUpdateOnRepair()) {
        forceUpdateOnRepair_ = other.forceUpdateOnRepair_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 491066026:
              {
                defaultActionOnFailure_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 491066026
            case -1444551078:
              {
                forceUpdateOnRepair_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case -1444551078
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object defaultActionOnFailure_ = "";
    /**
     *
     *
     * <pre>
     * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
     * Check the DefaultActionOnFailure enum for the list of possible values.
     * </pre>
     *
     * <code>optional string default_action_on_failure = 61383253;</code>
     *
     * @return Whether the defaultActionOnFailure field is set.
     */
    public boolean hasDefaultActionOnFailure() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
     * Check the DefaultActionOnFailure enum for the list of possible values.
     * </pre>
     *
     * <code>optional string default_action_on_failure = 61383253;</code>
     *
     * @return The defaultActionOnFailure.
     */
    public java.lang.String getDefaultActionOnFailure() {
      java.lang.Object ref = defaultActionOnFailure_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultActionOnFailure_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
     * Check the DefaultActionOnFailure enum for the list of possible values.
     * </pre>
     *
     * <code>optional string default_action_on_failure = 61383253;</code>
     *
     * @return The bytes for defaultActionOnFailure.
     */
    public com.google.protobuf.ByteString getDefaultActionOnFailureBytes() {
      java.lang.Object ref = defaultActionOnFailure_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        defaultActionOnFailure_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
     * Check the DefaultActionOnFailure enum for the list of possible values.
     * </pre>
     *
     * <code>optional string default_action_on_failure = 61383253;</code>
     *
     * @param value The defaultActionOnFailure to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultActionOnFailure(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      defaultActionOnFailure_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
     * Check the DefaultActionOnFailure enum for the list of possible values.
     * </pre>
     *
     * <code>optional string default_action_on_failure = 61383253;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDefaultActionOnFailure() {
      defaultActionOnFailure_ = getDefaultInstance().getDefaultActionOnFailure();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM.
     * Check the DefaultActionOnFailure enum for the list of possible values.
     * </pre>
     *
     * <code>optional string default_action_on_failure = 61383253;</code>
     *
     * @param value The bytes for defaultActionOnFailure to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultActionOnFailureBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      defaultActionOnFailure_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object forceUpdateOnRepair_ = "";
    /**
     *
     *
     * <pre>
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
     * Check the ForceUpdateOnRepair enum for the list of possible values.
     * </pre>
     *
     * <code>optional string force_update_on_repair = 356302027;</code>
     *
     * @return Whether the forceUpdateOnRepair field is set.
     */
    public boolean hasForceUpdateOnRepair() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
     * Check the ForceUpdateOnRepair enum for the list of possible values.
     * </pre>
     *
     * <code>optional string force_update_on_repair = 356302027;</code>
     *
     * @return The forceUpdateOnRepair.
     */
    public java.lang.String getForceUpdateOnRepair() {
      java.lang.Object ref = forceUpdateOnRepair_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        forceUpdateOnRepair_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
     * Check the ForceUpdateOnRepair enum for the list of possible values.
     * </pre>
     *
     * <code>optional string force_update_on_repair = 356302027;</code>
     *
     * @return The bytes for forceUpdateOnRepair.
     */
    public com.google.protobuf.ByteString getForceUpdateOnRepairBytes() {
      java.lang.Object ref = forceUpdateOnRepair_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        forceUpdateOnRepair_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
     * Check the ForceUpdateOnRepair enum for the list of possible values.
     * </pre>
     *
     * <code>optional string force_update_on_repair = 356302027;</code>
     *
     * @param value The forceUpdateOnRepair to set.
     * @return This builder for chaining.
     */
    public Builder setForceUpdateOnRepair(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      forceUpdateOnRepair_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
     * Check the ForceUpdateOnRepair enum for the list of possible values.
     * </pre>
     *
     * <code>optional string force_update_on_repair = 356302027;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearForceUpdateOnRepair() {
      forceUpdateOnRepair_ = getDefaultInstance().getForceUpdateOnRepair();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair.
     * Check the ForceUpdateOnRepair enum for the list of possible values.
     * </pre>
     *
     * <code>optional string force_update_on_repair = 356302027;</code>
     *
     * @param value The bytes for forceUpdateOnRepair to set.
     * @return This builder for chaining.
     */
    public Builder setForceUpdateOnRepairBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      forceUpdateOnRepair_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy)
  private static final com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy();
  }

  public static com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InstanceGroupManagerInstanceLifecyclePolicy>
      PARSER =
          new com.google.protobuf.AbstractParser<InstanceGroupManagerInstanceLifecyclePolicy>() {
            @java.lang.Override
            public InstanceGroupManagerInstanceLifecyclePolicy parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException()
                    .setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

  public static com.google.protobuf.Parser<InstanceGroupManagerInstanceLifecyclePolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InstanceGroupManagerInstanceLifecyclePolicy>
      getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
