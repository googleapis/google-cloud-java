/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/compute/v1/compute.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.compute.v1;

public interface NetworkEndpointGroupPscDataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.compute.v1.NetworkEndpointGroupPscData)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * [Output Only] Address allocated from given subnetwork for PSC. This IP address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in L7 PSC-XLB.
   * </pre>
   *
   * <code>optional string consumer_psc_address = 452646572;</code>
   *
   * @return Whether the consumerPscAddress field is set.
   */
  boolean hasConsumerPscAddress();
  /**
   *
   *
   * <pre>
   * [Output Only] Address allocated from given subnetwork for PSC. This IP address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in L7 PSC-XLB.
   * </pre>
   *
   * <code>optional string consumer_psc_address = 452646572;</code>
   *
   * @return The consumerPscAddress.
   */
  java.lang.String getConsumerPscAddress();
  /**
   *
   *
   * <pre>
   * [Output Only] Address allocated from given subnetwork for PSC. This IP address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in L7 PSC-XLB.
   * </pre>
   *
   * <code>optional string consumer_psc_address = 452646572;</code>
   *
   * @return The bytes for consumerPscAddress.
   */
  com.google.protobuf.ByteString getConsumerPscAddressBytes();

  /**
   *
   *
   * <pre>
   * The psc producer port is used to connect PSC NEG with specific port on the PSC Producer side; should only be used for the PRIVATE_SERVICE_CONNECT NEG type
   * </pre>
   *
   * <code>optional int32 producer_port = 410021134;</code>
   *
   * @return Whether the producerPort field is set.
   */
  boolean hasProducerPort();
  /**
   *
   *
   * <pre>
   * The psc producer port is used to connect PSC NEG with specific port on the PSC Producer side; should only be used for the PRIVATE_SERVICE_CONNECT NEG type
   * </pre>
   *
   * <code>optional int32 producer_port = 410021134;</code>
   *
   * @return The producerPort.
   */
  int getProducerPort();

  /**
   *
   *
   * <pre>
   * [Output Only] The PSC connection id of the PSC Network Endpoint Group Consumer.
   * </pre>
   *
   * <code>optional uint64 psc_connection_id = 292082397;</code>
   *
   * @return Whether the pscConnectionId field is set.
   */
  boolean hasPscConnectionId();
  /**
   *
   *
   * <pre>
   * [Output Only] The PSC connection id of the PSC Network Endpoint Group Consumer.
   * </pre>
   *
   * <code>optional uint64 psc_connection_id = 292082397;</code>
   *
   * @return The pscConnectionId.
   */
  long getPscConnectionId();

  /**
   *
   *
   * <pre>
   * [Output Only] The connection status of the PSC Forwarding Rule.
   * Check the PscConnectionStatus enum for the list of possible values.
   * </pre>
   *
   * <code>optional string psc_connection_status = 184149172;</code>
   *
   * @return Whether the pscConnectionStatus field is set.
   */
  boolean hasPscConnectionStatus();
  /**
   *
   *
   * <pre>
   * [Output Only] The connection status of the PSC Forwarding Rule.
   * Check the PscConnectionStatus enum for the list of possible values.
   * </pre>
   *
   * <code>optional string psc_connection_status = 184149172;</code>
   *
   * @return The pscConnectionStatus.
   */
  java.lang.String getPscConnectionStatus();
  /**
   *
   *
   * <pre>
   * [Output Only] The connection status of the PSC Forwarding Rule.
   * Check the PscConnectionStatus enum for the list of possible values.
   * </pre>
   *
   * <code>optional string psc_connection_status = 184149172;</code>
   *
   * @return The bytes for pscConnectionStatus.
   */
  com.google.protobuf.ByteString getPscConnectionStatusBytes();
}
