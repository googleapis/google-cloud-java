/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/policycontroller/v1beta/policycontroller.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkehub.policycontroller.v1beta;

/**
 *
 *
 * <pre>
 * **Policy Controller**: State for a single cluster.
 * </pre>
 *
 * Protobuf type {@code google.cloud.gkehub.policycontroller.v1beta.MembershipState}
 */
public final class MembershipState extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gkehub.policycontroller.v1beta.MembershipState)
    MembershipStateOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use MembershipState.newBuilder() to construct.
  private MembershipState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private MembershipState() {
    state_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new MembershipState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
        .internal_static_google_cloud_gkehub_policycontroller_v1beta_MembershipState_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 3:
        return internalGetComponentStates();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
        .internal_static_google_cloud_gkehub_policycontroller_v1beta_MembershipState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.class,
            com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The set of states Policy Controller can exist in.
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState}
   */
  public enum LifecycleState implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * The lifecycle state is unspecified.
     * </pre>
     *
     * <code>LIFECYCLE_STATE_UNSPECIFIED = 0;</code>
     */
    LIFECYCLE_STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The PC does not exist on the given cluster, and no k8s resources of any
     * type that are associated with the PC should exist there. The cluster
     * does not possess a membership with the PCH.
     * </pre>
     *
     * <code>NOT_INSTALLED = 1;</code>
     */
    NOT_INSTALLED(1),
    /**
     *
     *
     * <pre>
     * The PCH possesses a Membership, however the PC is not fully installed
     * on the cluster.
     * In this state the hub can be expected to be taking actions to
     * install the PC on the cluster.
     * </pre>
     *
     * <code>INSTALLING = 2;</code>
     */
    INSTALLING(2),
    /**
     *
     *
     * <pre>
     * The PC is fully installed on the cluster and in an operational mode.
     * In this state PCH will be reconciling state with the PC, and
     * the PC will be performing it's operational tasks per that software.
     * Entering a READY state requires that the hub has confirmed the PC is
     * installed and its pods are operational with the version of
     * the PC the PCH expects.
     * </pre>
     *
     * <code>ACTIVE = 3;</code>
     */
    ACTIVE(3),
    /**
     *
     *
     * <pre>
     * The PC is fully installed, but in the process of changing the
     * configuration (including changing the version of PC either up and down,
     * or modifying the manifests of PC) of the resources running on the
     * cluster. The PCH has a Membership, is aware of the version the cluster
     * should be running in, but has not confirmed for itself that the PC is
     * running with that version.
     * </pre>
     *
     * <code>UPDATING = 4;</code>
     */
    UPDATING(4),
    /**
     *
     *
     * <pre>
     * The PC may have resources on the cluster,
     * but the PCH wishes to remove the Membership.
     * The Membership still exists.
     * </pre>
     *
     * <code>DECOMMISSIONING = 5;</code>
     */
    DECOMMISSIONING(5),
    /**
     *
     *
     * <pre>
     * The PC is not operational, and the PCH is unable to act to make it
     * operational.
     * Entering a CLUSTER_ERROR state happens automatically when the PCH
     * determines that a PC installed on the cluster is non-operative or
     * that the cluster does not meet requirements set for the PCH to
     * administer the cluster but has nevertheless been given an instruction to
     * do so (such as 'install').
     * </pre>
     *
     * <code>CLUSTER_ERROR = 6;</code>
     */
    CLUSTER_ERROR(6),
    /**
     *
     *
     * <pre>
     * In this state, the PC may still be operational,
     * and only the PCH is unable to act.
     * The hub should not issue instructions to change the PC state,
     * or otherwise interfere with the on-cluster resources.
     * Entering a HUB_ERROR state happens automatically when the PCH determines
     * the hub is in an unhealthy state and it wishes to 'take hands off' to
     * avoid corrupting the PC or other data.
     * </pre>
     *
     * <code>HUB_ERROR = 7;</code>
     */
    HUB_ERROR(7),
    /**
     *
     *
     * <pre>
     * Policy Controller (PC) is installed but suspended. This means that the
     * policies are not enforced, but violations are still recorded (through
     * audit).
     * </pre>
     *
     * <code>SUSPENDED = 8;</code>
     */
    SUSPENDED(8),
    /**
     *
     *
     * <pre>
     * PoCo Hub is not taking any action to reconcile cluster objects.  Changes
     * to those objects will not be overwritten by PoCo Hub.
     * </pre>
     *
     * <code>DETACHED = 9;</code>
     */
    DETACHED(9),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * The lifecycle state is unspecified.
     * </pre>
     *
     * <code>LIFECYCLE_STATE_UNSPECIFIED = 0;</code>
     */
    public static final int LIFECYCLE_STATE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The PC does not exist on the given cluster, and no k8s resources of any
     * type that are associated with the PC should exist there. The cluster
     * does not possess a membership with the PCH.
     * </pre>
     *
     * <code>NOT_INSTALLED = 1;</code>
     */
    public static final int NOT_INSTALLED_VALUE = 1;
    /**
     *
     *
     * <pre>
     * The PCH possesses a Membership, however the PC is not fully installed
     * on the cluster.
     * In this state the hub can be expected to be taking actions to
     * install the PC on the cluster.
     * </pre>
     *
     * <code>INSTALLING = 2;</code>
     */
    public static final int INSTALLING_VALUE = 2;
    /**
     *
     *
     * <pre>
     * The PC is fully installed on the cluster and in an operational mode.
     * In this state PCH will be reconciling state with the PC, and
     * the PC will be performing it's operational tasks per that software.
     * Entering a READY state requires that the hub has confirmed the PC is
     * installed and its pods are operational with the version of
     * the PC the PCH expects.
     * </pre>
     *
     * <code>ACTIVE = 3;</code>
     */
    public static final int ACTIVE_VALUE = 3;
    /**
     *
     *
     * <pre>
     * The PC is fully installed, but in the process of changing the
     * configuration (including changing the version of PC either up and down,
     * or modifying the manifests of PC) of the resources running on the
     * cluster. The PCH has a Membership, is aware of the version the cluster
     * should be running in, but has not confirmed for itself that the PC is
     * running with that version.
     * </pre>
     *
     * <code>UPDATING = 4;</code>
     */
    public static final int UPDATING_VALUE = 4;
    /**
     *
     *
     * <pre>
     * The PC may have resources on the cluster,
     * but the PCH wishes to remove the Membership.
     * The Membership still exists.
     * </pre>
     *
     * <code>DECOMMISSIONING = 5;</code>
     */
    public static final int DECOMMISSIONING_VALUE = 5;
    /**
     *
     *
     * <pre>
     * The PC is not operational, and the PCH is unable to act to make it
     * operational.
     * Entering a CLUSTER_ERROR state happens automatically when the PCH
     * determines that a PC installed on the cluster is non-operative or
     * that the cluster does not meet requirements set for the PCH to
     * administer the cluster but has nevertheless been given an instruction to
     * do so (such as 'install').
     * </pre>
     *
     * <code>CLUSTER_ERROR = 6;</code>
     */
    public static final int CLUSTER_ERROR_VALUE = 6;
    /**
     *
     *
     * <pre>
     * In this state, the PC may still be operational,
     * and only the PCH is unable to act.
     * The hub should not issue instructions to change the PC state,
     * or otherwise interfere with the on-cluster resources.
     * Entering a HUB_ERROR state happens automatically when the PCH determines
     * the hub is in an unhealthy state and it wishes to 'take hands off' to
     * avoid corrupting the PC or other data.
     * </pre>
     *
     * <code>HUB_ERROR = 7;</code>
     */
    public static final int HUB_ERROR_VALUE = 7;
    /**
     *
     *
     * <pre>
     * Policy Controller (PC) is installed but suspended. This means that the
     * policies are not enforced, but violations are still recorded (through
     * audit).
     * </pre>
     *
     * <code>SUSPENDED = 8;</code>
     */
    public static final int SUSPENDED_VALUE = 8;
    /**
     *
     *
     * <pre>
     * PoCo Hub is not taking any action to reconcile cluster objects.  Changes
     * to those objects will not be overwritten by PoCo Hub.
     * </pre>
     *
     * <code>DETACHED = 9;</code>
     */
    public static final int DETACHED_VALUE = 9;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LifecycleState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LifecycleState forNumber(int value) {
      switch (value) {
        case 0:
          return LIFECYCLE_STATE_UNSPECIFIED;
        case 1:
          return NOT_INSTALLED;
        case 2:
          return INSTALLING;
        case 3:
          return ACTIVE;
        case 4:
          return UPDATING;
        case 5:
          return DECOMMISSIONING;
        case 6:
          return CLUSTER_ERROR;
        case 7:
          return HUB_ERROR;
        case 8:
          return SUSPENDED;
        case 9:
          return DETACHED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LifecycleState> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<LifecycleState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LifecycleState>() {
          public LifecycleState findValueByNumber(int number) {
            return LifecycleState.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final LifecycleState[] VALUES = values();

    public static LifecycleState valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LifecycleState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState)
  }

  private int bitField0_;
  public static final int COMPONENT_STATES_FIELD_NUMBER = 3;

  private static final class ComponentStatesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
                    newDefaultInstance(
                        com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
                            .internal_static_google_cloud_gkehub_policycontroller_v1beta_MembershipState_ComponentStatesEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
                            .getDefaultInstance());
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      componentStates_;

  private com.google.protobuf.MapField<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      internalGetComponentStates() {
    if (componentStates_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ComponentStatesDefaultEntryHolder.defaultEntry);
    }
    return componentStates_;
  }

  public int getComponentStatesCount() {
    return internalGetComponentStates().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * Currently these include (also serving as map keys):
   * 1. "admission"
   * 2. "audit"
   * 3. "mutation"
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
   * </code>
   */
  @java.lang.Override
  public boolean containsComponentStates(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetComponentStates().getMap().containsKey(key);
  }
  /** Use {@link #getComponentStatesMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      getComponentStates() {
    return getComponentStatesMap();
  }
  /**
   *
   *
   * <pre>
   * Currently these include (also serving as map keys):
   * 1. "admission"
   * 2. "audit"
   * 3. "mutation"
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
   * </code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      getComponentStatesMap() {
    return internalGetComponentStates().getMap();
  }
  /**
   *
   *
   * <pre>
   * Currently these include (also serving as map keys):
   * 1. "admission"
   * 2. "audit"
   * 3. "mutation"
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
   * </code>
   */
  @java.lang.Override
  public /* nullable */ com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
      getComponentStatesOrDefault(
          java.lang.String key,
          /* nullable */
          com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        map = internalGetComponentStates().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * Currently these include (also serving as map keys):
   * 1. "admission"
   * 2. "audit"
   * 3. "mutation"
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getComponentStatesOrThrow(
      java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        map = internalGetComponentStates().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int STATE_FIELD_NUMBER = 4;
  private int state_ = 0;
  /**
   *
   *
   * <pre>
   * The overall Policy Controller lifecycle state observed by the Hub Feature
   * controller.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }
  /**
   *
   *
   * <pre>
   * The overall Policy Controller lifecycle state observed by the Hub Feature
   * controller.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
   * </code>
   *
   * @return The state.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState getState() {
    com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState result =
        com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState.forNumber(
            state_);
    return result == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState
            .UNRECOGNIZED
        : result;
  }

  public static final int POLICY_CONTENT_STATE_FIELD_NUMBER = 6;
  private com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policyContentState_;
  /**
   *
   *
   * <pre>
   * The overall content state observed by the Hub Feature controller.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
   * </code>
   *
   * @return Whether the policyContentState field is set.
   */
  @java.lang.Override
  public boolean hasPolicyContentState() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The overall content state observed by the Hub Feature controller.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
   * </code>
   *
   * @return The policyContentState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
      getPolicyContentState() {
    return policyContentState_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.getDefaultInstance()
        : policyContentState_;
  }
  /**
   *
   *
   * <pre>
   * The overall content state observed by the Hub Feature controller.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentStateOrBuilder
      getPolicyContentStateOrBuilder() {
    return policyContentState_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.getDefaultInstance()
        : policyContentState_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetComponentStates(), ComponentStatesDefaultEntryHolder.defaultEntry, 3);
    if (state_
        != com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState
            .LIFECYCLE_STATE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(4, state_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(6, getPolicyContentState());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        entry : internalGetComponentStates().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
          componentStates__ =
              ComponentStatesDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, componentStates__);
    }
    if (state_
        != com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState
            .LIFECYCLE_STATE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, state_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getPolicyContentState());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gkehub.policycontroller.v1beta.MembershipState)) {
      return super.equals(obj);
    }
    com.google.cloud.gkehub.policycontroller.v1beta.MembershipState other =
        (com.google.cloud.gkehub.policycontroller.v1beta.MembershipState) obj;

    if (!internalGetComponentStates().equals(other.internalGetComponentStates())) return false;
    if (state_ != other.state_) return false;
    if (hasPolicyContentState() != other.hasPolicyContentState()) return false;
    if (hasPolicyContentState()) {
      if (!getPolicyContentState().equals(other.getPolicyContentState())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetComponentStates().getMap().isEmpty()) {
      hash = (37 * hash) + COMPONENT_STATES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetComponentStates().hashCode();
    }
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    if (hasPolicyContentState()) {
      hash = (37 * hash) + POLICY_CONTENT_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getPolicyContentState().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.gkehub.policycontroller.v1beta.MembershipState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * **Policy Controller**: State for a single cluster.
   * </pre>
   *
   * Protobuf type {@code google.cloud.gkehub.policycontroller.v1beta.MembershipState}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gkehub.policycontroller.v1beta.MembershipState)
      com.google.cloud.gkehub.policycontroller.v1beta.MembershipStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_MembershipState_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 3:
          return internalGetComponentStates();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableComponentStates();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_MembershipState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.class,
              com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.Builder.class);
    }

    // Construct using com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getPolicyContentStateFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableComponentStates().clear();
      state_ = 0;
      policyContentState_ = null;
      if (policyContentStateBuilder_ != null) {
        policyContentStateBuilder_.dispose();
        policyContentStateBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_MembershipState_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.MembershipState
        getDefaultInstanceForType() {
      return com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.MembershipState build() {
      com.google.cloud.gkehub.policycontroller.v1beta.MembershipState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.MembershipState buildPartial() {
      com.google.cloud.gkehub.policycontroller.v1beta.MembershipState result =
          new com.google.cloud.gkehub.policycontroller.v1beta.MembershipState(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.gkehub.policycontroller.v1beta.MembershipState result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.componentStates_ =
            internalGetComponentStates().build(ComponentStatesDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.state_ = state_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.policyContentState_ =
            policyContentStateBuilder_ == null
                ? policyContentState_
                : policyContentStateBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gkehub.policycontroller.v1beta.MembershipState) {
        return mergeFrom((com.google.cloud.gkehub.policycontroller.v1beta.MembershipState) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.gkehub.policycontroller.v1beta.MembershipState other) {
      if (other
          == com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.getDefaultInstance())
        return this;
      internalGetMutableComponentStates().mergeFrom(other.internalGetComponentStates());
      bitField0_ |= 0x00000001;
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (other.hasPolicyContentState()) {
        mergePolicyContentState(other.getPolicyContentState());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
                    componentStates__ =
                        input.readMessage(
                            ComponentStatesDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableComponentStates()
                    .ensureBuilderMap()
                    .put(componentStates__.getKey(), componentStates__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 26
            case 32:
              {
                state_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 32
            case 50:
              {
                input.readMessage(
                    getPolicyContentStateFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 50
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private static final class ComponentStatesConverter
        implements com.google.protobuf.MapFieldBuilder.Converter<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState> {
      @java.lang.Override
      public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState build(
          com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder val) {
        if (val instanceof com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) {
          return (com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) val;
        }
        return ((com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder) val)
            .build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<
              java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
          defaultEntry() {
        return ComponentStatesDefaultEntryHolder.defaultEntry;
      }
    };

    private static final ComponentStatesConverter componentStatesConverter =
        new ComponentStatesConverter();

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder>
        componentStates_;

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder>
        internalGetComponentStates() {
      if (componentStates_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(componentStatesConverter);
      }
      return componentStates_;
    }

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder>
        internalGetMutableComponentStates() {
      if (componentStates_ == null) {
        componentStates_ = new com.google.protobuf.MapFieldBuilder<>(componentStatesConverter);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return componentStates_;
    }

    public int getComponentStatesCount() {
      return internalGetComponentStates().ensureBuilderMap().size();
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    @java.lang.Override
    public boolean containsComponentStates(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetComponentStates().ensureBuilderMap().containsKey(key);
    }
    /** Use {@link #getComponentStatesMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        getComponentStates() {
      return getComponentStatesMap();
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        getComponentStatesMap() {
      return internalGetComponentStates().getImmutableMap();
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    @java.lang.Override
    public /* nullable */ com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
        getComponentStatesOrDefault(
            java.lang.String key,
            /* nullable */
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
          map = internalGetMutableComponentStates().ensureBuilderMap();
      return map.containsKey(key) ? componentStatesConverter.build(map.get(key)) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getComponentStatesOrThrow(
        java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
          map = internalGetMutableComponentStates().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return componentStatesConverter.build(map.get(key));
    }

    public Builder clearComponentStates() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableComponentStates().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    public Builder removeComponentStates(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableComponentStates().ensureBuilderMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        getMutableComponentStates() {
      bitField0_ |= 0x00000001;
      return internalGetMutableComponentStates().ensureMessageMap();
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    public Builder putComponentStates(
        java.lang.String key,
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableComponentStates().ensureBuilderMap().put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    public Builder putAllComponentStates(
        java.util.Map<
                java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
            values) {
      for (java.util.Map.Entry<
              java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
          e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableComponentStates().ensureBuilderMap().putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Currently these include (also serving as map keys):
     * 1. "admission"
     * 2. "audit"
     * 3. "mutation"
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; component_states = 3;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder
        putComponentStatesBuilderIfAbsent(java.lang.String key) {
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
          builderMap = internalGetMutableComponentStates().ensureBuilderMap();
      com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder entry =
          builderMap.get(key);
      if (entry == null) {
        entry = com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) {
        entry =
            ((com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder) entry;
    }

    private int state_ = 0;
    /**
     *
     *
     * <pre>
     * The overall Policy Controller lifecycle state observed by the Hub Feature
     * controller.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }
    /**
     *
     *
     * <pre>
     * The overall Policy Controller lifecycle state observed by the Hub Feature
     * controller.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
     * </code>
     *
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      state_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The overall Policy Controller lifecycle state observed by the Hub Feature
     * controller.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
     * </code>
     *
     * @return The state.
     */
    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState
        getState() {
      com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState result =
          com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState.forNumber(
              state_);
      return result == null
          ? com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState
              .UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The overall Policy Controller lifecycle state observed by the Hub Feature
     * controller.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
     * </code>
     *
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(
        com.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The overall Policy Controller lifecycle state observed by the Hub Feature
     * controller.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.MembershipState.LifecycleState state = 4;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000002);
      state_ = 0;
      onChanged();
      return this;
    }

    private com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policyContentState_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentStateOrBuilder>
        policyContentStateBuilder_;
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     *
     * @return Whether the policyContentState field is set.
     */
    public boolean hasPolicyContentState() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     *
     * @return The policyContentState.
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
        getPolicyContentState() {
      if (policyContentStateBuilder_ == null) {
        return policyContentState_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
                .getDefaultInstance()
            : policyContentState_;
      } else {
        return policyContentStateBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    public Builder setPolicyContentState(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState value) {
      if (policyContentStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policyContentState_ = value;
      } else {
        policyContentStateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    public Builder setPolicyContentState(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder
            builderForValue) {
      if (policyContentStateBuilder_ == null) {
        policyContentState_ = builderForValue.build();
      } else {
        policyContentStateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    public Builder mergePolicyContentState(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState value) {
      if (policyContentStateBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && policyContentState_ != null
            && policyContentState_
                != com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
                    .getDefaultInstance()) {
          getPolicyContentStateBuilder().mergeFrom(value);
        } else {
          policyContentState_ = value;
        }
      } else {
        policyContentStateBuilder_.mergeFrom(value);
      }
      if (policyContentState_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    public Builder clearPolicyContentState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      policyContentState_ = null;
      if (policyContentStateBuilder_ != null) {
        policyContentStateBuilder_.dispose();
        policyContentStateBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder
        getPolicyContentStateBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getPolicyContentStateFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentStateOrBuilder
        getPolicyContentStateOrBuilder() {
      if (policyContentStateBuilder_ != null) {
        return policyContentStateBuilder_.getMessageOrBuilder();
      } else {
        return policyContentState_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
                .getDefaultInstance()
            : policyContentState_;
      }
    }
    /**
     *
     *
     * <pre>
     * The overall content state observed by the Hub Feature controller.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.PolicyContentState policy_content_state = 6;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentStateOrBuilder>
        getPolicyContentStateFieldBuilder() {
      if (policyContentStateBuilder_ == null) {
        policyContentStateBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState,
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder,
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentStateOrBuilder>(
                getPolicyContentState(), getParentForChildren(), isClean());
        policyContentState_ = null;
      }
      return policyContentStateBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gkehub.policycontroller.v1beta.MembershipState)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gkehub.policycontroller.v1beta.MembershipState)
  private static final com.google.cloud.gkehub.policycontroller.v1beta.MembershipState
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gkehub.policycontroller.v1beta.MembershipState();
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.MembershipState
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MembershipState> PARSER =
      new com.google.protobuf.AbstractParser<MembershipState>() {
        @java.lang.Override
        public MembershipState parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<MembershipState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MembershipState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.MembershipState
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
