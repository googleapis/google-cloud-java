/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/policycontroller/v1beta/policycontroller.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkehub.policycontroller.v1beta;

/**
 *
 *
 * <pre>
 * The state of the policy controller policy content
 * </pre>
 *
 * Protobuf type {@code google.cloud.gkehub.policycontroller.v1beta.PolicyContentState}
 */
public final class PolicyContentState extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gkehub.policycontroller.v1beta.PolicyContentState)
    PolicyContentStateOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use PolicyContentState.newBuilder() to construct.
  private PolicyContentState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private PolicyContentState() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new PolicyContentState();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
        .internal_static_google_cloud_gkehub_policycontroller_v1beta_PolicyContentState_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 2:
        return internalGetBundleStates();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
        .internal_static_google_cloud_gkehub_policycontroller_v1beta_PolicyContentState_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.class,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder.class);
  }

  private int bitField0_;
  public static final int TEMPLATE_LIBRARY_STATE_FIELD_NUMBER = 1;
  private com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState templateLibraryState_;
  /**
   *
   *
   * <pre>
   * The state of the template library
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
   * </code>
   *
   * @return Whether the templateLibraryState field is set.
   */
  @java.lang.Override
  public boolean hasTemplateLibraryState() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The state of the template library
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
   * </code>
   *
   * @return The templateLibraryState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getTemplateLibraryState() {
    return templateLibraryState_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
        : templateLibraryState_;
  }
  /**
   *
   *
   * <pre>
   * The state of the template library
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder
      getTemplateLibraryStateOrBuilder() {
    return templateLibraryState_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
        : templateLibraryState_;
  }

  public static final int BUNDLE_STATES_FIELD_NUMBER = 2;

  private static final class BundleStatesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
                    newDefaultInstance(
                        com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
                            .internal_static_google_cloud_gkehub_policycontroller_v1beta_PolicyContentState_BundleStatesEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
                            .getDefaultInstance());
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      bundleStates_;

  private com.google.protobuf.MapField<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      internalGetBundleStates() {
    if (bundleStates_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          BundleStatesDefaultEntryHolder.defaultEntry);
    }
    return bundleStates_;
  }

  public int getBundleStatesCount() {
    return internalGetBundleStates().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  @java.lang.Override
  public boolean containsBundleStates(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetBundleStates().getMap().containsKey(key);
  }
  /** Use {@link #getBundleStatesMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      getBundleStates() {
    return getBundleStatesMap();
  }
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      getBundleStatesMap() {
    return internalGetBundleStates().getMap();
  }
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  @java.lang.Override
  public /* nullable */ com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
      getBundleStatesOrDefault(
          java.lang.String key,
          /* nullable */
          com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        map = internalGetBundleStates().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getBundleStatesOrThrow(
      java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        map = internalGetBundleStates().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int REFERENTIAL_SYNC_CONFIG_STATE_FIELD_NUMBER = 3;
  private com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
      referentialSyncConfigState_;
  /**
   *
   *
   * <pre>
   * The state of the referential data sync configuration.  This could
   * represent the state of either the syncSet object(s) or the config
   * object, depending on the version of PoCo configured by the user.
   * </pre>
   *
   * <code>
   * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
   * </code>
   *
   * @return Whether the referentialSyncConfigState field is set.
   */
  @java.lang.Override
  public boolean hasReferentialSyncConfigState() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * The state of the referential data sync configuration.  This could
   * represent the state of either the syncSet object(s) or the config
   * object, depending on the version of PoCo configured by the user.
   * </pre>
   *
   * <code>
   * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
   * </code>
   *
   * @return The referentialSyncConfigState.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
      getReferentialSyncConfigState() {
    return referentialSyncConfigState_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
        : referentialSyncConfigState_;
  }
  /**
   *
   *
   * <pre>
   * The state of the referential data sync configuration.  This could
   * represent the state of either the syncSet object(s) or the config
   * object, depending on the version of PoCo configured by the user.
   * </pre>
   *
   * <code>
   * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder
      getReferentialSyncConfigStateOrBuilder() {
    return referentialSyncConfigState_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
        : referentialSyncConfigState_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getTemplateLibraryState());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetBundleStates(), BundleStatesDefaultEntryHolder.defaultEntry, 2);
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getReferentialSyncConfigState());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(1, getTemplateLibraryState());
    }
    for (java.util.Map.Entry<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        entry : internalGetBundleStates().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
          bundleStates__ =
              BundleStatesDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, bundleStates__);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, getReferentialSyncConfigState());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState)) {
      return super.equals(obj);
    }
    com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState other =
        (com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState) obj;

    if (hasTemplateLibraryState() != other.hasTemplateLibraryState()) return false;
    if (hasTemplateLibraryState()) {
      if (!getTemplateLibraryState().equals(other.getTemplateLibraryState())) return false;
    }
    if (!internalGetBundleStates().equals(other.internalGetBundleStates())) return false;
    if (hasReferentialSyncConfigState() != other.hasReferentialSyncConfigState()) return false;
    if (hasReferentialSyncConfigState()) {
      if (!getReferentialSyncConfigState().equals(other.getReferentialSyncConfigState()))
        return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTemplateLibraryState()) {
      hash = (37 * hash) + TEMPLATE_LIBRARY_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getTemplateLibraryState().hashCode();
    }
    if (!internalGetBundleStates().getMap().isEmpty()) {
      hash = (37 * hash) + BUNDLE_STATES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetBundleStates().hashCode();
    }
    if (hasReferentialSyncConfigState()) {
      hash = (37 * hash) + REFERENTIAL_SYNC_CONFIG_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getReferentialSyncConfigState().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The state of the policy controller policy content
   * </pre>
   *
   * Protobuf type {@code google.cloud.gkehub.policycontroller.v1beta.PolicyContentState}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gkehub.policycontroller.v1beta.PolicyContentState)
      com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentStateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_PolicyContentState_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetBundleStates();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableBundleStates();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_PolicyContentState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.class,
              com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.Builder.class);
    }

    // Construct using
    // com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getTemplateLibraryStateFieldBuilder();
        getReferentialSyncConfigStateFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      templateLibraryState_ = null;
      if (templateLibraryStateBuilder_ != null) {
        templateLibraryStateBuilder_.dispose();
        templateLibraryStateBuilder_ = null;
      }
      internalGetMutableBundleStates().clear();
      referentialSyncConfigState_ = null;
      if (referentialSyncConfigStateBuilder_ != null) {
        referentialSyncConfigStateBuilder_.dispose();
        referentialSyncConfigStateBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_PolicyContentState_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
        getDefaultInstanceForType() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState build() {
      com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState buildPartial() {
      com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState result =
          new com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.templateLibraryState_ =
            templateLibraryStateBuilder_ == null
                ? templateLibraryState_
                : templateLibraryStateBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.bundleStates_ =
            internalGetBundleStates().build(BundleStatesDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.referentialSyncConfigState_ =
            referentialSyncConfigStateBuilder_ == null
                ? referentialSyncConfigState_
                : referentialSyncConfigStateBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState) {
        return mergeFrom(
            (com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState other) {
      if (other
          == com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
              .getDefaultInstance()) return this;
      if (other.hasTemplateLibraryState()) {
        mergeTemplateLibraryState(other.getTemplateLibraryState());
      }
      internalGetMutableBundleStates().mergeFrom(other.internalGetBundleStates());
      bitField0_ |= 0x00000002;
      if (other.hasReferentialSyncConfigState()) {
        mergeReferentialSyncConfigState(other.getReferentialSyncConfigState());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(
                    getTemplateLibraryStateFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
                    bundleStates__ =
                        input.readMessage(
                            BundleStatesDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableBundleStates()
                    .ensureBuilderMap()
                    .put(bundleStates__.getKey(), bundleStates__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(
                    getReferentialSyncConfigStateFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState templateLibraryState_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
        templateLibraryStateBuilder_;
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     *
     * @return Whether the templateLibraryState field is set.
     */
    public boolean hasTemplateLibraryState() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     *
     * @return The templateLibraryState.
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
        getTemplateLibraryState() {
      if (templateLibraryStateBuilder_ == null) {
        return templateLibraryState_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
            : templateLibraryState_;
      } else {
        return templateLibraryStateBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    public Builder setTemplateLibraryState(
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState value) {
      if (templateLibraryStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        templateLibraryState_ = value;
      } else {
        templateLibraryStateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    public Builder setTemplateLibraryState(
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder builderForValue) {
      if (templateLibraryStateBuilder_ == null) {
        templateLibraryState_ = builderForValue.build();
      } else {
        templateLibraryStateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    public Builder mergeTemplateLibraryState(
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState value) {
      if (templateLibraryStateBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && templateLibraryState_ != null
            && templateLibraryState_
                != com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
                    .getDefaultInstance()) {
          getTemplateLibraryStateBuilder().mergeFrom(value);
        } else {
          templateLibraryState_ = value;
        }
      } else {
        templateLibraryStateBuilder_.mergeFrom(value);
      }
      if (templateLibraryState_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    public Builder clearTemplateLibraryState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      templateLibraryState_ = null;
      if (templateLibraryStateBuilder_ != null) {
        templateLibraryStateBuilder_.dispose();
        templateLibraryStateBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder
        getTemplateLibraryStateBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTemplateLibraryStateFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder
        getTemplateLibraryStateOrBuilder() {
      if (templateLibraryStateBuilder_ != null) {
        return templateLibraryStateBuilder_.getMessageOrBuilder();
      } else {
        return templateLibraryState_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
            : templateLibraryState_;
      }
    }
    /**
     *
     *
     * <pre>
     * The state of the template library
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
        getTemplateLibraryStateFieldBuilder() {
      if (templateLibraryStateBuilder_ == null) {
        templateLibraryStateBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
                com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder,
                com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>(
                getTemplateLibraryState(), getParentForChildren(), isClean());
        templateLibraryState_ = null;
      }
      return templateLibraryStateBuilder_;
    }

    private static final class BundleStatesConverter
        implements com.google.protobuf.MapFieldBuilder.Converter<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState> {
      @java.lang.Override
      public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState build(
          com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder val) {
        if (val instanceof com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) {
          return (com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) val;
        }
        return ((com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder) val)
            .build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<
              java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
          defaultEntry() {
        return BundleStatesDefaultEntryHolder.defaultEntry;
      }
    };

    private static final BundleStatesConverter bundleStatesConverter = new BundleStatesConverter();

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder>
        bundleStates_;

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder>
        internalGetBundleStates() {
      if (bundleStates_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(bundleStatesConverter);
      }
      return bundleStates_;
    }

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder>
        internalGetMutableBundleStates() {
      if (bundleStates_ == null) {
        bundleStates_ = new com.google.protobuf.MapFieldBuilder<>(bundleStatesConverter);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return bundleStates_;
    }

    public int getBundleStatesCount() {
      return internalGetBundleStates().ensureBuilderMap().size();
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    @java.lang.Override
    public boolean containsBundleStates(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetBundleStates().ensureBuilderMap().containsKey(key);
    }
    /** Use {@link #getBundleStatesMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        getBundleStates() {
      return getBundleStatesMap();
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        getBundleStatesMap() {
      return internalGetBundleStates().getImmutableMap();
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    @java.lang.Override
    public /* nullable */ com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
        getBundleStatesOrDefault(
            java.lang.String key,
            /* nullable */
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
          map = internalGetMutableBundleStates().ensureBuilderMap();
      return map.containsKey(key) ? bundleStatesConverter.build(map.get(key)) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getBundleStatesOrThrow(
        java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
          map = internalGetMutableBundleStates().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return bundleStatesConverter.build(map.get(key));
    }

    public Builder clearBundleStates() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableBundleStates().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    public Builder removeBundleStates(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableBundleStates().ensureBuilderMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
        getMutableBundleStates() {
      bitField0_ |= 0x00000002;
      return internalGetMutableBundleStates().ensureMessageMap();
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    public Builder putBundleStates(
        java.lang.String key,
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableBundleStates().ensureBuilderMap().put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    public Builder putAllBundleStates(
        java.util.Map<
                java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
            values) {
      for (java.util.Map.Entry<
              java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
          e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableBundleStates().ensureBuilderMap().putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the any bundles included in the chosen
     * version of the manifest
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder
        putBundleStatesBuilderIfAbsent(java.lang.String key) {
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
          builderMap = internalGetMutableBundleStates().ensureBuilderMap();
      com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder entry =
          builderMap.get(key);
      if (entry == null) {
        entry = com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) {
        entry =
            ((com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder) entry;
    }

    private com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
        referentialSyncConfigState_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
        referentialSyncConfigStateBuilder_;
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     *
     * @return Whether the referentialSyncConfigState field is set.
     */
    public boolean hasReferentialSyncConfigState() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     *
     * @return The referentialSyncConfigState.
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
        getReferentialSyncConfigState() {
      if (referentialSyncConfigStateBuilder_ == null) {
        return referentialSyncConfigState_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
            : referentialSyncConfigState_;
      } else {
        return referentialSyncConfigStateBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    public Builder setReferentialSyncConfigState(
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState value) {
      if (referentialSyncConfigStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        referentialSyncConfigState_ = value;
      } else {
        referentialSyncConfigStateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    public Builder setReferentialSyncConfigState(
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder builderForValue) {
      if (referentialSyncConfigStateBuilder_ == null) {
        referentialSyncConfigState_ = builderForValue.build();
      } else {
        referentialSyncConfigStateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    public Builder mergeReferentialSyncConfigState(
        com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState value) {
      if (referentialSyncConfigStateBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && referentialSyncConfigState_ != null
            && referentialSyncConfigState_
                != com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState
                    .getDefaultInstance()) {
          getReferentialSyncConfigStateBuilder().mergeFrom(value);
        } else {
          referentialSyncConfigState_ = value;
        }
      } else {
        referentialSyncConfigStateBuilder_.mergeFrom(value);
      }
      if (referentialSyncConfigState_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    public Builder clearReferentialSyncConfigState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      referentialSyncConfigState_ = null;
      if (referentialSyncConfigStateBuilder_ != null) {
        referentialSyncConfigStateBuilder_.dispose();
        referentialSyncConfigStateBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder
        getReferentialSyncConfigStateBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getReferentialSyncConfigStateFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder
        getReferentialSyncConfigStateOrBuilder() {
      if (referentialSyncConfigStateBuilder_ != null) {
        return referentialSyncConfigStateBuilder_.getMessageOrBuilder();
      } else {
        return referentialSyncConfigState_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.getDefaultInstance()
            : referentialSyncConfigState_;
      }
    }
    /**
     *
     *
     * <pre>
     * The state of the referential data sync configuration.  This could
     * represent the state of either the syncSet object(s) or the config
     * object, depending on the version of PoCo configured by the user.
     * </pre>
     *
     * <code>
     * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>
        getReferentialSyncConfigStateFieldBuilder() {
      if (referentialSyncConfigStateBuilder_ == null) {
        referentialSyncConfigStateBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState,
                com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState.Builder,
                com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder>(
                getReferentialSyncConfigState(), getParentForChildren(), isClean());
        referentialSyncConfigState_ = null;
      }
      return referentialSyncConfigStateBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gkehub.policycontroller.v1beta.PolicyContentState)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gkehub.policycontroller.v1beta.PolicyContentState)
  private static final com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState();
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PolicyContentState> PARSER =
      new com.google.protobuf.AbstractParser<PolicyContentState>() {
        @java.lang.Override
        public PolicyContentState parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<PolicyContentState> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PolicyContentState> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentState
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
