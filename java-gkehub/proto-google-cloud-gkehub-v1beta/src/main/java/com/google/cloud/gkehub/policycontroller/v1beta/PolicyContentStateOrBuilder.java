/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/policycontroller/v1beta/policycontroller.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkehub.policycontroller.v1beta;

public interface PolicyContentStateOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gkehub.policycontroller.v1beta.PolicyContentState)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The state of the template library
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
   * </code>
   *
   * @return Whether the templateLibraryState field is set.
   */
  boolean hasTemplateLibraryState();
  /**
   *
   *
   * <pre>
   * The state of the template library
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
   * </code>
   *
   * @return The templateLibraryState.
   */
  com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getTemplateLibraryState();
  /**
   *
   *
   * <pre>
   * The state of the template library
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.OnClusterState template_library_state = 1;
   * </code>
   */
  com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder
      getTemplateLibraryStateOrBuilder();

  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  int getBundleStatesCount();
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  boolean containsBundleStates(java.lang.String key);
  /** Use {@link #getBundleStatesMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      getBundleStates();
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  java.util.Map<java.lang.String, com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState>
      getBundleStatesMap();
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  /* nullable */
  com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getBundleStatesOrDefault(
      java.lang.String key,
      /* nullable */
      com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState defaultValue);
  /**
   *
   *
   * <pre>
   * The state of the any bundles included in the chosen
   * version of the manifest
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.OnClusterState&gt; bundle_states = 2;
   * </code>
   */
  com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getBundleStatesOrThrow(
      java.lang.String key);

  /**
   *
   *
   * <pre>
   * The state of the referential data sync configuration.  This could
   * represent the state of either the syncSet object(s) or the config
   * object, depending on the version of PoCo configured by the user.
   * </pre>
   *
   * <code>
   * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
   * </code>
   *
   * @return Whether the referentialSyncConfigState field is set.
   */
  boolean hasReferentialSyncConfigState();
  /**
   *
   *
   * <pre>
   * The state of the referential data sync configuration.  This could
   * represent the state of either the syncSet object(s) or the config
   * object, depending on the version of PoCo configured by the user.
   * </pre>
   *
   * <code>
   * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
   * </code>
   *
   * @return The referentialSyncConfigState.
   */
  com.google.cloud.gkehub.policycontroller.v1beta.OnClusterState getReferentialSyncConfigState();
  /**
   *
   *
   * <pre>
   * The state of the referential data sync configuration.  This could
   * represent the state of either the syncSet object(s) or the config
   * object, depending on the version of PoCo configured by the user.
   * </pre>
   *
   * <code>
   * .google.cloud.gkehub.policycontroller.v1beta.OnClusterState referential_sync_config_state = 3;
   * </code>
   */
  com.google.cloud.gkehub.policycontroller.v1beta.OnClusterStateOrBuilder
      getReferentialSyncConfigStateOrBuilder();
}
