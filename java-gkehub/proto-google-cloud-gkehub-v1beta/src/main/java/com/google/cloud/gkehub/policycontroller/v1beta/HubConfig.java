/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/policycontroller/v1beta/policycontroller.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkehub.policycontroller.v1beta;

/**
 *
 *
 * <pre>
 * Configuration for Policy Controller
 * </pre>
 *
 * Protobuf type {@code google.cloud.gkehub.policycontroller.v1beta.HubConfig}
 */
public final class HubConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gkehub.policycontroller.v1beta.HubConfig)
    HubConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use HubConfig.newBuilder() to construct.
  private HubConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private HubConfig() {
    installSpec_ = 0;
    exemptableNamespaces_ = com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new HubConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
        .internal_static_google_cloud_gkehub_policycontroller_v1beta_HubConfig_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 11:
        return internalGetDeploymentConfigs();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
        .internal_static_google_cloud_gkehub_policycontroller_v1beta_HubConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.class,
            com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The set of installation specs that the Hub Feature controller may
   * actuate.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec}
   */
  public enum InstallSpec implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Spec is unknown.
     * </pre>
     *
     * <code>INSTALL_SPEC_UNSPECIFIED = 0;</code>
     */
    INSTALL_SPEC_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Request to uninstall Policy Controller.
     * </pre>
     *
     * <code>INSTALL_SPEC_NOT_INSTALLED = 1;</code>
     */
    INSTALL_SPEC_NOT_INSTALLED(1),
    /**
     *
     *
     * <pre>
     * Request to install and enable Policy Controller.
     * </pre>
     *
     * <code>INSTALL_SPEC_ENABLED = 2;</code>
     */
    INSTALL_SPEC_ENABLED(2),
    /**
     *
     *
     * <pre>
     * Request to suspend Policy Controller i.e. its webhooks. If Policy
     * Controller is not installed, it will be installed but suspended.
     * </pre>
     *
     * <code>INSTALL_SPEC_SUSPENDED = 3;</code>
     */
    INSTALL_SPEC_SUSPENDED(3),
    /**
     *
     *
     * <pre>
     * Request to stop all reconciliation actions by PoCo Hub controller.
     * This is a breakglass mechanism to stop PoCo Hub from affecting
     * cluster resources.
     * </pre>
     *
     * <code>INSTALL_SPEC_DETACHED = 4;</code>
     */
    INSTALL_SPEC_DETACHED(4),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Spec is unknown.
     * </pre>
     *
     * <code>INSTALL_SPEC_UNSPECIFIED = 0;</code>
     */
    public static final int INSTALL_SPEC_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Request to uninstall Policy Controller.
     * </pre>
     *
     * <code>INSTALL_SPEC_NOT_INSTALLED = 1;</code>
     */
    public static final int INSTALL_SPEC_NOT_INSTALLED_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Request to install and enable Policy Controller.
     * </pre>
     *
     * <code>INSTALL_SPEC_ENABLED = 2;</code>
     */
    public static final int INSTALL_SPEC_ENABLED_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Request to suspend Policy Controller i.e. its webhooks. If Policy
     * Controller is not installed, it will be installed but suspended.
     * </pre>
     *
     * <code>INSTALL_SPEC_SUSPENDED = 3;</code>
     */
    public static final int INSTALL_SPEC_SUSPENDED_VALUE = 3;
    /**
     *
     *
     * <pre>
     * Request to stop all reconciliation actions by PoCo Hub controller.
     * This is a breakglass mechanism to stop PoCo Hub from affecting
     * cluster resources.
     * </pre>
     *
     * <code>INSTALL_SPEC_DETACHED = 4;</code>
     */
    public static final int INSTALL_SPEC_DETACHED_VALUE = 4;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InstallSpec valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static InstallSpec forNumber(int value) {
      switch (value) {
        case 0:
          return INSTALL_SPEC_UNSPECIFIED;
        case 1:
          return INSTALL_SPEC_NOT_INSTALLED;
        case 2:
          return INSTALL_SPEC_ENABLED;
        case 3:
          return INSTALL_SPEC_SUSPENDED;
        case 4:
          return INSTALL_SPEC_DETACHED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InstallSpec> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<InstallSpec> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<InstallSpec>() {
          public InstallSpec findValueByNumber(int number) {
            return InstallSpec.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final InstallSpec[] VALUES = values();

    public static InstallSpec valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InstallSpec(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec)
  }

  private int bitField0_;
  public static final int INSTALL_SPEC_FIELD_NUMBER = 1;
  private int installSpec_ = 0;
  /**
   *
   *
   * <pre>
   * The install_spec represents the intended state specified by the
   * latest request that mutated install_spec in the feature spec,
   * not the lifecycle state of the
   * feature observed by the Hub feature controller
   * that is reported in the feature state.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
   * </code>
   *
   * @return The enum numeric value on the wire for installSpec.
   */
  @java.lang.Override
  public int getInstallSpecValue() {
    return installSpec_;
  }
  /**
   *
   *
   * <pre>
   * The install_spec represents the intended state specified by the
   * latest request that mutated install_spec in the feature spec,
   * not the lifecycle state of the
   * feature observed by the Hub feature controller
   * that is reported in the feature state.
   * </pre>
   *
   * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
   * </code>
   *
   * @return The installSpec.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec getInstallSpec() {
    com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec result =
        com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec.forNumber(
            installSpec_);
    return result == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec.UNRECOGNIZED
        : result;
  }

  public static final int AUDIT_INTERVAL_SECONDS_FIELD_NUMBER = 2;
  private long auditIntervalSeconds_ = 0L;
  /**
   *
   *
   * <pre>
   * Sets the interval for Policy Controller Audit Scans (in seconds).
   * When set to 0, this disables audit functionality altogether.
   * </pre>
   *
   * <code>optional int64 audit_interval_seconds = 2;</code>
   *
   * @return Whether the auditIntervalSeconds field is set.
   */
  @java.lang.Override
  public boolean hasAuditIntervalSeconds() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Sets the interval for Policy Controller Audit Scans (in seconds).
   * When set to 0, this disables audit functionality altogether.
   * </pre>
   *
   * <code>optional int64 audit_interval_seconds = 2;</code>
   *
   * @return The auditIntervalSeconds.
   */
  @java.lang.Override
  public long getAuditIntervalSeconds() {
    return auditIntervalSeconds_;
  }

  public static final int EXEMPTABLE_NAMESPACES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList exemptableNamespaces_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 3;</code>
   *
   * @return A list containing the exemptableNamespaces.
   */
  public com.google.protobuf.ProtocolStringList getExemptableNamespacesList() {
    return exemptableNamespaces_;
  }
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 3;</code>
   *
   * @return The count of exemptableNamespaces.
   */
  public int getExemptableNamespacesCount() {
    return exemptableNamespaces_.size();
  }
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The exemptableNamespaces at the given index.
   */
  public java.lang.String getExemptableNamespaces(int index) {
    return exemptableNamespaces_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 3;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the exemptableNamespaces at the given index.
   */
  public com.google.protobuf.ByteString getExemptableNamespacesBytes(int index) {
    return exemptableNamespaces_.getByteString(index);
  }

  public static final int REFERENTIAL_RULES_ENABLED_FIELD_NUMBER = 4;
  private boolean referentialRulesEnabled_ = false;
  /**
   *
   *
   * <pre>
   * Enables the ability to use Constraint Templates that reference to objects
   * other than the object currently being evaluated.
   * </pre>
   *
   * <code>bool referential_rules_enabled = 4;</code>
   *
   * @return The referentialRulesEnabled.
   */
  @java.lang.Override
  public boolean getReferentialRulesEnabled() {
    return referentialRulesEnabled_;
  }

  public static final int LOG_DENIES_ENABLED_FIELD_NUMBER = 5;
  private boolean logDeniesEnabled_ = false;
  /**
   *
   *
   * <pre>
   * Logs all denies and dry run failures.
   * </pre>
   *
   * <code>bool log_denies_enabled = 5;</code>
   *
   * @return The logDeniesEnabled.
   */
  @java.lang.Override
  public boolean getLogDeniesEnabled() {
    return logDeniesEnabled_;
  }

  public static final int MUTATION_ENABLED_FIELD_NUMBER = 6;
  private boolean mutationEnabled_ = false;
  /**
   *
   *
   * <pre>
   * Enables the ability to mutate resources using Policy Controller.
   * </pre>
   *
   * <code>bool mutation_enabled = 6;</code>
   *
   * @return The mutationEnabled.
   */
  @java.lang.Override
  public boolean getMutationEnabled() {
    return mutationEnabled_;
  }

  public static final int MONITORING_FIELD_NUMBER = 8;
  private com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring_;
  /**
   *
   *
   * <pre>
   * Monitoring specifies the configuration of monitoring.
   * </pre>
   *
   * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
   * </code>
   *
   * @return Whether the monitoring field is set.
   */
  @java.lang.Override
  public boolean hasMonitoring() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Monitoring specifies the configuration of monitoring.
   * </pre>
   *
   * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
   * </code>
   *
   * @return The monitoring.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig getMonitoring() {
    return monitoring_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.getDefaultInstance()
        : monitoring_;
  }
  /**
   *
   *
   * <pre>
   * Monitoring specifies the configuration of monitoring.
   * </pre>
   *
   * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfigOrBuilder
      getMonitoringOrBuilder() {
    return monitoring_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.getDefaultInstance()
        : monitoring_;
  }

  public static final int POLICY_CONTENT_FIELD_NUMBER = 9;
  private com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policyContent_;
  /**
   *
   *
   * <pre>
   * Specifies the desired policy content on the cluster
   * </pre>
   *
   * <code>
   * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
   * </code>
   *
   * @return Whether the policyContent field is set.
   */
  @java.lang.Override
  public boolean hasPolicyContent() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Specifies the desired policy content on the cluster
   * </pre>
   *
   * <code>
   * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
   * </code>
   *
   * @return The policyContent.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec getPolicyContent() {
    return policyContent_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.getDefaultInstance()
        : policyContent_;
  }
  /**
   *
   *
   * <pre>
   * Specifies the desired policy content on the cluster
   * </pre>
   *
   * <code>
   * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpecOrBuilder
      getPolicyContentOrBuilder() {
    return policyContent_ == null
        ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.getDefaultInstance()
        : policyContent_;
  }

  public static final int CONSTRAINT_VIOLATION_LIMIT_FIELD_NUMBER = 10;
  private long constraintViolationLimit_ = 0L;
  /**
   *
   *
   * <pre>
   * The maximum number of audit violations to be stored in a constraint.
   * If not set, the internal default (currently 20) will be used.
   * </pre>
   *
   * <code>optional int64 constraint_violation_limit = 10;</code>
   *
   * @return Whether the constraintViolationLimit field is set.
   */
  @java.lang.Override
  public boolean hasConstraintViolationLimit() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * The maximum number of audit violations to be stored in a constraint.
   * If not set, the internal default (currently 20) will be used.
   * </pre>
   *
   * <code>optional int64 constraint_violation_limit = 10;</code>
   *
   * @return The constraintViolationLimit.
   */
  @java.lang.Override
  public long getConstraintViolationLimit() {
    return constraintViolationLimit_;
  }

  public static final int DEPLOYMENT_CONFIGS_FIELD_NUMBER = 11;

  private static final class DeploymentConfigsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String,
                    com.google.cloud.gkehub.policycontroller.v1beta
                        .PolicyControllerDeploymentConfig>
                    newDefaultInstance(
                        com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
                            .internal_static_google_cloud_gkehub_policycontroller_v1beta_HubConfig_DeploymentConfigsEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        com.google.cloud.gkehub.policycontroller.v1beta
                            .PolicyControllerDeploymentConfig.getDefaultInstance());
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
          java.lang.String,
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
      deploymentConfigs_;

  private com.google.protobuf.MapField<
          java.lang.String,
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
      internalGetDeploymentConfigs() {
    if (deploymentConfigs_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DeploymentConfigsDefaultEntryHolder.defaultEntry);
    }
    return deploymentConfigs_;
  }

  public int getDeploymentConfigsCount() {
    return internalGetDeploymentConfigs().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * Map of deployment configs to deployments ("admission", "audit",
   * "mutation').
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
   * </code>
   */
  @java.lang.Override
  public boolean containsDeploymentConfigs(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetDeploymentConfigs().getMap().containsKey(key);
  }
  /** Use {@link #getDeploymentConfigsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String,
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
      getDeploymentConfigs() {
    return getDeploymentConfigsMap();
  }
  /**
   *
   *
   * <pre>
   * Map of deployment configs to deployments ("admission", "audit",
   * "mutation').
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
   * </code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String,
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
      getDeploymentConfigsMap() {
    return internalGetDeploymentConfigs().getMap();
  }
  /**
   *
   *
   * <pre>
   * Map of deployment configs to deployments ("admission", "audit",
   * "mutation').
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
   * </code>
   */
  @java.lang.Override
  public /* nullable */ com.google.cloud.gkehub.policycontroller.v1beta
          .PolicyControllerDeploymentConfig
      getDeploymentConfigsOrDefault(
          java.lang.String key,
          /* nullable */
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
              defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        map = internalGetDeploymentConfigs().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * Map of deployment configs to deployments ("admission", "audit",
   * "mutation').
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
      getDeploymentConfigsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        map = internalGetDeploymentConfigs().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (installSpec_
        != com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec
            .INSTALL_SPEC_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, installSpec_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(2, auditIntervalSeconds_);
    }
    for (int i = 0; i < exemptableNamespaces_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 3, exemptableNamespaces_.getRaw(i));
    }
    if (referentialRulesEnabled_ != false) {
      output.writeBool(4, referentialRulesEnabled_);
    }
    if (logDeniesEnabled_ != false) {
      output.writeBool(5, logDeniesEnabled_);
    }
    if (mutationEnabled_ != false) {
      output.writeBool(6, mutationEnabled_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(8, getMonitoring());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(9, getPolicyContent());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(10, constraintViolationLimit_);
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output,
        internalGetDeploymentConfigs(),
        DeploymentConfigsDefaultEntryHolder.defaultEntry,
        11);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (installSpec_
        != com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec
            .INSTALL_SPEC_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, installSpec_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, auditIntervalSeconds_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < exemptableNamespaces_.size(); i++) {
        dataSize += computeStringSizeNoTag(exemptableNamespaces_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getExemptableNamespacesList().size();
    }
    if (referentialRulesEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, referentialRulesEnabled_);
    }
    if (logDeniesEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, logDeniesEnabled_);
    }
    if (mutationEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, mutationEnabled_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getMonitoring());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getPolicyContent());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(10, constraintViolationLimit_);
    }
    for (java.util.Map.Entry<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        entry : internalGetDeploymentConfigs().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
          deploymentConfigs__ =
              DeploymentConfigsDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, deploymentConfigs__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gkehub.policycontroller.v1beta.HubConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.gkehub.policycontroller.v1beta.HubConfig other =
        (com.google.cloud.gkehub.policycontroller.v1beta.HubConfig) obj;

    if (installSpec_ != other.installSpec_) return false;
    if (hasAuditIntervalSeconds() != other.hasAuditIntervalSeconds()) return false;
    if (hasAuditIntervalSeconds()) {
      if (getAuditIntervalSeconds() != other.getAuditIntervalSeconds()) return false;
    }
    if (!getExemptableNamespacesList().equals(other.getExemptableNamespacesList())) return false;
    if (getReferentialRulesEnabled() != other.getReferentialRulesEnabled()) return false;
    if (getLogDeniesEnabled() != other.getLogDeniesEnabled()) return false;
    if (getMutationEnabled() != other.getMutationEnabled()) return false;
    if (hasMonitoring() != other.hasMonitoring()) return false;
    if (hasMonitoring()) {
      if (!getMonitoring().equals(other.getMonitoring())) return false;
    }
    if (hasPolicyContent() != other.hasPolicyContent()) return false;
    if (hasPolicyContent()) {
      if (!getPolicyContent().equals(other.getPolicyContent())) return false;
    }
    if (hasConstraintViolationLimit() != other.hasConstraintViolationLimit()) return false;
    if (hasConstraintViolationLimit()) {
      if (getConstraintViolationLimit() != other.getConstraintViolationLimit()) return false;
    }
    if (!internalGetDeploymentConfigs().equals(other.internalGetDeploymentConfigs())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INSTALL_SPEC_FIELD_NUMBER;
    hash = (53 * hash) + installSpec_;
    if (hasAuditIntervalSeconds()) {
      hash = (37 * hash) + AUDIT_INTERVAL_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getAuditIntervalSeconds());
    }
    if (getExemptableNamespacesCount() > 0) {
      hash = (37 * hash) + EXEMPTABLE_NAMESPACES_FIELD_NUMBER;
      hash = (53 * hash) + getExemptableNamespacesList().hashCode();
    }
    hash = (37 * hash) + REFERENTIAL_RULES_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getReferentialRulesEnabled());
    hash = (37 * hash) + LOG_DENIES_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getLogDeniesEnabled());
    hash = (37 * hash) + MUTATION_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getMutationEnabled());
    if (hasMonitoring()) {
      hash = (37 * hash) + MONITORING_FIELD_NUMBER;
      hash = (53 * hash) + getMonitoring().hashCode();
    }
    if (hasPolicyContent()) {
      hash = (37 * hash) + POLICY_CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getPolicyContent().hashCode();
    }
    if (hasConstraintViolationLimit()) {
      hash = (37 * hash) + CONSTRAINT_VIOLATION_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getConstraintViolationLimit());
    }
    if (!internalGetDeploymentConfigs().getMap().isEmpty()) {
      hash = (37 * hash) + DEPLOYMENT_CONFIGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDeploymentConfigs().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.gkehub.policycontroller.v1beta.HubConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Configuration for Policy Controller
   * </pre>
   *
   * Protobuf type {@code google.cloud.gkehub.policycontroller.v1beta.HubConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gkehub.policycontroller.v1beta.HubConfig)
      com.google.cloud.gkehub.policycontroller.v1beta.HubConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_HubConfig_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 11:
          return internalGetDeploymentConfigs();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 11:
          return internalGetMutableDeploymentConfigs();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_HubConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.class,
              com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.Builder.class);
    }

    // Construct using com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getMonitoringFieldBuilder();
        getPolicyContentFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      installSpec_ = 0;
      auditIntervalSeconds_ = 0L;
      exemptableNamespaces_ = com.google.protobuf.LazyStringArrayList.emptyList();
      referentialRulesEnabled_ = false;
      logDeniesEnabled_ = false;
      mutationEnabled_ = false;
      monitoring_ = null;
      if (monitoringBuilder_ != null) {
        monitoringBuilder_.dispose();
        monitoringBuilder_ = null;
      }
      policyContent_ = null;
      if (policyContentBuilder_ != null) {
        policyContentBuilder_.dispose();
        policyContentBuilder_ = null;
      }
      constraintViolationLimit_ = 0L;
      internalGetMutableDeploymentConfigs().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerProto
          .internal_static_google_cloud_gkehub_policycontroller_v1beta_HubConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.HubConfig getDefaultInstanceForType() {
      return com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.HubConfig build() {
      com.google.cloud.gkehub.policycontroller.v1beta.HubConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.HubConfig buildPartial() {
      com.google.cloud.gkehub.policycontroller.v1beta.HubConfig result =
          new com.google.cloud.gkehub.policycontroller.v1beta.HubConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.gkehub.policycontroller.v1beta.HubConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.installSpec_ = installSpec_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.auditIntervalSeconds_ = auditIntervalSeconds_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        exemptableNamespaces_.makeImmutable();
        result.exemptableNamespaces_ = exemptableNamespaces_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.referentialRulesEnabled_ = referentialRulesEnabled_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.logDeniesEnabled_ = logDeniesEnabled_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.mutationEnabled_ = mutationEnabled_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.monitoring_ = monitoringBuilder_ == null ? monitoring_ : monitoringBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.policyContent_ =
            policyContentBuilder_ == null ? policyContent_ : policyContentBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.constraintViolationLimit_ = constraintViolationLimit_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.deploymentConfigs_ =
            internalGetDeploymentConfigs().build(DeploymentConfigsDefaultEntryHolder.defaultEntry);
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gkehub.policycontroller.v1beta.HubConfig) {
        return mergeFrom((com.google.cloud.gkehub.policycontroller.v1beta.HubConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.gkehub.policycontroller.v1beta.HubConfig other) {
      if (other == com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.getDefaultInstance())
        return this;
      if (other.installSpec_ != 0) {
        setInstallSpecValue(other.getInstallSpecValue());
      }
      if (other.hasAuditIntervalSeconds()) {
        setAuditIntervalSeconds(other.getAuditIntervalSeconds());
      }
      if (!other.exemptableNamespaces_.isEmpty()) {
        if (exemptableNamespaces_.isEmpty()) {
          exemptableNamespaces_ = other.exemptableNamespaces_;
          bitField0_ |= 0x00000004;
        } else {
          ensureExemptableNamespacesIsMutable();
          exemptableNamespaces_.addAll(other.exemptableNamespaces_);
        }
        onChanged();
      }
      if (other.getReferentialRulesEnabled() != false) {
        setReferentialRulesEnabled(other.getReferentialRulesEnabled());
      }
      if (other.getLogDeniesEnabled() != false) {
        setLogDeniesEnabled(other.getLogDeniesEnabled());
      }
      if (other.getMutationEnabled() != false) {
        setMutationEnabled(other.getMutationEnabled());
      }
      if (other.hasMonitoring()) {
        mergeMonitoring(other.getMonitoring());
      }
      if (other.hasPolicyContent()) {
        mergePolicyContent(other.getPolicyContent());
      }
      if (other.hasConstraintViolationLimit()) {
        setConstraintViolationLimit(other.getConstraintViolationLimit());
      }
      internalGetMutableDeploymentConfigs().mergeFrom(other.internalGetDeploymentConfigs());
      bitField0_ |= 0x00000200;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                installSpec_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 16:
              {
                auditIntervalSeconds_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureExemptableNamespacesIsMutable();
                exemptableNamespaces_.add(s);
                break;
              } // case 26
            case 32:
              {
                referentialRulesEnabled_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            case 40:
              {
                logDeniesEnabled_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
            case 48:
              {
                mutationEnabled_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            case 66:
              {
                input.readMessage(getMonitoringFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 66
            case 74:
              {
                input.readMessage(getPolicyContentFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 74
            case 80:
              {
                constraintViolationLimit_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 80
            case 90:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        com.google.cloud.gkehub.policycontroller.v1beta
                            .PolicyControllerDeploymentConfig>
                    deploymentConfigs__ =
                        input.readMessage(
                            DeploymentConfigsDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableDeploymentConfigs()
                    .ensureBuilderMap()
                    .put(deploymentConfigs__.getKey(), deploymentConfigs__.getValue());
                bitField0_ |= 0x00000200;
                break;
              } // case 90
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int installSpec_ = 0;
    /**
     *
     *
     * <pre>
     * The install_spec represents the intended state specified by the
     * latest request that mutated install_spec in the feature spec,
     * not the lifecycle state of the
     * feature observed by the Hub feature controller
     * that is reported in the feature state.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
     * </code>
     *
     * @return The enum numeric value on the wire for installSpec.
     */
    @java.lang.Override
    public int getInstallSpecValue() {
      return installSpec_;
    }
    /**
     *
     *
     * <pre>
     * The install_spec represents the intended state specified by the
     * latest request that mutated install_spec in the feature spec,
     * not the lifecycle state of the
     * feature observed by the Hub feature controller
     * that is reported in the feature state.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
     * </code>
     *
     * @param value The enum numeric value on the wire for installSpec to set.
     * @return This builder for chaining.
     */
    public Builder setInstallSpecValue(int value) {
      installSpec_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The install_spec represents the intended state specified by the
     * latest request that mutated install_spec in the feature spec,
     * not the lifecycle state of the
     * feature observed by the Hub feature controller
     * that is reported in the feature state.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
     * </code>
     *
     * @return The installSpec.
     */
    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec getInstallSpec() {
      com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec result =
          com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec.forNumber(
              installSpec_);
      return result == null
          ? com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The install_spec represents the intended state specified by the
     * latest request that mutated install_spec in the feature spec,
     * not the lifecycle state of the
     * feature observed by the Hub feature controller
     * that is reported in the feature state.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
     * </code>
     *
     * @param value The installSpec to set.
     * @return This builder for chaining.
     */
    public Builder setInstallSpec(
        com.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      installSpec_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The install_spec represents the intended state specified by the
     * latest request that mutated install_spec in the feature spec,
     * not the lifecycle state of the
     * feature observed by the Hub feature controller
     * that is reported in the feature state.
     * </pre>
     *
     * <code>.google.cloud.gkehub.policycontroller.v1beta.HubConfig.InstallSpec install_spec = 1;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInstallSpec() {
      bitField0_ = (bitField0_ & ~0x00000001);
      installSpec_ = 0;
      onChanged();
      return this;
    }

    private long auditIntervalSeconds_;
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 2;</code>
     *
     * @return Whether the auditIntervalSeconds field is set.
     */
    @java.lang.Override
    public boolean hasAuditIntervalSeconds() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 2;</code>
     *
     * @return The auditIntervalSeconds.
     */
    @java.lang.Override
    public long getAuditIntervalSeconds() {
      return auditIntervalSeconds_;
    }
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 2;</code>
     *
     * @param value The auditIntervalSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setAuditIntervalSeconds(long value) {

      auditIntervalSeconds_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAuditIntervalSeconds() {
      bitField0_ = (bitField0_ & ~0x00000002);
      auditIntervalSeconds_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList exemptableNamespaces_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureExemptableNamespacesIsMutable() {
      if (!exemptableNamespaces_.isModifiable()) {
        exemptableNamespaces_ = new com.google.protobuf.LazyStringArrayList(exemptableNamespaces_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @return A list containing the exemptableNamespaces.
     */
    public com.google.protobuf.ProtocolStringList getExemptableNamespacesList() {
      exemptableNamespaces_.makeImmutable();
      return exemptableNamespaces_;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @return The count of exemptableNamespaces.
     */
    public int getExemptableNamespacesCount() {
      return exemptableNamespaces_.size();
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The exemptableNamespaces at the given index.
     */
    public java.lang.String getExemptableNamespaces(int index) {
      return exemptableNamespaces_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the exemptableNamespaces at the given index.
     */
    public com.google.protobuf.ByteString getExemptableNamespacesBytes(int index) {
      return exemptableNamespaces_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @param index The index to set the value at.
     * @param value The exemptableNamespaces to set.
     * @return This builder for chaining.
     */
    public Builder setExemptableNamespaces(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExemptableNamespacesIsMutable();
      exemptableNamespaces_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @param value The exemptableNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addExemptableNamespaces(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExemptableNamespacesIsMutable();
      exemptableNamespaces_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @param values The exemptableNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addAllExemptableNamespaces(java.lang.Iterable<java.lang.String> values) {
      ensureExemptableNamespacesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, exemptableNamespaces_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearExemptableNamespaces() {
      exemptableNamespaces_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 3;</code>
     *
     * @param value The bytes of the exemptableNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addExemptableNamespacesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureExemptableNamespacesIsMutable();
      exemptableNamespaces_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean referentialRulesEnabled_;
    /**
     *
     *
     * <pre>
     * Enables the ability to use Constraint Templates that reference to objects
     * other than the object currently being evaluated.
     * </pre>
     *
     * <code>bool referential_rules_enabled = 4;</code>
     *
     * @return The referentialRulesEnabled.
     */
    @java.lang.Override
    public boolean getReferentialRulesEnabled() {
      return referentialRulesEnabled_;
    }
    /**
     *
     *
     * <pre>
     * Enables the ability to use Constraint Templates that reference to objects
     * other than the object currently being evaluated.
     * </pre>
     *
     * <code>bool referential_rules_enabled = 4;</code>
     *
     * @param value The referentialRulesEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setReferentialRulesEnabled(boolean value) {

      referentialRulesEnabled_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enables the ability to use Constraint Templates that reference to objects
     * other than the object currently being evaluated.
     * </pre>
     *
     * <code>bool referential_rules_enabled = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearReferentialRulesEnabled() {
      bitField0_ = (bitField0_ & ~0x00000008);
      referentialRulesEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean logDeniesEnabled_;
    /**
     *
     *
     * <pre>
     * Logs all denies and dry run failures.
     * </pre>
     *
     * <code>bool log_denies_enabled = 5;</code>
     *
     * @return The logDeniesEnabled.
     */
    @java.lang.Override
    public boolean getLogDeniesEnabled() {
      return logDeniesEnabled_;
    }
    /**
     *
     *
     * <pre>
     * Logs all denies and dry run failures.
     * </pre>
     *
     * <code>bool log_denies_enabled = 5;</code>
     *
     * @param value The logDeniesEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setLogDeniesEnabled(boolean value) {

      logDeniesEnabled_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Logs all denies and dry run failures.
     * </pre>
     *
     * <code>bool log_denies_enabled = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLogDeniesEnabled() {
      bitField0_ = (bitField0_ & ~0x00000010);
      logDeniesEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean mutationEnabled_;
    /**
     *
     *
     * <pre>
     * Enables the ability to mutate resources using Policy Controller.
     * </pre>
     *
     * <code>bool mutation_enabled = 6;</code>
     *
     * @return The mutationEnabled.
     */
    @java.lang.Override
    public boolean getMutationEnabled() {
      return mutationEnabled_;
    }
    /**
     *
     *
     * <pre>
     * Enables the ability to mutate resources using Policy Controller.
     * </pre>
     *
     * <code>bool mutation_enabled = 6;</code>
     *
     * @param value The mutationEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setMutationEnabled(boolean value) {

      mutationEnabled_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enables the ability to mutate resources using Policy Controller.
     * </pre>
     *
     * <code>bool mutation_enabled = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMutationEnabled() {
      bitField0_ = (bitField0_ & ~0x00000020);
      mutationEnabled_ = false;
      onChanged();
      return this;
    }

    private com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig,
            com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfigOrBuilder>
        monitoringBuilder_;
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     *
     * @return Whether the monitoring field is set.
     */
    public boolean hasMonitoring() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     *
     * @return The monitoring.
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig getMonitoring() {
      if (monitoringBuilder_ == null) {
        return monitoring_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.getDefaultInstance()
            : monitoring_;
      } else {
        return monitoringBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    public Builder setMonitoring(
        com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig value) {
      if (monitoringBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        monitoring_ = value;
      } else {
        monitoringBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    public Builder setMonitoring(
        com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.Builder builderForValue) {
      if (monitoringBuilder_ == null) {
        monitoring_ = builderForValue.build();
      } else {
        monitoringBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    public Builder mergeMonitoring(
        com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig value) {
      if (monitoringBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)
            && monitoring_ != null
            && monitoring_
                != com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig
                    .getDefaultInstance()) {
          getMonitoringBuilder().mergeFrom(value);
        } else {
          monitoring_ = value;
        }
      } else {
        monitoringBuilder_.mergeFrom(value);
      }
      if (monitoring_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    public Builder clearMonitoring() {
      bitField0_ = (bitField0_ & ~0x00000040);
      monitoring_ = null;
      if (monitoringBuilder_ != null) {
        monitoringBuilder_.dispose();
        monitoringBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.Builder
        getMonitoringBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getMonitoringFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfigOrBuilder
        getMonitoringOrBuilder() {
      if (monitoringBuilder_ != null) {
        return monitoringBuilder_.getMessageOrBuilder();
      } else {
        return monitoring_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.getDefaultInstance()
            : monitoring_;
      }
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>optional .google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig monitoring = 8;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig,
            com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfigOrBuilder>
        getMonitoringFieldBuilder() {
      if (monitoringBuilder_ == null) {
        monitoringBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig,
                com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfig.Builder,
                com.google.cloud.gkehub.policycontroller.v1beta.MonitoringConfigOrBuilder>(
                getMonitoring(), getParentForChildren(), isClean());
        monitoring_ = null;
      }
      return monitoringBuilder_;
    }

    private com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policyContent_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpecOrBuilder>
        policyContentBuilder_;
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     *
     * @return Whether the policyContent field is set.
     */
    public boolean hasPolicyContent() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     *
     * @return The policyContent.
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec getPolicyContent() {
      if (policyContentBuilder_ == null) {
        return policyContent_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.getDefaultInstance()
            : policyContent_;
      } else {
        return policyContentBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    public Builder setPolicyContent(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec value) {
      if (policyContentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policyContent_ = value;
      } else {
        policyContentBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    public Builder setPolicyContent(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.Builder builderForValue) {
      if (policyContentBuilder_ == null) {
        policyContent_ = builderForValue.build();
      } else {
        policyContentBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    public Builder mergePolicyContent(
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec value) {
      if (policyContentBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)
            && policyContent_ != null
            && policyContent_
                != com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec
                    .getDefaultInstance()) {
          getPolicyContentBuilder().mergeFrom(value);
        } else {
          policyContent_ = value;
        }
      } else {
        policyContentBuilder_.mergeFrom(value);
      }
      if (policyContent_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    public Builder clearPolicyContent() {
      bitField0_ = (bitField0_ & ~0x00000080);
      policyContent_ = null;
      if (policyContentBuilder_ != null) {
        policyContentBuilder_.dispose();
        policyContentBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.Builder
        getPolicyContentBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getPolicyContentFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpecOrBuilder
        getPolicyContentOrBuilder() {
      if (policyContentBuilder_ != null) {
        return policyContentBuilder_.getMessageOrBuilder();
      } else {
        return policyContent_ == null
            ? com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.getDefaultInstance()
            : policyContent_;
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies the desired policy content on the cluster
     * </pre>
     *
     * <code>
     * optional .google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec policy_content = 9;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.Builder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpecOrBuilder>
        getPolicyContentFieldBuilder() {
      if (policyContentBuilder_ == null) {
        policyContentBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec,
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpec.Builder,
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyContentSpecOrBuilder>(
                getPolicyContent(), getParentForChildren(), isClean());
        policyContent_ = null;
      }
      return policyContentBuilder_;
    }

    private long constraintViolationLimit_;
    /**
     *
     *
     * <pre>
     * The maximum number of audit violations to be stored in a constraint.
     * If not set, the internal default (currently 20) will be used.
     * </pre>
     *
     * <code>optional int64 constraint_violation_limit = 10;</code>
     *
     * @return Whether the constraintViolationLimit field is set.
     */
    @java.lang.Override
    public boolean hasConstraintViolationLimit() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     *
     *
     * <pre>
     * The maximum number of audit violations to be stored in a constraint.
     * If not set, the internal default (currently 20) will be used.
     * </pre>
     *
     * <code>optional int64 constraint_violation_limit = 10;</code>
     *
     * @return The constraintViolationLimit.
     */
    @java.lang.Override
    public long getConstraintViolationLimit() {
      return constraintViolationLimit_;
    }
    /**
     *
     *
     * <pre>
     * The maximum number of audit violations to be stored in a constraint.
     * If not set, the internal default (currently 20) will be used.
     * </pre>
     *
     * <code>optional int64 constraint_violation_limit = 10;</code>
     *
     * @param value The constraintViolationLimit to set.
     * @return This builder for chaining.
     */
    public Builder setConstraintViolationLimit(long value) {

      constraintViolationLimit_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The maximum number of audit violations to be stored in a constraint.
     * If not set, the internal default (currently 20) will be used.
     * </pre>
     *
     * <code>optional int64 constraint_violation_limit = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearConstraintViolationLimit() {
      bitField0_ = (bitField0_ & ~0x00000100);
      constraintViolationLimit_ = 0L;
      onChanged();
      return this;
    }

    private static final class DeploymentConfigsConverter
        implements com.google.protobuf.MapFieldBuilder.Converter<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta
                .PolicyControllerDeploymentConfigOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig> {
      @java.lang.Override
      public com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig build(
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfigOrBuilder
              val) {
        if (val
            instanceof
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig) {
          return (com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig)
              val;
        }
        return ((com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
                    .Builder)
                val)
            .build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
          defaultEntry() {
        return DeploymentConfigsDefaultEntryHolder.defaultEntry;
      }
    };

    private static final DeploymentConfigsConverter deploymentConfigsConverter =
        new DeploymentConfigsConverter();

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta
                .PolicyControllerDeploymentConfigOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
                .Builder>
        deploymentConfigs_;

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta
                .PolicyControllerDeploymentConfigOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
                .Builder>
        internalGetDeploymentConfigs() {
      if (deploymentConfigs_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(deploymentConfigsConverter);
      }
      return deploymentConfigs_;
    }

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta
                .PolicyControllerDeploymentConfigOrBuilder,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
                .Builder>
        internalGetMutableDeploymentConfigs() {
      if (deploymentConfigs_ == null) {
        deploymentConfigs_ = new com.google.protobuf.MapFieldBuilder<>(deploymentConfigsConverter);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return deploymentConfigs_;
    }

    public int getDeploymentConfigsCount() {
      return internalGetDeploymentConfigs().ensureBuilderMap().size();
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    @java.lang.Override
    public boolean containsDeploymentConfigs(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetDeploymentConfigs().ensureBuilderMap().containsKey(key);
    }
    /** Use {@link #getDeploymentConfigsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        getDeploymentConfigs() {
      return getDeploymentConfigsMap();
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        getDeploymentConfigsMap() {
      return internalGetDeploymentConfigs().getImmutableMap();
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    @java.lang.Override
    public /* nullable */ com.google.cloud.gkehub.policycontroller.v1beta
            .PolicyControllerDeploymentConfig
        getDeploymentConfigsOrDefault(
            java.lang.String key,
            /* nullable */
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
                defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta
                  .PolicyControllerDeploymentConfigOrBuilder>
          map = internalGetMutableDeploymentConfigs().ensureBuilderMap();
      return map.containsKey(key) ? deploymentConfigsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
        getDeploymentConfigsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta
                  .PolicyControllerDeploymentConfigOrBuilder>
          map = internalGetMutableDeploymentConfigs().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return deploymentConfigsConverter.build(map.get(key));
    }

    public Builder clearDeploymentConfigs() {
      bitField0_ = (bitField0_ & ~0x00000200);
      internalGetMutableDeploymentConfigs().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    public Builder removeDeploymentConfigs(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableDeploymentConfigs().ensureBuilderMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
        getMutableDeploymentConfigs() {
      bitField0_ |= 0x00000200;
      return internalGetMutableDeploymentConfigs().ensureMessageMap();
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    public Builder putDeploymentConfigs(
        java.lang.String key,
        com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableDeploymentConfigs().ensureBuilderMap().put(key, value);
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    public Builder putAllDeploymentConfigs(
        java.util.Map<
                java.lang.String,
                com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
            values) {
      for (java.util.Map.Entry<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig>
          e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableDeploymentConfigs().ensureBuilderMap().putAll(values);
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Map of deployment configs to deployments ("admission", "audit",
     * "mutation').
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig&gt; deployment_configs = 11;
     * </code>
     */
    public com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig.Builder
        putDeploymentConfigsBuilderIfAbsent(java.lang.String key) {
      java.util.Map<
              java.lang.String,
              com.google.cloud.gkehub.policycontroller.v1beta
                  .PolicyControllerDeploymentConfigOrBuilder>
          builderMap = internalGetMutableDeploymentConfigs().ensureBuilderMap();
      com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfigOrBuilder
          entry = builderMap.get(key);
      if (entry == null) {
        entry =
            com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
                .newBuilder();
        builderMap.put(key, entry);
      }
      if (entry
          instanceof
          com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig) {
        entry =
            ((com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig)
                    entry)
                .toBuilder();
        builderMap.put(key, entry);
      }
      return (com.google.cloud.gkehub.policycontroller.v1beta.PolicyControllerDeploymentConfig
              .Builder)
          entry;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gkehub.policycontroller.v1beta.HubConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gkehub.policycontroller.v1beta.HubConfig)
  private static final com.google.cloud.gkehub.policycontroller.v1beta.HubConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gkehub.policycontroller.v1beta.HubConfig();
  }

  public static com.google.cloud.gkehub.policycontroller.v1beta.HubConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HubConfig> PARSER =
      new com.google.protobuf.AbstractParser<HubConfig>() {
        @java.lang.Override
        public HubConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<HubConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HubConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gkehub.policycontroller.v1beta.HubConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
