/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/v1beta/configmanagement/configmanagement.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkehub.configmanagement.v1beta;

/**
 *
 *
 * <pre>
 * Configuration for Policy Controller
 * </pre>
 *
 * Protobuf type {@code google.cloud.gkehub.configmanagement.v1beta.PolicyController}
 */
public final class PolicyController extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gkehub.configmanagement.v1beta.PolicyController)
    PolicyControllerOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use PolicyController.newBuilder() to construct.
  private PolicyController(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private PolicyController() {
    exemptableNamespaces_ = com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new PolicyController();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto
        .internal_static_google_cloud_gkehub_configmanagement_v1beta_PolicyController_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto
        .internal_static_google_cloud_gkehub_configmanagement_v1beta_PolicyController_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.class,
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.Builder.class);
  }

  private int bitField0_;
  public static final int ENABLED_FIELD_NUMBER = 1;
  private boolean enabled_ = false;
  /**
   *
   *
   * <pre>
   * Enables the installation of Policy Controller.
   * If false, the rest of PolicyController fields take no
   * effect.
   * </pre>
   *
   * <code>bool enabled = 1;</code>
   *
   * @return The enabled.
   */
  @java.lang.Override
  public boolean getEnabled() {
    return enabled_;
  }

  public static final int TEMPLATE_LIBRARY_INSTALLED_FIELD_NUMBER = 2;
  private boolean templateLibraryInstalled_ = false;
  /**
   *
   *
   * <pre>
   * Installs the default template library along with Policy Controller.
   * </pre>
   *
   * <code>optional bool template_library_installed = 2;</code>
   *
   * @return Whether the templateLibraryInstalled field is set.
   */
  @java.lang.Override
  public boolean hasTemplateLibraryInstalled() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Installs the default template library along with Policy Controller.
   * </pre>
   *
   * <code>optional bool template_library_installed = 2;</code>
   *
   * @return The templateLibraryInstalled.
   */
  @java.lang.Override
  public boolean getTemplateLibraryInstalled() {
    return templateLibraryInstalled_;
  }

  public static final int AUDIT_INTERVAL_SECONDS_FIELD_NUMBER = 3;
  private long auditIntervalSeconds_ = 0L;
  /**
   *
   *
   * <pre>
   * Sets the interval for Policy Controller Audit Scans (in seconds).
   * When set to 0, this disables audit functionality altogether.
   * </pre>
   *
   * <code>optional int64 audit_interval_seconds = 3;</code>
   *
   * @return Whether the auditIntervalSeconds field is set.
   */
  @java.lang.Override
  public boolean hasAuditIntervalSeconds() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Sets the interval for Policy Controller Audit Scans (in seconds).
   * When set to 0, this disables audit functionality altogether.
   * </pre>
   *
   * <code>optional int64 audit_interval_seconds = 3;</code>
   *
   * @return The auditIntervalSeconds.
   */
  @java.lang.Override
  public long getAuditIntervalSeconds() {
    return auditIntervalSeconds_;
  }

  public static final int EXEMPTABLE_NAMESPACES_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList exemptableNamespaces_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 4;</code>
   *
   * @return A list containing the exemptableNamespaces.
   */
  public com.google.protobuf.ProtocolStringList getExemptableNamespacesList() {
    return exemptableNamespaces_;
  }
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 4;</code>
   *
   * @return The count of exemptableNamespaces.
   */
  public int getExemptableNamespacesCount() {
    return exemptableNamespaces_.size();
  }
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The exemptableNamespaces at the given index.
   */
  public java.lang.String getExemptableNamespaces(int index) {
    return exemptableNamespaces_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The set of namespaces that are excluded from Policy Controller checks.
   * Namespaces do not need to currently exist on the cluster.
   * </pre>
   *
   * <code>repeated string exemptable_namespaces = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the exemptableNamespaces at the given index.
   */
  public com.google.protobuf.ByteString getExemptableNamespacesBytes(int index) {
    return exemptableNamespaces_.getByteString(index);
  }

  public static final int REFERENTIAL_RULES_ENABLED_FIELD_NUMBER = 5;
  private boolean referentialRulesEnabled_ = false;
  /**
   *
   *
   * <pre>
   * Enables the ability to use Constraint Templates that reference to objects
   * other than the object currently being evaluated.
   * </pre>
   *
   * <code>bool referential_rules_enabled = 5;</code>
   *
   * @return The referentialRulesEnabled.
   */
  @java.lang.Override
  public boolean getReferentialRulesEnabled() {
    return referentialRulesEnabled_;
  }

  public static final int LOG_DENIES_ENABLED_FIELD_NUMBER = 6;
  private boolean logDeniesEnabled_ = false;
  /**
   *
   *
   * <pre>
   * Logs all denies and dry run failures.
   * </pre>
   *
   * <code>bool log_denies_enabled = 6;</code>
   *
   * @return The logDeniesEnabled.
   */
  @java.lang.Override
  public boolean getLogDeniesEnabled() {
    return logDeniesEnabled_;
  }

  public static final int MUTATION_ENABLED_FIELD_NUMBER = 7;
  private boolean mutationEnabled_ = false;
  /**
   *
   *
   * <pre>
   * Enable or disable mutation in policy controller.
   * If true, mutation CRDs, webhook and controller deployment
   * will be deployed to the cluster.
   * </pre>
   *
   * <code>bool mutation_enabled = 7;</code>
   *
   * @return The mutationEnabled.
   */
  @java.lang.Override
  public boolean getMutationEnabled() {
    return mutationEnabled_;
  }

  public static final int MONITORING_FIELD_NUMBER = 8;
  private com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring_;
  /**
   *
   *
   * <pre>
   * Monitoring specifies the configuration of monitoring.
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
   * </code>
   *
   * @return Whether the monitoring field is set.
   */
  @java.lang.Override
  public boolean hasMonitoring() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Monitoring specifies the configuration of monitoring.
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
   * </code>
   *
   * @return The monitoring.
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
      getMonitoring() {
    return monitoring_ == null
        ? com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
            .getDefaultInstance()
        : monitoring_;
  }
  /**
   *
   *
   * <pre>
   * Monitoring specifies the configuration of monitoring.
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoringOrBuilder
      getMonitoringOrBuilder() {
    return monitoring_ == null
        ? com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
            .getDefaultInstance()
        : monitoring_;
  }

  public static final int UPDATE_TIME_FIELD_NUMBER = 9;
  private com.google.protobuf.Timestamp updateTime_;
  /**
   *
   *
   * <pre>
   * Output only. Last time this membership spec was updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the updateTime field is set.
   */
  @java.lang.Override
  public boolean hasUpdateTime() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. Last time this membership spec was updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The updateTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getUpdateTime() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Last time this membership spec was updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (enabled_ != false) {
      output.writeBool(1, enabled_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(2, templateLibraryInstalled_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(3, auditIntervalSeconds_);
    }
    for (int i = 0; i < exemptableNamespaces_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 4, exemptableNamespaces_.getRaw(i));
    }
    if (referentialRulesEnabled_ != false) {
      output.writeBool(5, referentialRulesEnabled_);
    }
    if (logDeniesEnabled_ != false) {
      output.writeBool(6, logDeniesEnabled_);
    }
    if (mutationEnabled_ != false) {
      output.writeBool(7, mutationEnabled_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(8, getMonitoring());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(9, getUpdateTime());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (enabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, enabled_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, templateLibraryInstalled_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, auditIntervalSeconds_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < exemptableNamespaces_.size(); i++) {
        dataSize += computeStringSizeNoTag(exemptableNamespaces_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getExemptableNamespacesList().size();
    }
    if (referentialRulesEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, referentialRulesEnabled_);
    }
    if (logDeniesEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, logDeniesEnabled_);
    }
    if (mutationEnabled_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, mutationEnabled_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getMonitoring());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getUpdateTime());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gkehub.configmanagement.v1beta.PolicyController)) {
      return super.equals(obj);
    }
    com.google.cloud.gkehub.configmanagement.v1beta.PolicyController other =
        (com.google.cloud.gkehub.configmanagement.v1beta.PolicyController) obj;

    if (getEnabled() != other.getEnabled()) return false;
    if (hasTemplateLibraryInstalled() != other.hasTemplateLibraryInstalled()) return false;
    if (hasTemplateLibraryInstalled()) {
      if (getTemplateLibraryInstalled() != other.getTemplateLibraryInstalled()) return false;
    }
    if (hasAuditIntervalSeconds() != other.hasAuditIntervalSeconds()) return false;
    if (hasAuditIntervalSeconds()) {
      if (getAuditIntervalSeconds() != other.getAuditIntervalSeconds()) return false;
    }
    if (!getExemptableNamespacesList().equals(other.getExemptableNamespacesList())) return false;
    if (getReferentialRulesEnabled() != other.getReferentialRulesEnabled()) return false;
    if (getLogDeniesEnabled() != other.getLogDeniesEnabled()) return false;
    if (getMutationEnabled() != other.getMutationEnabled()) return false;
    if (hasMonitoring() != other.hasMonitoring()) return false;
    if (hasMonitoring()) {
      if (!getMonitoring().equals(other.getMonitoring())) return false;
    }
    if (hasUpdateTime() != other.hasUpdateTime()) return false;
    if (hasUpdateTime()) {
      if (!getUpdateTime().equals(other.getUpdateTime())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getEnabled());
    if (hasTemplateLibraryInstalled()) {
      hash = (37 * hash) + TEMPLATE_LIBRARY_INSTALLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getTemplateLibraryInstalled());
    }
    if (hasAuditIntervalSeconds()) {
      hash = (37 * hash) + AUDIT_INTERVAL_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getAuditIntervalSeconds());
    }
    if (getExemptableNamespacesCount() > 0) {
      hash = (37 * hash) + EXEMPTABLE_NAMESPACES_FIELD_NUMBER;
      hash = (53 * hash) + getExemptableNamespacesList().hashCode();
    }
    hash = (37 * hash) + REFERENTIAL_RULES_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getReferentialRulesEnabled());
    hash = (37 * hash) + LOG_DENIES_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getLogDeniesEnabled());
    hash = (37 * hash) + MUTATION_ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getMutationEnabled());
    if (hasMonitoring()) {
      hash = (37 * hash) + MONITORING_FIELD_NUMBER;
      hash = (53 * hash) + getMonitoring().hashCode();
    }
    if (hasUpdateTime()) {
      hash = (37 * hash) + UPDATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateTime().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.gkehub.configmanagement.v1beta.PolicyController prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Configuration for Policy Controller
   * </pre>
   *
   * Protobuf type {@code google.cloud.gkehub.configmanagement.v1beta.PolicyController}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gkehub.configmanagement.v1beta.PolicyController)
      com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto
          .internal_static_google_cloud_gkehub_configmanagement_v1beta_PolicyController_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto
          .internal_static_google_cloud_gkehub_configmanagement_v1beta_PolicyController_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.class,
              com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.Builder.class);
    }

    // Construct using com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getMonitoringFieldBuilder();
        getUpdateTimeFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      enabled_ = false;
      templateLibraryInstalled_ = false;
      auditIntervalSeconds_ = 0L;
      exemptableNamespaces_ = com.google.protobuf.LazyStringArrayList.emptyList();
      referentialRulesEnabled_ = false;
      logDeniesEnabled_ = false;
      mutationEnabled_ = false;
      monitoring_ = null;
      if (monitoringBuilder_ != null) {
        monitoringBuilder_.dispose();
        monitoringBuilder_ = null;
      }
      updateTime_ = null;
      if (updateTimeBuilder_ != null) {
        updateTimeBuilder_.dispose();
        updateTimeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gkehub.configmanagement.v1beta.ConfigManagementProto
          .internal_static_google_cloud_gkehub_configmanagement_v1beta_PolicyController_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyController
        getDefaultInstanceForType() {
      return com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyController build() {
      com.google.cloud.gkehub.configmanagement.v1beta.PolicyController result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyController buildPartial() {
      com.google.cloud.gkehub.configmanagement.v1beta.PolicyController result =
          new com.google.cloud.gkehub.configmanagement.v1beta.PolicyController(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyController result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.enabled_ = enabled_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.templateLibraryInstalled_ = templateLibraryInstalled_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.auditIntervalSeconds_ = auditIntervalSeconds_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        exemptableNamespaces_.makeImmutable();
        result.exemptableNamespaces_ = exemptableNamespaces_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.referentialRulesEnabled_ = referentialRulesEnabled_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.logDeniesEnabled_ = logDeniesEnabled_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.mutationEnabled_ = mutationEnabled_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.monitoring_ = monitoringBuilder_ == null ? monitoring_ : monitoringBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.updateTime_ = updateTimeBuilder_ == null ? updateTime_ : updateTimeBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gkehub.configmanagement.v1beta.PolicyController) {
        return mergeFrom((com.google.cloud.gkehub.configmanagement.v1beta.PolicyController) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyController other) {
      if (other
          == com.google.cloud.gkehub.configmanagement.v1beta.PolicyController.getDefaultInstance())
        return this;
      if (other.getEnabled() != false) {
        setEnabled(other.getEnabled());
      }
      if (other.hasTemplateLibraryInstalled()) {
        setTemplateLibraryInstalled(other.getTemplateLibraryInstalled());
      }
      if (other.hasAuditIntervalSeconds()) {
        setAuditIntervalSeconds(other.getAuditIntervalSeconds());
      }
      if (!other.exemptableNamespaces_.isEmpty()) {
        if (exemptableNamespaces_.isEmpty()) {
          exemptableNamespaces_ = other.exemptableNamespaces_;
          bitField0_ |= 0x00000008;
        } else {
          ensureExemptableNamespacesIsMutable();
          exemptableNamespaces_.addAll(other.exemptableNamespaces_);
        }
        onChanged();
      }
      if (other.getReferentialRulesEnabled() != false) {
        setReferentialRulesEnabled(other.getReferentialRulesEnabled());
      }
      if (other.getLogDeniesEnabled() != false) {
        setLogDeniesEnabled(other.getLogDeniesEnabled());
      }
      if (other.getMutationEnabled() != false) {
        setMutationEnabled(other.getMutationEnabled());
      }
      if (other.hasMonitoring()) {
        mergeMonitoring(other.getMonitoring());
      }
      if (other.hasUpdateTime()) {
        mergeUpdateTime(other.getUpdateTime());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                enabled_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 16:
              {
                templateLibraryInstalled_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 24:
              {
                auditIntervalSeconds_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 34:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureExemptableNamespacesIsMutable();
                exemptableNamespaces_.add(s);
                break;
              } // case 34
            case 40:
              {
                referentialRulesEnabled_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
            case 48:
              {
                logDeniesEnabled_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            case 56:
              {
                mutationEnabled_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            case 66:
              {
                input.readMessage(getMonitoringFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
            case 74:
              {
                input.readMessage(getUpdateTimeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private boolean enabled_;
    /**
     *
     *
     * <pre>
     * Enables the installation of Policy Controller.
     * If false, the rest of PolicyController fields take no
     * effect.
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     *
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     *
     *
     * <pre>
     * Enables the installation of Policy Controller.
     * If false, the rest of PolicyController fields take no
     * effect.
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     *
     * @param value The enabled to set.
     * @return This builder for chaining.
     */
    public Builder setEnabled(boolean value) {

      enabled_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enables the installation of Policy Controller.
     * If false, the rest of PolicyController fields take no
     * effect.
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEnabled() {
      bitField0_ = (bitField0_ & ~0x00000001);
      enabled_ = false;
      onChanged();
      return this;
    }

    private boolean templateLibraryInstalled_;
    /**
     *
     *
     * <pre>
     * Installs the default template library along with Policy Controller.
     * </pre>
     *
     * <code>optional bool template_library_installed = 2;</code>
     *
     * @return Whether the templateLibraryInstalled field is set.
     */
    @java.lang.Override
    public boolean hasTemplateLibraryInstalled() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Installs the default template library along with Policy Controller.
     * </pre>
     *
     * <code>optional bool template_library_installed = 2;</code>
     *
     * @return The templateLibraryInstalled.
     */
    @java.lang.Override
    public boolean getTemplateLibraryInstalled() {
      return templateLibraryInstalled_;
    }
    /**
     *
     *
     * <pre>
     * Installs the default template library along with Policy Controller.
     * </pre>
     *
     * <code>optional bool template_library_installed = 2;</code>
     *
     * @param value The templateLibraryInstalled to set.
     * @return This builder for chaining.
     */
    public Builder setTemplateLibraryInstalled(boolean value) {

      templateLibraryInstalled_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Installs the default template library along with Policy Controller.
     * </pre>
     *
     * <code>optional bool template_library_installed = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTemplateLibraryInstalled() {
      bitField0_ = (bitField0_ & ~0x00000002);
      templateLibraryInstalled_ = false;
      onChanged();
      return this;
    }

    private long auditIntervalSeconds_;
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 3;</code>
     *
     * @return Whether the auditIntervalSeconds field is set.
     */
    @java.lang.Override
    public boolean hasAuditIntervalSeconds() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 3;</code>
     *
     * @return The auditIntervalSeconds.
     */
    @java.lang.Override
    public long getAuditIntervalSeconds() {
      return auditIntervalSeconds_;
    }
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 3;</code>
     *
     * @param value The auditIntervalSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setAuditIntervalSeconds(long value) {

      auditIntervalSeconds_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Sets the interval for Policy Controller Audit Scans (in seconds).
     * When set to 0, this disables audit functionality altogether.
     * </pre>
     *
     * <code>optional int64 audit_interval_seconds = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAuditIntervalSeconds() {
      bitField0_ = (bitField0_ & ~0x00000004);
      auditIntervalSeconds_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList exemptableNamespaces_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureExemptableNamespacesIsMutable() {
      if (!exemptableNamespaces_.isModifiable()) {
        exemptableNamespaces_ = new com.google.protobuf.LazyStringArrayList(exemptableNamespaces_);
      }
      bitField0_ |= 0x00000008;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @return A list containing the exemptableNamespaces.
     */
    public com.google.protobuf.ProtocolStringList getExemptableNamespacesList() {
      exemptableNamespaces_.makeImmutable();
      return exemptableNamespaces_;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @return The count of exemptableNamespaces.
     */
    public int getExemptableNamespacesCount() {
      return exemptableNamespaces_.size();
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @param index The index of the element to return.
     * @return The exemptableNamespaces at the given index.
     */
    public java.lang.String getExemptableNamespaces(int index) {
      return exemptableNamespaces_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the exemptableNamespaces at the given index.
     */
    public com.google.protobuf.ByteString getExemptableNamespacesBytes(int index) {
      return exemptableNamespaces_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @param index The index to set the value at.
     * @param value The exemptableNamespaces to set.
     * @return This builder for chaining.
     */
    public Builder setExemptableNamespaces(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExemptableNamespacesIsMutable();
      exemptableNamespaces_.set(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @param value The exemptableNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addExemptableNamespaces(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureExemptableNamespacesIsMutable();
      exemptableNamespaces_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @param values The exemptableNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addAllExemptableNamespaces(java.lang.Iterable<java.lang.String> values) {
      ensureExemptableNamespacesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, exemptableNamespaces_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearExemptableNamespaces() {
      exemptableNamespaces_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The set of namespaces that are excluded from Policy Controller checks.
     * Namespaces do not need to currently exist on the cluster.
     * </pre>
     *
     * <code>repeated string exemptable_namespaces = 4;</code>
     *
     * @param value The bytes of the exemptableNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addExemptableNamespacesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureExemptableNamespacesIsMutable();
      exemptableNamespaces_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private boolean referentialRulesEnabled_;
    /**
     *
     *
     * <pre>
     * Enables the ability to use Constraint Templates that reference to objects
     * other than the object currently being evaluated.
     * </pre>
     *
     * <code>bool referential_rules_enabled = 5;</code>
     *
     * @return The referentialRulesEnabled.
     */
    @java.lang.Override
    public boolean getReferentialRulesEnabled() {
      return referentialRulesEnabled_;
    }
    /**
     *
     *
     * <pre>
     * Enables the ability to use Constraint Templates that reference to objects
     * other than the object currently being evaluated.
     * </pre>
     *
     * <code>bool referential_rules_enabled = 5;</code>
     *
     * @param value The referentialRulesEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setReferentialRulesEnabled(boolean value) {

      referentialRulesEnabled_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enables the ability to use Constraint Templates that reference to objects
     * other than the object currently being evaluated.
     * </pre>
     *
     * <code>bool referential_rules_enabled = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearReferentialRulesEnabled() {
      bitField0_ = (bitField0_ & ~0x00000010);
      referentialRulesEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean logDeniesEnabled_;
    /**
     *
     *
     * <pre>
     * Logs all denies and dry run failures.
     * </pre>
     *
     * <code>bool log_denies_enabled = 6;</code>
     *
     * @return The logDeniesEnabled.
     */
    @java.lang.Override
    public boolean getLogDeniesEnabled() {
      return logDeniesEnabled_;
    }
    /**
     *
     *
     * <pre>
     * Logs all denies and dry run failures.
     * </pre>
     *
     * <code>bool log_denies_enabled = 6;</code>
     *
     * @param value The logDeniesEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setLogDeniesEnabled(boolean value) {

      logDeniesEnabled_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Logs all denies and dry run failures.
     * </pre>
     *
     * <code>bool log_denies_enabled = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLogDeniesEnabled() {
      bitField0_ = (bitField0_ & ~0x00000020);
      logDeniesEnabled_ = false;
      onChanged();
      return this;
    }

    private boolean mutationEnabled_;
    /**
     *
     *
     * <pre>
     * Enable or disable mutation in policy controller.
     * If true, mutation CRDs, webhook and controller deployment
     * will be deployed to the cluster.
     * </pre>
     *
     * <code>bool mutation_enabled = 7;</code>
     *
     * @return The mutationEnabled.
     */
    @java.lang.Override
    public boolean getMutationEnabled() {
      return mutationEnabled_;
    }
    /**
     *
     *
     * <pre>
     * Enable or disable mutation in policy controller.
     * If true, mutation CRDs, webhook and controller deployment
     * will be deployed to the cluster.
     * </pre>
     *
     * <code>bool mutation_enabled = 7;</code>
     *
     * @param value The mutationEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setMutationEnabled(boolean value) {

      mutationEnabled_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enable or disable mutation in policy controller.
     * If true, mutation CRDs, webhook and controller deployment
     * will be deployed to the cluster.
     * </pre>
     *
     * <code>bool mutation_enabled = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMutationEnabled() {
      bitField0_ = (bitField0_ & ~0x00000040);
      mutationEnabled_ = false;
      onChanged();
      return this;
    }

    private com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring,
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring.Builder,
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoringOrBuilder>
        monitoringBuilder_;
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     *
     * @return Whether the monitoring field is set.
     */
    public boolean hasMonitoring() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     *
     * @return The monitoring.
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
        getMonitoring() {
      if (monitoringBuilder_ == null) {
        return monitoring_ == null
            ? com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
                .getDefaultInstance()
            : monitoring_;
      } else {
        return monitoringBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    public Builder setMonitoring(
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring value) {
      if (monitoringBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        monitoring_ = value;
      } else {
        monitoringBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    public Builder setMonitoring(
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring.Builder
            builderForValue) {
      if (monitoringBuilder_ == null) {
        monitoring_ = builderForValue.build();
      } else {
        monitoringBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    public Builder mergeMonitoring(
        com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring value) {
      if (monitoringBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)
            && monitoring_ != null
            && monitoring_
                != com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
                    .getDefaultInstance()) {
          getMonitoringBuilder().mergeFrom(value);
        } else {
          monitoring_ = value;
        }
      } else {
        monitoringBuilder_.mergeFrom(value);
      }
      if (monitoring_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    public Builder clearMonitoring() {
      bitField0_ = (bitField0_ & ~0x00000080);
      monitoring_ = null;
      if (monitoringBuilder_ != null) {
        monitoringBuilder_.dispose();
        monitoringBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring.Builder
        getMonitoringBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getMonitoringFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    public com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoringOrBuilder
        getMonitoringOrBuilder() {
      if (monitoringBuilder_ != null) {
        return monitoringBuilder_.getMessageOrBuilder();
      } else {
        return monitoring_ == null
            ? com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring
                .getDefaultInstance()
            : monitoring_;
      }
    }
    /**
     *
     *
     * <pre>
     * Monitoring specifies the configuration of monitoring.
     * </pre>
     *
     * <code>.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring monitoring = 8;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring,
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring.Builder,
            com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoringOrBuilder>
        getMonitoringFieldBuilder() {
      if (monitoringBuilder_ == null) {
        monitoringBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring,
                com.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerMonitoring.Builder,
                com.google.cloud.gkehub.configmanagement.v1beta
                    .PolicyControllerMonitoringOrBuilder>(
                getMonitoring(), getParentForChildren(), isClean());
        monitoring_ = null;
      }
      return monitoringBuilder_;
    }

    private com.google.protobuf.Timestamp updateTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        updateTimeBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the updateTime field is set.
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The updateTime.
     */
    public com.google.protobuf.Timestamp getUpdateTime() {
      if (updateTimeBuilder_ == null) {
        return updateTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : updateTime_;
      } else {
        return updateTimeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        updateTime_ = value;
      } else {
        updateTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp.Builder builderForValue) {
      if (updateTimeBuilder_ == null) {
        updateTime_ = builderForValue.build();
      } else {
        updateTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)
            && updateTime_ != null
            && updateTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getUpdateTimeBuilder().mergeFrom(value);
        } else {
          updateTime_ = value;
        }
      } else {
        updateTimeBuilder_.mergeFrom(value);
      }
      if (updateTime_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearUpdateTime() {
      bitField0_ = (bitField0_ & ~0x00000100);
      updateTime_ = null;
      if (updateTimeBuilder_ != null) {
        updateTimeBuilder_.dispose();
        updateTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.protobuf.Timestamp.Builder getUpdateTimeBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getUpdateTimeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
      if (updateTimeBuilder_ != null) {
        return updateTimeBuilder_.getMessageOrBuilder();
      } else {
        return updateTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : updateTime_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Last time this membership spec was updated.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        getUpdateTimeFieldBuilder() {
      if (updateTimeBuilder_ == null) {
        updateTimeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp,
                com.google.protobuf.Timestamp.Builder,
                com.google.protobuf.TimestampOrBuilder>(
                getUpdateTime(), getParentForChildren(), isClean());
        updateTime_ = null;
      }
      return updateTimeBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gkehub.configmanagement.v1beta.PolicyController)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gkehub.configmanagement.v1beta.PolicyController)
  private static final com.google.cloud.gkehub.configmanagement.v1beta.PolicyController
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gkehub.configmanagement.v1beta.PolicyController();
  }

  public static com.google.cloud.gkehub.configmanagement.v1beta.PolicyController
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PolicyController> PARSER =
      new com.google.protobuf.AbstractParser<PolicyController>() {
        @java.lang.Override
        public PolicyController parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<PolicyController> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PolicyController> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gkehub.configmanagement.v1beta.PolicyController
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
