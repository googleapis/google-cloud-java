/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkehub/v1/configmanagement/configmanagement.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkehub.configmanagement.v1;

public interface ConfigSyncOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gkehub.configmanagement.v1.ConfigSync)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Git repo configuration for the cluster.
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1.GitConfig git = 7;</code>
   *
   * @return Whether the git field is set.
   */
  boolean hasGit();
  /**
   *
   *
   * <pre>
   * Git repo configuration for the cluster.
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1.GitConfig git = 7;</code>
   *
   * @return The git.
   */
  com.google.cloud.gkehub.configmanagement.v1.GitConfig getGit();
  /**
   *
   *
   * <pre>
   * Git repo configuration for the cluster.
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1.GitConfig git = 7;</code>
   */
  com.google.cloud.gkehub.configmanagement.v1.GitConfigOrBuilder getGitOrBuilder();

  /**
   *
   *
   * <pre>
   * Specifies whether the Config Sync Repo is
   * in "hierarchical" or "unstructured" mode.
   * </pre>
   *
   * <code>string source_format = 8;</code>
   *
   * @return The sourceFormat.
   */
  java.lang.String getSourceFormat();
  /**
   *
   *
   * <pre>
   * Specifies whether the Config Sync Repo is
   * in "hierarchical" or "unstructured" mode.
   * </pre>
   *
   * <code>string source_format = 8;</code>
   *
   * @return The bytes for sourceFormat.
   */
  com.google.protobuf.ByteString getSourceFormatBytes();

  /**
   *
   *
   * <pre>
   * Enables the installation of ConfigSync.
   * If set to true, ConfigSync resources will be created and the other
   * ConfigSync fields will be applied if exist.
   * If set to false, all other ConfigSync fields will be ignored, ConfigSync
   * resources will be deleted.
   * If omitted, ConfigSync resources will be managed depends on the presence
   * of the git or oci field.
   * </pre>
   *
   * <code>optional bool enabled = 10;</code>
   *
   * @return Whether the enabled field is set.
   */
  boolean hasEnabled();
  /**
   *
   *
   * <pre>
   * Enables the installation of ConfigSync.
   * If set to true, ConfigSync resources will be created and the other
   * ConfigSync fields will be applied if exist.
   * If set to false, all other ConfigSync fields will be ignored, ConfigSync
   * resources will be deleted.
   * If omitted, ConfigSync resources will be managed depends on the presence
   * of the git or oci field.
   * </pre>
   *
   * <code>optional bool enabled = 10;</code>
   *
   * @return The enabled.
   */
  boolean getEnabled();

  /**
   *
   *
   * <pre>
   * Set to true to enable the Config Sync admission webhook to prevent drifts.
   * If set to `false`, disables the Config Sync admission webhook and does not
   * prevent drifts.
   * </pre>
   *
   * <code>bool prevent_drift = 11;</code>
   *
   * @return The preventDrift.
   */
  boolean getPreventDrift();

  /**
   *
   *
   * <pre>
   * OCI repo configuration for the cluster
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1.OciConfig oci = 12;</code>
   *
   * @return Whether the oci field is set.
   */
  boolean hasOci();
  /**
   *
   *
   * <pre>
   * OCI repo configuration for the cluster
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1.OciConfig oci = 12;</code>
   *
   * @return The oci.
   */
  com.google.cloud.gkehub.configmanagement.v1.OciConfig getOci();
  /**
   *
   *
   * <pre>
   * OCI repo configuration for the cluster
   * </pre>
   *
   * <code>.google.cloud.gkehub.configmanagement.v1.OciConfig oci = 12;</code>
   */
  com.google.cloud.gkehub.configmanagement.v1.OciConfigOrBuilder getOciOrBuilder();

  /**
   *
   *
   * <pre>
   * The Email of the Google Cloud Service Account (GSA) used for exporting
   * Config Sync metrics to Cloud Monitoring when Workload Identity is enabled.
   * The GSA should have the Monitoring Metric Writer
   * (roles/monitoring.metricWriter) IAM role.
   * The Kubernetes ServiceAccount `default` in the namespace
   * `config-management-monitoring` should be bound to the GSA.
   * </pre>
   *
   * <code>string metrics_gcp_service_account_email = 15;</code>
   *
   * @return The metricsGcpServiceAccountEmail.
   */
  java.lang.String getMetricsGcpServiceAccountEmail();
  /**
   *
   *
   * <pre>
   * The Email of the Google Cloud Service Account (GSA) used for exporting
   * Config Sync metrics to Cloud Monitoring when Workload Identity is enabled.
   * The GSA should have the Monitoring Metric Writer
   * (roles/monitoring.metricWriter) IAM role.
   * The Kubernetes ServiceAccount `default` in the namespace
   * `config-management-monitoring` should be bound to the GSA.
   * </pre>
   *
   * <code>string metrics_gcp_service_account_email = 15;</code>
   *
   * @return The bytes for metricsGcpServiceAccountEmail.
   */
  com.google.protobuf.ByteString getMetricsGcpServiceAccountEmailBytes();
}
