/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/capacityplanner/v1beta/usage_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.capacityplanner.v1beta;

public interface BigQueryDestinationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.capacityplanner.v1beta.BigQueryDestination)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The BigQuery dataset in format
   * "projects/{projectId}/datasets/{datasetId}", to which the snapshot result
   * should be exported. If this dataset does not exist, the export call returns
   * an INVALID_ARGUMENT error.
   * </pre>
   *
   * <code>string dataset = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The dataset.
   */
  java.lang.String getDataset();

  /**
   *
   *
   * <pre>
   * Required. The BigQuery dataset in format
   * "projects/{projectId}/datasets/{datasetId}", to which the snapshot result
   * should be exported. If this dataset does not exist, the export call returns
   * an INVALID_ARGUMENT error.
   * </pre>
   *
   * <code>string dataset = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for dataset.
   */
  com.google.protobuf.ByteString getDatasetBytes();

  /**
   *
   *
   * <pre>
   * Required. The BigQuery table to which the snapshot result should be
   * written.
   * </pre>
   *
   * <code>string table = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The table.
   */
  java.lang.String getTable();

  /**
   *
   *
   * <pre>
   * Required. The BigQuery table to which the snapshot result should be
   * written.
   * </pre>
   *
   * <code>string table = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for table.
   */
  com.google.protobuf.ByteString getTableBytes();

  /**
   *
   *
   * <pre>
   * Optional. The partition key for BigQuery partitioned table.
   * </pre>
   *
   * <code>
   * .google.cloud.capacityplanner.v1beta.BigQueryDestination.PartitionKey partition_key = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for partitionKey.
   */
  int getPartitionKeyValue();

  /**
   *
   *
   * <pre>
   * Optional. The partition key for BigQuery partitioned table.
   * </pre>
   *
   * <code>
   * .google.cloud.capacityplanner.v1beta.BigQueryDestination.PartitionKey partition_key = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The partitionKey.
   */
  com.google.cloud.capacityplanner.v1beta.BigQueryDestination.PartitionKey getPartitionKey();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the action that occurs if the destination table or
   * partition already exists.
   * </pre>
   *
   * <code>
   * .google.cloud.capacityplanner.v1beta.BigQueryDestination.WriteDisposition write_disposition = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for writeDisposition.
   */
  int getWriteDispositionValue();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the action that occurs if the destination table or
   * partition already exists.
   * </pre>
   *
   * <code>
   * .google.cloud.capacityplanner.v1beta.BigQueryDestination.WriteDisposition write_disposition = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The writeDisposition.
   */
  com.google.cloud.capacityplanner.v1beta.BigQueryDestination.WriteDisposition
      getWriteDisposition();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the action that occurs if the destination table does
   * not exist
   * </pre>
   *
   * <code>
   * .google.cloud.capacityplanner.v1beta.BigQueryDestination.CreateDisposition create_disposition = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for createDisposition.
   */
  int getCreateDispositionValue();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the action that occurs if the destination table does
   * not exist
   * </pre>
   *
   * <code>
   * .google.cloud.capacityplanner.v1beta.BigQueryDestination.CreateDisposition create_disposition = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The createDisposition.
   */
  com.google.cloud.capacityplanner.v1beta.BigQueryDestination.CreateDisposition
      getCreateDisposition();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the Cloud Storage location.
   * Users can choose to provide a location for Cloud Storage bucket to store
   * the exported data. (as it is possible that some locations are restricted
   * via org policy for that project) Temporary Cloud Storage bucket creation is
   * an interim step for BigQuery upload. If no value is provided, the default
   * location used will be 'US'.
   * </pre>
   *
   * <code>string gcs_location = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The gcsLocation.
   */
  java.lang.String getGcsLocation();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the Cloud Storage location.
   * Users can choose to provide a location for Cloud Storage bucket to store
   * the exported data. (as it is possible that some locations are restricted
   * via org policy for that project) Temporary Cloud Storage bucket creation is
   * an interim step for BigQuery upload. If no value is provided, the default
   * location used will be 'US'.
   * </pre>
   *
   * <code>string gcs_location = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for gcsLocation.
   */
  com.google.protobuf.ByteString getGcsLocationBytes();
}
