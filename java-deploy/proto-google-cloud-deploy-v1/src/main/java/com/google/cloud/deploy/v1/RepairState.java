/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/deploy/v1/cloud_deploy.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.deploy.v1;

/**
 *
 *
 * <pre>
 * Valid state of a repair attempt.
 * </pre>
 *
 * Protobuf enum {@code google.cloud.deploy.v1.RepairState}
 */
public enum RepairState implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * The `repair` has an unspecified state.
   * </pre>
   *
   * <code>REPAIR_STATE_UNSPECIFIED = 0;</code>
   */
  REPAIR_STATE_UNSPECIFIED(0),
  /**
   *
   *
   * <pre>
   * The `repair` action has succeeded.
   * </pre>
   *
   * <code>REPAIR_STATE_SUCCEEDED = 1;</code>
   */
  REPAIR_STATE_SUCCEEDED(1),
  /**
   *
   *
   * <pre>
   * The `repair` action was cancelled.
   * </pre>
   *
   * <code>REPAIR_STATE_CANCELLED = 2;</code>
   */
  REPAIR_STATE_CANCELLED(2),
  /**
   *
   *
   * <pre>
   * The `repair` action has failed.
   * </pre>
   *
   * <code>REPAIR_STATE_FAILED = 3;</code>
   */
  REPAIR_STATE_FAILED(3),
  /**
   *
   *
   * <pre>
   * The `repair` action is in progress.
   * </pre>
   *
   * <code>REPAIR_STATE_IN_PROGRESS = 4;</code>
   */
  REPAIR_STATE_IN_PROGRESS(4),
  /**
   *
   *
   * <pre>
   * The `repair` action is pending.
   * </pre>
   *
   * <code>REPAIR_STATE_PENDING = 5;</code>
   */
  REPAIR_STATE_PENDING(5),
  /**
   *
   *
   * <pre>
   * The `repair` action was aborted.
   * </pre>
   *
   * <code>REPAIR_STATE_ABORTED = 7;</code>
   */
  REPAIR_STATE_ABORTED(7),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * The `repair` has an unspecified state.
   * </pre>
   *
   * <code>REPAIR_STATE_UNSPECIFIED = 0;</code>
   */
  public static final int REPAIR_STATE_UNSPECIFIED_VALUE = 0;
  /**
   *
   *
   * <pre>
   * The `repair` action has succeeded.
   * </pre>
   *
   * <code>REPAIR_STATE_SUCCEEDED = 1;</code>
   */
  public static final int REPAIR_STATE_SUCCEEDED_VALUE = 1;
  /**
   *
   *
   * <pre>
   * The `repair` action was cancelled.
   * </pre>
   *
   * <code>REPAIR_STATE_CANCELLED = 2;</code>
   */
  public static final int REPAIR_STATE_CANCELLED_VALUE = 2;
  /**
   *
   *
   * <pre>
   * The `repair` action has failed.
   * </pre>
   *
   * <code>REPAIR_STATE_FAILED = 3;</code>
   */
  public static final int REPAIR_STATE_FAILED_VALUE = 3;
  /**
   *
   *
   * <pre>
   * The `repair` action is in progress.
   * </pre>
   *
   * <code>REPAIR_STATE_IN_PROGRESS = 4;</code>
   */
  public static final int REPAIR_STATE_IN_PROGRESS_VALUE = 4;
  /**
   *
   *
   * <pre>
   * The `repair` action is pending.
   * </pre>
   *
   * <code>REPAIR_STATE_PENDING = 5;</code>
   */
  public static final int REPAIR_STATE_PENDING_VALUE = 5;
  /**
   *
   *
   * <pre>
   * The `repair` action was aborted.
   * </pre>
   *
   * <code>REPAIR_STATE_ABORTED = 7;</code>
   */
  public static final int REPAIR_STATE_ABORTED_VALUE = 7;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RepairState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RepairState forNumber(int value) {
    switch (value) {
      case 0:
        return REPAIR_STATE_UNSPECIFIED;
      case 1:
        return REPAIR_STATE_SUCCEEDED;
      case 2:
        return REPAIR_STATE_CANCELLED;
      case 3:
        return REPAIR_STATE_FAILED;
      case 4:
        return REPAIR_STATE_IN_PROGRESS;
      case 5:
        return REPAIR_STATE_PENDING;
      case 7:
        return REPAIR_STATE_ABORTED;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RepairState> internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<RepairState> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<RepairState>() {
        public RepairState findValueByNumber(int number) {
          return RepairState.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.cloud.deploy.v1.CloudDeployProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final RepairState[] VALUES = values();

  public static RepairState valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RepairState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.deploy.v1.RepairState)
}
