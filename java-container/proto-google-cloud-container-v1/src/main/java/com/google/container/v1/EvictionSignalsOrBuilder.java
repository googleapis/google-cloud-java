/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1/cluster_service.proto

// Protobuf Java Version: 3.25.8
package com.google.container.v1;

public interface EvictionSignalsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.container.v1.EvictionSignals)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Memory available (i.e. capacity - workingSet), in bytes. Defines
   * the amount of "memory.available" signal in kubelet. Default is unset, if
   * not specified in the kubelet config. Format: positive number + unit, e.g.
   * 100Ki, 10Mi, 5Gi. Valid units are Ki, Mi, Gi. Must be &gt;= 100Mi and &lt;= 50%
   * of the node's memory. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string memory_available = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The memoryAvailable.
   */
  java.lang.String getMemoryAvailable();

  /**
   *
   *
   * <pre>
   * Optional. Memory available (i.e. capacity - workingSet), in bytes. Defines
   * the amount of "memory.available" signal in kubelet. Default is unset, if
   * not specified in the kubelet config. Format: positive number + unit, e.g.
   * 100Ki, 10Mi, 5Gi. Valid units are Ki, Mi, Gi. Must be &gt;= 100Mi and &lt;= 50%
   * of the node's memory. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string memory_available = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for memoryAvailable.
   */
  com.google.protobuf.ByteString getMemoryAvailableBytes();

  /**
   *
   *
   * <pre>
   * Optional. Amount of storage available on filesystem that kubelet uses for
   * volumes, daemon logs, etc. Defines the amount of "nodefs.available" signal
   * in kubelet. Default is unset, if not specified in the kubelet config. It
   * takses percentage value for now. Sample format: "30%". Must be &gt;= 10% and
   * &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string nodefs_available = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The nodefsAvailable.
   */
  java.lang.String getNodefsAvailable();

  /**
   *
   *
   * <pre>
   * Optional. Amount of storage available on filesystem that kubelet uses for
   * volumes, daemon logs, etc. Defines the amount of "nodefs.available" signal
   * in kubelet. Default is unset, if not specified in the kubelet config. It
   * takses percentage value for now. Sample format: "30%". Must be &gt;= 10% and
   * &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string nodefs_available = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for nodefsAvailable.
   */
  com.google.protobuf.ByteString getNodefsAvailableBytes();

  /**
   *
   *
   * <pre>
   * Optional. Amount of inodes available on filesystem that kubelet uses for
   * volumes, daemon logs, etc. Defines the amount of "nodefs.inodesFree" signal
   * in kubelet. Default is unset, if not specified in the kubelet config. Linux
   * only. It takses percentage value for now. Sample format: "30%". Must be &gt;=
   * 5% and &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string nodefs_inodes_free = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The nodefsInodesFree.
   */
  java.lang.String getNodefsInodesFree();

  /**
   *
   *
   * <pre>
   * Optional. Amount of inodes available on filesystem that kubelet uses for
   * volumes, daemon logs, etc. Defines the amount of "nodefs.inodesFree" signal
   * in kubelet. Default is unset, if not specified in the kubelet config. Linux
   * only. It takses percentage value for now. Sample format: "30%". Must be &gt;=
   * 5% and &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string nodefs_inodes_free = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for nodefsInodesFree.
   */
  com.google.protobuf.ByteString getNodefsInodesFreeBytes();

  /**
   *
   *
   * <pre>
   * Optional. Amount of storage available on filesystem that container runtime
   * uses for storing images layers. If the container filesystem and image
   * filesystem are not separate, then imagefs can store both image layers and
   * writeable layers. Defines the amount of "imagefs.available" signal in
   * kubelet. Default is unset, if not specified in the kubelet config. It
   * takses percentage value for now. Sample format: "30%". Must be &gt;= 15% and
   * &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string imagefs_available = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The imagefsAvailable.
   */
  java.lang.String getImagefsAvailable();

  /**
   *
   *
   * <pre>
   * Optional. Amount of storage available on filesystem that container runtime
   * uses for storing images layers. If the container filesystem and image
   * filesystem are not separate, then imagefs can store both image layers and
   * writeable layers. Defines the amount of "imagefs.available" signal in
   * kubelet. Default is unset, if not specified in the kubelet config. It
   * takses percentage value for now. Sample format: "30%". Must be &gt;= 15% and
   * &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string imagefs_available = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for imagefsAvailable.
   */
  com.google.protobuf.ByteString getImagefsAvailableBytes();

  /**
   *
   *
   * <pre>
   * Optional. Amount of inodes available on filesystem that container runtime
   * uses for storing images layers. Defines the amount of "imagefs.inodesFree"
   * signal in kubelet. Default is unset, if not specified in the kubelet
   * config. Linux only. It takses percentage value for now. Sample format:
   * "30%". Must be &gt;= 5% and &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string imagefs_inodes_free = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The imagefsInodesFree.
   */
  java.lang.String getImagefsInodesFree();

  /**
   *
   *
   * <pre>
   * Optional. Amount of inodes available on filesystem that container runtime
   * uses for storing images layers. Defines the amount of "imagefs.inodesFree"
   * signal in kubelet. Default is unset, if not specified in the kubelet
   * config. Linux only. It takses percentage value for now. Sample format:
   * "30%". Must be &gt;= 5% and &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string imagefs_inodes_free = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for imagefsInodesFree.
   */
  com.google.protobuf.ByteString getImagefsInodesFreeBytes();

  /**
   *
   *
   * <pre>
   * Optional. Amount of PID available for pod allocation. Defines the amount of
   * "pid.available" signal in kubelet. Default is unset, if not specified in
   * the kubelet config. It takses percentage value for now. Sample format:
   * "30%". Must be &gt;= 10% and &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string pid_available = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pidAvailable.
   */
  java.lang.String getPidAvailable();

  /**
   *
   *
   * <pre>
   * Optional. Amount of PID available for pod allocation. Defines the amount of
   * "pid.available" signal in kubelet. Default is unset, if not specified in
   * the kubelet config. It takses percentage value for now. Sample format:
   * "30%". Must be &gt;= 10% and &lt;= 50%. See
   * https://kubernetes.io/docs/concepts/scheduling-eviction/node-pressure-eviction/#eviction-signals
   * </pre>
   *
   * <code>string pid_available = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for pidAvailable.
   */
  com.google.protobuf.ByteString getPidAvailableBytes();
}
