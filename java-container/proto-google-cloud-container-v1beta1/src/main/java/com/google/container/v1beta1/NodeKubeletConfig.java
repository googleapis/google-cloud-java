/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/container/v1beta1/cluster_service.proto

// Protobuf Java Version: 3.25.8
package com.google.container.v1beta1;

/**
 *
 *
 * <pre>
 * Node kubelet configs.
 * </pre>
 *
 * Protobuf type {@code google.container.v1beta1.NodeKubeletConfig}
 */
public final class NodeKubeletConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.container.v1beta1.NodeKubeletConfig)
    NodeKubeletConfigOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use NodeKubeletConfig.newBuilder() to construct.
  private NodeKubeletConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private NodeKubeletConfig() {
    cpuManagerPolicy_ = "";
    cpuCfsQuotaPeriod_ = "";
    imageMinimumGcAge_ = "";
    imageMaximumGcAge_ = "";
    containerLogMaxSize_ = "";
    allowedUnsafeSysctls_ = com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new NodeKubeletConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.container.v1beta1.ClusterServiceProto
        .internal_static_google_container_v1beta1_NodeKubeletConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.container.v1beta1.ClusterServiceProto
        .internal_static_google_container_v1beta1_NodeKubeletConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.container.v1beta1.NodeKubeletConfig.class,
            com.google.container.v1beta1.NodeKubeletConfig.Builder.class);
  }

  private int bitField0_;
  public static final int CPU_MANAGER_POLICY_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object cpuManagerPolicy_ = "";

  /**
   *
   *
   * <pre>
   * Control the CPU management policy on the node.
   * See
   * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
   *
   * The following values are allowed.
   * * "none": the default, which represents the existing scheduling behavior.
   * * "static": allows pods with certain resource characteristics to be granted
   * increased CPU affinity and exclusivity on the node.
   * The default value is 'none' if unspecified.
   * </pre>
   *
   * <code>string cpu_manager_policy = 1;</code>
   *
   * @return The cpuManagerPolicy.
   */
  @java.lang.Override
  public java.lang.String getCpuManagerPolicy() {
    java.lang.Object ref = cpuManagerPolicy_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cpuManagerPolicy_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Control the CPU management policy on the node.
   * See
   * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
   *
   * The following values are allowed.
   * * "none": the default, which represents the existing scheduling behavior.
   * * "static": allows pods with certain resource characteristics to be granted
   * increased CPU affinity and exclusivity on the node.
   * The default value is 'none' if unspecified.
   * </pre>
   *
   * <code>string cpu_manager_policy = 1;</code>
   *
   * @return The bytes for cpuManagerPolicy.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCpuManagerPolicyBytes() {
    java.lang.Object ref = cpuManagerPolicy_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      cpuManagerPolicy_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOPOLOGY_MANAGER_FIELD_NUMBER = 8;
  private com.google.container.v1beta1.TopologyManager topologyManager_;

  /**
   *
   *
   * <pre>
   * Optional. Controls Topology Manager configuration on the node.
   * For more information, see:
   * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the topologyManager field is set.
   */
  @java.lang.Override
  public boolean hasTopologyManager() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. Controls Topology Manager configuration on the node.
   * For more information, see:
   * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The topologyManager.
   */
  @java.lang.Override
  public com.google.container.v1beta1.TopologyManager getTopologyManager() {
    return topologyManager_ == null
        ? com.google.container.v1beta1.TopologyManager.getDefaultInstance()
        : topologyManager_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Controls Topology Manager configuration on the node.
   * For more information, see:
   * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.container.v1beta1.TopologyManagerOrBuilder getTopologyManagerOrBuilder() {
    return topologyManager_ == null
        ? com.google.container.v1beta1.TopologyManager.getDefaultInstance()
        : topologyManager_;
  }

  public static final int MEMORY_MANAGER_FIELD_NUMBER = 9;
  private com.google.container.v1beta1.MemoryManager memoryManager_;

  /**
   *
   *
   * <pre>
   * Optional. Controls NUMA-aware Memory Manager configuration on the
   * node. For more information, see:
   * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the memoryManager field is set.
   */
  @java.lang.Override
  public boolean hasMemoryManager() {
    return ((bitField0_ & 0x00000002) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. Controls NUMA-aware Memory Manager configuration on the
   * node. For more information, see:
   * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The memoryManager.
   */
  @java.lang.Override
  public com.google.container.v1beta1.MemoryManager getMemoryManager() {
    return memoryManager_ == null
        ? com.google.container.v1beta1.MemoryManager.getDefaultInstance()
        : memoryManager_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Controls NUMA-aware Memory Manager configuration on the
   * node. For more information, see:
   * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.container.v1beta1.MemoryManagerOrBuilder getMemoryManagerOrBuilder() {
    return memoryManager_ == null
        ? com.google.container.v1beta1.MemoryManager.getDefaultInstance()
        : memoryManager_;
  }

  public static final int CPU_CFS_QUOTA_FIELD_NUMBER = 2;
  private com.google.protobuf.BoolValue cpuCfsQuota_;

  /**
   *
   *
   * <pre>
   * Enable CPU CFS quota enforcement for containers that specify CPU limits.
   *
   * This option is enabled by default which makes kubelet use CFS quota
   * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
   * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
   * all.
   *
   * Disable this option to mitigate CPU throttling problems while still having
   * your pods to be in Guaranteed QoS class by specifying the CPU limits.
   *
   * The default value is 'true' if unspecified.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
   *
   * @return Whether the cpuCfsQuota field is set.
   */
  @java.lang.Override
  public boolean hasCpuCfsQuota() {
    return ((bitField0_ & 0x00000004) != 0);
  }

  /**
   *
   *
   * <pre>
   * Enable CPU CFS quota enforcement for containers that specify CPU limits.
   *
   * This option is enabled by default which makes kubelet use CFS quota
   * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
   * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
   * all.
   *
   * Disable this option to mitigate CPU throttling problems while still having
   * your pods to be in Guaranteed QoS class by specifying the CPU limits.
   *
   * The default value is 'true' if unspecified.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
   *
   * @return The cpuCfsQuota.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getCpuCfsQuota() {
    return cpuCfsQuota_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : cpuCfsQuota_;
  }

  /**
   *
   *
   * <pre>
   * Enable CPU CFS quota enforcement for containers that specify CPU limits.
   *
   * This option is enabled by default which makes kubelet use CFS quota
   * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
   * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
   * all.
   *
   * Disable this option to mitigate CPU throttling problems while still having
   * your pods to be in Guaranteed QoS class by specifying the CPU limits.
   *
   * The default value is 'true' if unspecified.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getCpuCfsQuotaOrBuilder() {
    return cpuCfsQuota_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : cpuCfsQuota_;
  }

  public static final int CPU_CFS_QUOTA_PERIOD_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object cpuCfsQuotaPeriod_ = "";

  /**
   *
   *
   * <pre>
   * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
   *
   * The string must be a sequence of decimal numbers, each with optional
   * fraction and a unit suffix, such as "300ms".
   * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   * The value must be a positive duration between 1ms and 1 second, inclusive.
   * </pre>
   *
   * <code>string cpu_cfs_quota_period = 3;</code>
   *
   * @return The cpuCfsQuotaPeriod.
   */
  @java.lang.Override
  public java.lang.String getCpuCfsQuotaPeriod() {
    java.lang.Object ref = cpuCfsQuotaPeriod_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cpuCfsQuotaPeriod_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
   *
   * The string must be a sequence of decimal numbers, each with optional
   * fraction and a unit suffix, such as "300ms".
   * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   * The value must be a positive duration between 1ms and 1 second, inclusive.
   * </pre>
   *
   * <code>string cpu_cfs_quota_period = 3;</code>
   *
   * @return The bytes for cpuCfsQuotaPeriod.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCpuCfsQuotaPeriodBytes() {
    java.lang.Object ref = cpuCfsQuotaPeriod_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      cpuCfsQuotaPeriod_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POD_PIDS_LIMIT_FIELD_NUMBER = 4;
  private long podPidsLimit_ = 0L;

  /**
   *
   *
   * <pre>
   * Set the Pod PID limits. See
   * https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits
   *
   * Controls the maximum number of processes allowed to run in a pod. The value
   * must be greater than or equal to 1024 and less than 4194304.
   * </pre>
   *
   * <code>int64 pod_pids_limit = 4;</code>
   *
   * @return The podPidsLimit.
   */
  @java.lang.Override
  public long getPodPidsLimit() {
    return podPidsLimit_;
  }

  public static final int INSECURE_KUBELET_READONLY_PORT_ENABLED_FIELD_NUMBER = 7;
  private boolean insecureKubeletReadonlyPortEnabled_ = false;

  /**
   *
   *
   * <pre>
   * Enable or disable Kubelet read only port.
   * </pre>
   *
   * <code>optional bool insecure_kubelet_readonly_port_enabled = 7;</code>
   *
   * @return Whether the insecureKubeletReadonlyPortEnabled field is set.
   */
  @java.lang.Override
  public boolean hasInsecureKubeletReadonlyPortEnabled() {
    return ((bitField0_ & 0x00000008) != 0);
  }

  /**
   *
   *
   * <pre>
   * Enable or disable Kubelet read only port.
   * </pre>
   *
   * <code>optional bool insecure_kubelet_readonly_port_enabled = 7;</code>
   *
   * @return The insecureKubeletReadonlyPortEnabled.
   */
  @java.lang.Override
  public boolean getInsecureKubeletReadonlyPortEnabled() {
    return insecureKubeletReadonlyPortEnabled_;
  }

  public static final int IMAGE_GC_LOW_THRESHOLD_PERCENT_FIELD_NUMBER = 10;
  private int imageGcLowThresholdPercent_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Defines the percent of disk usage before which image garbage
   * collection is never run. Lowest disk usage to garbage collect to. The
   * percent is calculated as this field value out of 100.
   *
   * The value must be between 10 and 85, inclusive and smaller than
   * image_gc_high_threshold_percent.
   *
   * The default value is 80 if unspecified.
   * </pre>
   *
   * <code>int32 image_gc_low_threshold_percent = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The imageGcLowThresholdPercent.
   */
  @java.lang.Override
  public int getImageGcLowThresholdPercent() {
    return imageGcLowThresholdPercent_;
  }

  public static final int IMAGE_GC_HIGH_THRESHOLD_PERCENT_FIELD_NUMBER = 11;
  private int imageGcHighThresholdPercent_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Defines the percent of disk usage after which image garbage
   * collection is always run. The percent is calculated as this field value out
   * of 100.
   *
   * The value must be between 10 and 85, inclusive and greater than
   * image_gc_low_threshold_percent.
   *
   * The default value is 85 if unspecified.
   * </pre>
   *
   * <code>int32 image_gc_high_threshold_percent = 11 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The imageGcHighThresholdPercent.
   */
  @java.lang.Override
  public int getImageGcHighThresholdPercent() {
    return imageGcHighThresholdPercent_;
  }

  public static final int IMAGE_MINIMUM_GC_AGE_FIELD_NUMBER = 12;

  @SuppressWarnings("serial")
  private volatile java.lang.Object imageMinimumGcAge_ = "";

  /**
   *
   *
   * <pre>
   * Optional. Defines the minimum age for an unused image before it is garbage
   * collected.
   *
   * The string must be a sequence of decimal numbers, each with optional
   * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
   * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   *
   * The value must be a positive duration less than or equal to 2 minutes.
   *
   * The default value is "2m0s" if unspecified.
   * </pre>
   *
   * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The imageMinimumGcAge.
   */
  @java.lang.Override
  public java.lang.String getImageMinimumGcAge() {
    java.lang.Object ref = imageMinimumGcAge_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      imageMinimumGcAge_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines the minimum age for an unused image before it is garbage
   * collected.
   *
   * The string must be a sequence of decimal numbers, each with optional
   * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
   * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   *
   * The value must be a positive duration less than or equal to 2 minutes.
   *
   * The default value is "2m0s" if unspecified.
   * </pre>
   *
   * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for imageMinimumGcAge.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getImageMinimumGcAgeBytes() {
    java.lang.Object ref = imageMinimumGcAge_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      imageMinimumGcAge_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IMAGE_MAXIMUM_GC_AGE_FIELD_NUMBER = 13;

  @SuppressWarnings("serial")
  private volatile java.lang.Object imageMaximumGcAge_ = "";

  /**
   *
   *
   * <pre>
   * Optional. Defines the maximum age an image can be unused before it is
   * garbage collected. The string must be a sequence of decimal numbers, each
   * with optional fraction and a unit suffix, such as "300s", "1.5h", and
   * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   *
   * The value must be a positive duration greater than image_minimum_gc_age
   * or "0s".
   *
   * The default value is "0s" if unspecified, which disables this field,
   * meaning images won't be garbage collected based on being unused for too
   * long.
   * </pre>
   *
   * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The imageMaximumGcAge.
   */
  @java.lang.Override
  public java.lang.String getImageMaximumGcAge() {
    java.lang.Object ref = imageMaximumGcAge_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      imageMaximumGcAge_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines the maximum age an image can be unused before it is
   * garbage collected. The string must be a sequence of decimal numbers, each
   * with optional fraction and a unit suffix, such as "300s", "1.5h", and
   * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
   *
   * The value must be a positive duration greater than image_minimum_gc_age
   * or "0s".
   *
   * The default value is "0s" if unspecified, which disables this field,
   * meaning images won't be garbage collected based on being unused for too
   * long.
   * </pre>
   *
   * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for imageMaximumGcAge.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getImageMaximumGcAgeBytes() {
    java.lang.Object ref = imageMaximumGcAge_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      imageMaximumGcAge_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTAINER_LOG_MAX_SIZE_FIELD_NUMBER = 14;

  @SuppressWarnings("serial")
  private volatile java.lang.Object containerLogMaxSize_ = "";

  /**
   *
   *
   * <pre>
   * Optional. Defines the maximum size of the container log file before it is
   * rotated. See
   * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
   *
   * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
   * Ki, Mi, Gi.
   * The value must be between 10Mi and 500Mi, inclusive.
   *
   * Note that the total container log size (container_log_max_size *
   * container_log_max_files) cannot exceed 1% of the total
   * storage of the node, to avoid disk pressure caused by log files.
   *
   * The default value is 10Mi if unspecified.
   * </pre>
   *
   * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The containerLogMaxSize.
   */
  @java.lang.Override
  public java.lang.String getContainerLogMaxSize() {
    java.lang.Object ref = containerLogMaxSize_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      containerLogMaxSize_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines the maximum size of the container log file before it is
   * rotated. See
   * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
   *
   * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
   * Ki, Mi, Gi.
   * The value must be between 10Mi and 500Mi, inclusive.
   *
   * Note that the total container log size (container_log_max_size *
   * container_log_max_files) cannot exceed 1% of the total
   * storage of the node, to avoid disk pressure caused by log files.
   *
   * The default value is 10Mi if unspecified.
   * </pre>
   *
   * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for containerLogMaxSize.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getContainerLogMaxSizeBytes() {
    java.lang.Object ref = containerLogMaxSize_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      containerLogMaxSize_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTAINER_LOG_MAX_FILES_FIELD_NUMBER = 15;
  private int containerLogMaxFiles_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Defines the maximum number of container log files that can be
   * present for a container. See
   * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
   *
   * The value must be an integer between 2 and 10, inclusive.
   * The default value is 5 if unspecified.
   * </pre>
   *
   * <code>int32 container_log_max_files = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The containerLogMaxFiles.
   */
  @java.lang.Override
  public int getContainerLogMaxFiles() {
    return containerLogMaxFiles_;
  }

  public static final int ALLOWED_UNSAFE_SYSCTLS_FIELD_NUMBER = 16;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList allowedUnsafeSysctls_ =
      com.google.protobuf.LazyStringArrayList.emptyList();

  /**
   *
   *
   * <pre>
   * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
   * patterns (ending in `*`).
   *
   * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
   * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
   * means they cannot be set on Pods.
   *
   * To allow certain sysctls or sysctl patterns to be set on Pods, list them
   * separated by commas.
   * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
   *
   * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
   * for more details.
   * </pre>
   *
   * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the allowedUnsafeSysctls.
   */
  public com.google.protobuf.ProtocolStringList getAllowedUnsafeSysctlsList() {
    return allowedUnsafeSysctls_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
   * patterns (ending in `*`).
   *
   * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
   * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
   * means they cannot be set on Pods.
   *
   * To allow certain sysctls or sysctl patterns to be set on Pods, list them
   * separated by commas.
   * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
   *
   * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
   * for more details.
   * </pre>
   *
   * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of allowedUnsafeSysctls.
   */
  public int getAllowedUnsafeSysctlsCount() {
    return allowedUnsafeSysctls_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
   * patterns (ending in `*`).
   *
   * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
   * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
   * means they cannot be set on Pods.
   *
   * To allow certain sysctls or sysctl patterns to be set on Pods, list them
   * separated by commas.
   * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
   *
   * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
   * for more details.
   * </pre>
   *
   * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The allowedUnsafeSysctls at the given index.
   */
  public java.lang.String getAllowedUnsafeSysctls(int index) {
    return allowedUnsafeSysctls_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
   * patterns (ending in `*`).
   *
   * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
   * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
   * means they cannot be set on Pods.
   *
   * To allow certain sysctls or sysctl patterns to be set on Pods, list them
   * separated by commas.
   * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
   *
   * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
   * for more details.
   * </pre>
   *
   * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the allowedUnsafeSysctls at the given index.
   */
  public com.google.protobuf.ByteString getAllowedUnsafeSysctlsBytes(int index) {
    return allowedUnsafeSysctls_.getByteString(index);
  }

  public static final int EVICTION_SOFT_FIELD_NUMBER = 17;
  private com.google.container.v1beta1.EvictionSignals evictionSoft_;

  /**
   *
   *
   * <pre>
   * Optional. eviction_soft is a map of signal names to quantities that defines
   * soft eviction thresholds. Each signal is compared to its corresponding
   * threshold to determine if a pod eviction should occur.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the evictionSoft field is set.
   */
  @java.lang.Override
  public boolean hasEvictionSoft() {
    return ((bitField0_ & 0x00000010) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. eviction_soft is a map of signal names to quantities that defines
   * soft eviction thresholds. Each signal is compared to its corresponding
   * threshold to determine if a pod eviction should occur.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The evictionSoft.
   */
  @java.lang.Override
  public com.google.container.v1beta1.EvictionSignals getEvictionSoft() {
    return evictionSoft_ == null
        ? com.google.container.v1beta1.EvictionSignals.getDefaultInstance()
        : evictionSoft_;
  }

  /**
   *
   *
   * <pre>
   * Optional. eviction_soft is a map of signal names to quantities that defines
   * soft eviction thresholds. Each signal is compared to its corresponding
   * threshold to determine if a pod eviction should occur.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.container.v1beta1.EvictionSignalsOrBuilder getEvictionSoftOrBuilder() {
    return evictionSoft_ == null
        ? com.google.container.v1beta1.EvictionSignals.getDefaultInstance()
        : evictionSoft_;
  }

  public static final int EVICTION_SOFT_GRACE_PERIOD_FIELD_NUMBER = 18;
  private com.google.container.v1beta1.EvictionGracePeriod evictionSoftGracePeriod_;

  /**
   *
   *
   * <pre>
   * Optional. eviction_soft_grace_period is a map of signal names to quantities
   * that defines grace periods for each soft eviction signal. The grace period
   * is the amount of time that a pod must be under pressure before an eviction
   * occurs.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the evictionSoftGracePeriod field is set.
   */
  @java.lang.Override
  public boolean hasEvictionSoftGracePeriod() {
    return ((bitField0_ & 0x00000020) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. eviction_soft_grace_period is a map of signal names to quantities
   * that defines grace periods for each soft eviction signal. The grace period
   * is the amount of time that a pod must be under pressure before an eviction
   * occurs.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The evictionSoftGracePeriod.
   */
  @java.lang.Override
  public com.google.container.v1beta1.EvictionGracePeriod getEvictionSoftGracePeriod() {
    return evictionSoftGracePeriod_ == null
        ? com.google.container.v1beta1.EvictionGracePeriod.getDefaultInstance()
        : evictionSoftGracePeriod_;
  }

  /**
   *
   *
   * <pre>
   * Optional. eviction_soft_grace_period is a map of signal names to quantities
   * that defines grace periods for each soft eviction signal. The grace period
   * is the amount of time that a pod must be under pressure before an eviction
   * occurs.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.container.v1beta1.EvictionGracePeriodOrBuilder
      getEvictionSoftGracePeriodOrBuilder() {
    return evictionSoftGracePeriod_ == null
        ? com.google.container.v1beta1.EvictionGracePeriod.getDefaultInstance()
        : evictionSoftGracePeriod_;
  }

  public static final int EVICTION_MINIMUM_RECLAIM_FIELD_NUMBER = 19;
  private com.google.container.v1beta1.EvictionMinimumReclaim evictionMinimumReclaim_;

  /**
   *
   *
   * <pre>
   * Optional. eviction_minimum_reclaim is a map of signal names to quantities
   * that defines minimum reclaims, which describe the minimum amount of a given
   * resource the kubelet will reclaim when performing a pod eviction while that
   * resource is under pressure.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the evictionMinimumReclaim field is set.
   */
  @java.lang.Override
  public boolean hasEvictionMinimumReclaim() {
    return ((bitField0_ & 0x00000040) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. eviction_minimum_reclaim is a map of signal names to quantities
   * that defines minimum reclaims, which describe the minimum amount of a given
   * resource the kubelet will reclaim when performing a pod eviction while that
   * resource is under pressure.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The evictionMinimumReclaim.
   */
  @java.lang.Override
  public com.google.container.v1beta1.EvictionMinimumReclaim getEvictionMinimumReclaim() {
    return evictionMinimumReclaim_ == null
        ? com.google.container.v1beta1.EvictionMinimumReclaim.getDefaultInstance()
        : evictionMinimumReclaim_;
  }

  /**
   *
   *
   * <pre>
   * Optional. eviction_minimum_reclaim is a map of signal names to quantities
   * that defines minimum reclaims, which describe the minimum amount of a given
   * resource the kubelet will reclaim when performing a pod eviction while that
   * resource is under pressure.
   * </pre>
   *
   * <code>
   * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.container.v1beta1.EvictionMinimumReclaimOrBuilder
      getEvictionMinimumReclaimOrBuilder() {
    return evictionMinimumReclaim_ == null
        ? com.google.container.v1beta1.EvictionMinimumReclaim.getDefaultInstance()
        : evictionMinimumReclaim_;
  }

  public static final int EVICTION_MAX_POD_GRACE_PERIOD_SECONDS_FIELD_NUMBER = 20;
  private int evictionMaxPodGracePeriodSeconds_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. eviction_max_pod_grace_period_seconds is the maximum allowed
   * grace period (in seconds) to use when terminating pods in response to a
   * soft eviction threshold being met. This value effectively caps the Pod's
   * terminationGracePeriodSeconds value during soft evictions. Default: 0.
   * Range: [0, 300].
   * </pre>
   *
   * <code>
   * int32 eviction_max_pod_grace_period_seconds = 20 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The evictionMaxPodGracePeriodSeconds.
   */
  @java.lang.Override
  public int getEvictionMaxPodGracePeriodSeconds() {
    return evictionMaxPodGracePeriodSeconds_;
  }

  public static final int MAX_PARALLEL_IMAGE_PULLS_FIELD_NUMBER = 21;
  private int maxParallelImagePulls_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Defines the maximum number of image pulls in parallel.
   * The range is 2 to 5, inclusive.
   * The default value is 2 or 3 depending on the disk type.
   *
   * See
   * https://kubernetes.io/docs/concepts/containers/images/#maximum-parallel-image-pulls
   * for more details.
   * </pre>
   *
   * <code>int32 max_parallel_image_pulls = 21 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxParallelImagePulls.
   */
  @java.lang.Override
  public int getMaxParallelImagePulls() {
    return maxParallelImagePulls_;
  }

  public static final int SINGLE_PROCESS_OOM_KILL_FIELD_NUMBER = 22;
  private boolean singleProcessOomKill_ = false;

  /**
   *
   *
   * <pre>
   * Optional. Defines whether to enable single process OOM killer.
   * If true, will prevent the memory.oom.group flag from being set for
   * container cgroups in cgroups v2. This causes processes in the container to
   * be OOM killed individually instead of as a group.
   * </pre>
   *
   * <code>optional bool single_process_oom_kill = 22 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the singleProcessOomKill field is set.
   */
  @java.lang.Override
  public boolean hasSingleProcessOomKill() {
    return ((bitField0_ & 0x00000080) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. Defines whether to enable single process OOM killer.
   * If true, will prevent the memory.oom.group flag from being set for
   * container cgroups in cgroups v2. This causes processes in the container to
   * be OOM killed individually instead of as a group.
   * </pre>
   *
   * <code>optional bool single_process_oom_kill = 22 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The singleProcessOomKill.
   */
  @java.lang.Override
  public boolean getSingleProcessOomKill() {
    return singleProcessOomKill_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cpuManagerPolicy_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cpuManagerPolicy_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(2, getCpuCfsQuota());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cpuCfsQuotaPeriod_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, cpuCfsQuotaPeriod_);
    }
    if (podPidsLimit_ != 0L) {
      output.writeInt64(4, podPidsLimit_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBool(7, insecureKubeletReadonlyPortEnabled_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(8, getTopologyManager());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(9, getMemoryManager());
    }
    if (imageGcLowThresholdPercent_ != 0) {
      output.writeInt32(10, imageGcLowThresholdPercent_);
    }
    if (imageGcHighThresholdPercent_ != 0) {
      output.writeInt32(11, imageGcHighThresholdPercent_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(imageMinimumGcAge_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, imageMinimumGcAge_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(imageMaximumGcAge_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, imageMaximumGcAge_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(containerLogMaxSize_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, containerLogMaxSize_);
    }
    if (containerLogMaxFiles_ != 0) {
      output.writeInt32(15, containerLogMaxFiles_);
    }
    for (int i = 0; i < allowedUnsafeSysctls_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 16, allowedUnsafeSysctls_.getRaw(i));
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(17, getEvictionSoft());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(18, getEvictionSoftGracePeriod());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(19, getEvictionMinimumReclaim());
    }
    if (evictionMaxPodGracePeriodSeconds_ != 0) {
      output.writeInt32(20, evictionMaxPodGracePeriodSeconds_);
    }
    if (maxParallelImagePulls_ != 0) {
      output.writeInt32(21, maxParallelImagePulls_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(22, singleProcessOomKill_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cpuManagerPolicy_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cpuManagerPolicy_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getCpuCfsQuota());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cpuCfsQuotaPeriod_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, cpuCfsQuotaPeriod_);
    }
    if (podPidsLimit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, podPidsLimit_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              7, insecureKubeletReadonlyPortEnabled_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getTopologyManager());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getMemoryManager());
    }
    if (imageGcLowThresholdPercent_ != 0) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(10, imageGcLowThresholdPercent_);
    }
    if (imageGcHighThresholdPercent_ != 0) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(11, imageGcHighThresholdPercent_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(imageMinimumGcAge_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, imageMinimumGcAge_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(imageMaximumGcAge_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, imageMaximumGcAge_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(containerLogMaxSize_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, containerLogMaxSize_);
    }
    if (containerLogMaxFiles_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(15, containerLogMaxFiles_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < allowedUnsafeSysctls_.size(); i++) {
        dataSize += computeStringSizeNoTag(allowedUnsafeSysctls_.getRaw(i));
      }
      size += dataSize;
      size += 2 * getAllowedUnsafeSysctlsList().size();
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(17, getEvictionSoft());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              18, getEvictionSoftGracePeriod());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(19, getEvictionMinimumReclaim());
    }
    if (evictionMaxPodGracePeriodSeconds_ != 0) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(
              20, evictionMaxPodGracePeriodSeconds_);
    }
    if (maxParallelImagePulls_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(21, maxParallelImagePulls_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(22, singleProcessOomKill_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.container.v1beta1.NodeKubeletConfig)) {
      return super.equals(obj);
    }
    com.google.container.v1beta1.NodeKubeletConfig other =
        (com.google.container.v1beta1.NodeKubeletConfig) obj;

    if (!getCpuManagerPolicy().equals(other.getCpuManagerPolicy())) return false;
    if (hasTopologyManager() != other.hasTopologyManager()) return false;
    if (hasTopologyManager()) {
      if (!getTopologyManager().equals(other.getTopologyManager())) return false;
    }
    if (hasMemoryManager() != other.hasMemoryManager()) return false;
    if (hasMemoryManager()) {
      if (!getMemoryManager().equals(other.getMemoryManager())) return false;
    }
    if (hasCpuCfsQuota() != other.hasCpuCfsQuota()) return false;
    if (hasCpuCfsQuota()) {
      if (!getCpuCfsQuota().equals(other.getCpuCfsQuota())) return false;
    }
    if (!getCpuCfsQuotaPeriod().equals(other.getCpuCfsQuotaPeriod())) return false;
    if (getPodPidsLimit() != other.getPodPidsLimit()) return false;
    if (hasInsecureKubeletReadonlyPortEnabled() != other.hasInsecureKubeletReadonlyPortEnabled())
      return false;
    if (hasInsecureKubeletReadonlyPortEnabled()) {
      if (getInsecureKubeletReadonlyPortEnabled() != other.getInsecureKubeletReadonlyPortEnabled())
        return false;
    }
    if (getImageGcLowThresholdPercent() != other.getImageGcLowThresholdPercent()) return false;
    if (getImageGcHighThresholdPercent() != other.getImageGcHighThresholdPercent()) return false;
    if (!getImageMinimumGcAge().equals(other.getImageMinimumGcAge())) return false;
    if (!getImageMaximumGcAge().equals(other.getImageMaximumGcAge())) return false;
    if (!getContainerLogMaxSize().equals(other.getContainerLogMaxSize())) return false;
    if (getContainerLogMaxFiles() != other.getContainerLogMaxFiles()) return false;
    if (!getAllowedUnsafeSysctlsList().equals(other.getAllowedUnsafeSysctlsList())) return false;
    if (hasEvictionSoft() != other.hasEvictionSoft()) return false;
    if (hasEvictionSoft()) {
      if (!getEvictionSoft().equals(other.getEvictionSoft())) return false;
    }
    if (hasEvictionSoftGracePeriod() != other.hasEvictionSoftGracePeriod()) return false;
    if (hasEvictionSoftGracePeriod()) {
      if (!getEvictionSoftGracePeriod().equals(other.getEvictionSoftGracePeriod())) return false;
    }
    if (hasEvictionMinimumReclaim() != other.hasEvictionMinimumReclaim()) return false;
    if (hasEvictionMinimumReclaim()) {
      if (!getEvictionMinimumReclaim().equals(other.getEvictionMinimumReclaim())) return false;
    }
    if (getEvictionMaxPodGracePeriodSeconds() != other.getEvictionMaxPodGracePeriodSeconds())
      return false;
    if (getMaxParallelImagePulls() != other.getMaxParallelImagePulls()) return false;
    if (hasSingleProcessOomKill() != other.hasSingleProcessOomKill()) return false;
    if (hasSingleProcessOomKill()) {
      if (getSingleProcessOomKill() != other.getSingleProcessOomKill()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CPU_MANAGER_POLICY_FIELD_NUMBER;
    hash = (53 * hash) + getCpuManagerPolicy().hashCode();
    if (hasTopologyManager()) {
      hash = (37 * hash) + TOPOLOGY_MANAGER_FIELD_NUMBER;
      hash = (53 * hash) + getTopologyManager().hashCode();
    }
    if (hasMemoryManager()) {
      hash = (37 * hash) + MEMORY_MANAGER_FIELD_NUMBER;
      hash = (53 * hash) + getMemoryManager().hashCode();
    }
    if (hasCpuCfsQuota()) {
      hash = (37 * hash) + CPU_CFS_QUOTA_FIELD_NUMBER;
      hash = (53 * hash) + getCpuCfsQuota().hashCode();
    }
    hash = (37 * hash) + CPU_CFS_QUOTA_PERIOD_FIELD_NUMBER;
    hash = (53 * hash) + getCpuCfsQuotaPeriod().hashCode();
    hash = (37 * hash) + POD_PIDS_LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getPodPidsLimit());
    if (hasInsecureKubeletReadonlyPortEnabled()) {
      hash = (37 * hash) + INSECURE_KUBELET_READONLY_PORT_ENABLED_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashBoolean(getInsecureKubeletReadonlyPortEnabled());
    }
    hash = (37 * hash) + IMAGE_GC_LOW_THRESHOLD_PERCENT_FIELD_NUMBER;
    hash = (53 * hash) + getImageGcLowThresholdPercent();
    hash = (37 * hash) + IMAGE_GC_HIGH_THRESHOLD_PERCENT_FIELD_NUMBER;
    hash = (53 * hash) + getImageGcHighThresholdPercent();
    hash = (37 * hash) + IMAGE_MINIMUM_GC_AGE_FIELD_NUMBER;
    hash = (53 * hash) + getImageMinimumGcAge().hashCode();
    hash = (37 * hash) + IMAGE_MAXIMUM_GC_AGE_FIELD_NUMBER;
    hash = (53 * hash) + getImageMaximumGcAge().hashCode();
    hash = (37 * hash) + CONTAINER_LOG_MAX_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getContainerLogMaxSize().hashCode();
    hash = (37 * hash) + CONTAINER_LOG_MAX_FILES_FIELD_NUMBER;
    hash = (53 * hash) + getContainerLogMaxFiles();
    if (getAllowedUnsafeSysctlsCount() > 0) {
      hash = (37 * hash) + ALLOWED_UNSAFE_SYSCTLS_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedUnsafeSysctlsList().hashCode();
    }
    if (hasEvictionSoft()) {
      hash = (37 * hash) + EVICTION_SOFT_FIELD_NUMBER;
      hash = (53 * hash) + getEvictionSoft().hashCode();
    }
    if (hasEvictionSoftGracePeriod()) {
      hash = (37 * hash) + EVICTION_SOFT_GRACE_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getEvictionSoftGracePeriod().hashCode();
    }
    if (hasEvictionMinimumReclaim()) {
      hash = (37 * hash) + EVICTION_MINIMUM_RECLAIM_FIELD_NUMBER;
      hash = (53 * hash) + getEvictionMinimumReclaim().hashCode();
    }
    hash = (37 * hash) + EVICTION_MAX_POD_GRACE_PERIOD_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + getEvictionMaxPodGracePeriodSeconds();
    hash = (37 * hash) + MAX_PARALLEL_IMAGE_PULLS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxParallelImagePulls();
    if (hasSingleProcessOomKill()) {
      hash = (37 * hash) + SINGLE_PROCESS_OOM_KILL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getSingleProcessOomKill());
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.container.v1beta1.NodeKubeletConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.container.v1beta1.NodeKubeletConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Node kubelet configs.
   * </pre>
   *
   * Protobuf type {@code google.container.v1beta1.NodeKubeletConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.container.v1beta1.NodeKubeletConfig)
      com.google.container.v1beta1.NodeKubeletConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.container.v1beta1.ClusterServiceProto
          .internal_static_google_container_v1beta1_NodeKubeletConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.container.v1beta1.ClusterServiceProto
          .internal_static_google_container_v1beta1_NodeKubeletConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.container.v1beta1.NodeKubeletConfig.class,
              com.google.container.v1beta1.NodeKubeletConfig.Builder.class);
    }

    // Construct using com.google.container.v1beta1.NodeKubeletConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getTopologyManagerFieldBuilder();
        getMemoryManagerFieldBuilder();
        getCpuCfsQuotaFieldBuilder();
        getEvictionSoftFieldBuilder();
        getEvictionSoftGracePeriodFieldBuilder();
        getEvictionMinimumReclaimFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      cpuManagerPolicy_ = "";
      topologyManager_ = null;
      if (topologyManagerBuilder_ != null) {
        topologyManagerBuilder_.dispose();
        topologyManagerBuilder_ = null;
      }
      memoryManager_ = null;
      if (memoryManagerBuilder_ != null) {
        memoryManagerBuilder_.dispose();
        memoryManagerBuilder_ = null;
      }
      cpuCfsQuota_ = null;
      if (cpuCfsQuotaBuilder_ != null) {
        cpuCfsQuotaBuilder_.dispose();
        cpuCfsQuotaBuilder_ = null;
      }
      cpuCfsQuotaPeriod_ = "";
      podPidsLimit_ = 0L;
      insecureKubeletReadonlyPortEnabled_ = false;
      imageGcLowThresholdPercent_ = 0;
      imageGcHighThresholdPercent_ = 0;
      imageMinimumGcAge_ = "";
      imageMaximumGcAge_ = "";
      containerLogMaxSize_ = "";
      containerLogMaxFiles_ = 0;
      allowedUnsafeSysctls_ = com.google.protobuf.LazyStringArrayList.emptyList();
      evictionSoft_ = null;
      if (evictionSoftBuilder_ != null) {
        evictionSoftBuilder_.dispose();
        evictionSoftBuilder_ = null;
      }
      evictionSoftGracePeriod_ = null;
      if (evictionSoftGracePeriodBuilder_ != null) {
        evictionSoftGracePeriodBuilder_.dispose();
        evictionSoftGracePeriodBuilder_ = null;
      }
      evictionMinimumReclaim_ = null;
      if (evictionMinimumReclaimBuilder_ != null) {
        evictionMinimumReclaimBuilder_.dispose();
        evictionMinimumReclaimBuilder_ = null;
      }
      evictionMaxPodGracePeriodSeconds_ = 0;
      maxParallelImagePulls_ = 0;
      singleProcessOomKill_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.container.v1beta1.ClusterServiceProto
          .internal_static_google_container_v1beta1_NodeKubeletConfig_descriptor;
    }

    @java.lang.Override
    public com.google.container.v1beta1.NodeKubeletConfig getDefaultInstanceForType() {
      return com.google.container.v1beta1.NodeKubeletConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.container.v1beta1.NodeKubeletConfig build() {
      com.google.container.v1beta1.NodeKubeletConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.container.v1beta1.NodeKubeletConfig buildPartial() {
      com.google.container.v1beta1.NodeKubeletConfig result =
          new com.google.container.v1beta1.NodeKubeletConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.container.v1beta1.NodeKubeletConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.cpuManagerPolicy_ = cpuManagerPolicy_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.topologyManager_ =
            topologyManagerBuilder_ == null ? topologyManager_ : topologyManagerBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.memoryManager_ =
            memoryManagerBuilder_ == null ? memoryManager_ : memoryManagerBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.cpuCfsQuota_ =
            cpuCfsQuotaBuilder_ == null ? cpuCfsQuota_ : cpuCfsQuotaBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.cpuCfsQuotaPeriod_ = cpuCfsQuotaPeriod_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.podPidsLimit_ = podPidsLimit_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.insecureKubeletReadonlyPortEnabled_ = insecureKubeletReadonlyPortEnabled_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.imageGcLowThresholdPercent_ = imageGcLowThresholdPercent_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.imageGcHighThresholdPercent_ = imageGcHighThresholdPercent_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.imageMinimumGcAge_ = imageMinimumGcAge_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.imageMaximumGcAge_ = imageMaximumGcAge_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.containerLogMaxSize_ = containerLogMaxSize_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.containerLogMaxFiles_ = containerLogMaxFiles_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        allowedUnsafeSysctls_.makeImmutable();
        result.allowedUnsafeSysctls_ = allowedUnsafeSysctls_;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.evictionSoft_ =
            evictionSoftBuilder_ == null ? evictionSoft_ : evictionSoftBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.evictionSoftGracePeriod_ =
            evictionSoftGracePeriodBuilder_ == null
                ? evictionSoftGracePeriod_
                : evictionSoftGracePeriodBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.evictionMinimumReclaim_ =
            evictionMinimumReclaimBuilder_ == null
                ? evictionMinimumReclaim_
                : evictionMinimumReclaimBuilder_.build();
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.evictionMaxPodGracePeriodSeconds_ = evictionMaxPodGracePeriodSeconds_;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.maxParallelImagePulls_ = maxParallelImagePulls_;
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.singleProcessOomKill_ = singleProcessOomKill_;
        to_bitField0_ |= 0x00000080;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.container.v1beta1.NodeKubeletConfig) {
        return mergeFrom((com.google.container.v1beta1.NodeKubeletConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.container.v1beta1.NodeKubeletConfig other) {
      if (other == com.google.container.v1beta1.NodeKubeletConfig.getDefaultInstance()) return this;
      if (!other.getCpuManagerPolicy().isEmpty()) {
        cpuManagerPolicy_ = other.cpuManagerPolicy_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasTopologyManager()) {
        mergeTopologyManager(other.getTopologyManager());
      }
      if (other.hasMemoryManager()) {
        mergeMemoryManager(other.getMemoryManager());
      }
      if (other.hasCpuCfsQuota()) {
        mergeCpuCfsQuota(other.getCpuCfsQuota());
      }
      if (!other.getCpuCfsQuotaPeriod().isEmpty()) {
        cpuCfsQuotaPeriod_ = other.cpuCfsQuotaPeriod_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getPodPidsLimit() != 0L) {
        setPodPidsLimit(other.getPodPidsLimit());
      }
      if (other.hasInsecureKubeletReadonlyPortEnabled()) {
        setInsecureKubeletReadonlyPortEnabled(other.getInsecureKubeletReadonlyPortEnabled());
      }
      if (other.getImageGcLowThresholdPercent() != 0) {
        setImageGcLowThresholdPercent(other.getImageGcLowThresholdPercent());
      }
      if (other.getImageGcHighThresholdPercent() != 0) {
        setImageGcHighThresholdPercent(other.getImageGcHighThresholdPercent());
      }
      if (!other.getImageMinimumGcAge().isEmpty()) {
        imageMinimumGcAge_ = other.imageMinimumGcAge_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      if (!other.getImageMaximumGcAge().isEmpty()) {
        imageMaximumGcAge_ = other.imageMaximumGcAge_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (!other.getContainerLogMaxSize().isEmpty()) {
        containerLogMaxSize_ = other.containerLogMaxSize_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (other.getContainerLogMaxFiles() != 0) {
        setContainerLogMaxFiles(other.getContainerLogMaxFiles());
      }
      if (!other.allowedUnsafeSysctls_.isEmpty()) {
        if (allowedUnsafeSysctls_.isEmpty()) {
          allowedUnsafeSysctls_ = other.allowedUnsafeSysctls_;
          bitField0_ |= 0x00002000;
        } else {
          ensureAllowedUnsafeSysctlsIsMutable();
          allowedUnsafeSysctls_.addAll(other.allowedUnsafeSysctls_);
        }
        onChanged();
      }
      if (other.hasEvictionSoft()) {
        mergeEvictionSoft(other.getEvictionSoft());
      }
      if (other.hasEvictionSoftGracePeriod()) {
        mergeEvictionSoftGracePeriod(other.getEvictionSoftGracePeriod());
      }
      if (other.hasEvictionMinimumReclaim()) {
        mergeEvictionMinimumReclaim(other.getEvictionMinimumReclaim());
      }
      if (other.getEvictionMaxPodGracePeriodSeconds() != 0) {
        setEvictionMaxPodGracePeriodSeconds(other.getEvictionMaxPodGracePeriodSeconds());
      }
      if (other.getMaxParallelImagePulls() != 0) {
        setMaxParallelImagePulls(other.getMaxParallelImagePulls());
      }
      if (other.hasSingleProcessOomKill()) {
        setSingleProcessOomKill(other.getSingleProcessOomKill());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                cpuManagerPolicy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getCpuCfsQuotaFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 18
            case 26:
              {
                cpuCfsQuotaPeriod_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 26
            case 32:
              {
                podPidsLimit_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 32
            case 56:
              {
                insecureKubeletReadonlyPortEnabled_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            case 66:
              {
                input.readMessage(getTopologyManagerFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 66
            case 74:
              {
                input.readMessage(getMemoryManagerFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 74
            case 80:
              {
                imageGcLowThresholdPercent_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 80
            case 88:
              {
                imageGcHighThresholdPercent_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 88
            case 98:
              {
                imageMinimumGcAge_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000200;
                break;
              } // case 98
            case 106:
              {
                imageMaximumGcAge_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 106
            case 114:
              {
                containerLogMaxSize_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000800;
                break;
              } // case 114
            case 120:
              {
                containerLogMaxFiles_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 120
            case 130:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureAllowedUnsafeSysctlsIsMutable();
                allowedUnsafeSysctls_.add(s);
                break;
              } // case 130
            case 138:
              {
                input.readMessage(getEvictionSoftFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00004000;
                break;
              } // case 138
            case 146:
              {
                input.readMessage(
                    getEvictionSoftGracePeriodFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00008000;
                break;
              } // case 146
            case 154:
              {
                input.readMessage(
                    getEvictionMinimumReclaimFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00010000;
                break;
              } // case 154
            case 160:
              {
                evictionMaxPodGracePeriodSeconds_ = input.readInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 160
            case 168:
              {
                maxParallelImagePulls_ = input.readInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 168
            case 176:
              {
                singleProcessOomKill_ = input.readBool();
                bitField0_ |= 0x00080000;
                break;
              } // case 176
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object cpuManagerPolicy_ = "";

    /**
     *
     *
     * <pre>
     * Control the CPU management policy on the node.
     * See
     * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
     *
     * The following values are allowed.
     * * "none": the default, which represents the existing scheduling behavior.
     * * "static": allows pods with certain resource characteristics to be granted
     * increased CPU affinity and exclusivity on the node.
     * The default value is 'none' if unspecified.
     * </pre>
     *
     * <code>string cpu_manager_policy = 1;</code>
     *
     * @return The cpuManagerPolicy.
     */
    public java.lang.String getCpuManagerPolicy() {
      java.lang.Object ref = cpuManagerPolicy_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cpuManagerPolicy_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Control the CPU management policy on the node.
     * See
     * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
     *
     * The following values are allowed.
     * * "none": the default, which represents the existing scheduling behavior.
     * * "static": allows pods with certain resource characteristics to be granted
     * increased CPU affinity and exclusivity on the node.
     * The default value is 'none' if unspecified.
     * </pre>
     *
     * <code>string cpu_manager_policy = 1;</code>
     *
     * @return The bytes for cpuManagerPolicy.
     */
    public com.google.protobuf.ByteString getCpuManagerPolicyBytes() {
      java.lang.Object ref = cpuManagerPolicy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        cpuManagerPolicy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Control the CPU management policy on the node.
     * See
     * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
     *
     * The following values are allowed.
     * * "none": the default, which represents the existing scheduling behavior.
     * * "static": allows pods with certain resource characteristics to be granted
     * increased CPU affinity and exclusivity on the node.
     * The default value is 'none' if unspecified.
     * </pre>
     *
     * <code>string cpu_manager_policy = 1;</code>
     *
     * @param value The cpuManagerPolicy to set.
     * @return This builder for chaining.
     */
    public Builder setCpuManagerPolicy(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      cpuManagerPolicy_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Control the CPU management policy on the node.
     * See
     * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
     *
     * The following values are allowed.
     * * "none": the default, which represents the existing scheduling behavior.
     * * "static": allows pods with certain resource characteristics to be granted
     * increased CPU affinity and exclusivity on the node.
     * The default value is 'none' if unspecified.
     * </pre>
     *
     * <code>string cpu_manager_policy = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCpuManagerPolicy() {
      cpuManagerPolicy_ = getDefaultInstance().getCpuManagerPolicy();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Control the CPU management policy on the node.
     * See
     * https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
     *
     * The following values are allowed.
     * * "none": the default, which represents the existing scheduling behavior.
     * * "static": allows pods with certain resource characteristics to be granted
     * increased CPU affinity and exclusivity on the node.
     * The default value is 'none' if unspecified.
     * </pre>
     *
     * <code>string cpu_manager_policy = 1;</code>
     *
     * @param value The bytes for cpuManagerPolicy to set.
     * @return This builder for chaining.
     */
    public Builder setCpuManagerPolicyBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      cpuManagerPolicy_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.container.v1beta1.TopologyManager topologyManager_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.TopologyManager,
            com.google.container.v1beta1.TopologyManager.Builder,
            com.google.container.v1beta1.TopologyManagerOrBuilder>
        topologyManagerBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the topologyManager field is set.
     */
    public boolean hasTopologyManager() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The topologyManager.
     */
    public com.google.container.v1beta1.TopologyManager getTopologyManager() {
      if (topologyManagerBuilder_ == null) {
        return topologyManager_ == null
            ? com.google.container.v1beta1.TopologyManager.getDefaultInstance()
            : topologyManager_;
      } else {
        return topologyManagerBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setTopologyManager(com.google.container.v1beta1.TopologyManager value) {
      if (topologyManagerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        topologyManager_ = value;
      } else {
        topologyManagerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setTopologyManager(
        com.google.container.v1beta1.TopologyManager.Builder builderForValue) {
      if (topologyManagerBuilder_ == null) {
        topologyManager_ = builderForValue.build();
      } else {
        topologyManagerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeTopologyManager(com.google.container.v1beta1.TopologyManager value) {
      if (topologyManagerBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && topologyManager_ != null
            && topologyManager_
                != com.google.container.v1beta1.TopologyManager.getDefaultInstance()) {
          getTopologyManagerBuilder().mergeFrom(value);
        } else {
          topologyManager_ = value;
        }
      } else {
        topologyManagerBuilder_.mergeFrom(value);
      }
      if (topologyManager_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearTopologyManager() {
      bitField0_ = (bitField0_ & ~0x00000002);
      topologyManager_ = null;
      if (topologyManagerBuilder_ != null) {
        topologyManagerBuilder_.dispose();
        topologyManagerBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.TopologyManager.Builder getTopologyManagerBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getTopologyManagerFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.TopologyManagerOrBuilder getTopologyManagerOrBuilder() {
      if (topologyManagerBuilder_ != null) {
        return topologyManagerBuilder_.getMessageOrBuilder();
      } else {
        return topologyManager_ == null
            ? com.google.container.v1beta1.TopologyManager.getDefaultInstance()
            : topologyManager_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls Topology Manager configuration on the node.
     * For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/topology-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.TopologyManager topology_manager = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.TopologyManager,
            com.google.container.v1beta1.TopologyManager.Builder,
            com.google.container.v1beta1.TopologyManagerOrBuilder>
        getTopologyManagerFieldBuilder() {
      if (topologyManagerBuilder_ == null) {
        topologyManagerBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.container.v1beta1.TopologyManager,
                com.google.container.v1beta1.TopologyManager.Builder,
                com.google.container.v1beta1.TopologyManagerOrBuilder>(
                getTopologyManager(), getParentForChildren(), isClean());
        topologyManager_ = null;
      }
      return topologyManagerBuilder_;
    }

    private com.google.container.v1beta1.MemoryManager memoryManager_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.MemoryManager,
            com.google.container.v1beta1.MemoryManager.Builder,
            com.google.container.v1beta1.MemoryManagerOrBuilder>
        memoryManagerBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the memoryManager field is set.
     */
    public boolean hasMemoryManager() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The memoryManager.
     */
    public com.google.container.v1beta1.MemoryManager getMemoryManager() {
      if (memoryManagerBuilder_ == null) {
        return memoryManager_ == null
            ? com.google.container.v1beta1.MemoryManager.getDefaultInstance()
            : memoryManager_;
      } else {
        return memoryManagerBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setMemoryManager(com.google.container.v1beta1.MemoryManager value) {
      if (memoryManagerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        memoryManager_ = value;
      } else {
        memoryManagerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setMemoryManager(
        com.google.container.v1beta1.MemoryManager.Builder builderForValue) {
      if (memoryManagerBuilder_ == null) {
        memoryManager_ = builderForValue.build();
      } else {
        memoryManagerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeMemoryManager(com.google.container.v1beta1.MemoryManager value) {
      if (memoryManagerBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && memoryManager_ != null
            && memoryManager_ != com.google.container.v1beta1.MemoryManager.getDefaultInstance()) {
          getMemoryManagerBuilder().mergeFrom(value);
        } else {
          memoryManager_ = value;
        }
      } else {
        memoryManagerBuilder_.mergeFrom(value);
      }
      if (memoryManager_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearMemoryManager() {
      bitField0_ = (bitField0_ & ~0x00000004);
      memoryManager_ = null;
      if (memoryManagerBuilder_ != null) {
        memoryManagerBuilder_.dispose();
        memoryManagerBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.MemoryManager.Builder getMemoryManagerBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getMemoryManagerFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.MemoryManagerOrBuilder getMemoryManagerOrBuilder() {
      if (memoryManagerBuilder_ != null) {
        return memoryManagerBuilder_.getMessageOrBuilder();
      } else {
        return memoryManager_ == null
            ? com.google.container.v1beta1.MemoryManager.getDefaultInstance()
            : memoryManager_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Controls NUMA-aware Memory Manager configuration on the
     * node. For more information, see:
     * https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.MemoryManager memory_manager = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.MemoryManager,
            com.google.container.v1beta1.MemoryManager.Builder,
            com.google.container.v1beta1.MemoryManagerOrBuilder>
        getMemoryManagerFieldBuilder() {
      if (memoryManagerBuilder_ == null) {
        memoryManagerBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.container.v1beta1.MemoryManager,
                com.google.container.v1beta1.MemoryManager.Builder,
                com.google.container.v1beta1.MemoryManagerOrBuilder>(
                getMemoryManager(), getParentForChildren(), isClean());
        memoryManager_ = null;
      }
      return memoryManagerBuilder_;
    }

    private com.google.protobuf.BoolValue cpuCfsQuota_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue,
            com.google.protobuf.BoolValue.Builder,
            com.google.protobuf.BoolValueOrBuilder>
        cpuCfsQuotaBuilder_;

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     *
     * @return Whether the cpuCfsQuota field is set.
     */
    public boolean hasCpuCfsQuota() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     *
     * @return The cpuCfsQuota.
     */
    public com.google.protobuf.BoolValue getCpuCfsQuota() {
      if (cpuCfsQuotaBuilder_ == null) {
        return cpuCfsQuota_ == null
            ? com.google.protobuf.BoolValue.getDefaultInstance()
            : cpuCfsQuota_;
      } else {
        return cpuCfsQuotaBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    public Builder setCpuCfsQuota(com.google.protobuf.BoolValue value) {
      if (cpuCfsQuotaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cpuCfsQuota_ = value;
      } else {
        cpuCfsQuotaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    public Builder setCpuCfsQuota(com.google.protobuf.BoolValue.Builder builderForValue) {
      if (cpuCfsQuotaBuilder_ == null) {
        cpuCfsQuota_ = builderForValue.build();
      } else {
        cpuCfsQuotaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    public Builder mergeCpuCfsQuota(com.google.protobuf.BoolValue value) {
      if (cpuCfsQuotaBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && cpuCfsQuota_ != null
            && cpuCfsQuota_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getCpuCfsQuotaBuilder().mergeFrom(value);
        } else {
          cpuCfsQuota_ = value;
        }
      } else {
        cpuCfsQuotaBuilder_.mergeFrom(value);
      }
      if (cpuCfsQuota_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    public Builder clearCpuCfsQuota() {
      bitField0_ = (bitField0_ & ~0x00000008);
      cpuCfsQuota_ = null;
      if (cpuCfsQuotaBuilder_ != null) {
        cpuCfsQuotaBuilder_.dispose();
        cpuCfsQuotaBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    public com.google.protobuf.BoolValue.Builder getCpuCfsQuotaBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getCpuCfsQuotaFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getCpuCfsQuotaOrBuilder() {
      if (cpuCfsQuotaBuilder_ != null) {
        return cpuCfsQuotaBuilder_.getMessageOrBuilder();
      } else {
        return cpuCfsQuota_ == null
            ? com.google.protobuf.BoolValue.getDefaultInstance()
            : cpuCfsQuota_;
      }
    }

    /**
     *
     *
     * <pre>
     * Enable CPU CFS quota enforcement for containers that specify CPU limits.
     *
     * This option is enabled by default which makes kubelet use CFS quota
     * (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
     * enforce container CPU limits. Otherwise, CPU limits will not be enforced at
     * all.
     *
     * Disable this option to mitigate CPU throttling problems while still having
     * your pods to be in Guaranteed QoS class by specifying the CPU limits.
     *
     * The default value is 'true' if unspecified.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue cpu_cfs_quota = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue,
            com.google.protobuf.BoolValue.Builder,
            com.google.protobuf.BoolValueOrBuilder>
        getCpuCfsQuotaFieldBuilder() {
      if (cpuCfsQuotaBuilder_ == null) {
        cpuCfsQuotaBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue,
                com.google.protobuf.BoolValue.Builder,
                com.google.protobuf.BoolValueOrBuilder>(
                getCpuCfsQuota(), getParentForChildren(), isClean());
        cpuCfsQuota_ = null;
      }
      return cpuCfsQuotaBuilder_;
    }

    private java.lang.Object cpuCfsQuotaPeriod_ = "";

    /**
     *
     *
     * <pre>
     * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300ms".
     * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     * The value must be a positive duration between 1ms and 1 second, inclusive.
     * </pre>
     *
     * <code>string cpu_cfs_quota_period = 3;</code>
     *
     * @return The cpuCfsQuotaPeriod.
     */
    public java.lang.String getCpuCfsQuotaPeriod() {
      java.lang.Object ref = cpuCfsQuotaPeriod_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cpuCfsQuotaPeriod_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300ms".
     * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     * The value must be a positive duration between 1ms and 1 second, inclusive.
     * </pre>
     *
     * <code>string cpu_cfs_quota_period = 3;</code>
     *
     * @return The bytes for cpuCfsQuotaPeriod.
     */
    public com.google.protobuf.ByteString getCpuCfsQuotaPeriodBytes() {
      java.lang.Object ref = cpuCfsQuotaPeriod_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        cpuCfsQuotaPeriod_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300ms".
     * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     * The value must be a positive duration between 1ms and 1 second, inclusive.
     * </pre>
     *
     * <code>string cpu_cfs_quota_period = 3;</code>
     *
     * @param value The cpuCfsQuotaPeriod to set.
     * @return This builder for chaining.
     */
    public Builder setCpuCfsQuotaPeriod(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      cpuCfsQuotaPeriod_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300ms".
     * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     * The value must be a positive duration between 1ms and 1 second, inclusive.
     * </pre>
     *
     * <code>string cpu_cfs_quota_period = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCpuCfsQuotaPeriod() {
      cpuCfsQuotaPeriod_ = getDefaultInstance().getCpuCfsQuotaPeriod();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Set the CPU CFS quota period value 'cpu.cfs_period_us'.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300ms".
     * Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     * The value must be a positive duration between 1ms and 1 second, inclusive.
     * </pre>
     *
     * <code>string cpu_cfs_quota_period = 3;</code>
     *
     * @param value The bytes for cpuCfsQuotaPeriod to set.
     * @return This builder for chaining.
     */
    public Builder setCpuCfsQuotaPeriodBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      cpuCfsQuotaPeriod_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private long podPidsLimit_;

    /**
     *
     *
     * <pre>
     * Set the Pod PID limits. See
     * https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits
     *
     * Controls the maximum number of processes allowed to run in a pod. The value
     * must be greater than or equal to 1024 and less than 4194304.
     * </pre>
     *
     * <code>int64 pod_pids_limit = 4;</code>
     *
     * @return The podPidsLimit.
     */
    @java.lang.Override
    public long getPodPidsLimit() {
      return podPidsLimit_;
    }

    /**
     *
     *
     * <pre>
     * Set the Pod PID limits. See
     * https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits
     *
     * Controls the maximum number of processes allowed to run in a pod. The value
     * must be greater than or equal to 1024 and less than 4194304.
     * </pre>
     *
     * <code>int64 pod_pids_limit = 4;</code>
     *
     * @param value The podPidsLimit to set.
     * @return This builder for chaining.
     */
    public Builder setPodPidsLimit(long value) {

      podPidsLimit_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Set the Pod PID limits. See
     * https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits
     *
     * Controls the maximum number of processes allowed to run in a pod. The value
     * must be greater than or equal to 1024 and less than 4194304.
     * </pre>
     *
     * <code>int64 pod_pids_limit = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPodPidsLimit() {
      bitField0_ = (bitField0_ & ~0x00000020);
      podPidsLimit_ = 0L;
      onChanged();
      return this;
    }

    private boolean insecureKubeletReadonlyPortEnabled_;

    /**
     *
     *
     * <pre>
     * Enable or disable Kubelet read only port.
     * </pre>
     *
     * <code>optional bool insecure_kubelet_readonly_port_enabled = 7;</code>
     *
     * @return Whether the insecureKubeletReadonlyPortEnabled field is set.
     */
    @java.lang.Override
    public boolean hasInsecureKubeletReadonlyPortEnabled() {
      return ((bitField0_ & 0x00000040) != 0);
    }

    /**
     *
     *
     * <pre>
     * Enable or disable Kubelet read only port.
     * </pre>
     *
     * <code>optional bool insecure_kubelet_readonly_port_enabled = 7;</code>
     *
     * @return The insecureKubeletReadonlyPortEnabled.
     */
    @java.lang.Override
    public boolean getInsecureKubeletReadonlyPortEnabled() {
      return insecureKubeletReadonlyPortEnabled_;
    }

    /**
     *
     *
     * <pre>
     * Enable or disable Kubelet read only port.
     * </pre>
     *
     * <code>optional bool insecure_kubelet_readonly_port_enabled = 7;</code>
     *
     * @param value The insecureKubeletReadonlyPortEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setInsecureKubeletReadonlyPortEnabled(boolean value) {

      insecureKubeletReadonlyPortEnabled_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Enable or disable Kubelet read only port.
     * </pre>
     *
     * <code>optional bool insecure_kubelet_readonly_port_enabled = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInsecureKubeletReadonlyPortEnabled() {
      bitField0_ = (bitField0_ & ~0x00000040);
      insecureKubeletReadonlyPortEnabled_ = false;
      onChanged();
      return this;
    }

    private int imageGcLowThresholdPercent_;

    /**
     *
     *
     * <pre>
     * Optional. Defines the percent of disk usage before which image garbage
     * collection is never run. Lowest disk usage to garbage collect to. The
     * percent is calculated as this field value out of 100.
     *
     * The value must be between 10 and 85, inclusive and smaller than
     * image_gc_high_threshold_percent.
     *
     * The default value is 80 if unspecified.
     * </pre>
     *
     * <code>int32 image_gc_low_threshold_percent = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The imageGcLowThresholdPercent.
     */
    @java.lang.Override
    public int getImageGcLowThresholdPercent() {
      return imageGcLowThresholdPercent_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the percent of disk usage before which image garbage
     * collection is never run. Lowest disk usage to garbage collect to. The
     * percent is calculated as this field value out of 100.
     *
     * The value must be between 10 and 85, inclusive and smaller than
     * image_gc_high_threshold_percent.
     *
     * The default value is 80 if unspecified.
     * </pre>
     *
     * <code>int32 image_gc_low_threshold_percent = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The imageGcLowThresholdPercent to set.
     * @return This builder for chaining.
     */
    public Builder setImageGcLowThresholdPercent(int value) {

      imageGcLowThresholdPercent_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the percent of disk usage before which image garbage
     * collection is never run. Lowest disk usage to garbage collect to. The
     * percent is calculated as this field value out of 100.
     *
     * The value must be between 10 and 85, inclusive and smaller than
     * image_gc_high_threshold_percent.
     *
     * The default value is 80 if unspecified.
     * </pre>
     *
     * <code>int32 image_gc_low_threshold_percent = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearImageGcLowThresholdPercent() {
      bitField0_ = (bitField0_ & ~0x00000080);
      imageGcLowThresholdPercent_ = 0;
      onChanged();
      return this;
    }

    private int imageGcHighThresholdPercent_;

    /**
     *
     *
     * <pre>
     * Optional. Defines the percent of disk usage after which image garbage
     * collection is always run. The percent is calculated as this field value out
     * of 100.
     *
     * The value must be between 10 and 85, inclusive and greater than
     * image_gc_low_threshold_percent.
     *
     * The default value is 85 if unspecified.
     * </pre>
     *
     * <code>int32 image_gc_high_threshold_percent = 11 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The imageGcHighThresholdPercent.
     */
    @java.lang.Override
    public int getImageGcHighThresholdPercent() {
      return imageGcHighThresholdPercent_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the percent of disk usage after which image garbage
     * collection is always run. The percent is calculated as this field value out
     * of 100.
     *
     * The value must be between 10 and 85, inclusive and greater than
     * image_gc_low_threshold_percent.
     *
     * The default value is 85 if unspecified.
     * </pre>
     *
     * <code>int32 image_gc_high_threshold_percent = 11 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The imageGcHighThresholdPercent to set.
     * @return This builder for chaining.
     */
    public Builder setImageGcHighThresholdPercent(int value) {

      imageGcHighThresholdPercent_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the percent of disk usage after which image garbage
     * collection is always run. The percent is calculated as this field value out
     * of 100.
     *
     * The value must be between 10 and 85, inclusive and greater than
     * image_gc_low_threshold_percent.
     *
     * The default value is 85 if unspecified.
     * </pre>
     *
     * <code>int32 image_gc_high_threshold_percent = 11 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearImageGcHighThresholdPercent() {
      bitField0_ = (bitField0_ & ~0x00000100);
      imageGcHighThresholdPercent_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object imageMinimumGcAge_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Defines the minimum age for an unused image before it is garbage
     * collected.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
     * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration less than or equal to 2 minutes.
     *
     * The default value is "2m0s" if unspecified.
     * </pre>
     *
     * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The imageMinimumGcAge.
     */
    public java.lang.String getImageMinimumGcAge() {
      java.lang.Object ref = imageMinimumGcAge_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imageMinimumGcAge_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the minimum age for an unused image before it is garbage
     * collected.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
     * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration less than or equal to 2 minutes.
     *
     * The default value is "2m0s" if unspecified.
     * </pre>
     *
     * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for imageMinimumGcAge.
     */
    public com.google.protobuf.ByteString getImageMinimumGcAgeBytes() {
      java.lang.Object ref = imageMinimumGcAge_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        imageMinimumGcAge_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the minimum age for an unused image before it is garbage
     * collected.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
     * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration less than or equal to 2 minutes.
     *
     * The default value is "2m0s" if unspecified.
     * </pre>
     *
     * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The imageMinimumGcAge to set.
     * @return This builder for chaining.
     */
    public Builder setImageMinimumGcAge(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      imageMinimumGcAge_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the minimum age for an unused image before it is garbage
     * collected.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
     * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration less than or equal to 2 minutes.
     *
     * The default value is "2m0s" if unspecified.
     * </pre>
     *
     * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearImageMinimumGcAge() {
      imageMinimumGcAge_ = getDefaultInstance().getImageMinimumGcAge();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the minimum age for an unused image before it is garbage
     * collected.
     *
     * The string must be a sequence of decimal numbers, each with optional
     * fraction and a unit suffix, such as "300s", "1.5h", and "2h45m". Valid time
     * units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration less than or equal to 2 minutes.
     *
     * The default value is "2m0s" if unspecified.
     * </pre>
     *
     * <code>string image_minimum_gc_age = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for imageMinimumGcAge to set.
     * @return This builder for chaining.
     */
    public Builder setImageMinimumGcAgeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      imageMinimumGcAge_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    private java.lang.Object imageMaximumGcAge_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum age an image can be unused before it is
     * garbage collected. The string must be a sequence of decimal numbers, each
     * with optional fraction and a unit suffix, such as "300s", "1.5h", and
     * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration greater than image_minimum_gc_age
     * or "0s".
     *
     * The default value is "0s" if unspecified, which disables this field,
     * meaning images won't be garbage collected based on being unused for too
     * long.
     * </pre>
     *
     * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The imageMaximumGcAge.
     */
    public java.lang.String getImageMaximumGcAge() {
      java.lang.Object ref = imageMaximumGcAge_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imageMaximumGcAge_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum age an image can be unused before it is
     * garbage collected. The string must be a sequence of decimal numbers, each
     * with optional fraction and a unit suffix, such as "300s", "1.5h", and
     * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration greater than image_minimum_gc_age
     * or "0s".
     *
     * The default value is "0s" if unspecified, which disables this field,
     * meaning images won't be garbage collected based on being unused for too
     * long.
     * </pre>
     *
     * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for imageMaximumGcAge.
     */
    public com.google.protobuf.ByteString getImageMaximumGcAgeBytes() {
      java.lang.Object ref = imageMaximumGcAge_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        imageMaximumGcAge_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum age an image can be unused before it is
     * garbage collected. The string must be a sequence of decimal numbers, each
     * with optional fraction and a unit suffix, such as "300s", "1.5h", and
     * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration greater than image_minimum_gc_age
     * or "0s".
     *
     * The default value is "0s" if unspecified, which disables this field,
     * meaning images won't be garbage collected based on being unused for too
     * long.
     * </pre>
     *
     * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The imageMaximumGcAge to set.
     * @return This builder for chaining.
     */
    public Builder setImageMaximumGcAge(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      imageMaximumGcAge_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum age an image can be unused before it is
     * garbage collected. The string must be a sequence of decimal numbers, each
     * with optional fraction and a unit suffix, such as "300s", "1.5h", and
     * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration greater than image_minimum_gc_age
     * or "0s".
     *
     * The default value is "0s" if unspecified, which disables this field,
     * meaning images won't be garbage collected based on being unused for too
     * long.
     * </pre>
     *
     * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearImageMaximumGcAge() {
      imageMaximumGcAge_ = getDefaultInstance().getImageMaximumGcAge();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum age an image can be unused before it is
     * garbage collected. The string must be a sequence of decimal numbers, each
     * with optional fraction and a unit suffix, such as "300s", "1.5h", and
     * "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
     *
     * The value must be a positive duration greater than image_minimum_gc_age
     * or "0s".
     *
     * The default value is "0s" if unspecified, which disables this field,
     * meaning images won't be garbage collected based on being unused for too
     * long.
     * </pre>
     *
     * <code>string image_maximum_gc_age = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for imageMaximumGcAge to set.
     * @return This builder for chaining.
     */
    public Builder setImageMaximumGcAgeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      imageMaximumGcAge_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private java.lang.Object containerLogMaxSize_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum size of the container log file before it is
     * rotated. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
     * Ki, Mi, Gi.
     * The value must be between 10Mi and 500Mi, inclusive.
     *
     * Note that the total container log size (container_log_max_size *
     * container_log_max_files) cannot exceed 1% of the total
     * storage of the node, to avoid disk pressure caused by log files.
     *
     * The default value is 10Mi if unspecified.
     * </pre>
     *
     * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The containerLogMaxSize.
     */
    public java.lang.String getContainerLogMaxSize() {
      java.lang.Object ref = containerLogMaxSize_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        containerLogMaxSize_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum size of the container log file before it is
     * rotated. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
     * Ki, Mi, Gi.
     * The value must be between 10Mi and 500Mi, inclusive.
     *
     * Note that the total container log size (container_log_max_size *
     * container_log_max_files) cannot exceed 1% of the total
     * storage of the node, to avoid disk pressure caused by log files.
     *
     * The default value is 10Mi if unspecified.
     * </pre>
     *
     * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for containerLogMaxSize.
     */
    public com.google.protobuf.ByteString getContainerLogMaxSizeBytes() {
      java.lang.Object ref = containerLogMaxSize_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        containerLogMaxSize_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum size of the container log file before it is
     * rotated. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
     * Ki, Mi, Gi.
     * The value must be between 10Mi and 500Mi, inclusive.
     *
     * Note that the total container log size (container_log_max_size *
     * container_log_max_files) cannot exceed 1% of the total
     * storage of the node, to avoid disk pressure caused by log files.
     *
     * The default value is 10Mi if unspecified.
     * </pre>
     *
     * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The containerLogMaxSize to set.
     * @return This builder for chaining.
     */
    public Builder setContainerLogMaxSize(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      containerLogMaxSize_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum size of the container log file before it is
     * rotated. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
     * Ki, Mi, Gi.
     * The value must be between 10Mi and 500Mi, inclusive.
     *
     * Note that the total container log size (container_log_max_size *
     * container_log_max_files) cannot exceed 1% of the total
     * storage of the node, to avoid disk pressure caused by log files.
     *
     * The default value is 10Mi if unspecified.
     * </pre>
     *
     * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearContainerLogMaxSize() {
      containerLogMaxSize_ = getDefaultInstance().getContainerLogMaxSize();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum size of the container log file before it is
     * rotated. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * Valid format is positive number + unit, e.g. 100Ki, 10Mi. Valid units are
     * Ki, Mi, Gi.
     * The value must be between 10Mi and 500Mi, inclusive.
     *
     * Note that the total container log size (container_log_max_size *
     * container_log_max_files) cannot exceed 1% of the total
     * storage of the node, to avoid disk pressure caused by log files.
     *
     * The default value is 10Mi if unspecified.
     * </pre>
     *
     * <code>string container_log_max_size = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for containerLogMaxSize to set.
     * @return This builder for chaining.
     */
    public Builder setContainerLogMaxSizeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      containerLogMaxSize_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private int containerLogMaxFiles_;

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum number of container log files that can be
     * present for a container. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * The value must be an integer between 2 and 10, inclusive.
     * The default value is 5 if unspecified.
     * </pre>
     *
     * <code>int32 container_log_max_files = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The containerLogMaxFiles.
     */
    @java.lang.Override
    public int getContainerLogMaxFiles() {
      return containerLogMaxFiles_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum number of container log files that can be
     * present for a container. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * The value must be an integer between 2 and 10, inclusive.
     * The default value is 5 if unspecified.
     * </pre>
     *
     * <code>int32 container_log_max_files = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The containerLogMaxFiles to set.
     * @return This builder for chaining.
     */
    public Builder setContainerLogMaxFiles(int value) {

      containerLogMaxFiles_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum number of container log files that can be
     * present for a container. See
     * https://kubernetes.io/docs/concepts/cluster-administration/logging/#log-rotation
     *
     * The value must be an integer between 2 and 10, inclusive.
     * The default value is 5 if unspecified.
     * </pre>
     *
     * <code>int32 container_log_max_files = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearContainerLogMaxFiles() {
      bitField0_ = (bitField0_ & ~0x00001000);
      containerLogMaxFiles_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList allowedUnsafeSysctls_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureAllowedUnsafeSysctlsIsMutable() {
      if (!allowedUnsafeSysctls_.isModifiable()) {
        allowedUnsafeSysctls_ = new com.google.protobuf.LazyStringArrayList(allowedUnsafeSysctls_);
      }
      bitField0_ |= 0x00002000;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the allowedUnsafeSysctls.
     */
    public com.google.protobuf.ProtocolStringList getAllowedUnsafeSysctlsList() {
      allowedUnsafeSysctls_.makeImmutable();
      return allowedUnsafeSysctls_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The count of allowedUnsafeSysctls.
     */
    public int getAllowedUnsafeSysctlsCount() {
      return allowedUnsafeSysctls_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the element to return.
     * @return The allowedUnsafeSysctls at the given index.
     */
    public java.lang.String getAllowedUnsafeSysctls(int index) {
      return allowedUnsafeSysctls_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the allowedUnsafeSysctls at the given index.
     */
    public com.google.protobuf.ByteString getAllowedUnsafeSysctlsBytes(int index) {
      return allowedUnsafeSysctls_.getByteString(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The allowedUnsafeSysctls to set.
     * @return This builder for chaining.
     */
    public Builder setAllowedUnsafeSysctls(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAllowedUnsafeSysctlsIsMutable();
      allowedUnsafeSysctls_.set(index, value);
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The allowedUnsafeSysctls to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedUnsafeSysctls(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAllowedUnsafeSysctlsIsMutable();
      allowedUnsafeSysctls_.add(value);
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The allowedUnsafeSysctls to add.
     * @return This builder for chaining.
     */
    public Builder addAllAllowedUnsafeSysctls(java.lang.Iterable<java.lang.String> values) {
      ensureAllowedUnsafeSysctlsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, allowedUnsafeSysctls_);
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAllowedUnsafeSysctls() {
      allowedUnsafeSysctls_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00002000);
      ;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines a comma-separated allowlist of unsafe sysctls or sysctl
     * patterns (ending in `*`).
     *
     * The unsafe namespaced sysctl groups are `kernel.shm*`, `kernel.msg*`,
     * `kernel.sem`, `fs.mqueue.*`, and `net.*`. Leaving this allowlist empty
     * means they cannot be set on Pods.
     *
     * To allow certain sysctls or sysctl patterns to be set on Pods, list them
     * separated by commas.
     * For example: `kernel.msg*,net.ipv4.route.min_pmtu`.
     *
     * See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/
     * for more details.
     * </pre>
     *
     * <code>repeated string allowed_unsafe_sysctls = 16 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The bytes of the allowedUnsafeSysctls to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedUnsafeSysctlsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureAllowedUnsafeSysctlsIsMutable();
      allowedUnsafeSysctls_.add(value);
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }

    private com.google.container.v1beta1.EvictionSignals evictionSoft_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.EvictionSignals,
            com.google.container.v1beta1.EvictionSignals.Builder,
            com.google.container.v1beta1.EvictionSignalsOrBuilder>
        evictionSoftBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the evictionSoft field is set.
     */
    public boolean hasEvictionSoft() {
      return ((bitField0_ & 0x00004000) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The evictionSoft.
     */
    public com.google.container.v1beta1.EvictionSignals getEvictionSoft() {
      if (evictionSoftBuilder_ == null) {
        return evictionSoft_ == null
            ? com.google.container.v1beta1.EvictionSignals.getDefaultInstance()
            : evictionSoft_;
      } else {
        return evictionSoftBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setEvictionSoft(com.google.container.v1beta1.EvictionSignals value) {
      if (evictionSoftBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        evictionSoft_ = value;
      } else {
        evictionSoftBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setEvictionSoft(
        com.google.container.v1beta1.EvictionSignals.Builder builderForValue) {
      if (evictionSoftBuilder_ == null) {
        evictionSoft_ = builderForValue.build();
      } else {
        evictionSoftBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeEvictionSoft(com.google.container.v1beta1.EvictionSignals value) {
      if (evictionSoftBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)
            && evictionSoft_ != null
            && evictionSoft_ != com.google.container.v1beta1.EvictionSignals.getDefaultInstance()) {
          getEvictionSoftBuilder().mergeFrom(value);
        } else {
          evictionSoft_ = value;
        }
      } else {
        evictionSoftBuilder_.mergeFrom(value);
      }
      if (evictionSoft_ != null) {
        bitField0_ |= 0x00004000;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearEvictionSoft() {
      bitField0_ = (bitField0_ & ~0x00004000);
      evictionSoft_ = null;
      if (evictionSoftBuilder_ != null) {
        evictionSoftBuilder_.dispose();
        evictionSoftBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.EvictionSignals.Builder getEvictionSoftBuilder() {
      bitField0_ |= 0x00004000;
      onChanged();
      return getEvictionSoftFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.EvictionSignalsOrBuilder getEvictionSoftOrBuilder() {
      if (evictionSoftBuilder_ != null) {
        return evictionSoftBuilder_.getMessageOrBuilder();
      } else {
        return evictionSoft_ == null
            ? com.google.container.v1beta1.EvictionSignals.getDefaultInstance()
            : evictionSoft_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft is a map of signal names to quantities that defines
     * soft eviction thresholds. Each signal is compared to its corresponding
     * threshold to determine if a pod eviction should occur.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionSignals eviction_soft = 17 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.EvictionSignals,
            com.google.container.v1beta1.EvictionSignals.Builder,
            com.google.container.v1beta1.EvictionSignalsOrBuilder>
        getEvictionSoftFieldBuilder() {
      if (evictionSoftBuilder_ == null) {
        evictionSoftBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.container.v1beta1.EvictionSignals,
                com.google.container.v1beta1.EvictionSignals.Builder,
                com.google.container.v1beta1.EvictionSignalsOrBuilder>(
                getEvictionSoft(), getParentForChildren(), isClean());
        evictionSoft_ = null;
      }
      return evictionSoftBuilder_;
    }

    private com.google.container.v1beta1.EvictionGracePeriod evictionSoftGracePeriod_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.EvictionGracePeriod,
            com.google.container.v1beta1.EvictionGracePeriod.Builder,
            com.google.container.v1beta1.EvictionGracePeriodOrBuilder>
        evictionSoftGracePeriodBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the evictionSoftGracePeriod field is set.
     */
    public boolean hasEvictionSoftGracePeriod() {
      return ((bitField0_ & 0x00008000) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The evictionSoftGracePeriod.
     */
    public com.google.container.v1beta1.EvictionGracePeriod getEvictionSoftGracePeriod() {
      if (evictionSoftGracePeriodBuilder_ == null) {
        return evictionSoftGracePeriod_ == null
            ? com.google.container.v1beta1.EvictionGracePeriod.getDefaultInstance()
            : evictionSoftGracePeriod_;
      } else {
        return evictionSoftGracePeriodBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setEvictionSoftGracePeriod(
        com.google.container.v1beta1.EvictionGracePeriod value) {
      if (evictionSoftGracePeriodBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        evictionSoftGracePeriod_ = value;
      } else {
        evictionSoftGracePeriodBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setEvictionSoftGracePeriod(
        com.google.container.v1beta1.EvictionGracePeriod.Builder builderForValue) {
      if (evictionSoftGracePeriodBuilder_ == null) {
        evictionSoftGracePeriod_ = builderForValue.build();
      } else {
        evictionSoftGracePeriodBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeEvictionSoftGracePeriod(
        com.google.container.v1beta1.EvictionGracePeriod value) {
      if (evictionSoftGracePeriodBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0)
            && evictionSoftGracePeriod_ != null
            && evictionSoftGracePeriod_
                != com.google.container.v1beta1.EvictionGracePeriod.getDefaultInstance()) {
          getEvictionSoftGracePeriodBuilder().mergeFrom(value);
        } else {
          evictionSoftGracePeriod_ = value;
        }
      } else {
        evictionSoftGracePeriodBuilder_.mergeFrom(value);
      }
      if (evictionSoftGracePeriod_ != null) {
        bitField0_ |= 0x00008000;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearEvictionSoftGracePeriod() {
      bitField0_ = (bitField0_ & ~0x00008000);
      evictionSoftGracePeriod_ = null;
      if (evictionSoftGracePeriodBuilder_ != null) {
        evictionSoftGracePeriodBuilder_.dispose();
        evictionSoftGracePeriodBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.EvictionGracePeriod.Builder
        getEvictionSoftGracePeriodBuilder() {
      bitField0_ |= 0x00008000;
      onChanged();
      return getEvictionSoftGracePeriodFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.EvictionGracePeriodOrBuilder
        getEvictionSoftGracePeriodOrBuilder() {
      if (evictionSoftGracePeriodBuilder_ != null) {
        return evictionSoftGracePeriodBuilder_.getMessageOrBuilder();
      } else {
        return evictionSoftGracePeriod_ == null
            ? com.google.container.v1beta1.EvictionGracePeriod.getDefaultInstance()
            : evictionSoftGracePeriod_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_soft_grace_period is a map of signal names to quantities
     * that defines grace periods for each soft eviction signal. The grace period
     * is the amount of time that a pod must be under pressure before an eviction
     * occurs.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionGracePeriod eviction_soft_grace_period = 18 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.EvictionGracePeriod,
            com.google.container.v1beta1.EvictionGracePeriod.Builder,
            com.google.container.v1beta1.EvictionGracePeriodOrBuilder>
        getEvictionSoftGracePeriodFieldBuilder() {
      if (evictionSoftGracePeriodBuilder_ == null) {
        evictionSoftGracePeriodBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.container.v1beta1.EvictionGracePeriod,
                com.google.container.v1beta1.EvictionGracePeriod.Builder,
                com.google.container.v1beta1.EvictionGracePeriodOrBuilder>(
                getEvictionSoftGracePeriod(), getParentForChildren(), isClean());
        evictionSoftGracePeriod_ = null;
      }
      return evictionSoftGracePeriodBuilder_;
    }

    private com.google.container.v1beta1.EvictionMinimumReclaim evictionMinimumReclaim_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.EvictionMinimumReclaim,
            com.google.container.v1beta1.EvictionMinimumReclaim.Builder,
            com.google.container.v1beta1.EvictionMinimumReclaimOrBuilder>
        evictionMinimumReclaimBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the evictionMinimumReclaim field is set.
     */
    public boolean hasEvictionMinimumReclaim() {
      return ((bitField0_ & 0x00010000) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The evictionMinimumReclaim.
     */
    public com.google.container.v1beta1.EvictionMinimumReclaim getEvictionMinimumReclaim() {
      if (evictionMinimumReclaimBuilder_ == null) {
        return evictionMinimumReclaim_ == null
            ? com.google.container.v1beta1.EvictionMinimumReclaim.getDefaultInstance()
            : evictionMinimumReclaim_;
      } else {
        return evictionMinimumReclaimBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setEvictionMinimumReclaim(
        com.google.container.v1beta1.EvictionMinimumReclaim value) {
      if (evictionMinimumReclaimBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        evictionMinimumReclaim_ = value;
      } else {
        evictionMinimumReclaimBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setEvictionMinimumReclaim(
        com.google.container.v1beta1.EvictionMinimumReclaim.Builder builderForValue) {
      if (evictionMinimumReclaimBuilder_ == null) {
        evictionMinimumReclaim_ = builderForValue.build();
      } else {
        evictionMinimumReclaimBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeEvictionMinimumReclaim(
        com.google.container.v1beta1.EvictionMinimumReclaim value) {
      if (evictionMinimumReclaimBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0)
            && evictionMinimumReclaim_ != null
            && evictionMinimumReclaim_
                != com.google.container.v1beta1.EvictionMinimumReclaim.getDefaultInstance()) {
          getEvictionMinimumReclaimBuilder().mergeFrom(value);
        } else {
          evictionMinimumReclaim_ = value;
        }
      } else {
        evictionMinimumReclaimBuilder_.mergeFrom(value);
      }
      if (evictionMinimumReclaim_ != null) {
        bitField0_ |= 0x00010000;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearEvictionMinimumReclaim() {
      bitField0_ = (bitField0_ & ~0x00010000);
      evictionMinimumReclaim_ = null;
      if (evictionMinimumReclaimBuilder_ != null) {
        evictionMinimumReclaimBuilder_.dispose();
        evictionMinimumReclaimBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.EvictionMinimumReclaim.Builder
        getEvictionMinimumReclaimBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getEvictionMinimumReclaimFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.container.v1beta1.EvictionMinimumReclaimOrBuilder
        getEvictionMinimumReclaimOrBuilder() {
      if (evictionMinimumReclaimBuilder_ != null) {
        return evictionMinimumReclaimBuilder_.getMessageOrBuilder();
      } else {
        return evictionMinimumReclaim_ == null
            ? com.google.container.v1beta1.EvictionMinimumReclaim.getDefaultInstance()
            : evictionMinimumReclaim_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_minimum_reclaim is a map of signal names to quantities
     * that defines minimum reclaims, which describe the minimum amount of a given
     * resource the kubelet will reclaim when performing a pod eviction while that
     * resource is under pressure.
     * </pre>
     *
     * <code>
     * .google.container.v1beta1.EvictionMinimumReclaim eviction_minimum_reclaim = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.container.v1beta1.EvictionMinimumReclaim,
            com.google.container.v1beta1.EvictionMinimumReclaim.Builder,
            com.google.container.v1beta1.EvictionMinimumReclaimOrBuilder>
        getEvictionMinimumReclaimFieldBuilder() {
      if (evictionMinimumReclaimBuilder_ == null) {
        evictionMinimumReclaimBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.container.v1beta1.EvictionMinimumReclaim,
                com.google.container.v1beta1.EvictionMinimumReclaim.Builder,
                com.google.container.v1beta1.EvictionMinimumReclaimOrBuilder>(
                getEvictionMinimumReclaim(), getParentForChildren(), isClean());
        evictionMinimumReclaim_ = null;
      }
      return evictionMinimumReclaimBuilder_;
    }

    private int evictionMaxPodGracePeriodSeconds_;

    /**
     *
     *
     * <pre>
     * Optional. eviction_max_pod_grace_period_seconds is the maximum allowed
     * grace period (in seconds) to use when terminating pods in response to a
     * soft eviction threshold being met. This value effectively caps the Pod's
     * terminationGracePeriodSeconds value during soft evictions. Default: 0.
     * Range: [0, 300].
     * </pre>
     *
     * <code>
     * int32 eviction_max_pod_grace_period_seconds = 20 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The evictionMaxPodGracePeriodSeconds.
     */
    @java.lang.Override
    public int getEvictionMaxPodGracePeriodSeconds() {
      return evictionMaxPodGracePeriodSeconds_;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_max_pod_grace_period_seconds is the maximum allowed
     * grace period (in seconds) to use when terminating pods in response to a
     * soft eviction threshold being met. This value effectively caps the Pod's
     * terminationGracePeriodSeconds value during soft evictions. Default: 0.
     * Range: [0, 300].
     * </pre>
     *
     * <code>
     * int32 eviction_max_pod_grace_period_seconds = 20 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The evictionMaxPodGracePeriodSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setEvictionMaxPodGracePeriodSeconds(int value) {

      evictionMaxPodGracePeriodSeconds_ = value;
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. eviction_max_pod_grace_period_seconds is the maximum allowed
     * grace period (in seconds) to use when terminating pods in response to a
     * soft eviction threshold being met. This value effectively caps the Pod's
     * terminationGracePeriodSeconds value during soft evictions. Default: 0.
     * Range: [0, 300].
     * </pre>
     *
     * <code>
     * int32 eviction_max_pod_grace_period_seconds = 20 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEvictionMaxPodGracePeriodSeconds() {
      bitField0_ = (bitField0_ & ~0x00020000);
      evictionMaxPodGracePeriodSeconds_ = 0;
      onChanged();
      return this;
    }

    private int maxParallelImagePulls_;

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum number of image pulls in parallel.
     * The range is 2 to 5, inclusive.
     * The default value is 2 or 3 depending on the disk type.
     *
     * See
     * https://kubernetes.io/docs/concepts/containers/images/#maximum-parallel-image-pulls
     * for more details.
     * </pre>
     *
     * <code>int32 max_parallel_image_pulls = 21 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The maxParallelImagePulls.
     */
    @java.lang.Override
    public int getMaxParallelImagePulls() {
      return maxParallelImagePulls_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum number of image pulls in parallel.
     * The range is 2 to 5, inclusive.
     * The default value is 2 or 3 depending on the disk type.
     *
     * See
     * https://kubernetes.io/docs/concepts/containers/images/#maximum-parallel-image-pulls
     * for more details.
     * </pre>
     *
     * <code>int32 max_parallel_image_pulls = 21 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The maxParallelImagePulls to set.
     * @return This builder for chaining.
     */
    public Builder setMaxParallelImagePulls(int value) {

      maxParallelImagePulls_ = value;
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines the maximum number of image pulls in parallel.
     * The range is 2 to 5, inclusive.
     * The default value is 2 or 3 depending on the disk type.
     *
     * See
     * https://kubernetes.io/docs/concepts/containers/images/#maximum-parallel-image-pulls
     * for more details.
     * </pre>
     *
     * <code>int32 max_parallel_image_pulls = 21 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxParallelImagePulls() {
      bitField0_ = (bitField0_ & ~0x00040000);
      maxParallelImagePulls_ = 0;
      onChanged();
      return this;
    }

    private boolean singleProcessOomKill_;

    /**
     *
     *
     * <pre>
     * Optional. Defines whether to enable single process OOM killer.
     * If true, will prevent the memory.oom.group flag from being set for
     * container cgroups in cgroups v2. This causes processes in the container to
     * be OOM killed individually instead of as a group.
     * </pre>
     *
     * <code>optional bool single_process_oom_kill = 22 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the singleProcessOomKill field is set.
     */
    @java.lang.Override
    public boolean hasSingleProcessOomKill() {
      return ((bitField0_ & 0x00080000) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines whether to enable single process OOM killer.
     * If true, will prevent the memory.oom.group flag from being set for
     * container cgroups in cgroups v2. This causes processes in the container to
     * be OOM killed individually instead of as a group.
     * </pre>
     *
     * <code>optional bool single_process_oom_kill = 22 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The singleProcessOomKill.
     */
    @java.lang.Override
    public boolean getSingleProcessOomKill() {
      return singleProcessOomKill_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines whether to enable single process OOM killer.
     * If true, will prevent the memory.oom.group flag from being set for
     * container cgroups in cgroups v2. This causes processes in the container to
     * be OOM killed individually instead of as a group.
     * </pre>
     *
     * <code>optional bool single_process_oom_kill = 22 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The singleProcessOomKill to set.
     * @return This builder for chaining.
     */
    public Builder setSingleProcessOomKill(boolean value) {

      singleProcessOomKill_ = value;
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Defines whether to enable single process OOM killer.
     * If true, will prevent the memory.oom.group flag from being set for
     * container cgroups in cgroups v2. This causes processes in the container to
     * be OOM killed individually instead of as a group.
     * </pre>
     *
     * <code>optional bool single_process_oom_kill = 22 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSingleProcessOomKill() {
      bitField0_ = (bitField0_ & ~0x00080000);
      singleProcessOomKill_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.container.v1beta1.NodeKubeletConfig)
  }

  // @@protoc_insertion_point(class_scope:google.container.v1beta1.NodeKubeletConfig)
  private static final com.google.container.v1beta1.NodeKubeletConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.container.v1beta1.NodeKubeletConfig();
  }

  public static com.google.container.v1beta1.NodeKubeletConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NodeKubeletConfig> PARSER =
      new com.google.protobuf.AbstractParser<NodeKubeletConfig>() {
        @java.lang.Override
        public NodeKubeletConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<NodeKubeletConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NodeKubeletConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.container.v1beta1.NodeKubeletConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
