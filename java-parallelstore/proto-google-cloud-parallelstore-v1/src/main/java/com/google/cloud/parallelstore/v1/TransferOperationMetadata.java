/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/parallelstore/v1/parallelstore.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.parallelstore.v1;

/**
 *
 *
 * <pre>
 * Long-running operation metadata related to a data transfer.
 * </pre>
 *
 * Protobuf type {@code google.cloud.parallelstore.v1.TransferOperationMetadata}
 */
public final class TransferOperationMetadata extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.parallelstore.v1.TransferOperationMetadata)
    TransferOperationMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use TransferOperationMetadata.newBuilder() to construct.
  private TransferOperationMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private TransferOperationMetadata() {
    transferType_ = 0;
    errorSummary_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new TransferOperationMetadata();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.parallelstore.v1.ParallelstoreProto
        .internal_static_google_cloud_parallelstore_v1_TransferOperationMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.parallelstore.v1.ParallelstoreProto
        .internal_static_google_cloud_parallelstore_v1_TransferOperationMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.parallelstore.v1.TransferOperationMetadata.class,
            com.google.cloud.parallelstore.v1.TransferOperationMetadata.Builder.class);
  }

  private int bitField0_;
  private int sourceCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object source_;

  public enum SourceCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SOURCE_PARALLELSTORE(7),
    SOURCE_GCS_BUCKET(8),
    SOURCE_NOT_SET(0);
    private final int value;

    private SourceCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static SourceCase forNumber(int value) {
      switch (value) {
        case 7:
          return SOURCE_PARALLELSTORE;
        case 8:
          return SOURCE_GCS_BUCKET;
        case 0:
          return SOURCE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public SourceCase getSourceCase() {
    return SourceCase.forNumber(sourceCase_);
  }

  private int destinationCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object destination_;

  public enum DestinationCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    DESTINATION_GCS_BUCKET(9),
    DESTINATION_PARALLELSTORE(10),
    DESTINATION_NOT_SET(0);
    private final int value;

    private DestinationCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DestinationCase valueOf(int value) {
      return forNumber(value);
    }

    public static DestinationCase forNumber(int value) {
      switch (value) {
        case 9:
          return DESTINATION_GCS_BUCKET;
        case 10:
          return DESTINATION_PARALLELSTORE;
        case 0:
          return DESTINATION_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public DestinationCase getDestinationCase() {
    return DestinationCase.forNumber(destinationCase_);
  }

  public static final int SOURCE_PARALLELSTORE_FIELD_NUMBER = 7;
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the sourceParallelstore field is set.
   */
  @java.lang.Override
  public boolean hasSourceParallelstore() {
    return sourceCase_ == 7;
  }
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The sourceParallelstore.
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.SourceParallelstore getSourceParallelstore() {
    if (sourceCase_ == 7) {
      return (com.google.cloud.parallelstore.v1.SourceParallelstore) source_;
    }
    return com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.SourceParallelstoreOrBuilder
      getSourceParallelstoreOrBuilder() {
    if (sourceCase_ == 7) {
      return (com.google.cloud.parallelstore.v1.SourceParallelstore) source_;
    }
    return com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance();
  }

  public static final int SOURCE_GCS_BUCKET_FIELD_NUMBER = 8;
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the sourceGcsBucket field is set.
   */
  @java.lang.Override
  public boolean hasSourceGcsBucket() {
    return sourceCase_ == 8;
  }
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The sourceGcsBucket.
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.SourceGcsBucket getSourceGcsBucket() {
    if (sourceCase_ == 8) {
      return (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_;
    }
    return com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.SourceGcsBucketOrBuilder getSourceGcsBucketOrBuilder() {
    if (sourceCase_ == 8) {
      return (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_;
    }
    return com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance();
  }

  public static final int DESTINATION_GCS_BUCKET_FIELD_NUMBER = 9;
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the destinationGcsBucket field is set.
   */
  @java.lang.Override
  public boolean hasDestinationGcsBucket() {
    return destinationCase_ == 9;
  }
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The destinationGcsBucket.
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.DestinationGcsBucket getDestinationGcsBucket() {
    if (destinationCase_ == 9) {
      return (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_;
    }
    return com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.DestinationGcsBucketOrBuilder
      getDestinationGcsBucketOrBuilder() {
    if (destinationCase_ == 9) {
      return (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_;
    }
    return com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance();
  }

  public static final int DESTINATION_PARALLELSTORE_FIELD_NUMBER = 10;
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the destinationParallelstore field is set.
   */
  @java.lang.Override
  public boolean hasDestinationParallelstore() {
    return destinationCase_ == 10;
  }
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The destinationParallelstore.
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.DestinationParallelstore getDestinationParallelstore() {
    if (destinationCase_ == 10) {
      return (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_;
    }
    return com.google.cloud.parallelstore.v1.DestinationParallelstore.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.DestinationParallelstoreOrBuilder
      getDestinationParallelstoreOrBuilder() {
    if (destinationCase_ == 10) {
      return (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_;
    }
    return com.google.cloud.parallelstore.v1.DestinationParallelstore.getDefaultInstance();
  }

  public static final int COUNTERS_FIELD_NUMBER = 3;
  private com.google.cloud.parallelstore.v1.TransferCounters counters_;
  /**
   *
   *
   * <pre>
   * Output only. The progress of the transfer operation.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the counters field is set.
   */
  @java.lang.Override
  public boolean hasCounters() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. The progress of the transfer operation.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The counters.
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.TransferCounters getCounters() {
    return counters_ == null
        ? com.google.cloud.parallelstore.v1.TransferCounters.getDefaultInstance()
        : counters_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The progress of the transfer operation.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.TransferCountersOrBuilder getCountersOrBuilder() {
    return counters_ == null
        ? com.google.cloud.parallelstore.v1.TransferCounters.getDefaultInstance()
        : counters_;
  }

  public static final int TRANSFER_TYPE_FIELD_NUMBER = 6;
  private int transferType_ = 0;
  /**
   *
   *
   * <pre>
   * Output only. The type of transfer occurring.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for transferType.
   */
  @java.lang.Override
  public int getTransferTypeValue() {
    return transferType_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The type of transfer occurring.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The transferType.
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.TransferType getTransferType() {
    com.google.cloud.parallelstore.v1.TransferType result =
        com.google.cloud.parallelstore.v1.TransferType.forNumber(transferType_);
    return result == null ? com.google.cloud.parallelstore.v1.TransferType.UNRECOGNIZED : result;
  }

  public static final int ERROR_SUMMARY_FIELD_NUMBER = 13;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.parallelstore.v1.TransferErrorSummary> errorSummary_;
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.parallelstore.v1.TransferErrorSummary>
      getErrorSummaryList() {
    return errorSummary_;
  }
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder>
      getErrorSummaryOrBuilderList() {
    return errorSummary_;
  }
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public int getErrorSummaryCount() {
    return errorSummary_.size();
  }
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.TransferErrorSummary getErrorSummary(int index) {
    return errorSummary_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder getErrorSummaryOrBuilder(
      int index) {
    return errorSummary_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getCounters());
    }
    if (transferType_
        != com.google.cloud.parallelstore.v1.TransferType.TRANSFER_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(6, transferType_);
    }
    if (sourceCase_ == 7) {
      output.writeMessage(7, (com.google.cloud.parallelstore.v1.SourceParallelstore) source_);
    }
    if (sourceCase_ == 8) {
      output.writeMessage(8, (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_);
    }
    if (destinationCase_ == 9) {
      output.writeMessage(9, (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_);
    }
    if (destinationCase_ == 10) {
      output.writeMessage(
          10, (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_);
    }
    for (int i = 0; i < errorSummary_.size(); i++) {
      output.writeMessage(13, errorSummary_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getCounters());
    }
    if (transferType_
        != com.google.cloud.parallelstore.v1.TransferType.TRANSFER_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, transferType_);
    }
    if (sourceCase_ == 7) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              7, (com.google.cloud.parallelstore.v1.SourceParallelstore) source_);
    }
    if (sourceCase_ == 8) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              8, (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_);
    }
    if (destinationCase_ == 9) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              9, (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_);
    }
    if (destinationCase_ == 10) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              10, (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_);
    }
    for (int i = 0; i < errorSummary_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(13, errorSummary_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.parallelstore.v1.TransferOperationMetadata)) {
      return super.equals(obj);
    }
    com.google.cloud.parallelstore.v1.TransferOperationMetadata other =
        (com.google.cloud.parallelstore.v1.TransferOperationMetadata) obj;

    if (hasCounters() != other.hasCounters()) return false;
    if (hasCounters()) {
      if (!getCounters().equals(other.getCounters())) return false;
    }
    if (transferType_ != other.transferType_) return false;
    if (!getErrorSummaryList().equals(other.getErrorSummaryList())) return false;
    if (!getSourceCase().equals(other.getSourceCase())) return false;
    switch (sourceCase_) {
      case 7:
        if (!getSourceParallelstore().equals(other.getSourceParallelstore())) return false;
        break;
      case 8:
        if (!getSourceGcsBucket().equals(other.getSourceGcsBucket())) return false;
        break;
      case 0:
      default:
    }
    if (!getDestinationCase().equals(other.getDestinationCase())) return false;
    switch (destinationCase_) {
      case 9:
        if (!getDestinationGcsBucket().equals(other.getDestinationGcsBucket())) return false;
        break;
      case 10:
        if (!getDestinationParallelstore().equals(other.getDestinationParallelstore()))
          return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCounters()) {
      hash = (37 * hash) + COUNTERS_FIELD_NUMBER;
      hash = (53 * hash) + getCounters().hashCode();
    }
    hash = (37 * hash) + TRANSFER_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + transferType_;
    if (getErrorSummaryCount() > 0) {
      hash = (37 * hash) + ERROR_SUMMARY_FIELD_NUMBER;
      hash = (53 * hash) + getErrorSummaryList().hashCode();
    }
    switch (sourceCase_) {
      case 7:
        hash = (37 * hash) + SOURCE_PARALLELSTORE_FIELD_NUMBER;
        hash = (53 * hash) + getSourceParallelstore().hashCode();
        break;
      case 8:
        hash = (37 * hash) + SOURCE_GCS_BUCKET_FIELD_NUMBER;
        hash = (53 * hash) + getSourceGcsBucket().hashCode();
        break;
      case 0:
      default:
    }
    switch (destinationCase_) {
      case 9:
        hash = (37 * hash) + DESTINATION_GCS_BUCKET_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationGcsBucket().hashCode();
        break;
      case 10:
        hash = (37 * hash) + DESTINATION_PARALLELSTORE_FIELD_NUMBER;
        hash = (53 * hash) + getDestinationParallelstore().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.parallelstore.v1.TransferOperationMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Long-running operation metadata related to a data transfer.
   * </pre>
   *
   * Protobuf type {@code google.cloud.parallelstore.v1.TransferOperationMetadata}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.parallelstore.v1.TransferOperationMetadata)
      com.google.cloud.parallelstore.v1.TransferOperationMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.parallelstore.v1.ParallelstoreProto
          .internal_static_google_cloud_parallelstore_v1_TransferOperationMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.parallelstore.v1.ParallelstoreProto
          .internal_static_google_cloud_parallelstore_v1_TransferOperationMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.parallelstore.v1.TransferOperationMetadata.class,
              com.google.cloud.parallelstore.v1.TransferOperationMetadata.Builder.class);
    }

    // Construct using com.google.cloud.parallelstore.v1.TransferOperationMetadata.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getCountersFieldBuilder();
        getErrorSummaryFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (sourceParallelstoreBuilder_ != null) {
        sourceParallelstoreBuilder_.clear();
      }
      if (sourceGcsBucketBuilder_ != null) {
        sourceGcsBucketBuilder_.clear();
      }
      if (destinationGcsBucketBuilder_ != null) {
        destinationGcsBucketBuilder_.clear();
      }
      if (destinationParallelstoreBuilder_ != null) {
        destinationParallelstoreBuilder_.clear();
      }
      counters_ = null;
      if (countersBuilder_ != null) {
        countersBuilder_.dispose();
        countersBuilder_ = null;
      }
      transferType_ = 0;
      if (errorSummaryBuilder_ == null) {
        errorSummary_ = java.util.Collections.emptyList();
      } else {
        errorSummary_ = null;
        errorSummaryBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      sourceCase_ = 0;
      source_ = null;
      destinationCase_ = 0;
      destination_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.parallelstore.v1.ParallelstoreProto
          .internal_static_google_cloud_parallelstore_v1_TransferOperationMetadata_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.parallelstore.v1.TransferOperationMetadata getDefaultInstanceForType() {
      return com.google.cloud.parallelstore.v1.TransferOperationMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.parallelstore.v1.TransferOperationMetadata build() {
      com.google.cloud.parallelstore.v1.TransferOperationMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.parallelstore.v1.TransferOperationMetadata buildPartial() {
      com.google.cloud.parallelstore.v1.TransferOperationMetadata result =
          new com.google.cloud.parallelstore.v1.TransferOperationMetadata(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.parallelstore.v1.TransferOperationMetadata result) {
      if (errorSummaryBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          errorSummary_ = java.util.Collections.unmodifiableList(errorSummary_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.errorSummary_ = errorSummary_;
      } else {
        result.errorSummary_ = errorSummaryBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.parallelstore.v1.TransferOperationMetadata result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.counters_ = countersBuilder_ == null ? counters_ : countersBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.transferType_ = transferType_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(
        com.google.cloud.parallelstore.v1.TransferOperationMetadata result) {
      result.sourceCase_ = sourceCase_;
      result.source_ = this.source_;
      if (sourceCase_ == 7 && sourceParallelstoreBuilder_ != null) {
        result.source_ = sourceParallelstoreBuilder_.build();
      }
      if (sourceCase_ == 8 && sourceGcsBucketBuilder_ != null) {
        result.source_ = sourceGcsBucketBuilder_.build();
      }
      result.destinationCase_ = destinationCase_;
      result.destination_ = this.destination_;
      if (destinationCase_ == 9 && destinationGcsBucketBuilder_ != null) {
        result.destination_ = destinationGcsBucketBuilder_.build();
      }
      if (destinationCase_ == 10 && destinationParallelstoreBuilder_ != null) {
        result.destination_ = destinationParallelstoreBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.parallelstore.v1.TransferOperationMetadata) {
        return mergeFrom((com.google.cloud.parallelstore.v1.TransferOperationMetadata) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.parallelstore.v1.TransferOperationMetadata other) {
      if (other == com.google.cloud.parallelstore.v1.TransferOperationMetadata.getDefaultInstance())
        return this;
      if (other.hasCounters()) {
        mergeCounters(other.getCounters());
      }
      if (other.transferType_ != 0) {
        setTransferTypeValue(other.getTransferTypeValue());
      }
      if (errorSummaryBuilder_ == null) {
        if (!other.errorSummary_.isEmpty()) {
          if (errorSummary_.isEmpty()) {
            errorSummary_ = other.errorSummary_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureErrorSummaryIsMutable();
            errorSummary_.addAll(other.errorSummary_);
          }
          onChanged();
        }
      } else {
        if (!other.errorSummary_.isEmpty()) {
          if (errorSummaryBuilder_.isEmpty()) {
            errorSummaryBuilder_.dispose();
            errorSummaryBuilder_ = null;
            errorSummary_ = other.errorSummary_;
            bitField0_ = (bitField0_ & ~0x00000040);
            errorSummaryBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getErrorSummaryFieldBuilder()
                    : null;
          } else {
            errorSummaryBuilder_.addAllMessages(other.errorSummary_);
          }
        }
      }
      switch (other.getSourceCase()) {
        case SOURCE_PARALLELSTORE:
          {
            mergeSourceParallelstore(other.getSourceParallelstore());
            break;
          }
        case SOURCE_GCS_BUCKET:
          {
            mergeSourceGcsBucket(other.getSourceGcsBucket());
            break;
          }
        case SOURCE_NOT_SET:
          {
            break;
          }
      }
      switch (other.getDestinationCase()) {
        case DESTINATION_GCS_BUCKET:
          {
            mergeDestinationGcsBucket(other.getDestinationGcsBucket());
            break;
          }
        case DESTINATION_PARALLELSTORE:
          {
            mergeDestinationParallelstore(other.getDestinationParallelstore());
            break;
          }
        case DESTINATION_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26:
              {
                input.readMessage(getCountersFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 26
            case 48:
              {
                transferType_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            case 58:
              {
                input.readMessage(
                    getSourceParallelstoreFieldBuilder().getBuilder(), extensionRegistry);
                sourceCase_ = 7;
                break;
              } // case 58
            case 66:
              {
                input.readMessage(getSourceGcsBucketFieldBuilder().getBuilder(), extensionRegistry);
                sourceCase_ = 8;
                break;
              } // case 66
            case 74:
              {
                input.readMessage(
                    getDestinationGcsBucketFieldBuilder().getBuilder(), extensionRegistry);
                destinationCase_ = 9;
                break;
              } // case 74
            case 82:
              {
                input.readMessage(
                    getDestinationParallelstoreFieldBuilder().getBuilder(), extensionRegistry);
                destinationCase_ = 10;
                break;
              } // case 82
            case 106:
              {
                com.google.cloud.parallelstore.v1.TransferErrorSummary m =
                    input.readMessage(
                        com.google.cloud.parallelstore.v1.TransferErrorSummary.parser(),
                        extensionRegistry);
                if (errorSummaryBuilder_ == null) {
                  ensureErrorSummaryIsMutable();
                  errorSummary_.add(m);
                } else {
                  errorSummaryBuilder_.addMessage(m);
                }
                break;
              } // case 106
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int sourceCase_ = 0;
    private java.lang.Object source_;

    public SourceCase getSourceCase() {
      return SourceCase.forNumber(sourceCase_);
    }

    public Builder clearSource() {
      sourceCase_ = 0;
      source_ = null;
      onChanged();
      return this;
    }

    private int destinationCase_ = 0;
    private java.lang.Object destination_;

    public DestinationCase getDestinationCase() {
      return DestinationCase.forNumber(destinationCase_);
    }

    public Builder clearDestination() {
      destinationCase_ = 0;
      destination_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.SourceParallelstore,
            com.google.cloud.parallelstore.v1.SourceParallelstore.Builder,
            com.google.cloud.parallelstore.v1.SourceParallelstoreOrBuilder>
        sourceParallelstoreBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the sourceParallelstore field is set.
     */
    @java.lang.Override
    public boolean hasSourceParallelstore() {
      return sourceCase_ == 7;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The sourceParallelstore.
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.SourceParallelstore getSourceParallelstore() {
      if (sourceParallelstoreBuilder_ == null) {
        if (sourceCase_ == 7) {
          return (com.google.cloud.parallelstore.v1.SourceParallelstore) source_;
        }
        return com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance();
      } else {
        if (sourceCase_ == 7) {
          return sourceParallelstoreBuilder_.getMessage();
        }
        return com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSourceParallelstore(
        com.google.cloud.parallelstore.v1.SourceParallelstore value) {
      if (sourceParallelstoreBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        sourceParallelstoreBuilder_.setMessage(value);
      }
      sourceCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSourceParallelstore(
        com.google.cloud.parallelstore.v1.SourceParallelstore.Builder builderForValue) {
      if (sourceParallelstoreBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        sourceParallelstoreBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeSourceParallelstore(
        com.google.cloud.parallelstore.v1.SourceParallelstore value) {
      if (sourceParallelstoreBuilder_ == null) {
        if (sourceCase_ == 7
            && source_
                != com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance()) {
          source_ =
              com.google.cloud.parallelstore.v1.SourceParallelstore.newBuilder(
                      (com.google.cloud.parallelstore.v1.SourceParallelstore) source_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 7) {
          sourceParallelstoreBuilder_.mergeFrom(value);
        } else {
          sourceParallelstoreBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearSourceParallelstore() {
      if (sourceParallelstoreBuilder_ == null) {
        if (sourceCase_ == 7) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 7) {
          sourceCase_ = 0;
          source_ = null;
        }
        sourceParallelstoreBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.SourceParallelstore.Builder
        getSourceParallelstoreBuilder() {
      return getSourceParallelstoreFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.SourceParallelstoreOrBuilder
        getSourceParallelstoreOrBuilder() {
      if ((sourceCase_ == 7) && (sourceParallelstoreBuilder_ != null)) {
        return sourceParallelstoreBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 7) {
          return (com.google.cloud.parallelstore.v1.SourceParallelstore) source_;
        }
        return com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.SourceParallelstore,
            com.google.cloud.parallelstore.v1.SourceParallelstore.Builder,
            com.google.cloud.parallelstore.v1.SourceParallelstoreOrBuilder>
        getSourceParallelstoreFieldBuilder() {
      if (sourceParallelstoreBuilder_ == null) {
        if (!(sourceCase_ == 7)) {
          source_ = com.google.cloud.parallelstore.v1.SourceParallelstore.getDefaultInstance();
        }
        sourceParallelstoreBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.parallelstore.v1.SourceParallelstore,
                com.google.cloud.parallelstore.v1.SourceParallelstore.Builder,
                com.google.cloud.parallelstore.v1.SourceParallelstoreOrBuilder>(
                (com.google.cloud.parallelstore.v1.SourceParallelstore) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 7;
      onChanged();
      return sourceParallelstoreBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.SourceGcsBucket,
            com.google.cloud.parallelstore.v1.SourceGcsBucket.Builder,
            com.google.cloud.parallelstore.v1.SourceGcsBucketOrBuilder>
        sourceGcsBucketBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the sourceGcsBucket field is set.
     */
    @java.lang.Override
    public boolean hasSourceGcsBucket() {
      return sourceCase_ == 8;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The sourceGcsBucket.
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.SourceGcsBucket getSourceGcsBucket() {
      if (sourceGcsBucketBuilder_ == null) {
        if (sourceCase_ == 8) {
          return (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_;
        }
        return com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance();
      } else {
        if (sourceCase_ == 8) {
          return sourceGcsBucketBuilder_.getMessage();
        }
        return com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSourceGcsBucket(com.google.cloud.parallelstore.v1.SourceGcsBucket value) {
      if (sourceGcsBucketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        sourceGcsBucketBuilder_.setMessage(value);
      }
      sourceCase_ = 8;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSourceGcsBucket(
        com.google.cloud.parallelstore.v1.SourceGcsBucket.Builder builderForValue) {
      if (sourceGcsBucketBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        sourceGcsBucketBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 8;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeSourceGcsBucket(com.google.cloud.parallelstore.v1.SourceGcsBucket value) {
      if (sourceGcsBucketBuilder_ == null) {
        if (sourceCase_ == 8
            && source_ != com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance()) {
          source_ =
              com.google.cloud.parallelstore.v1.SourceGcsBucket.newBuilder(
                      (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 8) {
          sourceGcsBucketBuilder_.mergeFrom(value);
        } else {
          sourceGcsBucketBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 8;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearSourceGcsBucket() {
      if (sourceGcsBucketBuilder_ == null) {
        if (sourceCase_ == 8) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 8) {
          sourceCase_ = 0;
          source_ = null;
        }
        sourceGcsBucketBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.SourceGcsBucket.Builder getSourceGcsBucketBuilder() {
      return getSourceGcsBucketFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.SourceGcsBucketOrBuilder
        getSourceGcsBucketOrBuilder() {
      if ((sourceCase_ == 8) && (sourceGcsBucketBuilder_ != null)) {
        return sourceGcsBucketBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 8) {
          return (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_;
        }
        return com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage source.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.SourceGcsBucket,
            com.google.cloud.parallelstore.v1.SourceGcsBucket.Builder,
            com.google.cloud.parallelstore.v1.SourceGcsBucketOrBuilder>
        getSourceGcsBucketFieldBuilder() {
      if (sourceGcsBucketBuilder_ == null) {
        if (!(sourceCase_ == 8)) {
          source_ = com.google.cloud.parallelstore.v1.SourceGcsBucket.getDefaultInstance();
        }
        sourceGcsBucketBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.parallelstore.v1.SourceGcsBucket,
                com.google.cloud.parallelstore.v1.SourceGcsBucket.Builder,
                com.google.cloud.parallelstore.v1.SourceGcsBucketOrBuilder>(
                (com.google.cloud.parallelstore.v1.SourceGcsBucket) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 8;
      onChanged();
      return sourceGcsBucketBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.DestinationGcsBucket,
            com.google.cloud.parallelstore.v1.DestinationGcsBucket.Builder,
            com.google.cloud.parallelstore.v1.DestinationGcsBucketOrBuilder>
        destinationGcsBucketBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the destinationGcsBucket field is set.
     */
    @java.lang.Override
    public boolean hasDestinationGcsBucket() {
      return destinationCase_ == 9;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The destinationGcsBucket.
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.DestinationGcsBucket getDestinationGcsBucket() {
      if (destinationGcsBucketBuilder_ == null) {
        if (destinationCase_ == 9) {
          return (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_;
        }
        return com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance();
      } else {
        if (destinationCase_ == 9) {
          return destinationGcsBucketBuilder_.getMessage();
        }
        return com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setDestinationGcsBucket(
        com.google.cloud.parallelstore.v1.DestinationGcsBucket value) {
      if (destinationGcsBucketBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        destination_ = value;
        onChanged();
      } else {
        destinationGcsBucketBuilder_.setMessage(value);
      }
      destinationCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setDestinationGcsBucket(
        com.google.cloud.parallelstore.v1.DestinationGcsBucket.Builder builderForValue) {
      if (destinationGcsBucketBuilder_ == null) {
        destination_ = builderForValue.build();
        onChanged();
      } else {
        destinationGcsBucketBuilder_.setMessage(builderForValue.build());
      }
      destinationCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeDestinationGcsBucket(
        com.google.cloud.parallelstore.v1.DestinationGcsBucket value) {
      if (destinationGcsBucketBuilder_ == null) {
        if (destinationCase_ == 9
            && destination_
                != com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance()) {
          destination_ =
              com.google.cloud.parallelstore.v1.DestinationGcsBucket.newBuilder(
                      (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          destination_ = value;
        }
        onChanged();
      } else {
        if (destinationCase_ == 9) {
          destinationGcsBucketBuilder_.mergeFrom(value);
        } else {
          destinationGcsBucketBuilder_.setMessage(value);
        }
      }
      destinationCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearDestinationGcsBucket() {
      if (destinationGcsBucketBuilder_ == null) {
        if (destinationCase_ == 9) {
          destinationCase_ = 0;
          destination_ = null;
          onChanged();
        }
      } else {
        if (destinationCase_ == 9) {
          destinationCase_ = 0;
          destination_ = null;
        }
        destinationGcsBucketBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.DestinationGcsBucket.Builder
        getDestinationGcsBucketBuilder() {
      return getDestinationGcsBucketFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.DestinationGcsBucketOrBuilder
        getDestinationGcsBucketOrBuilder() {
      if ((destinationCase_ == 9) && (destinationGcsBucketBuilder_ != null)) {
        return destinationGcsBucketBuilder_.getMessageOrBuilder();
      } else {
        if (destinationCase_ == 9) {
          return (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_;
        }
        return com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Cloud Storage destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.DestinationGcsBucket,
            com.google.cloud.parallelstore.v1.DestinationGcsBucket.Builder,
            com.google.cloud.parallelstore.v1.DestinationGcsBucketOrBuilder>
        getDestinationGcsBucketFieldBuilder() {
      if (destinationGcsBucketBuilder_ == null) {
        if (!(destinationCase_ == 9)) {
          destination_ =
              com.google.cloud.parallelstore.v1.DestinationGcsBucket.getDefaultInstance();
        }
        destinationGcsBucketBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.parallelstore.v1.DestinationGcsBucket,
                com.google.cloud.parallelstore.v1.DestinationGcsBucket.Builder,
                com.google.cloud.parallelstore.v1.DestinationGcsBucketOrBuilder>(
                (com.google.cloud.parallelstore.v1.DestinationGcsBucket) destination_,
                getParentForChildren(),
                isClean());
        destination_ = null;
      }
      destinationCase_ = 9;
      onChanged();
      return destinationGcsBucketBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.DestinationParallelstore,
            com.google.cloud.parallelstore.v1.DestinationParallelstore.Builder,
            com.google.cloud.parallelstore.v1.DestinationParallelstoreOrBuilder>
        destinationParallelstoreBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the destinationParallelstore field is set.
     */
    @java.lang.Override
    public boolean hasDestinationParallelstore() {
      return destinationCase_ == 10;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The destinationParallelstore.
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.DestinationParallelstore
        getDestinationParallelstore() {
      if (destinationParallelstoreBuilder_ == null) {
        if (destinationCase_ == 10) {
          return (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_;
        }
        return com.google.cloud.parallelstore.v1.DestinationParallelstore.getDefaultInstance();
      } else {
        if (destinationCase_ == 10) {
          return destinationParallelstoreBuilder_.getMessage();
        }
        return com.google.cloud.parallelstore.v1.DestinationParallelstore.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setDestinationParallelstore(
        com.google.cloud.parallelstore.v1.DestinationParallelstore value) {
      if (destinationParallelstoreBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        destination_ = value;
        onChanged();
      } else {
        destinationParallelstoreBuilder_.setMessage(value);
      }
      destinationCase_ = 10;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setDestinationParallelstore(
        com.google.cloud.parallelstore.v1.DestinationParallelstore.Builder builderForValue) {
      if (destinationParallelstoreBuilder_ == null) {
        destination_ = builderForValue.build();
        onChanged();
      } else {
        destinationParallelstoreBuilder_.setMessage(builderForValue.build());
      }
      destinationCase_ = 10;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeDestinationParallelstore(
        com.google.cloud.parallelstore.v1.DestinationParallelstore value) {
      if (destinationParallelstoreBuilder_ == null) {
        if (destinationCase_ == 10
            && destination_
                != com.google.cloud.parallelstore.v1.DestinationParallelstore
                    .getDefaultInstance()) {
          destination_ =
              com.google.cloud.parallelstore.v1.DestinationParallelstore.newBuilder(
                      (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          destination_ = value;
        }
        onChanged();
      } else {
        if (destinationCase_ == 10) {
          destinationParallelstoreBuilder_.mergeFrom(value);
        } else {
          destinationParallelstoreBuilder_.setMessage(value);
        }
      }
      destinationCase_ = 10;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearDestinationParallelstore() {
      if (destinationParallelstoreBuilder_ == null) {
        if (destinationCase_ == 10) {
          destinationCase_ = 0;
          destination_ = null;
          onChanged();
        }
      } else {
        if (destinationCase_ == 10) {
          destinationCase_ = 0;
          destination_ = null;
        }
        destinationParallelstoreBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.DestinationParallelstore.Builder
        getDestinationParallelstoreBuilder() {
      return getDestinationParallelstoreFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.DestinationParallelstoreOrBuilder
        getDestinationParallelstoreOrBuilder() {
      if ((destinationCase_ == 10) && (destinationParallelstoreBuilder_ != null)) {
        return destinationParallelstoreBuilder_.getMessageOrBuilder();
      } else {
        if (destinationCase_ == 10) {
          return (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_;
        }
        return com.google.cloud.parallelstore.v1.DestinationParallelstore.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Parallelstore destination.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.DestinationParallelstore,
            com.google.cloud.parallelstore.v1.DestinationParallelstore.Builder,
            com.google.cloud.parallelstore.v1.DestinationParallelstoreOrBuilder>
        getDestinationParallelstoreFieldBuilder() {
      if (destinationParallelstoreBuilder_ == null) {
        if (!(destinationCase_ == 10)) {
          destination_ =
              com.google.cloud.parallelstore.v1.DestinationParallelstore.getDefaultInstance();
        }
        destinationParallelstoreBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.parallelstore.v1.DestinationParallelstore,
                com.google.cloud.parallelstore.v1.DestinationParallelstore.Builder,
                com.google.cloud.parallelstore.v1.DestinationParallelstoreOrBuilder>(
                (com.google.cloud.parallelstore.v1.DestinationParallelstore) destination_,
                getParentForChildren(),
                isClean());
        destination_ = null;
      }
      destinationCase_ = 10;
      onChanged();
      return destinationParallelstoreBuilder_;
    }

    private com.google.cloud.parallelstore.v1.TransferCounters counters_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.TransferCounters,
            com.google.cloud.parallelstore.v1.TransferCounters.Builder,
            com.google.cloud.parallelstore.v1.TransferCountersOrBuilder>
        countersBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the counters field is set.
     */
    public boolean hasCounters() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The counters.
     */
    public com.google.cloud.parallelstore.v1.TransferCounters getCounters() {
      if (countersBuilder_ == null) {
        return counters_ == null
            ? com.google.cloud.parallelstore.v1.TransferCounters.getDefaultInstance()
            : counters_;
      } else {
        return countersBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setCounters(com.google.cloud.parallelstore.v1.TransferCounters value) {
      if (countersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        counters_ = value;
      } else {
        countersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setCounters(
        com.google.cloud.parallelstore.v1.TransferCounters.Builder builderForValue) {
      if (countersBuilder_ == null) {
        counters_ = builderForValue.build();
      } else {
        countersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeCounters(com.google.cloud.parallelstore.v1.TransferCounters value) {
      if (countersBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && counters_ != null
            && counters_
                != com.google.cloud.parallelstore.v1.TransferCounters.getDefaultInstance()) {
          getCountersBuilder().mergeFrom(value);
        } else {
          counters_ = value;
        }
      } else {
        countersBuilder_.mergeFrom(value);
      }
      if (counters_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearCounters() {
      bitField0_ = (bitField0_ & ~0x00000010);
      counters_ = null;
      if (countersBuilder_ != null) {
        countersBuilder_.dispose();
        countersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferCounters.Builder getCountersBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getCountersFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferCountersOrBuilder getCountersOrBuilder() {
      if (countersBuilder_ != null) {
        return countersBuilder_.getMessageOrBuilder();
      } else {
        return counters_ == null
            ? com.google.cloud.parallelstore.v1.TransferCounters.getDefaultInstance()
            : counters_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The progress of the transfer operation.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.parallelstore.v1.TransferCounters,
            com.google.cloud.parallelstore.v1.TransferCounters.Builder,
            com.google.cloud.parallelstore.v1.TransferCountersOrBuilder>
        getCountersFieldBuilder() {
      if (countersBuilder_ == null) {
        countersBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.parallelstore.v1.TransferCounters,
                com.google.cloud.parallelstore.v1.TransferCounters.Builder,
                com.google.cloud.parallelstore.v1.TransferCountersOrBuilder>(
                getCounters(), getParentForChildren(), isClean());
        counters_ = null;
      }
      return countersBuilder_;
    }

    private int transferType_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. The type of transfer occurring.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for transferType.
     */
    @java.lang.Override
    public int getTransferTypeValue() {
      return transferType_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The type of transfer occurring.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for transferType to set.
     * @return This builder for chaining.
     */
    public Builder setTransferTypeValue(int value) {
      transferType_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The type of transfer occurring.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The transferType.
     */
    @java.lang.Override
    public com.google.cloud.parallelstore.v1.TransferType getTransferType() {
      com.google.cloud.parallelstore.v1.TransferType result =
          com.google.cloud.parallelstore.v1.TransferType.forNumber(transferType_);
      return result == null ? com.google.cloud.parallelstore.v1.TransferType.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * Output only. The type of transfer occurring.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The transferType to set.
     * @return This builder for chaining.
     */
    public Builder setTransferType(com.google.cloud.parallelstore.v1.TransferType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      transferType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The type of transfer occurring.
     * </pre>
     *
     * <code>
     * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTransferType() {
      bitField0_ = (bitField0_ & ~0x00000020);
      transferType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.parallelstore.v1.TransferErrorSummary> errorSummary_ =
        java.util.Collections.emptyList();

    private void ensureErrorSummaryIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        errorSummary_ =
            new java.util.ArrayList<com.google.cloud.parallelstore.v1.TransferErrorSummary>(
                errorSummary_);
        bitField0_ |= 0x00000040;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.parallelstore.v1.TransferErrorSummary,
            com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder,
            com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder>
        errorSummaryBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<com.google.cloud.parallelstore.v1.TransferErrorSummary>
        getErrorSummaryList() {
      if (errorSummaryBuilder_ == null) {
        return java.util.Collections.unmodifiableList(errorSummary_);
      } else {
        return errorSummaryBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public int getErrorSummaryCount() {
      if (errorSummaryBuilder_ == null) {
        return errorSummary_.size();
      } else {
        return errorSummaryBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferErrorSummary getErrorSummary(int index) {
      if (errorSummaryBuilder_ == null) {
        return errorSummary_.get(index);
      } else {
        return errorSummaryBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setErrorSummary(
        int index, com.google.cloud.parallelstore.v1.TransferErrorSummary value) {
      if (errorSummaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorSummaryIsMutable();
        errorSummary_.set(index, value);
        onChanged();
      } else {
        errorSummaryBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setErrorSummary(
        int index, com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder builderForValue) {
      if (errorSummaryBuilder_ == null) {
        ensureErrorSummaryIsMutable();
        errorSummary_.set(index, builderForValue.build());
        onChanged();
      } else {
        errorSummaryBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addErrorSummary(com.google.cloud.parallelstore.v1.TransferErrorSummary value) {
      if (errorSummaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorSummaryIsMutable();
        errorSummary_.add(value);
        onChanged();
      } else {
        errorSummaryBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addErrorSummary(
        int index, com.google.cloud.parallelstore.v1.TransferErrorSummary value) {
      if (errorSummaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorSummaryIsMutable();
        errorSummary_.add(index, value);
        onChanged();
      } else {
        errorSummaryBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addErrorSummary(
        com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder builderForValue) {
      if (errorSummaryBuilder_ == null) {
        ensureErrorSummaryIsMutable();
        errorSummary_.add(builderForValue.build());
        onChanged();
      } else {
        errorSummaryBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addErrorSummary(
        int index, com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder builderForValue) {
      if (errorSummaryBuilder_ == null) {
        ensureErrorSummaryIsMutable();
        errorSummary_.add(index, builderForValue.build());
        onChanged();
      } else {
        errorSummaryBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addAllErrorSummary(
        java.lang.Iterable<? extends com.google.cloud.parallelstore.v1.TransferErrorSummary>
            values) {
      if (errorSummaryBuilder_ == null) {
        ensureErrorSummaryIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, errorSummary_);
        onChanged();
      } else {
        errorSummaryBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearErrorSummary() {
      if (errorSummaryBuilder_ == null) {
        errorSummary_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        errorSummaryBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder removeErrorSummary(int index) {
      if (errorSummaryBuilder_ == null) {
        ensureErrorSummaryIsMutable();
        errorSummary_.remove(index);
        onChanged();
      } else {
        errorSummaryBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder getErrorSummaryBuilder(
        int index) {
      return getErrorSummaryFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder getErrorSummaryOrBuilder(
        int index) {
      if (errorSummaryBuilder_ == null) {
        return errorSummary_.get(index);
      } else {
        return errorSummaryBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder>
        getErrorSummaryOrBuilderList() {
      if (errorSummaryBuilder_ != null) {
        return errorSummaryBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(errorSummary_);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder addErrorSummaryBuilder() {
      return getErrorSummaryFieldBuilder()
          .addBuilder(com.google.cloud.parallelstore.v1.TransferErrorSummary.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder addErrorSummaryBuilder(
        int index) {
      return getErrorSummaryFieldBuilder()
          .addBuilder(
              index, com.google.cloud.parallelstore.v1.TransferErrorSummary.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. List of files that failed to be transferred. This list will
     * have a maximum size of 5 elements.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder>
        getErrorSummaryBuilderList() {
      return getErrorSummaryFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.parallelstore.v1.TransferErrorSummary,
            com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder,
            com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder>
        getErrorSummaryFieldBuilder() {
      if (errorSummaryBuilder_ == null) {
        errorSummaryBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.parallelstore.v1.TransferErrorSummary,
                com.google.cloud.parallelstore.v1.TransferErrorSummary.Builder,
                com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder>(
                errorSummary_, ((bitField0_ & 0x00000040) != 0), getParentForChildren(), isClean());
        errorSummary_ = null;
      }
      return errorSummaryBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.parallelstore.v1.TransferOperationMetadata)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.parallelstore.v1.TransferOperationMetadata)
  private static final com.google.cloud.parallelstore.v1.TransferOperationMetadata DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.parallelstore.v1.TransferOperationMetadata();
  }

  public static com.google.cloud.parallelstore.v1.TransferOperationMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TransferOperationMetadata> PARSER =
      new com.google.protobuf.AbstractParser<TransferOperationMetadata>() {
        @java.lang.Override
        public TransferOperationMetadata parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<TransferOperationMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TransferOperationMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.parallelstore.v1.TransferOperationMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
