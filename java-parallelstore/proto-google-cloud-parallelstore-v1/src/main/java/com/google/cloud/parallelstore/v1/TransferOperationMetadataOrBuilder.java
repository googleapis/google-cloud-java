/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/parallelstore/v1/parallelstore.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.parallelstore.v1;

public interface TransferOperationMetadataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.parallelstore.v1.TransferOperationMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. Parallelstore source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the sourceParallelstore field is set.
   */
  boolean hasSourceParallelstore();
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The sourceParallelstore.
   */
  com.google.cloud.parallelstore.v1.SourceParallelstore getSourceParallelstore();
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceParallelstore source_parallelstore = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.SourceParallelstoreOrBuilder getSourceParallelstoreOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the sourceGcsBucket field is set.
   */
  boolean hasSourceGcsBucket();
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The sourceGcsBucket.
   */
  com.google.cloud.parallelstore.v1.SourceGcsBucket getSourceGcsBucket();
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage source.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.SourceGcsBucket source_gcs_bucket = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.SourceGcsBucketOrBuilder getSourceGcsBucketOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the destinationGcsBucket field is set.
   */
  boolean hasDestinationGcsBucket();
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The destinationGcsBucket.
   */
  com.google.cloud.parallelstore.v1.DestinationGcsBucket getDestinationGcsBucket();
  /**
   *
   *
   * <pre>
   * Output only. Cloud Storage destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationGcsBucket destination_gcs_bucket = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.DestinationGcsBucketOrBuilder
      getDestinationGcsBucketOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Parallelstore destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the destinationParallelstore field is set.
   */
  boolean hasDestinationParallelstore();
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The destinationParallelstore.
   */
  com.google.cloud.parallelstore.v1.DestinationParallelstore getDestinationParallelstore();
  /**
   *
   *
   * <pre>
   * Output only. Parallelstore destination.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.DestinationParallelstore destination_parallelstore = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.DestinationParallelstoreOrBuilder
      getDestinationParallelstoreOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The progress of the transfer operation.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the counters field is set.
   */
  boolean hasCounters();
  /**
   *
   *
   * <pre>
   * Output only. The progress of the transfer operation.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The counters.
   */
  com.google.cloud.parallelstore.v1.TransferCounters getCounters();
  /**
   *
   *
   * <pre>
   * Output only. The progress of the transfer operation.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferCounters counters = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.TransferCountersOrBuilder getCountersOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The type of transfer occurring.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for transferType.
   */
  int getTransferTypeValue();
  /**
   *
   *
   * <pre>
   * Output only. The type of transfer occurring.
   * </pre>
   *
   * <code>
   * .google.cloud.parallelstore.v1.TransferType transfer_type = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The transferType.
   */
  com.google.cloud.parallelstore.v1.TransferType getTransferType();

  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.List<com.google.cloud.parallelstore.v1.TransferErrorSummary> getErrorSummaryList();
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.TransferErrorSummary getErrorSummary(int index);
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  int getErrorSummaryCount();
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.List<? extends com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder>
      getErrorSummaryOrBuilderList();
  /**
   *
   *
   * <pre>
   * Output only. List of files that failed to be transferred. This list will
   * have a maximum size of 5 elements.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.parallelstore.v1.TransferErrorSummary error_summary = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.parallelstore.v1.TransferErrorSummaryOrBuilder getErrorSummaryOrBuilder(
      int index);

  com.google.cloud.parallelstore.v1.TransferOperationMetadata.SourceCase getSourceCase();

  com.google.cloud.parallelstore.v1.TransferOperationMetadata.DestinationCase getDestinationCase();
}
