/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/parallelstore/v1/parallelstore.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.parallelstore.v1;

public interface TransferCountersOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.parallelstore.v1.TransferCounters)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Objects found in the data source that are scheduled to be transferred,
   * excluding any that are filtered based on object conditions or skipped due
   * to sync.
   * </pre>
   *
   * <code>int64 objects_found = 1;</code>
   *
   * @return The objectsFound.
   */
  long getObjectsFound();

  /**
   *
   *
   * <pre>
   * Bytes found in the data source that are scheduled to be transferred,
   * excluding any that are filtered based on object conditions or skipped due
   * to sync.
   * </pre>
   *
   * <code>int64 bytes_found = 2;</code>
   *
   * @return The bytesFound.
   */
  long getBytesFound();

  /**
   *
   *
   * <pre>
   * Objects in the data source that are not transferred because they already
   * exist in the data destination.
   * </pre>
   *
   * <code>int64 objects_skipped = 3;</code>
   *
   * @return The objectsSkipped.
   */
  long getObjectsSkipped();

  /**
   *
   *
   * <pre>
   * Bytes in the data source that are not transferred because they already
   * exist in the data destination.
   * </pre>
   *
   * <code>int64 bytes_skipped = 4;</code>
   *
   * @return The bytesSkipped.
   */
  long getBytesSkipped();

  /**
   *
   *
   * <pre>
   * Objects that are copied to the data destination.
   * </pre>
   *
   * <code>int64 objects_copied = 5;</code>
   *
   * @return The objectsCopied.
   */
  long getObjectsCopied();

  /**
   *
   *
   * <pre>
   * Bytes that are copied to the data destination.
   * </pre>
   *
   * <code>int64 bytes_copied = 6;</code>
   *
   * @return The bytesCopied.
   */
  long getBytesCopied();

  /**
   *
   *
   * <pre>
   * Objects that failed to write to the data destination.
   * </pre>
   *
   * <code>int64 objects_failed = 7;</code>
   *
   * @return The objectsFailed.
   */
  long getObjectsFailed();

  /**
   *
   *
   * <pre>
   * Number of Bytes that failed to be written to the data destination.
   * </pre>
   *
   * <code>int64 bytes_failed = 8;</code>
   *
   * @return The bytesFailed.
   */
  long getBytesFailed();
}
