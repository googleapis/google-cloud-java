/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/baremetalsolution/v2/network.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.baremetalsolution.v2;

public interface VRFOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.baremetalsolution.v2.VRF)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The name of the VRF.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * The name of the VRF.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * The possible state of VRF.
   * </pre>
   *
   * <code>.google.cloud.baremetalsolution.v2.VRF.State state = 5;</code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   *
   *
   * <pre>
   * The possible state of VRF.
   * </pre>
   *
   * <code>.google.cloud.baremetalsolution.v2.VRF.State state = 5;</code>
   *
   * @return The state.
   */
  com.google.cloud.baremetalsolution.v2.VRF.State getState();

  /**
   *
   *
   * <pre>
   * The QOS policy applied to this VRF.
   * The value is only meaningful when all the vlan attachments have the same
   * QoS. This field should not be used for new integrations, use vlan
   * attachment level qos instead. The field is left for backward-compatibility.
   * </pre>
   *
   * <code>.google.cloud.baremetalsolution.v2.VRF.QosPolicy qos_policy = 6;</code>
   *
   * @return Whether the qosPolicy field is set.
   */
  boolean hasQosPolicy();
  /**
   *
   *
   * <pre>
   * The QOS policy applied to this VRF.
   * The value is only meaningful when all the vlan attachments have the same
   * QoS. This field should not be used for new integrations, use vlan
   * attachment level qos instead. The field is left for backward-compatibility.
   * </pre>
   *
   * <code>.google.cloud.baremetalsolution.v2.VRF.QosPolicy qos_policy = 6;</code>
   *
   * @return The qosPolicy.
   */
  com.google.cloud.baremetalsolution.v2.VRF.QosPolicy getQosPolicy();
  /**
   *
   *
   * <pre>
   * The QOS policy applied to this VRF.
   * The value is only meaningful when all the vlan attachments have the same
   * QoS. This field should not be used for new integrations, use vlan
   * attachment level qos instead. The field is left for backward-compatibility.
   * </pre>
   *
   * <code>.google.cloud.baremetalsolution.v2.VRF.QosPolicy qos_policy = 6;</code>
   */
  com.google.cloud.baremetalsolution.v2.VRF.QosPolicyOrBuilder getQosPolicyOrBuilder();

  /**
   *
   *
   * <pre>
   * The list of VLAN attachments for the VRF.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.VRF.VlanAttachment vlan_attachments = 7;
   * </code>
   */
  java.util.List<com.google.cloud.baremetalsolution.v2.VRF.VlanAttachment> getVlanAttachmentsList();
  /**
   *
   *
   * <pre>
   * The list of VLAN attachments for the VRF.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.VRF.VlanAttachment vlan_attachments = 7;
   * </code>
   */
  com.google.cloud.baremetalsolution.v2.VRF.VlanAttachment getVlanAttachments(int index);
  /**
   *
   *
   * <pre>
   * The list of VLAN attachments for the VRF.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.VRF.VlanAttachment vlan_attachments = 7;
   * </code>
   */
  int getVlanAttachmentsCount();
  /**
   *
   *
   * <pre>
   * The list of VLAN attachments for the VRF.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.VRF.VlanAttachment vlan_attachments = 7;
   * </code>
   */
  java.util.List<? extends com.google.cloud.baremetalsolution.v2.VRF.VlanAttachmentOrBuilder>
      getVlanAttachmentsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The list of VLAN attachments for the VRF.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.VRF.VlanAttachment vlan_attachments = 7;
   * </code>
   */
  com.google.cloud.baremetalsolution.v2.VRF.VlanAttachmentOrBuilder getVlanAttachmentsOrBuilder(
      int index);
}
