/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/baremetalsolution/v2/nfs_share.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.baremetalsolution.v2;

public interface NfsShareOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.baremetalsolution.v2.NfsShare)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Immutable. The name of the NFS share.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Immutable. The name of the NFS share.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Output only. An identifier for the NFS share, generated by the backend.
   * This field will be deprecated in the future, use `id` instead.
   * </pre>
   *
   * <code>string nfs_share_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The nfsShareId.
   */
  java.lang.String getNfsShareId();
  /**
   *
   *
   * <pre>
   * Output only. An identifier for the NFS share, generated by the backend.
   * This field will be deprecated in the future, use `id` instead.
   * </pre>
   *
   * <code>string nfs_share_id = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for nfsShareId.
   */
  com.google.protobuf.ByteString getNfsShareIdBytes();

  /**
   *
   *
   * <pre>
   * Output only. An identifier for the NFS share, generated by the backend.
   * This is the same value as nfs_share_id and will replace it in the future.
   * </pre>
   *
   * <code>string id = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The id.
   */
  java.lang.String getId();
  /**
   *
   *
   * <pre>
   * Output only. An identifier for the NFS share, generated by the backend.
   * This is the same value as nfs_share_id and will replace it in the future.
   * </pre>
   *
   * <code>string id = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString getIdBytes();

  /**
   *
   *
   * <pre>
   * Output only. The state of the NFS share.
   * </pre>
   *
   * <code>
   * .google.cloud.baremetalsolution.v2.NfsShare.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   *
   *
   * <pre>
   * Output only. The state of the NFS share.
   * </pre>
   *
   * <code>
   * .google.cloud.baremetalsolution.v2.NfsShare.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  com.google.cloud.baremetalsolution.v2.NfsShare.State getState();

  /**
   *
   *
   * <pre>
   * Output only. The underlying volume of the share. Created automatically
   * during provisioning.
   * </pre>
   *
   * <code>
   * string volume = 4 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The volume.
   */
  java.lang.String getVolume();
  /**
   *
   *
   * <pre>
   * Output only. The underlying volume of the share. Created automatically
   * during provisioning.
   * </pre>
   *
   * <code>
   * string volume = 4 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for volume.
   */
  com.google.protobuf.ByteString getVolumeBytes();

  /**
   *
   *
   * <pre>
   * List of allowed access points.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.NfsShare.AllowedClient allowed_clients = 5;
   * </code>
   */
  java.util.List<com.google.cloud.baremetalsolution.v2.NfsShare.AllowedClient>
      getAllowedClientsList();
  /**
   *
   *
   * <pre>
   * List of allowed access points.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.NfsShare.AllowedClient allowed_clients = 5;
   * </code>
   */
  com.google.cloud.baremetalsolution.v2.NfsShare.AllowedClient getAllowedClients(int index);
  /**
   *
   *
   * <pre>
   * List of allowed access points.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.NfsShare.AllowedClient allowed_clients = 5;
   * </code>
   */
  int getAllowedClientsCount();
  /**
   *
   *
   * <pre>
   * List of allowed access points.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.NfsShare.AllowedClient allowed_clients = 5;
   * </code>
   */
  java.util.List<? extends com.google.cloud.baremetalsolution.v2.NfsShare.AllowedClientOrBuilder>
      getAllowedClientsOrBuilderList();
  /**
   *
   *
   * <pre>
   * List of allowed access points.
   * </pre>
   *
   * <code>repeated .google.cloud.baremetalsolution.v2.NfsShare.AllowedClient allowed_clients = 5;
   * </code>
   */
  com.google.cloud.baremetalsolution.v2.NfsShare.AllowedClientOrBuilder getAllowedClientsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */
  int getLabelsCount();
  /**
   *
   *
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */
  boolean containsLabels(java.lang.String key);
  /** Use {@link #getLabelsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getLabels();
  /**
   *
   *
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getLabelsMap();
  /**
   *
   *
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */
  /* nullable */
  java.lang.String getLabelsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);
  /**
   *
   *
   * <pre>
   * Labels as key value pairs.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6;</code>
   */
  java.lang.String getLabelsOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * The requested size, in GiB.
   * </pre>
   *
   * <code>int64 requested_size_gib = 7;</code>
   *
   * @return The requestedSizeGib.
   */
  long getRequestedSizeGib();

  /**
   *
   *
   * <pre>
   * Immutable. The storage type of the underlying volume.
   * </pre>
   *
   * <code>
   * .google.cloud.baremetalsolution.v2.NfsShare.StorageType storage_type = 9 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The enum numeric value on the wire for storageType.
   */
  int getStorageTypeValue();
  /**
   *
   *
   * <pre>
   * Immutable. The storage type of the underlying volume.
   * </pre>
   *
   * <code>
   * .google.cloud.baremetalsolution.v2.NfsShare.StorageType storage_type = 9 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The storageType.
   */
  com.google.cloud.baremetalsolution.v2.NfsShare.StorageType getStorageType();
}
