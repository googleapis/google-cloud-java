/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/texttospeech/v1beta1/cloud_tts.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.texttospeech.v1beta1;

/**
 *
 *
 * <pre>
 * A collection of turns for multi-speaker synthesis.
 * </pre>
 *
 * Protobuf type {@code google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup}
 */
public final class MultiSpeakerMarkup extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup)
    MultiSpeakerMarkupOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use MultiSpeakerMarkup.newBuilder() to construct.
  private MultiSpeakerMarkup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private MultiSpeakerMarkup() {
    turns_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new MultiSpeakerMarkup();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
        .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
        .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.class,
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Builder.class);
  }

  public interface TurnOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
     * to documentation for available speakers.
     * </pre>
     *
     * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The speaker.
     */
    java.lang.String getSpeaker();
    /**
     *
     *
     * <pre>
     * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
     * to documentation for available speakers.
     * </pre>
     *
     * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for speaker.
     */
    com.google.protobuf.ByteString getSpeakerBytes();

    /**
     *
     *
     * <pre>
     * Required. The text to speak.
     * </pre>
     *
     * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The text.
     */
    java.lang.String getText();
    /**
     *
     *
     * <pre>
     * Required. The text to speak.
     * </pre>
     *
     * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString getTextBytes();
  }
  /**
   *
   *
   * <pre>
   * A Multi-speaker turn.
   * </pre>
   *
   * Protobuf type {@code google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn}
   */
  public static final class Turn extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn)
      TurnOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Turn.newBuilder() to construct.
    private Turn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Turn() {
      speaker_ = "";
      text_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Turn();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
          .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_Turn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
          .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_Turn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.class,
              com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder.class);
    }

    public static final int SPEAKER_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object speaker_ = "";
    /**
     *
     *
     * <pre>
     * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
     * to documentation for available speakers.
     * </pre>
     *
     * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The speaker.
     */
    @java.lang.Override
    public java.lang.String getSpeaker() {
      java.lang.Object ref = speaker_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        speaker_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
     * to documentation for available speakers.
     * </pre>
     *
     * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for speaker.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSpeakerBytes() {
      java.lang.Object ref = speaker_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        speaker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private volatile java.lang.Object text_ = "";
    /**
     *
     *
     * <pre>
     * Required. The text to speak.
     * </pre>
     *
     * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The text to speak.
     * </pre>
     *
     * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(speaker_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, speaker_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, text_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(speaker_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, speaker_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, text_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn)) {
        return super.equals(obj);
      }
      com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn other =
          (com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn) obj;

      if (!getSpeaker().equals(other.getSpeaker())) return false;
      if (!getText().equals(other.getText())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPEAKER_FIELD_NUMBER;
      hash = (53 * hash) + getSpeaker().hashCode();
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * A Multi-speaker turn.
     * </pre>
     *
     * Protobuf type {@code google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn)
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
            .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_Turn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
            .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_Turn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.class,
                com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder.class);
      }

      // Construct using com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        speaker_ = "";
        text_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
            .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_Turn_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn
          getDefaultInstanceForType() {
        return com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn build() {
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn buildPartial() {
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn result =
            new com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.speaker_ = speaker_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.text_ = text_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn) {
          return mergeFrom((com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn other) {
        if (other
            == com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.getDefaultInstance())
          return this;
        if (!other.getSpeaker().isEmpty()) {
          speaker_ = other.speaker_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  speaker_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  text_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object speaker_ = "";
      /**
       *
       *
       * <pre>
       * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
       * to documentation for available speakers.
       * </pre>
       *
       * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The speaker.
       */
      public java.lang.String getSpeaker() {
        java.lang.Object ref = speaker_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          speaker_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
       * to documentation for available speakers.
       * </pre>
       *
       * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The bytes for speaker.
       */
      public com.google.protobuf.ByteString getSpeakerBytes() {
        java.lang.Object ref = speaker_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          speaker_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
       * to documentation for available speakers.
       * </pre>
       *
       * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The speaker to set.
       * @return This builder for chaining.
       */
      public Builder setSpeaker(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        speaker_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
       * to documentation for available speakers.
       * </pre>
       *
       * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSpeaker() {
        speaker_ = getDefaultInstance().getSpeaker();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The speaker of the turn, for example, 'O' or 'Q'. Please refer
       * to documentation for available speakers.
       * </pre>
       *
       * <code>string speaker = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The bytes for speaker to set.
       * @return This builder for chaining.
       */
      public Builder setSpeakerBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        speaker_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       *
       *
       * <pre>
       * Required. The text to speak.
       * </pre>
       *
       * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The text to speak.
       * </pre>
       *
       * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The text to speak.
       * </pre>
       *
       * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        text_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The text to speak.
       * </pre>
       *
       * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearText() {
        text_ = getDefaultInstance().getText();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The text to speak.
       * </pre>
       *
       * <code>string text = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        text_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn)
    private static final com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn();
    }

    public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Turn> PARSER =
        new com.google.protobuf.AbstractParser<Turn>() {
          @java.lang.Override
          public Turn parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Turn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Turn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int TURNS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn> turns_;
  /**
   *
   *
   * <pre>
   * Required. Speaker turns.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn>
      getTurnsList() {
    return turns_;
  }
  /**
   *
   *
   * <pre>
   * Required. Speaker turns.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder>
      getTurnsOrBuilderList() {
    return turns_;
  }
  /**
   *
   *
   * <pre>
   * Required. Speaker turns.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public int getTurnsCount() {
    return turns_.size();
  }
  /**
   *
   *
   * <pre>
   * Required. Speaker turns.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn getTurns(int index) {
    return turns_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Required. Speaker turns.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder getTurnsOrBuilder(
      int index) {
    return turns_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < turns_.size(); i++) {
      output.writeMessage(1, turns_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < turns_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, turns_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup)) {
      return super.equals(obj);
    }
    com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup other =
        (com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup) obj;

    if (!getTurnsList().equals(other.getTurnsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTurnsCount() > 0) {
      hash = (37 * hash) + TURNS_FIELD_NUMBER;
      hash = (53 * hash) + getTurnsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A collection of turns for multi-speaker synthesis.
   * </pre>
   *
   * Protobuf type {@code google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup)
      com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkupOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
          .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
          .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.class,
              com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Builder.class);
    }

    // Construct using com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (turnsBuilder_ == null) {
        turns_ = java.util.Collections.emptyList();
      } else {
        turns_ = null;
        turnsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.texttospeech.v1beta1.TextToSpeechProto
          .internal_static_google_cloud_texttospeech_v1beta1_MultiSpeakerMarkup_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup getDefaultInstanceForType() {
      return com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup build() {
      com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup buildPartial() {
      com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup result =
          new com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup result) {
      if (turnsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          turns_ = java.util.Collections.unmodifiableList(turns_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.turns_ = turns_;
      } else {
        result.turns_ = turnsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup) {
        return mergeFrom((com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup other) {
      if (other == com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.getDefaultInstance())
        return this;
      if (turnsBuilder_ == null) {
        if (!other.turns_.isEmpty()) {
          if (turns_.isEmpty()) {
            turns_ = other.turns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTurnsIsMutable();
            turns_.addAll(other.turns_);
          }
          onChanged();
        }
      } else {
        if (!other.turns_.isEmpty()) {
          if (turnsBuilder_.isEmpty()) {
            turnsBuilder_.dispose();
            turnsBuilder_ = null;
            turns_ = other.turns_;
            bitField0_ = (bitField0_ & ~0x00000001);
            turnsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getTurnsFieldBuilder()
                    : null;
          } else {
            turnsBuilder_.addAllMessages(other.turns_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn m =
                    input.readMessage(
                        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.parser(),
                        extensionRegistry);
                if (turnsBuilder_ == null) {
                  ensureTurnsIsMutable();
                  turns_.add(m);
                } else {
                  turnsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn> turns_ =
        java.util.Collections.emptyList();

    private void ensureTurnsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        turns_ =
            new java.util.ArrayList<com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn>(
                turns_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn,
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder,
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder>
        turnsBuilder_;

    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn>
        getTurnsList() {
      if (turnsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(turns_);
      } else {
        return turnsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public int getTurnsCount() {
      if (turnsBuilder_ == null) {
        return turns_.size();
      } else {
        return turnsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn getTurns(int index) {
      if (turnsBuilder_ == null) {
        return turns_.get(index);
      } else {
        return turnsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setTurns(
        int index, com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn value) {
      if (turnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTurnsIsMutable();
        turns_.set(index, value);
        onChanged();
      } else {
        turnsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setTurns(
        int index,
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder builderForValue) {
      if (turnsBuilder_ == null) {
        ensureTurnsIsMutable();
        turns_.set(index, builderForValue.build());
        onChanged();
      } else {
        turnsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addTurns(com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn value) {
      if (turnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTurnsIsMutable();
        turns_.add(value);
        onChanged();
      } else {
        turnsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addTurns(
        int index, com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn value) {
      if (turnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTurnsIsMutable();
        turns_.add(index, value);
        onChanged();
      } else {
        turnsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addTurns(
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder builderForValue) {
      if (turnsBuilder_ == null) {
        ensureTurnsIsMutable();
        turns_.add(builderForValue.build());
        onChanged();
      } else {
        turnsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addTurns(
        int index,
        com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder builderForValue) {
      if (turnsBuilder_ == null) {
        ensureTurnsIsMutable();
        turns_.add(index, builderForValue.build());
        onChanged();
      } else {
        turnsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addAllTurns(
        java.lang.Iterable<? extends com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn>
            values) {
      if (turnsBuilder_ == null) {
        ensureTurnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, turns_);
        onChanged();
      } else {
        turnsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearTurns() {
      if (turnsBuilder_ == null) {
        turns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        turnsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder removeTurns(int index) {
      if (turnsBuilder_ == null) {
        ensureTurnsIsMutable();
        turns_.remove(index);
        onChanged();
      } else {
        turnsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder getTurnsBuilder(
        int index) {
      return getTurnsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder getTurnsOrBuilder(
        int index) {
      if (turnsBuilder_ == null) {
        return turns_.get(index);
      } else {
        return turnsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder>
        getTurnsOrBuilderList() {
      if (turnsBuilder_ != null) {
        return turnsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(turns_);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder addTurnsBuilder() {
      return getTurnsFieldBuilder()
          .addBuilder(
              com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder addTurnsBuilder(
        int index) {
      return getTurnsFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Required. Speaker turns.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn turns = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder>
        getTurnsBuilderList() {
      return getTurnsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn,
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder,
            com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder>
        getTurnsFieldBuilder() {
      if (turnsBuilder_ == null) {
        turnsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn,
                com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.Turn.Builder,
                com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup.TurnOrBuilder>(
                turns_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        turns_ = null;
      }
      return turnsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup)
  private static final com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup();
  }

  public static com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MultiSpeakerMarkup> PARSER =
      new com.google.protobuf.AbstractParser<MultiSpeakerMarkup>() {
        @java.lang.Override
        public MultiSpeakerMarkup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<MultiSpeakerMarkup> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MultiSpeakerMarkup> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.texttospeech.v1beta1.MultiSpeakerMarkup getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
