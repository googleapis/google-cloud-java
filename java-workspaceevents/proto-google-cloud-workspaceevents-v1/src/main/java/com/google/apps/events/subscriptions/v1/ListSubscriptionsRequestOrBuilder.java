/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/events/subscriptions/v1/subscriptions_service.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.events.subscriptions.v1;

public interface ListSubscriptionsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.apps.events.subscriptions.v1.ListSubscriptionsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. The maximum number of subscriptions to return. The service might
   * return fewer than this value.
   *
   * If unspecified or set to `0`, up to 50 subscriptions are returned.
   *
   * The maximum value is 100. If you specify a value more than 100, the system
   * only returns 100 subscriptions.
   * </pre>
   *
   * <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageSize.
   */
  int getPageSize();

  /**
   *
   *
   * <pre>
   * Optional. A page token, received from a previous list subscriptions call.
   * Provide this parameter to retrieve the subsequent page.
   *
   * When paginating, the filter value should match the call that provided the
   * page token. Passing a different value might lead to unexpected results.
   * </pre>
   *
   * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   *
   *
   * <pre>
   * Optional. A page token, received from a previous list subscriptions call.
   * Provide this parameter to retrieve the subsequent page.
   *
   * When paginating, the filter value should match the call that provided the
   * page token. Passing a different value might lead to unexpected results.
   * </pre>
   *
   * <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString getPageTokenBytes();

  /**
   *
   *
   * <pre>
   * Required. A query filter.
   *
   * You can filter subscriptions by event type (`event_types`)
   * and target resource (`target_resource`).
   *
   * You must specify at least one event type in your query. To filter for
   * multiple event types, use the `OR` operator.
   *
   * To filter by both event type and target resource, use the `AND` operator
   * and specify the full resource name, such as
   * `//chat.googleapis.com/spaces/{space}`.
   *
   * For example, the following queries are valid:
   *
   * ```
   * event_types:"google.workspace.chat.membership.v1.updated" OR
   *   event_types:"google.workspace.chat.message.v1.created"
   *
   * event_types:"google.workspace.chat.message.v1.created" AND
   *   target_resource="//chat.googleapis.com/spaces/{space}"
   *
   * ( event_types:"google.workspace.chat.membership.v1.updated" OR
   *   event_types:"google.workspace.chat.message.v1.created" ) AND
   *   target_resource="//chat.googleapis.com/spaces/{space}"
   * ```
   *
   * The server rejects invalid queries with an `INVALID_ARGUMENT`
   * error.
   * </pre>
   *
   * <code>string filter = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The filter.
   */
  java.lang.String getFilter();
  /**
   *
   *
   * <pre>
   * Required. A query filter.
   *
   * You can filter subscriptions by event type (`event_types`)
   * and target resource (`target_resource`).
   *
   * You must specify at least one event type in your query. To filter for
   * multiple event types, use the `OR` operator.
   *
   * To filter by both event type and target resource, use the `AND` operator
   * and specify the full resource name, such as
   * `//chat.googleapis.com/spaces/{space}`.
   *
   * For example, the following queries are valid:
   *
   * ```
   * event_types:"google.workspace.chat.membership.v1.updated" OR
   *   event_types:"google.workspace.chat.message.v1.created"
   *
   * event_types:"google.workspace.chat.message.v1.created" AND
   *   target_resource="//chat.googleapis.com/spaces/{space}"
   *
   * ( event_types:"google.workspace.chat.membership.v1.updated" OR
   *   event_types:"google.workspace.chat.message.v1.created" ) AND
   *   target_resource="//chat.googleapis.com/spaces/{space}"
   * ```
   *
   * The server rejects invalid queries with an `INVALID_ARGUMENT`
   * error.
   * </pre>
   *
   * <code>string filter = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for filter.
   */
  com.google.protobuf.ByteString getFilterBytes();
}
