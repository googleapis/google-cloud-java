/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/events/subscriptions/v1/subscription_resource.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.events.subscriptions.v1;

public interface SubscriptionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.apps.events.subscriptions.v1.Subscription)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Non-empty default. The timestamp in UTC when the subscription expires.
   * Always displayed on output, regardless of what was used on input.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp expire_time = 13 [(.google.api.field_behavior) = NON_EMPTY_DEFAULT];
   * </code>
   *
   * @return Whether the expireTime field is set.
   */
  boolean hasExpireTime();
  /**
   *
   *
   * <pre>
   * Non-empty default. The timestamp in UTC when the subscription expires.
   * Always displayed on output, regardless of what was used on input.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp expire_time = 13 [(.google.api.field_behavior) = NON_EMPTY_DEFAULT];
   * </code>
   *
   * @return The expireTime.
   */
  com.google.protobuf.Timestamp getExpireTime();
  /**
   *
   *
   * <pre>
   * Non-empty default. The timestamp in UTC when the subscription expires.
   * Always displayed on output, regardless of what was used on input.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp expire_time = 13 [(.google.api.field_behavior) = NON_EMPTY_DEFAULT];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Input only. The time-to-live (TTL) or duration for the subscription. If
   * unspecified or set to `0`, uses the maximum possible duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 14 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   *
   * @return Whether the ttl field is set.
   */
  boolean hasTtl();
  /**
   *
   *
   * <pre>
   * Input only. The time-to-live (TTL) or duration for the subscription. If
   * unspecified or set to `0`, uses the maximum possible duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 14 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   *
   * @return The ttl.
   */
  com.google.protobuf.Duration getTtl();
  /**
   *
   *
   * <pre>
   * Input only. The time-to-live (TTL) or duration for the subscription. If
   * unspecified or set to `0`, uses the maximum possible duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 14 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   */
  com.google.protobuf.DurationOrBuilder getTtlOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. Immutable. Identifier. Resource name of the subscription.
   *
   * Format: `subscriptions/{subscription}`
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Optional. Immutable. Identifier. Resource name of the subscription.
   *
   * Format: `subscriptions/{subscription}`
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Output only. System-assigned unique identifier for the subscription.
   * </pre>
   *
   * <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The uid.
   */
  java.lang.String getUid();
  /**
   *
   *
   * <pre>
   * Output only. System-assigned unique identifier for the subscription.
   * </pre>
   *
   * <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for uid.
   */
  com.google.protobuf.ByteString getUidBytes();

  /**
   *
   *
   * <pre>
   * Required. Immutable. The Google Workspace resource that's monitored for
   * events, formatted as the [full resource
   * name](https://google.aip.dev/122#full-resource-names). To learn about
   * target resources and the events that they support, see [Supported Google
   * Workspace
   * events](https://developers.google.com/workspace/events#supported-events).
   *
   * A user can only authorize your app to create one subscription for a given
   * target resource. If your app tries to create another subscription with the
   * same user credentials, the request returns an `ALREADY_EXISTS` error.
   * </pre>
   *
   * <code>
   * string target_resource = 4 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The targetResource.
   */
  java.lang.String getTargetResource();
  /**
   *
   *
   * <pre>
   * Required. Immutable. The Google Workspace resource that's monitored for
   * events, formatted as the [full resource
   * name](https://google.aip.dev/122#full-resource-names). To learn about
   * target resources and the events that they support, see [Supported Google
   * Workspace
   * events](https://developers.google.com/workspace/events#supported-events).
   *
   * A user can only authorize your app to create one subscription for a given
   * target resource. If your app tries to create another subscription with the
   * same user credentials, the request returns an `ALREADY_EXISTS` error.
   * </pre>
   *
   * <code>
   * string target_resource = 4 [(.google.api.field_behavior) = IMMUTABLE, (.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for targetResource.
   */
  com.google.protobuf.ByteString getTargetResourceBytes();

  /**
   *
   *
   * <pre>
   * Required. Immutable. Unordered list. Input for creating a subscription.
   * Otherwise, output only. One or more types of events to receive about the
   * target resource. Formatted according to the CloudEvents specification.
   *
   * The supported event types depend on the target resource of your
   * subscription. For details, see [Supported Google Workspace
   * events](https://developers.google.com/workspace/events/guides#supported-events).
   *
   * By default, you also receive events about the [lifecycle of your
   * subscription](https://developers.google.com/workspace/events/guides/events-lifecycle).
   * You don't need to specify lifecycle events for this field.
   *
   * If you specify an event type that doesn't exist for the target resource,
   * the request returns an HTTP `400 Bad Request` status code.
   * </pre>
   *
   * <code>
   * repeated string event_types = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return A list containing the eventTypes.
   */
  java.util.List<java.lang.String> getEventTypesList();
  /**
   *
   *
   * <pre>
   * Required. Immutable. Unordered list. Input for creating a subscription.
   * Otherwise, output only. One or more types of events to receive about the
   * target resource. Formatted according to the CloudEvents specification.
   *
   * The supported event types depend on the target resource of your
   * subscription. For details, see [Supported Google Workspace
   * events](https://developers.google.com/workspace/events/guides#supported-events).
   *
   * By default, you also receive events about the [lifecycle of your
   * subscription](https://developers.google.com/workspace/events/guides/events-lifecycle).
   * You don't need to specify lifecycle events for this field.
   *
   * If you specify an event type that doesn't exist for the target resource,
   * the request returns an HTTP `400 Bad Request` status code.
   * </pre>
   *
   * <code>
   * repeated string event_types = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The count of eventTypes.
   */
  int getEventTypesCount();
  /**
   *
   *
   * <pre>
   * Required. Immutable. Unordered list. Input for creating a subscription.
   * Otherwise, output only. One or more types of events to receive about the
   * target resource. Formatted according to the CloudEvents specification.
   *
   * The supported event types depend on the target resource of your
   * subscription. For details, see [Supported Google Workspace
   * events](https://developers.google.com/workspace/events/guides#supported-events).
   *
   * By default, you also receive events about the [lifecycle of your
   * subscription](https://developers.google.com/workspace/events/guides/events-lifecycle).
   * You don't need to specify lifecycle events for this field.
   *
   * If you specify an event type that doesn't exist for the target resource,
   * the request returns an HTTP `400 Bad Request` status code.
   * </pre>
   *
   * <code>
   * repeated string event_types = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The eventTypes at the given index.
   */
  java.lang.String getEventTypes(int index);
  /**
   *
   *
   * <pre>
   * Required. Immutable. Unordered list. Input for creating a subscription.
   * Otherwise, output only. One or more types of events to receive about the
   * target resource. Formatted according to the CloudEvents specification.
   *
   * The supported event types depend on the target resource of your
   * subscription. For details, see [Supported Google Workspace
   * events](https://developers.google.com/workspace/events/guides#supported-events).
   *
   * By default, you also receive events about the [lifecycle of your
   * subscription](https://developers.google.com/workspace/events/guides/events-lifecycle).
   * You don't need to specify lifecycle events for this field.
   *
   * If you specify an event type that doesn't exist for the target resource,
   * the request returns an HTTP `400 Bad Request` status code.
   * </pre>
   *
   * <code>
   * repeated string event_types = 5 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the eventTypes at the given index.
   */
  com.google.protobuf.ByteString getEventTypesBytes(int index);

  /**
   *
   *
   * <pre>
   * Optional. Options about what data to include in the event payload. Only
   * supported for Google Chat events.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.PayloadOptions payload_options = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the payloadOptions field is set.
   */
  boolean hasPayloadOptions();
  /**
   *
   *
   * <pre>
   * Optional. Options about what data to include in the event payload. Only
   * supported for Google Chat events.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.PayloadOptions payload_options = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The payloadOptions.
   */
  com.google.apps.events.subscriptions.v1.PayloadOptions getPayloadOptions();
  /**
   *
   *
   * <pre>
   * Optional. Options about what data to include in the event payload. Only
   * supported for Google Chat events.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.PayloadOptions payload_options = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.apps.events.subscriptions.v1.PayloadOptionsOrBuilder getPayloadOptionsOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Immutable. The endpoint where the subscription delivers events,
   * such as a Pub/Sub topic.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.NotificationEndpoint notification_endpoint = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return Whether the notificationEndpoint field is set.
   */
  boolean hasNotificationEndpoint();
  /**
   *
   *
   * <pre>
   * Required. Immutable. The endpoint where the subscription delivers events,
   * such as a Pub/Sub topic.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.NotificationEndpoint notification_endpoint = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The notificationEndpoint.
   */
  com.google.apps.events.subscriptions.v1.NotificationEndpoint getNotificationEndpoint();
  /**
   *
   *
   * <pre>
   * Required. Immutable. The endpoint where the subscription delivers events,
   * such as a Pub/Sub topic.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.NotificationEndpoint notification_endpoint = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   */
  com.google.apps.events.subscriptions.v1.NotificationEndpointOrBuilder
      getNotificationEndpointOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The state of the subscription. Determines whether the
   * subscription can receive events and deliver them to the notification
   * endpoint.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.Subscription.State state = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   *
   *
   * <pre>
   * Output only. The state of the subscription. Determines whether the
   * subscription can receive events and deliver them to the notification
   * endpoint.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.Subscription.State state = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  com.google.apps.events.subscriptions.v1.Subscription.State getState();

  /**
   *
   *
   * <pre>
   * Output only. The error that suspended the subscription.
   *
   * To reactivate the subscription, resolve the error and call the
   * [`ReactivateSubscription`][google.apps.events.subscriptions.v1.SubscriptionsService.ReactivateSubscription]
   * method.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.Subscription.ErrorType suspension_reason = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for suspensionReason.
   */
  int getSuspensionReasonValue();
  /**
   *
   *
   * <pre>
   * Output only. The error that suspended the subscription.
   *
   * To reactivate the subscription, resolve the error and call the
   * [`ReactivateSubscription`][google.apps.events.subscriptions.v1.SubscriptionsService.ReactivateSubscription]
   * method.
   * </pre>
   *
   * <code>
   * .google.apps.events.subscriptions.v1.Subscription.ErrorType suspension_reason = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The suspensionReason.
   */
  com.google.apps.events.subscriptions.v1.Subscription.ErrorType getSuspensionReason();

  /**
   *
   *
   * <pre>
   * Output only. The user who authorized the creation of the
   * subscription.
   *
   * Format: `users/{user}`
   *
   * For Google Workspace users, the `{user}` value is the
   * [`user.id`](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users#User.FIELDS.ids)
   * field from the Directory API.
   * </pre>
   *
   * <code>
   * string authority = 10 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The authority.
   */
  java.lang.String getAuthority();
  /**
   *
   *
   * <pre>
   * Output only. The user who authorized the creation of the
   * subscription.
   *
   * Format: `users/{user}`
   *
   * For Google Workspace users, the `{user}` value is the
   * [`user.id`](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users#User.FIELDS.ids)
   * field from the Directory API.
   * </pre>
   *
   * <code>
   * string authority = 10 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for authority.
   */
  com.google.protobuf.ByteString getAuthorityBytes();

  /**
   *
   *
   * <pre>
   * Output only. The time when the subscription is created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   *
   *
   * <pre>
   * Output only. The time when the subscription is created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   *
   *
   * <pre>
   * Output only. The time when the subscription is created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The last time that the subscription is updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   *
   *
   * <pre>
   * Output only. The last time that the subscription is updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   *
   *
   * <pre>
   * Output only. The last time that the subscription is updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. If `true`, the subscription is in the process of being
   * updated.
   * </pre>
   *
   * <code>bool reconciling = 15 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The reconciling.
   */
  boolean getReconciling();

  /**
   *
   *
   * <pre>
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and might be sent on update requests to ensure the client has
   * an up-to-date value before proceeding.
   * </pre>
   *
   * <code>string etag = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The etag.
   */
  java.lang.String getEtag();
  /**
   *
   *
   * <pre>
   * Optional. This checksum is computed by the server based on the value of
   * other fields, and might be sent on update requests to ensure the client has
   * an up-to-date value before proceeding.
   * </pre>
   *
   * <code>string etag = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for etag.
   */
  com.google.protobuf.ByteString getEtagBytes();

  com.google.apps.events.subscriptions.v1.Subscription.ExpirationCase getExpirationCase();
}
