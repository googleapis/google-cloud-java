/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/video/livestream/v1/outputs.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.video.livestream.v1;

/**
 *
 *
 * <pre>
 * Timecode configuration.
 * </pre>
 *
 * Protobuf type {@code google.cloud.video.livestream.v1.TimecodeConfig}
 */
public final class TimecodeConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.video.livestream.v1.TimecodeConfig)
    TimecodeConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use TimecodeConfig.newBuilder() to construct.
  private TimecodeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private TimecodeConfig() {
    source_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new TimecodeConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.video.livestream.v1.OutputsProto
        .internal_static_google_cloud_video_livestream_v1_TimecodeConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.video.livestream.v1.OutputsProto
        .internal_static_google_cloud_video_livestream_v1_TimecodeConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.video.livestream.v1.TimecodeConfig.class,
            com.google.cloud.video.livestream.v1.TimecodeConfig.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The source of timecode.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource}
   */
  public enum TimecodeSource implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * The timecode source is not specified.
     * </pre>
     *
     * <code>TIMECODE_SOURCE_UNSPECIFIED = 0;</code>
     */
    TIMECODE_SOURCE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Use input media timestamp.
     * </pre>
     *
     * <code>MEDIA_TIMESTAMP = 1;</code>
     */
    MEDIA_TIMESTAMP(1),
    /**
     *
     *
     * <pre>
     * Use input embedded timecode e.g. picture timing SEI message.
     * </pre>
     *
     * <code>EMBEDDED_TIMECODE = 2;</code>
     */
    EMBEDDED_TIMECODE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * The timecode source is not specified.
     * </pre>
     *
     * <code>TIMECODE_SOURCE_UNSPECIFIED = 0;</code>
     */
    public static final int TIMECODE_SOURCE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Use input media timestamp.
     * </pre>
     *
     * <code>MEDIA_TIMESTAMP = 1;</code>
     */
    public static final int MEDIA_TIMESTAMP_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Use input embedded timecode e.g. picture timing SEI message.
     * </pre>
     *
     * <code>EMBEDDED_TIMECODE = 2;</code>
     */
    public static final int EMBEDDED_TIMECODE_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimecodeSource valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TimecodeSource forNumber(int value) {
      switch (value) {
        case 0:
          return TIMECODE_SOURCE_UNSPECIFIED;
        case 1:
          return MEDIA_TIMESTAMP;
        case 2:
          return EMBEDDED_TIMECODE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TimecodeSource> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<TimecodeSource> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TimecodeSource>() {
          public TimecodeSource findValueByNumber(int number) {
            return TimecodeSource.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.video.livestream.v1.TimecodeConfig.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final TimecodeSource[] VALUES = values();

    public static TimecodeSource valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TimecodeSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource)
  }

  private int timeOffsetCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object timeOffset_;

  public enum TimeOffsetCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    UTC_OFFSET(2),
    TIME_ZONE(3),
    TIMEOFFSET_NOT_SET(0);
    private final int value;

    private TimeOffsetCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimeOffsetCase valueOf(int value) {
      return forNumber(value);
    }

    public static TimeOffsetCase forNumber(int value) {
      switch (value) {
        case 2:
          return UTC_OFFSET;
        case 3:
          return TIME_ZONE;
        case 0:
          return TIMEOFFSET_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public TimeOffsetCase getTimeOffsetCase() {
    return TimeOffsetCase.forNumber(timeOffsetCase_);
  }

  public static final int SOURCE_FIELD_NUMBER = 1;
  private int source_ = 0;
  /**
   *
   *
   * <pre>
   * The source of the timecode that will later be used in outputs/manifests.
   * It determines the initial timecode/timestamp (first frame) of output
   * streams.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
   *
   * @return The enum numeric value on the wire for source.
   */
  @java.lang.Override
  public int getSourceValue() {
    return source_;
  }
  /**
   *
   *
   * <pre>
   * The source of the timecode that will later be used in outputs/manifests.
   * It determines the initial timecode/timestamp (first frame) of output
   * streams.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
   *
   * @return The source.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource getSource() {
    com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource result =
        com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource.forNumber(source_);
    return result == null
        ? com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource.UNRECOGNIZED
        : result;
  }

  public static final int UTC_OFFSET_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
   * </pre>
   *
   * <code>.google.protobuf.Duration utc_offset = 2;</code>
   *
   * @return Whether the utcOffset field is set.
   */
  @java.lang.Override
  public boolean hasUtcOffset() {
    return timeOffsetCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
   * </pre>
   *
   * <code>.google.protobuf.Duration utc_offset = 2;</code>
   *
   * @return The utcOffset.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getUtcOffset() {
    if (timeOffsetCase_ == 2) {
      return (com.google.protobuf.Duration) timeOffset_;
    }
    return com.google.protobuf.Duration.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
   * </pre>
   *
   * <code>.google.protobuf.Duration utc_offset = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getUtcOffsetOrBuilder() {
    if (timeOffsetCase_ == 2) {
      return (com.google.protobuf.Duration) timeOffset_;
    }
    return com.google.protobuf.Duration.getDefaultInstance();
  }

  public static final int TIME_ZONE_FIELD_NUMBER = 3;
  /**
   *
   *
   * <pre>
   * Time zone e.g. "America/Los_Angeles".
   * </pre>
   *
   * <code>.google.type.TimeZone time_zone = 3;</code>
   *
   * @return Whether the timeZone field is set.
   */
  @java.lang.Override
  public boolean hasTimeZone() {
    return timeOffsetCase_ == 3;
  }
  /**
   *
   *
   * <pre>
   * Time zone e.g. "America/Los_Angeles".
   * </pre>
   *
   * <code>.google.type.TimeZone time_zone = 3;</code>
   *
   * @return The timeZone.
   */
  @java.lang.Override
  public com.google.type.TimeZone getTimeZone() {
    if (timeOffsetCase_ == 3) {
      return (com.google.type.TimeZone) timeOffset_;
    }
    return com.google.type.TimeZone.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Time zone e.g. "America/Los_Angeles".
   * </pre>
   *
   * <code>.google.type.TimeZone time_zone = 3;</code>
   */
  @java.lang.Override
  public com.google.type.TimeZoneOrBuilder getTimeZoneOrBuilder() {
    if (timeOffsetCase_ == 3) {
      return (com.google.type.TimeZone) timeOffset_;
    }
    return com.google.type.TimeZone.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (source_
        != com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource
            .TIMECODE_SOURCE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, source_);
    }
    if (timeOffsetCase_ == 2) {
      output.writeMessage(2, (com.google.protobuf.Duration) timeOffset_);
    }
    if (timeOffsetCase_ == 3) {
      output.writeMessage(3, (com.google.type.TimeZone) timeOffset_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (source_
        != com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource
            .TIMECODE_SOURCE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, source_);
    }
    if (timeOffsetCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (com.google.protobuf.Duration) timeOffset_);
    }
    if (timeOffsetCase_ == 3) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, (com.google.type.TimeZone) timeOffset_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.video.livestream.v1.TimecodeConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.video.livestream.v1.TimecodeConfig other =
        (com.google.cloud.video.livestream.v1.TimecodeConfig) obj;

    if (source_ != other.source_) return false;
    if (!getTimeOffsetCase().equals(other.getTimeOffsetCase())) return false;
    switch (timeOffsetCase_) {
      case 2:
        if (!getUtcOffset().equals(other.getUtcOffset())) return false;
        break;
      case 3:
        if (!getTimeZone().equals(other.getTimeZone())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + source_;
    switch (timeOffsetCase_) {
      case 2:
        hash = (37 * hash) + UTC_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getUtcOffset().hashCode();
        break;
      case 3:
        hash = (37 * hash) + TIME_ZONE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeZone().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.video.livestream.v1.TimecodeConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Timecode configuration.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.livestream.v1.TimecodeConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.video.livestream.v1.TimecodeConfig)
      com.google.cloud.video.livestream.v1.TimecodeConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.livestream.v1.OutputsProto
          .internal_static_google_cloud_video_livestream_v1_TimecodeConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.livestream.v1.OutputsProto
          .internal_static_google_cloud_video_livestream_v1_TimecodeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.livestream.v1.TimecodeConfig.class,
              com.google.cloud.video.livestream.v1.TimecodeConfig.Builder.class);
    }

    // Construct using com.google.cloud.video.livestream.v1.TimecodeConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      source_ = 0;
      if (utcOffsetBuilder_ != null) {
        utcOffsetBuilder_.clear();
      }
      if (timeZoneBuilder_ != null) {
        timeZoneBuilder_.clear();
      }
      timeOffsetCase_ = 0;
      timeOffset_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.video.livestream.v1.OutputsProto
          .internal_static_google_cloud_video_livestream_v1_TimecodeConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.TimecodeConfig getDefaultInstanceForType() {
      return com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.TimecodeConfig build() {
      com.google.cloud.video.livestream.v1.TimecodeConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.TimecodeConfig buildPartial() {
      com.google.cloud.video.livestream.v1.TimecodeConfig result =
          new com.google.cloud.video.livestream.v1.TimecodeConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.video.livestream.v1.TimecodeConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.source_ = source_;
      }
    }

    private void buildPartialOneofs(com.google.cloud.video.livestream.v1.TimecodeConfig result) {
      result.timeOffsetCase_ = timeOffsetCase_;
      result.timeOffset_ = this.timeOffset_;
      if (timeOffsetCase_ == 2 && utcOffsetBuilder_ != null) {
        result.timeOffset_ = utcOffsetBuilder_.build();
      }
      if (timeOffsetCase_ == 3 && timeZoneBuilder_ != null) {
        result.timeOffset_ = timeZoneBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.video.livestream.v1.TimecodeConfig) {
        return mergeFrom((com.google.cloud.video.livestream.v1.TimecodeConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.video.livestream.v1.TimecodeConfig other) {
      if (other == com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance())
        return this;
      if (other.source_ != 0) {
        setSourceValue(other.getSourceValue());
      }
      switch (other.getTimeOffsetCase()) {
        case UTC_OFFSET:
          {
            mergeUtcOffset(other.getUtcOffset());
            break;
          }
        case TIME_ZONE:
          {
            mergeTimeZone(other.getTimeZone());
            break;
          }
        case TIMEOFFSET_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                source_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 18:
              {
                input.readMessage(getUtcOffsetFieldBuilder().getBuilder(), extensionRegistry);
                timeOffsetCase_ = 2;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getTimeZoneFieldBuilder().getBuilder(), extensionRegistry);
                timeOffsetCase_ = 3;
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int timeOffsetCase_ = 0;
    private java.lang.Object timeOffset_;

    public TimeOffsetCase getTimeOffsetCase() {
      return TimeOffsetCase.forNumber(timeOffsetCase_);
    }

    public Builder clearTimeOffset() {
      timeOffsetCase_ = 0;
      timeOffset_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private int source_ = 0;
    /**
     *
     *
     * <pre>
     * The source of the timecode that will later be used in outputs/manifests.
     * It determines the initial timecode/timestamp (first frame) of output
     * streams.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
     *
     * @return The enum numeric value on the wire for source.
     */
    @java.lang.Override
    public int getSourceValue() {
      return source_;
    }
    /**
     *
     *
     * <pre>
     * The source of the timecode that will later be used in outputs/manifests.
     * It determines the initial timecode/timestamp (first frame) of output
     * streams.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
     *
     * @param value The enum numeric value on the wire for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceValue(int value) {
      source_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The source of the timecode that will later be used in outputs/manifests.
     * It determines the initial timecode/timestamp (first frame) of output
     * streams.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
     *
     * @return The source.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource getSource() {
      com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource result =
          com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource.forNumber(source_);
      return result == null
          ? com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The source of the timecode that will later be used in outputs/manifests.
     * It determines the initial timecode/timestamp (first frame) of output
     * streams.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
     *
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(
        com.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      source_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The source of the timecode that will later be used in outputs/manifests.
     * It determines the initial timecode/timestamp (first frame) of output
     * streams.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig.TimecodeSource source = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSource() {
      bitField0_ = (bitField0_ & ~0x00000001);
      source_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        utcOffsetBuilder_;
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     *
     * @return Whether the utcOffset field is set.
     */
    @java.lang.Override
    public boolean hasUtcOffset() {
      return timeOffsetCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     *
     * @return The utcOffset.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getUtcOffset() {
      if (utcOffsetBuilder_ == null) {
        if (timeOffsetCase_ == 2) {
          return (com.google.protobuf.Duration) timeOffset_;
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      } else {
        if (timeOffsetCase_ == 2) {
          return utcOffsetBuilder_.getMessage();
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    public Builder setUtcOffset(com.google.protobuf.Duration value) {
      if (utcOffsetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeOffset_ = value;
        onChanged();
      } else {
        utcOffsetBuilder_.setMessage(value);
      }
      timeOffsetCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    public Builder setUtcOffset(com.google.protobuf.Duration.Builder builderForValue) {
      if (utcOffsetBuilder_ == null) {
        timeOffset_ = builderForValue.build();
        onChanged();
      } else {
        utcOffsetBuilder_.setMessage(builderForValue.build());
      }
      timeOffsetCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    public Builder mergeUtcOffset(com.google.protobuf.Duration value) {
      if (utcOffsetBuilder_ == null) {
        if (timeOffsetCase_ == 2
            && timeOffset_ != com.google.protobuf.Duration.getDefaultInstance()) {
          timeOffset_ =
              com.google.protobuf.Duration.newBuilder((com.google.protobuf.Duration) timeOffset_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          timeOffset_ = value;
        }
        onChanged();
      } else {
        if (timeOffsetCase_ == 2) {
          utcOffsetBuilder_.mergeFrom(value);
        } else {
          utcOffsetBuilder_.setMessage(value);
        }
      }
      timeOffsetCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    public Builder clearUtcOffset() {
      if (utcOffsetBuilder_ == null) {
        if (timeOffsetCase_ == 2) {
          timeOffsetCase_ = 0;
          timeOffset_ = null;
          onChanged();
        }
      } else {
        if (timeOffsetCase_ == 2) {
          timeOffsetCase_ = 0;
          timeOffset_ = null;
        }
        utcOffsetBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    public com.google.protobuf.Duration.Builder getUtcOffsetBuilder() {
      return getUtcOffsetFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getUtcOffsetOrBuilder() {
      if ((timeOffsetCase_ == 2) && (utcOffsetBuilder_ != null)) {
        return utcOffsetBuilder_.getMessageOrBuilder();
      } else {
        if (timeOffsetCase_ == 2) {
          return (com.google.protobuf.Duration) timeOffset_;
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * UTC offset. Must be whole seconds, between -18 hours and +18 hours.
     * </pre>
     *
     * <code>.google.protobuf.Duration utc_offset = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        getUtcOffsetFieldBuilder() {
      if (utcOffsetBuilder_ == null) {
        if (!(timeOffsetCase_ == 2)) {
          timeOffset_ = com.google.protobuf.Duration.getDefaultInstance();
        }
        utcOffsetBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration,
                com.google.protobuf.Duration.Builder,
                com.google.protobuf.DurationOrBuilder>(
                (com.google.protobuf.Duration) timeOffset_, getParentForChildren(), isClean());
        timeOffset_ = null;
      }
      timeOffsetCase_ = 2;
      onChanged();
      return utcOffsetBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.TimeZone,
            com.google.type.TimeZone.Builder,
            com.google.type.TimeZoneOrBuilder>
        timeZoneBuilder_;
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     *
     * @return Whether the timeZone field is set.
     */
    @java.lang.Override
    public boolean hasTimeZone() {
      return timeOffsetCase_ == 3;
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     *
     * @return The timeZone.
     */
    @java.lang.Override
    public com.google.type.TimeZone getTimeZone() {
      if (timeZoneBuilder_ == null) {
        if (timeOffsetCase_ == 3) {
          return (com.google.type.TimeZone) timeOffset_;
        }
        return com.google.type.TimeZone.getDefaultInstance();
      } else {
        if (timeOffsetCase_ == 3) {
          return timeZoneBuilder_.getMessage();
        }
        return com.google.type.TimeZone.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    public Builder setTimeZone(com.google.type.TimeZone value) {
      if (timeZoneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeOffset_ = value;
        onChanged();
      } else {
        timeZoneBuilder_.setMessage(value);
      }
      timeOffsetCase_ = 3;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    public Builder setTimeZone(com.google.type.TimeZone.Builder builderForValue) {
      if (timeZoneBuilder_ == null) {
        timeOffset_ = builderForValue.build();
        onChanged();
      } else {
        timeZoneBuilder_.setMessage(builderForValue.build());
      }
      timeOffsetCase_ = 3;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    public Builder mergeTimeZone(com.google.type.TimeZone value) {
      if (timeZoneBuilder_ == null) {
        if (timeOffsetCase_ == 3 && timeOffset_ != com.google.type.TimeZone.getDefaultInstance()) {
          timeOffset_ =
              com.google.type.TimeZone.newBuilder((com.google.type.TimeZone) timeOffset_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          timeOffset_ = value;
        }
        onChanged();
      } else {
        if (timeOffsetCase_ == 3) {
          timeZoneBuilder_.mergeFrom(value);
        } else {
          timeZoneBuilder_.setMessage(value);
        }
      }
      timeOffsetCase_ = 3;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    public Builder clearTimeZone() {
      if (timeZoneBuilder_ == null) {
        if (timeOffsetCase_ == 3) {
          timeOffsetCase_ = 0;
          timeOffset_ = null;
          onChanged();
        }
      } else {
        if (timeOffsetCase_ == 3) {
          timeOffsetCase_ = 0;
          timeOffset_ = null;
        }
        timeZoneBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    public com.google.type.TimeZone.Builder getTimeZoneBuilder() {
      return getTimeZoneFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    @java.lang.Override
    public com.google.type.TimeZoneOrBuilder getTimeZoneOrBuilder() {
      if ((timeOffsetCase_ == 3) && (timeZoneBuilder_ != null)) {
        return timeZoneBuilder_.getMessageOrBuilder();
      } else {
        if (timeOffsetCase_ == 3) {
          return (com.google.type.TimeZone) timeOffset_;
        }
        return com.google.type.TimeZone.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Time zone e.g. "America/Los_Angeles".
     * </pre>
     *
     * <code>.google.type.TimeZone time_zone = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.TimeZone,
            com.google.type.TimeZone.Builder,
            com.google.type.TimeZoneOrBuilder>
        getTimeZoneFieldBuilder() {
      if (timeZoneBuilder_ == null) {
        if (!(timeOffsetCase_ == 3)) {
          timeOffset_ = com.google.type.TimeZone.getDefaultInstance();
        }
        timeZoneBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.TimeZone,
                com.google.type.TimeZone.Builder,
                com.google.type.TimeZoneOrBuilder>(
                (com.google.type.TimeZone) timeOffset_, getParentForChildren(), isClean());
        timeOffset_ = null;
      }
      timeOffsetCase_ = 3;
      onChanged();
      return timeZoneBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.video.livestream.v1.TimecodeConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.video.livestream.v1.TimecodeConfig)
  private static final com.google.cloud.video.livestream.v1.TimecodeConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.video.livestream.v1.TimecodeConfig();
  }

  public static com.google.cloud.video.livestream.v1.TimecodeConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TimecodeConfig> PARSER =
      new com.google.protobuf.AbstractParser<TimecodeConfig>() {
        @java.lang.Override
        public TimecodeConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<TimecodeConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TimecodeConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.video.livestream.v1.TimecodeConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
