/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/video/livestream/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.video.livestream.v1;

/**
 *
 *
 * <pre>
 * Channel resource represents the processor that does a user-defined
 * "streaming" operation, which includes getting an input stream through an
 * input, transcoding it to multiple renditions, and publishing output live
 * streams in certain formats (for example, HLS or DASH) to the specified
 * location.
 * </pre>
 *
 * Protobuf type {@code google.cloud.video.livestream.v1.Channel}
 */
public final class Channel extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.video.livestream.v1.Channel)
    ChannelOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Channel.newBuilder() to construct.
  private Channel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Channel() {
    name_ = "";
    inputAttachments_ = java.util.Collections.emptyList();
    activeInput_ = "";
    elementaryStreams_ = java.util.Collections.emptyList();
    muxStreams_ = java.util.Collections.emptyList();
    manifests_ = java.util.Collections.emptyList();
    spriteSheets_ = java.util.Collections.emptyList();
    streamingState_ = 0;
    encryptions_ = java.util.Collections.emptyList();
    staticOverlays_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Channel();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.video.livestream.v1.ResourcesProto
        .internal_static_google_cloud_video_livestream_v1_Channel_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 4:
        return internalGetLabels();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.video.livestream.v1.ResourcesProto
        .internal_static_google_cloud_video_livestream_v1_Channel_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.video.livestream.v1.Channel.class,
            com.google.cloud.video.livestream.v1.Channel.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * State of streaming operation that the channel is running.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.video.livestream.v1.Channel.StreamingState}
   */
  public enum StreamingState implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Streaming state is not specified.
     * </pre>
     *
     * <code>STREAMING_STATE_UNSPECIFIED = 0;</code>
     */
    STREAMING_STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Channel is getting the input stream, generating the live streams to the
     * specified output location.
     * </pre>
     *
     * <code>STREAMING = 1;</code>
     */
    STREAMING(1),
    /**
     *
     *
     * <pre>
     * Channel is waiting for the input stream through the input.
     * </pre>
     *
     * <code>AWAITING_INPUT = 2;</code>
     */
    AWAITING_INPUT(2),
    /**
     *
     *
     * <pre>
     * Channel is running, but has trouble publishing the live streams onto the
     * specified output location (for example, the specified Cloud Storage
     * bucket is not writable).
     * </pre>
     *
     * <code>STREAMING_ERROR = 4;</code>
     */
    STREAMING_ERROR(4),
    /**
     *
     *
     * <pre>
     * Channel is generating live streams with no input stream. Live streams are
     * filled out with black screen, while input stream is missing.
     * Not supported yet.
     * </pre>
     *
     * <code>STREAMING_NO_INPUT = 5;</code>
     */
    STREAMING_NO_INPUT(5),
    /**
     *
     *
     * <pre>
     * Channel is stopped, finishing live streams.
     * </pre>
     *
     * <code>STOPPED = 6;</code>
     */
    STOPPED(6),
    /**
     *
     *
     * <pre>
     * Channel is starting.
     * </pre>
     *
     * <code>STARTING = 7;</code>
     */
    STARTING(7),
    /**
     *
     *
     * <pre>
     * Channel is stopping.
     * </pre>
     *
     * <code>STOPPING = 8;</code>
     */
    STOPPING(8),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Streaming state is not specified.
     * </pre>
     *
     * <code>STREAMING_STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STREAMING_STATE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Channel is getting the input stream, generating the live streams to the
     * specified output location.
     * </pre>
     *
     * <code>STREAMING = 1;</code>
     */
    public static final int STREAMING_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Channel is waiting for the input stream through the input.
     * </pre>
     *
     * <code>AWAITING_INPUT = 2;</code>
     */
    public static final int AWAITING_INPUT_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Channel is running, but has trouble publishing the live streams onto the
     * specified output location (for example, the specified Cloud Storage
     * bucket is not writable).
     * </pre>
     *
     * <code>STREAMING_ERROR = 4;</code>
     */
    public static final int STREAMING_ERROR_VALUE = 4;
    /**
     *
     *
     * <pre>
     * Channel is generating live streams with no input stream. Live streams are
     * filled out with black screen, while input stream is missing.
     * Not supported yet.
     * </pre>
     *
     * <code>STREAMING_NO_INPUT = 5;</code>
     */
    public static final int STREAMING_NO_INPUT_VALUE = 5;
    /**
     *
     *
     * <pre>
     * Channel is stopped, finishing live streams.
     * </pre>
     *
     * <code>STOPPED = 6;</code>
     */
    public static final int STOPPED_VALUE = 6;
    /**
     *
     *
     * <pre>
     * Channel is starting.
     * </pre>
     *
     * <code>STARTING = 7;</code>
     */
    public static final int STARTING_VALUE = 7;
    /**
     *
     *
     * <pre>
     * Channel is stopping.
     * </pre>
     *
     * <code>STOPPING = 8;</code>
     */
    public static final int STOPPING_VALUE = 8;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StreamingState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static StreamingState forNumber(int value) {
      switch (value) {
        case 0:
          return STREAMING_STATE_UNSPECIFIED;
        case 1:
          return STREAMING;
        case 2:
          return AWAITING_INPUT;
        case 4:
          return STREAMING_ERROR;
        case 5:
          return STREAMING_NO_INPUT;
        case 6:
          return STOPPED;
        case 7:
          return STARTING;
        case 8:
          return STOPPING;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StreamingState> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<StreamingState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<StreamingState>() {
          public StreamingState findValueByNumber(int number) {
            return StreamingState.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.video.livestream.v1.Channel.getDescriptor().getEnumTypes().get(0);
    }

    private static final StreamingState[] VALUES = values();

    public static StreamingState valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StreamingState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.video.livestream.v1.Channel.StreamingState)
  }

  public interface OutputOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.video.livestream.v1.Channel.Output)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
     * </pre>
     *
     * <code>string uri = 1;</code>
     *
     * @return The uri.
     */
    java.lang.String getUri();
    /**
     *
     *
     * <pre>
     * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
     * </pre>
     *
     * <code>string uri = 1;</code>
     *
     * @return The bytes for uri.
     */
    com.google.protobuf.ByteString getUriBytes();
  }
  /**
   *
   *
   * <pre>
   * Location of output file(s) in a Google Cloud Storage bucket.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.livestream.v1.Channel.Output}
   */
  public static final class Output extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.video.livestream.v1.Channel.Output)
      OutputOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Output.newBuilder() to construct.
    private Output(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Output() {
      uri_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Output();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.livestream.v1.ResourcesProto
          .internal_static_google_cloud_video_livestream_v1_Channel_Output_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.livestream.v1.ResourcesProto
          .internal_static_google_cloud_video_livestream_v1_Channel_Output_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.livestream.v1.Channel.Output.class,
              com.google.cloud.video.livestream.v1.Channel.Output.Builder.class);
    }

    public static final int URI_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object uri_ = "";
    /**
     *
     *
     * <pre>
     * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
     * </pre>
     *
     * <code>string uri = 1;</code>
     *
     * @return The uri.
     */
    @java.lang.Override
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
     * </pre>
     *
     * <code>string uri = 1;</code>
     *
     * @return The bytes for uri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uri_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uri_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.video.livestream.v1.Channel.Output)) {
        return super.equals(obj);
      }
      com.google.cloud.video.livestream.v1.Channel.Output other =
          (com.google.cloud.video.livestream.v1.Channel.Output) obj;

      if (!getUri().equals(other.getUri())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.video.livestream.v1.Channel.Output prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Location of output file(s) in a Google Cloud Storage bucket.
     * </pre>
     *
     * Protobuf type {@code google.cloud.video.livestream.v1.Channel.Output}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.video.livestream.v1.Channel.Output)
        com.google.cloud.video.livestream.v1.Channel.OutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.video.livestream.v1.ResourcesProto
            .internal_static_google_cloud_video_livestream_v1_Channel_Output_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.video.livestream.v1.ResourcesProto
            .internal_static_google_cloud_video_livestream_v1_Channel_Output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.video.livestream.v1.Channel.Output.class,
                com.google.cloud.video.livestream.v1.Channel.Output.Builder.class);
      }

      // Construct using com.google.cloud.video.livestream.v1.Channel.Output.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        uri_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.video.livestream.v1.ResourcesProto
            .internal_static_google_cloud_video_livestream_v1_Channel_Output_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.video.livestream.v1.Channel.Output getDefaultInstanceForType() {
        return com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.video.livestream.v1.Channel.Output build() {
        com.google.cloud.video.livestream.v1.Channel.Output result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.video.livestream.v1.Channel.Output buildPartial() {
        com.google.cloud.video.livestream.v1.Channel.Output result =
            new com.google.cloud.video.livestream.v1.Channel.Output(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloud.video.livestream.v1.Channel.Output result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.uri_ = uri_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.video.livestream.v1.Channel.Output) {
          return mergeFrom((com.google.cloud.video.livestream.v1.Channel.Output) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.video.livestream.v1.Channel.Output other) {
        if (other == com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance())
          return this;
        if (!other.getUri().isEmpty()) {
          uri_ = other.uri_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  uri_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object uri_ = "";
      /**
       *
       *
       * <pre>
       * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
       * </pre>
       *
       * <code>string uri = 1;</code>
       *
       * @return The uri.
       */
      public java.lang.String getUri() {
        java.lang.Object ref = uri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
       * </pre>
       *
       * <code>string uri = 1;</code>
       *
       * @return The bytes for uri.
       */
      public com.google.protobuf.ByteString getUriBytes() {
        java.lang.Object ref = uri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          uri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
       * </pre>
       *
       * <code>string uri = 1;</code>
       *
       * @param value The uri to set.
       * @return This builder for chaining.
       */
      public Builder setUri(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        uri_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
       * </pre>
       *
       * <code>string uri = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearUri() {
        uri_ = getDefaultInstance().getUri();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * URI for the output file(s). For example, `gs://my-bucket/outputs/`.
       * </pre>
       *
       * <code>string uri = 1;</code>
       *
       * @param value The bytes for uri to set.
       * @return This builder for chaining.
       */
      public Builder setUriBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        uri_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.video.livestream.v1.Channel.Output)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.video.livestream.v1.Channel.Output)
    private static final com.google.cloud.video.livestream.v1.Channel.Output DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.video.livestream.v1.Channel.Output();
    }

    public static com.google.cloud.video.livestream.v1.Channel.Output getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Output> PARSER =
        new com.google.protobuf.AbstractParser<Output>() {
          @java.lang.Override
          public Output parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Output> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Output> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.Channel.Output getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * The resource name of the channel, in the form of:
   * `projects/{project}/locations/{location}/channels/{channelId}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The resource name of the channel, in the form of:
   * `projects/{project}/locations/{location}/channels/{channelId}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp createTime_;
  /**
   *
   *
   * <pre>
   * Output only. The creation time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the createTime field is set.
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. The creation time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The createTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The creation time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }

  public static final int UPDATE_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp updateTime_;
  /**
   *
   *
   * <pre>
   * Output only. The update time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the updateTime field is set.
   */
  @java.lang.Override
  public boolean hasUpdateTime() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. The update time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The updateTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getUpdateTime() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The update time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }

  public static final int LABELS_FIELD_NUMBER = 4;

  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            com.google.cloud.video.livestream.v1.ResourcesProto
                .internal_static_google_cloud_video_livestream_v1_Channel_LabelsEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<java.lang.String, java.lang.String> labels_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * User-defined key/value metadata.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  @java.lang.Override
  public boolean containsLabels(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetLabels().getMap().containsKey(key);
  }
  /** Use {@link #getLabelsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   *
   *
   * <pre>
   * User-defined key/value metadata.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   *
   *
   * <pre>
   * User-defined key/value metadata.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  @java.lang.Override
  public /* nullable */ java.lang.String getLabelsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * User-defined key/value metadata.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  @java.lang.Override
  public java.lang.String getLabelsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int INPUT_ATTACHMENTS_FIELD_NUMBER = 16;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.InputAttachment> inputAttachments_;
  /**
   *
   *
   * <pre>
   * A list of input attachments that this channel uses.
   * One channel can have multiple inputs as the input sources. Only one
   * input can be selected as the input source at one time.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.InputAttachment>
      getInputAttachmentsList() {
    return inputAttachments_;
  }
  /**
   *
   *
   * <pre>
   * A list of input attachments that this channel uses.
   * One channel can have multiple inputs as the input sources. Only one
   * input can be selected as the input source at one time.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder>
      getInputAttachmentsOrBuilderList() {
    return inputAttachments_;
  }
  /**
   *
   *
   * <pre>
   * A list of input attachments that this channel uses.
   * One channel can have multiple inputs as the input sources. Only one
   * input can be selected as the input source at one time.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;</code>
   */
  @java.lang.Override
  public int getInputAttachmentsCount() {
    return inputAttachments_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of input attachments that this channel uses.
   * One channel can have multiple inputs as the input sources. Only one
   * input can be selected as the input source at one time.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.InputAttachment getInputAttachments(int index) {
    return inputAttachments_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of input attachments that this channel uses.
   * One channel can have multiple inputs as the input sources. Only one
   * input can be selected as the input source at one time.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder getInputAttachmentsOrBuilder(
      int index) {
    return inputAttachments_.get(index);
  }

  public static final int ACTIVE_INPUT_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private volatile java.lang.Object activeInput_ = "";
  /**
   *
   *
   * <pre>
   * Output only. The
   * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
   * that serves as the current input source. The first input in the
   * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
   * is the initial input source.
   * </pre>
   *
   * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The activeInput.
   */
  @java.lang.Override
  public java.lang.String getActiveInput() {
    java.lang.Object ref = activeInput_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      activeInput_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. The
   * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
   * that serves as the current input source. The first input in the
   * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
   * is the initial input source.
   * </pre>
   *
   * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for activeInput.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getActiveInputBytes() {
    java.lang.Object ref = activeInput_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      activeInput_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OUTPUT_FIELD_NUMBER = 9;
  private com.google.cloud.video.livestream.v1.Channel.Output output_;
  /**
   *
   *
   * <pre>
   * Required. Information about the output (that is, the Cloud Storage bucket
   * to store the generated live stream).
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the output field is set.
   */
  @java.lang.Override
  public boolean hasOutput() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. Information about the output (that is, the Cloud Storage bucket
   * to store the generated live stream).
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The output.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.Channel.Output getOutput() {
    return output_ == null
        ? com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance()
        : output_;
  }
  /**
   *
   *
   * <pre>
   * Required. Information about the output (that is, the Cloud Storage bucket
   * to store the generated live stream).
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.Channel.OutputOrBuilder getOutputOrBuilder() {
    return output_ == null
        ? com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance()
        : output_;
  }

  public static final int ELEMENTARY_STREAMS_FIELD_NUMBER = 10;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.ElementaryStream> elementaryStreams_;
  /**
   *
   *
   * <pre>
   * List of elementary streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.ElementaryStream>
      getElementaryStreamsList() {
    return elementaryStreams_;
  }
  /**
   *
   *
   * <pre>
   * List of elementary streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder>
      getElementaryStreamsOrBuilderList() {
    return elementaryStreams_;
  }
  /**
   *
   *
   * <pre>
   * List of elementary streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
   * </code>
   */
  @java.lang.Override
  public int getElementaryStreamsCount() {
    return elementaryStreams_.size();
  }
  /**
   *
   *
   * <pre>
   * List of elementary streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.ElementaryStream getElementaryStreams(int index) {
    return elementaryStreams_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of elementary streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder
      getElementaryStreamsOrBuilder(int index) {
    return elementaryStreams_.get(index);
  }

  public static final int MUX_STREAMS_FIELD_NUMBER = 11;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.MuxStream> muxStreams_;
  /**
   *
   *
   * <pre>
   * List of multiplexing settings for output streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.MuxStream> getMuxStreamsList() {
    return muxStreams_;
  }
  /**
   *
   *
   * <pre>
   * List of multiplexing settings for output streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.MuxStreamOrBuilder>
      getMuxStreamsOrBuilderList() {
    return muxStreams_;
  }
  /**
   *
   *
   * <pre>
   * List of multiplexing settings for output streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
   */
  @java.lang.Override
  public int getMuxStreamsCount() {
    return muxStreams_.size();
  }
  /**
   *
   *
   * <pre>
   * List of multiplexing settings for output streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.MuxStream getMuxStreams(int index) {
    return muxStreams_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of multiplexing settings for output streams.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.MuxStreamOrBuilder getMuxStreamsOrBuilder(int index) {
    return muxStreams_.get(index);
  }

  public static final int MANIFESTS_FIELD_NUMBER = 12;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.Manifest> manifests_;
  /**
   *
   *
   * <pre>
   * List of output manifests.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.Manifest> getManifestsList() {
    return manifests_;
  }
  /**
   *
   *
   * <pre>
   * List of output manifests.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.ManifestOrBuilder>
      getManifestsOrBuilderList() {
    return manifests_;
  }
  /**
   *
   *
   * <pre>
   * List of output manifests.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
   */
  @java.lang.Override
  public int getManifestsCount() {
    return manifests_.size();
  }
  /**
   *
   *
   * <pre>
   * List of output manifests.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.Manifest getManifests(int index) {
    return manifests_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of output manifests.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.ManifestOrBuilder getManifestsOrBuilder(int index) {
    return manifests_.get(index);
  }

  public static final int SPRITE_SHEETS_FIELD_NUMBER = 13;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.SpriteSheet> spriteSheets_;
  /**
   *
   *
   * <pre>
   * List of output sprite sheets.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.SpriteSheet> getSpriteSheetsList() {
    return spriteSheets_;
  }
  /**
   *
   *
   * <pre>
   * List of output sprite sheets.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder>
      getSpriteSheetsOrBuilderList() {
    return spriteSheets_;
  }
  /**
   *
   *
   * <pre>
   * List of output sprite sheets.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
   */
  @java.lang.Override
  public int getSpriteSheetsCount() {
    return spriteSheets_.size();
  }
  /**
   *
   *
   * <pre>
   * List of output sprite sheets.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.SpriteSheet getSpriteSheets(int index) {
    return spriteSheets_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of output sprite sheets.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder getSpriteSheetsOrBuilder(
      int index) {
    return spriteSheets_.get(index);
  }

  public static final int STREAMING_STATE_FIELD_NUMBER = 14;
  private int streamingState_ = 0;
  /**
   *
   *
   * <pre>
   * Output only. State of the streaming operation.
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for streamingState.
   */
  @java.lang.Override
  public int getStreamingStateValue() {
    return streamingState_;
  }
  /**
   *
   *
   * <pre>
   * Output only. State of the streaming operation.
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The streamingState.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.Channel.StreamingState getStreamingState() {
    com.google.cloud.video.livestream.v1.Channel.StreamingState result =
        com.google.cloud.video.livestream.v1.Channel.StreamingState.forNumber(streamingState_);
    return result == null
        ? com.google.cloud.video.livestream.v1.Channel.StreamingState.UNRECOGNIZED
        : result;
  }

  public static final int STREAMING_ERROR_FIELD_NUMBER = 18;
  private com.google.rpc.Status streamingError_;
  /**
   *
   *
   * <pre>
   * Output only. A description of the reason for the streaming error. This
   * property is always present when
   * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
   * is
   * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
   * </pre>
   *
   * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the streamingError field is set.
   */
  @java.lang.Override
  public boolean hasStreamingError() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. A description of the reason for the streaming error. This
   * property is always present when
   * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
   * is
   * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
   * </pre>
   *
   * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The streamingError.
   */
  @java.lang.Override
  public com.google.rpc.Status getStreamingError() {
    return streamingError_ == null ? com.google.rpc.Status.getDefaultInstance() : streamingError_;
  }
  /**
   *
   *
   * <pre>
   * Output only. A description of the reason for the streaming error. This
   * property is always present when
   * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
   * is
   * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
   * </pre>
   *
   * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.rpc.StatusOrBuilder getStreamingErrorOrBuilder() {
    return streamingError_ == null ? com.google.rpc.Status.getDefaultInstance() : streamingError_;
  }

  public static final int LOG_CONFIG_FIELD_NUMBER = 19;
  private com.google.cloud.video.livestream.v1.LogConfig logConfig_;
  /**
   *
   *
   * <pre>
   * Configuration of platform logs for this channel.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
   *
   * @return Whether the logConfig field is set.
   */
  @java.lang.Override
  public boolean hasLogConfig() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   *
   *
   * <pre>
   * Configuration of platform logs for this channel.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
   *
   * @return The logConfig.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.LogConfig getLogConfig() {
    return logConfig_ == null
        ? com.google.cloud.video.livestream.v1.LogConfig.getDefaultInstance()
        : logConfig_;
  }
  /**
   *
   *
   * <pre>
   * Configuration of platform logs for this channel.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.LogConfigOrBuilder getLogConfigOrBuilder() {
    return logConfig_ == null
        ? com.google.cloud.video.livestream.v1.LogConfig.getDefaultInstance()
        : logConfig_;
  }

  public static final int TIMECODE_CONFIG_FIELD_NUMBER = 21;
  private com.google.cloud.video.livestream.v1.TimecodeConfig timecodeConfig_;
  /**
   *
   *
   * <pre>
   * Configuration of timecode for this channel.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
   *
   * @return Whether the timecodeConfig field is set.
   */
  @java.lang.Override
  public boolean hasTimecodeConfig() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   *
   *
   * <pre>
   * Configuration of timecode for this channel.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
   *
   * @return The timecodeConfig.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.TimecodeConfig getTimecodeConfig() {
    return timecodeConfig_ == null
        ? com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance()
        : timecodeConfig_;
  }
  /**
   *
   *
   * <pre>
   * Configuration of timecode for this channel.
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.TimecodeConfigOrBuilder getTimecodeConfigOrBuilder() {
    return timecodeConfig_ == null
        ? com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance()
        : timecodeConfig_;
  }

  public static final int ENCRYPTIONS_FIELD_NUMBER = 24;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.Encryption> encryptions_;
  /**
   *
   *
   * <pre>
   * Encryption configurations for this channel. Each configuration has an ID
   * which is referred to by each MuxStream to indicate which configuration is
   * used for that output.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.Encryption> getEncryptionsList() {
    return encryptions_;
  }
  /**
   *
   *
   * <pre>
   * Encryption configurations for this channel. Each configuration has an ID
   * which is referred to by each MuxStream to indicate which configuration is
   * used for that output.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.EncryptionOrBuilder>
      getEncryptionsOrBuilderList() {
    return encryptions_;
  }
  /**
   *
   *
   * <pre>
   * Encryption configurations for this channel. Each configuration has an ID
   * which is referred to by each MuxStream to indicate which configuration is
   * used for that output.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
   */
  @java.lang.Override
  public int getEncryptionsCount() {
    return encryptions_.size();
  }
  /**
   *
   *
   * <pre>
   * Encryption configurations for this channel. Each configuration has an ID
   * which is referred to by each MuxStream to indicate which configuration is
   * used for that output.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.Encryption getEncryptions(int index) {
    return encryptions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Encryption configurations for this channel. Each configuration has an ID
   * which is referred to by each MuxStream to indicate which configuration is
   * used for that output.
   * </pre>
   *
   * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.EncryptionOrBuilder getEncryptionsOrBuilder(
      int index) {
    return encryptions_.get(index);
  }

  public static final int INPUT_CONFIG_FIELD_NUMBER = 25;
  private com.google.cloud.video.livestream.v1.InputConfig inputConfig_;
  /**
   *
   *
   * <pre>
   * The configuration for input sources defined in
   * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
   *
   * @return Whether the inputConfig field is set.
   */
  @java.lang.Override
  public boolean hasInputConfig() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   *
   *
   * <pre>
   * The configuration for input sources defined in
   * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
   *
   * @return The inputConfig.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.InputConfig getInputConfig() {
    return inputConfig_ == null
        ? com.google.cloud.video.livestream.v1.InputConfig.getDefaultInstance()
        : inputConfig_;
  }
  /**
   *
   *
   * <pre>
   * The configuration for input sources defined in
   * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
   * </pre>
   *
   * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.InputConfigOrBuilder getInputConfigOrBuilder() {
    return inputConfig_ == null
        ? com.google.cloud.video.livestream.v1.InputConfig.getDefaultInstance()
        : inputConfig_;
  }

  public static final int RETENTION_CONFIG_FIELD_NUMBER = 26;
  private com.google.cloud.video.livestream.v1.RetentionConfig retentionConfig_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration for retention of output files for this channel.
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the retentionConfig field is set.
   */
  @java.lang.Override
  public boolean hasRetentionConfig() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for retention of output files for this channel.
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The retentionConfig.
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.RetentionConfig getRetentionConfig() {
    return retentionConfig_ == null
        ? com.google.cloud.video.livestream.v1.RetentionConfig.getDefaultInstance()
        : retentionConfig_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for retention of output files for this channel.
   * </pre>
   *
   * <code>
   * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.RetentionConfigOrBuilder
      getRetentionConfigOrBuilder() {
    return retentionConfig_ == null
        ? com.google.cloud.video.livestream.v1.RetentionConfig.getDefaultInstance()
        : retentionConfig_;
  }

  public static final int STATIC_OVERLAYS_FIELD_NUMBER = 27;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.livestream.v1.StaticOverlay> staticOverlays_;
  /**
   *
   *
   * <pre>
   * Optional. List of static overlay images. Those images display over the
   * output content for the whole duration of the live stream.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.livestream.v1.StaticOverlay>
      getStaticOverlaysList() {
    return staticOverlays_;
  }
  /**
   *
   *
   * <pre>
   * Optional. List of static overlay images. Those images display over the
   * output content for the whole duration of the live stream.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder>
      getStaticOverlaysOrBuilderList() {
    return staticOverlays_;
  }
  /**
   *
   *
   * <pre>
   * Optional. List of static overlay images. Those images display over the
   * output content for the whole duration of the live stream.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getStaticOverlaysCount() {
    return staticOverlays_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. List of static overlay images. Those images display over the
   * output content for the whole duration of the live stream.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.StaticOverlay getStaticOverlays(int index) {
    return staticOverlays_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. List of static overlay images. Those images display over the
   * output content for the whole duration of the live stream.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder getStaticOverlaysOrBuilder(
      int index) {
    return staticOverlays_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getCreateTime());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getUpdateTime());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetLabels(), LabelsDefaultEntryHolder.defaultEntry, 4);
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(activeInput_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, activeInput_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(9, getOutput());
    }
    for (int i = 0; i < elementaryStreams_.size(); i++) {
      output.writeMessage(10, elementaryStreams_.get(i));
    }
    for (int i = 0; i < muxStreams_.size(); i++) {
      output.writeMessage(11, muxStreams_.get(i));
    }
    for (int i = 0; i < manifests_.size(); i++) {
      output.writeMessage(12, manifests_.get(i));
    }
    for (int i = 0; i < spriteSheets_.size(); i++) {
      output.writeMessage(13, spriteSheets_.get(i));
    }
    if (streamingState_
        != com.google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_STATE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(14, streamingState_);
    }
    for (int i = 0; i < inputAttachments_.size(); i++) {
      output.writeMessage(16, inputAttachments_.get(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(18, getStreamingError());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(19, getLogConfig());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(21, getTimecodeConfig());
    }
    for (int i = 0; i < encryptions_.size(); i++) {
      output.writeMessage(24, encryptions_.get(i));
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(25, getInputConfig());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeMessage(26, getRetentionConfig());
    }
    for (int i = 0; i < staticOverlays_.size(); i++) {
      output.writeMessage(27, staticOverlays_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getCreateTime());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getUpdateTime());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> labels__ =
          LabelsDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, labels__);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(activeInput_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, activeInput_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getOutput());
    }
    for (int i = 0; i < elementaryStreams_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(10, elementaryStreams_.get(i));
    }
    for (int i = 0; i < muxStreams_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, muxStreams_.get(i));
    }
    for (int i = 0; i < manifests_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, manifests_.get(i));
    }
    for (int i = 0; i < spriteSheets_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(13, spriteSheets_.get(i));
    }
    if (streamingState_
        != com.google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_STATE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(14, streamingState_);
    }
    for (int i = 0; i < inputAttachments_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(16, inputAttachments_.get(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(18, getStreamingError());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(19, getLogConfig());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(21, getTimecodeConfig());
    }
    for (int i = 0; i < encryptions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(24, encryptions_.get(i));
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(25, getInputConfig());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(26, getRetentionConfig());
    }
    for (int i = 0; i < staticOverlays_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(27, staticOverlays_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.video.livestream.v1.Channel)) {
      return super.equals(obj);
    }
    com.google.cloud.video.livestream.v1.Channel other =
        (com.google.cloud.video.livestream.v1.Channel) obj;

    if (!getName().equals(other.getName())) return false;
    if (hasCreateTime() != other.hasCreateTime()) return false;
    if (hasCreateTime()) {
      if (!getCreateTime().equals(other.getCreateTime())) return false;
    }
    if (hasUpdateTime() != other.hasUpdateTime()) return false;
    if (hasUpdateTime()) {
      if (!getUpdateTime().equals(other.getUpdateTime())) return false;
    }
    if (!internalGetLabels().equals(other.internalGetLabels())) return false;
    if (!getInputAttachmentsList().equals(other.getInputAttachmentsList())) return false;
    if (!getActiveInput().equals(other.getActiveInput())) return false;
    if (hasOutput() != other.hasOutput()) return false;
    if (hasOutput()) {
      if (!getOutput().equals(other.getOutput())) return false;
    }
    if (!getElementaryStreamsList().equals(other.getElementaryStreamsList())) return false;
    if (!getMuxStreamsList().equals(other.getMuxStreamsList())) return false;
    if (!getManifestsList().equals(other.getManifestsList())) return false;
    if (!getSpriteSheetsList().equals(other.getSpriteSheetsList())) return false;
    if (streamingState_ != other.streamingState_) return false;
    if (hasStreamingError() != other.hasStreamingError()) return false;
    if (hasStreamingError()) {
      if (!getStreamingError().equals(other.getStreamingError())) return false;
    }
    if (hasLogConfig() != other.hasLogConfig()) return false;
    if (hasLogConfig()) {
      if (!getLogConfig().equals(other.getLogConfig())) return false;
    }
    if (hasTimecodeConfig() != other.hasTimecodeConfig()) return false;
    if (hasTimecodeConfig()) {
      if (!getTimecodeConfig().equals(other.getTimecodeConfig())) return false;
    }
    if (!getEncryptionsList().equals(other.getEncryptionsList())) return false;
    if (hasInputConfig() != other.hasInputConfig()) return false;
    if (hasInputConfig()) {
      if (!getInputConfig().equals(other.getInputConfig())) return false;
    }
    if (hasRetentionConfig() != other.hasRetentionConfig()) return false;
    if (hasRetentionConfig()) {
      if (!getRetentionConfig().equals(other.getRetentionConfig())) return false;
    }
    if (!getStaticOverlaysList().equals(other.getStaticOverlaysList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasCreateTime()) {
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime().hashCode();
    }
    if (hasUpdateTime()) {
      hash = (37 * hash) + UPDATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateTime().hashCode();
    }
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    if (getInputAttachmentsCount() > 0) {
      hash = (37 * hash) + INPUT_ATTACHMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getInputAttachmentsList().hashCode();
    }
    hash = (37 * hash) + ACTIVE_INPUT_FIELD_NUMBER;
    hash = (53 * hash) + getActiveInput().hashCode();
    if (hasOutput()) {
      hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
      hash = (53 * hash) + getOutput().hashCode();
    }
    if (getElementaryStreamsCount() > 0) {
      hash = (37 * hash) + ELEMENTARY_STREAMS_FIELD_NUMBER;
      hash = (53 * hash) + getElementaryStreamsList().hashCode();
    }
    if (getMuxStreamsCount() > 0) {
      hash = (37 * hash) + MUX_STREAMS_FIELD_NUMBER;
      hash = (53 * hash) + getMuxStreamsList().hashCode();
    }
    if (getManifestsCount() > 0) {
      hash = (37 * hash) + MANIFESTS_FIELD_NUMBER;
      hash = (53 * hash) + getManifestsList().hashCode();
    }
    if (getSpriteSheetsCount() > 0) {
      hash = (37 * hash) + SPRITE_SHEETS_FIELD_NUMBER;
      hash = (53 * hash) + getSpriteSheetsList().hashCode();
    }
    hash = (37 * hash) + STREAMING_STATE_FIELD_NUMBER;
    hash = (53 * hash) + streamingState_;
    if (hasStreamingError()) {
      hash = (37 * hash) + STREAMING_ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getStreamingError().hashCode();
    }
    if (hasLogConfig()) {
      hash = (37 * hash) + LOG_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getLogConfig().hashCode();
    }
    if (hasTimecodeConfig()) {
      hash = (37 * hash) + TIMECODE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getTimecodeConfig().hashCode();
    }
    if (getEncryptionsCount() > 0) {
      hash = (37 * hash) + ENCRYPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptionsList().hashCode();
    }
    if (hasInputConfig()) {
      hash = (37 * hash) + INPUT_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getInputConfig().hashCode();
    }
    if (hasRetentionConfig()) {
      hash = (37 * hash) + RETENTION_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getRetentionConfig().hashCode();
    }
    if (getStaticOverlaysCount() > 0) {
      hash = (37 * hash) + STATIC_OVERLAYS_FIELD_NUMBER;
      hash = (53 * hash) + getStaticOverlaysList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.livestream.v1.Channel parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.video.livestream.v1.Channel prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Channel resource represents the processor that does a user-defined
   * "streaming" operation, which includes getting an input stream through an
   * input, transcoding it to multiple renditions, and publishing output live
   * streams in certain formats (for example, HLS or DASH) to the specified
   * location.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.livestream.v1.Channel}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.video.livestream.v1.Channel)
      com.google.cloud.video.livestream.v1.ChannelOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.livestream.v1.ResourcesProto
          .internal_static_google_cloud_video_livestream_v1_Channel_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetLabels();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableLabels();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.livestream.v1.ResourcesProto
          .internal_static_google_cloud_video_livestream_v1_Channel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.livestream.v1.Channel.class,
              com.google.cloud.video.livestream.v1.Channel.Builder.class);
    }

    // Construct using com.google.cloud.video.livestream.v1.Channel.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getCreateTimeFieldBuilder();
        getUpdateTimeFieldBuilder();
        getInputAttachmentsFieldBuilder();
        getOutputFieldBuilder();
        getElementaryStreamsFieldBuilder();
        getMuxStreamsFieldBuilder();
        getManifestsFieldBuilder();
        getSpriteSheetsFieldBuilder();
        getStreamingErrorFieldBuilder();
        getLogConfigFieldBuilder();
        getTimecodeConfigFieldBuilder();
        getEncryptionsFieldBuilder();
        getInputConfigFieldBuilder();
        getRetentionConfigFieldBuilder();
        getStaticOverlaysFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      createTime_ = null;
      if (createTimeBuilder_ != null) {
        createTimeBuilder_.dispose();
        createTimeBuilder_ = null;
      }
      updateTime_ = null;
      if (updateTimeBuilder_ != null) {
        updateTimeBuilder_.dispose();
        updateTimeBuilder_ = null;
      }
      internalGetMutableLabels().clear();
      if (inputAttachmentsBuilder_ == null) {
        inputAttachments_ = java.util.Collections.emptyList();
      } else {
        inputAttachments_ = null;
        inputAttachmentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      activeInput_ = "";
      output_ = null;
      if (outputBuilder_ != null) {
        outputBuilder_.dispose();
        outputBuilder_ = null;
      }
      if (elementaryStreamsBuilder_ == null) {
        elementaryStreams_ = java.util.Collections.emptyList();
      } else {
        elementaryStreams_ = null;
        elementaryStreamsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (muxStreamsBuilder_ == null) {
        muxStreams_ = java.util.Collections.emptyList();
      } else {
        muxStreams_ = null;
        muxStreamsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (manifestsBuilder_ == null) {
        manifests_ = java.util.Collections.emptyList();
      } else {
        manifests_ = null;
        manifestsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (spriteSheetsBuilder_ == null) {
        spriteSheets_ = java.util.Collections.emptyList();
      } else {
        spriteSheets_ = null;
        spriteSheetsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      streamingState_ = 0;
      streamingError_ = null;
      if (streamingErrorBuilder_ != null) {
        streamingErrorBuilder_.dispose();
        streamingErrorBuilder_ = null;
      }
      logConfig_ = null;
      if (logConfigBuilder_ != null) {
        logConfigBuilder_.dispose();
        logConfigBuilder_ = null;
      }
      timecodeConfig_ = null;
      if (timecodeConfigBuilder_ != null) {
        timecodeConfigBuilder_.dispose();
        timecodeConfigBuilder_ = null;
      }
      if (encryptionsBuilder_ == null) {
        encryptions_ = java.util.Collections.emptyList();
      } else {
        encryptions_ = null;
        encryptionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      inputConfig_ = null;
      if (inputConfigBuilder_ != null) {
        inputConfigBuilder_.dispose();
        inputConfigBuilder_ = null;
      }
      retentionConfig_ = null;
      if (retentionConfigBuilder_ != null) {
        retentionConfigBuilder_.dispose();
        retentionConfigBuilder_ = null;
      }
      if (staticOverlaysBuilder_ == null) {
        staticOverlays_ = java.util.Collections.emptyList();
      } else {
        staticOverlays_ = null;
        staticOverlaysBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00040000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.video.livestream.v1.ResourcesProto
          .internal_static_google_cloud_video_livestream_v1_Channel_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.Channel getDefaultInstanceForType() {
      return com.google.cloud.video.livestream.v1.Channel.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.Channel build() {
      com.google.cloud.video.livestream.v1.Channel result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.video.livestream.v1.Channel buildPartial() {
      com.google.cloud.video.livestream.v1.Channel result =
          new com.google.cloud.video.livestream.v1.Channel(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.cloud.video.livestream.v1.Channel result) {
      if (inputAttachmentsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          inputAttachments_ = java.util.Collections.unmodifiableList(inputAttachments_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.inputAttachments_ = inputAttachments_;
      } else {
        result.inputAttachments_ = inputAttachmentsBuilder_.build();
      }
      if (elementaryStreamsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          elementaryStreams_ = java.util.Collections.unmodifiableList(elementaryStreams_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.elementaryStreams_ = elementaryStreams_;
      } else {
        result.elementaryStreams_ = elementaryStreamsBuilder_.build();
      }
      if (muxStreamsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          muxStreams_ = java.util.Collections.unmodifiableList(muxStreams_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.muxStreams_ = muxStreams_;
      } else {
        result.muxStreams_ = muxStreamsBuilder_.build();
      }
      if (manifestsBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          manifests_ = java.util.Collections.unmodifiableList(manifests_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.manifests_ = manifests_;
      } else {
        result.manifests_ = manifestsBuilder_.build();
      }
      if (spriteSheetsBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          spriteSheets_ = java.util.Collections.unmodifiableList(spriteSheets_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.spriteSheets_ = spriteSheets_;
      } else {
        result.spriteSheets_ = spriteSheetsBuilder_.build();
      }
      if (encryptionsBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0)) {
          encryptions_ = java.util.Collections.unmodifiableList(encryptions_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.encryptions_ = encryptions_;
      } else {
        result.encryptions_ = encryptionsBuilder_.build();
      }
      if (staticOverlaysBuilder_ == null) {
        if (((bitField0_ & 0x00040000) != 0)) {
          staticOverlays_ = java.util.Collections.unmodifiableList(staticOverlays_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.staticOverlays_ = staticOverlays_;
      } else {
        result.staticOverlays_ = staticOverlaysBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.video.livestream.v1.Channel result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.createTime_ = createTimeBuilder_ == null ? createTime_ : createTimeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.updateTime_ = updateTimeBuilder_ == null ? updateTime_ : updateTimeBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.activeInput_ = activeInput_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.output_ = outputBuilder_ == null ? output_ : outputBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.streamingState_ = streamingState_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.streamingError_ =
            streamingErrorBuilder_ == null ? streamingError_ : streamingErrorBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.logConfig_ = logConfigBuilder_ == null ? logConfig_ : logConfigBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.timecodeConfig_ =
            timecodeConfigBuilder_ == null ? timecodeConfig_ : timecodeConfigBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.inputConfig_ =
            inputConfigBuilder_ == null ? inputConfig_ : inputConfigBuilder_.build();
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.retentionConfig_ =
            retentionConfigBuilder_ == null ? retentionConfig_ : retentionConfigBuilder_.build();
        to_bitField0_ |= 0x00000080;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.video.livestream.v1.Channel) {
        return mergeFrom((com.google.cloud.video.livestream.v1.Channel) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.video.livestream.v1.Channel other) {
      if (other == com.google.cloud.video.livestream.v1.Channel.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasUpdateTime()) {
        mergeUpdateTime(other.getUpdateTime());
      }
      internalGetMutableLabels().mergeFrom(other.internalGetLabels());
      bitField0_ |= 0x00000008;
      if (inputAttachmentsBuilder_ == null) {
        if (!other.inputAttachments_.isEmpty()) {
          if (inputAttachments_.isEmpty()) {
            inputAttachments_ = other.inputAttachments_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureInputAttachmentsIsMutable();
            inputAttachments_.addAll(other.inputAttachments_);
          }
          onChanged();
        }
      } else {
        if (!other.inputAttachments_.isEmpty()) {
          if (inputAttachmentsBuilder_.isEmpty()) {
            inputAttachmentsBuilder_.dispose();
            inputAttachmentsBuilder_ = null;
            inputAttachments_ = other.inputAttachments_;
            bitField0_ = (bitField0_ & ~0x00000010);
            inputAttachmentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getInputAttachmentsFieldBuilder()
                    : null;
          } else {
            inputAttachmentsBuilder_.addAllMessages(other.inputAttachments_);
          }
        }
      }
      if (!other.getActiveInput().isEmpty()) {
        activeInput_ = other.activeInput_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasOutput()) {
        mergeOutput(other.getOutput());
      }
      if (elementaryStreamsBuilder_ == null) {
        if (!other.elementaryStreams_.isEmpty()) {
          if (elementaryStreams_.isEmpty()) {
            elementaryStreams_ = other.elementaryStreams_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureElementaryStreamsIsMutable();
            elementaryStreams_.addAll(other.elementaryStreams_);
          }
          onChanged();
        }
      } else {
        if (!other.elementaryStreams_.isEmpty()) {
          if (elementaryStreamsBuilder_.isEmpty()) {
            elementaryStreamsBuilder_.dispose();
            elementaryStreamsBuilder_ = null;
            elementaryStreams_ = other.elementaryStreams_;
            bitField0_ = (bitField0_ & ~0x00000080);
            elementaryStreamsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getElementaryStreamsFieldBuilder()
                    : null;
          } else {
            elementaryStreamsBuilder_.addAllMessages(other.elementaryStreams_);
          }
        }
      }
      if (muxStreamsBuilder_ == null) {
        if (!other.muxStreams_.isEmpty()) {
          if (muxStreams_.isEmpty()) {
            muxStreams_ = other.muxStreams_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureMuxStreamsIsMutable();
            muxStreams_.addAll(other.muxStreams_);
          }
          onChanged();
        }
      } else {
        if (!other.muxStreams_.isEmpty()) {
          if (muxStreamsBuilder_.isEmpty()) {
            muxStreamsBuilder_.dispose();
            muxStreamsBuilder_ = null;
            muxStreams_ = other.muxStreams_;
            bitField0_ = (bitField0_ & ~0x00000100);
            muxStreamsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getMuxStreamsFieldBuilder()
                    : null;
          } else {
            muxStreamsBuilder_.addAllMessages(other.muxStreams_);
          }
        }
      }
      if (manifestsBuilder_ == null) {
        if (!other.manifests_.isEmpty()) {
          if (manifests_.isEmpty()) {
            manifests_ = other.manifests_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureManifestsIsMutable();
            manifests_.addAll(other.manifests_);
          }
          onChanged();
        }
      } else {
        if (!other.manifests_.isEmpty()) {
          if (manifestsBuilder_.isEmpty()) {
            manifestsBuilder_.dispose();
            manifestsBuilder_ = null;
            manifests_ = other.manifests_;
            bitField0_ = (bitField0_ & ~0x00000200);
            manifestsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getManifestsFieldBuilder()
                    : null;
          } else {
            manifestsBuilder_.addAllMessages(other.manifests_);
          }
        }
      }
      if (spriteSheetsBuilder_ == null) {
        if (!other.spriteSheets_.isEmpty()) {
          if (spriteSheets_.isEmpty()) {
            spriteSheets_ = other.spriteSheets_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSpriteSheetsIsMutable();
            spriteSheets_.addAll(other.spriteSheets_);
          }
          onChanged();
        }
      } else {
        if (!other.spriteSheets_.isEmpty()) {
          if (spriteSheetsBuilder_.isEmpty()) {
            spriteSheetsBuilder_.dispose();
            spriteSheetsBuilder_ = null;
            spriteSheets_ = other.spriteSheets_;
            bitField0_ = (bitField0_ & ~0x00000400);
            spriteSheetsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getSpriteSheetsFieldBuilder()
                    : null;
          } else {
            spriteSheetsBuilder_.addAllMessages(other.spriteSheets_);
          }
        }
      }
      if (other.streamingState_ != 0) {
        setStreamingStateValue(other.getStreamingStateValue());
      }
      if (other.hasStreamingError()) {
        mergeStreamingError(other.getStreamingError());
      }
      if (other.hasLogConfig()) {
        mergeLogConfig(other.getLogConfig());
      }
      if (other.hasTimecodeConfig()) {
        mergeTimecodeConfig(other.getTimecodeConfig());
      }
      if (encryptionsBuilder_ == null) {
        if (!other.encryptions_.isEmpty()) {
          if (encryptions_.isEmpty()) {
            encryptions_ = other.encryptions_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureEncryptionsIsMutable();
            encryptions_.addAll(other.encryptions_);
          }
          onChanged();
        }
      } else {
        if (!other.encryptions_.isEmpty()) {
          if (encryptionsBuilder_.isEmpty()) {
            encryptionsBuilder_.dispose();
            encryptionsBuilder_ = null;
            encryptions_ = other.encryptions_;
            bitField0_ = (bitField0_ & ~0x00008000);
            encryptionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getEncryptionsFieldBuilder()
                    : null;
          } else {
            encryptionsBuilder_.addAllMessages(other.encryptions_);
          }
        }
      }
      if (other.hasInputConfig()) {
        mergeInputConfig(other.getInputConfig());
      }
      if (other.hasRetentionConfig()) {
        mergeRetentionConfig(other.getRetentionConfig());
      }
      if (staticOverlaysBuilder_ == null) {
        if (!other.staticOverlays_.isEmpty()) {
          if (staticOverlays_.isEmpty()) {
            staticOverlays_ = other.staticOverlays_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureStaticOverlaysIsMutable();
            staticOverlays_.addAll(other.staticOverlays_);
          }
          onChanged();
        }
      } else {
        if (!other.staticOverlays_.isEmpty()) {
          if (staticOverlaysBuilder_.isEmpty()) {
            staticOverlaysBuilder_.dispose();
            staticOverlaysBuilder_ = null;
            staticOverlays_ = other.staticOverlays_;
            bitField0_ = (bitField0_ & ~0x00040000);
            staticOverlaysBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getStaticOverlaysFieldBuilder()
                    : null;
          } else {
            staticOverlaysBuilder_.addAllMessages(other.staticOverlays_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getCreateTimeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getUpdateTimeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String> labels__ =
                    input.readMessage(
                        LabelsDefaultEntryHolder.defaultEntry.getParserForType(),
                        extensionRegistry);
                internalGetMutableLabels()
                    .getMutableMap()
                    .put(labels__.getKey(), labels__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 50:
              {
                activeInput_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
            case 74:
              {
                input.readMessage(getOutputFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 74
            case 82:
              {
                com.google.cloud.video.livestream.v1.ElementaryStream m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.ElementaryStream.parser(),
                        extensionRegistry);
                if (elementaryStreamsBuilder_ == null) {
                  ensureElementaryStreamsIsMutable();
                  elementaryStreams_.add(m);
                } else {
                  elementaryStreamsBuilder_.addMessage(m);
                }
                break;
              } // case 82
            case 90:
              {
                com.google.cloud.video.livestream.v1.MuxStream m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.MuxStream.parser(), extensionRegistry);
                if (muxStreamsBuilder_ == null) {
                  ensureMuxStreamsIsMutable();
                  muxStreams_.add(m);
                } else {
                  muxStreamsBuilder_.addMessage(m);
                }
                break;
              } // case 90
            case 98:
              {
                com.google.cloud.video.livestream.v1.Manifest m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.Manifest.parser(), extensionRegistry);
                if (manifestsBuilder_ == null) {
                  ensureManifestsIsMutable();
                  manifests_.add(m);
                } else {
                  manifestsBuilder_.addMessage(m);
                }
                break;
              } // case 98
            case 106:
              {
                com.google.cloud.video.livestream.v1.SpriteSheet m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.SpriteSheet.parser(),
                        extensionRegistry);
                if (spriteSheetsBuilder_ == null) {
                  ensureSpriteSheetsIsMutable();
                  spriteSheets_.add(m);
                } else {
                  spriteSheetsBuilder_.addMessage(m);
                }
                break;
              } // case 106
            case 112:
              {
                streamingState_ = input.readEnum();
                bitField0_ |= 0x00000800;
                break;
              } // case 112
            case 130:
              {
                com.google.cloud.video.livestream.v1.InputAttachment m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.InputAttachment.parser(),
                        extensionRegistry);
                if (inputAttachmentsBuilder_ == null) {
                  ensureInputAttachmentsIsMutable();
                  inputAttachments_.add(m);
                } else {
                  inputAttachmentsBuilder_.addMessage(m);
                }
                break;
              } // case 130
            case 146:
              {
                input.readMessage(getStreamingErrorFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 146
            case 154:
              {
                input.readMessage(getLogConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00002000;
                break;
              } // case 154
            case 170:
              {
                input.readMessage(getTimecodeConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00004000;
                break;
              } // case 170
            case 194:
              {
                com.google.cloud.video.livestream.v1.Encryption m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.Encryption.parser(),
                        extensionRegistry);
                if (encryptionsBuilder_ == null) {
                  ensureEncryptionsIsMutable();
                  encryptions_.add(m);
                } else {
                  encryptionsBuilder_.addMessage(m);
                }
                break;
              } // case 194
            case 202:
              {
                input.readMessage(getInputConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00010000;
                break;
              } // case 202
            case 210:
              {
                input.readMessage(getRetentionConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00020000;
                break;
              } // case 210
            case 218:
              {
                com.google.cloud.video.livestream.v1.StaticOverlay m =
                    input.readMessage(
                        com.google.cloud.video.livestream.v1.StaticOverlay.parser(),
                        extensionRegistry);
                if (staticOverlaysBuilder_ == null) {
                  ensureStaticOverlaysIsMutable();
                  staticOverlays_.add(m);
                } else {
                  staticOverlaysBuilder_.addMessage(m);
                }
                break;
              } // case 218
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * The resource name of the channel, in the form of:
     * `projects/{project}/locations/{location}/channels/{channelId}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The resource name of the channel, in the form of:
     * `projects/{project}/locations/{location}/channels/{channelId}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The resource name of the channel, in the form of:
     * `projects/{project}/locations/{location}/channels/{channelId}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource name of the channel, in the form of:
     * `projects/{project}/locations/{location}/channels/{channelId}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource name of the channel, in the form of:
     * `projects/{project}/locations/{location}/channels/{channelId}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp createTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        createTimeBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the createTime field is set.
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The createTime.
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
      } else {
        createTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && createTime_ != null
            && createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getCreateTimeBuilder().mergeFrom(value);
        } else {
          createTime_ = value;
        }
      } else {
        createTimeBuilder_.mergeFrom(value);
      }
      if (createTime_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearCreateTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      createTime_ = null;
      if (createTimeBuilder_ != null) {
        createTimeBuilder_.dispose();
        createTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : createTime_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The creation time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp,
                com.google.protobuf.Timestamp.Builder,
                com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(), getParentForChildren(), isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp updateTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        updateTimeBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the updateTime field is set.
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The updateTime.
     */
    public com.google.protobuf.Timestamp getUpdateTime() {
      if (updateTimeBuilder_ == null) {
        return updateTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : updateTime_;
      } else {
        return updateTimeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        updateTime_ = value;
      } else {
        updateTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp.Builder builderForValue) {
      if (updateTimeBuilder_ == null) {
        updateTime_ = builderForValue.build();
      } else {
        updateTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
      if (updateTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && updateTime_ != null
            && updateTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getUpdateTimeBuilder().mergeFrom(value);
        } else {
          updateTime_ = value;
        }
      } else {
        updateTimeBuilder_.mergeFrom(value);
      }
      if (updateTime_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearUpdateTime() {
      bitField0_ = (bitField0_ & ~0x00000004);
      updateTime_ = null;
      if (updateTimeBuilder_ != null) {
        updateTimeBuilder_.dispose();
        updateTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.protobuf.Timestamp.Builder getUpdateTimeBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getUpdateTimeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
      if (updateTimeBuilder_ != null) {
        return updateTimeBuilder_.getMessageOrBuilder();
      } else {
        return updateTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : updateTime_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The update time.
     * </pre>
     *
     * <code>
     * .google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        getUpdateTimeFieldBuilder() {
      if (updateTimeBuilder_ == null) {
        updateTimeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp,
                com.google.protobuf.Timestamp.Builder,
                com.google.protobuf.TimestampOrBuilder>(
                getUpdateTime(), getParentForChildren(), isClean());
        updateTime_ = null;
      }
      return updateTimeBuilder_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> labels_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableLabels() {
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    @java.lang.Override
    public boolean containsLabels(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetLabels().getMap().containsKey(key);
    }
    /** Use {@link #getLabelsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    @java.lang.Override
    public /* nullable */ java.lang.String getLabelsOrDefault(
        java.lang.String key,
        /* nullable */
        java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    @java.lang.Override
    public java.lang.String getLabelsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableLabels().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    public Builder removeLabels(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableLabels().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableLabels() {
      bitField0_ |= 0x00000008;
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    public Builder putLabels(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableLabels().getMutableMap().put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     *
     *
     * <pre>
     * User-defined key/value metadata.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    public Builder putAllLabels(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableLabels().getMutableMap().putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.InputAttachment> inputAttachments_ =
        java.util.Collections.emptyList();

    private void ensureInputAttachmentsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        inputAttachments_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.InputAttachment>(
                inputAttachments_);
        bitField0_ |= 0x00000010;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.InputAttachment,
            com.google.cloud.video.livestream.v1.InputAttachment.Builder,
            com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder>
        inputAttachmentsBuilder_;

    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.InputAttachment>
        getInputAttachmentsList() {
      if (inputAttachmentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(inputAttachments_);
      } else {
        return inputAttachmentsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public int getInputAttachmentsCount() {
      if (inputAttachmentsBuilder_ == null) {
        return inputAttachments_.size();
      } else {
        return inputAttachmentsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.InputAttachment getInputAttachments(int index) {
      if (inputAttachmentsBuilder_ == null) {
        return inputAttachments_.get(index);
      } else {
        return inputAttachmentsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder setInputAttachments(
        int index, com.google.cloud.video.livestream.v1.InputAttachment value) {
      if (inputAttachmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInputAttachmentsIsMutable();
        inputAttachments_.set(index, value);
        onChanged();
      } else {
        inputAttachmentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder setInputAttachments(
        int index, com.google.cloud.video.livestream.v1.InputAttachment.Builder builderForValue) {
      if (inputAttachmentsBuilder_ == null) {
        ensureInputAttachmentsIsMutable();
        inputAttachments_.set(index, builderForValue.build());
        onChanged();
      } else {
        inputAttachmentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder addInputAttachments(com.google.cloud.video.livestream.v1.InputAttachment value) {
      if (inputAttachmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInputAttachmentsIsMutable();
        inputAttachments_.add(value);
        onChanged();
      } else {
        inputAttachmentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder addInputAttachments(
        int index, com.google.cloud.video.livestream.v1.InputAttachment value) {
      if (inputAttachmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInputAttachmentsIsMutable();
        inputAttachments_.add(index, value);
        onChanged();
      } else {
        inputAttachmentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder addInputAttachments(
        com.google.cloud.video.livestream.v1.InputAttachment.Builder builderForValue) {
      if (inputAttachmentsBuilder_ == null) {
        ensureInputAttachmentsIsMutable();
        inputAttachments_.add(builderForValue.build());
        onChanged();
      } else {
        inputAttachmentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder addInputAttachments(
        int index, com.google.cloud.video.livestream.v1.InputAttachment.Builder builderForValue) {
      if (inputAttachmentsBuilder_ == null) {
        ensureInputAttachmentsIsMutable();
        inputAttachments_.add(index, builderForValue.build());
        onChanged();
      } else {
        inputAttachmentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder addAllInputAttachments(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.InputAttachment> values) {
      if (inputAttachmentsBuilder_ == null) {
        ensureInputAttachmentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, inputAttachments_);
        onChanged();
      } else {
        inputAttachmentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder clearInputAttachments() {
      if (inputAttachmentsBuilder_ == null) {
        inputAttachments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        inputAttachmentsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public Builder removeInputAttachments(int index) {
      if (inputAttachmentsBuilder_ == null) {
        ensureInputAttachmentsIsMutable();
        inputAttachments_.remove(index);
        onChanged();
      } else {
        inputAttachmentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.InputAttachment.Builder getInputAttachmentsBuilder(
        int index) {
      return getInputAttachmentsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder
        getInputAttachmentsOrBuilder(int index) {
      if (inputAttachmentsBuilder_ == null) {
        return inputAttachments_.get(index);
      } else {
        return inputAttachmentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder>
        getInputAttachmentsOrBuilderList() {
      if (inputAttachmentsBuilder_ != null) {
        return inputAttachmentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(inputAttachments_);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.InputAttachment.Builder
        addInputAttachmentsBuilder() {
      return getInputAttachmentsFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.InputAttachment.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.InputAttachment.Builder addInputAttachmentsBuilder(
        int index) {
      return getInputAttachmentsFieldBuilder()
          .addBuilder(
              index, com.google.cloud.video.livestream.v1.InputAttachment.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of input attachments that this channel uses.
     * One channel can have multiple inputs as the input sources. Only one
     * input can be selected as the input source at one time.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.InputAttachment input_attachments = 16;
     * </code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.InputAttachment.Builder>
        getInputAttachmentsBuilderList() {
      return getInputAttachmentsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.InputAttachment,
            com.google.cloud.video.livestream.v1.InputAttachment.Builder,
            com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder>
        getInputAttachmentsFieldBuilder() {
      if (inputAttachmentsBuilder_ == null) {
        inputAttachmentsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.InputAttachment,
                com.google.cloud.video.livestream.v1.InputAttachment.Builder,
                com.google.cloud.video.livestream.v1.InputAttachmentOrBuilder>(
                inputAttachments_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        inputAttachments_ = null;
      }
      return inputAttachmentsBuilder_;
    }

    private java.lang.Object activeInput_ = "";
    /**
     *
     *
     * <pre>
     * Output only. The
     * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
     * that serves as the current input source. The first input in the
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
     * is the initial input source.
     * </pre>
     *
     * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The activeInput.
     */
    public java.lang.String getActiveInput() {
      java.lang.Object ref = activeInput_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        activeInput_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The
     * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
     * that serves as the current input source. The first input in the
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
     * is the initial input source.
     * </pre>
     *
     * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for activeInput.
     */
    public com.google.protobuf.ByteString getActiveInputBytes() {
      java.lang.Object ref = activeInput_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        activeInput_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The
     * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
     * that serves as the current input source. The first input in the
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
     * is the initial input source.
     * </pre>
     *
     * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The activeInput to set.
     * @return This builder for chaining.
     */
    public Builder setActiveInput(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      activeInput_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The
     * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
     * that serves as the current input source. The first input in the
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
     * is the initial input source.
     * </pre>
     *
     * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearActiveInput() {
      activeInput_ = getDefaultInstance().getActiveInput();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The
     * [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]
     * that serves as the current input source. The first input in the
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments]
     * is the initial input source.
     * </pre>
     *
     * <code>string active_input = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for activeInput to set.
     * @return This builder for chaining.
     */
    public Builder setActiveInputBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      activeInput_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private com.google.cloud.video.livestream.v1.Channel.Output output_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.Channel.Output,
            com.google.cloud.video.livestream.v1.Channel.Output.Builder,
            com.google.cloud.video.livestream.v1.Channel.OutputOrBuilder>
        outputBuilder_;
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the output field is set.
     */
    public boolean hasOutput() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The output.
     */
    public com.google.cloud.video.livestream.v1.Channel.Output getOutput() {
      if (outputBuilder_ == null) {
        return output_ == null
            ? com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance()
            : output_;
      } else {
        return outputBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setOutput(com.google.cloud.video.livestream.v1.Channel.Output value) {
      if (outputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        output_ = value;
      } else {
        outputBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setOutput(
        com.google.cloud.video.livestream.v1.Channel.Output.Builder builderForValue) {
      if (outputBuilder_ == null) {
        output_ = builderForValue.build();
      } else {
        outputBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeOutput(com.google.cloud.video.livestream.v1.Channel.Output value) {
      if (outputBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)
            && output_ != null
            && output_
                != com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance()) {
          getOutputBuilder().mergeFrom(value);
        } else {
          output_ = value;
        }
      } else {
        outputBuilder_.mergeFrom(value);
      }
      if (output_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearOutput() {
      bitField0_ = (bitField0_ & ~0x00000040);
      output_ = null;
      if (outputBuilder_ != null) {
        outputBuilder_.dispose();
        outputBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.Channel.Output.Builder getOutputBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getOutputFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.Channel.OutputOrBuilder getOutputOrBuilder() {
      if (outputBuilder_ != null) {
        return outputBuilder_.getMessageOrBuilder();
      } else {
        return output_ == null
            ? com.google.cloud.video.livestream.v1.Channel.Output.getDefaultInstance()
            : output_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Information about the output (that is, the Cloud Storage bucket
     * to store the generated live stream).
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.Output output = 9 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.Channel.Output,
            com.google.cloud.video.livestream.v1.Channel.Output.Builder,
            com.google.cloud.video.livestream.v1.Channel.OutputOrBuilder>
        getOutputFieldBuilder() {
      if (outputBuilder_ == null) {
        outputBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.video.livestream.v1.Channel.Output,
                com.google.cloud.video.livestream.v1.Channel.Output.Builder,
                com.google.cloud.video.livestream.v1.Channel.OutputOrBuilder>(
                getOutput(), getParentForChildren(), isClean());
        output_ = null;
      }
      return outputBuilder_;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.ElementaryStream>
        elementaryStreams_ = java.util.Collections.emptyList();

    private void ensureElementaryStreamsIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        elementaryStreams_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.ElementaryStream>(
                elementaryStreams_);
        bitField0_ |= 0x00000080;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.ElementaryStream,
            com.google.cloud.video.livestream.v1.ElementaryStream.Builder,
            com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder>
        elementaryStreamsBuilder_;

    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.ElementaryStream>
        getElementaryStreamsList() {
      if (elementaryStreamsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(elementaryStreams_);
      } else {
        return elementaryStreamsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public int getElementaryStreamsCount() {
      if (elementaryStreamsBuilder_ == null) {
        return elementaryStreams_.size();
      } else {
        return elementaryStreamsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.ElementaryStream getElementaryStreams(int index) {
      if (elementaryStreamsBuilder_ == null) {
        return elementaryStreams_.get(index);
      } else {
        return elementaryStreamsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder setElementaryStreams(
        int index, com.google.cloud.video.livestream.v1.ElementaryStream value) {
      if (elementaryStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.set(index, value);
        onChanged();
      } else {
        elementaryStreamsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder setElementaryStreams(
        int index, com.google.cloud.video.livestream.v1.ElementaryStream.Builder builderForValue) {
      if (elementaryStreamsBuilder_ == null) {
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.set(index, builderForValue.build());
        onChanged();
      } else {
        elementaryStreamsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder addElementaryStreams(
        com.google.cloud.video.livestream.v1.ElementaryStream value) {
      if (elementaryStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.add(value);
        onChanged();
      } else {
        elementaryStreamsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder addElementaryStreams(
        int index, com.google.cloud.video.livestream.v1.ElementaryStream value) {
      if (elementaryStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.add(index, value);
        onChanged();
      } else {
        elementaryStreamsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder addElementaryStreams(
        com.google.cloud.video.livestream.v1.ElementaryStream.Builder builderForValue) {
      if (elementaryStreamsBuilder_ == null) {
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.add(builderForValue.build());
        onChanged();
      } else {
        elementaryStreamsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder addElementaryStreams(
        int index, com.google.cloud.video.livestream.v1.ElementaryStream.Builder builderForValue) {
      if (elementaryStreamsBuilder_ == null) {
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.add(index, builderForValue.build());
        onChanged();
      } else {
        elementaryStreamsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder addAllElementaryStreams(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.ElementaryStream>
            values) {
      if (elementaryStreamsBuilder_ == null) {
        ensureElementaryStreamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, elementaryStreams_);
        onChanged();
      } else {
        elementaryStreamsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder clearElementaryStreams() {
      if (elementaryStreamsBuilder_ == null) {
        elementaryStreams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        elementaryStreamsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public Builder removeElementaryStreams(int index) {
      if (elementaryStreamsBuilder_ == null) {
        ensureElementaryStreamsIsMutable();
        elementaryStreams_.remove(index);
        onChanged();
      } else {
        elementaryStreamsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.ElementaryStream.Builder
        getElementaryStreamsBuilder(int index) {
      return getElementaryStreamsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder
        getElementaryStreamsOrBuilder(int index) {
      if (elementaryStreamsBuilder_ == null) {
        return elementaryStreams_.get(index);
      } else {
        return elementaryStreamsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder>
        getElementaryStreamsOrBuilderList() {
      if (elementaryStreamsBuilder_ != null) {
        return elementaryStreamsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(elementaryStreams_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.ElementaryStream.Builder
        addElementaryStreamsBuilder() {
      return getElementaryStreamsFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.ElementaryStream.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public com.google.cloud.video.livestream.v1.ElementaryStream.Builder
        addElementaryStreamsBuilder(int index) {
      return getElementaryStreamsFieldBuilder()
          .addBuilder(
              index, com.google.cloud.video.livestream.v1.ElementaryStream.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of elementary streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.ElementaryStream elementary_streams = 10;
     * </code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.ElementaryStream.Builder>
        getElementaryStreamsBuilderList() {
      return getElementaryStreamsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.ElementaryStream,
            com.google.cloud.video.livestream.v1.ElementaryStream.Builder,
            com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder>
        getElementaryStreamsFieldBuilder() {
      if (elementaryStreamsBuilder_ == null) {
        elementaryStreamsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.ElementaryStream,
                com.google.cloud.video.livestream.v1.ElementaryStream.Builder,
                com.google.cloud.video.livestream.v1.ElementaryStreamOrBuilder>(
                elementaryStreams_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        elementaryStreams_ = null;
      }
      return elementaryStreamsBuilder_;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.MuxStream> muxStreams_ =
        java.util.Collections.emptyList();

    private void ensureMuxStreamsIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        muxStreams_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.MuxStream>(muxStreams_);
        bitField0_ |= 0x00000100;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.MuxStream,
            com.google.cloud.video.livestream.v1.MuxStream.Builder,
            com.google.cloud.video.livestream.v1.MuxStreamOrBuilder>
        muxStreamsBuilder_;

    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.MuxStream> getMuxStreamsList() {
      if (muxStreamsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(muxStreams_);
      } else {
        return muxStreamsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public int getMuxStreamsCount() {
      if (muxStreamsBuilder_ == null) {
        return muxStreams_.size();
      } else {
        return muxStreamsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public com.google.cloud.video.livestream.v1.MuxStream getMuxStreams(int index) {
      if (muxStreamsBuilder_ == null) {
        return muxStreams_.get(index);
      } else {
        return muxStreamsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder setMuxStreams(int index, com.google.cloud.video.livestream.v1.MuxStream value) {
      if (muxStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMuxStreamsIsMutable();
        muxStreams_.set(index, value);
        onChanged();
      } else {
        muxStreamsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder setMuxStreams(
        int index, com.google.cloud.video.livestream.v1.MuxStream.Builder builderForValue) {
      if (muxStreamsBuilder_ == null) {
        ensureMuxStreamsIsMutable();
        muxStreams_.set(index, builderForValue.build());
        onChanged();
      } else {
        muxStreamsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder addMuxStreams(com.google.cloud.video.livestream.v1.MuxStream value) {
      if (muxStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMuxStreamsIsMutable();
        muxStreams_.add(value);
        onChanged();
      } else {
        muxStreamsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder addMuxStreams(int index, com.google.cloud.video.livestream.v1.MuxStream value) {
      if (muxStreamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMuxStreamsIsMutable();
        muxStreams_.add(index, value);
        onChanged();
      } else {
        muxStreamsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder addMuxStreams(
        com.google.cloud.video.livestream.v1.MuxStream.Builder builderForValue) {
      if (muxStreamsBuilder_ == null) {
        ensureMuxStreamsIsMutable();
        muxStreams_.add(builderForValue.build());
        onChanged();
      } else {
        muxStreamsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder addMuxStreams(
        int index, com.google.cloud.video.livestream.v1.MuxStream.Builder builderForValue) {
      if (muxStreamsBuilder_ == null) {
        ensureMuxStreamsIsMutable();
        muxStreams_.add(index, builderForValue.build());
        onChanged();
      } else {
        muxStreamsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder addAllMuxStreams(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.MuxStream> values) {
      if (muxStreamsBuilder_ == null) {
        ensureMuxStreamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, muxStreams_);
        onChanged();
      } else {
        muxStreamsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder clearMuxStreams() {
      if (muxStreamsBuilder_ == null) {
        muxStreams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        muxStreamsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public Builder removeMuxStreams(int index) {
      if (muxStreamsBuilder_ == null) {
        ensureMuxStreamsIsMutable();
        muxStreams_.remove(index);
        onChanged();
      } else {
        muxStreamsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public com.google.cloud.video.livestream.v1.MuxStream.Builder getMuxStreamsBuilder(int index) {
      return getMuxStreamsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public com.google.cloud.video.livestream.v1.MuxStreamOrBuilder getMuxStreamsOrBuilder(
        int index) {
      if (muxStreamsBuilder_ == null) {
        return muxStreams_.get(index);
      } else {
        return muxStreamsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.MuxStreamOrBuilder>
        getMuxStreamsOrBuilderList() {
      if (muxStreamsBuilder_ != null) {
        return muxStreamsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(muxStreams_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public com.google.cloud.video.livestream.v1.MuxStream.Builder addMuxStreamsBuilder() {
      return getMuxStreamsFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.MuxStream.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public com.google.cloud.video.livestream.v1.MuxStream.Builder addMuxStreamsBuilder(int index) {
      return getMuxStreamsFieldBuilder()
          .addBuilder(index, com.google.cloud.video.livestream.v1.MuxStream.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of multiplexing settings for output streams.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.MuxStream mux_streams = 11;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.MuxStream.Builder>
        getMuxStreamsBuilderList() {
      return getMuxStreamsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.MuxStream,
            com.google.cloud.video.livestream.v1.MuxStream.Builder,
            com.google.cloud.video.livestream.v1.MuxStreamOrBuilder>
        getMuxStreamsFieldBuilder() {
      if (muxStreamsBuilder_ == null) {
        muxStreamsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.MuxStream,
                com.google.cloud.video.livestream.v1.MuxStream.Builder,
                com.google.cloud.video.livestream.v1.MuxStreamOrBuilder>(
                muxStreams_, ((bitField0_ & 0x00000100) != 0), getParentForChildren(), isClean());
        muxStreams_ = null;
      }
      return muxStreamsBuilder_;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.Manifest> manifests_ =
        java.util.Collections.emptyList();

    private void ensureManifestsIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        manifests_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.Manifest>(manifests_);
        bitField0_ |= 0x00000200;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.Manifest,
            com.google.cloud.video.livestream.v1.Manifest.Builder,
            com.google.cloud.video.livestream.v1.ManifestOrBuilder>
        manifestsBuilder_;

    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.Manifest> getManifestsList() {
      if (manifestsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(manifests_);
      } else {
        return manifestsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public int getManifestsCount() {
      if (manifestsBuilder_ == null) {
        return manifests_.size();
      } else {
        return manifestsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public com.google.cloud.video.livestream.v1.Manifest getManifests(int index) {
      if (manifestsBuilder_ == null) {
        return manifests_.get(index);
      } else {
        return manifestsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder setManifests(int index, com.google.cloud.video.livestream.v1.Manifest value) {
      if (manifestsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureManifestsIsMutable();
        manifests_.set(index, value);
        onChanged();
      } else {
        manifestsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder setManifests(
        int index, com.google.cloud.video.livestream.v1.Manifest.Builder builderForValue) {
      if (manifestsBuilder_ == null) {
        ensureManifestsIsMutable();
        manifests_.set(index, builderForValue.build());
        onChanged();
      } else {
        manifestsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder addManifests(com.google.cloud.video.livestream.v1.Manifest value) {
      if (manifestsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureManifestsIsMutable();
        manifests_.add(value);
        onChanged();
      } else {
        manifestsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder addManifests(int index, com.google.cloud.video.livestream.v1.Manifest value) {
      if (manifestsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureManifestsIsMutable();
        manifests_.add(index, value);
        onChanged();
      } else {
        manifestsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder addManifests(
        com.google.cloud.video.livestream.v1.Manifest.Builder builderForValue) {
      if (manifestsBuilder_ == null) {
        ensureManifestsIsMutable();
        manifests_.add(builderForValue.build());
        onChanged();
      } else {
        manifestsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder addManifests(
        int index, com.google.cloud.video.livestream.v1.Manifest.Builder builderForValue) {
      if (manifestsBuilder_ == null) {
        ensureManifestsIsMutable();
        manifests_.add(index, builderForValue.build());
        onChanged();
      } else {
        manifestsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder addAllManifests(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.Manifest> values) {
      if (manifestsBuilder_ == null) {
        ensureManifestsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, manifests_);
        onChanged();
      } else {
        manifestsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder clearManifests() {
      if (manifestsBuilder_ == null) {
        manifests_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        manifestsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public Builder removeManifests(int index) {
      if (manifestsBuilder_ == null) {
        ensureManifestsIsMutable();
        manifests_.remove(index);
        onChanged();
      } else {
        manifestsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public com.google.cloud.video.livestream.v1.Manifest.Builder getManifestsBuilder(int index) {
      return getManifestsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public com.google.cloud.video.livestream.v1.ManifestOrBuilder getManifestsOrBuilder(int index) {
      if (manifestsBuilder_ == null) {
        return manifests_.get(index);
      } else {
        return manifestsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.ManifestOrBuilder>
        getManifestsOrBuilderList() {
      if (manifestsBuilder_ != null) {
        return manifestsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(manifests_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public com.google.cloud.video.livestream.v1.Manifest.Builder addManifestsBuilder() {
      return getManifestsFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.Manifest.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public com.google.cloud.video.livestream.v1.Manifest.Builder addManifestsBuilder(int index) {
      return getManifestsFieldBuilder()
          .addBuilder(index, com.google.cloud.video.livestream.v1.Manifest.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of output manifests.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Manifest manifests = 12;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.Manifest.Builder>
        getManifestsBuilderList() {
      return getManifestsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.Manifest,
            com.google.cloud.video.livestream.v1.Manifest.Builder,
            com.google.cloud.video.livestream.v1.ManifestOrBuilder>
        getManifestsFieldBuilder() {
      if (manifestsBuilder_ == null) {
        manifestsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.Manifest,
                com.google.cloud.video.livestream.v1.Manifest.Builder,
                com.google.cloud.video.livestream.v1.ManifestOrBuilder>(
                manifests_, ((bitField0_ & 0x00000200) != 0), getParentForChildren(), isClean());
        manifests_ = null;
      }
      return manifestsBuilder_;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.SpriteSheet> spriteSheets_ =
        java.util.Collections.emptyList();

    private void ensureSpriteSheetsIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        spriteSheets_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.SpriteSheet>(
                spriteSheets_);
        bitField0_ |= 0x00000400;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.SpriteSheet,
            com.google.cloud.video.livestream.v1.SpriteSheet.Builder,
            com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder>
        spriteSheetsBuilder_;

    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.SpriteSheet> getSpriteSheetsList() {
      if (spriteSheetsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(spriteSheets_);
      } else {
        return spriteSheetsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public int getSpriteSheetsCount() {
      if (spriteSheetsBuilder_ == null) {
        return spriteSheets_.size();
      } else {
        return spriteSheetsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public com.google.cloud.video.livestream.v1.SpriteSheet getSpriteSheets(int index) {
      if (spriteSheetsBuilder_ == null) {
        return spriteSheets_.get(index);
      } else {
        return spriteSheetsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder setSpriteSheets(
        int index, com.google.cloud.video.livestream.v1.SpriteSheet value) {
      if (spriteSheetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpriteSheetsIsMutable();
        spriteSheets_.set(index, value);
        onChanged();
      } else {
        spriteSheetsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder setSpriteSheets(
        int index, com.google.cloud.video.livestream.v1.SpriteSheet.Builder builderForValue) {
      if (spriteSheetsBuilder_ == null) {
        ensureSpriteSheetsIsMutable();
        spriteSheets_.set(index, builderForValue.build());
        onChanged();
      } else {
        spriteSheetsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder addSpriteSheets(com.google.cloud.video.livestream.v1.SpriteSheet value) {
      if (spriteSheetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpriteSheetsIsMutable();
        spriteSheets_.add(value);
        onChanged();
      } else {
        spriteSheetsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder addSpriteSheets(
        int index, com.google.cloud.video.livestream.v1.SpriteSheet value) {
      if (spriteSheetsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpriteSheetsIsMutable();
        spriteSheets_.add(index, value);
        onChanged();
      } else {
        spriteSheetsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder addSpriteSheets(
        com.google.cloud.video.livestream.v1.SpriteSheet.Builder builderForValue) {
      if (spriteSheetsBuilder_ == null) {
        ensureSpriteSheetsIsMutable();
        spriteSheets_.add(builderForValue.build());
        onChanged();
      } else {
        spriteSheetsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder addSpriteSheets(
        int index, com.google.cloud.video.livestream.v1.SpriteSheet.Builder builderForValue) {
      if (spriteSheetsBuilder_ == null) {
        ensureSpriteSheetsIsMutable();
        spriteSheets_.add(index, builderForValue.build());
        onChanged();
      } else {
        spriteSheetsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder addAllSpriteSheets(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.SpriteSheet> values) {
      if (spriteSheetsBuilder_ == null) {
        ensureSpriteSheetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, spriteSheets_);
        onChanged();
      } else {
        spriteSheetsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder clearSpriteSheets() {
      if (spriteSheetsBuilder_ == null) {
        spriteSheets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        spriteSheetsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public Builder removeSpriteSheets(int index) {
      if (spriteSheetsBuilder_ == null) {
        ensureSpriteSheetsIsMutable();
        spriteSheets_.remove(index);
        onChanged();
      } else {
        spriteSheetsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public com.google.cloud.video.livestream.v1.SpriteSheet.Builder getSpriteSheetsBuilder(
        int index) {
      return getSpriteSheetsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder getSpriteSheetsOrBuilder(
        int index) {
      if (spriteSheetsBuilder_ == null) {
        return spriteSheets_.get(index);
      } else {
        return spriteSheetsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder>
        getSpriteSheetsOrBuilderList() {
      if (spriteSheetsBuilder_ != null) {
        return spriteSheetsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(spriteSheets_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public com.google.cloud.video.livestream.v1.SpriteSheet.Builder addSpriteSheetsBuilder() {
      return getSpriteSheetsFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.SpriteSheet.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public com.google.cloud.video.livestream.v1.SpriteSheet.Builder addSpriteSheetsBuilder(
        int index) {
      return getSpriteSheetsFieldBuilder()
          .addBuilder(index, com.google.cloud.video.livestream.v1.SpriteSheet.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of output sprite sheets.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.SpriteSheet sprite_sheets = 13;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.SpriteSheet.Builder>
        getSpriteSheetsBuilderList() {
      return getSpriteSheetsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.SpriteSheet,
            com.google.cloud.video.livestream.v1.SpriteSheet.Builder,
            com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder>
        getSpriteSheetsFieldBuilder() {
      if (spriteSheetsBuilder_ == null) {
        spriteSheetsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.SpriteSheet,
                com.google.cloud.video.livestream.v1.SpriteSheet.Builder,
                com.google.cloud.video.livestream.v1.SpriteSheetOrBuilder>(
                spriteSheets_, ((bitField0_ & 0x00000400) != 0), getParentForChildren(), isClean());
        spriteSheets_ = null;
      }
      return spriteSheetsBuilder_;
    }

    private int streamingState_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. State of the streaming operation.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for streamingState.
     */
    @java.lang.Override
    public int getStreamingStateValue() {
      return streamingState_;
    }
    /**
     *
     *
     * <pre>
     * Output only. State of the streaming operation.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for streamingState to set.
     * @return This builder for chaining.
     */
    public Builder setStreamingStateValue(int value) {
      streamingState_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. State of the streaming operation.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The streamingState.
     */
    @java.lang.Override
    public com.google.cloud.video.livestream.v1.Channel.StreamingState getStreamingState() {
      com.google.cloud.video.livestream.v1.Channel.StreamingState result =
          com.google.cloud.video.livestream.v1.Channel.StreamingState.forNumber(streamingState_);
      return result == null
          ? com.google.cloud.video.livestream.v1.Channel.StreamingState.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Output only. State of the streaming operation.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The streamingState to set.
     * @return This builder for chaining.
     */
    public Builder setStreamingState(
        com.google.cloud.video.livestream.v1.Channel.StreamingState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000800;
      streamingState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. State of the streaming operation.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.Channel.StreamingState streaming_state = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStreamingState() {
      bitField0_ = (bitField0_ & ~0x00000800);
      streamingState_ = 0;
      onChanged();
      return this;
    }

    private com.google.rpc.Status streamingError_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>
        streamingErrorBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the streamingError field is set.
     */
    public boolean hasStreamingError() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The streamingError.
     */
    public com.google.rpc.Status getStreamingError() {
      if (streamingErrorBuilder_ == null) {
        return streamingError_ == null
            ? com.google.rpc.Status.getDefaultInstance()
            : streamingError_;
      } else {
        return streamingErrorBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setStreamingError(com.google.rpc.Status value) {
      if (streamingErrorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamingError_ = value;
      } else {
        streamingErrorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setStreamingError(com.google.rpc.Status.Builder builderForValue) {
      if (streamingErrorBuilder_ == null) {
        streamingError_ = builderForValue.build();
      } else {
        streamingErrorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeStreamingError(com.google.rpc.Status value) {
      if (streamingErrorBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)
            && streamingError_ != null
            && streamingError_ != com.google.rpc.Status.getDefaultInstance()) {
          getStreamingErrorBuilder().mergeFrom(value);
        } else {
          streamingError_ = value;
        }
      } else {
        streamingErrorBuilder_.mergeFrom(value);
      }
      if (streamingError_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearStreamingError() {
      bitField0_ = (bitField0_ & ~0x00001000);
      streamingError_ = null;
      if (streamingErrorBuilder_ != null) {
        streamingErrorBuilder_.dispose();
        streamingErrorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.rpc.Status.Builder getStreamingErrorBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getStreamingErrorFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.rpc.StatusOrBuilder getStreamingErrorOrBuilder() {
      if (streamingErrorBuilder_ != null) {
        return streamingErrorBuilder_.getMessageOrBuilder();
      } else {
        return streamingError_ == null
            ? com.google.rpc.Status.getDefaultInstance()
            : streamingError_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. A description of the reason for the streaming error. This
     * property is always present when
     * [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state]
     * is
     * [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
     * </pre>
     *
     * <code>.google.rpc.Status streaming_error = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>
        getStreamingErrorFieldBuilder() {
      if (streamingErrorBuilder_ == null) {
        streamingErrorBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.rpc.Status,
                com.google.rpc.Status.Builder,
                com.google.rpc.StatusOrBuilder>(
                getStreamingError(), getParentForChildren(), isClean());
        streamingError_ = null;
      }
      return streamingErrorBuilder_;
    }

    private com.google.cloud.video.livestream.v1.LogConfig logConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.LogConfig,
            com.google.cloud.video.livestream.v1.LogConfig.Builder,
            com.google.cloud.video.livestream.v1.LogConfigOrBuilder>
        logConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     *
     * @return Whether the logConfig field is set.
     */
    public boolean hasLogConfig() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     *
     * @return The logConfig.
     */
    public com.google.cloud.video.livestream.v1.LogConfig getLogConfig() {
      if (logConfigBuilder_ == null) {
        return logConfig_ == null
            ? com.google.cloud.video.livestream.v1.LogConfig.getDefaultInstance()
            : logConfig_;
      } else {
        return logConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    public Builder setLogConfig(com.google.cloud.video.livestream.v1.LogConfig value) {
      if (logConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        logConfig_ = value;
      } else {
        logConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    public Builder setLogConfig(
        com.google.cloud.video.livestream.v1.LogConfig.Builder builderForValue) {
      if (logConfigBuilder_ == null) {
        logConfig_ = builderForValue.build();
      } else {
        logConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    public Builder mergeLogConfig(com.google.cloud.video.livestream.v1.LogConfig value) {
      if (logConfigBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0)
            && logConfig_ != null
            && logConfig_ != com.google.cloud.video.livestream.v1.LogConfig.getDefaultInstance()) {
          getLogConfigBuilder().mergeFrom(value);
        } else {
          logConfig_ = value;
        }
      } else {
        logConfigBuilder_.mergeFrom(value);
      }
      if (logConfig_ != null) {
        bitField0_ |= 0x00002000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    public Builder clearLogConfig() {
      bitField0_ = (bitField0_ & ~0x00002000);
      logConfig_ = null;
      if (logConfigBuilder_ != null) {
        logConfigBuilder_.dispose();
        logConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    public com.google.cloud.video.livestream.v1.LogConfig.Builder getLogConfigBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getLogConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    public com.google.cloud.video.livestream.v1.LogConfigOrBuilder getLogConfigOrBuilder() {
      if (logConfigBuilder_ != null) {
        return logConfigBuilder_.getMessageOrBuilder();
      } else {
        return logConfig_ == null
            ? com.google.cloud.video.livestream.v1.LogConfig.getDefaultInstance()
            : logConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration of platform logs for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.LogConfig log_config = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.LogConfig,
            com.google.cloud.video.livestream.v1.LogConfig.Builder,
            com.google.cloud.video.livestream.v1.LogConfigOrBuilder>
        getLogConfigFieldBuilder() {
      if (logConfigBuilder_ == null) {
        logConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.video.livestream.v1.LogConfig,
                com.google.cloud.video.livestream.v1.LogConfig.Builder,
                com.google.cloud.video.livestream.v1.LogConfigOrBuilder>(
                getLogConfig(), getParentForChildren(), isClean());
        logConfig_ = null;
      }
      return logConfigBuilder_;
    }

    private com.google.cloud.video.livestream.v1.TimecodeConfig timecodeConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.TimecodeConfig,
            com.google.cloud.video.livestream.v1.TimecodeConfig.Builder,
            com.google.cloud.video.livestream.v1.TimecodeConfigOrBuilder>
        timecodeConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     *
     * @return Whether the timecodeConfig field is set.
     */
    public boolean hasTimecodeConfig() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     *
     * @return The timecodeConfig.
     */
    public com.google.cloud.video.livestream.v1.TimecodeConfig getTimecodeConfig() {
      if (timecodeConfigBuilder_ == null) {
        return timecodeConfig_ == null
            ? com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance()
            : timecodeConfig_;
      } else {
        return timecodeConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    public Builder setTimecodeConfig(com.google.cloud.video.livestream.v1.TimecodeConfig value) {
      if (timecodeConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timecodeConfig_ = value;
      } else {
        timecodeConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    public Builder setTimecodeConfig(
        com.google.cloud.video.livestream.v1.TimecodeConfig.Builder builderForValue) {
      if (timecodeConfigBuilder_ == null) {
        timecodeConfig_ = builderForValue.build();
      } else {
        timecodeConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    public Builder mergeTimecodeConfig(com.google.cloud.video.livestream.v1.TimecodeConfig value) {
      if (timecodeConfigBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)
            && timecodeConfig_ != null
            && timecodeConfig_
                != com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance()) {
          getTimecodeConfigBuilder().mergeFrom(value);
        } else {
          timecodeConfig_ = value;
        }
      } else {
        timecodeConfigBuilder_.mergeFrom(value);
      }
      if (timecodeConfig_ != null) {
        bitField0_ |= 0x00004000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    public Builder clearTimecodeConfig() {
      bitField0_ = (bitField0_ & ~0x00004000);
      timecodeConfig_ = null;
      if (timecodeConfigBuilder_ != null) {
        timecodeConfigBuilder_.dispose();
        timecodeConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    public com.google.cloud.video.livestream.v1.TimecodeConfig.Builder getTimecodeConfigBuilder() {
      bitField0_ |= 0x00004000;
      onChanged();
      return getTimecodeConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    public com.google.cloud.video.livestream.v1.TimecodeConfigOrBuilder
        getTimecodeConfigOrBuilder() {
      if (timecodeConfigBuilder_ != null) {
        return timecodeConfigBuilder_.getMessageOrBuilder();
      } else {
        return timecodeConfig_ == null
            ? com.google.cloud.video.livestream.v1.TimecodeConfig.getDefaultInstance()
            : timecodeConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration of timecode for this channel.
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.TimecodeConfig timecode_config = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.TimecodeConfig,
            com.google.cloud.video.livestream.v1.TimecodeConfig.Builder,
            com.google.cloud.video.livestream.v1.TimecodeConfigOrBuilder>
        getTimecodeConfigFieldBuilder() {
      if (timecodeConfigBuilder_ == null) {
        timecodeConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.video.livestream.v1.TimecodeConfig,
                com.google.cloud.video.livestream.v1.TimecodeConfig.Builder,
                com.google.cloud.video.livestream.v1.TimecodeConfigOrBuilder>(
                getTimecodeConfig(), getParentForChildren(), isClean());
        timecodeConfig_ = null;
      }
      return timecodeConfigBuilder_;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.Encryption> encryptions_ =
        java.util.Collections.emptyList();

    private void ensureEncryptionsIsMutable() {
      if (!((bitField0_ & 0x00008000) != 0)) {
        encryptions_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.Encryption>(encryptions_);
        bitField0_ |= 0x00008000;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.Encryption,
            com.google.cloud.video.livestream.v1.Encryption.Builder,
            com.google.cloud.video.livestream.v1.EncryptionOrBuilder>
        encryptionsBuilder_;

    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.Encryption> getEncryptionsList() {
      if (encryptionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(encryptions_);
      } else {
        return encryptionsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public int getEncryptionsCount() {
      if (encryptionsBuilder_ == null) {
        return encryptions_.size();
      } else {
        return encryptionsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public com.google.cloud.video.livestream.v1.Encryption getEncryptions(int index) {
      if (encryptionsBuilder_ == null) {
        return encryptions_.get(index);
      } else {
        return encryptionsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder setEncryptions(
        int index, com.google.cloud.video.livestream.v1.Encryption value) {
      if (encryptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEncryptionsIsMutable();
        encryptions_.set(index, value);
        onChanged();
      } else {
        encryptionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder setEncryptions(
        int index, com.google.cloud.video.livestream.v1.Encryption.Builder builderForValue) {
      if (encryptionsBuilder_ == null) {
        ensureEncryptionsIsMutable();
        encryptions_.set(index, builderForValue.build());
        onChanged();
      } else {
        encryptionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder addEncryptions(com.google.cloud.video.livestream.v1.Encryption value) {
      if (encryptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEncryptionsIsMutable();
        encryptions_.add(value);
        onChanged();
      } else {
        encryptionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder addEncryptions(
        int index, com.google.cloud.video.livestream.v1.Encryption value) {
      if (encryptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEncryptionsIsMutable();
        encryptions_.add(index, value);
        onChanged();
      } else {
        encryptionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder addEncryptions(
        com.google.cloud.video.livestream.v1.Encryption.Builder builderForValue) {
      if (encryptionsBuilder_ == null) {
        ensureEncryptionsIsMutable();
        encryptions_.add(builderForValue.build());
        onChanged();
      } else {
        encryptionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder addEncryptions(
        int index, com.google.cloud.video.livestream.v1.Encryption.Builder builderForValue) {
      if (encryptionsBuilder_ == null) {
        ensureEncryptionsIsMutable();
        encryptions_.add(index, builderForValue.build());
        onChanged();
      } else {
        encryptionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder addAllEncryptions(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.Encryption> values) {
      if (encryptionsBuilder_ == null) {
        ensureEncryptionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, encryptions_);
        onChanged();
      } else {
        encryptionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder clearEncryptions() {
      if (encryptionsBuilder_ == null) {
        encryptions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
      } else {
        encryptionsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public Builder removeEncryptions(int index) {
      if (encryptionsBuilder_ == null) {
        ensureEncryptionsIsMutable();
        encryptions_.remove(index);
        onChanged();
      } else {
        encryptionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public com.google.cloud.video.livestream.v1.Encryption.Builder getEncryptionsBuilder(
        int index) {
      return getEncryptionsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public com.google.cloud.video.livestream.v1.EncryptionOrBuilder getEncryptionsOrBuilder(
        int index) {
      if (encryptionsBuilder_ == null) {
        return encryptions_.get(index);
      } else {
        return encryptionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.EncryptionOrBuilder>
        getEncryptionsOrBuilderList() {
      if (encryptionsBuilder_ != null) {
        return encryptionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(encryptions_);
      }
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public com.google.cloud.video.livestream.v1.Encryption.Builder addEncryptionsBuilder() {
      return getEncryptionsFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.Encryption.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public com.google.cloud.video.livestream.v1.Encryption.Builder addEncryptionsBuilder(
        int index) {
      return getEncryptionsFieldBuilder()
          .addBuilder(index, com.google.cloud.video.livestream.v1.Encryption.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Encryption configurations for this channel. Each configuration has an ID
     * which is referred to by each MuxStream to indicate which configuration is
     * used for that output.
     * </pre>
     *
     * <code>repeated .google.cloud.video.livestream.v1.Encryption encryptions = 24;</code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.Encryption.Builder>
        getEncryptionsBuilderList() {
      return getEncryptionsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.Encryption,
            com.google.cloud.video.livestream.v1.Encryption.Builder,
            com.google.cloud.video.livestream.v1.EncryptionOrBuilder>
        getEncryptionsFieldBuilder() {
      if (encryptionsBuilder_ == null) {
        encryptionsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.Encryption,
                com.google.cloud.video.livestream.v1.Encryption.Builder,
                com.google.cloud.video.livestream.v1.EncryptionOrBuilder>(
                encryptions_, ((bitField0_ & 0x00008000) != 0), getParentForChildren(), isClean());
        encryptions_ = null;
      }
      return encryptionsBuilder_;
    }

    private com.google.cloud.video.livestream.v1.InputConfig inputConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.InputConfig,
            com.google.cloud.video.livestream.v1.InputConfig.Builder,
            com.google.cloud.video.livestream.v1.InputConfigOrBuilder>
        inputConfigBuilder_;
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     *
     * @return Whether the inputConfig field is set.
     */
    public boolean hasInputConfig() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     *
     * @return The inputConfig.
     */
    public com.google.cloud.video.livestream.v1.InputConfig getInputConfig() {
      if (inputConfigBuilder_ == null) {
        return inputConfig_ == null
            ? com.google.cloud.video.livestream.v1.InputConfig.getDefaultInstance()
            : inputConfig_;
      } else {
        return inputConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    public Builder setInputConfig(com.google.cloud.video.livestream.v1.InputConfig value) {
      if (inputConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inputConfig_ = value;
      } else {
        inputConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    public Builder setInputConfig(
        com.google.cloud.video.livestream.v1.InputConfig.Builder builderForValue) {
      if (inputConfigBuilder_ == null) {
        inputConfig_ = builderForValue.build();
      } else {
        inputConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    public Builder mergeInputConfig(com.google.cloud.video.livestream.v1.InputConfig value) {
      if (inputConfigBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0)
            && inputConfig_ != null
            && inputConfig_
                != com.google.cloud.video.livestream.v1.InputConfig.getDefaultInstance()) {
          getInputConfigBuilder().mergeFrom(value);
        } else {
          inputConfig_ = value;
        }
      } else {
        inputConfigBuilder_.mergeFrom(value);
      }
      if (inputConfig_ != null) {
        bitField0_ |= 0x00010000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    public Builder clearInputConfig() {
      bitField0_ = (bitField0_ & ~0x00010000);
      inputConfig_ = null;
      if (inputConfigBuilder_ != null) {
        inputConfigBuilder_.dispose();
        inputConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    public com.google.cloud.video.livestream.v1.InputConfig.Builder getInputConfigBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getInputConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    public com.google.cloud.video.livestream.v1.InputConfigOrBuilder getInputConfigOrBuilder() {
      if (inputConfigBuilder_ != null) {
        return inputConfigBuilder_.getMessageOrBuilder();
      } else {
        return inputConfig_ == null
            ? com.google.cloud.video.livestream.v1.InputConfig.getDefaultInstance()
            : inputConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * The configuration for input sources defined in
     * [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments].
     * </pre>
     *
     * <code>.google.cloud.video.livestream.v1.InputConfig input_config = 25;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.InputConfig,
            com.google.cloud.video.livestream.v1.InputConfig.Builder,
            com.google.cloud.video.livestream.v1.InputConfigOrBuilder>
        getInputConfigFieldBuilder() {
      if (inputConfigBuilder_ == null) {
        inputConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.video.livestream.v1.InputConfig,
                com.google.cloud.video.livestream.v1.InputConfig.Builder,
                com.google.cloud.video.livestream.v1.InputConfigOrBuilder>(
                getInputConfig(), getParentForChildren(), isClean());
        inputConfig_ = null;
      }
      return inputConfigBuilder_;
    }

    private com.google.cloud.video.livestream.v1.RetentionConfig retentionConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.RetentionConfig,
            com.google.cloud.video.livestream.v1.RetentionConfig.Builder,
            com.google.cloud.video.livestream.v1.RetentionConfigOrBuilder>
        retentionConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the retentionConfig field is set.
     */
    public boolean hasRetentionConfig() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The retentionConfig.
     */
    public com.google.cloud.video.livestream.v1.RetentionConfig getRetentionConfig() {
      if (retentionConfigBuilder_ == null) {
        return retentionConfig_ == null
            ? com.google.cloud.video.livestream.v1.RetentionConfig.getDefaultInstance()
            : retentionConfig_;
      } else {
        return retentionConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setRetentionConfig(com.google.cloud.video.livestream.v1.RetentionConfig value) {
      if (retentionConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        retentionConfig_ = value;
      } else {
        retentionConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setRetentionConfig(
        com.google.cloud.video.livestream.v1.RetentionConfig.Builder builderForValue) {
      if (retentionConfigBuilder_ == null) {
        retentionConfig_ = builderForValue.build();
      } else {
        retentionConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeRetentionConfig(
        com.google.cloud.video.livestream.v1.RetentionConfig value) {
      if (retentionConfigBuilder_ == null) {
        if (((bitField0_ & 0x00020000) != 0)
            && retentionConfig_ != null
            && retentionConfig_
                != com.google.cloud.video.livestream.v1.RetentionConfig.getDefaultInstance()) {
          getRetentionConfigBuilder().mergeFrom(value);
        } else {
          retentionConfig_ = value;
        }
      } else {
        retentionConfigBuilder_.mergeFrom(value);
      }
      if (retentionConfig_ != null) {
        bitField0_ |= 0x00020000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearRetentionConfig() {
      bitField0_ = (bitField0_ & ~0x00020000);
      retentionConfig_ = null;
      if (retentionConfigBuilder_ != null) {
        retentionConfigBuilder_.dispose();
        retentionConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.RetentionConfig.Builder
        getRetentionConfigBuilder() {
      bitField0_ |= 0x00020000;
      onChanged();
      return getRetentionConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.RetentionConfigOrBuilder
        getRetentionConfigOrBuilder() {
      if (retentionConfigBuilder_ != null) {
        return retentionConfigBuilder_.getMessageOrBuilder();
      } else {
        return retentionConfig_ == null
            ? com.google.cloud.video.livestream.v1.RetentionConfig.getDefaultInstance()
            : retentionConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for retention of output files for this channel.
     * </pre>
     *
     * <code>
     * .google.cloud.video.livestream.v1.RetentionConfig retention_config = 26 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.video.livestream.v1.RetentionConfig,
            com.google.cloud.video.livestream.v1.RetentionConfig.Builder,
            com.google.cloud.video.livestream.v1.RetentionConfigOrBuilder>
        getRetentionConfigFieldBuilder() {
      if (retentionConfigBuilder_ == null) {
        retentionConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.video.livestream.v1.RetentionConfig,
                com.google.cloud.video.livestream.v1.RetentionConfig.Builder,
                com.google.cloud.video.livestream.v1.RetentionConfigOrBuilder>(
                getRetentionConfig(), getParentForChildren(), isClean());
        retentionConfig_ = null;
      }
      return retentionConfigBuilder_;
    }

    private java.util.List<com.google.cloud.video.livestream.v1.StaticOverlay> staticOverlays_ =
        java.util.Collections.emptyList();

    private void ensureStaticOverlaysIsMutable() {
      if (!((bitField0_ & 0x00040000) != 0)) {
        staticOverlays_ =
            new java.util.ArrayList<com.google.cloud.video.livestream.v1.StaticOverlay>(
                staticOverlays_);
        bitField0_ |= 0x00040000;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.StaticOverlay,
            com.google.cloud.video.livestream.v1.StaticOverlay.Builder,
            com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder>
        staticOverlaysBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.StaticOverlay>
        getStaticOverlaysList() {
      if (staticOverlaysBuilder_ == null) {
        return java.util.Collections.unmodifiableList(staticOverlays_);
      } else {
        return staticOverlaysBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getStaticOverlaysCount() {
      if (staticOverlaysBuilder_ == null) {
        return staticOverlays_.size();
      } else {
        return staticOverlaysBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.StaticOverlay getStaticOverlays(int index) {
      if (staticOverlaysBuilder_ == null) {
        return staticOverlays_.get(index);
      } else {
        return staticOverlaysBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setStaticOverlays(
        int index, com.google.cloud.video.livestream.v1.StaticOverlay value) {
      if (staticOverlaysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStaticOverlaysIsMutable();
        staticOverlays_.set(index, value);
        onChanged();
      } else {
        staticOverlaysBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setStaticOverlays(
        int index, com.google.cloud.video.livestream.v1.StaticOverlay.Builder builderForValue) {
      if (staticOverlaysBuilder_ == null) {
        ensureStaticOverlaysIsMutable();
        staticOverlays_.set(index, builderForValue.build());
        onChanged();
      } else {
        staticOverlaysBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addStaticOverlays(com.google.cloud.video.livestream.v1.StaticOverlay value) {
      if (staticOverlaysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStaticOverlaysIsMutable();
        staticOverlays_.add(value);
        onChanged();
      } else {
        staticOverlaysBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addStaticOverlays(
        int index, com.google.cloud.video.livestream.v1.StaticOverlay value) {
      if (staticOverlaysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStaticOverlaysIsMutable();
        staticOverlays_.add(index, value);
        onChanged();
      } else {
        staticOverlaysBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addStaticOverlays(
        com.google.cloud.video.livestream.v1.StaticOverlay.Builder builderForValue) {
      if (staticOverlaysBuilder_ == null) {
        ensureStaticOverlaysIsMutable();
        staticOverlays_.add(builderForValue.build());
        onChanged();
      } else {
        staticOverlaysBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addStaticOverlays(
        int index, com.google.cloud.video.livestream.v1.StaticOverlay.Builder builderForValue) {
      if (staticOverlaysBuilder_ == null) {
        ensureStaticOverlaysIsMutable();
        staticOverlays_.add(index, builderForValue.build());
        onChanged();
      } else {
        staticOverlaysBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllStaticOverlays(
        java.lang.Iterable<? extends com.google.cloud.video.livestream.v1.StaticOverlay> values) {
      if (staticOverlaysBuilder_ == null) {
        ensureStaticOverlaysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, staticOverlays_);
        onChanged();
      } else {
        staticOverlaysBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearStaticOverlays() {
      if (staticOverlaysBuilder_ == null) {
        staticOverlays_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
      } else {
        staticOverlaysBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeStaticOverlays(int index) {
      if (staticOverlaysBuilder_ == null) {
        ensureStaticOverlaysIsMutable();
        staticOverlays_.remove(index);
        onChanged();
      } else {
        staticOverlaysBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.StaticOverlay.Builder getStaticOverlaysBuilder(
        int index) {
      return getStaticOverlaysFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder getStaticOverlaysOrBuilder(
        int index) {
      if (staticOverlaysBuilder_ == null) {
        return staticOverlays_.get(index);
      } else {
        return staticOverlaysBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder>
        getStaticOverlaysOrBuilderList() {
      if (staticOverlaysBuilder_ != null) {
        return staticOverlaysBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(staticOverlays_);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.StaticOverlay.Builder addStaticOverlaysBuilder() {
      return getStaticOverlaysFieldBuilder()
          .addBuilder(com.google.cloud.video.livestream.v1.StaticOverlay.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.video.livestream.v1.StaticOverlay.Builder addStaticOverlaysBuilder(
        int index) {
      return getStaticOverlaysFieldBuilder()
          .addBuilder(
              index, com.google.cloud.video.livestream.v1.StaticOverlay.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. List of static overlay images. Those images display over the
     * output content for the whole duration of the live stream.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.livestream.v1.StaticOverlay static_overlays = 27 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.video.livestream.v1.StaticOverlay.Builder>
        getStaticOverlaysBuilderList() {
      return getStaticOverlaysFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.livestream.v1.StaticOverlay,
            com.google.cloud.video.livestream.v1.StaticOverlay.Builder,
            com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder>
        getStaticOverlaysFieldBuilder() {
      if (staticOverlaysBuilder_ == null) {
        staticOverlaysBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.livestream.v1.StaticOverlay,
                com.google.cloud.video.livestream.v1.StaticOverlay.Builder,
                com.google.cloud.video.livestream.v1.StaticOverlayOrBuilder>(
                staticOverlays_,
                ((bitField0_ & 0x00040000) != 0),
                getParentForChildren(),
                isClean());
        staticOverlays_ = null;
      }
      return staticOverlaysBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.video.livestream.v1.Channel)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.video.livestream.v1.Channel)
  private static final com.google.cloud.video.livestream.v1.Channel DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.video.livestream.v1.Channel();
  }

  public static com.google.cloud.video.livestream.v1.Channel getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Channel> PARSER =
      new com.google.protobuf.AbstractParser<Channel>() {
        @java.lang.Override
        public Channel parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Channel> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Channel> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.video.livestream.v1.Channel getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
