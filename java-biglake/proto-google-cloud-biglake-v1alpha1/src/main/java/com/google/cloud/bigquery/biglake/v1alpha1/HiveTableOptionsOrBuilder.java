/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/biglake/v1alpha1/metastore.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.bigquery.biglake.v1alpha1;

public interface HiveTableOptionsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.biglake.v1alpha1.HiveTableOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Stores user supplied Hive table parameters.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 1;</code>
   */
  int getParametersCount();
  /**
   *
   *
   * <pre>
   * Stores user supplied Hive table parameters.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 1;</code>
   */
  boolean containsParameters(java.lang.String key);
  /** Use {@link #getParametersMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getParameters();
  /**
   *
   *
   * <pre>
   * Stores user supplied Hive table parameters.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 1;</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getParametersMap();
  /**
   *
   *
   * <pre>
   * Stores user supplied Hive table parameters.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 1;</code>
   */
  /* nullable */
  java.lang.String getParametersOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);
  /**
   *
   *
   * <pre>
   * Stores user supplied Hive table parameters.
   * </pre>
   *
   * <code>map&lt;string, string&gt; parameters = 1;</code>
   */
  java.lang.String getParametersOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
   * </pre>
   *
   * <code>string table_type = 2;</code>
   *
   * @return The tableType.
   */
  java.lang.String getTableType();
  /**
   *
   *
   * <pre>
   * Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
   * </pre>
   *
   * <code>string table_type = 2;</code>
   *
   * @return The bytes for tableType.
   */
  com.google.protobuf.ByteString getTableTypeBytes();

  /**
   *
   *
   * <pre>
   * Stores physical storage information of the data.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.biglake.v1alpha1.HiveTableOptions.StorageDescriptor storage_descriptor = 3;
   * </code>
   *
   * @return Whether the storageDescriptor field is set.
   */
  boolean hasStorageDescriptor();
  /**
   *
   *
   * <pre>
   * Stores physical storage information of the data.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.biglake.v1alpha1.HiveTableOptions.StorageDescriptor storage_descriptor = 3;
   * </code>
   *
   * @return The storageDescriptor.
   */
  com.google.cloud.bigquery.biglake.v1alpha1.HiveTableOptions.StorageDescriptor
      getStorageDescriptor();
  /**
   *
   *
   * <pre>
   * Stores physical storage information of the data.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.biglake.v1alpha1.HiveTableOptions.StorageDescriptor storage_descriptor = 3;
   * </code>
   */
  com.google.cloud.bigquery.biglake.v1alpha1.HiveTableOptions.StorageDescriptorOrBuilder
      getStorageDescriptorOrBuilder();
}
