/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/biglake/v1/iceberg_rest_catalog.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.biglake.v1;

public interface IcebergNamespaceOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.biglake.v1.IcebergNamespace)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The name of the namespace.
   * </pre>
   *
   * <code>repeated string namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return A list containing the namespace.
   */
  java.util.List<java.lang.String> getNamespaceList();

  /**
   *
   *
   * <pre>
   * Required. The name of the namespace.
   * </pre>
   *
   * <code>repeated string namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The count of namespace.
   */
  int getNamespaceCount();

  /**
   *
   *
   * <pre>
   * Required. The name of the namespace.
   * </pre>
   *
   * <code>repeated string namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @param index The index of the element to return.
   * @return The namespace at the given index.
   */
  java.lang.String getNamespace(int index);

  /**
   *
   *
   * <pre>
   * Required. The name of the namespace.
   * </pre>
   *
   * <code>repeated string namespace = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the namespace at the given index.
   */
  com.google.protobuf.ByteString getNamespaceBytes(int index);

  /**
   *
   *
   * <pre>
   * Optional. The optional properties of the namespace.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  int getPropertiesCount();

  /**
   *
   *
   * <pre>
   * Optional. The optional properties of the namespace.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  boolean containsProperties(java.lang.String key);

  /** Use {@link #getPropertiesMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getProperties();

  /**
   *
   *
   * <pre>
   * Optional. The optional properties of the namespace.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.Map<java.lang.String, java.lang.String> getPropertiesMap();

  /**
   *
   *
   * <pre>
   * Optional. The optional properties of the namespace.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  /* nullable */
  java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);

  /**
   *
   *
   * <pre>
   * Optional. The optional properties of the namespace.
   * </pre>
   *
   * <code>map&lt;string, string&gt; properties = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.lang.String getPropertiesOrThrow(java.lang.String key);
}
