/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataplex/v1/processing.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.dataplex.v1;

/**
 *
 *
 * <pre>
 * DataScan scheduling and trigger settings.
 * </pre>
 *
 * Protobuf type {@code google.cloud.dataplex.v1.Trigger}
 */
public final class Trigger extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.dataplex.v1.Trigger)
    TriggerOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Trigger.newBuilder() to construct.
  private Trigger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Trigger() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Trigger();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.dataplex.v1.ProcessingProto
        .internal_static_google_cloud_dataplex_v1_Trigger_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.dataplex.v1.ProcessingProto
        .internal_static_google_cloud_dataplex_v1_Trigger_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.dataplex.v1.Trigger.class,
            com.google.cloud.dataplex.v1.Trigger.Builder.class);
  }

  public interface OnDemandOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.dataplex.v1.Trigger.OnDemand)
      com.google.protobuf.MessageOrBuilder {}
  /**
   *
   *
   * <pre>
   * The scan runs once via `RunDataScan` API.
   * </pre>
   *
   * Protobuf type {@code google.cloud.dataplex.v1.Trigger.OnDemand}
   */
  public static final class OnDemand extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.dataplex.v1.Trigger.OnDemand)
      OnDemandOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use OnDemand.newBuilder() to construct.
    private OnDemand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private OnDemand() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new OnDemand();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_OnDemand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_OnDemand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dataplex.v1.Trigger.OnDemand.class,
              com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder.class);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.dataplex.v1.Trigger.OnDemand)) {
        return super.equals(obj);
      }
      com.google.cloud.dataplex.v1.Trigger.OnDemand other =
          (com.google.cloud.dataplex.v1.Trigger.OnDemand) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.cloud.dataplex.v1.Trigger.OnDemand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * Protobuf type {@code google.cloud.dataplex.v1.Trigger.OnDemand}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.dataplex.v1.Trigger.OnDemand)
        com.google.cloud.dataplex.v1.Trigger.OnDemandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.dataplex.v1.ProcessingProto
            .internal_static_google_cloud_dataplex_v1_Trigger_OnDemand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.dataplex.v1.ProcessingProto
            .internal_static_google_cloud_dataplex_v1_Trigger_OnDemand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.dataplex.v1.Trigger.OnDemand.class,
                com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder.class);
      }

      // Construct using com.google.cloud.dataplex.v1.Trigger.OnDemand.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.dataplex.v1.ProcessingProto
            .internal_static_google_cloud_dataplex_v1_Trigger_OnDemand_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.dataplex.v1.Trigger.OnDemand getDefaultInstanceForType() {
        return com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.dataplex.v1.Trigger.OnDemand build() {
        com.google.cloud.dataplex.v1.Trigger.OnDemand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.dataplex.v1.Trigger.OnDemand buildPartial() {
        com.google.cloud.dataplex.v1.Trigger.OnDemand result =
            new com.google.cloud.dataplex.v1.Trigger.OnDemand(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.dataplex.v1.Trigger.OnDemand) {
          return mergeFrom((com.google.cloud.dataplex.v1.Trigger.OnDemand) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.dataplex.v1.Trigger.OnDemand other) {
        if (other == com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance())
          return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.dataplex.v1.Trigger.OnDemand)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.dataplex.v1.Trigger.OnDemand)
    private static final com.google.cloud.dataplex.v1.Trigger.OnDemand DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.dataplex.v1.Trigger.OnDemand();
    }

    public static com.google.cloud.dataplex.v1.Trigger.OnDemand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OnDemand> PARSER =
        new com.google.protobuf.AbstractParser<OnDemand>() {
          @java.lang.Override
          public OnDemand parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<OnDemand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OnDemand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger.OnDemand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ScheduleOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.dataplex.v1.Trigger.Schedule)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
     * scans periodically.
     *
     * To explicitly set a timezone in the cron tab, apply a prefix in the
     * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
     * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
     * database
     * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
     * For example, `CRON_TZ=America/New_York 1 * * * *`, or
     * `TZ=America/New_York 1 * * * *`.
     *
     * This field is required for Schedule scans.
     * </pre>
     *
     * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The cron.
     */
    java.lang.String getCron();
    /**
     *
     *
     * <pre>
     * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
     * scans periodically.
     *
     * To explicitly set a timezone in the cron tab, apply a prefix in the
     * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
     * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
     * database
     * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
     * For example, `CRON_TZ=America/New_York 1 * * * *`, or
     * `TZ=America/New_York 1 * * * *`.
     *
     * This field is required for Schedule scans.
     * </pre>
     *
     * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for cron.
     */
    com.google.protobuf.ByteString getCronBytes();
  }
  /**
   *
   *
   * <pre>
   * The scan is scheduled to run periodically.
   * </pre>
   *
   * Protobuf type {@code google.cloud.dataplex.v1.Trigger.Schedule}
   */
  public static final class Schedule extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.dataplex.v1.Trigger.Schedule)
      ScheduleOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Schedule.newBuilder() to construct.
    private Schedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Schedule() {
      cron_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Schedule();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_Schedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_Schedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dataplex.v1.Trigger.Schedule.class,
              com.google.cloud.dataplex.v1.Trigger.Schedule.Builder.class);
    }

    public static final int CRON_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object cron_ = "";
    /**
     *
     *
     * <pre>
     * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
     * scans periodically.
     *
     * To explicitly set a timezone in the cron tab, apply a prefix in the
     * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
     * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
     * database
     * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
     * For example, `CRON_TZ=America/New_York 1 * * * *`, or
     * `TZ=America/New_York 1 * * * *`.
     *
     * This field is required for Schedule scans.
     * </pre>
     *
     * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The cron.
     */
    @java.lang.Override
    public java.lang.String getCron() {
      java.lang.Object ref = cron_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cron_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
     * scans periodically.
     *
     * To explicitly set a timezone in the cron tab, apply a prefix in the
     * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
     * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
     * database
     * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
     * For example, `CRON_TZ=America/New_York 1 * * * *`, or
     * `TZ=America/New_York 1 * * * *`.
     *
     * This field is required for Schedule scans.
     * </pre>
     *
     * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for cron.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCronBytes() {
      java.lang.Object ref = cron_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        cron_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cron_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cron_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cron_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cron_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.dataplex.v1.Trigger.Schedule)) {
        return super.equals(obj);
      }
      com.google.cloud.dataplex.v1.Trigger.Schedule other =
          (com.google.cloud.dataplex.v1.Trigger.Schedule) obj;

      if (!getCron().equals(other.getCron())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CRON_FIELD_NUMBER;
      hash = (53 * hash) + getCron().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.google.cloud.dataplex.v1.Trigger.Schedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * Protobuf type {@code google.cloud.dataplex.v1.Trigger.Schedule}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.dataplex.v1.Trigger.Schedule)
        com.google.cloud.dataplex.v1.Trigger.ScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.dataplex.v1.ProcessingProto
            .internal_static_google_cloud_dataplex_v1_Trigger_Schedule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.dataplex.v1.ProcessingProto
            .internal_static_google_cloud_dataplex_v1_Trigger_Schedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.dataplex.v1.Trigger.Schedule.class,
                com.google.cloud.dataplex.v1.Trigger.Schedule.Builder.class);
      }

      // Construct using com.google.cloud.dataplex.v1.Trigger.Schedule.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cron_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.dataplex.v1.ProcessingProto
            .internal_static_google_cloud_dataplex_v1_Trigger_Schedule_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.dataplex.v1.Trigger.Schedule getDefaultInstanceForType() {
        return com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.dataplex.v1.Trigger.Schedule build() {
        com.google.cloud.dataplex.v1.Trigger.Schedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.dataplex.v1.Trigger.Schedule buildPartial() {
        com.google.cloud.dataplex.v1.Trigger.Schedule result =
            new com.google.cloud.dataplex.v1.Trigger.Schedule(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloud.dataplex.v1.Trigger.Schedule result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cron_ = cron_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.dataplex.v1.Trigger.Schedule) {
          return mergeFrom((com.google.cloud.dataplex.v1.Trigger.Schedule) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.dataplex.v1.Trigger.Schedule other) {
        if (other == com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance())
          return this;
        if (!other.getCron().isEmpty()) {
          cron_ = other.cron_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  cron_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object cron_ = "";
      /**
       *
       *
       * <pre>
       * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
       * scans periodically.
       *
       * To explicitly set a timezone in the cron tab, apply a prefix in the
       * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
       * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
       * database
       * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
       * For example, `CRON_TZ=America/New_York 1 * * * *`, or
       * `TZ=America/New_York 1 * * * *`.
       *
       * This field is required for Schedule scans.
       * </pre>
       *
       * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The cron.
       */
      public java.lang.String getCron() {
        java.lang.Object ref = cron_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cron_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
       * scans periodically.
       *
       * To explicitly set a timezone in the cron tab, apply a prefix in the
       * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
       * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
       * database
       * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
       * For example, `CRON_TZ=America/New_York 1 * * * *`, or
       * `TZ=America/New_York 1 * * * *`.
       *
       * This field is required for Schedule scans.
       * </pre>
       *
       * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The bytes for cron.
       */
      public com.google.protobuf.ByteString getCronBytes() {
        java.lang.Object ref = cron_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          cron_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
       * scans periodically.
       *
       * To explicitly set a timezone in the cron tab, apply a prefix in the
       * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
       * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
       * database
       * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
       * For example, `CRON_TZ=America/New_York 1 * * * *`, or
       * `TZ=America/New_York 1 * * * *`.
       *
       * This field is required for Schedule scans.
       * </pre>
       *
       * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The cron to set.
       * @return This builder for chaining.
       */
      public Builder setCron(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        cron_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
       * scans periodically.
       *
       * To explicitly set a timezone in the cron tab, apply a prefix in the
       * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
       * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
       * database
       * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
       * For example, `CRON_TZ=America/New_York 1 * * * *`, or
       * `TZ=America/New_York 1 * * * *`.
       *
       * This field is required for Schedule scans.
       * </pre>
       *
       * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCron() {
        cron_ = getDefaultInstance().getCron();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. [Cron](https://en.wikipedia.org/wiki/Cron) schedule for running
       * scans periodically.
       *
       * To explicitly set a timezone in the cron tab, apply a prefix in the
       * cron tab: **"CRON_TZ=${IANA_TIME_ZONE}"** or **"TZ=${IANA_TIME_ZONE}"**.
       * The **${IANA_TIME_ZONE}** may only be a valid string from IANA time zone
       * database
       * ([wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)).
       * For example, `CRON_TZ=America/New_York 1 * * * *`, or
       * `TZ=America/New_York 1 * * * *`.
       *
       * This field is required for Schedule scans.
       * </pre>
       *
       * <code>string cron = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The bytes for cron to set.
       * @return This builder for chaining.
       */
      public Builder setCronBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        cron_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.dataplex.v1.Trigger.Schedule)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.dataplex.v1.Trigger.Schedule)
    private static final com.google.cloud.dataplex.v1.Trigger.Schedule DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.dataplex.v1.Trigger.Schedule();
    }

    public static com.google.cloud.dataplex.v1.Trigger.Schedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Schedule> PARSER =
        new com.google.protobuf.AbstractParser<Schedule>() {
          @java.lang.Override
          public Schedule parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Schedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Schedule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger.Schedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int modeCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object mode_;

  public enum ModeCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ON_DEMAND(100),
    SCHEDULE(101),
    MODE_NOT_SET(0);
    private final int value;

    private ModeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ModeCase forNumber(int value) {
      switch (value) {
        case 100:
          return ON_DEMAND;
        case 101:
          return SCHEDULE;
        case 0:
          return MODE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public ModeCase getModeCase() {
    return ModeCase.forNumber(modeCase_);
  }

  public static final int ON_DEMAND_FIELD_NUMBER = 100;
  /**
   *
   *
   * <pre>
   * The scan runs once via `RunDataScan` API.
   * </pre>
   *
   * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
   *
   * @return Whether the onDemand field is set.
   */
  @java.lang.Override
  public boolean hasOnDemand() {
    return modeCase_ == 100;
  }
  /**
   *
   *
   * <pre>
   * The scan runs once via `RunDataScan` API.
   * </pre>
   *
   * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
   *
   * @return The onDemand.
   */
  @java.lang.Override
  public com.google.cloud.dataplex.v1.Trigger.OnDemand getOnDemand() {
    if (modeCase_ == 100) {
      return (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_;
    }
    return com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * The scan runs once via `RunDataScan` API.
   * </pre>
   *
   * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
   */
  @java.lang.Override
  public com.google.cloud.dataplex.v1.Trigger.OnDemandOrBuilder getOnDemandOrBuilder() {
    if (modeCase_ == 100) {
      return (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_;
    }
    return com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
  }

  public static final int SCHEDULE_FIELD_NUMBER = 101;
  /**
   *
   *
   * <pre>
   * The scan is scheduled to run periodically.
   * </pre>
   *
   * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
   *
   * @return Whether the schedule field is set.
   */
  @java.lang.Override
  public boolean hasSchedule() {
    return modeCase_ == 101;
  }
  /**
   *
   *
   * <pre>
   * The scan is scheduled to run periodically.
   * </pre>
   *
   * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
   *
   * @return The schedule.
   */
  @java.lang.Override
  public com.google.cloud.dataplex.v1.Trigger.Schedule getSchedule() {
    if (modeCase_ == 101) {
      return (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_;
    }
    return com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * The scan is scheduled to run periodically.
   * </pre>
   *
   * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
   */
  @java.lang.Override
  public com.google.cloud.dataplex.v1.Trigger.ScheduleOrBuilder getScheduleOrBuilder() {
    if (modeCase_ == 101) {
      return (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_;
    }
    return com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (modeCase_ == 100) {
      output.writeMessage(100, (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_);
    }
    if (modeCase_ == 101) {
      output.writeMessage(101, (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (modeCase_ == 100) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              100, (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_);
    }
    if (modeCase_ == 101) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              101, (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.dataplex.v1.Trigger)) {
      return super.equals(obj);
    }
    com.google.cloud.dataplex.v1.Trigger other = (com.google.cloud.dataplex.v1.Trigger) obj;

    if (!getModeCase().equals(other.getModeCase())) return false;
    switch (modeCase_) {
      case 100:
        if (!getOnDemand().equals(other.getOnDemand())) return false;
        break;
      case 101:
        if (!getSchedule().equals(other.getSchedule())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (modeCase_) {
      case 100:
        hash = (37 * hash) + ON_DEMAND_FIELD_NUMBER;
        hash = (53 * hash) + getOnDemand().hashCode();
        break;
      case 101:
        hash = (37 * hash) + SCHEDULE_FIELD_NUMBER;
        hash = (53 * hash) + getSchedule().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.dataplex.v1.Trigger parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.dataplex.v1.Trigger prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * DataScan scheduling and trigger settings.
   * </pre>
   *
   * Protobuf type {@code google.cloud.dataplex.v1.Trigger}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.dataplex.v1.Trigger)
      com.google.cloud.dataplex.v1.TriggerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dataplex.v1.Trigger.class,
              com.google.cloud.dataplex.v1.Trigger.Builder.class);
    }

    // Construct using com.google.cloud.dataplex.v1.Trigger.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (onDemandBuilder_ != null) {
        onDemandBuilder_.clear();
      }
      if (scheduleBuilder_ != null) {
        scheduleBuilder_.clear();
      }
      modeCase_ = 0;
      mode_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.dataplex.v1.ProcessingProto
          .internal_static_google_cloud_dataplex_v1_Trigger_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger getDefaultInstanceForType() {
      return com.google.cloud.dataplex.v1.Trigger.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger build() {
      com.google.cloud.dataplex.v1.Trigger result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger buildPartial() {
      com.google.cloud.dataplex.v1.Trigger result = new com.google.cloud.dataplex.v1.Trigger(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.dataplex.v1.Trigger result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.google.cloud.dataplex.v1.Trigger result) {
      result.modeCase_ = modeCase_;
      result.mode_ = this.mode_;
      if (modeCase_ == 100 && onDemandBuilder_ != null) {
        result.mode_ = onDemandBuilder_.build();
      }
      if (modeCase_ == 101 && scheduleBuilder_ != null) {
        result.mode_ = scheduleBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.dataplex.v1.Trigger) {
        return mergeFrom((com.google.cloud.dataplex.v1.Trigger) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.dataplex.v1.Trigger other) {
      if (other == com.google.cloud.dataplex.v1.Trigger.getDefaultInstance()) return this;
      switch (other.getModeCase()) {
        case ON_DEMAND:
          {
            mergeOnDemand(other.getOnDemand());
            break;
          }
        case SCHEDULE:
          {
            mergeSchedule(other.getSchedule());
            break;
          }
        case MODE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 802:
              {
                input.readMessage(getOnDemandFieldBuilder().getBuilder(), extensionRegistry);
                modeCase_ = 100;
                break;
              } // case 802
            case 810:
              {
                input.readMessage(getScheduleFieldBuilder().getBuilder(), extensionRegistry);
                modeCase_ = 101;
                break;
              } // case 810
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int modeCase_ = 0;
    private java.lang.Object mode_;

    public ModeCase getModeCase() {
      return ModeCase.forNumber(modeCase_);
    }

    public Builder clearMode() {
      modeCase_ = 0;
      mode_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.dataplex.v1.Trigger.OnDemand,
            com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder,
            com.google.cloud.dataplex.v1.Trigger.OnDemandOrBuilder>
        onDemandBuilder_;
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     *
     * @return Whether the onDemand field is set.
     */
    @java.lang.Override
    public boolean hasOnDemand() {
      return modeCase_ == 100;
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     *
     * @return The onDemand.
     */
    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger.OnDemand getOnDemand() {
      if (onDemandBuilder_ == null) {
        if (modeCase_ == 100) {
          return (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_;
        }
        return com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
      } else {
        if (modeCase_ == 100) {
          return onDemandBuilder_.getMessage();
        }
        return com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    public Builder setOnDemand(com.google.cloud.dataplex.v1.Trigger.OnDemand value) {
      if (onDemandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mode_ = value;
        onChanged();
      } else {
        onDemandBuilder_.setMessage(value);
      }
      modeCase_ = 100;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    public Builder setOnDemand(
        com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder builderForValue) {
      if (onDemandBuilder_ == null) {
        mode_ = builderForValue.build();
        onChanged();
      } else {
        onDemandBuilder_.setMessage(builderForValue.build());
      }
      modeCase_ = 100;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    public Builder mergeOnDemand(com.google.cloud.dataplex.v1.Trigger.OnDemand value) {
      if (onDemandBuilder_ == null) {
        if (modeCase_ == 100
            && mode_ != com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance()) {
          mode_ =
              com.google.cloud.dataplex.v1.Trigger.OnDemand.newBuilder(
                      (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          mode_ = value;
        }
        onChanged();
      } else {
        if (modeCase_ == 100) {
          onDemandBuilder_.mergeFrom(value);
        } else {
          onDemandBuilder_.setMessage(value);
        }
      }
      modeCase_ = 100;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    public Builder clearOnDemand() {
      if (onDemandBuilder_ == null) {
        if (modeCase_ == 100) {
          modeCase_ = 0;
          mode_ = null;
          onChanged();
        }
      } else {
        if (modeCase_ == 100) {
          modeCase_ = 0;
          mode_ = null;
        }
        onDemandBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    public com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder getOnDemandBuilder() {
      return getOnDemandFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger.OnDemandOrBuilder getOnDemandOrBuilder() {
      if ((modeCase_ == 100) && (onDemandBuilder_ != null)) {
        return onDemandBuilder_.getMessageOrBuilder();
      } else {
        if (modeCase_ == 100) {
          return (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_;
        }
        return com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The scan runs once via `RunDataScan` API.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.OnDemand on_demand = 100;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.dataplex.v1.Trigger.OnDemand,
            com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder,
            com.google.cloud.dataplex.v1.Trigger.OnDemandOrBuilder>
        getOnDemandFieldBuilder() {
      if (onDemandBuilder_ == null) {
        if (!(modeCase_ == 100)) {
          mode_ = com.google.cloud.dataplex.v1.Trigger.OnDemand.getDefaultInstance();
        }
        onDemandBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.dataplex.v1.Trigger.OnDemand,
                com.google.cloud.dataplex.v1.Trigger.OnDemand.Builder,
                com.google.cloud.dataplex.v1.Trigger.OnDemandOrBuilder>(
                (com.google.cloud.dataplex.v1.Trigger.OnDemand) mode_,
                getParentForChildren(),
                isClean());
        mode_ = null;
      }
      modeCase_ = 100;
      onChanged();
      return onDemandBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.dataplex.v1.Trigger.Schedule,
            com.google.cloud.dataplex.v1.Trigger.Schedule.Builder,
            com.google.cloud.dataplex.v1.Trigger.ScheduleOrBuilder>
        scheduleBuilder_;
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     *
     * @return Whether the schedule field is set.
     */
    @java.lang.Override
    public boolean hasSchedule() {
      return modeCase_ == 101;
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     *
     * @return The schedule.
     */
    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger.Schedule getSchedule() {
      if (scheduleBuilder_ == null) {
        if (modeCase_ == 101) {
          return (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_;
        }
        return com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
      } else {
        if (modeCase_ == 101) {
          return scheduleBuilder_.getMessage();
        }
        return com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    public Builder setSchedule(com.google.cloud.dataplex.v1.Trigger.Schedule value) {
      if (scheduleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mode_ = value;
        onChanged();
      } else {
        scheduleBuilder_.setMessage(value);
      }
      modeCase_ = 101;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    public Builder setSchedule(
        com.google.cloud.dataplex.v1.Trigger.Schedule.Builder builderForValue) {
      if (scheduleBuilder_ == null) {
        mode_ = builderForValue.build();
        onChanged();
      } else {
        scheduleBuilder_.setMessage(builderForValue.build());
      }
      modeCase_ = 101;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    public Builder mergeSchedule(com.google.cloud.dataplex.v1.Trigger.Schedule value) {
      if (scheduleBuilder_ == null) {
        if (modeCase_ == 101
            && mode_ != com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance()) {
          mode_ =
              com.google.cloud.dataplex.v1.Trigger.Schedule.newBuilder(
                      (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          mode_ = value;
        }
        onChanged();
      } else {
        if (modeCase_ == 101) {
          scheduleBuilder_.mergeFrom(value);
        } else {
          scheduleBuilder_.setMessage(value);
        }
      }
      modeCase_ = 101;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    public Builder clearSchedule() {
      if (scheduleBuilder_ == null) {
        if (modeCase_ == 101) {
          modeCase_ = 0;
          mode_ = null;
          onChanged();
        }
      } else {
        if (modeCase_ == 101) {
          modeCase_ = 0;
          mode_ = null;
        }
        scheduleBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    public com.google.cloud.dataplex.v1.Trigger.Schedule.Builder getScheduleBuilder() {
      return getScheduleFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    @java.lang.Override
    public com.google.cloud.dataplex.v1.Trigger.ScheduleOrBuilder getScheduleOrBuilder() {
      if ((modeCase_ == 101) && (scheduleBuilder_ != null)) {
        return scheduleBuilder_.getMessageOrBuilder();
      } else {
        if (modeCase_ == 101) {
          return (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_;
        }
        return com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The scan is scheduled to run periodically.
     * </pre>
     *
     * <code>.google.cloud.dataplex.v1.Trigger.Schedule schedule = 101;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.dataplex.v1.Trigger.Schedule,
            com.google.cloud.dataplex.v1.Trigger.Schedule.Builder,
            com.google.cloud.dataplex.v1.Trigger.ScheduleOrBuilder>
        getScheduleFieldBuilder() {
      if (scheduleBuilder_ == null) {
        if (!(modeCase_ == 101)) {
          mode_ = com.google.cloud.dataplex.v1.Trigger.Schedule.getDefaultInstance();
        }
        scheduleBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.dataplex.v1.Trigger.Schedule,
                com.google.cloud.dataplex.v1.Trigger.Schedule.Builder,
                com.google.cloud.dataplex.v1.Trigger.ScheduleOrBuilder>(
                (com.google.cloud.dataplex.v1.Trigger.Schedule) mode_,
                getParentForChildren(),
                isClean());
        mode_ = null;
      }
      modeCase_ = 101;
      onChanged();
      return scheduleBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.dataplex.v1.Trigger)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.dataplex.v1.Trigger)
  private static final com.google.cloud.dataplex.v1.Trigger DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.dataplex.v1.Trigger();
  }

  public static com.google.cloud.dataplex.v1.Trigger getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Trigger> PARSER =
      new com.google.protobuf.AbstractParser<Trigger>() {
        @java.lang.Override
        public Trigger parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Trigger> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Trigger> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.dataplex.v1.Trigger getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
