/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataplex/v1/metadata.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.dataplex.v1;

public interface ListPartitionsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.dataplex.v1.ListPartitionsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The resource name of the parent entity:
   * `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}`.
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   *
   *
   * <pre>
   * Required. The resource name of the parent entity:
   * `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}`.
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * Optional. Maximum number of partitions to return. The service may return
   * fewer than this value. If unspecified, 100 partitions will be returned by
   * default. The maximum page size is 500; larger values will will be truncated
   * to 500.
   * </pre>
   *
   * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageSize.
   */
  int getPageSize();

  /**
   *
   *
   * <pre>
   * Optional. Page token received from a previous `ListPartitions` call.
   * Provide this to retrieve the subsequent page. When paginating, all other
   * parameters provided to `ListPartitions` must match the call that provided
   * the page token.
   * </pre>
   *
   * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   *
   *
   * <pre>
   * Optional. Page token received from a previous `ListPartitions` call.
   * Provide this to retrieve the subsequent page. When paginating, all other
   * parameters provided to `ListPartitions` must match the call that provided
   * the page token.
   * </pre>
   *
   * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString getPageTokenBytes();

  /**
   *
   *
   * <pre>
   * Optional. Filter the partitions returned to the caller using a key value
   * pair expression. Supported operators and syntax:
   *
   * - logic operators: AND, OR
   * - comparison operators: &lt;, &gt;, &gt;=, &lt;= ,=, !=
   * - LIKE operators:
   *   - The right hand of a LIKE operator supports "." and
   *     "*" for wildcard searches, for example "value1 LIKE ".*oo.*"
   * - parenthetical grouping: ( )
   *
   * Sample filter expression: `?filter="key1 &lt; value1 OR key2 &gt; value2"
   *
   * **Notes:**
   *
   * - Keys to the left of operators are case insensitive.
   * - Partition results are sorted first by creation time, then by
   *   lexicographic order.
   * - Up to 20 key value filter pairs are allowed, but due to performance
   *   considerations, only the first 10 will be used as a filter.
   * </pre>
   *
   * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The filter.
   */
  java.lang.String getFilter();
  /**
   *
   *
   * <pre>
   * Optional. Filter the partitions returned to the caller using a key value
   * pair expression. Supported operators and syntax:
   *
   * - logic operators: AND, OR
   * - comparison operators: &lt;, &gt;, &gt;=, &lt;= ,=, !=
   * - LIKE operators:
   *   - The right hand of a LIKE operator supports "." and
   *     "*" for wildcard searches, for example "value1 LIKE ".*oo.*"
   * - parenthetical grouping: ( )
   *
   * Sample filter expression: `?filter="key1 &lt; value1 OR key2 &gt; value2"
   *
   * **Notes:**
   *
   * - Keys to the left of operators are case insensitive.
   * - Partition results are sorted first by creation time, then by
   *   lexicographic order.
   * - Up to 20 key value filter pairs are allowed, but due to performance
   *   considerations, only the first 10 will be used as a filter.
   * </pre>
   *
   * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for filter.
   */
  com.google.protobuf.ByteString getFilterBytes();
}
