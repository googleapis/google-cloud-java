/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/analyticshub/v1/analyticshub.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.bigquery.analyticshub.v1;

/**
 *
 *
 * <pre>
 * Sharing environment is a behavior model for sharing data within a
 * data exchange. This option is configurable for a data exchange.
 * </pre>
 *
 * Protobuf type {@code google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig}
 */
public final class SharingEnvironmentConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig)
    SharingEnvironmentConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SharingEnvironmentConfig.newBuilder() to construct.
  private SharingEnvironmentConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SharingEnvironmentConfig() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SharingEnvironmentConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
        .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
        .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.class,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.Builder.class);
  }

  public interface DefaultExchangeConfigOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig)
      com.google.protobuf.MessageOrBuilder {}
  /**
   *
   *
   * <pre>
   * Default Analytics Hub data exchange, used for secured data sharing.
   * </pre>
   *
   * Protobuf type {@code
   * google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig}
   */
  public static final class DefaultExchangeConfig extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig)
      DefaultExchangeConfigOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use DefaultExchangeConfig.newBuilder() to construct.
    private DefaultExchangeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DefaultExchangeConfig() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new DefaultExchangeConfig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DefaultExchangeConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DefaultExchangeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DefaultExchangeConfig.class,
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DefaultExchangeConfig.Builder.class);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
          other =
              (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                      .DefaultExchangeConfig)
                  obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig)
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
            .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DefaultExchangeConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
            .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DefaultExchangeConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfig.class,
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfig.Builder.class);
      }

      // Construct using
      // com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
            .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DefaultExchangeConfig_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig
          getDefaultInstanceForType() {
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig
          build() {
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig
          buildPartial() {
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
            result =
                new com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfig(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DefaultExchangeConfig) {
          return mergeFrom(
              (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                      .DefaultExchangeConfig)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
              other) {
        if (other
            == com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DefaultExchangeConfig.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig)
    private static final com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig();
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DefaultExchangeConfig> PARSER =
        new com.google.protobuf.AbstractParser<DefaultExchangeConfig>() {
          @java.lang.Override
          public DefaultExchangeConfig parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<DefaultExchangeConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DefaultExchangeConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface DcrExchangeConfigOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Output only. If True, this DCR restricts the contributors to sharing
     * only a single resource in a Listing. And no two resources should have the
     * same IDs. So if a contributor adds a view with a conflicting name, the
     * CreateListing API will reject the request. if False, the data contributor
     * can publish an entire dataset (as before). This is not configurable, and
     * by default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the singleSelectedResourceSharingRestriction field is set.
     */
    boolean hasSingleSelectedResourceSharingRestriction();
    /**
     *
     *
     * <pre>
     * Output only. If True, this DCR restricts the contributors to sharing
     * only a single resource in a Listing. And no two resources should have the
     * same IDs. So if a contributor adds a view with a conflicting name, the
     * CreateListing API will reject the request. if False, the data contributor
     * can publish an entire dataset (as before). This is not configurable, and
     * by default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The singleSelectedResourceSharingRestriction.
     */
    boolean getSingleSelectedResourceSharingRestriction();

    /**
     *
     *
     * <pre>
     * Output only. If True, when subscribing to this DCR, it will create only
     * one linked dataset containing all resources shared within the
     * cleanroom. If False, when subscribing to this DCR, it will
     * create 1 linked dataset per listing. This is not configurable, and by
     * default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the singleLinkedDatasetPerCleanroom field is set.
     */
    boolean hasSingleLinkedDatasetPerCleanroom();
    /**
     *
     *
     * <pre>
     * Output only. If True, when subscribing to this DCR, it will create only
     * one linked dataset containing all resources shared within the
     * cleanroom. If False, when subscribing to this DCR, it will
     * create 1 linked dataset per listing. This is not configurable, and by
     * default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The singleLinkedDatasetPerCleanroom.
     */
    boolean getSingleLinkedDatasetPerCleanroom();
  }
  /**
   *
   *
   * <pre>
   * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
   * </pre>
   *
   * Protobuf type {@code
   * google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig}
   */
  public static final class DcrExchangeConfig extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
      DcrExchangeConfigOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use DcrExchangeConfig.newBuilder() to construct.
    private DcrExchangeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DcrExchangeConfig() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new DcrExchangeConfig();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DcrExchangeConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DcrExchangeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                  .class,
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                  .Builder.class);
    }

    private int bitField0_;
    public static final int SINGLE_SELECTED_RESOURCE_SHARING_RESTRICTION_FIELD_NUMBER = 1;
    private boolean singleSelectedResourceSharingRestriction_ = false;
    /**
     *
     *
     * <pre>
     * Output only. If True, this DCR restricts the contributors to sharing
     * only a single resource in a Listing. And no two resources should have the
     * same IDs. So if a contributor adds a view with a conflicting name, the
     * CreateListing API will reject the request. if False, the data contributor
     * can publish an entire dataset (as before). This is not configurable, and
     * by default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the singleSelectedResourceSharingRestriction field is set.
     */
    @java.lang.Override
    public boolean hasSingleSelectedResourceSharingRestriction() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. If True, this DCR restricts the contributors to sharing
     * only a single resource in a Listing. And no two resources should have the
     * same IDs. So if a contributor adds a view with a conflicting name, the
     * CreateListing API will reject the request. if False, the data contributor
     * can publish an entire dataset (as before). This is not configurable, and
     * by default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The singleSelectedResourceSharingRestriction.
     */
    @java.lang.Override
    public boolean getSingleSelectedResourceSharingRestriction() {
      return singleSelectedResourceSharingRestriction_;
    }

    public static final int SINGLE_LINKED_DATASET_PER_CLEANROOM_FIELD_NUMBER = 2;
    private boolean singleLinkedDatasetPerCleanroom_ = false;
    /**
     *
     *
     * <pre>
     * Output only. If True, when subscribing to this DCR, it will create only
     * one linked dataset containing all resources shared within the
     * cleanroom. If False, when subscribing to this DCR, it will
     * create 1 linked dataset per listing. This is not configurable, and by
     * default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the singleLinkedDatasetPerCleanroom field is set.
     */
    @java.lang.Override
    public boolean hasSingleLinkedDatasetPerCleanroom() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. If True, when subscribing to this DCR, it will create only
     * one linked dataset containing all resources shared within the
     * cleanroom. If False, when subscribing to this DCR, it will
     * create 1 linked dataset per listing. This is not configurable, and by
     * default, all new DCRs will have the restriction set to True.
     * </pre>
     *
     * <code>
     * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The singleLinkedDatasetPerCleanroom.
     */
    @java.lang.Override
    public boolean getSingleLinkedDatasetPerCleanroom() {
      return singleLinkedDatasetPerCleanroom_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, singleSelectedResourceSharingRestriction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, singleLinkedDatasetPerCleanroom_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size +=
            com.google.protobuf.CodedOutputStream.computeBoolSize(
                1, singleSelectedResourceSharingRestriction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size +=
            com.google.protobuf.CodedOutputStream.computeBoolSize(
                2, singleLinkedDatasetPerCleanroom_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)) {
        return super.equals(obj);
      }
      com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig other =
          (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
              obj;

      if (hasSingleSelectedResourceSharingRestriction()
          != other.hasSingleSelectedResourceSharingRestriction()) return false;
      if (hasSingleSelectedResourceSharingRestriction()) {
        if (getSingleSelectedResourceSharingRestriction()
            != other.getSingleSelectedResourceSharingRestriction()) return false;
      }
      if (hasSingleLinkedDatasetPerCleanroom() != other.hasSingleLinkedDatasetPerCleanroom())
        return false;
      if (hasSingleLinkedDatasetPerCleanroom()) {
        if (getSingleLinkedDatasetPerCleanroom() != other.getSingleLinkedDatasetPerCleanroom())
          return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSingleSelectedResourceSharingRestriction()) {
        hash = (37 * hash) + SINGLE_SELECTED_RESOURCE_SHARING_RESTRICTION_FIELD_NUMBER;
        hash =
            (53 * hash)
                + com.google.protobuf.Internal.hashBoolean(
                    getSingleSelectedResourceSharingRestriction());
      }
      if (hasSingleLinkedDatasetPerCleanroom()) {
        hash = (37 * hash) + SINGLE_LINKED_DATASET_PER_CLEANROOM_FIELD_NUMBER;
        hash =
            (53 * hash)
                + com.google.protobuf.Internal.hashBoolean(getSingleLinkedDatasetPerCleanroom());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
            .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DcrExchangeConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
            .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DcrExchangeConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                    .class,
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                    .Builder.class);
      }

      // Construct using
      // com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        singleSelectedResourceSharingRestriction_ = false;
        singleLinkedDatasetPerCleanroom_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
            .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_DcrExchangeConfig_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
          getDefaultInstanceForType() {
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
          build() {
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
          buildPartial() {
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            result =
                new com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DcrExchangeConfig(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
              result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.singleSelectedResourceSharingRestriction_ =
              singleSelectedResourceSharingRestriction_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.singleLinkedDatasetPerCleanroom_ = singleLinkedDatasetPerCleanroom_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig) {
          return mergeFrom(
              (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
              other) {
        if (other
            == com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                .getDefaultInstance()) return this;
        if (other.hasSingleSelectedResourceSharingRestriction()) {
          setSingleSelectedResourceSharingRestriction(
              other.getSingleSelectedResourceSharingRestriction());
        }
        if (other.hasSingleLinkedDatasetPerCleanroom()) {
          setSingleLinkedDatasetPerCleanroom(other.getSingleLinkedDatasetPerCleanroom());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  singleSelectedResourceSharingRestriction_ = input.readBool();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  singleLinkedDatasetPerCleanroom_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private boolean singleSelectedResourceSharingRestriction_;
      /**
       *
       *
       * <pre>
       * Output only. If True, this DCR restricts the contributors to sharing
       * only a single resource in a Listing. And no two resources should have the
       * same IDs. So if a contributor adds a view with a conflicting name, the
       * CreateListing API will reject the request. if False, the data contributor
       * can publish an entire dataset (as before). This is not configurable, and
       * by default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return Whether the singleSelectedResourceSharingRestriction field is set.
       */
      @java.lang.Override
      public boolean hasSingleSelectedResourceSharingRestriction() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Output only. If True, this DCR restricts the contributors to sharing
       * only a single resource in a Listing. And no two resources should have the
       * same IDs. So if a contributor adds a view with a conflicting name, the
       * CreateListing API will reject the request. if False, the data contributor
       * can publish an entire dataset (as before). This is not configurable, and
       * by default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The singleSelectedResourceSharingRestriction.
       */
      @java.lang.Override
      public boolean getSingleSelectedResourceSharingRestriction() {
        return singleSelectedResourceSharingRestriction_;
      }
      /**
       *
       *
       * <pre>
       * Output only. If True, this DCR restricts the contributors to sharing
       * only a single resource in a Listing. And no two resources should have the
       * same IDs. So if a contributor adds a view with a conflicting name, the
       * CreateListing API will reject the request. if False, the data contributor
       * can publish an entire dataset (as before). This is not configurable, and
       * by default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The singleSelectedResourceSharingRestriction to set.
       * @return This builder for chaining.
       */
      public Builder setSingleSelectedResourceSharingRestriction(boolean value) {

        singleSelectedResourceSharingRestriction_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. If True, this DCR restricts the contributors to sharing
       * only a single resource in a Listing. And no two resources should have the
       * same IDs. So if a contributor adds a view with a conflicting name, the
       * CreateListing API will reject the request. if False, the data contributor
       * can publish an entire dataset (as before). This is not configurable, and
       * by default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_selected_resource_sharing_restriction = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSingleSelectedResourceSharingRestriction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        singleSelectedResourceSharingRestriction_ = false;
        onChanged();
        return this;
      }

      private boolean singleLinkedDatasetPerCleanroom_;
      /**
       *
       *
       * <pre>
       * Output only. If True, when subscribing to this DCR, it will create only
       * one linked dataset containing all resources shared within the
       * cleanroom. If False, when subscribing to this DCR, it will
       * create 1 linked dataset per listing. This is not configurable, and by
       * default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return Whether the singleLinkedDatasetPerCleanroom field is set.
       */
      @java.lang.Override
      public boolean hasSingleLinkedDatasetPerCleanroom() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * Output only. If True, when subscribing to this DCR, it will create only
       * one linked dataset containing all resources shared within the
       * cleanroom. If False, when subscribing to this DCR, it will
       * create 1 linked dataset per listing. This is not configurable, and by
       * default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The singleLinkedDatasetPerCleanroom.
       */
      @java.lang.Override
      public boolean getSingleLinkedDatasetPerCleanroom() {
        return singleLinkedDatasetPerCleanroom_;
      }
      /**
       *
       *
       * <pre>
       * Output only. If True, when subscribing to this DCR, it will create only
       * one linked dataset containing all resources shared within the
       * cleanroom. If False, when subscribing to this DCR, it will
       * create 1 linked dataset per listing. This is not configurable, and by
       * default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The singleLinkedDatasetPerCleanroom to set.
       * @return This builder for chaining.
       */
      public Builder setSingleLinkedDatasetPerCleanroom(boolean value) {

        singleLinkedDatasetPerCleanroom_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. If True, when subscribing to this DCR, it will create only
       * one linked dataset containing all resources shared within the
       * cleanroom. If False, when subscribing to this DCR, it will
       * create 1 linked dataset per listing. This is not configurable, and by
       * default, all new DCRs will have the restriction set to True.
       * </pre>
       *
       * <code>
       * optional bool single_linked_dataset_per_cleanroom = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSingleLinkedDatasetPerCleanroom() {
        bitField0_ = (bitField0_ & ~0x00000002);
        singleLinkedDatasetPerCleanroom_ = false;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
    private static final com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DcrExchangeConfig();
    }

    public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfig
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DcrExchangeConfig> PARSER =
        new com.google.protobuf.AbstractParser<DcrExchangeConfig>() {
          @java.lang.Override
          public DcrExchangeConfig parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<DcrExchangeConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DcrExchangeConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int environmentCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object environment_;

  public enum EnvironmentCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    DEFAULT_EXCHANGE_CONFIG(1),
    DCR_EXCHANGE_CONFIG(2),
    ENVIRONMENT_NOT_SET(0);
    private final int value;

    private EnvironmentCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EnvironmentCase valueOf(int value) {
      return forNumber(value);
    }

    public static EnvironmentCase forNumber(int value) {
      switch (value) {
        case 1:
          return DEFAULT_EXCHANGE_CONFIG;
        case 2:
          return DCR_EXCHANGE_CONFIG;
        case 0:
          return ENVIRONMENT_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public EnvironmentCase getEnvironmentCase() {
    return EnvironmentCase.forNumber(environmentCase_);
  }

  public static final int DEFAULT_EXCHANGE_CONFIG_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   * Default Analytics Hub data exchange, used for secured data sharing.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
   * </code>
   *
   * @return Whether the defaultExchangeConfig field is set.
   */
  @java.lang.Override
  public boolean hasDefaultExchangeConfig() {
    return environmentCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   * Default Analytics Hub data exchange, used for secured data sharing.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
   * </code>
   *
   * @return The defaultExchangeConfig.
   */
  @java.lang.Override
  public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
      getDefaultExchangeConfig() {
    if (environmentCase_ == 1) {
      return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig)
          environment_;
    }
    return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
        .getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Default Analytics Hub data exchange, used for secured data sharing.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
          .DefaultExchangeConfigOrBuilder
      getDefaultExchangeConfigOrBuilder() {
    if (environmentCase_ == 1) {
      return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .DefaultExchangeConfig)
          environment_;
    }
    return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
        .getDefaultInstance();
  }

  public static final int DCR_EXCHANGE_CONFIG_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
   * </code>
   *
   * @return Whether the dcrExchangeConfig field is set.
   */
  @java.lang.Override
  public boolean hasDcrExchangeConfig() {
    return environmentCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
   * </code>
   *
   * @return The dcrExchangeConfig.
   */
  @java.lang.Override
  public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
      getDcrExchangeConfig() {
    if (environmentCase_ == 2) {
      return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
          environment_;
    }
    return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
        .getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
          .DcrExchangeConfigOrBuilder
      getDcrExchangeConfigOrBuilder() {
    if (environmentCase_ == 2) {
      return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
          environment_;
    }
    return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
        .getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (environmentCase_ == 1) {
      output.writeMessage(
          1,
          (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig)
              environment_);
    }
    if (environmentCase_ == 2) {
      output.writeMessage(
          2,
          (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
              environment_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (environmentCase_ == 1) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              1,
              (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                      .DefaultExchangeConfig)
                  environment_);
    }
    if (environmentCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2,
              (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig)
                  environment_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig other =
        (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig) obj;

    if (!getEnvironmentCase().equals(other.getEnvironmentCase())) return false;
    switch (environmentCase_) {
      case 1:
        if (!getDefaultExchangeConfig().equals(other.getDefaultExchangeConfig())) return false;
        break;
      case 2:
        if (!getDcrExchangeConfig().equals(other.getDcrExchangeConfig())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (environmentCase_) {
      case 1:
        hash = (37 * hash) + DEFAULT_EXCHANGE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultExchangeConfig().hashCode();
        break;
      case 2:
        hash = (37 * hash) + DCR_EXCHANGE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDcrExchangeConfig().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Sharing environment is a behavior model for sharing data within a
   * data exchange. This option is configurable for a data exchange.
   * </pre>
   *
   * Protobuf type {@code google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig)
      com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.class,
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.Builder.class);
    }

    // Construct using
    // com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (defaultExchangeConfigBuilder_ != null) {
        defaultExchangeConfigBuilder_.clear();
      }
      if (dcrExchangeConfigBuilder_ != null) {
        dcrExchangeConfigBuilder_.clear();
      }
      environmentCase_ = 0;
      environment_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.bigquery.analyticshub.v1.AnalyticsHubProto
          .internal_static_google_cloud_bigquery_analyticshub_v1_SharingEnvironmentConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
        getDefaultInstanceForType() {
      return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig build() {
      com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig buildPartial() {
      com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig result =
          new com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig result) {
      result.environmentCase_ = environmentCase_;
      result.environment_ = this.environment_;
      if (environmentCase_ == 1 && defaultExchangeConfigBuilder_ != null) {
        result.environment_ = defaultExchangeConfigBuilder_.build();
      }
      if (environmentCase_ == 2 && dcrExchangeConfigBuilder_ != null) {
        result.environment_ = dcrExchangeConfigBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig) {
        return mergeFrom(
            (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig other) {
      if (other
          == com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
              .getDefaultInstance()) return this;
      switch (other.getEnvironmentCase()) {
        case DEFAULT_EXCHANGE_CONFIG:
          {
            mergeDefaultExchangeConfig(other.getDefaultExchangeConfig());
            break;
          }
        case DCR_EXCHANGE_CONFIG:
          {
            mergeDcrExchangeConfig(other.getDcrExchangeConfig());
            break;
          }
        case ENVIRONMENT_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(
                    getDefaultExchangeConfigFieldBuilder().getBuilder(), extensionRegistry);
                environmentCase_ = 1;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(
                    getDcrExchangeConfigFieldBuilder().getBuilder(), extensionRegistry);
                environmentCase_ = 2;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int environmentCase_ = 0;
    private java.lang.Object environment_;

    public EnvironmentCase getEnvironmentCase() {
      return EnvironmentCase.forNumber(environmentCase_);
    }

    public Builder clearEnvironment() {
      environmentCase_ = 0;
      environment_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DefaultExchangeConfig,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
                .Builder,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DefaultExchangeConfigOrBuilder>
        defaultExchangeConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     *
     * @return Whether the defaultExchangeConfig field is set.
     */
    @java.lang.Override
    public boolean hasDefaultExchangeConfig() {
      return environmentCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     *
     * @return The defaultExchangeConfig.
     */
    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
        getDefaultExchangeConfig() {
      if (defaultExchangeConfigBuilder_ == null) {
        if (environmentCase_ == 1) {
          return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DefaultExchangeConfig)
              environment_;
        }
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig.getDefaultInstance();
      } else {
        if (environmentCase_ == 1) {
          return defaultExchangeConfigBuilder_.getMessage();
        }
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    public Builder setDefaultExchangeConfig(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
            value) {
      if (defaultExchangeConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        environment_ = value;
        onChanged();
      } else {
        defaultExchangeConfigBuilder_.setMessage(value);
      }
      environmentCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    public Builder setDefaultExchangeConfig(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
                .Builder
            builderForValue) {
      if (defaultExchangeConfigBuilder_ == null) {
        environment_ = builderForValue.build();
        onChanged();
      } else {
        defaultExchangeConfigBuilder_.setMessage(builderForValue.build());
      }
      environmentCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    public Builder mergeDefaultExchangeConfig(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
            value) {
      if (defaultExchangeConfigBuilder_ == null) {
        if (environmentCase_ == 1
            && environment_
                != com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfig.getDefaultInstance()) {
          environment_ =
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DefaultExchangeConfig.newBuilder(
                      (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                              .DefaultExchangeConfig)
                          environment_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          environment_ = value;
        }
        onChanged();
      } else {
        if (environmentCase_ == 1) {
          defaultExchangeConfigBuilder_.mergeFrom(value);
        } else {
          defaultExchangeConfigBuilder_.setMessage(value);
        }
      }
      environmentCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    public Builder clearDefaultExchangeConfig() {
      if (defaultExchangeConfigBuilder_ == null) {
        if (environmentCase_ == 1) {
          environmentCase_ = 0;
          environment_ = null;
          onChanged();
        }
      } else {
        if (environmentCase_ == 1) {
          environmentCase_ = 0;
          environment_ = null;
        }
        defaultExchangeConfigBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
            .Builder
        getDefaultExchangeConfigBuilder() {
      return getDefaultExchangeConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfigOrBuilder
        getDefaultExchangeConfigOrBuilder() {
      if ((environmentCase_ == 1) && (defaultExchangeConfigBuilder_ != null)) {
        return defaultExchangeConfigBuilder_.getMessageOrBuilder();
      } else {
        if (environmentCase_ == 1) {
          return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DefaultExchangeConfig)
              environment_;
        }
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DefaultExchangeConfig.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Default Analytics Hub data exchange, used for secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig default_exchange_config = 1;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DefaultExchangeConfig,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DefaultExchangeConfig
                .Builder,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DefaultExchangeConfigOrBuilder>
        getDefaultExchangeConfigFieldBuilder() {
      if (defaultExchangeConfigBuilder_ == null) {
        if (!(environmentCase_ == 1)) {
          environment_ =
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DefaultExchangeConfig.getDefaultInstance();
        }
        defaultExchangeConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfig,
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfig.Builder,
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DefaultExchangeConfigOrBuilder>(
                (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                        .DefaultExchangeConfig)
                    environment_,
                getParentForChildren(),
                isClean());
        environment_ = null;
      }
      environmentCase_ = 1;
      onChanged();
      return defaultExchangeConfigBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                .Builder,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DcrExchangeConfigOrBuilder>
        dcrExchangeConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     *
     * @return Whether the dcrExchangeConfig field is set.
     */
    @java.lang.Override
    public boolean hasDcrExchangeConfig() {
      return environmentCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     *
     * @return The dcrExchangeConfig.
     */
    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
        getDcrExchangeConfig() {
      if (dcrExchangeConfigBuilder_ == null) {
        if (environmentCase_ == 2) {
          return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DcrExchangeConfig)
              environment_;
        }
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            .getDefaultInstance();
      } else {
        if (environmentCase_ == 2) {
          return dcrExchangeConfigBuilder_.getMessage();
        }
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    public Builder setDcrExchangeConfig(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            value) {
      if (dcrExchangeConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        environment_ = value;
        onChanged();
      } else {
        dcrExchangeConfigBuilder_.setMessage(value);
      }
      environmentCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    public Builder setDcrExchangeConfig(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig.Builder
            builderForValue) {
      if (dcrExchangeConfigBuilder_ == null) {
        environment_ = builderForValue.build();
        onChanged();
      } else {
        dcrExchangeConfigBuilder_.setMessage(builderForValue.build());
      }
      environmentCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    public Builder mergeDcrExchangeConfig(
        com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            value) {
      if (dcrExchangeConfigBuilder_ == null) {
        if (environmentCase_ == 2
            && environment_
                != com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DcrExchangeConfig.getDefaultInstance()) {
          environment_ =
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                  .newBuilder(
                      (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                              .DcrExchangeConfig)
                          environment_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          environment_ = value;
        }
        onChanged();
      } else {
        if (environmentCase_ == 2) {
          dcrExchangeConfigBuilder_.mergeFrom(value);
        } else {
          dcrExchangeConfigBuilder_.setMessage(value);
        }
      }
      environmentCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    public Builder clearDcrExchangeConfig() {
      if (dcrExchangeConfigBuilder_ == null) {
        if (environmentCase_ == 2) {
          environmentCase_ = 0;
          environment_ = null;
          onChanged();
        }
      } else {
        if (environmentCase_ == 2) {
          environmentCase_ = 0;
          environment_ = null;
        }
        dcrExchangeConfigBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            .Builder
        getDcrExchangeConfigBuilder() {
      return getDcrExchangeConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
            .DcrExchangeConfigOrBuilder
        getDcrExchangeConfigOrBuilder() {
      if ((environmentCase_ == 2) && (dcrExchangeConfigBuilder_ != null)) {
        return dcrExchangeConfigBuilder_.getMessageOrBuilder();
      } else {
        if (environmentCase_ == 2) {
          return (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                  .DcrExchangeConfig)
              environment_;
        }
        return com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Data Clean Room (DCR), used for privacy-safe and secured data sharing.
     * </pre>
     *
     * <code>
     * .google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig dcr_exchange_config = 2;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                .Builder,
            com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                .DcrExchangeConfigOrBuilder>
        getDcrExchangeConfigFieldBuilder() {
      if (dcrExchangeConfigBuilder_ == null) {
        if (!(environmentCase_ == 2)) {
          environment_ =
              com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                  .getDefaultInstance();
        }
        dcrExchangeConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DcrExchangeConfig,
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig.DcrExchangeConfig
                    .Builder,
                com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                    .DcrExchangeConfigOrBuilder>(
                (com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
                        .DcrExchangeConfig)
                    environment_,
                getParentForChildren(),
                isClean());
        environment_ = null;
      }
      environmentCase_ = 2;
      onChanged();
      return dcrExchangeConfigBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig)
  private static final com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig();
  }

  public static com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SharingEnvironmentConfig> PARSER =
      new com.google.protobuf.AbstractParser<SharingEnvironmentConfig>() {
        @java.lang.Override
        public SharingEnvironmentConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<SharingEnvironmentConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SharingEnvironmentConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.bigquery.analyticshub.v1.SharingEnvironmentConfig
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
