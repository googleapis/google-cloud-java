/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/warehouse.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.visionai.v1;

public interface PartitionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1.Partition)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Partition of asset in time.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 1;</code>
   *
   * @return Whether the temporalPartition field is set.
   */
  boolean hasTemporalPartition();
  /**
   *
   *
   * <pre>
   * Partition of asset in time.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 1;</code>
   *
   * @return The temporalPartition.
   */
  com.google.cloud.visionai.v1.Partition.TemporalPartition getTemporalPartition();
  /**
   *
   *
   * <pre>
   * Partition of asset in time.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.Partition.TemporalPartition temporal_partition = 1;</code>
   */
  com.google.cloud.visionai.v1.Partition.TemporalPartitionOrBuilder getTemporalPartitionOrBuilder();

  /**
   *
   *
   * <pre>
   * Partition of asset in space.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.Partition.SpatialPartition spatial_partition = 2;</code>
   *
   * @return Whether the spatialPartition field is set.
   */
  boolean hasSpatialPartition();
  /**
   *
   *
   * <pre>
   * Partition of asset in space.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.Partition.SpatialPartition spatial_partition = 2;</code>
   *
   * @return The spatialPartition.
   */
  com.google.cloud.visionai.v1.Partition.SpatialPartition getSpatialPartition();
  /**
   *
   *
   * <pre>
   * Partition of asset in space.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.Partition.SpatialPartition spatial_partition = 2;</code>
   */
  com.google.cloud.visionai.v1.Partition.SpatialPartitionOrBuilder getSpatialPartitionOrBuilder();

  /**
   *
   *
   * <pre>
   * Partition of asset in time.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.Partition.RelativeTemporalPartition relative_temporal_partition = 3;
   * </code>
   *
   * @return Whether the relativeTemporalPartition field is set.
   */
  boolean hasRelativeTemporalPartition();
  /**
   *
   *
   * <pre>
   * Partition of asset in time.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.Partition.RelativeTemporalPartition relative_temporal_partition = 3;
   * </code>
   *
   * @return The relativeTemporalPartition.
   */
  com.google.cloud.visionai.v1.Partition.RelativeTemporalPartition getRelativeTemporalPartition();
  /**
   *
   *
   * <pre>
   * Partition of asset in time.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.Partition.RelativeTemporalPartition relative_temporal_partition = 3;
   * </code>
   */
  com.google.cloud.visionai.v1.Partition.RelativeTemporalPartitionOrBuilder
      getRelativeTemporalPartitionOrBuilder();
}
