/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/annotations.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.visionai.v1;

/**
 *
 *
 * <pre>
 * Prediction output format for Image Object Detection.
 * </pre>
 *
 * Protobuf type {@code google.cloud.visionai.v1.ImageObjectDetectionPredictionResult}
 */
public final class ImageObjectDetectionPredictionResult
    extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.visionai.v1.ImageObjectDetectionPredictionResult)
    ImageObjectDetectionPredictionResultOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ImageObjectDetectionPredictionResult.newBuilder() to construct.
  private ImageObjectDetectionPredictionResult(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ImageObjectDetectionPredictionResult() {
    ids_ = emptyLongList();
    displayNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
    confidences_ = emptyFloatList();
    bboxes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ImageObjectDetectionPredictionResult();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.visionai.v1.AnnotationsProto
        .internal_static_google_cloud_visionai_v1_ImageObjectDetectionPredictionResult_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.visionai.v1.AnnotationsProto
        .internal_static_google_cloud_visionai_v1_ImageObjectDetectionPredictionResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.class,
            com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.Builder.class);
  }

  public static final int IDS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.LongList ids_ = emptyLongList();
  /**
   *
   *
   * <pre>
   * The resource IDs of the AnnotationSpecs that had been identified, ordered
   * by the confidence score descendingly. It is the id segment instead of full
   * resource name.
   * </pre>
   *
   * <code>repeated int64 ids = 1;</code>
   *
   * @return A list containing the ids.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long> getIdsList() {
    return ids_;
  }
  /**
   *
   *
   * <pre>
   * The resource IDs of the AnnotationSpecs that had been identified, ordered
   * by the confidence score descendingly. It is the id segment instead of full
   * resource name.
   * </pre>
   *
   * <code>repeated int64 ids = 1;</code>
   *
   * @return The count of ids.
   */
  public int getIdsCount() {
    return ids_.size();
  }
  /**
   *
   *
   * <pre>
   * The resource IDs of the AnnotationSpecs that had been identified, ordered
   * by the confidence score descendingly. It is the id segment instead of full
   * resource name.
   * </pre>
   *
   * <code>repeated int64 ids = 1;</code>
   *
   * @param index The index of the element to return.
   * @return The ids at the given index.
   */
  public long getIds(int index) {
    return ids_.getLong(index);
  }

  private int idsMemoizedSerializedSize = -1;

  public static final int DISPLAY_NAMES_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList displayNames_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * The display names of the AnnotationSpecs that had been identified, order
   * matches the IDs.
   * </pre>
   *
   * <code>repeated string display_names = 2;</code>
   *
   * @return A list containing the displayNames.
   */
  public com.google.protobuf.ProtocolStringList getDisplayNamesList() {
    return displayNames_;
  }
  /**
   *
   *
   * <pre>
   * The display names of the AnnotationSpecs that had been identified, order
   * matches the IDs.
   * </pre>
   *
   * <code>repeated string display_names = 2;</code>
   *
   * @return The count of displayNames.
   */
  public int getDisplayNamesCount() {
    return displayNames_.size();
  }
  /**
   *
   *
   * <pre>
   * The display names of the AnnotationSpecs that had been identified, order
   * matches the IDs.
   * </pre>
   *
   * <code>repeated string display_names = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The displayNames at the given index.
   */
  public java.lang.String getDisplayNames(int index) {
    return displayNames_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The display names of the AnnotationSpecs that had been identified, order
   * matches the IDs.
   * </pre>
   *
   * <code>repeated string display_names = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the displayNames at the given index.
   */
  public com.google.protobuf.ByteString getDisplayNamesBytes(int index) {
    return displayNames_.getByteString(index);
  }

  public static final int CONFIDENCES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.FloatList confidences_ = emptyFloatList();
  /**
   *
   *
   * <pre>
   * The Model's confidences in correctness of the predicted IDs, higher value
   * means higher confidence. Order matches the Ids.
   * </pre>
   *
   * <code>repeated float confidences = 3;</code>
   *
   * @return A list containing the confidences.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float> getConfidencesList() {
    return confidences_;
  }
  /**
   *
   *
   * <pre>
   * The Model's confidences in correctness of the predicted IDs, higher value
   * means higher confidence. Order matches the Ids.
   * </pre>
   *
   * <code>repeated float confidences = 3;</code>
   *
   * @return The count of confidences.
   */
  public int getConfidencesCount() {
    return confidences_.size();
  }
  /**
   *
   *
   * <pre>
   * The Model's confidences in correctness of the predicted IDs, higher value
   * means higher confidence. Order matches the Ids.
   * </pre>
   *
   * <code>repeated float confidences = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The confidences at the given index.
   */
  public float getConfidences(int index) {
    return confidences_.getFloat(index);
  }

  private int confidencesMemoizedSerializedSize = -1;

  public static final int BBOXES_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.ListValue> bboxes_;
  /**
   *
   *
   * <pre>
   * Bounding boxes, i.e. the rectangles over the image, that pinpoint
   * the found AnnotationSpecs. Given in order that matches the IDs. Each
   * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
   * `yMax`, which represent the extremal coordinates of the box. They are
   * relative to the image size, and the point 0,0 is in the top left
   * of the image.
   * </pre>
   *
   * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ListValue> getBboxesList() {
    return bboxes_;
  }
  /**
   *
   *
   * <pre>
   * Bounding boxes, i.e. the rectangles over the image, that pinpoint
   * the found AnnotationSpecs. Given in order that matches the IDs. Each
   * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
   * `yMax`, which represent the extremal coordinates of the box. They are
   * relative to the image size, and the point 0,0 is in the top left
   * of the image.
   * </pre>
   *
   * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.protobuf.ListValueOrBuilder> getBboxesOrBuilderList() {
    return bboxes_;
  }
  /**
   *
   *
   * <pre>
   * Bounding boxes, i.e. the rectangles over the image, that pinpoint
   * the found AnnotationSpecs. Given in order that matches the IDs. Each
   * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
   * `yMax`, which represent the extremal coordinates of the box. They are
   * relative to the image size, and the point 0,0 is in the top left
   * of the image.
   * </pre>
   *
   * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
   */
  @java.lang.Override
  public int getBboxesCount() {
    return bboxes_.size();
  }
  /**
   *
   *
   * <pre>
   * Bounding boxes, i.e. the rectangles over the image, that pinpoint
   * the found AnnotationSpecs. Given in order that matches the IDs. Each
   * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
   * `yMax`, which represent the extremal coordinates of the box. They are
   * relative to the image size, and the point 0,0 is in the top left
   * of the image.
   * </pre>
   *
   * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ListValue getBboxes(int index) {
    return bboxes_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Bounding boxes, i.e. the rectangles over the image, that pinpoint
   * the found AnnotationSpecs. Given in order that matches the IDs. Each
   * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
   * `yMax`, which represent the extremal coordinates of the box. They are
   * relative to the image size, and the point 0,0 is in the top left
   * of the image.
   * </pre>
   *
   * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ListValueOrBuilder getBboxesOrBuilder(int index) {
    return bboxes_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    getSerializedSize();
    if (getIdsList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(idsMemoizedSerializedSize);
    }
    for (int i = 0; i < ids_.size(); i++) {
      output.writeInt64NoTag(ids_.getLong(i));
    }
    for (int i = 0; i < displayNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, displayNames_.getRaw(i));
    }
    if (getConfidencesList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(confidencesMemoizedSerializedSize);
    }
    for (int i = 0; i < confidences_.size(); i++) {
      output.writeFloatNoTag(confidences_.getFloat(i));
    }
    for (int i = 0; i < bboxes_.size(); i++) {
      output.writeMessage(4, bboxes_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < ids_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(ids_.getLong(i));
      }
      size += dataSize;
      if (!getIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
      }
      idsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < displayNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(displayNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDisplayNamesList().size();
    }
    {
      int dataSize = 0;
      dataSize = 4 * getConfidencesList().size();
      size += dataSize;
      if (!getConfidencesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
      }
      confidencesMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < bboxes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, bboxes_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult)) {
      return super.equals(obj);
    }
    com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult other =
        (com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult) obj;

    if (!getIdsList().equals(other.getIdsList())) return false;
    if (!getDisplayNamesList().equals(other.getDisplayNamesList())) return false;
    if (!getConfidencesList().equals(other.getConfidencesList())) return false;
    if (!getBboxesList().equals(other.getBboxesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getIdsCount() > 0) {
      hash = (37 * hash) + IDS_FIELD_NUMBER;
      hash = (53 * hash) + getIdsList().hashCode();
    }
    if (getDisplayNamesCount() > 0) {
      hash = (37 * hash) + DISPLAY_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getDisplayNamesList().hashCode();
    }
    if (getConfidencesCount() > 0) {
      hash = (37 * hash) + CONFIDENCES_FIELD_NUMBER;
      hash = (53 * hash) + getConfidencesList().hashCode();
    }
    if (getBboxesCount() > 0) {
      hash = (37 * hash) + BBOXES_FIELD_NUMBER;
      hash = (53 * hash) + getBboxesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Prediction output format for Image Object Detection.
   * </pre>
   *
   * Protobuf type {@code google.cloud.visionai.v1.ImageObjectDetectionPredictionResult}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.visionai.v1.ImageObjectDetectionPredictionResult)
      com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.visionai.v1.AnnotationsProto
          .internal_static_google_cloud_visionai_v1_ImageObjectDetectionPredictionResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.visionai.v1.AnnotationsProto
          .internal_static_google_cloud_visionai_v1_ImageObjectDetectionPredictionResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.class,
              com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.Builder.class);
    }

    // Construct using
    // com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      ids_ = emptyLongList();
      displayNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
      confidences_ = emptyFloatList();
      if (bboxesBuilder_ == null) {
        bboxes_ = java.util.Collections.emptyList();
      } else {
        bboxes_ = null;
        bboxesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.visionai.v1.AnnotationsProto
          .internal_static_google_cloud_visionai_v1_ImageObjectDetectionPredictionResult_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult
        getDefaultInstanceForType() {
      return com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult build() {
      com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult buildPartial() {
      com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult result =
          new com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult result) {
      if (bboxesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          bboxes_ = java.util.Collections.unmodifiableList(bboxes_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bboxes_ = bboxes_;
      } else {
        result.bboxes_ = bboxesBuilder_.build();
      }
    }

    private void buildPartial0(
        com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        ids_.makeImmutable();
        result.ids_ = ids_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        displayNames_.makeImmutable();
        result.displayNames_ = displayNames_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        confidences_.makeImmutable();
        result.confidences_ = confidences_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult) {
        return mergeFrom((com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult other) {
      if (other
          == com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult.getDefaultInstance())
        return this;
      if (!other.ids_.isEmpty()) {
        if (ids_.isEmpty()) {
          ids_ = other.ids_;
          ids_.makeImmutable();
          bitField0_ |= 0x00000001;
        } else {
          ensureIdsIsMutable();
          ids_.addAll(other.ids_);
        }
        onChanged();
      }
      if (!other.displayNames_.isEmpty()) {
        if (displayNames_.isEmpty()) {
          displayNames_ = other.displayNames_;
          bitField0_ |= 0x00000002;
        } else {
          ensureDisplayNamesIsMutable();
          displayNames_.addAll(other.displayNames_);
        }
        onChanged();
      }
      if (!other.confidences_.isEmpty()) {
        if (confidences_.isEmpty()) {
          confidences_ = other.confidences_;
          confidences_.makeImmutable();
          bitField0_ |= 0x00000004;
        } else {
          ensureConfidencesIsMutable();
          confidences_.addAll(other.confidences_);
        }
        onChanged();
      }
      if (bboxesBuilder_ == null) {
        if (!other.bboxes_.isEmpty()) {
          if (bboxes_.isEmpty()) {
            bboxes_ = other.bboxes_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBboxesIsMutable();
            bboxes_.addAll(other.bboxes_);
          }
          onChanged();
        }
      } else {
        if (!other.bboxes_.isEmpty()) {
          if (bboxesBuilder_.isEmpty()) {
            bboxesBuilder_.dispose();
            bboxesBuilder_ = null;
            bboxes_ = other.bboxes_;
            bitField0_ = (bitField0_ & ~0x00000008);
            bboxesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getBboxesFieldBuilder()
                    : null;
          } else {
            bboxesBuilder_.addAllMessages(other.bboxes_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                long v = input.readInt64();
                ensureIdsIsMutable();
                ids_.addLong(v);
                break;
              } // case 8
            case 10:
              {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  ids_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDisplayNamesIsMutable();
                displayNames_.add(s);
                break;
              } // case 18
            case 29:
              {
                float v = input.readFloat();
                ensureConfidencesIsMutable();
                confidences_.addFloat(v);
                break;
              } // case 29
            case 26:
              {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureConfidencesIsMutable(alloc / 4);
                while (input.getBytesUntilLimit() > 0) {
                  confidences_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 26
            case 34:
              {
                com.google.protobuf.ListValue m =
                    input.readMessage(com.google.protobuf.ListValue.parser(), extensionRegistry);
                if (bboxesBuilder_ == null) {
                  ensureBboxesIsMutable();
                  bboxes_.add(m);
                } else {
                  bboxesBuilder_.addMessage(m);
                }
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.Internal.LongList ids_ = emptyLongList();

    private void ensureIdsIsMutable() {
      if (!ids_.isModifiable()) {
        ids_ = makeMutableCopy(ids_);
      }
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @return A list containing the ids.
     */
    public java.util.List<java.lang.Long> getIdsList() {
      ids_.makeImmutable();
      return ids_;
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @return The count of ids.
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The ids at the given index.
     */
    public long getIds(int index) {
      return ids_.getLong(index);
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @param index The index to set the value at.
     * @param value The ids to set.
     * @return This builder for chaining.
     */
    public Builder setIds(int index, long value) {

      ensureIdsIsMutable();
      ids_.setLong(index, value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @param value The ids to add.
     * @return This builder for chaining.
     */
    public Builder addIds(long value) {

      ensureIdsIsMutable();
      ids_.addLong(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @param values The ids to add.
     * @return This builder for chaining.
     */
    public Builder addAllIds(java.lang.Iterable<? extends java.lang.Long> values) {
      ensureIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, ids_);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource IDs of the AnnotationSpecs that had been identified, ordered
     * by the confidence score descendingly. It is the id segment instead of full
     * resource name.
     * </pre>
     *
     * <code>repeated int64 ids = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIds() {
      ids_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList displayNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureDisplayNamesIsMutable() {
      if (!displayNames_.isModifiable()) {
        displayNames_ = new com.google.protobuf.LazyStringArrayList(displayNames_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @return A list containing the displayNames.
     */
    public com.google.protobuf.ProtocolStringList getDisplayNamesList() {
      displayNames_.makeImmutable();
      return displayNames_;
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @return The count of displayNames.
     */
    public int getDisplayNamesCount() {
      return displayNames_.size();
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The displayNames at the given index.
     */
    public java.lang.String getDisplayNames(int index) {
      return displayNames_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the displayNames at the given index.
     */
    public com.google.protobuf.ByteString getDisplayNamesBytes(int index) {
      return displayNames_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @param index The index to set the value at.
     * @param value The displayNames to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayNames(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDisplayNamesIsMutable();
      displayNames_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @param value The displayNames to add.
     * @return This builder for chaining.
     */
    public Builder addDisplayNames(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDisplayNamesIsMutable();
      displayNames_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @param values The displayNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllDisplayNames(java.lang.Iterable<java.lang.String> values) {
      ensureDisplayNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, displayNames_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDisplayNames() {
      displayNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The display names of the AnnotationSpecs that had been identified, order
     * matches the IDs.
     * </pre>
     *
     * <code>repeated string display_names = 2;</code>
     *
     * @param value The bytes of the displayNames to add.
     * @return This builder for chaining.
     */
    public Builder addDisplayNamesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureDisplayNamesIsMutable();
      displayNames_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList confidences_ = emptyFloatList();

    private void ensureConfidencesIsMutable() {
      if (!confidences_.isModifiable()) {
        confidences_ = makeMutableCopy(confidences_);
      }
      bitField0_ |= 0x00000004;
    }

    private void ensureConfidencesIsMutable(int capacity) {
      if (!confidences_.isModifiable()) {
        confidences_ = makeMutableCopy(confidences_, capacity);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @return A list containing the confidences.
     */
    public java.util.List<java.lang.Float> getConfidencesList() {
      confidences_.makeImmutable();
      return confidences_;
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @return The count of confidences.
     */
    public int getConfidencesCount() {
      return confidences_.size();
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The confidences at the given index.
     */
    public float getConfidences(int index) {
      return confidences_.getFloat(index);
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @param index The index to set the value at.
     * @param value The confidences to set.
     * @return This builder for chaining.
     */
    public Builder setConfidences(int index, float value) {

      ensureConfidencesIsMutable();
      confidences_.setFloat(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @param value The confidences to add.
     * @return This builder for chaining.
     */
    public Builder addConfidences(float value) {

      ensureConfidencesIsMutable();
      confidences_.addFloat(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @param values The confidences to add.
     * @return This builder for chaining.
     */
    public Builder addAllConfidences(java.lang.Iterable<? extends java.lang.Float> values) {
      ensureConfidencesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, confidences_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Model's confidences in correctness of the predicted IDs, higher value
     * means higher confidence. Order matches the Ids.
     * </pre>
     *
     * <code>repeated float confidences = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearConfidences() {
      confidences_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ListValue> bboxes_ =
        java.util.Collections.emptyList();

    private void ensureBboxesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        bboxes_ = new java.util.ArrayList<com.google.protobuf.ListValue>(bboxes_);
        bitField0_ |= 0x00000008;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.ListValue,
            com.google.protobuf.ListValue.Builder,
            com.google.protobuf.ListValueOrBuilder>
        bboxesBuilder_;

    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public java.util.List<com.google.protobuf.ListValue> getBboxesList() {
      if (bboxesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(bboxes_);
      } else {
        return bboxesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public int getBboxesCount() {
      if (bboxesBuilder_ == null) {
        return bboxes_.size();
      } else {
        return bboxesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public com.google.protobuf.ListValue getBboxes(int index) {
      if (bboxesBuilder_ == null) {
        return bboxes_.get(index);
      } else {
        return bboxesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder setBboxes(int index, com.google.protobuf.ListValue value) {
      if (bboxesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBboxesIsMutable();
        bboxes_.set(index, value);
        onChanged();
      } else {
        bboxesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder setBboxes(int index, com.google.protobuf.ListValue.Builder builderForValue) {
      if (bboxesBuilder_ == null) {
        ensureBboxesIsMutable();
        bboxes_.set(index, builderForValue.build());
        onChanged();
      } else {
        bboxesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder addBboxes(com.google.protobuf.ListValue value) {
      if (bboxesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBboxesIsMutable();
        bboxes_.add(value);
        onChanged();
      } else {
        bboxesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder addBboxes(int index, com.google.protobuf.ListValue value) {
      if (bboxesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBboxesIsMutable();
        bboxes_.add(index, value);
        onChanged();
      } else {
        bboxesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder addBboxes(com.google.protobuf.ListValue.Builder builderForValue) {
      if (bboxesBuilder_ == null) {
        ensureBboxesIsMutable();
        bboxes_.add(builderForValue.build());
        onChanged();
      } else {
        bboxesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder addBboxes(int index, com.google.protobuf.ListValue.Builder builderForValue) {
      if (bboxesBuilder_ == null) {
        ensureBboxesIsMutable();
        bboxes_.add(index, builderForValue.build());
        onChanged();
      } else {
        bboxesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder addAllBboxes(
        java.lang.Iterable<? extends com.google.protobuf.ListValue> values) {
      if (bboxesBuilder_ == null) {
        ensureBboxesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, bboxes_);
        onChanged();
      } else {
        bboxesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder clearBboxes() {
      if (bboxesBuilder_ == null) {
        bboxes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        bboxesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public Builder removeBboxes(int index) {
      if (bboxesBuilder_ == null) {
        ensureBboxesIsMutable();
        bboxes_.remove(index);
        onChanged();
      } else {
        bboxesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public com.google.protobuf.ListValue.Builder getBboxesBuilder(int index) {
      return getBboxesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public com.google.protobuf.ListValueOrBuilder getBboxesOrBuilder(int index) {
      if (bboxesBuilder_ == null) {
        return bboxes_.get(index);
      } else {
        return bboxesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public java.util.List<? extends com.google.protobuf.ListValueOrBuilder>
        getBboxesOrBuilderList() {
      if (bboxesBuilder_ != null) {
        return bboxesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(bboxes_);
      }
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public com.google.protobuf.ListValue.Builder addBboxesBuilder() {
      return getBboxesFieldBuilder().addBuilder(com.google.protobuf.ListValue.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public com.google.protobuf.ListValue.Builder addBboxesBuilder(int index) {
      return getBboxesFieldBuilder()
          .addBuilder(index, com.google.protobuf.ListValue.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Bounding boxes, i.e. the rectangles over the image, that pinpoint
     * the found AnnotationSpecs. Given in order that matches the IDs. Each
     * bounding box is an array of 4 numbers `xMin`, `xMax`, `yMin`, and
     * `yMax`, which represent the extremal coordinates of the box. They are
     * relative to the image size, and the point 0,0 is in the top left
     * of the image.
     * </pre>
     *
     * <code>repeated .google.protobuf.ListValue bboxes = 4;</code>
     */
    public java.util.List<com.google.protobuf.ListValue.Builder> getBboxesBuilderList() {
      return getBboxesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.ListValue,
            com.google.protobuf.ListValue.Builder,
            com.google.protobuf.ListValueOrBuilder>
        getBboxesFieldBuilder() {
      if (bboxesBuilder_ == null) {
        bboxesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.protobuf.ListValue,
                com.google.protobuf.ListValue.Builder,
                com.google.protobuf.ListValueOrBuilder>(
                bboxes_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
        bboxes_ = null;
      }
      return bboxesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.visionai.v1.ImageObjectDetectionPredictionResult)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.visionai.v1.ImageObjectDetectionPredictionResult)
  private static final com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult();
  }

  public static com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImageObjectDetectionPredictionResult> PARSER =
      new com.google.protobuf.AbstractParser<ImageObjectDetectionPredictionResult>() {
        @java.lang.Override
        public ImageObjectDetectionPredictionResult parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ImageObjectDetectionPredictionResult> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImageObjectDetectionPredictionResult> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.visionai.v1.ImageObjectDetectionPredictionResult
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
