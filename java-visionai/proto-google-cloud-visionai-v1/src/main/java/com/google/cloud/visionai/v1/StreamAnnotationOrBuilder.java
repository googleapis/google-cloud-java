/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/annotations.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.visionai.v1;

public interface StreamAnnotationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1.StreamAnnotation)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Annotation for type ACTIVE_ZONE
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.NormalizedPolygon active_zone = 5;</code>
   *
   * @return Whether the activeZone field is set.
   */
  boolean hasActiveZone();
  /**
   *
   *
   * <pre>
   * Annotation for type ACTIVE_ZONE
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.NormalizedPolygon active_zone = 5;</code>
   *
   * @return The activeZone.
   */
  com.google.cloud.visionai.v1.NormalizedPolygon getActiveZone();
  /**
   *
   *
   * <pre>
   * Annotation for type ACTIVE_ZONE
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.NormalizedPolygon active_zone = 5;</code>
   */
  com.google.cloud.visionai.v1.NormalizedPolygonOrBuilder getActiveZoneOrBuilder();

  /**
   *
   *
   * <pre>
   * Annotation for type CROSSING_LINE
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.NormalizedPolyline crossing_line = 6;</code>
   *
   * @return Whether the crossingLine field is set.
   */
  boolean hasCrossingLine();
  /**
   *
   *
   * <pre>
   * Annotation for type CROSSING_LINE
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.NormalizedPolyline crossing_line = 6;</code>
   *
   * @return The crossingLine.
   */
  com.google.cloud.visionai.v1.NormalizedPolyline getCrossingLine();
  /**
   *
   *
   * <pre>
   * Annotation for type CROSSING_LINE
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.NormalizedPolyline crossing_line = 6;</code>
   */
  com.google.cloud.visionai.v1.NormalizedPolylineOrBuilder getCrossingLineOrBuilder();

  /**
   *
   *
   * <pre>
   * ID of the annotation. It must be unique when used in the certain context.
   * For example, all the annotations to one input streams of a Vision AI
   * application.
   * </pre>
   *
   * <code>string id = 1;</code>
   *
   * @return The id.
   */
  java.lang.String getId();
  /**
   *
   *
   * <pre>
   * ID of the annotation. It must be unique when used in the certain context.
   * For example, all the annotations to one input streams of a Vision AI
   * application.
   * </pre>
   *
   * <code>string id = 1;</code>
   *
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString getIdBytes();

  /**
   *
   *
   * <pre>
   * User-friendly name for the annotation.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   *
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   *
   *
   * <pre>
   * User-friendly name for the annotation.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   *
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString getDisplayNameBytes();

  /**
   *
   *
   * <pre>
   * The Vision AI stream resource name.
   * </pre>
   *
   * <code>string source_stream = 3;</code>
   *
   * @return The sourceStream.
   */
  java.lang.String getSourceStream();
  /**
   *
   *
   * <pre>
   * The Vision AI stream resource name.
   * </pre>
   *
   * <code>string source_stream = 3;</code>
   *
   * @return The bytes for sourceStream.
   */
  com.google.protobuf.ByteString getSourceStreamBytes();

  /**
   *
   *
   * <pre>
   * The actual type of Annotation.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.StreamAnnotationType type = 4;</code>
   *
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   *
   *
   * <pre>
   * The actual type of Annotation.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.StreamAnnotationType type = 4;</code>
   *
   * @return The type.
   */
  com.google.cloud.visionai.v1.StreamAnnotationType getType();

  com.google.cloud.visionai.v1.StreamAnnotation.AnnotationPayloadCase getAnnotationPayloadCase();
}
