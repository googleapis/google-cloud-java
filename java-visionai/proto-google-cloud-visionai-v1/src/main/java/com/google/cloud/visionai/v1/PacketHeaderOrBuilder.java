/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/streaming_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.visionai.v1;

public interface PacketHeaderOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1.PacketHeader)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Input only. The capture time of the packet.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp capture_time = 1 [(.google.api.field_behavior) = INPUT_ONLY];
   * </code>
   *
   * @return Whether the captureTime field is set.
   */
  boolean hasCaptureTime();
  /**
   *
   *
   * <pre>
   * Input only. The capture time of the packet.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp capture_time = 1 [(.google.api.field_behavior) = INPUT_ONLY];
   * </code>
   *
   * @return The captureTime.
   */
  com.google.protobuf.Timestamp getCaptureTime();
  /**
   *
   *
   * <pre>
   * Input only. The capture time of the packet.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp capture_time = 1 [(.google.api.field_behavior) = INPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getCaptureTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Input only. Immutable. The type of the payload.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.PacketType type = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   *
   *
   * <pre>
   * Input only. Immutable. The type of the payload.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.PacketType type = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The type.
   */
  com.google.cloud.visionai.v1.PacketType getType();
  /**
   *
   *
   * <pre>
   * Input only. Immutable. The type of the payload.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.PacketType type = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   */
  com.google.cloud.visionai.v1.PacketTypeOrBuilder getTypeOrBuilder();

  /**
   *
   *
   * <pre>
   * Input only. This field is for users to attach user managed metadata.
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 3 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   *
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   *
   *
   * <pre>
   * Input only. This field is for users to attach user managed metadata.
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 3 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   *
   * @return The metadata.
   */
  com.google.protobuf.Struct getMetadata();
  /**
   *
   *
   * <pre>
   * Input only. This field is for users to attach user managed metadata.
   * </pre>
   *
   * <code>.google.protobuf.Struct metadata = 3 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   */
  com.google.protobuf.StructOrBuilder getMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Metadata that the server appends to each packet before sending
   * it to receivers. You don't need to set a value for this field when sending
   * packets.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.ServerMetadata server_metadata = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the serverMetadata field is set.
   */
  boolean hasServerMetadata();
  /**
   *
   *
   * <pre>
   * Output only. Metadata that the server appends to each packet before sending
   * it to receivers. You don't need to set a value for this field when sending
   * packets.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.ServerMetadata server_metadata = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The serverMetadata.
   */
  com.google.cloud.visionai.v1.ServerMetadata getServerMetadata();
  /**
   *
   *
   * <pre>
   * Output only. Metadata that the server appends to each packet before sending
   * it to receivers. You don't need to set a value for this field when sending
   * packets.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.ServerMetadata server_metadata = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.visionai.v1.ServerMetadataOrBuilder getServerMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * Input only. Immutable. Metadata that the server needs to know where to
   * write the packets to. It's only required for the first packet.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.SeriesMetadata series_metadata = 5 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return Whether the seriesMetadata field is set.
   */
  boolean hasSeriesMetadata();
  /**
   *
   *
   * <pre>
   * Input only. Immutable. Metadata that the server needs to know where to
   * write the packets to. It's only required for the first packet.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.SeriesMetadata series_metadata = 5 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The seriesMetadata.
   */
  com.google.cloud.visionai.v1.SeriesMetadata getSeriesMetadata();
  /**
   *
   *
   * <pre>
   * Input only. Immutable. Metadata that the server needs to know where to
   * write the packets to. It's only required for the first packet.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.SeriesMetadata series_metadata = 5 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   */
  com.google.cloud.visionai.v1.SeriesMetadataOrBuilder getSeriesMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * Immutable. Packet flag set. SDK will set the flag automatically.
   * </pre>
   *
   * <code>int32 flags = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The flags.
   */
  int getFlags();

  /**
   *
   *
   * <pre>
   * Immutable. Header string for tracing across services. It should be set when
   * the packet is first arrived in the stream server.
   *
   * The input format is a lowercase hex string:
   *   - version_id: 1 byte, currently must be zero - hex encoded (2 characters)
   *   - trace_id: 16 bytes (opaque blob) - hex encoded (32 characters)
   *   - span_id: 8 bytes (opaque blob) - hex encoded (16 characters)
   *   - trace_options: 1 byte (LSB means tracing enabled) - hex encoded (2
   *   characters)
   * Example: "00-404142434445464748494a4b4c4d4e4f-6162636465666768-01"
   *           v  trace_id                         span_id          options
   * </pre>
   *
   * <code>string trace_context = 7 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The traceContext.
   */
  java.lang.String getTraceContext();
  /**
   *
   *
   * <pre>
   * Immutable. Header string for tracing across services. It should be set when
   * the packet is first arrived in the stream server.
   *
   * The input format is a lowercase hex string:
   *   - version_id: 1 byte, currently must be zero - hex encoded (2 characters)
   *   - trace_id: 16 bytes (opaque blob) - hex encoded (32 characters)
   *   - span_id: 8 bytes (opaque blob) - hex encoded (16 characters)
   *   - trace_options: 1 byte (LSB means tracing enabled) - hex encoded (2
   *   characters)
   * Example: "00-404142434445464748494a4b4c4d4e4f-6162636465666768-01"
   *           v  trace_id                         span_id          options
   * </pre>
   *
   * <code>string trace_context = 7 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for traceContext.
   */
  com.google.protobuf.ByteString getTraceContextBytes();
}
