/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/warehouse.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.visionai.v1;

public interface FacetPropertyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1.FacetProperty)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Fixed range facet bucket config.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec fixed_range_bucket_spec = 5;
   * </code>
   *
   * @return Whether the fixedRangeBucketSpec field is set.
   */
  boolean hasFixedRangeBucketSpec();
  /**
   *
   *
   * <pre>
   * Fixed range facet bucket config.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec fixed_range_bucket_spec = 5;
   * </code>
   *
   * @return The fixedRangeBucketSpec.
   */
  com.google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec getFixedRangeBucketSpec();
  /**
   *
   *
   * <pre>
   * Fixed range facet bucket config.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpec fixed_range_bucket_spec = 5;
   * </code>
   */
  com.google.cloud.visionai.v1.FacetProperty.FixedRangeBucketSpecOrBuilder
      getFixedRangeBucketSpecOrBuilder();

  /**
   *
   *
   * <pre>
   * Custom range facet bucket config.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec custom_range_bucket_spec = 6;
   * </code>
   *
   * @return Whether the customRangeBucketSpec field is set.
   */
  boolean hasCustomRangeBucketSpec();
  /**
   *
   *
   * <pre>
   * Custom range facet bucket config.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec custom_range_bucket_spec = 6;
   * </code>
   *
   * @return The customRangeBucketSpec.
   */
  com.google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec getCustomRangeBucketSpec();
  /**
   *
   *
   * <pre>
   * Custom range facet bucket config.
   * </pre>
   *
   * <code>
   * .google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpec custom_range_bucket_spec = 6;
   * </code>
   */
  com.google.cloud.visionai.v1.FacetProperty.CustomRangeBucketSpecOrBuilder
      getCustomRangeBucketSpecOrBuilder();

  /**
   *
   *
   * <pre>
   * Datetime range facet bucket config.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec datetime_bucket_spec = 7;
   * </code>
   *
   * @return Whether the datetimeBucketSpec field is set.
   */
  boolean hasDatetimeBucketSpec();
  /**
   *
   *
   * <pre>
   * Datetime range facet bucket config.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec datetime_bucket_spec = 7;
   * </code>
   *
   * @return The datetimeBucketSpec.
   */
  com.google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec getDatetimeBucketSpec();
  /**
   *
   *
   * <pre>
   * Datetime range facet bucket config.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpec datetime_bucket_spec = 7;
   * </code>
   */
  com.google.cloud.visionai.v1.FacetProperty.DateTimeBucketSpecOrBuilder
      getDatetimeBucketSpecOrBuilder();

  /**
   *
   *
   * <pre>
   * Name of the facets, which are the dimensions users want to use to refine
   * search results. `mapped_fields` will match UserSpecifiedDataSchema keys.
   *
   * For example, user can add a bunch of UGAs with the same key, such as
   * player:adam, player:bob, player:charles. When multiple mapped_fields are
   * specified, will merge their value together as final facet value. E.g.
   * home_team: a, home_team:b, away_team:a, away_team:c, when facet_field =
   * [home_team, away_team], facet_value will be [a, b, c].
   *
   * UNLESS this is a 1:1 facet dimension (mapped_fields.size() == 1) AND the
   * mapped_field equals the parent SearchConfig.name, the parent must
   * also contain a SearchCriteriaProperty that maps to the same fields.
   * mapped_fields must not be empty.
   * </pre>
   *
   * <code>repeated string mapped_fields = 1;</code>
   *
   * @return A list containing the mappedFields.
   */
  java.util.List<java.lang.String> getMappedFieldsList();
  /**
   *
   *
   * <pre>
   * Name of the facets, which are the dimensions users want to use to refine
   * search results. `mapped_fields` will match UserSpecifiedDataSchema keys.
   *
   * For example, user can add a bunch of UGAs with the same key, such as
   * player:adam, player:bob, player:charles. When multiple mapped_fields are
   * specified, will merge their value together as final facet value. E.g.
   * home_team: a, home_team:b, away_team:a, away_team:c, when facet_field =
   * [home_team, away_team], facet_value will be [a, b, c].
   *
   * UNLESS this is a 1:1 facet dimension (mapped_fields.size() == 1) AND the
   * mapped_field equals the parent SearchConfig.name, the parent must
   * also contain a SearchCriteriaProperty that maps to the same fields.
   * mapped_fields must not be empty.
   * </pre>
   *
   * <code>repeated string mapped_fields = 1;</code>
   *
   * @return The count of mappedFields.
   */
  int getMappedFieldsCount();
  /**
   *
   *
   * <pre>
   * Name of the facets, which are the dimensions users want to use to refine
   * search results. `mapped_fields` will match UserSpecifiedDataSchema keys.
   *
   * For example, user can add a bunch of UGAs with the same key, such as
   * player:adam, player:bob, player:charles. When multiple mapped_fields are
   * specified, will merge their value together as final facet value. E.g.
   * home_team: a, home_team:b, away_team:a, away_team:c, when facet_field =
   * [home_team, away_team], facet_value will be [a, b, c].
   *
   * UNLESS this is a 1:1 facet dimension (mapped_fields.size() == 1) AND the
   * mapped_field equals the parent SearchConfig.name, the parent must
   * also contain a SearchCriteriaProperty that maps to the same fields.
   * mapped_fields must not be empty.
   * </pre>
   *
   * <code>repeated string mapped_fields = 1;</code>
   *
   * @param index The index of the element to return.
   * @return The mappedFields at the given index.
   */
  java.lang.String getMappedFields(int index);
  /**
   *
   *
   * <pre>
   * Name of the facets, which are the dimensions users want to use to refine
   * search results. `mapped_fields` will match UserSpecifiedDataSchema keys.
   *
   * For example, user can add a bunch of UGAs with the same key, such as
   * player:adam, player:bob, player:charles. When multiple mapped_fields are
   * specified, will merge their value together as final facet value. E.g.
   * home_team: a, home_team:b, away_team:a, away_team:c, when facet_field =
   * [home_team, away_team], facet_value will be [a, b, c].
   *
   * UNLESS this is a 1:1 facet dimension (mapped_fields.size() == 1) AND the
   * mapped_field equals the parent SearchConfig.name, the parent must
   * also contain a SearchCriteriaProperty that maps to the same fields.
   * mapped_fields must not be empty.
   * </pre>
   *
   * <code>repeated string mapped_fields = 1;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the mappedFields at the given index.
   */
  com.google.protobuf.ByteString getMappedFieldsBytes(int index);

  /**
   *
   *
   * <pre>
   * Display name of the facet. To be used by UI for facet rendering.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   *
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   *
   *
   * <pre>
   * Display name of the facet. To be used by UI for facet rendering.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   *
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString getDisplayNameBytes();

  /**
   *
   *
   * <pre>
   * Maximum number of unique bucket to return for one facet. Bucket number can
   * be large for high-cardinality facet such as "player". We only return top-n
   * most related ones to user. If it's &lt;= 0, the server will decide the
   * appropriate result_size.
   * </pre>
   *
   * <code>int64 result_size = 3;</code>
   *
   * @return The resultSize.
   */
  long getResultSize();

  /**
   *
   *
   * <pre>
   * Facet bucket type e.g. value, range.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetBucketType bucket_type = 4;</code>
   *
   * @return The enum numeric value on the wire for bucketType.
   */
  int getBucketTypeValue();
  /**
   *
   *
   * <pre>
   * Facet bucket type e.g. value, range.
   * </pre>
   *
   * <code>.google.cloud.visionai.v1.FacetBucketType bucket_type = 4;</code>
   *
   * @return The bucketType.
   */
  com.google.cloud.visionai.v1.FacetBucketType getBucketType();

  com.google.cloud.visionai.v1.FacetProperty.RangeFacetConfigCase getRangeFacetConfigCase();
}
