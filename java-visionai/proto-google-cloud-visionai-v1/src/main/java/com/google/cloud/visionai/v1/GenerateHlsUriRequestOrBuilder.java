/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/visionai/v1/warehouse.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.visionai.v1;

public interface GenerateHlsUriRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.visionai.v1.GenerateHlsUriRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The resource name of the asset to request clips for.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Required. The resource name of the asset to request clips for.
   * Format:
   * `projects/{project_number}/locations/{location_id}/corpora/{corpus_id}/assets/{asset_id}`
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * The time range to request clips for. Will be ignored if `get_live_view` is
   * set to True. The total time range requested should be smaller than 24h.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   * </code>
   */
  java.util.List<com.google.cloud.visionai.v1.Partition.TemporalPartition>
      getTemporalPartitionsList();
  /**
   *
   *
   * <pre>
   * The time range to request clips for. Will be ignored if `get_live_view` is
   * set to True. The total time range requested should be smaller than 24h.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   * </code>
   */
  com.google.cloud.visionai.v1.Partition.TemporalPartition getTemporalPartitions(int index);
  /**
   *
   *
   * <pre>
   * The time range to request clips for. Will be ignored if `get_live_view` is
   * set to True. The total time range requested should be smaller than 24h.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   * </code>
   */
  int getTemporalPartitionsCount();
  /**
   *
   *
   * <pre>
   * The time range to request clips for. Will be ignored if `get_live_view` is
   * set to True. The total time range requested should be smaller than 24h.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   * </code>
   */
  java.util.List<? extends com.google.cloud.visionai.v1.Partition.TemporalPartitionOrBuilder>
      getTemporalPartitionsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The time range to request clips for. Will be ignored if `get_live_view` is
   * set to True. The total time range requested should be smaller than 24h.
   * </pre>
   *
   * <code>repeated .google.cloud.visionai.v1.Partition.TemporalPartition temporal_partitions = 2;
   * </code>
   */
  com.google.cloud.visionai.v1.Partition.TemporalPartitionOrBuilder getTemporalPartitionsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Option to exclusively show a livestream of the asset with up to 3 minutes
   * of backlog data.
   * </pre>
   *
   * <code>bool live_view_enabled = 3;</code>
   *
   * @return The liveViewEnabled.
   */
  boolean getLiveViewEnabled();
}
