/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/area120/tables/v1alpha1/tables.proto

// Protobuf Java Version: 3.25.5
package com.google.area120.tables.v1alpha1;

public interface BatchCreateRowsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.area120.tables.v1alpha1.BatchCreateRowsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The parent table where the rows will be created.
   * Format: tables/{table}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   *
   *
   * <pre>
   * Required. The parent table where the rows will be created.
   * Format: tables/{table}
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * Required. The request message specifying the rows to create.
   *
   * A maximum of 500 rows can be created in a single batch.
   * </pre>
   *
   * <code>
   * repeated .google.area120.tables.v1alpha1.CreateRowRequest requests = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<com.google.area120.tables.v1alpha1.CreateRowRequest> getRequestsList();
  /**
   *
   *
   * <pre>
   * Required. The request message specifying the rows to create.
   *
   * A maximum of 500 rows can be created in a single batch.
   * </pre>
   *
   * <code>
   * repeated .google.area120.tables.v1alpha1.CreateRowRequest requests = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.area120.tables.v1alpha1.CreateRowRequest getRequests(int index);
  /**
   *
   *
   * <pre>
   * Required. The request message specifying the rows to create.
   *
   * A maximum of 500 rows can be created in a single batch.
   * </pre>
   *
   * <code>
   * repeated .google.area120.tables.v1alpha1.CreateRowRequest requests = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  int getRequestsCount();
  /**
   *
   *
   * <pre>
   * Required. The request message specifying the rows to create.
   *
   * A maximum of 500 rows can be created in a single batch.
   * </pre>
   *
   * <code>
   * repeated .google.area120.tables.v1alpha1.CreateRowRequest requests = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<? extends com.google.area120.tables.v1alpha1.CreateRowRequestOrBuilder>
      getRequestsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Required. The request message specifying the rows to create.
   *
   * A maximum of 500 rows can be created in a single batch.
   * </pre>
   *
   * <code>
   * repeated .google.area120.tables.v1alpha1.CreateRowRequest requests = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.area120.tables.v1alpha1.CreateRowRequestOrBuilder getRequestsOrBuilder(int index);
}
