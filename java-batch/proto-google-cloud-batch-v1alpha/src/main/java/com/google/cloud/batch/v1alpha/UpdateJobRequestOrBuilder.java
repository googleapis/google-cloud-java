/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/batch/v1alpha/batch.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.batch.v1alpha;

public interface UpdateJobRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.batch.v1alpha.UpdateJobRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The Job to update.
   * Only fields specified in `updateMask` are updated.
   * </pre>
   *
   * <code>.google.cloud.batch.v1alpha.Job job = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return Whether the job field is set.
   */
  boolean hasJob();
  /**
   *
   *
   * <pre>
   * Required. The Job to update.
   * Only fields specified in `updateMask` are updated.
   * </pre>
   *
   * <code>.google.cloud.batch.v1alpha.Job job = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The job.
   */
  com.google.cloud.batch.v1alpha.Job getJob();
  /**
   *
   *
   * <pre>
   * Required. The Job to update.
   * Only fields specified in `updateMask` are updated.
   * </pre>
   *
   * <code>.google.cloud.batch.v1alpha.Job job = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.cloud.batch.v1alpha.JobOrBuilder getJobOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Mask of fields to update.
   *
   * The `jobs.patch` method can only be used while a job is in the `QUEUED`,
   * `SCHEDULED`, or `RUNNING` state and currently only supports increasing the
   * value of the first `taskCount` field in the job's `taskGroups` field.
   * Therefore, you must set the value of `updateMask` to `taskGroups`. Any
   * other job fields in the update request will be ignored.
   *
   * For example, to update a job's `taskCount` to `2`, set `updateMask` to
   * `taskGroups` and use the following request body:
   * ```
   * {
   *   "taskGroups":[{
   *     "taskCount": 2
   *   }]
   * }
   * ```
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the updateMask field is set.
   */
  boolean hasUpdateMask();
  /**
   *
   *
   * <pre>
   * Required. Mask of fields to update.
   *
   * The `jobs.patch` method can only be used while a job is in the `QUEUED`,
   * `SCHEDULED`, or `RUNNING` state and currently only supports increasing the
   * value of the first `taskCount` field in the job's `taskGroups` field.
   * Therefore, you must set the value of `updateMask` to `taskGroups`. Any
   * other job fields in the update request will be ignored.
   *
   * For example, to update a job's `taskCount` to `2`, set `updateMask` to
   * `taskGroups` and use the following request body:
   * ```
   * {
   *   "taskGroups":[{
   *     "taskCount": 2
   *   }]
   * }
   * ```
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The updateMask.
   */
  com.google.protobuf.FieldMask getUpdateMask();
  /**
   *
   *
   * <pre>
   * Required. Mask of fields to update.
   *
   * The `jobs.patch` method can only be used while a job is in the `QUEUED`,
   * `SCHEDULED`, or `RUNNING` state and currently only supports increasing the
   * value of the first `taskCount` field in the job's `taskGroups` field.
   * Therefore, you must set the value of `updateMask` to `taskGroups`. Any
   * other job fields in the update request will be ignored.
   *
   * For example, to update a job's `taskCount` to `2`, set `updateMask` to
   * `taskGroups` and use the following request body:
   * ```
   * {
   *   "taskGroups":[{
   *     "taskCount": 2
   *   }]
   * }
   * ```
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   * </pre>
   *
   * <code>
   * string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The requestId.
   */
  java.lang.String getRequestId();
  /**
   *
   *
   * <pre>
   * Optional. An optional request ID to identify requests. Specify a unique
   * request ID so that if you must retry your request, the server will know to
   * ignore the request if it has already been completed. The server will
   * guarantee that for at least 60 minutes after the first request.
   *
   * For example, consider a situation where you make an initial request and
   * the request times out. If you make the request again with the same request
   * ID, the server can check if original operation with the same request ID
   * was received, and if so, will ignore the second request. This prevents
   * clients from accidentally creating duplicate commitments.
   *
   * The request ID must be a valid UUID with the exception that zero UUID is
   * not supported (00000000-0000-0000-0000-000000000000).
   * </pre>
   *
   * <code>
   * string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The bytes for requestId.
   */
  com.google.protobuf.ByteString getRequestIdBytes();
}
