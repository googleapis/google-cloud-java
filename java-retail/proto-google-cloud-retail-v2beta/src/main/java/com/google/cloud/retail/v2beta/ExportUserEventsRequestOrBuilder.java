/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/retail/v2beta/export_config.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.retail.v2beta;

public interface ExportUserEventsRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.retail.v2beta.ExportUserEventsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Resource name of a [Catalog][google.cloud.retail.v2beta.Catalog].
   * For example `projects/1234/locations/global/catalogs/default_catalog`
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   *
   *
   * <pre>
   * Required. Resource name of a [Catalog][google.cloud.retail.v2beta.Catalog].
   * For example `projects/1234/locations/global/catalogs/default_catalog`
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * Required. The output location of the data.
   * </pre>
   *
   * <code>
   * .google.cloud.retail.v2beta.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the outputConfig field is set.
   */
  boolean hasOutputConfig();
  /**
   *
   *
   * <pre>
   * Required. The output location of the data.
   * </pre>
   *
   * <code>
   * .google.cloud.retail.v2beta.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The outputConfig.
   */
  com.google.cloud.retail.v2beta.OutputConfig getOutputConfig();
  /**
   *
   *
   * <pre>
   * Required. The output location of the data.
   * </pre>
   *
   * <code>
   * .google.cloud.retail.v2beta.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.retail.v2beta.OutputConfigOrBuilder getOutputConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * A filtering expression to specify restrictions on returned events.
   * The expression is a sequence of terms. Each term applies a restriction to
   * the returned user events. Use this expression to restrict results to a
   * specific time range or to filter events by eventType.
   * For example, `eventTime &gt; "2012-04-23T18:25:43.511Z"
   * eventsMissingCatalogItems eventTime&lt;"2012-04-23T18:25:43.511Z"
   * eventType=search`
   *
   *   We expect only three types of fields:
   *
   *    * `eventTime`: This can be specified twice, once with a
   *      less than operator and once with a greater than operator. The
   *      `eventTime` restriction should result in one, contiguous, valid,
   *      `eventTime` range.
   *
   *    * `eventType`: Boolean operators `OR` and `NOT` are supported if the
   *      expression is enclosed in parentheses and the operators are separated
   *      from the tag values by a space.
   *
   *    * `eventsMissingCatalogItems`: This restricts results
   *      to events for which catalog items were not found in the catalog. The
   *      default behavior is to return only those events for which catalog
   *      items were found.
   *
   *   Some examples of valid filters expressions:
   *
   *   * Example 1: `eventTime &gt; "2012-04-23T18:25:43.511Z"
   *             eventTime &lt; "2012-04-23T18:30:43.511Z"`
   *   * Example 2: `eventTime &gt; "2012-04-23T18:25:43.511Z"
   *             eventType = detail-page-view`
   *   * Example 3: `eventsMissingCatalogItems
   *             eventType = (NOT search) eventTime &lt;
   *             "2018-04-23T18:30:43.511Z"`
   *   * Example 4: `eventTime &gt; "2012-04-23T18:25:43.511Z"`
   *   * Example 5: `eventType = (detail-page-view OR search)`
   *   * Example 6: `eventsMissingCatalogItems`
   * </pre>
   *
   * <code>string filter = 3;</code>
   *
   * @return The filter.
   */
  java.lang.String getFilter();
  /**
   *
   *
   * <pre>
   * A filtering expression to specify restrictions on returned events.
   * The expression is a sequence of terms. Each term applies a restriction to
   * the returned user events. Use this expression to restrict results to a
   * specific time range or to filter events by eventType.
   * For example, `eventTime &gt; "2012-04-23T18:25:43.511Z"
   * eventsMissingCatalogItems eventTime&lt;"2012-04-23T18:25:43.511Z"
   * eventType=search`
   *
   *   We expect only three types of fields:
   *
   *    * `eventTime`: This can be specified twice, once with a
   *      less than operator and once with a greater than operator. The
   *      `eventTime` restriction should result in one, contiguous, valid,
   *      `eventTime` range.
   *
   *    * `eventType`: Boolean operators `OR` and `NOT` are supported if the
   *      expression is enclosed in parentheses and the operators are separated
   *      from the tag values by a space.
   *
   *    * `eventsMissingCatalogItems`: This restricts results
   *      to events for which catalog items were not found in the catalog. The
   *      default behavior is to return only those events for which catalog
   *      items were found.
   *
   *   Some examples of valid filters expressions:
   *
   *   * Example 1: `eventTime &gt; "2012-04-23T18:25:43.511Z"
   *             eventTime &lt; "2012-04-23T18:30:43.511Z"`
   *   * Example 2: `eventTime &gt; "2012-04-23T18:25:43.511Z"
   *             eventType = detail-page-view`
   *   * Example 3: `eventsMissingCatalogItems
   *             eventType = (NOT search) eventTime &lt;
   *             "2018-04-23T18:30:43.511Z"`
   *   * Example 4: `eventTime &gt; "2012-04-23T18:25:43.511Z"`
   *   * Example 5: `eventType = (detail-page-view OR search)`
   *   * Example 6: `eventsMissingCatalogItems`
   * </pre>
   *
   * <code>string filter = 3;</code>
   *
   * @return The bytes for filter.
   */
  com.google.protobuf.ByteString getFilterBytes();
}
