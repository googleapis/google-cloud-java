/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/retail/v2beta/common.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.retail.v2beta;

public interface PinControlMetadataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.retail.v2beta.PinControlMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Map of all matched pins, keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; all_matched_pins = 1;
   * </code>
   */
  int getAllMatchedPinsCount();

  /**
   *
   *
   * <pre>
   * Map of all matched pins, keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; all_matched_pins = 1;
   * </code>
   */
  boolean containsAllMatchedPins(long key);

  /** Use {@link #getAllMatchedPinsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.Long, com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins>
      getAllMatchedPins();

  /**
   *
   *
   * <pre>
   * Map of all matched pins, keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; all_matched_pins = 1;
   * </code>
   */
  java.util.Map<java.lang.Long, com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins>
      getAllMatchedPinsMap();

  /**
   *
   *
   * <pre>
   * Map of all matched pins, keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; all_matched_pins = 1;
   * </code>
   */
  /* nullable */
  com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins getAllMatchedPinsOrDefault(
      long key,
      /* nullable */
      com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins defaultValue);

  /**
   *
   *
   * <pre>
   * Map of all matched pins, keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; all_matched_pins = 1;
   * </code>
   */
  com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins getAllMatchedPinsOrThrow(long key);

  /**
   *
   *
   * <pre>
   * Map of pins that were dropped due to overlap with other matching pins,
   * keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; dropped_pins = 2;
   * </code>
   */
  int getDroppedPinsCount();

  /**
   *
   *
   * <pre>
   * Map of pins that were dropped due to overlap with other matching pins,
   * keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; dropped_pins = 2;
   * </code>
   */
  boolean containsDroppedPins(long key);

  /** Use {@link #getDroppedPinsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.Long, com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins>
      getDroppedPins();

  /**
   *
   *
   * <pre>
   * Map of pins that were dropped due to overlap with other matching pins,
   * keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; dropped_pins = 2;
   * </code>
   */
  java.util.Map<java.lang.Long, com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins>
      getDroppedPinsMap();

  /**
   *
   *
   * <pre>
   * Map of pins that were dropped due to overlap with other matching pins,
   * keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; dropped_pins = 2;
   * </code>
   */
  /* nullable */
  com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins getDroppedPinsOrDefault(
      long key,
      /* nullable */
      com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins defaultValue);

  /**
   *
   *
   * <pre>
   * Map of pins that were dropped due to overlap with other matching pins,
   * keyed by pin position.
   * </pre>
   *
   * <code>
   * map&lt;int64, .google.cloud.retail.v2beta.PinControlMetadata.ProductPins&gt; dropped_pins = 2;
   * </code>
   */
  com.google.cloud.retail.v2beta.PinControlMetadata.ProductPins getDroppedPinsOrThrow(long key);
}
