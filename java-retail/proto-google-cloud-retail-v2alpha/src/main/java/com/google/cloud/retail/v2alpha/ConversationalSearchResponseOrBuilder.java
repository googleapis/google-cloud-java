/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/retail/v2alpha/conversational_search_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.retail.v2alpha;

public interface ConversationalSearchResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.retail.v2alpha.ConversationalSearchResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Conversation UUID. This field will be stored in client side storage to
   * maintain the conversation session with server and will be used for next
   * search request's
   * [ConversationalSearchRequest.conversation_id][google.cloud.retail.v2alpha.ConversationalSearchRequest.conversation_id]
   * to restore conversation state in server.
   * </pre>
   *
   * <code>string conversation_id = 4;</code>
   *
   * @return The conversationId.
   */
  java.lang.String getConversationId();

  /**
   *
   *
   * <pre>
   * Conversation UUID. This field will be stored in client side storage to
   * maintain the conversation session with server and will be used for next
   * search request's
   * [ConversationalSearchRequest.conversation_id][google.cloud.retail.v2alpha.ConversationalSearchRequest.conversation_id]
   * to restore conversation state in server.
   * </pre>
   *
   * <code>string conversation_id = 4;</code>
   *
   * @return The bytes for conversationId.
   */
  com.google.protobuf.ByteString getConversationIdBytes();

  /**
   *
   *
   * <pre>
   * The proposed refined search queries. They can be used to fetch the relevant
   * search results. When using CONVERSATIONAL_FILTER_ONLY mode, the
   * refined_query from search response will be populated here.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch refined_search = 6;
   * </code>
   */
  java.util.List<com.google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch>
      getRefinedSearchList();

  /**
   *
   *
   * <pre>
   * The proposed refined search queries. They can be used to fetch the relevant
   * search results. When using CONVERSATIONAL_FILTER_ONLY mode, the
   * refined_query from search response will be populated here.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch refined_search = 6;
   * </code>
   */
  com.google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch getRefinedSearch(
      int index);

  /**
   *
   *
   * <pre>
   * The proposed refined search queries. They can be used to fetch the relevant
   * search results. When using CONVERSATIONAL_FILTER_ONLY mode, the
   * refined_query from search response will be populated here.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch refined_search = 6;
   * </code>
   */
  int getRefinedSearchCount();

  /**
   *
   *
   * <pre>
   * The proposed refined search queries. They can be used to fetch the relevant
   * search results. When using CONVERSATIONAL_FILTER_ONLY mode, the
   * refined_query from search response will be populated here.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch refined_search = 6;
   * </code>
   */
  java.util.List<
          ? extends
              com.google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearchOrBuilder>
      getRefinedSearchOrBuilderList();

  /**
   *
   *
   * <pre>
   * The proposed refined search queries. They can be used to fetch the relevant
   * search results. When using CONVERSATIONAL_FILTER_ONLY mode, the
   * refined_query from search response will be populated here.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearch refined_search = 6;
   * </code>
   */
  com.google.cloud.retail.v2alpha.ConversationalSearchResponse.RefinedSearchOrBuilder
      getRefinedSearchOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * This field specifies all related information that is needed on client
   * side for UI rendering of conversational filtering search.
   * </pre>
   *
   * <code>
   * .google.cloud.retail.v2alpha.ConversationalSearchResponse.ConversationalFilteringResult conversational_filtering_result = 7;
   * </code>
   *
   * @return Whether the conversationalFilteringResult field is set.
   */
  boolean hasConversationalFilteringResult();

  /**
   *
   *
   * <pre>
   * This field specifies all related information that is needed on client
   * side for UI rendering of conversational filtering search.
   * </pre>
   *
   * <code>
   * .google.cloud.retail.v2alpha.ConversationalSearchResponse.ConversationalFilteringResult conversational_filtering_result = 7;
   * </code>
   *
   * @return The conversationalFilteringResult.
   */
  com.google.cloud.retail.v2alpha.ConversationalSearchResponse.ConversationalFilteringResult
      getConversationalFilteringResult();

  /**
   *
   *
   * <pre>
   * This field specifies all related information that is needed on client
   * side for UI rendering of conversational filtering search.
   * </pre>
   *
   * <code>
   * .google.cloud.retail.v2alpha.ConversationalSearchResponse.ConversationalFilteringResult conversational_filtering_result = 7;
   * </code>
   */
  com.google.cloud.retail.v2alpha.ConversationalSearchResponse
          .ConversationalFilteringResultOrBuilder
      getConversationalFilteringResultOrBuilder();
}
