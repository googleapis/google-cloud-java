/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/datasource.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

/**
 *
 *
 * <pre>
 * Message representing references to Looker explores.
 * </pre>
 *
 * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.LookerExploreReferences}
 */
public final class LookerExploreReferences extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.geminidataanalytics.v1beta.LookerExploreReferences)
    LookerExploreReferencesOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use LookerExploreReferences.newBuilder() to construct.
  private LookerExploreReferences(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private LookerExploreReferences() {
    exploreReferences_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new LookerExploreReferences();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_LookerExploreReferences_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_LookerExploreReferences_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences.class,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences.Builder.class);
  }

  private int bitField0_;
  public static final int EXPLORE_REFERENCES_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference>
      exploreReferences_;

  /**
   *
   *
   * <pre>
   * Required. References to Looker explores.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference>
      getExploreReferencesList() {
    return exploreReferences_;
  }

  /**
   *
   *
   * <pre>
   * Required. References to Looker explores.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>
      getExploreReferencesOrBuilderList() {
    return exploreReferences_;
  }

  /**
   *
   *
   * <pre>
   * Required. References to Looker explores.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public int getExploreReferencesCount() {
    return exploreReferences_.size();
  }

  /**
   *
   *
   * <pre>
   * Required. References to Looker explores.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference getExploreReferences(
      int index) {
    return exploreReferences_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Required. References to Looker explores.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder
      getExploreReferencesOrBuilder(int index) {
    return exploreReferences_.get(index);
  }

  public static final int CREDENTIALS_FIELD_NUMBER = 2;
  private com.google.cloud.geminidataanalytics.v1beta.Credentials credentials_;

  /**
   *
   *
   * <pre>
   * Optional. The credentials to use when calling the Looker API.
   *
   * Currently supports both OAuth token and API key-based credentials, as
   * described in
   * [Authentication with an
   * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the credentials field is set.
   */
  @java.lang.Override
  public boolean hasCredentials() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. The credentials to use when calling the Looker API.
   *
   * Currently supports both OAuth token and API key-based credentials, as
   * described in
   * [Authentication with an
   * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The credentials.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Credentials getCredentials() {
    return credentials_ == null
        ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
        : credentials_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The credentials to use when calling the Looker API.
   *
   * Currently supports both OAuth token and API key-based credentials, as
   * described in
   * [Authentication with an
   * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder
      getCredentialsOrBuilder() {
    return credentials_ == null
        ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
        : credentials_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < exploreReferences_.size(); i++) {
      output.writeMessage(1, exploreReferences_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getCredentials());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < exploreReferences_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(1, exploreReferences_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getCredentials());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences)) {
      return super.equals(obj);
    }
    com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences other =
        (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences) obj;

    if (!getExploreReferencesList().equals(other.getExploreReferencesList())) return false;
    if (hasCredentials() != other.hasCredentials()) return false;
    if (hasCredentials()) {
      if (!getCredentials().equals(other.getCredentials())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getExploreReferencesCount() > 0) {
      hash = (37 * hash) + EXPLORE_REFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + getExploreReferencesList().hashCode();
    }
    if (hasCredentials()) {
      hash = (37 * hash) + CREDENTIALS_FIELD_NUMBER;
      hash = (53 * hash) + getCredentials().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Message representing references to Looker explores.
   * </pre>
   *
   * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.LookerExploreReferences}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.geminidataanalytics.v1beta.LookerExploreReferences)
      com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferencesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_LookerExploreReferences_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_LookerExploreReferences_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences.class,
              com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences.Builder.class);
    }

    // Construct using
    // com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getExploreReferencesFieldBuilder();
        getCredentialsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (exploreReferencesBuilder_ == null) {
        exploreReferences_ = java.util.Collections.emptyList();
      } else {
        exploreReferences_ = null;
        exploreReferencesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      credentials_ = null;
      if (credentialsBuilder_ != null) {
        credentialsBuilder_.dispose();
        credentialsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_LookerExploreReferences_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
        getDefaultInstanceForType() {
      return com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences build() {
      com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences buildPartial() {
      com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences result =
          new com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences result) {
      if (exploreReferencesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          exploreReferences_ = java.util.Collections.unmodifiableList(exploreReferences_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.exploreReferences_ = exploreReferences_;
      } else {
        result.exploreReferences_ = exploreReferencesBuilder_.build();
      }
    }

    private void buildPartial0(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.credentials_ =
            credentialsBuilder_ == null ? credentials_ : credentialsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences) {
        return mergeFrom(
            (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences other) {
      if (other
          == com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
              .getDefaultInstance()) return this;
      if (exploreReferencesBuilder_ == null) {
        if (!other.exploreReferences_.isEmpty()) {
          if (exploreReferences_.isEmpty()) {
            exploreReferences_ = other.exploreReferences_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureExploreReferencesIsMutable();
            exploreReferences_.addAll(other.exploreReferences_);
          }
          onChanged();
        }
      } else {
        if (!other.exploreReferences_.isEmpty()) {
          if (exploreReferencesBuilder_.isEmpty()) {
            exploreReferencesBuilder_.dispose();
            exploreReferencesBuilder_ = null;
            exploreReferences_ = other.exploreReferences_;
            bitField0_ = (bitField0_ & ~0x00000001);
            exploreReferencesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getExploreReferencesFieldBuilder()
                    : null;
          } else {
            exploreReferencesBuilder_.addAllMessages(other.exploreReferences_);
          }
        }
      }
      if (other.hasCredentials()) {
        mergeCredentials(other.getCredentials());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference m =
                    input.readMessage(
                        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.parser(),
                        extensionRegistry);
                if (exploreReferencesBuilder_ == null) {
                  ensureExploreReferencesIsMutable();
                  exploreReferences_.add(m);
                } else {
                  exploreReferencesBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getCredentialsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference>
        exploreReferences_ = java.util.Collections.emptyList();

    private void ensureExploreReferencesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        exploreReferences_ =
            new java.util.ArrayList<
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference>(
                exploreReferences_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>
        exploreReferencesBuilder_;

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference>
        getExploreReferencesList() {
      if (exploreReferencesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(exploreReferences_);
      } else {
        return exploreReferencesBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public int getExploreReferencesCount() {
      if (exploreReferencesBuilder_ == null) {
        return exploreReferences_.size();
      } else {
        return exploreReferencesBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference getExploreReferences(
        int index) {
      if (exploreReferencesBuilder_ == null) {
        return exploreReferences_.get(index);
      } else {
        return exploreReferencesBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setExploreReferences(
        int index, com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference value) {
      if (exploreReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExploreReferencesIsMutable();
        exploreReferences_.set(index, value);
        onChanged();
      } else {
        exploreReferencesBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setExploreReferences(
        int index,
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
            builderForValue) {
      if (exploreReferencesBuilder_ == null) {
        ensureExploreReferencesIsMutable();
        exploreReferences_.set(index, builderForValue.build());
        onChanged();
      } else {
        exploreReferencesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addExploreReferences(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference value) {
      if (exploreReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExploreReferencesIsMutable();
        exploreReferences_.add(value);
        onChanged();
      } else {
        exploreReferencesBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addExploreReferences(
        int index, com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference value) {
      if (exploreReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExploreReferencesIsMutable();
        exploreReferences_.add(index, value);
        onChanged();
      } else {
        exploreReferencesBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addExploreReferences(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
            builderForValue) {
      if (exploreReferencesBuilder_ == null) {
        ensureExploreReferencesIsMutable();
        exploreReferences_.add(builderForValue.build());
        onChanged();
      } else {
        exploreReferencesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addExploreReferences(
        int index,
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
            builderForValue) {
      if (exploreReferencesBuilder_ == null) {
        ensureExploreReferencesIsMutable();
        exploreReferences_.add(index, builderForValue.build());
        onChanged();
      } else {
        exploreReferencesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addAllExploreReferences(
        java.lang.Iterable<
                ? extends com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference>
            values) {
      if (exploreReferencesBuilder_ == null) {
        ensureExploreReferencesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, exploreReferences_);
        onChanged();
      } else {
        exploreReferencesBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearExploreReferences() {
      if (exploreReferencesBuilder_ == null) {
        exploreReferences_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        exploreReferencesBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder removeExploreReferences(int index) {
      if (exploreReferencesBuilder_ == null) {
        ensureExploreReferencesIsMutable();
        exploreReferences_.remove(index);
        onChanged();
      } else {
        exploreReferencesBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
        getExploreReferencesBuilder(int index) {
      return getExploreReferencesFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder
        getExploreReferencesOrBuilder(int index) {
      if (exploreReferencesBuilder_ == null) {
        return exploreReferences_.get(index);
      } else {
        return exploreReferencesBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>
        getExploreReferencesOrBuilderList() {
      if (exploreReferencesBuilder_ != null) {
        return exploreReferencesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(exploreReferences_);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
        addExploreReferencesBuilder() {
      return getExploreReferencesFieldBuilder()
          .addBuilder(
              com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
        addExploreReferencesBuilder(int index) {
      return getExploreReferencesFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Required. References to Looker explores.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.LookerExploreReference explore_references = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder>
        getExploreReferencesBuilderList() {
      return getExploreReferencesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>
        getExploreReferencesFieldBuilder() {
      if (exploreReferencesBuilder_ == null) {
        exploreReferencesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference,
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder,
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>(
                exploreReferences_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        exploreReferences_ = null;
      }
      return exploreReferencesBuilder_;
    }

    private com.google.cloud.geminidataanalytics.v1beta.Credentials credentials_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Credentials,
            com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder,
            com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder>
        credentialsBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the credentials field is set.
     */
    public boolean hasCredentials() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The credentials.
     */
    public com.google.cloud.geminidataanalytics.v1beta.Credentials getCredentials() {
      if (credentialsBuilder_ == null) {
        return credentials_ == null
            ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
            : credentials_;
      } else {
        return credentialsBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setCredentials(com.google.cloud.geminidataanalytics.v1beta.Credentials value) {
      if (credentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        credentials_ = value;
      } else {
        credentialsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setCredentials(
        com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder builderForValue) {
      if (credentialsBuilder_ == null) {
        credentials_ = builderForValue.build();
      } else {
        credentialsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeCredentials(com.google.cloud.geminidataanalytics.v1beta.Credentials value) {
      if (credentialsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && credentials_ != null
            && credentials_
                != com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()) {
          getCredentialsBuilder().mergeFrom(value);
        } else {
          credentials_ = value;
        }
      } else {
        credentialsBuilder_.mergeFrom(value);
      }
      if (credentials_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearCredentials() {
      bitField0_ = (bitField0_ & ~0x00000002);
      credentials_ = null;
      if (credentialsBuilder_ != null) {
        credentialsBuilder_.dispose();
        credentialsBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder getCredentialsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCredentialsFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder
        getCredentialsOrBuilder() {
      if (credentialsBuilder_ != null) {
        return credentialsBuilder_.getMessageOrBuilder();
      } else {
        return credentials_ == null
            ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
            : credentials_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the Looker API.
     *
     * Currently supports both OAuth token and API key-based credentials, as
     * described in
     * [Authentication with an
     * SDK](https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk).
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Credentials,
            com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder,
            com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder>
        getCredentialsFieldBuilder() {
      if (credentialsBuilder_ == null) {
        credentialsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.Credentials,
                com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder,
                com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder>(
                getCredentials(), getParentForChildren(), isClean());
        credentials_ = null;
      }
      return credentialsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.geminidataanalytics.v1beta.LookerExploreReferences)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.geminidataanalytics.v1beta.LookerExploreReferences)
  private static final com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences();
  }

  public static com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LookerExploreReferences> PARSER =
      new com.google.protobuf.AbstractParser<LookerExploreReferences>() {
        @java.lang.Override
        public LookerExploreReferences parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<LookerExploreReferences> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LookerExploreReferences> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferences
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
