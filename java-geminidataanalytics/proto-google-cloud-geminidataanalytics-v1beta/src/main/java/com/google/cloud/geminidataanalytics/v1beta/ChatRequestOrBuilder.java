/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/data_chat_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

public interface ChatRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.geminidataanalytics.v1beta.ChatRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Inline context for the chat request. Use this to chat
   * statelessly (without managed conversation persistence and without an
   * Agent) by passing all context inline.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the inlineContext field is set.
   */
  boolean hasInlineContext();

  /**
   *
   *
   * <pre>
   * Optional. Inline context for the chat request. Use this to chat
   * statelessly (without managed conversation persistence and without an
   * Agent) by passing all context inline.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The inlineContext.
   */
  com.google.cloud.geminidataanalytics.v1beta.Context getInlineContext();

  /**
   *
   *
   * <pre>
   * Optional. Inline context for the chat request. Use this to chat
   * statelessly (without managed conversation persistence and without an
   * Agent) by passing all context inline.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.geminidataanalytics.v1beta.ContextOrBuilder getInlineContextOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. Reference to a persisted conversation and agent context.
   * Use this to chat with an Agent using managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the conversationReference field is set.
   */
  boolean hasConversationReference();

  /**
   *
   *
   * <pre>
   * Optional. Reference to a persisted conversation and agent context.
   * Use this to chat with an Agent using managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The conversationReference.
   */
  com.google.cloud.geminidataanalytics.v1beta.ConversationReference getConversationReference();

  /**
   *
   *
   * <pre>
   * Optional. Reference to a persisted conversation and agent context.
   * Use this to chat with an Agent using managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.geminidataanalytics.v1beta.ConversationReferenceOrBuilder
      getConversationReferenceOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. Context for the chat request. Use this to chat with an Agent
   * statelessly, without managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the dataAgentContext field is set.
   */
  boolean hasDataAgentContext();

  /**
   *
   *
   * <pre>
   * Optional. Context for the chat request. Use this to chat with an Agent
   * statelessly, without managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The dataAgentContext.
   */
  com.google.cloud.geminidataanalytics.v1beta.DataAgentContext getDataAgentContext();

  /**
   *
   *
   * <pre>
   * Optional. Context for the chat request. Use this to chat with an Agent
   * statelessly, without managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder
      getDataAgentContextOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. The Google Cloud project to be used for quota and billing.
   * </pre>
   *
   * <code>
   * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
   *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
   * @return The project.
   */
  @java.lang.Deprecated
  java.lang.String getProject();

  /**
   *
   *
   * <pre>
   * Optional. The Google Cloud project to be used for quota and billing.
   * </pre>
   *
   * <code>
   * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
   *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
   * @return The bytes for project.
   */
  @java.lang.Deprecated
  com.google.protobuf.ByteString getProjectBytes();

  /**
   *
   *
   * <pre>
   * Required. The parent value for chat request.
   * Pattern: `projects/{project}/locations/{location}`
   * </pre>
   *
   * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The parent.
   */
  java.lang.String getParent();

  /**
   *
   *
   * <pre>
   * Required. The parent value for chat request.
   * Pattern: `projects/{project}/locations/{location}`
   * </pre>
   *
   * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<com.google.cloud.geminidataanalytics.v1beta.Message> getMessagesList();

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.geminidataanalytics.v1beta.Message getMessages(int index);

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  int getMessagesCount();

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder>
      getMessagesOrBuilderList();

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder getMessagesOrBuilder(int index);

  com.google.cloud.geminidataanalytics.v1beta.ChatRequest.ContextProviderCase
      getContextProviderCase();
}
