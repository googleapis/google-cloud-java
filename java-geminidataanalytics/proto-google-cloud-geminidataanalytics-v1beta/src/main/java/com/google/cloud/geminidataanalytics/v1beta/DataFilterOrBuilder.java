/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/datasource.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

public interface DataFilterOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.geminidataanalytics.v1beta.DataFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. The field to filter on. For example: ["event_date",
   * "customer_id", "product_category"]
   * </pre>
   *
   * <code>string field = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The field.
   */
  java.lang.String getField();

  /**
   *
   *
   * <pre>
   * Optional. The field to filter on. For example: ["event_date",
   * "customer_id", "product_category"]
   * </pre>
   *
   * <code>string field = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for field.
   */
  com.google.protobuf.ByteString getFieldBytes();

  /**
   *
   *
   * <pre>
   * Optional. The default value used for this filter if the filter is not
   * overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
   * </pre>
   *
   * <code>string value = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The value.
   */
  java.lang.String getValue();

  /**
   *
   *
   * <pre>
   * Optional. The default value used for this filter if the filter is not
   * overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
   * </pre>
   *
   * <code>string value = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for value.
   */
  com.google.protobuf.ByteString getValueBytes();

  /**
   *
   *
   * <pre>
   * Optional. The type of filter present on a datasource, such as
   * ALWAYS_FILTER.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataFilterType type = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();

  /**
   *
   *
   * <pre>
   * Optional. The type of filter present on a datasource, such as
   * ALWAYS_FILTER.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataFilterType type = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The type.
   */
  com.google.cloud.geminidataanalytics.v1beta.DataFilterType getType();
}
