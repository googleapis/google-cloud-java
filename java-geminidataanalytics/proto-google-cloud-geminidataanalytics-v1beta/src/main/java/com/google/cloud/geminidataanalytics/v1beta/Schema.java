/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/datasource.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

/**
 *
 *
 * <pre>
 * The schema of a Datasource or QueryResult instance.
 * </pre>
 *
 * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.Schema}
 */
public final class Schema extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.geminidataanalytics.v1beta.Schema)
    SchemaOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use Schema.newBuilder() to construct.
  private Schema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Schema() {
    fields_ = java.util.Collections.emptyList();
    description_ = "";
    synonyms_ = com.google.protobuf.LazyStringArrayList.emptyList();
    tags_ = com.google.protobuf.LazyStringArrayList.emptyList();
    displayName_ = "";
    filters_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Schema();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_Schema_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_Schema_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.geminidataanalytics.v1beta.Schema.class,
            com.google.cloud.geminidataanalytics.v1beta.Schema.Builder.class);
  }

  public static final int FIELDS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.geminidataanalytics.v1beta.Field> fields_;

  /**
   *
   *
   * <pre>
   * Optional. The fields in the schema.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.geminidataanalytics.v1beta.Field> getFieldsList() {
    return fields_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The fields in the schema.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder>
      getFieldsOrBuilderList() {
    return fields_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The fields in the schema.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getFieldsCount() {
    return fields_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. The fields in the schema.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Field getFields(int index) {
    return fields_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. The fields in the schema.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder getFieldsOrBuilder(int index) {
    return fields_.get(index);
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";

  /**
   *
   *
   * <pre>
   * Optional. A textual description of the table's content and purpose.
   * For example: "Contains information about customer orders in our e-commerce
   * store."
   * </pre>
   *
   * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. A textual description of the table's content and purpose.
   * For example: "Contains information about customer orders in our e-commerce
   * store."
   * </pre>
   *
   * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SYNONYMS_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList synonyms_ =
      com.google.protobuf.LazyStringArrayList.emptyList();

  /**
   *
   *
   * <pre>
   * Optional. A list of alternative names or synonyms that can be used to refer
   * to the table. For example: ["sales", "orders", "purchases"]
   * </pre>
   *
   * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the synonyms.
   */
  public com.google.protobuf.ProtocolStringList getSynonymsList() {
    return synonyms_;
  }

  /**
   *
   *
   * <pre>
   * Optional. A list of alternative names or synonyms that can be used to refer
   * to the table. For example: ["sales", "orders", "purchases"]
   * </pre>
   *
   * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of synonyms.
   */
  public int getSynonymsCount() {
    return synonyms_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. A list of alternative names or synonyms that can be used to refer
   * to the table. For example: ["sales", "orders", "purchases"]
   * </pre>
   *
   * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The synonyms at the given index.
   */
  public java.lang.String getSynonyms(int index) {
    return synonyms_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. A list of alternative names or synonyms that can be used to refer
   * to the table. For example: ["sales", "orders", "purchases"]
   * </pre>
   *
   * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the synonyms at the given index.
   */
  public com.google.protobuf.ByteString getSynonymsBytes(int index) {
    return synonyms_.getByteString(index);
  }

  public static final int TAGS_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList tags_ =
      com.google.protobuf.LazyStringArrayList.emptyList();

  /**
   *
   *
   * <pre>
   * Optional. A list of tags or keywords associated with the table, used for
   * categorization. For example: ["transaction", "revenue", "customer_data"]
   * </pre>
   *
   * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the tags.
   */
  public com.google.protobuf.ProtocolStringList getTagsList() {
    return tags_;
  }

  /**
   *
   *
   * <pre>
   * Optional. A list of tags or keywords associated with the table, used for
   * categorization. For example: ["transaction", "revenue", "customer_data"]
   * </pre>
   *
   * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of tags.
   */
  public int getTagsCount() {
    return tags_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. A list of tags or keywords associated with the table, used for
   * categorization. For example: ["transaction", "revenue", "customer_data"]
   * </pre>
   *
   * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  public java.lang.String getTags(int index) {
    return tags_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. A list of tags or keywords associated with the table, used for
   * categorization. For example: ["transaction", "revenue", "customer_data"]
   * </pre>
   *
   * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  public com.google.protobuf.ByteString getTagsBytes(int index) {
    return tags_.getByteString(index);
  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object displayName_ = "";

  /**
   *
   *
   * <pre>
   * Optional. Table display_name (same as label in
   * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
   * required, currently only Looker has this field.
   * </pre>
   *
   * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The displayName.
   */
  @java.lang.Override
  public java.lang.String getDisplayName() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      displayName_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. Table display_name (same as label in
   * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
   * required, currently only Looker has this field.
   * </pre>
   *
   * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for displayName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDisplayNameBytes() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      displayName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTERS_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.geminidataanalytics.v1beta.DataFilter> filters_;

  /**
   *
   *
   * <pre>
   * Optional. The filters on the datasource's underlying data. Currently only
   * used for Looker data sources.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.geminidataanalytics.v1beta.DataFilter> getFiltersList() {
    return filters_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The filters on the datasource's underlying data. Currently only
   * used for Looker data sources.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder>
      getFiltersOrBuilderList() {
    return filters_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The filters on the datasource's underlying data. Currently only
   * used for Looker data sources.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getFiltersCount() {
    return filters_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. The filters on the datasource's underlying data. Currently only
   * used for Looker data sources.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.DataFilter getFilters(int index) {
    return filters_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. The filters on the datasource's underlying data. Currently only
   * used for Looker data sources.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder getFiltersOrBuilder(
      int index) {
    return filters_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < fields_.size(); i++) {
      output.writeMessage(1, fields_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
    }
    for (int i = 0; i < synonyms_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, synonyms_.getRaw(i));
    }
    for (int i = 0; i < tags_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, tags_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, displayName_);
    }
    for (int i = 0; i < filters_.size(); i++) {
      output.writeMessage(6, filters_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < fields_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, fields_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < synonyms_.size(); i++) {
        dataSize += computeStringSizeNoTag(synonyms_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getSynonymsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tags_.size(); i++) {
        dataSize += computeStringSizeNoTag(tags_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTagsList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, displayName_);
    }
    for (int i = 0; i < filters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, filters_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.geminidataanalytics.v1beta.Schema)) {
      return super.equals(obj);
    }
    com.google.cloud.geminidataanalytics.v1beta.Schema other =
        (com.google.cloud.geminidataanalytics.v1beta.Schema) obj;

    if (!getFieldsList().equals(other.getFieldsList())) return false;
    if (!getDescription().equals(other.getDescription())) return false;
    if (!getSynonymsList().equals(other.getSynonymsList())) return false;
    if (!getTagsList().equals(other.getTagsList())) return false;
    if (!getDisplayName().equals(other.getDisplayName())) return false;
    if (!getFiltersList().equals(other.getFiltersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFieldsCount() > 0) {
      hash = (37 * hash) + FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getFieldsList().hashCode();
    }
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    if (getSynonymsCount() > 0) {
      hash = (37 * hash) + SYNONYMS_FIELD_NUMBER;
      hash = (53 * hash) + getSynonymsList().hashCode();
    }
    if (getTagsCount() > 0) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTagsList().hashCode();
    }
    hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDisplayName().hashCode();
    if (getFiltersCount() > 0) {
      hash = (37 * hash) + FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getFiltersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.geminidataanalytics.v1beta.Schema prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The schema of a Datasource or QueryResult instance.
   * </pre>
   *
   * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.Schema}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.geminidataanalytics.v1beta.Schema)
      com.google.cloud.geminidataanalytics.v1beta.SchemaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_Schema_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_Schema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.geminidataanalytics.v1beta.Schema.class,
              com.google.cloud.geminidataanalytics.v1beta.Schema.Builder.class);
    }

    // Construct using com.google.cloud.geminidataanalytics.v1beta.Schema.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
      } else {
        fields_ = null;
        fieldsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      description_ = "";
      synonyms_ = com.google.protobuf.LazyStringArrayList.emptyList();
      tags_ = com.google.protobuf.LazyStringArrayList.emptyList();
      displayName_ = "";
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
      } else {
        filters_ = null;
        filtersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_Schema_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Schema getDefaultInstanceForType() {
      return com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Schema build() {
      com.google.cloud.geminidataanalytics.v1beta.Schema result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Schema buildPartial() {
      com.google.cloud.geminidataanalytics.v1beta.Schema result =
          new com.google.cloud.geminidataanalytics.v1beta.Schema(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.geminidataanalytics.v1beta.Schema result) {
      if (fieldsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fields_ = fields_;
      } else {
        result.fields_ = fieldsBuilder_.build();
      }
      if (filtersBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          filters_ = java.util.Collections.unmodifiableList(filters_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.filters_ = filters_;
      } else {
        result.filters_ = filtersBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.geminidataanalytics.v1beta.Schema result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        synonyms_.makeImmutable();
        result.synonyms_ = synonyms_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        tags_.makeImmutable();
        result.tags_ = tags_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.displayName_ = displayName_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.geminidataanalytics.v1beta.Schema) {
        return mergeFrom((com.google.cloud.geminidataanalytics.v1beta.Schema) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.geminidataanalytics.v1beta.Schema other) {
      if (other == com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance())
        return this;
      if (fieldsBuilder_ == null) {
        if (!other.fields_.isEmpty()) {
          if (fields_.isEmpty()) {
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFieldsIsMutable();
            fields_.addAll(other.fields_);
          }
          onChanged();
        }
      } else {
        if (!other.fields_.isEmpty()) {
          if (fieldsBuilder_.isEmpty()) {
            fieldsBuilder_.dispose();
            fieldsBuilder_ = null;
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fieldsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getFieldsFieldBuilder()
                    : null;
          } else {
            fieldsBuilder_.addAllMessages(other.fields_);
          }
        }
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.synonyms_.isEmpty()) {
        if (synonyms_.isEmpty()) {
          synonyms_ = other.synonyms_;
          bitField0_ |= 0x00000004;
        } else {
          ensureSynonymsIsMutable();
          synonyms_.addAll(other.synonyms_);
        }
        onChanged();
      }
      if (!other.tags_.isEmpty()) {
        if (tags_.isEmpty()) {
          tags_ = other.tags_;
          bitField0_ |= 0x00000008;
        } else {
          ensureTagsIsMutable();
          tags_.addAll(other.tags_);
        }
        onChanged();
      }
      if (!other.getDisplayName().isEmpty()) {
        displayName_ = other.displayName_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (filtersBuilder_ == null) {
        if (!other.filters_.isEmpty()) {
          if (filters_.isEmpty()) {
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFiltersIsMutable();
            filters_.addAll(other.filters_);
          }
          onChanged();
        }
      } else {
        if (!other.filters_.isEmpty()) {
          if (filtersBuilder_.isEmpty()) {
            filtersBuilder_.dispose();
            filtersBuilder_ = null;
            filters_ = other.filters_;
            bitField0_ = (bitField0_ & ~0x00000020);
            filtersBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getFiltersFieldBuilder()
                    : null;
          } else {
            filtersBuilder_.addAllMessages(other.filters_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.cloud.geminidataanalytics.v1beta.Field m =
                    input.readMessage(
                        com.google.cloud.geminidataanalytics.v1beta.Field.parser(),
                        extensionRegistry);
                if (fieldsBuilder_ == null) {
                  ensureFieldsIsMutable();
                  fields_.add(m);
                } else {
                  fieldsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSynonymsIsMutable();
                synonyms_.add(s);
                break;
              } // case 26
            case 34:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureTagsIsMutable();
                tags_.add(s);
                break;
              } // case 34
            case 42:
              {
                displayName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 50:
              {
                com.google.cloud.geminidataanalytics.v1beta.DataFilter m =
                    input.readMessage(
                        com.google.cloud.geminidataanalytics.v1beta.DataFilter.parser(),
                        extensionRegistry);
                if (filtersBuilder_ == null) {
                  ensureFiltersIsMutable();
                  filters_.add(m);
                } else {
                  filtersBuilder_.addMessage(m);
                }
                break;
              } // case 50
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.cloud.geminidataanalytics.v1beta.Field> fields_ =
        java.util.Collections.emptyList();

    private void ensureFieldsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fields_ =
            new java.util.ArrayList<com.google.cloud.geminidataanalytics.v1beta.Field>(fields_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Field,
            com.google.cloud.geminidataanalytics.v1beta.Field.Builder,
            com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder>
        fieldsBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.Field> getFieldsList() {
      if (fieldsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fields_);
      } else {
        return fieldsBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getFieldsCount() {
      if (fieldsBuilder_ == null) {
        return fields_.size();
      } else {
        return fieldsBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Field getFields(int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);
      } else {
        return fieldsBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setFields(int index, com.google.cloud.geminidataanalytics.v1beta.Field value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.set(index, value);
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setFields(
        int index, com.google.cloud.geminidataanalytics.v1beta.Field.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.set(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFields(com.google.cloud.geminidataanalytics.v1beta.Field value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFields(int index, com.google.cloud.geminidataanalytics.v1beta.Field value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(index, value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFields(
        com.google.cloud.geminidataanalytics.v1beta.Field.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFields(
        int index, com.google.cloud.geminidataanalytics.v1beta.Field.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllFields(
        java.lang.Iterable<? extends com.google.cloud.geminidataanalytics.v1beta.Field> values) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, fields_);
        onChanged();
      } else {
        fieldsBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearFields() {
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fieldsBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeFields(int index) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.remove(index);
        onChanged();
      } else {
        fieldsBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Field.Builder getFieldsBuilder(int index) {
      return getFieldsFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);
      } else {
        return fieldsBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder>
        getFieldsOrBuilderList() {
      if (fieldsBuilder_ != null) {
        return fieldsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fields_);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Field.Builder addFieldsBuilder() {
      return getFieldsFieldBuilder()
          .addBuilder(com.google.cloud.geminidataanalytics.v1beta.Field.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Field.Builder addFieldsBuilder(int index) {
      return getFieldsFieldBuilder()
          .addBuilder(
              index, com.google.cloud.geminidataanalytics.v1beta.Field.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The fields in the schema.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Field fields = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.Field.Builder>
        getFieldsBuilderList() {
      return getFieldsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Field,
            com.google.cloud.geminidataanalytics.v1beta.Field.Builder,
            com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder>
        getFieldsFieldBuilder() {
      if (fieldsBuilder_ == null) {
        fieldsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.Field,
                com.google.cloud.geminidataanalytics.v1beta.Field.Builder,
                com.google.cloud.geminidataanalytics.v1beta.FieldOrBuilder>(
                fields_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        fields_ = null;
      }
      return fieldsBuilder_;
    }

    private java.lang.Object description_ = "";

    /**
     *
     *
     * <pre>
     * Optional. A textual description of the table's content and purpose.
     * For example: "Contains information about customer orders in our e-commerce
     * store."
     * </pre>
     *
     * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. A textual description of the table's content and purpose.
     * For example: "Contains information about customer orders in our e-commerce
     * store."
     * </pre>
     *
     * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. A textual description of the table's content and purpose.
     * For example: "Contains information about customer orders in our e-commerce
     * store."
     * </pre>
     *
     * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      description_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A textual description of the table's content and purpose.
     * For example: "Contains information about customer orders in our e-commerce
     * store."
     * </pre>
     *
     * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A textual description of the table's content and purpose.
     * For example: "Contains information about customer orders in our e-commerce
     * store."
     * </pre>
     *
     * <code>string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList synonyms_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureSynonymsIsMutable() {
      if (!synonyms_.isModifiable()) {
        synonyms_ = new com.google.protobuf.LazyStringArrayList(synonyms_);
      }
      bitField0_ |= 0x00000004;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the synonyms.
     */
    public com.google.protobuf.ProtocolStringList getSynonymsList() {
      synonyms_.makeImmutable();
      return synonyms_;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of synonyms.
     */
    public int getSynonymsCount() {
      return synonyms_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The synonyms at the given index.
     */
    public java.lang.String getSynonyms(int index) {
      return synonyms_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the synonyms at the given index.
     */
    public com.google.protobuf.ByteString getSynonymsBytes(int index) {
      return synonyms_.getByteString(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index to set the value at.
     * @param value The synonyms to set.
     * @return This builder for chaining.
     */
    public Builder setSynonyms(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSynonymsIsMutable();
      synonyms_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The synonyms to add.
     * @return This builder for chaining.
     */
    public Builder addSynonyms(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSynonymsIsMutable();
      synonyms_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param values The synonyms to add.
     * @return This builder for chaining.
     */
    public Builder addAllSynonyms(java.lang.Iterable<java.lang.String> values) {
      ensureSynonymsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, synonyms_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSynonyms() {
      synonyms_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      ;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of alternative names or synonyms that can be used to refer
     * to the table. For example: ["sales", "orders", "purchases"]
     * </pre>
     *
     * <code>repeated string synonyms = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes of the synonyms to add.
     * @return This builder for chaining.
     */
    public Builder addSynonymsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureSynonymsIsMutable();
      synonyms_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList tags_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureTagsIsMutable() {
      if (!tags_.isModifiable()) {
        tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
      }
      bitField0_ |= 0x00000008;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the tags.
     */
    public com.google.protobuf.ProtocolStringList getTagsList() {
      tags_.makeImmutable();
      return tags_;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of tags.
     */
    public int getTagsCount() {
      return tags_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    public com.google.protobuf.ByteString getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index to set the value at.
     * @param value The tags to set.
     * @return This builder for chaining.
     */
    public Builder setTags(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTagsIsMutable();
      tags_.set(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The tags to add.
     * @return This builder for chaining.
     */
    public Builder addTags(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTagsIsMutable();
      tags_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param values The tags to add.
     * @return This builder for chaining.
     */
    public Builder addAllTags(java.lang.Iterable<java.lang.String> values) {
      ensureTagsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, tags_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTags() {
      tags_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      ;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. A list of tags or keywords associated with the table, used for
     * categorization. For example: ["transaction", "revenue", "customer_data"]
     * </pre>
     *
     * <code>repeated string tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes of the tags to add.
     * @return This builder for chaining.
     */
    public Builder addTagsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureTagsIsMutable();
      tags_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object displayName_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Table display_name (same as label in
     * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
     * required, currently only Looker has this field.
     * </pre>
     *
     * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The displayName.
     */
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Table display_name (same as label in
     * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
     * required, currently only Looker has this field.
     * </pre>
     *
     * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for displayName.
     */
    public com.google.protobuf.ByteString getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Table display_name (same as label in
     * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
     * required, currently only Looker has this field.
     * </pre>
     *
     * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      displayName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Table display_name (same as label in
     * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
     * required, currently only Looker has this field.
     * </pre>
     *
     * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDisplayName() {
      displayName_ = getDefaultInstance().getDisplayName();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Table display_name (same as label in
     * cloud/data_analytics/anarres/data/looker/proto/model_explore.proto), not
     * required, currently only Looker has this field.
     * </pre>
     *
     * <code>string display_name = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      displayName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.geminidataanalytics.v1beta.DataFilter> filters_ =
        java.util.Collections.emptyList();

    private void ensureFiltersIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        filters_ =
            new java.util.ArrayList<com.google.cloud.geminidataanalytics.v1beta.DataFilter>(
                filters_);
        bitField0_ |= 0x00000020;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.DataFilter,
            com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder,
            com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder>
        filtersBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.DataFilter> getFiltersList() {
      if (filtersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filters_);
      } else {
        return filtersBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getFiltersCount() {
      if (filtersBuilder_ == null) {
        return filters_.size();
      } else {
        return filtersBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.DataFilter getFilters(int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);
      } else {
        return filtersBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setFilters(
        int index, com.google.cloud.geminidataanalytics.v1beta.DataFilter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.set(index, value);
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setFilters(
        int index, com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.set(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFilters(com.google.cloud.geminidataanalytics.v1beta.DataFilter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFilters(
        int index, com.google.cloud.geminidataanalytics.v1beta.DataFilter value) {
      if (filtersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFiltersIsMutable();
        filters_.add(index, value);
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFilters(
        com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addFilters(
        int index, com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder builderForValue) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.add(index, builderForValue.build());
        onChanged();
      } else {
        filtersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllFilters(
        java.lang.Iterable<? extends com.google.cloud.geminidataanalytics.v1beta.DataFilter>
            values) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, filters_);
        onChanged();
      } else {
        filtersBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearFilters() {
      if (filtersBuilder_ == null) {
        filters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        filtersBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeFilters(int index) {
      if (filtersBuilder_ == null) {
        ensureFiltersIsMutable();
        filters_.remove(index);
        onChanged();
      } else {
        filtersBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder getFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder getFiltersOrBuilder(
        int index) {
      if (filtersBuilder_ == null) {
        return filters_.get(index);
      } else {
        return filtersBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder>
        getFiltersOrBuilderList() {
      if (filtersBuilder_ != null) {
        return filtersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filters_);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder addFiltersBuilder() {
      return getFiltersFieldBuilder()
          .addBuilder(com.google.cloud.geminidataanalytics.v1beta.DataFilter.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder addFiltersBuilder(
        int index) {
      return getFiltersFieldBuilder()
          .addBuilder(
              index, com.google.cloud.geminidataanalytics.v1beta.DataFilter.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The filters on the datasource's underlying data. Currently only
     * used for Looker data sources.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.DataFilter filters = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder>
        getFiltersBuilderList() {
      return getFiltersFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.DataFilter,
            com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder,
            com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder>
        getFiltersFieldBuilder() {
      if (filtersBuilder_ == null) {
        filtersBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.DataFilter,
                com.google.cloud.geminidataanalytics.v1beta.DataFilter.Builder,
                com.google.cloud.geminidataanalytics.v1beta.DataFilterOrBuilder>(
                filters_, ((bitField0_ & 0x00000020) != 0), getParentForChildren(), isClean());
        filters_ = null;
      }
      return filtersBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.geminidataanalytics.v1beta.Schema)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.geminidataanalytics.v1beta.Schema)
  private static final com.google.cloud.geminidataanalytics.v1beta.Schema DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.geminidataanalytics.v1beta.Schema();
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Schema getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Schema> PARSER =
      new com.google.protobuf.AbstractParser<Schema>() {
        @java.lang.Override
        public Schema parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Schema> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Schema> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Schema getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
