/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/datasource.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

/**
 *
 *
 * <pre>
 * A datasource that can be used to answer questions.
 * </pre>
 *
 * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.Datasource}
 */
public final class Datasource extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.geminidataanalytics.v1beta.Datasource)
    DatasourceOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use Datasource.newBuilder() to construct.
  private Datasource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Datasource() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Datasource();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_Datasource_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_Datasource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.geminidataanalytics.v1beta.Datasource.class,
            com.google.cloud.geminidataanalytics.v1beta.Datasource.Builder.class);
  }

  private int bitField0_;
  private int referenceCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object reference_;

  public enum ReferenceCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BIGQUERY_TABLE_REFERENCE(1),
    STUDIO_DATASOURCE_ID(2),
    LOOKER_EXPLORE_REFERENCE(4),
    REFERENCE_NOT_SET(0);
    private final int value;

    private ReferenceCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReferenceCase valueOf(int value) {
      return forNumber(value);
    }

    public static ReferenceCase forNumber(int value) {
      switch (value) {
        case 1:
          return BIGQUERY_TABLE_REFERENCE;
        case 2:
          return STUDIO_DATASOURCE_ID;
        case 4:
          return LOOKER_EXPLORE_REFERENCE;
        case 0:
          return REFERENCE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public ReferenceCase getReferenceCase() {
    return ReferenceCase.forNumber(referenceCase_);
  }

  public static final int BIGQUERY_TABLE_REFERENCE_FIELD_NUMBER = 1;

  /**
   *
   *
   * <pre>
   * A reference to a BigQuery table.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
   * </code>
   *
   * @return Whether the bigqueryTableReference field is set.
   */
  @java.lang.Override
  public boolean hasBigqueryTableReference() {
    return referenceCase_ == 1;
  }

  /**
   *
   *
   * <pre>
   * A reference to a BigQuery table.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
   * </code>
   *
   * @return The bigqueryTableReference.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
      getBigqueryTableReference() {
    if (referenceCase_ == 1) {
      return (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * A reference to a BigQuery table.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceOrBuilder
      getBigqueryTableReferenceOrBuilder() {
    if (referenceCase_ == 1) {
      return (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.getDefaultInstance();
  }

  public static final int STUDIO_DATASOURCE_ID_FIELD_NUMBER = 2;

  /**
   *
   *
   * <pre>
   * A reference to a LookerStudio datasource.
   * </pre>
   *
   * <code>string studio_datasource_id = 2;</code>
   *
   * @return Whether the studioDatasourceId field is set.
   */
  public boolean hasStudioDatasourceId() {
    return referenceCase_ == 2;
  }

  /**
   *
   *
   * <pre>
   * A reference to a LookerStudio datasource.
   * </pre>
   *
   * <code>string studio_datasource_id = 2;</code>
   *
   * @return The studioDatasourceId.
   */
  public java.lang.String getStudioDatasourceId() {
    java.lang.Object ref = "";
    if (referenceCase_ == 2) {
      ref = reference_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (referenceCase_ == 2) {
        reference_ = s;
      }
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * A reference to a LookerStudio datasource.
   * </pre>
   *
   * <code>string studio_datasource_id = 2;</code>
   *
   * @return The bytes for studioDatasourceId.
   */
  public com.google.protobuf.ByteString getStudioDatasourceIdBytes() {
    java.lang.Object ref = "";
    if (referenceCase_ == 2) {
      ref = reference_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (referenceCase_ == 2) {
        reference_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOOKER_EXPLORE_REFERENCE_FIELD_NUMBER = 4;

  /**
   *
   *
   * <pre>
   * A reference to a Looker explore.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
   * </code>
   *
   * @return Whether the lookerExploreReference field is set.
   */
  @java.lang.Override
  public boolean hasLookerExploreReference() {
    return referenceCase_ == 4;
  }

  /**
   *
   *
   * <pre>
   * A reference to a Looker explore.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
   * </code>
   *
   * @return The lookerExploreReference.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
      getLookerExploreReference() {
    if (referenceCase_ == 4) {
      return (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * A reference to a Looker explore.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder
      getLookerExploreReferenceOrBuilder() {
    if (referenceCase_ == 4) {
      return (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.getDefaultInstance();
  }

  public static final int SCHEMA_FIELD_NUMBER = 7;
  private com.google.cloud.geminidataanalytics.v1beta.Schema schema_;

  /**
   *
   *
   * <pre>
   * Optional. The schema of the datasource.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. The schema of the datasource.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The schema.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Schema getSchema() {
    return schema_ == null
        ? com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance()
        : schema_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The schema of the datasource.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.SchemaOrBuilder getSchemaOrBuilder() {
    return schema_ == null
        ? com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance()
        : schema_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (referenceCase_ == 1) {
      output.writeMessage(
          1, (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_);
    }
    if (referenceCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reference_);
    }
    if (referenceCase_ == 4) {
      output.writeMessage(
          4, (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(7, getSchema());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (referenceCase_ == 1) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              1, (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_);
    }
    if (referenceCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reference_);
    }
    if (referenceCase_ == 4) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              4, (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, getSchema());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.geminidataanalytics.v1beta.Datasource)) {
      return super.equals(obj);
    }
    com.google.cloud.geminidataanalytics.v1beta.Datasource other =
        (com.google.cloud.geminidataanalytics.v1beta.Datasource) obj;

    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema().equals(other.getSchema())) return false;
    }
    if (!getReferenceCase().equals(other.getReferenceCase())) return false;
    switch (referenceCase_) {
      case 1:
        if (!getBigqueryTableReference().equals(other.getBigqueryTableReference())) return false;
        break;
      case 2:
        if (!getStudioDatasourceId().equals(other.getStudioDatasourceId())) return false;
        break;
      case 4:
        if (!getLookerExploreReference().equals(other.getLookerExploreReference())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    switch (referenceCase_) {
      case 1:
        hash = (37 * hash) + BIGQUERY_TABLE_REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getBigqueryTableReference().hashCode();
        break;
      case 2:
        hash = (37 * hash) + STUDIO_DATASOURCE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getStudioDatasourceId().hashCode();
        break;
      case 4:
        hash = (37 * hash) + LOOKER_EXPLORE_REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getLookerExploreReference().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.geminidataanalytics.v1beta.Datasource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * A datasource that can be used to answer questions.
   * </pre>
   *
   * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.Datasource}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.geminidataanalytics.v1beta.Datasource)
      com.google.cloud.geminidataanalytics.v1beta.DatasourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_Datasource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_Datasource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.geminidataanalytics.v1beta.Datasource.class,
              com.google.cloud.geminidataanalytics.v1beta.Datasource.Builder.class);
    }

    // Construct using com.google.cloud.geminidataanalytics.v1beta.Datasource.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getSchemaFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (bigqueryTableReferenceBuilder_ != null) {
        bigqueryTableReferenceBuilder_.clear();
      }
      if (lookerExploreReferenceBuilder_ != null) {
        lookerExploreReferenceBuilder_.clear();
      }
      schema_ = null;
      if (schemaBuilder_ != null) {
        schemaBuilder_.dispose();
        schemaBuilder_ = null;
      }
      referenceCase_ = 0;
      reference_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.geminidataanalytics.v1beta.DatasourceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_Datasource_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Datasource getDefaultInstanceForType() {
      return com.google.cloud.geminidataanalytics.v1beta.Datasource.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Datasource build() {
      com.google.cloud.geminidataanalytics.v1beta.Datasource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Datasource buildPartial() {
      com.google.cloud.geminidataanalytics.v1beta.Datasource result =
          new com.google.cloud.geminidataanalytics.v1beta.Datasource(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.geminidataanalytics.v1beta.Datasource result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.schema_ = schemaBuilder_ == null ? schema_ : schemaBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.google.cloud.geminidataanalytics.v1beta.Datasource result) {
      result.referenceCase_ = referenceCase_;
      result.reference_ = this.reference_;
      if (referenceCase_ == 1 && bigqueryTableReferenceBuilder_ != null) {
        result.reference_ = bigqueryTableReferenceBuilder_.build();
      }
      if (referenceCase_ == 4 && lookerExploreReferenceBuilder_ != null) {
        result.reference_ = lookerExploreReferenceBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.geminidataanalytics.v1beta.Datasource) {
        return mergeFrom((com.google.cloud.geminidataanalytics.v1beta.Datasource) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.geminidataanalytics.v1beta.Datasource other) {
      if (other == com.google.cloud.geminidataanalytics.v1beta.Datasource.getDefaultInstance())
        return this;
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      switch (other.getReferenceCase()) {
        case BIGQUERY_TABLE_REFERENCE:
          {
            mergeBigqueryTableReference(other.getBigqueryTableReference());
            break;
          }
        case STUDIO_DATASOURCE_ID:
          {
            referenceCase_ = 2;
            reference_ = other.reference_;
            onChanged();
            break;
          }
        case LOOKER_EXPLORE_REFERENCE:
          {
            mergeLookerExploreReference(other.getLookerExploreReference());
            break;
          }
        case REFERENCE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(
                    getBigqueryTableReferenceFieldBuilder().getBuilder(), extensionRegistry);
                referenceCase_ = 1;
                break;
              } // case 10
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                referenceCase_ = 2;
                reference_ = s;
                break;
              } // case 18
            case 34:
              {
                input.readMessage(
                    getLookerExploreReferenceFieldBuilder().getBuilder(), extensionRegistry);
                referenceCase_ = 4;
                break;
              } // case 34
            case 58:
              {
                input.readMessage(getSchemaFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 58
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int referenceCase_ = 0;
    private java.lang.Object reference_;

    public ReferenceCase getReferenceCase() {
      return ReferenceCase.forNumber(referenceCase_);
    }

    public Builder clearReference() {
      referenceCase_ = 0;
      reference_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference,
            com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceOrBuilder>
        bigqueryTableReferenceBuilder_;

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     *
     * @return Whether the bigqueryTableReference field is set.
     */
    @java.lang.Override
    public boolean hasBigqueryTableReference() {
      return referenceCase_ == 1;
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     *
     * @return The bigqueryTableReference.
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
        getBigqueryTableReference() {
      if (bigqueryTableReferenceBuilder_ == null) {
        if (referenceCase_ == 1) {
          return (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
            .getDefaultInstance();
      } else {
        if (referenceCase_ == 1) {
          return bigqueryTableReferenceBuilder_.getMessage();
        }
        return com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    public Builder setBigqueryTableReference(
        com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference value) {
      if (bigqueryTableReferenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reference_ = value;
        onChanged();
      } else {
        bigqueryTableReferenceBuilder_.setMessage(value);
      }
      referenceCase_ = 1;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    public Builder setBigqueryTableReference(
        com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.Builder
            builderForValue) {
      if (bigqueryTableReferenceBuilder_ == null) {
        reference_ = builderForValue.build();
        onChanged();
      } else {
        bigqueryTableReferenceBuilder_.setMessage(builderForValue.build());
      }
      referenceCase_ = 1;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    public Builder mergeBigqueryTableReference(
        com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference value) {
      if (bigqueryTableReferenceBuilder_ == null) {
        if (referenceCase_ == 1
            && reference_
                != com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
                    .getDefaultInstance()) {
          reference_ =
              com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.newBuilder(
                      (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference)
                          reference_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          reference_ = value;
        }
        onChanged();
      } else {
        if (referenceCase_ == 1) {
          bigqueryTableReferenceBuilder_.mergeFrom(value);
        } else {
          bigqueryTableReferenceBuilder_.setMessage(value);
        }
      }
      referenceCase_ = 1;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    public Builder clearBigqueryTableReference() {
      if (bigqueryTableReferenceBuilder_ == null) {
        if (referenceCase_ == 1) {
          referenceCase_ = 0;
          reference_ = null;
          onChanged();
        }
      } else {
        if (referenceCase_ == 1) {
          referenceCase_ = 0;
          reference_ = null;
        }
        bigqueryTableReferenceBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.Builder
        getBigqueryTableReferenceBuilder() {
      return getBigqueryTableReferenceFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceOrBuilder
        getBigqueryTableReferenceOrBuilder() {
      if ((referenceCase_ == 1) && (bigqueryTableReferenceBuilder_ != null)) {
        return bigqueryTableReferenceBuilder_.getMessageOrBuilder();
      } else {
        if (referenceCase_ == 1) {
          return (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * A reference to a BigQuery table.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference,
            com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceOrBuilder>
        getBigqueryTableReferenceFieldBuilder() {
      if (bigqueryTableReferenceBuilder_ == null) {
        if (!(referenceCase_ == 1)) {
          reference_ =
              com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference
                  .getDefaultInstance();
        }
        bigqueryTableReferenceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference,
                com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference.Builder,
                com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReferenceOrBuilder>(
                (com.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference) reference_,
                getParentForChildren(),
                isClean());
        reference_ = null;
      }
      referenceCase_ = 1;
      onChanged();
      return bigqueryTableReferenceBuilder_;
    }

    /**
     *
     *
     * <pre>
     * A reference to a LookerStudio datasource.
     * </pre>
     *
     * <code>string studio_datasource_id = 2;</code>
     *
     * @return Whether the studioDatasourceId field is set.
     */
    @java.lang.Override
    public boolean hasStudioDatasourceId() {
      return referenceCase_ == 2;
    }

    /**
     *
     *
     * <pre>
     * A reference to a LookerStudio datasource.
     * </pre>
     *
     * <code>string studio_datasource_id = 2;</code>
     *
     * @return The studioDatasourceId.
     */
    @java.lang.Override
    public java.lang.String getStudioDatasourceId() {
      java.lang.Object ref = "";
      if (referenceCase_ == 2) {
        ref = reference_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (referenceCase_ == 2) {
          reference_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * A reference to a LookerStudio datasource.
     * </pre>
     *
     * <code>string studio_datasource_id = 2;</code>
     *
     * @return The bytes for studioDatasourceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getStudioDatasourceIdBytes() {
      java.lang.Object ref = "";
      if (referenceCase_ == 2) {
        ref = reference_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (referenceCase_ == 2) {
          reference_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * A reference to a LookerStudio datasource.
     * </pre>
     *
     * <code>string studio_datasource_id = 2;</code>
     *
     * @param value The studioDatasourceId to set.
     * @return This builder for chaining.
     */
    public Builder setStudioDatasourceId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      referenceCase_ = 2;
      reference_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a LookerStudio datasource.
     * </pre>
     *
     * <code>string studio_datasource_id = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStudioDatasourceId() {
      if (referenceCase_ == 2) {
        referenceCase_ = 0;
        reference_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a LookerStudio datasource.
     * </pre>
     *
     * <code>string studio_datasource_id = 2;</code>
     *
     * @param value The bytes for studioDatasourceId to set.
     * @return This builder for chaining.
     */
    public Builder setStudioDatasourceIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      referenceCase_ = 2;
      reference_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>
        lookerExploreReferenceBuilder_;

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     *
     * @return Whether the lookerExploreReference field is set.
     */
    @java.lang.Override
    public boolean hasLookerExploreReference() {
      return referenceCase_ == 4;
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     *
     * @return The lookerExploreReference.
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
        getLookerExploreReference() {
      if (lookerExploreReferenceBuilder_ == null) {
        if (referenceCase_ == 4) {
          return (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
            .getDefaultInstance();
      } else {
        if (referenceCase_ == 4) {
          return lookerExploreReferenceBuilder_.getMessage();
        }
        return com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    public Builder setLookerExploreReference(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference value) {
      if (lookerExploreReferenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reference_ = value;
        onChanged();
      } else {
        lookerExploreReferenceBuilder_.setMessage(value);
      }
      referenceCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    public Builder setLookerExploreReference(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
            builderForValue) {
      if (lookerExploreReferenceBuilder_ == null) {
        reference_ = builderForValue.build();
        onChanged();
      } else {
        lookerExploreReferenceBuilder_.setMessage(builderForValue.build());
      }
      referenceCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    public Builder mergeLookerExploreReference(
        com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference value) {
      if (lookerExploreReferenceBuilder_ == null) {
        if (referenceCase_ == 4
            && reference_
                != com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
                    .getDefaultInstance()) {
          reference_ =
              com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.newBuilder(
                      (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference)
                          reference_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          reference_ = value;
        }
        onChanged();
      } else {
        if (referenceCase_ == 4) {
          lookerExploreReferenceBuilder_.mergeFrom(value);
        } else {
          lookerExploreReferenceBuilder_.setMessage(value);
        }
      }
      referenceCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    public Builder clearLookerExploreReference() {
      if (lookerExploreReferenceBuilder_ == null) {
        if (referenceCase_ == 4) {
          referenceCase_ = 0;
          reference_ = null;
          onChanged();
        }
      } else {
        if (referenceCase_ == 4) {
          referenceCase_ = 0;
          reference_ = null;
        }
        lookerExploreReferenceBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder
        getLookerExploreReferenceBuilder() {
      return getLookerExploreReferenceFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder
        getLookerExploreReferenceOrBuilder() {
      if ((referenceCase_ == 4) && (lookerExploreReferenceBuilder_ != null)) {
        return lookerExploreReferenceBuilder_.getMessageOrBuilder();
      } else {
        if (referenceCase_ == 4) {
          return (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * A reference to a Looker explore.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>
        getLookerExploreReferenceFieldBuilder() {
      if (lookerExploreReferenceBuilder_ == null) {
        if (!(referenceCase_ == 4)) {
          reference_ =
              com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference
                  .getDefaultInstance();
        }
        lookerExploreReferenceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference,
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference.Builder,
                com.google.cloud.geminidataanalytics.v1beta.LookerExploreReferenceOrBuilder>(
                (com.google.cloud.geminidataanalytics.v1beta.LookerExploreReference) reference_,
                getParentForChildren(),
                isClean());
        reference_ = null;
      }
      referenceCase_ = 4;
      onChanged();
      return lookerExploreReferenceBuilder_;
    }

    private com.google.cloud.geminidataanalytics.v1beta.Schema schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Schema,
            com.google.cloud.geminidataanalytics.v1beta.Schema.Builder,
            com.google.cloud.geminidataanalytics.v1beta.SchemaOrBuilder>
        schemaBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The schema.
     */
    public com.google.cloud.geminidataanalytics.v1beta.Schema getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null
            ? com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance()
            : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setSchema(com.google.cloud.geminidataanalytics.v1beta.Schema value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
      } else {
        schemaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setSchema(
        com.google.cloud.geminidataanalytics.v1beta.Schema.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeSchema(com.google.cloud.geminidataanalytics.v1beta.Schema value) {
      if (schemaBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && schema_ != null
            && schema_ != com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance()) {
          getSchemaBuilder().mergeFrom(value);
        } else {
          schema_ = value;
        }
      } else {
        schemaBuilder_.mergeFrom(value);
      }
      if (schema_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearSchema() {
      bitField0_ = (bitField0_ & ~0x00000008);
      schema_ = null;
      if (schemaBuilder_ != null) {
        schemaBuilder_.dispose();
        schemaBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Schema.Builder getSchemaBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.SchemaOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null
            ? com.google.cloud.geminidataanalytics.v1beta.Schema.getDefaultInstance()
            : schema_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The schema of the datasource.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Schema,
            com.google.cloud.geminidataanalytics.v1beta.Schema.Builder,
            com.google.cloud.geminidataanalytics.v1beta.SchemaOrBuilder>
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.Schema,
                com.google.cloud.geminidataanalytics.v1beta.Schema.Builder,
                com.google.cloud.geminidataanalytics.v1beta.SchemaOrBuilder>(
                getSchema(), getParentForChildren(), isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.geminidataanalytics.v1beta.Datasource)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.geminidataanalytics.v1beta.Datasource)
  private static final com.google.cloud.geminidataanalytics.v1beta.Datasource DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.geminidataanalytics.v1beta.Datasource();
  }

  public static com.google.cloud.geminidataanalytics.v1beta.Datasource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Datasource> PARSER =
      new com.google.protobuf.AbstractParser<Datasource>() {
        @java.lang.Override
        public Datasource parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Datasource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Datasource> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Datasource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
