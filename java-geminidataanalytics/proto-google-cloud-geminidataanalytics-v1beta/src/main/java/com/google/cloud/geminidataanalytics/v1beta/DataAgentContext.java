/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/data_chat_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

/**
 *
 *
 * <pre>
 * Context for the chat request using a data agent.
 * </pre>
 *
 * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.DataAgentContext}
 */
public final class DataAgentContext extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.geminidataanalytics.v1beta.DataAgentContext)
    DataAgentContextOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use DataAgentContext.newBuilder() to construct.
  private DataAgentContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private DataAgentContext() {
    dataAgent_ = "";
    contextVersion_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new DataAgentContext();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_DataAgentContext_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_DataAgentContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.class,
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * List of context versions supported by DCS.
   * There are two versions of context. This is to maintain versioning for the
   * data agent.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion}
   */
  public enum ContextVersion implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Unspecified or unrecognized.
     * </pre>
     *
     * <code>CONTEXT_VERSION_UNSPECIFIED = 0;</code>
     */
    CONTEXT_VERSION_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Using this version, DCS will use the latest staging context for the
     * data agent.
     * </pre>
     *
     * <code>STAGING = 1;</code>
     */
    STAGING(1),
    /**
     *
     *
     * <pre>
     * Using this version, DCS will use the latest published context for the
     * data agent.
     * </pre>
     *
     * <code>PUBLISHED = 2;</code>
     */
    PUBLISHED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Unspecified or unrecognized.
     * </pre>
     *
     * <code>CONTEXT_VERSION_UNSPECIFIED = 0;</code>
     */
    public static final int CONTEXT_VERSION_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Using this version, DCS will use the latest staging context for the
     * data agent.
     * </pre>
     *
     * <code>STAGING = 1;</code>
     */
    public static final int STAGING_VALUE = 1;

    /**
     *
     *
     * <pre>
     * Using this version, DCS will use the latest published context for the
     * data agent.
     * </pre>
     *
     * <code>PUBLISHED = 2;</code>
     */
    public static final int PUBLISHED_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContextVersion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContextVersion forNumber(int value) {
      switch (value) {
        case 0:
          return CONTEXT_VERSION_UNSPECIFIED;
        case 1:
          return STAGING;
        case 2:
          return PUBLISHED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContextVersion> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<ContextVersion> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ContextVersion>() {
          public ContextVersion findValueByNumber(int number) {
            return ContextVersion.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final ContextVersion[] VALUES = values();

    public static ContextVersion valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContextVersion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion)
  }

  private int bitField0_;
  public static final int DATA_AGENT_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object dataAgent_ = "";

  /**
   *
   *
   * <pre>
   * Required. The name of the data agent resource.
   * </pre>
   *
   * <code>
   * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The dataAgent.
   */
  @java.lang.Override
  public java.lang.String getDataAgent() {
    java.lang.Object ref = dataAgent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dataAgent_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. The name of the data agent resource.
   * </pre>
   *
   * <code>
   * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for dataAgent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDataAgentBytes() {
    java.lang.Object ref = dataAgent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      dataAgent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREDENTIALS_FIELD_NUMBER = 2;
  private com.google.cloud.geminidataanalytics.v1beta.Credentials credentials_;

  /**
   *
   *
   * <pre>
   * Optional. The credentials to use when calling the looker datasource
   *
   * Currently supports both oauth token and api keys based credentials, as
   * described in
   * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the credentials field is set.
   */
  @java.lang.Override
  public boolean hasCredentials() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. The credentials to use when calling the looker datasource
   *
   * Currently supports both oauth token and api keys based credentials, as
   * described in
   * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The credentials.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Credentials getCredentials() {
    return credentials_ == null
        ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
        : credentials_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The credentials to use when calling the looker datasource
   *
   * Currently supports both oauth token and api keys based credentials, as
   * described in
   * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder
      getCredentialsOrBuilder() {
    return credentials_ == null
        ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
        : credentials_;
  }

  public static final int CONTEXT_VERSION_FIELD_NUMBER = 3;
  private int contextVersion_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for contextVersion.
   */
  @java.lang.Override
  public int getContextVersionValue() {
    return contextVersion_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The contextVersion.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion
      getContextVersion() {
    com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion result =
        com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion.forNumber(
            contextVersion_);
    return result == null
        ? com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataAgent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dataAgent_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getCredentials());
    }
    if (contextVersion_
        != com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion
            .CONTEXT_VERSION_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(3, contextVersion_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataAgent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dataAgent_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getCredentials());
    }
    if (contextVersion_
        != com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion
            .CONTEXT_VERSION_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, contextVersion_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.geminidataanalytics.v1beta.DataAgentContext)) {
      return super.equals(obj);
    }
    com.google.cloud.geminidataanalytics.v1beta.DataAgentContext other =
        (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) obj;

    if (!getDataAgent().equals(other.getDataAgent())) return false;
    if (hasCredentials() != other.hasCredentials()) return false;
    if (hasCredentials()) {
      if (!getCredentials().equals(other.getCredentials())) return false;
    }
    if (contextVersion_ != other.contextVersion_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DATA_AGENT_FIELD_NUMBER;
    hash = (53 * hash) + getDataAgent().hashCode();
    if (hasCredentials()) {
      hash = (37 * hash) + CREDENTIALS_FIELD_NUMBER;
      hash = (53 * hash) + getCredentials().hashCode();
    }
    hash = (37 * hash) + CONTEXT_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + contextVersion_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.geminidataanalytics.v1beta.DataAgentContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Context for the chat request using a data agent.
   * </pre>
   *
   * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.DataAgentContext}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.geminidataanalytics.v1beta.DataAgentContext)
      com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_DataAgentContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_DataAgentContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.class,
              com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder.class);
    }

    // Construct using com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getCredentialsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      dataAgent_ = "";
      credentials_ = null;
      if (credentialsBuilder_ != null) {
        credentialsBuilder_.dispose();
        credentialsBuilder_ = null;
      }
      contextVersion_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_DataAgentContext_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext
        getDefaultInstanceForType() {
      return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext build() {
      com.google.cloud.geminidataanalytics.v1beta.DataAgentContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext buildPartial() {
      com.google.cloud.geminidataanalytics.v1beta.DataAgentContext result =
          new com.google.cloud.geminidataanalytics.v1beta.DataAgentContext(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.geminidataanalytics.v1beta.DataAgentContext result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.dataAgent_ = dataAgent_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.credentials_ =
            credentialsBuilder_ == null ? credentials_ : credentialsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.contextVersion_ = contextVersion_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) {
        return mergeFrom((com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.geminidataanalytics.v1beta.DataAgentContext other) {
      if (other
          == com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance())
        return this;
      if (!other.getDataAgent().isEmpty()) {
        dataAgent_ = other.dataAgent_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasCredentials()) {
        mergeCredentials(other.getCredentials());
      }
      if (other.contextVersion_ != 0) {
        setContextVersionValue(other.getContextVersionValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                dataAgent_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getCredentialsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 24:
              {
                contextVersion_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object dataAgent_ = "";

    /**
     *
     *
     * <pre>
     * Required. The name of the data agent resource.
     * </pre>
     *
     * <code>
     * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The dataAgent.
     */
    public java.lang.String getDataAgent() {
      java.lang.Object ref = dataAgent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataAgent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The name of the data agent resource.
     * </pre>
     *
     * <code>
     * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for dataAgent.
     */
    public com.google.protobuf.ByteString getDataAgentBytes() {
      java.lang.Object ref = dataAgent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        dataAgent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The name of the data agent resource.
     * </pre>
     *
     * <code>
     * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The dataAgent to set.
     * @return This builder for chaining.
     */
    public Builder setDataAgent(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dataAgent_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The name of the data agent resource.
     * </pre>
     *
     * <code>
     * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDataAgent() {
      dataAgent_ = getDefaultInstance().getDataAgent();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The name of the data agent resource.
     * </pre>
     *
     * <code>
     * string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for dataAgent to set.
     * @return This builder for chaining.
     */
    public Builder setDataAgentBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      dataAgent_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.cloud.geminidataanalytics.v1beta.Credentials credentials_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Credentials,
            com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder,
            com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder>
        credentialsBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the credentials field is set.
     */
    public boolean hasCredentials() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The credentials.
     */
    public com.google.cloud.geminidataanalytics.v1beta.Credentials getCredentials() {
      if (credentialsBuilder_ == null) {
        return credentials_ == null
            ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
            : credentials_;
      } else {
        return credentialsBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setCredentials(com.google.cloud.geminidataanalytics.v1beta.Credentials value) {
      if (credentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        credentials_ = value;
      } else {
        credentialsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setCredentials(
        com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder builderForValue) {
      if (credentialsBuilder_ == null) {
        credentials_ = builderForValue.build();
      } else {
        credentialsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeCredentials(com.google.cloud.geminidataanalytics.v1beta.Credentials value) {
      if (credentialsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && credentials_ != null
            && credentials_
                != com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()) {
          getCredentialsBuilder().mergeFrom(value);
        } else {
          credentials_ = value;
        }
      } else {
        credentialsBuilder_.mergeFrom(value);
      }
      if (credentials_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearCredentials() {
      bitField0_ = (bitField0_ & ~0x00000002);
      credentials_ = null;
      if (credentialsBuilder_ != null) {
        credentialsBuilder_.dispose();
        credentialsBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder getCredentialsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getCredentialsFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder
        getCredentialsOrBuilder() {
      if (credentialsBuilder_ != null) {
        return credentialsBuilder_.getMessageOrBuilder();
      } else {
        return credentials_ == null
            ? com.google.cloud.geminidataanalytics.v1beta.Credentials.getDefaultInstance()
            : credentials_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The credentials to use when calling the looker datasource
     *
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Credentials,
            com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder,
            com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder>
        getCredentialsFieldBuilder() {
      if (credentialsBuilder_ == null) {
        credentialsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.Credentials,
                com.google.cloud.geminidataanalytics.v1beta.Credentials.Builder,
                com.google.cloud.geminidataanalytics.v1beta.CredentialsOrBuilder>(
                getCredentials(), getParentForChildren(), isClean());
        credentials_ = null;
      }
      return credentialsBuilder_;
    }

    private int contextVersion_ = 0;

    /**
     *
     *
     * <pre>
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for contextVersion.
     */
    @java.lang.Override
    public int getContextVersionValue() {
      return contextVersion_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for contextVersion to set.
     * @return This builder for chaining.
     */
    public Builder setContextVersionValue(int value) {
      contextVersion_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The contextVersion.
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion
        getContextVersion() {
      com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion result =
          com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion.forNumber(
              contextVersion_);
      return result == null
          ? com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The contextVersion to set.
     * @return This builder for chaining.
     */
    public Builder setContextVersion(
        com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      contextVersion_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearContextVersion() {
      bitField0_ = (bitField0_ & ~0x00000004);
      contextVersion_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.geminidataanalytics.v1beta.DataAgentContext)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.geminidataanalytics.v1beta.DataAgentContext)
  private static final com.google.cloud.geminidataanalytics.v1beta.DataAgentContext
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.geminidataanalytics.v1beta.DataAgentContext();
  }

  public static com.google.cloud.geminidataanalytics.v1beta.DataAgentContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataAgentContext> PARSER =
      new com.google.protobuf.AbstractParser<DataAgentContext>() {
        @java.lang.Override
        public DataAgentContext parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<DataAgentContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataAgentContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
