/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/credentials.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

public interface OAuthCredentialsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.geminidataanalytics.v1beta.OAuthCredentials)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Secret-based OAuth credentials.
   * </pre>
   *
   * <code>.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBased secret = 2;</code>
   *
   * @return Whether the secret field is set.
   */
  boolean hasSecret();

  /**
   *
   *
   * <pre>
   * Secret-based OAuth credentials.
   * </pre>
   *
   * <code>.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBased secret = 2;</code>
   *
   * @return The secret.
   */
  com.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBased getSecret();

  /**
   *
   *
   * <pre>
   * Secret-based OAuth credentials.
   * </pre>
   *
   * <code>.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBased secret = 2;</code>
   */
  com.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.SecretBasedOrBuilder
      getSecretOrBuilder();

  /**
   *
   *
   * <pre>
   * Token-based OAuth credentials.
   * </pre>
   *
   * <code>.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBased token = 3;</code>
   *
   * @return Whether the token field is set.
   */
  boolean hasToken();

  /**
   *
   *
   * <pre>
   * Token-based OAuth credentials.
   * </pre>
   *
   * <code>.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBased token = 3;</code>
   *
   * @return The token.
   */
  com.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBased getToken();

  /**
   *
   *
   * <pre>
   * Token-based OAuth credentials.
   * </pre>
   *
   * <code>.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBased token = 3;</code>
   */
  com.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.TokenBasedOrBuilder
      getTokenOrBuilder();

  com.google.cloud.geminidataanalytics.v1beta.OAuthCredentials.KindCase getKindCase();
}
