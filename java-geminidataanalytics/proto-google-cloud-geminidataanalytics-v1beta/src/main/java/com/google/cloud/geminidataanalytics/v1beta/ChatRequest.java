/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/geminidataanalytics/v1beta/data_chat_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.geminidataanalytics.v1beta;

/**
 *
 *
 * <pre>
 * Request for Chat.
 * </pre>
 *
 * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.ChatRequest}
 */
public final class ChatRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.geminidataanalytics.v1beta.ChatRequest)
    ChatRequestOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use ChatRequest.newBuilder() to construct.
  private ChatRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ChatRequest() {
    project_ = "";
    parent_ = "";
    messages_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ChatRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_ChatRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
        .internal_static_google_cloud_geminidataanalytics_v1beta_ChatRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.geminidataanalytics.v1beta.ChatRequest.class,
            com.google.cloud.geminidataanalytics.v1beta.ChatRequest.Builder.class);
  }

  private int contextProviderCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object contextProvider_;

  public enum ContextProviderCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    INLINE_CONTEXT(101),
    CONVERSATION_REFERENCE(103),
    DATA_AGENT_CONTEXT(104),
    CONTEXTPROVIDER_NOT_SET(0);
    private final int value;

    private ContextProviderCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContextProviderCase valueOf(int value) {
      return forNumber(value);
    }

    public static ContextProviderCase forNumber(int value) {
      switch (value) {
        case 101:
          return INLINE_CONTEXT;
        case 103:
          return CONVERSATION_REFERENCE;
        case 104:
          return DATA_AGENT_CONTEXT;
        case 0:
          return CONTEXTPROVIDER_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public ContextProviderCase getContextProviderCase() {
    return ContextProviderCase.forNumber(contextProviderCase_);
  }

  public static final int INLINE_CONTEXT_FIELD_NUMBER = 101;

  /**
   *
   *
   * <pre>
   * Optional. Inline context for the chat request. Use this to chat
   * statelessly (without managed conversation persistence and without an
   * Agent) by passing all context inline.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the inlineContext field is set.
   */
  @java.lang.Override
  public boolean hasInlineContext() {
    return contextProviderCase_ == 101;
  }

  /**
   *
   *
   * <pre>
   * Optional. Inline context for the chat request. Use this to chat
   * statelessly (without managed conversation persistence and without an
   * Agent) by passing all context inline.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The inlineContext.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Context getInlineContext() {
    if (contextProviderCase_ == 101) {
      return (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Optional. Inline context for the chat request. Use this to chat
   * statelessly (without managed conversation persistence and without an
   * Agent) by passing all context inline.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.ContextOrBuilder getInlineContextOrBuilder() {
    if (contextProviderCase_ == 101) {
      return (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance();
  }

  public static final int CONVERSATION_REFERENCE_FIELD_NUMBER = 103;

  /**
   *
   *
   * <pre>
   * Optional. Reference to a persisted conversation and agent context.
   * Use this to chat with an Agent using managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the conversationReference field is set.
   */
  @java.lang.Override
  public boolean hasConversationReference() {
    return contextProviderCase_ == 103;
  }

  /**
   *
   *
   * <pre>
   * Optional. Reference to a persisted conversation and agent context.
   * Use this to chat with an Agent using managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The conversationReference.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.ConversationReference
      getConversationReference() {
    if (contextProviderCase_ == 103) {
      return (com.google.cloud.geminidataanalytics.v1beta.ConversationReference) contextProvider_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.ConversationReference.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Optional. Reference to a persisted conversation and agent context.
   * Use this to chat with an Agent using managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.ConversationReferenceOrBuilder
      getConversationReferenceOrBuilder() {
    if (contextProviderCase_ == 103) {
      return (com.google.cloud.geminidataanalytics.v1beta.ConversationReference) contextProvider_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.ConversationReference.getDefaultInstance();
  }

  public static final int DATA_AGENT_CONTEXT_FIELD_NUMBER = 104;

  /**
   *
   *
   * <pre>
   * Optional. Context for the chat request. Use this to chat with an Agent
   * statelessly, without managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the dataAgentContext field is set.
   */
  @java.lang.Override
  public boolean hasDataAgentContext() {
    return contextProviderCase_ == 104;
  }

  /**
   *
   *
   * <pre>
   * Optional. Context for the chat request. Use this to chat with an Agent
   * statelessly, without managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The dataAgentContext.
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext getDataAgentContext() {
    if (contextProviderCase_ == 104) {
      return (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Optional. Context for the chat request. Use this to chat with an Agent
   * statelessly, without managed conversation persistence.
   * </pre>
   *
   * <code>
   * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder
      getDataAgentContextOrBuilder() {
    if (contextProviderCase_ == 104) {
      return (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_;
    }
    return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
  }

  public static final int PROJECT_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object project_ = "";

  /**
   *
   *
   * <pre>
   * Optional. The Google Cloud project to be used for quota and billing.
   * </pre>
   *
   * <code>
   * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
   *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
   * @return The project.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.lang.String getProject() {
    java.lang.Object ref = project_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      project_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. The Google Cloud project to be used for quota and billing.
   * </pre>
   *
   * <code>
   * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
   *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
   * @return The bytes for project.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.protobuf.ByteString getProjectBytes() {
    java.lang.Object ref = project_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      project_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PARENT_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object parent_ = "";

  /**
   *
   *
   * <pre>
   * Required. The parent value for chat request.
   * Pattern: `projects/{project}/locations/{location}`
   * </pre>
   *
   * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. The parent value for chat request.
   * Pattern: `projects/{project}/locations/{location}`
   * </pre>
   *
   * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MESSAGES_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.geminidataanalytics.v1beta.Message> messages_;

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.geminidataanalytics.v1beta.Message> getMessagesList() {
    return messages_;
  }

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder>
      getMessagesOrBuilderList() {
    return messages_;
  }

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public int getMessagesCount() {
    return messages_.size();
  }

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.Message getMessages(int index) {
    return messages_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Required. Content of current conversation.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder getMessagesOrBuilder(
      int index) {
    return messages_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(project_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, project_);
    }
    for (int i = 0; i < messages_.size(); i++) {
      output.writeMessage(2, messages_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parent_);
    }
    if (contextProviderCase_ == 101) {
      output.writeMessage(
          101, (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_);
    }
    if (contextProviderCase_ == 103) {
      output.writeMessage(
          103,
          (com.google.cloud.geminidataanalytics.v1beta.ConversationReference) contextProvider_);
    }
    if (contextProviderCase_ == 104) {
      output.writeMessage(
          104, (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(project_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, project_);
    }
    for (int i = 0; i < messages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, messages_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parent_);
    }
    if (contextProviderCase_ == 101) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              101, (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_);
    }
    if (contextProviderCase_ == 103) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              103,
              (com.google.cloud.geminidataanalytics.v1beta.ConversationReference) contextProvider_);
    }
    if (contextProviderCase_ == 104) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              104, (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.geminidataanalytics.v1beta.ChatRequest)) {
      return super.equals(obj);
    }
    com.google.cloud.geminidataanalytics.v1beta.ChatRequest other =
        (com.google.cloud.geminidataanalytics.v1beta.ChatRequest) obj;

    if (!getProject().equals(other.getProject())) return false;
    if (!getParent().equals(other.getParent())) return false;
    if (!getMessagesList().equals(other.getMessagesList())) return false;
    if (!getContextProviderCase().equals(other.getContextProviderCase())) return false;
    switch (contextProviderCase_) {
      case 101:
        if (!getInlineContext().equals(other.getInlineContext())) return false;
        break;
      case 103:
        if (!getConversationReference().equals(other.getConversationReference())) return false;
        break;
      case 104:
        if (!getDataAgentContext().equals(other.getDataAgentContext())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROJECT_FIELD_NUMBER;
    hash = (53 * hash) + getProject().hashCode();
    hash = (37 * hash) + PARENT_FIELD_NUMBER;
    hash = (53 * hash) + getParent().hashCode();
    if (getMessagesCount() > 0) {
      hash = (37 * hash) + MESSAGES_FIELD_NUMBER;
      hash = (53 * hash) + getMessagesList().hashCode();
    }
    switch (contextProviderCase_) {
      case 101:
        hash = (37 * hash) + INLINE_CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getInlineContext().hashCode();
        break;
      case 103:
        hash = (37 * hash) + CONVERSATION_REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getConversationReference().hashCode();
        break;
      case 104:
        hash = (37 * hash) + DATA_AGENT_CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getDataAgentContext().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.geminidataanalytics.v1beta.ChatRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Request for Chat.
   * </pre>
   *
   * Protobuf type {@code google.cloud.geminidataanalytics.v1beta.ChatRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.geminidataanalytics.v1beta.ChatRequest)
      com.google.cloud.geminidataanalytics.v1beta.ChatRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_ChatRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_ChatRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.geminidataanalytics.v1beta.ChatRequest.class,
              com.google.cloud.geminidataanalytics.v1beta.ChatRequest.Builder.class);
    }

    // Construct using com.google.cloud.geminidataanalytics.v1beta.ChatRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (inlineContextBuilder_ != null) {
        inlineContextBuilder_.clear();
      }
      if (conversationReferenceBuilder_ != null) {
        conversationReferenceBuilder_.clear();
      }
      if (dataAgentContextBuilder_ != null) {
        dataAgentContextBuilder_.clear();
      }
      project_ = "";
      parent_ = "";
      if (messagesBuilder_ == null) {
        messages_ = java.util.Collections.emptyList();
      } else {
        messages_ = null;
        messagesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      contextProviderCase_ = 0;
      contextProvider_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.geminidataanalytics.v1beta.DataChatServiceProto
          .internal_static_google_cloud_geminidataanalytics_v1beta_ChatRequest_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.ChatRequest getDefaultInstanceForType() {
      return com.google.cloud.geminidataanalytics.v1beta.ChatRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.ChatRequest build() {
      com.google.cloud.geminidataanalytics.v1beta.ChatRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.ChatRequest buildPartial() {
      com.google.cloud.geminidataanalytics.v1beta.ChatRequest result =
          new com.google.cloud.geminidataanalytics.v1beta.ChatRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.geminidataanalytics.v1beta.ChatRequest result) {
      if (messagesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.messages_ = messages_;
      } else {
        result.messages_ = messagesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.geminidataanalytics.v1beta.ChatRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.project_ = project_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.parent_ = parent_;
      }
    }

    private void buildPartialOneofs(
        com.google.cloud.geminidataanalytics.v1beta.ChatRequest result) {
      result.contextProviderCase_ = contextProviderCase_;
      result.contextProvider_ = this.contextProvider_;
      if (contextProviderCase_ == 101 && inlineContextBuilder_ != null) {
        result.contextProvider_ = inlineContextBuilder_.build();
      }
      if (contextProviderCase_ == 103 && conversationReferenceBuilder_ != null) {
        result.contextProvider_ = conversationReferenceBuilder_.build();
      }
      if (contextProviderCase_ == 104 && dataAgentContextBuilder_ != null) {
        result.contextProvider_ = dataAgentContextBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.geminidataanalytics.v1beta.ChatRequest) {
        return mergeFrom((com.google.cloud.geminidataanalytics.v1beta.ChatRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.geminidataanalytics.v1beta.ChatRequest other) {
      if (other == com.google.cloud.geminidataanalytics.v1beta.ChatRequest.getDefaultInstance())
        return this;
      if (!other.getProject().isEmpty()) {
        project_ = other.project_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (messagesBuilder_ == null) {
        if (!other.messages_.isEmpty()) {
          if (messages_.isEmpty()) {
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMessagesIsMutable();
            messages_.addAll(other.messages_);
          }
          onChanged();
        }
      } else {
        if (!other.messages_.isEmpty()) {
          if (messagesBuilder_.isEmpty()) {
            messagesBuilder_.dispose();
            messagesBuilder_ = null;
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000020);
            messagesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getMessagesFieldBuilder()
                    : null;
          } else {
            messagesBuilder_.addAllMessages(other.messages_);
          }
        }
      }
      switch (other.getContextProviderCase()) {
        case INLINE_CONTEXT:
          {
            mergeInlineContext(other.getInlineContext());
            break;
          }
        case CONVERSATION_REFERENCE:
          {
            mergeConversationReference(other.getConversationReference());
            break;
          }
        case DATA_AGENT_CONTEXT:
          {
            mergeDataAgentContext(other.getDataAgentContext());
            break;
          }
        case CONTEXTPROVIDER_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                project_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 10
            case 18:
              {
                com.google.cloud.geminidataanalytics.v1beta.Message m =
                    input.readMessage(
                        com.google.cloud.geminidataanalytics.v1beta.Message.parser(),
                        extensionRegistry);
                if (messagesBuilder_ == null) {
                  ensureMessagesIsMutable();
                  messages_.add(m);
                } else {
                  messagesBuilder_.addMessage(m);
                }
                break;
              } // case 18
            case 26:
              {
                parent_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 26
            case 810:
              {
                input.readMessage(getInlineContextFieldBuilder().getBuilder(), extensionRegistry);
                contextProviderCase_ = 101;
                break;
              } // case 810
            case 826:
              {
                input.readMessage(
                    getConversationReferenceFieldBuilder().getBuilder(), extensionRegistry);
                contextProviderCase_ = 103;
                break;
              } // case 826
            case 834:
              {
                input.readMessage(
                    getDataAgentContextFieldBuilder().getBuilder(), extensionRegistry);
                contextProviderCase_ = 104;
                break;
              } // case 834
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int contextProviderCase_ = 0;
    private java.lang.Object contextProvider_;

    public ContextProviderCase getContextProviderCase() {
      return ContextProviderCase.forNumber(contextProviderCase_);
    }

    public Builder clearContextProvider() {
      contextProviderCase_ = 0;
      contextProvider_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Context,
            com.google.cloud.geminidataanalytics.v1beta.Context.Builder,
            com.google.cloud.geminidataanalytics.v1beta.ContextOrBuilder>
        inlineContextBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the inlineContext field is set.
     */
    @java.lang.Override
    public boolean hasInlineContext() {
      return contextProviderCase_ == 101;
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The inlineContext.
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.Context getInlineContext() {
      if (inlineContextBuilder_ == null) {
        if (contextProviderCase_ == 101) {
          return (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance();
      } else {
        if (contextProviderCase_ == 101) {
          return inlineContextBuilder_.getMessage();
        }
        return com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setInlineContext(com.google.cloud.geminidataanalytics.v1beta.Context value) {
      if (inlineContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contextProvider_ = value;
        onChanged();
      } else {
        inlineContextBuilder_.setMessage(value);
      }
      contextProviderCase_ = 101;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setInlineContext(
        com.google.cloud.geminidataanalytics.v1beta.Context.Builder builderForValue) {
      if (inlineContextBuilder_ == null) {
        contextProvider_ = builderForValue.build();
        onChanged();
      } else {
        inlineContextBuilder_.setMessage(builderForValue.build());
      }
      contextProviderCase_ = 101;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeInlineContext(com.google.cloud.geminidataanalytics.v1beta.Context value) {
      if (inlineContextBuilder_ == null) {
        if (contextProviderCase_ == 101
            && contextProvider_
                != com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance()) {
          contextProvider_ =
              com.google.cloud.geminidataanalytics.v1beta.Context.newBuilder(
                      (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          contextProvider_ = value;
        }
        onChanged();
      } else {
        if (contextProviderCase_ == 101) {
          inlineContextBuilder_.mergeFrom(value);
        } else {
          inlineContextBuilder_.setMessage(value);
        }
      }
      contextProviderCase_ = 101;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearInlineContext() {
      if (inlineContextBuilder_ == null) {
        if (contextProviderCase_ == 101) {
          contextProviderCase_ = 0;
          contextProvider_ = null;
          onChanged();
        }
      } else {
        if (contextProviderCase_ == 101) {
          contextProviderCase_ = 0;
          contextProvider_ = null;
        }
        inlineContextBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Context.Builder getInlineContextBuilder() {
      return getInlineContextFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.ContextOrBuilder
        getInlineContextOrBuilder() {
      if ((contextProviderCase_ == 101) && (inlineContextBuilder_ != null)) {
        return inlineContextBuilder_.getMessageOrBuilder();
      } else {
        if (contextProviderCase_ == 101) {
          return (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Inline context for the chat request. Use this to chat
     * statelessly (without managed conversation persistence and without an
     * Agent) by passing all context inline.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.Context inline_context = 101 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Context,
            com.google.cloud.geminidataanalytics.v1beta.Context.Builder,
            com.google.cloud.geminidataanalytics.v1beta.ContextOrBuilder>
        getInlineContextFieldBuilder() {
      if (inlineContextBuilder_ == null) {
        if (!(contextProviderCase_ == 101)) {
          contextProvider_ =
              com.google.cloud.geminidataanalytics.v1beta.Context.getDefaultInstance();
        }
        inlineContextBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.Context,
                com.google.cloud.geminidataanalytics.v1beta.Context.Builder,
                com.google.cloud.geminidataanalytics.v1beta.ContextOrBuilder>(
                (com.google.cloud.geminidataanalytics.v1beta.Context) contextProvider_,
                getParentForChildren(),
                isClean());
        contextProvider_ = null;
      }
      contextProviderCase_ = 101;
      onChanged();
      return inlineContextBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.ConversationReference,
            com.google.cloud.geminidataanalytics.v1beta.ConversationReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.ConversationReferenceOrBuilder>
        conversationReferenceBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the conversationReference field is set.
     */
    @java.lang.Override
    public boolean hasConversationReference() {
      return contextProviderCase_ == 103;
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The conversationReference.
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.ConversationReference
        getConversationReference() {
      if (conversationReferenceBuilder_ == null) {
        if (contextProviderCase_ == 103) {
          return (com.google.cloud.geminidataanalytics.v1beta.ConversationReference)
              contextProvider_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.ConversationReference
            .getDefaultInstance();
      } else {
        if (contextProviderCase_ == 103) {
          return conversationReferenceBuilder_.getMessage();
        }
        return com.google.cloud.geminidataanalytics.v1beta.ConversationReference
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setConversationReference(
        com.google.cloud.geminidataanalytics.v1beta.ConversationReference value) {
      if (conversationReferenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contextProvider_ = value;
        onChanged();
      } else {
        conversationReferenceBuilder_.setMessage(value);
      }
      contextProviderCase_ = 103;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setConversationReference(
        com.google.cloud.geminidataanalytics.v1beta.ConversationReference.Builder builderForValue) {
      if (conversationReferenceBuilder_ == null) {
        contextProvider_ = builderForValue.build();
        onChanged();
      } else {
        conversationReferenceBuilder_.setMessage(builderForValue.build());
      }
      contextProviderCase_ = 103;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeConversationReference(
        com.google.cloud.geminidataanalytics.v1beta.ConversationReference value) {
      if (conversationReferenceBuilder_ == null) {
        if (contextProviderCase_ == 103
            && contextProvider_
                != com.google.cloud.geminidataanalytics.v1beta.ConversationReference
                    .getDefaultInstance()) {
          contextProvider_ =
              com.google.cloud.geminidataanalytics.v1beta.ConversationReference.newBuilder(
                      (com.google.cloud.geminidataanalytics.v1beta.ConversationReference)
                          contextProvider_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          contextProvider_ = value;
        }
        onChanged();
      } else {
        if (contextProviderCase_ == 103) {
          conversationReferenceBuilder_.mergeFrom(value);
        } else {
          conversationReferenceBuilder_.setMessage(value);
        }
      }
      contextProviderCase_ = 103;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearConversationReference() {
      if (conversationReferenceBuilder_ == null) {
        if (contextProviderCase_ == 103) {
          contextProviderCase_ = 0;
          contextProvider_ = null;
          onChanged();
        }
      } else {
        if (contextProviderCase_ == 103) {
          contextProviderCase_ = 0;
          contextProvider_ = null;
        }
        conversationReferenceBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.ConversationReference.Builder
        getConversationReferenceBuilder() {
      return getConversationReferenceFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.ConversationReferenceOrBuilder
        getConversationReferenceOrBuilder() {
      if ((contextProviderCase_ == 103) && (conversationReferenceBuilder_ != null)) {
        return conversationReferenceBuilder_.getMessageOrBuilder();
      } else {
        if (contextProviderCase_ == 103) {
          return (com.google.cloud.geminidataanalytics.v1beta.ConversationReference)
              contextProvider_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.ConversationReference
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Reference to a persisted conversation and agent context.
     * Use this to chat with an Agent using managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.ConversationReference conversation_reference = 103 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.ConversationReference,
            com.google.cloud.geminidataanalytics.v1beta.ConversationReference.Builder,
            com.google.cloud.geminidataanalytics.v1beta.ConversationReferenceOrBuilder>
        getConversationReferenceFieldBuilder() {
      if (conversationReferenceBuilder_ == null) {
        if (!(contextProviderCase_ == 103)) {
          contextProvider_ =
              com.google.cloud.geminidataanalytics.v1beta.ConversationReference
                  .getDefaultInstance();
        }
        conversationReferenceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.ConversationReference,
                com.google.cloud.geminidataanalytics.v1beta.ConversationReference.Builder,
                com.google.cloud.geminidataanalytics.v1beta.ConversationReferenceOrBuilder>(
                (com.google.cloud.geminidataanalytics.v1beta.ConversationReference)
                    contextProvider_,
                getParentForChildren(),
                isClean());
        contextProvider_ = null;
      }
      contextProviderCase_ = 103;
      onChanged();
      return conversationReferenceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContext,
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder,
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder>
        dataAgentContextBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the dataAgentContext field is set.
     */
    @java.lang.Override
    public boolean hasDataAgentContext() {
      return contextProviderCase_ == 104;
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The dataAgentContext.
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext getDataAgentContext() {
      if (dataAgentContextBuilder_ == null) {
        if (contextProviderCase_ == 104) {
          return (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
      } else {
        if (contextProviderCase_ == 104) {
          return dataAgentContextBuilder_.getMessage();
        }
        return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDataAgentContext(
        com.google.cloud.geminidataanalytics.v1beta.DataAgentContext value) {
      if (dataAgentContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contextProvider_ = value;
        onChanged();
      } else {
        dataAgentContextBuilder_.setMessage(value);
      }
      contextProviderCase_ = 104;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDataAgentContext(
        com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder builderForValue) {
      if (dataAgentContextBuilder_ == null) {
        contextProvider_ = builderForValue.build();
        onChanged();
      } else {
        dataAgentContextBuilder_.setMessage(builderForValue.build());
      }
      contextProviderCase_ = 104;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeDataAgentContext(
        com.google.cloud.geminidataanalytics.v1beta.DataAgentContext value) {
      if (dataAgentContextBuilder_ == null) {
        if (contextProviderCase_ == 104
            && contextProvider_
                != com.google.cloud.geminidataanalytics.v1beta.DataAgentContext
                    .getDefaultInstance()) {
          contextProvider_ =
              com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.newBuilder(
                      (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext)
                          contextProvider_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          contextProvider_ = value;
        }
        onChanged();
      } else {
        if (contextProviderCase_ == 104) {
          dataAgentContextBuilder_.mergeFrom(value);
        } else {
          dataAgentContextBuilder_.setMessage(value);
        }
      }
      contextProviderCase_ = 104;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearDataAgentContext() {
      if (dataAgentContextBuilder_ == null) {
        if (contextProviderCase_ == 104) {
          contextProviderCase_ = 0;
          contextProvider_ = null;
          onChanged();
        }
      } else {
        if (contextProviderCase_ == 104) {
          contextProviderCase_ = 0;
          contextProvider_ = null;
        }
        dataAgentContextBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder
        getDataAgentContextBuilder() {
      return getDataAgentContextFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder
        getDataAgentContextOrBuilder() {
      if ((contextProviderCase_ == 104) && (dataAgentContextBuilder_ != null)) {
        return dataAgentContextBuilder_.getMessageOrBuilder();
      } else {
        if (contextProviderCase_ == 104) {
          return (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_;
        }
        return com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Context for the chat request. Use this to chat with an Agent
     * statelessly, without managed conversation persistence.
     * </pre>
     *
     * <code>
     * .google.cloud.geminidataanalytics.v1beta.DataAgentContext data_agent_context = 104 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContext,
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder,
            com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder>
        getDataAgentContextFieldBuilder() {
      if (dataAgentContextBuilder_ == null) {
        if (!(contextProviderCase_ == 104)) {
          contextProvider_ =
              com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.getDefaultInstance();
        }
        dataAgentContextBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.DataAgentContext,
                com.google.cloud.geminidataanalytics.v1beta.DataAgentContext.Builder,
                com.google.cloud.geminidataanalytics.v1beta.DataAgentContextOrBuilder>(
                (com.google.cloud.geminidataanalytics.v1beta.DataAgentContext) contextProvider_,
                getParentForChildren(),
                isClean());
        contextProvider_ = null;
      }
      contextProviderCase_ = 104;
      onChanged();
      return dataAgentContextBuilder_;
    }

    private java.lang.Object project_ = "";

    /**
     *
     *
     * <pre>
     * Optional. The Google Cloud project to be used for quota and billing.
     * </pre>
     *
     * <code>
     * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
     *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
     * @return The project.
     */
    @java.lang.Deprecated
    public java.lang.String getProject() {
      java.lang.Object ref = project_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        project_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The Google Cloud project to be used for quota and billing.
     * </pre>
     *
     * <code>
     * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
     *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
     * @return The bytes for project.
     */
    @java.lang.Deprecated
    public com.google.protobuf.ByteString getProjectBytes() {
      java.lang.Object ref = project_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        project_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The Google Cloud project to be used for quota and billing.
     * </pre>
     *
     * <code>
     * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
     *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
     * @param value The project to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setProject(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      project_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The Google Cloud project to be used for quota and billing.
     * </pre>
     *
     * <code>
     * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
     *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder clearProject() {
      project_ = getDefaultInstance().getProject();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The Google Cloud project to be used for quota and billing.
     * </pre>
     *
     * <code>
     * string project = 1 [deprecated = true, (.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @deprecated google.cloud.geminidataanalytics.v1beta.ChatRequest.project is deprecated. See
     *     google/cloud/geminidataanalytics/v1beta/data_chat_service.proto;l=164
     * @param value The bytes for project to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setProjectBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      project_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object parent_ = "";

    /**
     *
     *
     * <pre>
     * Required. The parent value for chat request.
     * Pattern: `projects/{project}/locations/{location}`
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The parent.
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The parent value for chat request.
     * Pattern: `projects/{project}/locations/{location}`
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for parent.
     */
    public com.google.protobuf.ByteString getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The parent value for chat request.
     * Pattern: `projects/{project}/locations/{location}`
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parent_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The parent value for chat request.
     * Pattern: `projects/{project}/locations/{location}`
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      parent_ = getDefaultInstance().getParent();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The parent value for chat request.
     * Pattern: `projects/{project}/locations/{location}`
     * </pre>
     *
     * <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      parent_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.geminidataanalytics.v1beta.Message> messages_ =
        java.util.Collections.emptyList();

    private void ensureMessagesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        messages_ =
            new java.util.ArrayList<com.google.cloud.geminidataanalytics.v1beta.Message>(messages_);
        bitField0_ |= 0x00000020;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Message,
            com.google.cloud.geminidataanalytics.v1beta.Message.Builder,
            com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder>
        messagesBuilder_;

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.Message> getMessagesList() {
      if (messagesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(messages_);
      } else {
        return messagesBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public int getMessagesCount() {
      if (messagesBuilder_ == null) {
        return messages_.size();
      } else {
        return messagesBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Message getMessages(int index) {
      if (messagesBuilder_ == null) {
        return messages_.get(index);
      } else {
        return messagesBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setMessages(
        int index, com.google.cloud.geminidataanalytics.v1beta.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.set(index, value);
        onChanged();
      } else {
        messagesBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setMessages(
        int index, com.google.cloud.geminidataanalytics.v1beta.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.set(index, builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addMessages(com.google.cloud.geminidataanalytics.v1beta.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(value);
        onChanged();
      } else {
        messagesBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addMessages(
        int index, com.google.cloud.geminidataanalytics.v1beta.Message value) {
      if (messagesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(index, value);
        onChanged();
      } else {
        messagesBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addMessages(
        com.google.cloud.geminidataanalytics.v1beta.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.add(builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addMessages(
        int index, com.google.cloud.geminidataanalytics.v1beta.Message.Builder builderForValue) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.add(index, builderForValue.build());
        onChanged();
      } else {
        messagesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder addAllMessages(
        java.lang.Iterable<? extends com.google.cloud.geminidataanalytics.v1beta.Message> values) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, messages_);
        onChanged();
      } else {
        messagesBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearMessages() {
      if (messagesBuilder_ == null) {
        messages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        messagesBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder removeMessages(int index) {
      if (messagesBuilder_ == null) {
        ensureMessagesIsMutable();
        messages_.remove(index);
        onChanged();
      } else {
        messagesBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Message.Builder getMessagesBuilder(
        int index) {
      return getMessagesFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder getMessagesOrBuilder(
        int index) {
      if (messagesBuilder_ == null) {
        return messages_.get(index);
      } else {
        return messagesBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder>
        getMessagesOrBuilderList() {
      if (messagesBuilder_ != null) {
        return messagesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(messages_);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Message.Builder addMessagesBuilder() {
      return getMessagesFieldBuilder()
          .addBuilder(com.google.cloud.geminidataanalytics.v1beta.Message.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.geminidataanalytics.v1beta.Message.Builder addMessagesBuilder(
        int index) {
      return getMessagesFieldBuilder()
          .addBuilder(
              index, com.google.cloud.geminidataanalytics.v1beta.Message.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Required. Content of current conversation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.geminidataanalytics.v1beta.Message messages = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public java.util.List<com.google.cloud.geminidataanalytics.v1beta.Message.Builder>
        getMessagesBuilderList() {
      return getMessagesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.geminidataanalytics.v1beta.Message,
            com.google.cloud.geminidataanalytics.v1beta.Message.Builder,
            com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder>
        getMessagesFieldBuilder() {
      if (messagesBuilder_ == null) {
        messagesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.geminidataanalytics.v1beta.Message,
                com.google.cloud.geminidataanalytics.v1beta.Message.Builder,
                com.google.cloud.geminidataanalytics.v1beta.MessageOrBuilder>(
                messages_, ((bitField0_ & 0x00000020) != 0), getParentForChildren(), isClean());
        messages_ = null;
      }
      return messagesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.geminidataanalytics.v1beta.ChatRequest)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.geminidataanalytics.v1beta.ChatRequest)
  private static final com.google.cloud.geminidataanalytics.v1beta.ChatRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.geminidataanalytics.v1beta.ChatRequest();
  }

  public static com.google.cloud.geminidataanalytics.v1beta.ChatRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ChatRequest> PARSER =
      new com.google.protobuf.AbstractParser<ChatRequest>() {
        @java.lang.Override
        public ChatRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ChatRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChatRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.geminidataanalytics.v1beta.ChatRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
