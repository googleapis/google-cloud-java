/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/dataflow/v1beta3/streaming.proto

// Protobuf Java Version: 3.25.5
package com.google.dataflow.v1beta3;

public interface TopologyConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.dataflow.v1beta3.TopologyConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The computations associated with a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.ComputationTopology computations = 1;</code>
   */
  java.util.List<com.google.dataflow.v1beta3.ComputationTopology> getComputationsList();
  /**
   *
   *
   * <pre>
   * The computations associated with a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.ComputationTopology computations = 1;</code>
   */
  com.google.dataflow.v1beta3.ComputationTopology getComputations(int index);
  /**
   *
   *
   * <pre>
   * The computations associated with a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.ComputationTopology computations = 1;</code>
   */
  int getComputationsCount();
  /**
   *
   *
   * <pre>
   * The computations associated with a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.ComputationTopology computations = 1;</code>
   */
  java.util.List<? extends com.google.dataflow.v1beta3.ComputationTopologyOrBuilder>
      getComputationsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The computations associated with a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.ComputationTopology computations = 1;</code>
   */
  com.google.dataflow.v1beta3.ComputationTopologyOrBuilder getComputationsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The disks assigned to a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.DataDiskAssignment data_disk_assignments = 2;</code>
   */
  java.util.List<com.google.dataflow.v1beta3.DataDiskAssignment> getDataDiskAssignmentsList();
  /**
   *
   *
   * <pre>
   * The disks assigned to a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.DataDiskAssignment data_disk_assignments = 2;</code>
   */
  com.google.dataflow.v1beta3.DataDiskAssignment getDataDiskAssignments(int index);
  /**
   *
   *
   * <pre>
   * The disks assigned to a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.DataDiskAssignment data_disk_assignments = 2;</code>
   */
  int getDataDiskAssignmentsCount();
  /**
   *
   *
   * <pre>
   * The disks assigned to a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.DataDiskAssignment data_disk_assignments = 2;</code>
   */
  java.util.List<? extends com.google.dataflow.v1beta3.DataDiskAssignmentOrBuilder>
      getDataDiskAssignmentsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The disks assigned to a streaming Dataflow job.
   * </pre>
   *
   * <code>repeated .google.dataflow.v1beta3.DataDiskAssignment data_disk_assignments = 2;</code>
   */
  com.google.dataflow.v1beta3.DataDiskAssignmentOrBuilder getDataDiskAssignmentsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Maps user stage names to stable computation names.
   * </pre>
   *
   * <code>map&lt;string, string&gt; user_stage_to_computation_name_map = 3;</code>
   */
  int getUserStageToComputationNameMapCount();
  /**
   *
   *
   * <pre>
   * Maps user stage names to stable computation names.
   * </pre>
   *
   * <code>map&lt;string, string&gt; user_stage_to_computation_name_map = 3;</code>
   */
  boolean containsUserStageToComputationNameMap(java.lang.String key);
  /** Use {@link #getUserStageToComputationNameMapMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getUserStageToComputationNameMap();
  /**
   *
   *
   * <pre>
   * Maps user stage names to stable computation names.
   * </pre>
   *
   * <code>map&lt;string, string&gt; user_stage_to_computation_name_map = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getUserStageToComputationNameMapMap();
  /**
   *
   *
   * <pre>
   * Maps user stage names to stable computation names.
   * </pre>
   *
   * <code>map&lt;string, string&gt; user_stage_to_computation_name_map = 3;</code>
   */
  /* nullable */
  java.lang.String getUserStageToComputationNameMapOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);
  /**
   *
   *
   * <pre>
   * Maps user stage names to stable computation names.
   * </pre>
   *
   * <code>map&lt;string, string&gt; user_stage_to_computation_name_map = 3;</code>
   */
  java.lang.String getUserStageToComputationNameMapOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * The size (in bits) of keys that will be assigned to source messages.
   * </pre>
   *
   * <code>int32 forwarding_key_bits = 4;</code>
   *
   * @return The forwardingKeyBits.
   */
  int getForwardingKeyBits();

  /**
   *
   *
   * <pre>
   * Version number for persistent state.
   * </pre>
   *
   * <code>int32 persistent_state_version = 5;</code>
   *
   * @return The persistentStateVersion.
   */
  int getPersistentStateVersion();
}
