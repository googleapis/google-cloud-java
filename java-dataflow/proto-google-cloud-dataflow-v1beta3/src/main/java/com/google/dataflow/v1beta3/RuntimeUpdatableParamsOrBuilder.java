/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/dataflow/v1beta3/jobs.proto

// Protobuf Java Version: 3.25.5
package com.google.dataflow.v1beta3;

public interface RuntimeUpdatableParamsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.dataflow.v1beta3.RuntimeUpdatableParams)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The maximum number of workers to cap autoscaling at. This field is
   * currently only supported for Streaming Engine jobs.
   * </pre>
   *
   * <code>optional int32 max_num_workers = 1;</code>
   *
   * @return Whether the maxNumWorkers field is set.
   */
  boolean hasMaxNumWorkers();

  /**
   *
   *
   * <pre>
   * The maximum number of workers to cap autoscaling at. This field is
   * currently only supported for Streaming Engine jobs.
   * </pre>
   *
   * <code>optional int32 max_num_workers = 1;</code>
   *
   * @return The maxNumWorkers.
   */
  int getMaxNumWorkers();

  /**
   *
   *
   * <pre>
   * The minimum number of workers to scale down to. This field is currently
   * only supported for Streaming Engine jobs.
   * </pre>
   *
   * <code>optional int32 min_num_workers = 2;</code>
   *
   * @return Whether the minNumWorkers field is set.
   */
  boolean hasMinNumWorkers();

  /**
   *
   *
   * <pre>
   * The minimum number of workers to scale down to. This field is currently
   * only supported for Streaming Engine jobs.
   * </pre>
   *
   * <code>optional int32 min_num_workers = 2;</code>
   *
   * @return The minNumWorkers.
   */
  int getMinNumWorkers();

  /**
   *
   *
   * <pre>
   * Target worker utilization, compared against the aggregate utilization of
   * the worker pool by autoscaler, to determine upscaling and downscaling when
   * absent other constraints such as backlog.
   * For more information, see
   * [Update an existing
   * pipeline](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline).
   * </pre>
   *
   * <code>optional double worker_utilization_hint = 3;</code>
   *
   * @return Whether the workerUtilizationHint field is set.
   */
  boolean hasWorkerUtilizationHint();

  /**
   *
   *
   * <pre>
   * Target worker utilization, compared against the aggregate utilization of
   * the worker pool by autoscaler, to determine upscaling and downscaling when
   * absent other constraints such as backlog.
   * For more information, see
   * [Update an existing
   * pipeline](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline).
   * </pre>
   *
   * <code>optional double worker_utilization_hint = 3;</code>
   *
   * @return The workerUtilizationHint.
   */
  double getWorkerUtilizationHint();
}
