/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/dataflow/v1beta3/environment.proto

// Protobuf Java Version: 3.25.5
package com.google.dataflow.v1beta3;

/**
 *
 *
 * <pre>
 * Taskrunner configuration settings.
 * </pre>
 *
 * Protobuf type {@code google.dataflow.v1beta3.TaskRunnerSettings}
 */
public final class TaskRunnerSettings extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.dataflow.v1beta3.TaskRunnerSettings)
    TaskRunnerSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use TaskRunnerSettings.newBuilder() to construct.
  private TaskRunnerSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private TaskRunnerSettings() {
    taskUser_ = "";
    taskGroup_ = "";
    oauthScopes_ = com.google.protobuf.LazyStringArrayList.emptyList();
    baseUrl_ = "";
    dataflowApiVersion_ = "";
    baseTaskDir_ = "";
    logUploadLocation_ = "";
    logDir_ = "";
    tempStoragePrefix_ = "";
    harnessCommand_ = "";
    workflowFileName_ = "";
    commandlinesFileName_ = "";
    vmId_ = "";
    languageHint_ = "";
    streamingWorkerMainClass_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new TaskRunnerSettings();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.dataflow.v1beta3.EnvironmentProto
        .internal_static_google_dataflow_v1beta3_TaskRunnerSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.dataflow.v1beta3.EnvironmentProto
        .internal_static_google_dataflow_v1beta3_TaskRunnerSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.dataflow.v1beta3.TaskRunnerSettings.class,
            com.google.dataflow.v1beta3.TaskRunnerSettings.Builder.class);
  }

  private int bitField0_;
  public static final int TASK_USER_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object taskUser_ = "";
  /**
   *
   *
   * <pre>
   * The UNIX user ID on the worker VM to use for tasks launched by
   * taskrunner; e.g. "root".
   * </pre>
   *
   * <code>string task_user = 1;</code>
   *
   * @return The taskUser.
   */
  @java.lang.Override
  public java.lang.String getTaskUser() {
    java.lang.Object ref = taskUser_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      taskUser_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The UNIX user ID on the worker VM to use for tasks launched by
   * taskrunner; e.g. "root".
   * </pre>
   *
   * <code>string task_user = 1;</code>
   *
   * @return The bytes for taskUser.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTaskUserBytes() {
    java.lang.Object ref = taskUser_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      taskUser_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TASK_GROUP_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object taskGroup_ = "";
  /**
   *
   *
   * <pre>
   * The UNIX group ID on the worker VM to use for tasks launched by
   * taskrunner; e.g. "wheel".
   * </pre>
   *
   * <code>string task_group = 2;</code>
   *
   * @return The taskGroup.
   */
  @java.lang.Override
  public java.lang.String getTaskGroup() {
    java.lang.Object ref = taskGroup_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      taskGroup_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The UNIX group ID on the worker VM to use for tasks launched by
   * taskrunner; e.g. "wheel".
   * </pre>
   *
   * <code>string task_group = 2;</code>
   *
   * @return The bytes for taskGroup.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTaskGroupBytes() {
    java.lang.Object ref = taskGroup_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      taskGroup_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OAUTH_SCOPES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList oauthScopes_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * The OAuth2 scopes to be requested by the taskrunner in order to
   * access the Cloud Dataflow API.
   * </pre>
   *
   * <code>repeated string oauth_scopes = 3;</code>
   *
   * @return A list containing the oauthScopes.
   */
  public com.google.protobuf.ProtocolStringList getOauthScopesList() {
    return oauthScopes_;
  }
  /**
   *
   *
   * <pre>
   * The OAuth2 scopes to be requested by the taskrunner in order to
   * access the Cloud Dataflow API.
   * </pre>
   *
   * <code>repeated string oauth_scopes = 3;</code>
   *
   * @return The count of oauthScopes.
   */
  public int getOauthScopesCount() {
    return oauthScopes_.size();
  }
  /**
   *
   *
   * <pre>
   * The OAuth2 scopes to be requested by the taskrunner in order to
   * access the Cloud Dataflow API.
   * </pre>
   *
   * <code>repeated string oauth_scopes = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The oauthScopes at the given index.
   */
  public java.lang.String getOauthScopes(int index) {
    return oauthScopes_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The OAuth2 scopes to be requested by the taskrunner in order to
   * access the Cloud Dataflow API.
   * </pre>
   *
   * <code>repeated string oauth_scopes = 3;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the oauthScopes at the given index.
   */
  public com.google.protobuf.ByteString getOauthScopesBytes(int index) {
    return oauthScopes_.getByteString(index);
  }

  public static final int BASE_URL_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object baseUrl_ = "";
  /**
   *
   *
   * <pre>
   * The base URL for the taskrunner to use when accessing Google Cloud APIs.
   *
   * When workers access Google Cloud APIs, they logically do so via
   * relative URLs.  If this field is specified, it supplies the base
   * URL to use for resolving these relative URLs.  The normative
   * algorithm used is defined by RFC 1808, "Relative Uniform Resource
   * Locators".
   *
   * If not specified, the default value is "http://www.googleapis.com/"
   * </pre>
   *
   * <code>string base_url = 4;</code>
   *
   * @return The baseUrl.
   */
  @java.lang.Override
  public java.lang.String getBaseUrl() {
    java.lang.Object ref = baseUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      baseUrl_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The base URL for the taskrunner to use when accessing Google Cloud APIs.
   *
   * When workers access Google Cloud APIs, they logically do so via
   * relative URLs.  If this field is specified, it supplies the base
   * URL to use for resolving these relative URLs.  The normative
   * algorithm used is defined by RFC 1808, "Relative Uniform Resource
   * Locators".
   *
   * If not specified, the default value is "http://www.googleapis.com/"
   * </pre>
   *
   * <code>string base_url = 4;</code>
   *
   * @return The bytes for baseUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBaseUrlBytes() {
    java.lang.Object ref = baseUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      baseUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DATAFLOW_API_VERSION_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object dataflowApiVersion_ = "";
  /**
   *
   *
   * <pre>
   * The API version of endpoint, e.g. "v1b3"
   * </pre>
   *
   * <code>string dataflow_api_version = 5;</code>
   *
   * @return The dataflowApiVersion.
   */
  @java.lang.Override
  public java.lang.String getDataflowApiVersion() {
    java.lang.Object ref = dataflowApiVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dataflowApiVersion_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The API version of endpoint, e.g. "v1b3"
   * </pre>
   *
   * <code>string dataflow_api_version = 5;</code>
   *
   * @return The bytes for dataflowApiVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDataflowApiVersionBytes() {
    java.lang.Object ref = dataflowApiVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      dataflowApiVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PARALLEL_WORKER_SETTINGS_FIELD_NUMBER = 6;
  private com.google.dataflow.v1beta3.WorkerSettings parallelWorkerSettings_;
  /**
   *
   *
   * <pre>
   * The settings to pass to the parallel worker harness.
   * </pre>
   *
   * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
   *
   * @return Whether the parallelWorkerSettings field is set.
   */
  @java.lang.Override
  public boolean hasParallelWorkerSettings() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The settings to pass to the parallel worker harness.
   * </pre>
   *
   * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
   *
   * @return The parallelWorkerSettings.
   */
  @java.lang.Override
  public com.google.dataflow.v1beta3.WorkerSettings getParallelWorkerSettings() {
    return parallelWorkerSettings_ == null
        ? com.google.dataflow.v1beta3.WorkerSettings.getDefaultInstance()
        : parallelWorkerSettings_;
  }
  /**
   *
   *
   * <pre>
   * The settings to pass to the parallel worker harness.
   * </pre>
   *
   * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
   */
  @java.lang.Override
  public com.google.dataflow.v1beta3.WorkerSettingsOrBuilder getParallelWorkerSettingsOrBuilder() {
    return parallelWorkerSettings_ == null
        ? com.google.dataflow.v1beta3.WorkerSettings.getDefaultInstance()
        : parallelWorkerSettings_;
  }

  public static final int BASE_TASK_DIR_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private volatile java.lang.Object baseTaskDir_ = "";
  /**
   *
   *
   * <pre>
   * The location on the worker for task-specific subdirectories.
   * </pre>
   *
   * <code>string base_task_dir = 7;</code>
   *
   * @return The baseTaskDir.
   */
  @java.lang.Override
  public java.lang.String getBaseTaskDir() {
    java.lang.Object ref = baseTaskDir_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      baseTaskDir_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The location on the worker for task-specific subdirectories.
   * </pre>
   *
   * <code>string base_task_dir = 7;</code>
   *
   * @return The bytes for baseTaskDir.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBaseTaskDirBytes() {
    java.lang.Object ref = baseTaskDir_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      baseTaskDir_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTINUE_ON_EXCEPTION_FIELD_NUMBER = 8;
  private boolean continueOnException_ = false;
  /**
   *
   *
   * <pre>
   * Whether to continue taskrunner if an exception is hit.
   * </pre>
   *
   * <code>bool continue_on_exception = 8;</code>
   *
   * @return The continueOnException.
   */
  @java.lang.Override
  public boolean getContinueOnException() {
    return continueOnException_;
  }

  public static final int LOG_TO_SERIALCONSOLE_FIELD_NUMBER = 9;
  private boolean logToSerialconsole_ = false;
  /**
   *
   *
   * <pre>
   * Whether to send taskrunner log info to Google Compute Engine VM serial
   * console.
   * </pre>
   *
   * <code>bool log_to_serialconsole = 9;</code>
   *
   * @return The logToSerialconsole.
   */
  @java.lang.Override
  public boolean getLogToSerialconsole() {
    return logToSerialconsole_;
  }

  public static final int ALSOLOGTOSTDERR_FIELD_NUMBER = 10;
  private boolean alsologtostderr_ = false;
  /**
   *
   *
   * <pre>
   * Whether to also send taskrunner log info to stderr.
   * </pre>
   *
   * <code>bool alsologtostderr = 10;</code>
   *
   * @return The alsologtostderr.
   */
  @java.lang.Override
  public boolean getAlsologtostderr() {
    return alsologtostderr_;
  }

  public static final int LOG_UPLOAD_LOCATION_FIELD_NUMBER = 11;

  @SuppressWarnings("serial")
  private volatile java.lang.Object logUploadLocation_ = "";
  /**
   *
   *
   * <pre>
   * Indicates where to put logs.  If this is not specified, the logs
   * will not be uploaded.
   *
   * The supported resource type is:
   *
   * Google Cloud Storage:
   *   storage.googleapis.com/{bucket}/{object}
   *   bucket.storage.googleapis.com/{object}
   * </pre>
   *
   * <code>string log_upload_location = 11;</code>
   *
   * @return The logUploadLocation.
   */
  @java.lang.Override
  public java.lang.String getLogUploadLocation() {
    java.lang.Object ref = logUploadLocation_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logUploadLocation_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Indicates where to put logs.  If this is not specified, the logs
   * will not be uploaded.
   *
   * The supported resource type is:
   *
   * Google Cloud Storage:
   *   storage.googleapis.com/{bucket}/{object}
   *   bucket.storage.googleapis.com/{object}
   * </pre>
   *
   * <code>string log_upload_location = 11;</code>
   *
   * @return The bytes for logUploadLocation.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLogUploadLocationBytes() {
    java.lang.Object ref = logUploadLocation_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      logUploadLocation_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOG_DIR_FIELD_NUMBER = 12;

  @SuppressWarnings("serial")
  private volatile java.lang.Object logDir_ = "";
  /**
   *
   *
   * <pre>
   * The directory on the VM to store logs.
   * </pre>
   *
   * <code>string log_dir = 12;</code>
   *
   * @return The logDir.
   */
  @java.lang.Override
  public java.lang.String getLogDir() {
    java.lang.Object ref = logDir_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logDir_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The directory on the VM to store logs.
   * </pre>
   *
   * <code>string log_dir = 12;</code>
   *
   * @return The bytes for logDir.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLogDirBytes() {
    java.lang.Object ref = logDir_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      logDir_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TEMP_STORAGE_PREFIX_FIELD_NUMBER = 13;

  @SuppressWarnings("serial")
  private volatile java.lang.Object tempStoragePrefix_ = "";
  /**
   *
   *
   * <pre>
   * The prefix of the resources the taskrunner should use for
   * temporary storage.
   *
   * The supported resource type is:
   *
   * Google Cloud Storage:
   *   storage.googleapis.com/{bucket}/{object}
   *   bucket.storage.googleapis.com/{object}
   * </pre>
   *
   * <code>string temp_storage_prefix = 13;</code>
   *
   * @return The tempStoragePrefix.
   */
  @java.lang.Override
  public java.lang.String getTempStoragePrefix() {
    java.lang.Object ref = tempStoragePrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tempStoragePrefix_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The prefix of the resources the taskrunner should use for
   * temporary storage.
   *
   * The supported resource type is:
   *
   * Google Cloud Storage:
   *   storage.googleapis.com/{bucket}/{object}
   *   bucket.storage.googleapis.com/{object}
   * </pre>
   *
   * <code>string temp_storage_prefix = 13;</code>
   *
   * @return The bytes for tempStoragePrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTempStoragePrefixBytes() {
    java.lang.Object ref = tempStoragePrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      tempStoragePrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HARNESS_COMMAND_FIELD_NUMBER = 14;

  @SuppressWarnings("serial")
  private volatile java.lang.Object harnessCommand_ = "";
  /**
   *
   *
   * <pre>
   * The command to launch the worker harness.
   * </pre>
   *
   * <code>string harness_command = 14;</code>
   *
   * @return The harnessCommand.
   */
  @java.lang.Override
  public java.lang.String getHarnessCommand() {
    java.lang.Object ref = harnessCommand_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      harnessCommand_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The command to launch the worker harness.
   * </pre>
   *
   * <code>string harness_command = 14;</code>
   *
   * @return The bytes for harnessCommand.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getHarnessCommandBytes() {
    java.lang.Object ref = harnessCommand_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      harnessCommand_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WORKFLOW_FILE_NAME_FIELD_NUMBER = 15;

  @SuppressWarnings("serial")
  private volatile java.lang.Object workflowFileName_ = "";
  /**
   *
   *
   * <pre>
   * The file to store the workflow in.
   * </pre>
   *
   * <code>string workflow_file_name = 15;</code>
   *
   * @return The workflowFileName.
   */
  @java.lang.Override
  public java.lang.String getWorkflowFileName() {
    java.lang.Object ref = workflowFileName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      workflowFileName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The file to store the workflow in.
   * </pre>
   *
   * <code>string workflow_file_name = 15;</code>
   *
   * @return The bytes for workflowFileName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getWorkflowFileNameBytes() {
    java.lang.Object ref = workflowFileName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      workflowFileName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMMANDLINES_FILE_NAME_FIELD_NUMBER = 16;

  @SuppressWarnings("serial")
  private volatile java.lang.Object commandlinesFileName_ = "";
  /**
   *
   *
   * <pre>
   * The file to store preprocessing commands in.
   * </pre>
   *
   * <code>string commandlines_file_name = 16;</code>
   *
   * @return The commandlinesFileName.
   */
  @java.lang.Override
  public java.lang.String getCommandlinesFileName() {
    java.lang.Object ref = commandlinesFileName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      commandlinesFileName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The file to store preprocessing commands in.
   * </pre>
   *
   * <code>string commandlines_file_name = 16;</code>
   *
   * @return The bytes for commandlinesFileName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCommandlinesFileNameBytes() {
    java.lang.Object ref = commandlinesFileName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      commandlinesFileName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VM_ID_FIELD_NUMBER = 17;

  @SuppressWarnings("serial")
  private volatile java.lang.Object vmId_ = "";
  /**
   *
   *
   * <pre>
   * The ID string of the VM.
   * </pre>
   *
   * <code>string vm_id = 17;</code>
   *
   * @return The vmId.
   */
  @java.lang.Override
  public java.lang.String getVmId() {
    java.lang.Object ref = vmId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vmId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The ID string of the VM.
   * </pre>
   *
   * <code>string vm_id = 17;</code>
   *
   * @return The bytes for vmId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getVmIdBytes() {
    java.lang.Object ref = vmId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      vmId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LANGUAGE_HINT_FIELD_NUMBER = 18;

  @SuppressWarnings("serial")
  private volatile java.lang.Object languageHint_ = "";
  /**
   *
   *
   * <pre>
   * The suggested backend language.
   * </pre>
   *
   * <code>string language_hint = 18;</code>
   *
   * @return The languageHint.
   */
  @java.lang.Override
  public java.lang.String getLanguageHint() {
    java.lang.Object ref = languageHint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      languageHint_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The suggested backend language.
   * </pre>
   *
   * <code>string language_hint = 18;</code>
   *
   * @return The bytes for languageHint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLanguageHintBytes() {
    java.lang.Object ref = languageHint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      languageHint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STREAMING_WORKER_MAIN_CLASS_FIELD_NUMBER = 19;

  @SuppressWarnings("serial")
  private volatile java.lang.Object streamingWorkerMainClass_ = "";
  /**
   *
   *
   * <pre>
   * The streaming worker main class name.
   * </pre>
   *
   * <code>string streaming_worker_main_class = 19;</code>
   *
   * @return The streamingWorkerMainClass.
   */
  @java.lang.Override
  public java.lang.String getStreamingWorkerMainClass() {
    java.lang.Object ref = streamingWorkerMainClass_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      streamingWorkerMainClass_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The streaming worker main class name.
   * </pre>
   *
   * <code>string streaming_worker_main_class = 19;</code>
   *
   * @return The bytes for streamingWorkerMainClass.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getStreamingWorkerMainClassBytes() {
    java.lang.Object ref = streamingWorkerMainClass_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      streamingWorkerMainClass_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskUser_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, taskUser_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskGroup_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, taskGroup_);
    }
    for (int i = 0; i < oauthScopes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, oauthScopes_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(baseUrl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, baseUrl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataflowApiVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, dataflowApiVersion_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(6, getParallelWorkerSettings());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(baseTaskDir_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, baseTaskDir_);
    }
    if (continueOnException_ != false) {
      output.writeBool(8, continueOnException_);
    }
    if (logToSerialconsole_ != false) {
      output.writeBool(9, logToSerialconsole_);
    }
    if (alsologtostderr_ != false) {
      output.writeBool(10, alsologtostderr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logUploadLocation_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, logUploadLocation_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logDir_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, logDir_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tempStoragePrefix_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, tempStoragePrefix_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(harnessCommand_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, harnessCommand_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workflowFileName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, workflowFileName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandlinesFileName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, commandlinesFileName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vmId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, vmId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageHint_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 18, languageHint_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(streamingWorkerMainClass_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 19, streamingWorkerMainClass_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskUser_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, taskUser_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskGroup_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, taskGroup_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < oauthScopes_.size(); i++) {
        dataSize += computeStringSizeNoTag(oauthScopes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getOauthScopesList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(baseUrl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, baseUrl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataflowApiVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, dataflowApiVersion_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(6, getParallelWorkerSettings());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(baseTaskDir_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, baseTaskDir_);
    }
    if (continueOnException_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(8, continueOnException_);
    }
    if (logToSerialconsole_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(9, logToSerialconsole_);
    }
    if (alsologtostderr_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(10, alsologtostderr_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logUploadLocation_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, logUploadLocation_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logDir_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, logDir_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tempStoragePrefix_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, tempStoragePrefix_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(harnessCommand_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, harnessCommand_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workflowFileName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, workflowFileName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(commandlinesFileName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, commandlinesFileName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vmId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, vmId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageHint_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, languageHint_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(streamingWorkerMainClass_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(19, streamingWorkerMainClass_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.dataflow.v1beta3.TaskRunnerSettings)) {
      return super.equals(obj);
    }
    com.google.dataflow.v1beta3.TaskRunnerSettings other =
        (com.google.dataflow.v1beta3.TaskRunnerSettings) obj;

    if (!getTaskUser().equals(other.getTaskUser())) return false;
    if (!getTaskGroup().equals(other.getTaskGroup())) return false;
    if (!getOauthScopesList().equals(other.getOauthScopesList())) return false;
    if (!getBaseUrl().equals(other.getBaseUrl())) return false;
    if (!getDataflowApiVersion().equals(other.getDataflowApiVersion())) return false;
    if (hasParallelWorkerSettings() != other.hasParallelWorkerSettings()) return false;
    if (hasParallelWorkerSettings()) {
      if (!getParallelWorkerSettings().equals(other.getParallelWorkerSettings())) return false;
    }
    if (!getBaseTaskDir().equals(other.getBaseTaskDir())) return false;
    if (getContinueOnException() != other.getContinueOnException()) return false;
    if (getLogToSerialconsole() != other.getLogToSerialconsole()) return false;
    if (getAlsologtostderr() != other.getAlsologtostderr()) return false;
    if (!getLogUploadLocation().equals(other.getLogUploadLocation())) return false;
    if (!getLogDir().equals(other.getLogDir())) return false;
    if (!getTempStoragePrefix().equals(other.getTempStoragePrefix())) return false;
    if (!getHarnessCommand().equals(other.getHarnessCommand())) return false;
    if (!getWorkflowFileName().equals(other.getWorkflowFileName())) return false;
    if (!getCommandlinesFileName().equals(other.getCommandlinesFileName())) return false;
    if (!getVmId().equals(other.getVmId())) return false;
    if (!getLanguageHint().equals(other.getLanguageHint())) return false;
    if (!getStreamingWorkerMainClass().equals(other.getStreamingWorkerMainClass())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TASK_USER_FIELD_NUMBER;
    hash = (53 * hash) + getTaskUser().hashCode();
    hash = (37 * hash) + TASK_GROUP_FIELD_NUMBER;
    hash = (53 * hash) + getTaskGroup().hashCode();
    if (getOauthScopesCount() > 0) {
      hash = (37 * hash) + OAUTH_SCOPES_FIELD_NUMBER;
      hash = (53 * hash) + getOauthScopesList().hashCode();
    }
    hash = (37 * hash) + BASE_URL_FIELD_NUMBER;
    hash = (53 * hash) + getBaseUrl().hashCode();
    hash = (37 * hash) + DATAFLOW_API_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getDataflowApiVersion().hashCode();
    if (hasParallelWorkerSettings()) {
      hash = (37 * hash) + PARALLEL_WORKER_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getParallelWorkerSettings().hashCode();
    }
    hash = (37 * hash) + BASE_TASK_DIR_FIELD_NUMBER;
    hash = (53 * hash) + getBaseTaskDir().hashCode();
    hash = (37 * hash) + CONTINUE_ON_EXCEPTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getContinueOnException());
    hash = (37 * hash) + LOG_TO_SERIALCONSOLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getLogToSerialconsole());
    hash = (37 * hash) + ALSOLOGTOSTDERR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getAlsologtostderr());
    hash = (37 * hash) + LOG_UPLOAD_LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getLogUploadLocation().hashCode();
    hash = (37 * hash) + LOG_DIR_FIELD_NUMBER;
    hash = (53 * hash) + getLogDir().hashCode();
    hash = (37 * hash) + TEMP_STORAGE_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getTempStoragePrefix().hashCode();
    hash = (37 * hash) + HARNESS_COMMAND_FIELD_NUMBER;
    hash = (53 * hash) + getHarnessCommand().hashCode();
    hash = (37 * hash) + WORKFLOW_FILE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getWorkflowFileName().hashCode();
    hash = (37 * hash) + COMMANDLINES_FILE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getCommandlinesFileName().hashCode();
    hash = (37 * hash) + VM_ID_FIELD_NUMBER;
    hash = (53 * hash) + getVmId().hashCode();
    hash = (37 * hash) + LANGUAGE_HINT_FIELD_NUMBER;
    hash = (53 * hash) + getLanguageHint().hashCode();
    hash = (37 * hash) + STREAMING_WORKER_MAIN_CLASS_FIELD_NUMBER;
    hash = (53 * hash) + getStreamingWorkerMainClass().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.dataflow.v1beta3.TaskRunnerSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Taskrunner configuration settings.
   * </pre>
   *
   * Protobuf type {@code google.dataflow.v1beta3.TaskRunnerSettings}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.dataflow.v1beta3.TaskRunnerSettings)
      com.google.dataflow.v1beta3.TaskRunnerSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.dataflow.v1beta3.EnvironmentProto
          .internal_static_google_dataflow_v1beta3_TaskRunnerSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.dataflow.v1beta3.EnvironmentProto
          .internal_static_google_dataflow_v1beta3_TaskRunnerSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.dataflow.v1beta3.TaskRunnerSettings.class,
              com.google.dataflow.v1beta3.TaskRunnerSettings.Builder.class);
    }

    // Construct using com.google.dataflow.v1beta3.TaskRunnerSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getParallelWorkerSettingsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      taskUser_ = "";
      taskGroup_ = "";
      oauthScopes_ = com.google.protobuf.LazyStringArrayList.emptyList();
      baseUrl_ = "";
      dataflowApiVersion_ = "";
      parallelWorkerSettings_ = null;
      if (parallelWorkerSettingsBuilder_ != null) {
        parallelWorkerSettingsBuilder_.dispose();
        parallelWorkerSettingsBuilder_ = null;
      }
      baseTaskDir_ = "";
      continueOnException_ = false;
      logToSerialconsole_ = false;
      alsologtostderr_ = false;
      logUploadLocation_ = "";
      logDir_ = "";
      tempStoragePrefix_ = "";
      harnessCommand_ = "";
      workflowFileName_ = "";
      commandlinesFileName_ = "";
      vmId_ = "";
      languageHint_ = "";
      streamingWorkerMainClass_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.dataflow.v1beta3.EnvironmentProto
          .internal_static_google_dataflow_v1beta3_TaskRunnerSettings_descriptor;
    }

    @java.lang.Override
    public com.google.dataflow.v1beta3.TaskRunnerSettings getDefaultInstanceForType() {
      return com.google.dataflow.v1beta3.TaskRunnerSettings.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.dataflow.v1beta3.TaskRunnerSettings build() {
      com.google.dataflow.v1beta3.TaskRunnerSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.dataflow.v1beta3.TaskRunnerSettings buildPartial() {
      com.google.dataflow.v1beta3.TaskRunnerSettings result =
          new com.google.dataflow.v1beta3.TaskRunnerSettings(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.dataflow.v1beta3.TaskRunnerSettings result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.taskUser_ = taskUser_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.taskGroup_ = taskGroup_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        oauthScopes_.makeImmutable();
        result.oauthScopes_ = oauthScopes_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.baseUrl_ = baseUrl_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.dataflowApiVersion_ = dataflowApiVersion_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.parallelWorkerSettings_ =
            parallelWorkerSettingsBuilder_ == null
                ? parallelWorkerSettings_
                : parallelWorkerSettingsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.baseTaskDir_ = baseTaskDir_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.continueOnException_ = continueOnException_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.logToSerialconsole_ = logToSerialconsole_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.alsologtostderr_ = alsologtostderr_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.logUploadLocation_ = logUploadLocation_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.logDir_ = logDir_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.tempStoragePrefix_ = tempStoragePrefix_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.harnessCommand_ = harnessCommand_;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.workflowFileName_ = workflowFileName_;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.commandlinesFileName_ = commandlinesFileName_;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.vmId_ = vmId_;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.languageHint_ = languageHint_;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.streamingWorkerMainClass_ = streamingWorkerMainClass_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.dataflow.v1beta3.TaskRunnerSettings) {
        return mergeFrom((com.google.dataflow.v1beta3.TaskRunnerSettings) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.dataflow.v1beta3.TaskRunnerSettings other) {
      if (other == com.google.dataflow.v1beta3.TaskRunnerSettings.getDefaultInstance()) return this;
      if (!other.getTaskUser().isEmpty()) {
        taskUser_ = other.taskUser_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getTaskGroup().isEmpty()) {
        taskGroup_ = other.taskGroup_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.oauthScopes_.isEmpty()) {
        if (oauthScopes_.isEmpty()) {
          oauthScopes_ = other.oauthScopes_;
          bitField0_ |= 0x00000004;
        } else {
          ensureOauthScopesIsMutable();
          oauthScopes_.addAll(other.oauthScopes_);
        }
        onChanged();
      }
      if (!other.getBaseUrl().isEmpty()) {
        baseUrl_ = other.baseUrl_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDataflowApiVersion().isEmpty()) {
        dataflowApiVersion_ = other.dataflowApiVersion_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasParallelWorkerSettings()) {
        mergeParallelWorkerSettings(other.getParallelWorkerSettings());
      }
      if (!other.getBaseTaskDir().isEmpty()) {
        baseTaskDir_ = other.baseTaskDir_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.getContinueOnException() != false) {
        setContinueOnException(other.getContinueOnException());
      }
      if (other.getLogToSerialconsole() != false) {
        setLogToSerialconsole(other.getLogToSerialconsole());
      }
      if (other.getAlsologtostderr() != false) {
        setAlsologtostderr(other.getAlsologtostderr());
      }
      if (!other.getLogUploadLocation().isEmpty()) {
        logUploadLocation_ = other.logUploadLocation_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (!other.getLogDir().isEmpty()) {
        logDir_ = other.logDir_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (!other.getTempStoragePrefix().isEmpty()) {
        tempStoragePrefix_ = other.tempStoragePrefix_;
        bitField0_ |= 0x00001000;
        onChanged();
      }
      if (!other.getHarnessCommand().isEmpty()) {
        harnessCommand_ = other.harnessCommand_;
        bitField0_ |= 0x00002000;
        onChanged();
      }
      if (!other.getWorkflowFileName().isEmpty()) {
        workflowFileName_ = other.workflowFileName_;
        bitField0_ |= 0x00004000;
        onChanged();
      }
      if (!other.getCommandlinesFileName().isEmpty()) {
        commandlinesFileName_ = other.commandlinesFileName_;
        bitField0_ |= 0x00008000;
        onChanged();
      }
      if (!other.getVmId().isEmpty()) {
        vmId_ = other.vmId_;
        bitField0_ |= 0x00010000;
        onChanged();
      }
      if (!other.getLanguageHint().isEmpty()) {
        languageHint_ = other.languageHint_;
        bitField0_ |= 0x00020000;
        onChanged();
      }
      if (!other.getStreamingWorkerMainClass().isEmpty()) {
        streamingWorkerMainClass_ = other.streamingWorkerMainClass_;
        bitField0_ |= 0x00040000;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                taskUser_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                taskGroup_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureOauthScopesIsMutable();
                oauthScopes_.add(s);
                break;
              } // case 26
            case 34:
              {
                baseUrl_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 42:
              {
                dataflowApiVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 50:
              {
                input.readMessage(
                    getParallelWorkerSettingsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
            case 58:
              {
                baseTaskDir_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
            case 64:
              {
                continueOnException_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
            case 72:
              {
                logToSerialconsole_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
            case 80:
              {
                alsologtostderr_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
            case 90:
              {
                logUploadLocation_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
            case 98:
              {
                logDir_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000800;
                break;
              } // case 98
            case 106:
              {
                tempStoragePrefix_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00001000;
                break;
              } // case 106
            case 114:
              {
                harnessCommand_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00002000;
                break;
              } // case 114
            case 122:
              {
                workflowFileName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00004000;
                break;
              } // case 122
            case 130:
              {
                commandlinesFileName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00008000;
                break;
              } // case 130
            case 138:
              {
                vmId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00010000;
                break;
              } // case 138
            case 146:
              {
                languageHint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00020000;
                break;
              } // case 146
            case 154:
              {
                streamingWorkerMainClass_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00040000;
                break;
              } // case 154
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object taskUser_ = "";
    /**
     *
     *
     * <pre>
     * The UNIX user ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "root".
     * </pre>
     *
     * <code>string task_user = 1;</code>
     *
     * @return The taskUser.
     */
    public java.lang.String getTaskUser() {
      java.lang.Object ref = taskUser_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskUser_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The UNIX user ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "root".
     * </pre>
     *
     * <code>string task_user = 1;</code>
     *
     * @return The bytes for taskUser.
     */
    public com.google.protobuf.ByteString getTaskUserBytes() {
      java.lang.Object ref = taskUser_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        taskUser_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The UNIX user ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "root".
     * </pre>
     *
     * <code>string task_user = 1;</code>
     *
     * @param value The taskUser to set.
     * @return This builder for chaining.
     */
    public Builder setTaskUser(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      taskUser_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The UNIX user ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "root".
     * </pre>
     *
     * <code>string task_user = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTaskUser() {
      taskUser_ = getDefaultInstance().getTaskUser();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The UNIX user ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "root".
     * </pre>
     *
     * <code>string task_user = 1;</code>
     *
     * @param value The bytes for taskUser to set.
     * @return This builder for chaining.
     */
    public Builder setTaskUserBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      taskUser_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object taskGroup_ = "";
    /**
     *
     *
     * <pre>
     * The UNIX group ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "wheel".
     * </pre>
     *
     * <code>string task_group = 2;</code>
     *
     * @return The taskGroup.
     */
    public java.lang.String getTaskGroup() {
      java.lang.Object ref = taskGroup_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskGroup_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The UNIX group ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "wheel".
     * </pre>
     *
     * <code>string task_group = 2;</code>
     *
     * @return The bytes for taskGroup.
     */
    public com.google.protobuf.ByteString getTaskGroupBytes() {
      java.lang.Object ref = taskGroup_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        taskGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The UNIX group ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "wheel".
     * </pre>
     *
     * <code>string task_group = 2;</code>
     *
     * @param value The taskGroup to set.
     * @return This builder for chaining.
     */
    public Builder setTaskGroup(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      taskGroup_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The UNIX group ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "wheel".
     * </pre>
     *
     * <code>string task_group = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTaskGroup() {
      taskGroup_ = getDefaultInstance().getTaskGroup();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The UNIX group ID on the worker VM to use for tasks launched by
     * taskrunner; e.g. "wheel".
     * </pre>
     *
     * <code>string task_group = 2;</code>
     *
     * @param value The bytes for taskGroup to set.
     * @return This builder for chaining.
     */
    public Builder setTaskGroupBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      taskGroup_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList oauthScopes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureOauthScopesIsMutable() {
      if (!oauthScopes_.isModifiable()) {
        oauthScopes_ = new com.google.protobuf.LazyStringArrayList(oauthScopes_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @return A list containing the oauthScopes.
     */
    public com.google.protobuf.ProtocolStringList getOauthScopesList() {
      oauthScopes_.makeImmutable();
      return oauthScopes_;
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @return The count of oauthScopes.
     */
    public int getOauthScopesCount() {
      return oauthScopes_.size();
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The oauthScopes at the given index.
     */
    public java.lang.String getOauthScopes(int index) {
      return oauthScopes_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the oauthScopes at the given index.
     */
    public com.google.protobuf.ByteString getOauthScopesBytes(int index) {
      return oauthScopes_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @param index The index to set the value at.
     * @param value The oauthScopes to set.
     * @return This builder for chaining.
     */
    public Builder setOauthScopes(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOauthScopesIsMutable();
      oauthScopes_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @param value The oauthScopes to add.
     * @return This builder for chaining.
     */
    public Builder addOauthScopes(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOauthScopesIsMutable();
      oauthScopes_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @param values The oauthScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllOauthScopes(java.lang.Iterable<java.lang.String> values) {
      ensureOauthScopesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, oauthScopes_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOauthScopes() {
      oauthScopes_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The OAuth2 scopes to be requested by the taskrunner in order to
     * access the Cloud Dataflow API.
     * </pre>
     *
     * <code>repeated string oauth_scopes = 3;</code>
     *
     * @param value The bytes of the oauthScopes to add.
     * @return This builder for chaining.
     */
    public Builder addOauthScopesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureOauthScopesIsMutable();
      oauthScopes_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object baseUrl_ = "";
    /**
     *
     *
     * <pre>
     * The base URL for the taskrunner to use when accessing Google Cloud APIs.
     *
     * When workers access Google Cloud APIs, they logically do so via
     * relative URLs.  If this field is specified, it supplies the base
     * URL to use for resolving these relative URLs.  The normative
     * algorithm used is defined by RFC 1808, "Relative Uniform Resource
     * Locators".
     *
     * If not specified, the default value is "http://www.googleapis.com/"
     * </pre>
     *
     * <code>string base_url = 4;</code>
     *
     * @return The baseUrl.
     */
    public java.lang.String getBaseUrl() {
      java.lang.Object ref = baseUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        baseUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The base URL for the taskrunner to use when accessing Google Cloud APIs.
     *
     * When workers access Google Cloud APIs, they logically do so via
     * relative URLs.  If this field is specified, it supplies the base
     * URL to use for resolving these relative URLs.  The normative
     * algorithm used is defined by RFC 1808, "Relative Uniform Resource
     * Locators".
     *
     * If not specified, the default value is "http://www.googleapis.com/"
     * </pre>
     *
     * <code>string base_url = 4;</code>
     *
     * @return The bytes for baseUrl.
     */
    public com.google.protobuf.ByteString getBaseUrlBytes() {
      java.lang.Object ref = baseUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        baseUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The base URL for the taskrunner to use when accessing Google Cloud APIs.
     *
     * When workers access Google Cloud APIs, they logically do so via
     * relative URLs.  If this field is specified, it supplies the base
     * URL to use for resolving these relative URLs.  The normative
     * algorithm used is defined by RFC 1808, "Relative Uniform Resource
     * Locators".
     *
     * If not specified, the default value is "http://www.googleapis.com/"
     * </pre>
     *
     * <code>string base_url = 4;</code>
     *
     * @param value The baseUrl to set.
     * @return This builder for chaining.
     */
    public Builder setBaseUrl(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      baseUrl_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The base URL for the taskrunner to use when accessing Google Cloud APIs.
     *
     * When workers access Google Cloud APIs, they logically do so via
     * relative URLs.  If this field is specified, it supplies the base
     * URL to use for resolving these relative URLs.  The normative
     * algorithm used is defined by RFC 1808, "Relative Uniform Resource
     * Locators".
     *
     * If not specified, the default value is "http://www.googleapis.com/"
     * </pre>
     *
     * <code>string base_url = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBaseUrl() {
      baseUrl_ = getDefaultInstance().getBaseUrl();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The base URL for the taskrunner to use when accessing Google Cloud APIs.
     *
     * When workers access Google Cloud APIs, they logically do so via
     * relative URLs.  If this field is specified, it supplies the base
     * URL to use for resolving these relative URLs.  The normative
     * algorithm used is defined by RFC 1808, "Relative Uniform Resource
     * Locators".
     *
     * If not specified, the default value is "http://www.googleapis.com/"
     * </pre>
     *
     * <code>string base_url = 4;</code>
     *
     * @param value The bytes for baseUrl to set.
     * @return This builder for chaining.
     */
    public Builder setBaseUrlBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      baseUrl_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object dataflowApiVersion_ = "";
    /**
     *
     *
     * <pre>
     * The API version of endpoint, e.g. "v1b3"
     * </pre>
     *
     * <code>string dataflow_api_version = 5;</code>
     *
     * @return The dataflowApiVersion.
     */
    public java.lang.String getDataflowApiVersion() {
      java.lang.Object ref = dataflowApiVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataflowApiVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The API version of endpoint, e.g. "v1b3"
     * </pre>
     *
     * <code>string dataflow_api_version = 5;</code>
     *
     * @return The bytes for dataflowApiVersion.
     */
    public com.google.protobuf.ByteString getDataflowApiVersionBytes() {
      java.lang.Object ref = dataflowApiVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        dataflowApiVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The API version of endpoint, e.g. "v1b3"
     * </pre>
     *
     * <code>string dataflow_api_version = 5;</code>
     *
     * @param value The dataflowApiVersion to set.
     * @return This builder for chaining.
     */
    public Builder setDataflowApiVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dataflowApiVersion_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The API version of endpoint, e.g. "v1b3"
     * </pre>
     *
     * <code>string dataflow_api_version = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDataflowApiVersion() {
      dataflowApiVersion_ = getDefaultInstance().getDataflowApiVersion();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The API version of endpoint, e.g. "v1b3"
     * </pre>
     *
     * <code>string dataflow_api_version = 5;</code>
     *
     * @param value The bytes for dataflowApiVersion to set.
     * @return This builder for chaining.
     */
    public Builder setDataflowApiVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      dataflowApiVersion_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private com.google.dataflow.v1beta3.WorkerSettings parallelWorkerSettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.dataflow.v1beta3.WorkerSettings,
            com.google.dataflow.v1beta3.WorkerSettings.Builder,
            com.google.dataflow.v1beta3.WorkerSettingsOrBuilder>
        parallelWorkerSettingsBuilder_;
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     *
     * @return Whether the parallelWorkerSettings field is set.
     */
    public boolean hasParallelWorkerSettings() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     *
     * @return The parallelWorkerSettings.
     */
    public com.google.dataflow.v1beta3.WorkerSettings getParallelWorkerSettings() {
      if (parallelWorkerSettingsBuilder_ == null) {
        return parallelWorkerSettings_ == null
            ? com.google.dataflow.v1beta3.WorkerSettings.getDefaultInstance()
            : parallelWorkerSettings_;
      } else {
        return parallelWorkerSettingsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    public Builder setParallelWorkerSettings(com.google.dataflow.v1beta3.WorkerSettings value) {
      if (parallelWorkerSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parallelWorkerSettings_ = value;
      } else {
        parallelWorkerSettingsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    public Builder setParallelWorkerSettings(
        com.google.dataflow.v1beta3.WorkerSettings.Builder builderForValue) {
      if (parallelWorkerSettingsBuilder_ == null) {
        parallelWorkerSettings_ = builderForValue.build();
      } else {
        parallelWorkerSettingsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    public Builder mergeParallelWorkerSettings(com.google.dataflow.v1beta3.WorkerSettings value) {
      if (parallelWorkerSettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)
            && parallelWorkerSettings_ != null
            && parallelWorkerSettings_
                != com.google.dataflow.v1beta3.WorkerSettings.getDefaultInstance()) {
          getParallelWorkerSettingsBuilder().mergeFrom(value);
        } else {
          parallelWorkerSettings_ = value;
        }
      } else {
        parallelWorkerSettingsBuilder_.mergeFrom(value);
      }
      if (parallelWorkerSettings_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    public Builder clearParallelWorkerSettings() {
      bitField0_ = (bitField0_ & ~0x00000020);
      parallelWorkerSettings_ = null;
      if (parallelWorkerSettingsBuilder_ != null) {
        parallelWorkerSettingsBuilder_.dispose();
        parallelWorkerSettingsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    public com.google.dataflow.v1beta3.WorkerSettings.Builder getParallelWorkerSettingsBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getParallelWorkerSettingsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    public com.google.dataflow.v1beta3.WorkerSettingsOrBuilder
        getParallelWorkerSettingsOrBuilder() {
      if (parallelWorkerSettingsBuilder_ != null) {
        return parallelWorkerSettingsBuilder_.getMessageOrBuilder();
      } else {
        return parallelWorkerSettings_ == null
            ? com.google.dataflow.v1beta3.WorkerSettings.getDefaultInstance()
            : parallelWorkerSettings_;
      }
    }
    /**
     *
     *
     * <pre>
     * The settings to pass to the parallel worker harness.
     * </pre>
     *
     * <code>.google.dataflow.v1beta3.WorkerSettings parallel_worker_settings = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.dataflow.v1beta3.WorkerSettings,
            com.google.dataflow.v1beta3.WorkerSettings.Builder,
            com.google.dataflow.v1beta3.WorkerSettingsOrBuilder>
        getParallelWorkerSettingsFieldBuilder() {
      if (parallelWorkerSettingsBuilder_ == null) {
        parallelWorkerSettingsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.dataflow.v1beta3.WorkerSettings,
                com.google.dataflow.v1beta3.WorkerSettings.Builder,
                com.google.dataflow.v1beta3.WorkerSettingsOrBuilder>(
                getParallelWorkerSettings(), getParentForChildren(), isClean());
        parallelWorkerSettings_ = null;
      }
      return parallelWorkerSettingsBuilder_;
    }

    private java.lang.Object baseTaskDir_ = "";
    /**
     *
     *
     * <pre>
     * The location on the worker for task-specific subdirectories.
     * </pre>
     *
     * <code>string base_task_dir = 7;</code>
     *
     * @return The baseTaskDir.
     */
    public java.lang.String getBaseTaskDir() {
      java.lang.Object ref = baseTaskDir_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        baseTaskDir_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The location on the worker for task-specific subdirectories.
     * </pre>
     *
     * <code>string base_task_dir = 7;</code>
     *
     * @return The bytes for baseTaskDir.
     */
    public com.google.protobuf.ByteString getBaseTaskDirBytes() {
      java.lang.Object ref = baseTaskDir_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        baseTaskDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The location on the worker for task-specific subdirectories.
     * </pre>
     *
     * <code>string base_task_dir = 7;</code>
     *
     * @param value The baseTaskDir to set.
     * @return This builder for chaining.
     */
    public Builder setBaseTaskDir(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      baseTaskDir_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The location on the worker for task-specific subdirectories.
     * </pre>
     *
     * <code>string base_task_dir = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBaseTaskDir() {
      baseTaskDir_ = getDefaultInstance().getBaseTaskDir();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The location on the worker for task-specific subdirectories.
     * </pre>
     *
     * <code>string base_task_dir = 7;</code>
     *
     * @param value The bytes for baseTaskDir to set.
     * @return This builder for chaining.
     */
    public Builder setBaseTaskDirBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      baseTaskDir_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private boolean continueOnException_;
    /**
     *
     *
     * <pre>
     * Whether to continue taskrunner if an exception is hit.
     * </pre>
     *
     * <code>bool continue_on_exception = 8;</code>
     *
     * @return The continueOnException.
     */
    @java.lang.Override
    public boolean getContinueOnException() {
      return continueOnException_;
    }
    /**
     *
     *
     * <pre>
     * Whether to continue taskrunner if an exception is hit.
     * </pre>
     *
     * <code>bool continue_on_exception = 8;</code>
     *
     * @param value The continueOnException to set.
     * @return This builder for chaining.
     */
    public Builder setContinueOnException(boolean value) {

      continueOnException_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Whether to continue taskrunner if an exception is hit.
     * </pre>
     *
     * <code>bool continue_on_exception = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearContinueOnException() {
      bitField0_ = (bitField0_ & ~0x00000080);
      continueOnException_ = false;
      onChanged();
      return this;
    }

    private boolean logToSerialconsole_;
    /**
     *
     *
     * <pre>
     * Whether to send taskrunner log info to Google Compute Engine VM serial
     * console.
     * </pre>
     *
     * <code>bool log_to_serialconsole = 9;</code>
     *
     * @return The logToSerialconsole.
     */
    @java.lang.Override
    public boolean getLogToSerialconsole() {
      return logToSerialconsole_;
    }
    /**
     *
     *
     * <pre>
     * Whether to send taskrunner log info to Google Compute Engine VM serial
     * console.
     * </pre>
     *
     * <code>bool log_to_serialconsole = 9;</code>
     *
     * @param value The logToSerialconsole to set.
     * @return This builder for chaining.
     */
    public Builder setLogToSerialconsole(boolean value) {

      logToSerialconsole_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Whether to send taskrunner log info to Google Compute Engine VM serial
     * console.
     * </pre>
     *
     * <code>bool log_to_serialconsole = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLogToSerialconsole() {
      bitField0_ = (bitField0_ & ~0x00000100);
      logToSerialconsole_ = false;
      onChanged();
      return this;
    }

    private boolean alsologtostderr_;
    /**
     *
     *
     * <pre>
     * Whether to also send taskrunner log info to stderr.
     * </pre>
     *
     * <code>bool alsologtostderr = 10;</code>
     *
     * @return The alsologtostderr.
     */
    @java.lang.Override
    public boolean getAlsologtostderr() {
      return alsologtostderr_;
    }
    /**
     *
     *
     * <pre>
     * Whether to also send taskrunner log info to stderr.
     * </pre>
     *
     * <code>bool alsologtostderr = 10;</code>
     *
     * @param value The alsologtostderr to set.
     * @return This builder for chaining.
     */
    public Builder setAlsologtostderr(boolean value) {

      alsologtostderr_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Whether to also send taskrunner log info to stderr.
     * </pre>
     *
     * <code>bool alsologtostderr = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAlsologtostderr() {
      bitField0_ = (bitField0_ & ~0x00000200);
      alsologtostderr_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object logUploadLocation_ = "";
    /**
     *
     *
     * <pre>
     * Indicates where to put logs.  If this is not specified, the logs
     * will not be uploaded.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string log_upload_location = 11;</code>
     *
     * @return The logUploadLocation.
     */
    public java.lang.String getLogUploadLocation() {
      java.lang.Object ref = logUploadLocation_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logUploadLocation_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Indicates where to put logs.  If this is not specified, the logs
     * will not be uploaded.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string log_upload_location = 11;</code>
     *
     * @return The bytes for logUploadLocation.
     */
    public com.google.protobuf.ByteString getLogUploadLocationBytes() {
      java.lang.Object ref = logUploadLocation_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        logUploadLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Indicates where to put logs.  If this is not specified, the logs
     * will not be uploaded.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string log_upload_location = 11;</code>
     *
     * @param value The logUploadLocation to set.
     * @return This builder for chaining.
     */
    public Builder setLogUploadLocation(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      logUploadLocation_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates where to put logs.  If this is not specified, the logs
     * will not be uploaded.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string log_upload_location = 11;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLogUploadLocation() {
      logUploadLocation_ = getDefaultInstance().getLogUploadLocation();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates where to put logs.  If this is not specified, the logs
     * will not be uploaded.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string log_upload_location = 11;</code>
     *
     * @param value The bytes for logUploadLocation to set.
     * @return This builder for chaining.
     */
    public Builder setLogUploadLocationBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      logUploadLocation_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private java.lang.Object logDir_ = "";
    /**
     *
     *
     * <pre>
     * The directory on the VM to store logs.
     * </pre>
     *
     * <code>string log_dir = 12;</code>
     *
     * @return The logDir.
     */
    public java.lang.String getLogDir() {
      java.lang.Object ref = logDir_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logDir_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The directory on the VM to store logs.
     * </pre>
     *
     * <code>string log_dir = 12;</code>
     *
     * @return The bytes for logDir.
     */
    public com.google.protobuf.ByteString getLogDirBytes() {
      java.lang.Object ref = logDir_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        logDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The directory on the VM to store logs.
     * </pre>
     *
     * <code>string log_dir = 12;</code>
     *
     * @param value The logDir to set.
     * @return This builder for chaining.
     */
    public Builder setLogDir(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      logDir_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The directory on the VM to store logs.
     * </pre>
     *
     * <code>string log_dir = 12;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLogDir() {
      logDir_ = getDefaultInstance().getLogDir();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The directory on the VM to store logs.
     * </pre>
     *
     * <code>string log_dir = 12;</code>
     *
     * @param value The bytes for logDir to set.
     * @return This builder for chaining.
     */
    public Builder setLogDirBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      logDir_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private java.lang.Object tempStoragePrefix_ = "";
    /**
     *
     *
     * <pre>
     * The prefix of the resources the taskrunner should use for
     * temporary storage.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string temp_storage_prefix = 13;</code>
     *
     * @return The tempStoragePrefix.
     */
    public java.lang.String getTempStoragePrefix() {
      java.lang.Object ref = tempStoragePrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tempStoragePrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The prefix of the resources the taskrunner should use for
     * temporary storage.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string temp_storage_prefix = 13;</code>
     *
     * @return The bytes for tempStoragePrefix.
     */
    public com.google.protobuf.ByteString getTempStoragePrefixBytes() {
      java.lang.Object ref = tempStoragePrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        tempStoragePrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The prefix of the resources the taskrunner should use for
     * temporary storage.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string temp_storage_prefix = 13;</code>
     *
     * @param value The tempStoragePrefix to set.
     * @return This builder for chaining.
     */
    public Builder setTempStoragePrefix(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      tempStoragePrefix_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The prefix of the resources the taskrunner should use for
     * temporary storage.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string temp_storage_prefix = 13;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTempStoragePrefix() {
      tempStoragePrefix_ = getDefaultInstance().getTempStoragePrefix();
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The prefix of the resources the taskrunner should use for
     * temporary storage.
     *
     * The supported resource type is:
     *
     * Google Cloud Storage:
     *   storage.googleapis.com/{bucket}/{object}
     *   bucket.storage.googleapis.com/{object}
     * </pre>
     *
     * <code>string temp_storage_prefix = 13;</code>
     *
     * @param value The bytes for tempStoragePrefix to set.
     * @return This builder for chaining.
     */
    public Builder setTempStoragePrefixBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      tempStoragePrefix_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }

    private java.lang.Object harnessCommand_ = "";
    /**
     *
     *
     * <pre>
     * The command to launch the worker harness.
     * </pre>
     *
     * <code>string harness_command = 14;</code>
     *
     * @return The harnessCommand.
     */
    public java.lang.String getHarnessCommand() {
      java.lang.Object ref = harnessCommand_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        harnessCommand_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The command to launch the worker harness.
     * </pre>
     *
     * <code>string harness_command = 14;</code>
     *
     * @return The bytes for harnessCommand.
     */
    public com.google.protobuf.ByteString getHarnessCommandBytes() {
      java.lang.Object ref = harnessCommand_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        harnessCommand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The command to launch the worker harness.
     * </pre>
     *
     * <code>string harness_command = 14;</code>
     *
     * @param value The harnessCommand to set.
     * @return This builder for chaining.
     */
    public Builder setHarnessCommand(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      harnessCommand_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The command to launch the worker harness.
     * </pre>
     *
     * <code>string harness_command = 14;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHarnessCommand() {
      harnessCommand_ = getDefaultInstance().getHarnessCommand();
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The command to launch the worker harness.
     * </pre>
     *
     * <code>string harness_command = 14;</code>
     *
     * @param value The bytes for harnessCommand to set.
     * @return This builder for chaining.
     */
    public Builder setHarnessCommandBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      harnessCommand_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }

    private java.lang.Object workflowFileName_ = "";
    /**
     *
     *
     * <pre>
     * The file to store the workflow in.
     * </pre>
     *
     * <code>string workflow_file_name = 15;</code>
     *
     * @return The workflowFileName.
     */
    public java.lang.String getWorkflowFileName() {
      java.lang.Object ref = workflowFileName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workflowFileName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The file to store the workflow in.
     * </pre>
     *
     * <code>string workflow_file_name = 15;</code>
     *
     * @return The bytes for workflowFileName.
     */
    public com.google.protobuf.ByteString getWorkflowFileNameBytes() {
      java.lang.Object ref = workflowFileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        workflowFileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The file to store the workflow in.
     * </pre>
     *
     * <code>string workflow_file_name = 15;</code>
     *
     * @param value The workflowFileName to set.
     * @return This builder for chaining.
     */
    public Builder setWorkflowFileName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      workflowFileName_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The file to store the workflow in.
     * </pre>
     *
     * <code>string workflow_file_name = 15;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearWorkflowFileName() {
      workflowFileName_ = getDefaultInstance().getWorkflowFileName();
      bitField0_ = (bitField0_ & ~0x00004000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The file to store the workflow in.
     * </pre>
     *
     * <code>string workflow_file_name = 15;</code>
     *
     * @param value The bytes for workflowFileName to set.
     * @return This builder for chaining.
     */
    public Builder setWorkflowFileNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      workflowFileName_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }

    private java.lang.Object commandlinesFileName_ = "";
    /**
     *
     *
     * <pre>
     * The file to store preprocessing commands in.
     * </pre>
     *
     * <code>string commandlines_file_name = 16;</code>
     *
     * @return The commandlinesFileName.
     */
    public java.lang.String getCommandlinesFileName() {
      java.lang.Object ref = commandlinesFileName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commandlinesFileName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The file to store preprocessing commands in.
     * </pre>
     *
     * <code>string commandlines_file_name = 16;</code>
     *
     * @return The bytes for commandlinesFileName.
     */
    public com.google.protobuf.ByteString getCommandlinesFileNameBytes() {
      java.lang.Object ref = commandlinesFileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        commandlinesFileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The file to store preprocessing commands in.
     * </pre>
     *
     * <code>string commandlines_file_name = 16;</code>
     *
     * @param value The commandlinesFileName to set.
     * @return This builder for chaining.
     */
    public Builder setCommandlinesFileName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      commandlinesFileName_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The file to store preprocessing commands in.
     * </pre>
     *
     * <code>string commandlines_file_name = 16;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCommandlinesFileName() {
      commandlinesFileName_ = getDefaultInstance().getCommandlinesFileName();
      bitField0_ = (bitField0_ & ~0x00008000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The file to store preprocessing commands in.
     * </pre>
     *
     * <code>string commandlines_file_name = 16;</code>
     *
     * @param value The bytes for commandlinesFileName to set.
     * @return This builder for chaining.
     */
    public Builder setCommandlinesFileNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      commandlinesFileName_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }

    private java.lang.Object vmId_ = "";
    /**
     *
     *
     * <pre>
     * The ID string of the VM.
     * </pre>
     *
     * <code>string vm_id = 17;</code>
     *
     * @return The vmId.
     */
    public java.lang.String getVmId() {
      java.lang.Object ref = vmId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vmId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The ID string of the VM.
     * </pre>
     *
     * <code>string vm_id = 17;</code>
     *
     * @return The bytes for vmId.
     */
    public com.google.protobuf.ByteString getVmIdBytes() {
      java.lang.Object ref = vmId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        vmId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The ID string of the VM.
     * </pre>
     *
     * <code>string vm_id = 17;</code>
     *
     * @param value The vmId to set.
     * @return This builder for chaining.
     */
    public Builder setVmId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      vmId_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ID string of the VM.
     * </pre>
     *
     * <code>string vm_id = 17;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVmId() {
      vmId_ = getDefaultInstance().getVmId();
      bitField0_ = (bitField0_ & ~0x00010000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ID string of the VM.
     * </pre>
     *
     * <code>string vm_id = 17;</code>
     *
     * @param value The bytes for vmId to set.
     * @return This builder for chaining.
     */
    public Builder setVmIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      vmId_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }

    private java.lang.Object languageHint_ = "";
    /**
     *
     *
     * <pre>
     * The suggested backend language.
     * </pre>
     *
     * <code>string language_hint = 18;</code>
     *
     * @return The languageHint.
     */
    public java.lang.String getLanguageHint() {
      java.lang.Object ref = languageHint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageHint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The suggested backend language.
     * </pre>
     *
     * <code>string language_hint = 18;</code>
     *
     * @return The bytes for languageHint.
     */
    public com.google.protobuf.ByteString getLanguageHintBytes() {
      java.lang.Object ref = languageHint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        languageHint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The suggested backend language.
     * </pre>
     *
     * <code>string language_hint = 18;</code>
     *
     * @param value The languageHint to set.
     * @return This builder for chaining.
     */
    public Builder setLanguageHint(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      languageHint_ = value;
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The suggested backend language.
     * </pre>
     *
     * <code>string language_hint = 18;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLanguageHint() {
      languageHint_ = getDefaultInstance().getLanguageHint();
      bitField0_ = (bitField0_ & ~0x00020000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The suggested backend language.
     * </pre>
     *
     * <code>string language_hint = 18;</code>
     *
     * @param value The bytes for languageHint to set.
     * @return This builder for chaining.
     */
    public Builder setLanguageHintBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      languageHint_ = value;
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }

    private java.lang.Object streamingWorkerMainClass_ = "";
    /**
     *
     *
     * <pre>
     * The streaming worker main class name.
     * </pre>
     *
     * <code>string streaming_worker_main_class = 19;</code>
     *
     * @return The streamingWorkerMainClass.
     */
    public java.lang.String getStreamingWorkerMainClass() {
      java.lang.Object ref = streamingWorkerMainClass_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        streamingWorkerMainClass_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The streaming worker main class name.
     * </pre>
     *
     * <code>string streaming_worker_main_class = 19;</code>
     *
     * @return The bytes for streamingWorkerMainClass.
     */
    public com.google.protobuf.ByteString getStreamingWorkerMainClassBytes() {
      java.lang.Object ref = streamingWorkerMainClass_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        streamingWorkerMainClass_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The streaming worker main class name.
     * </pre>
     *
     * <code>string streaming_worker_main_class = 19;</code>
     *
     * @param value The streamingWorkerMainClass to set.
     * @return This builder for chaining.
     */
    public Builder setStreamingWorkerMainClass(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      streamingWorkerMainClass_ = value;
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The streaming worker main class name.
     * </pre>
     *
     * <code>string streaming_worker_main_class = 19;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearStreamingWorkerMainClass() {
      streamingWorkerMainClass_ = getDefaultInstance().getStreamingWorkerMainClass();
      bitField0_ = (bitField0_ & ~0x00040000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The streaming worker main class name.
     * </pre>
     *
     * <code>string streaming_worker_main_class = 19;</code>
     *
     * @param value The bytes for streamingWorkerMainClass to set.
     * @return This builder for chaining.
     */
    public Builder setStreamingWorkerMainClassBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      streamingWorkerMainClass_ = value;
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.dataflow.v1beta3.TaskRunnerSettings)
  }

  // @@protoc_insertion_point(class_scope:google.dataflow.v1beta3.TaskRunnerSettings)
  private static final com.google.dataflow.v1beta3.TaskRunnerSettings DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.dataflow.v1beta3.TaskRunnerSettings();
  }

  public static com.google.dataflow.v1beta3.TaskRunnerSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TaskRunnerSettings> PARSER =
      new com.google.protobuf.AbstractParser<TaskRunnerSettings>() {
        @java.lang.Override
        public TaskRunnerSettings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<TaskRunnerSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TaskRunnerSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.dataflow.v1beta3.TaskRunnerSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
