/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/places/v1/places_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.places.v1;

/**
 *
 *
 * <pre>
 * Response proto for AutocompletePlaces.
 * </pre>
 *
 * Protobuf type {@code google.maps.places.v1.AutocompletePlacesResponse}
 */
public final class AutocompletePlacesResponse extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse)
    AutocompletePlacesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AutocompletePlacesResponse.newBuilder() to construct.
  private AutocompletePlacesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AutocompletePlacesResponse() {
    suggestions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AutocompletePlacesResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_AutocompletePlacesResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_AutocompletePlacesResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.places.v1.AutocompletePlacesResponse.class,
            com.google.maps.places.v1.AutocompletePlacesResponse.Builder.class);
  }

  public interface SuggestionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesResponse.Suggestion)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * A prediction for a Place.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
     * </code>
     *
     * @return Whether the placePrediction field is set.
     */
    boolean hasPlacePrediction();
    /**
     *
     *
     * <pre>
     * A prediction for a Place.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
     * </code>
     *
     * @return The placePrediction.
     */
    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
        getPlacePrediction();
    /**
     *
     *
     * <pre>
     * A prediction for a Place.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
     * </code>
     */
    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePredictionOrBuilder
        getPlacePredictionOrBuilder();

    /**
     *
     *
     * <pre>
     * A prediction for a query.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
     * </code>
     *
     * @return Whether the queryPrediction field is set.
     */
    boolean hasQueryPrediction();
    /**
     *
     *
     * <pre>
     * A prediction for a query.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
     * </code>
     *
     * @return The queryPrediction.
     */
    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
        getQueryPrediction();
    /**
     *
     *
     * <pre>
     * A prediction for a query.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
     * </code>
     */
    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPredictionOrBuilder
        getQueryPredictionOrBuilder();

    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.KindCase getKindCase();
  }
  /**
   *
   *
   * <pre>
   * An Autocomplete suggestion result.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.AutocompletePlacesResponse.Suggestion}
   */
  public static final class Suggestion extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion)
      SuggestionOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Suggestion.newBuilder() to construct.
    private Suggestion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Suggestion() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Suggestion();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.class,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder.class);
    }

    public interface StringRangeOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)
        com.google.protobuf.MessageOrBuilder {

      /**
       *
       *
       * <pre>
       * Zero-based offset of the first Unicode character of the string
       * (inclusive).
       * </pre>
       *
       * <code>int32 start_offset = 1;</code>
       *
       * @return The startOffset.
       */
      int getStartOffset();

      /**
       *
       *
       * <pre>
       * Zero-based offset of the last Unicode character (exclusive).
       * </pre>
       *
       * <code>int32 end_offset = 2;</code>
       *
       * @return The endOffset.
       */
      int getEndOffset();
    }
    /**
     *
     *
     * <pre>
     * Identifies a substring within a given text.
     * </pre>
     *
     * Protobuf type {@code google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange}
     */
    public static final class StringRange extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)
        StringRangeOrBuilder {
      private static final long serialVersionUID = 0L;
      // Use StringRange.newBuilder() to construct.
      private StringRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }

      private StringRange() {}

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new StringRange();
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StringRange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StringRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.class,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
                    .class);
      }

      public static final int START_OFFSET_FIELD_NUMBER = 1;
      private int startOffset_ = 0;
      /**
       *
       *
       * <pre>
       * Zero-based offset of the first Unicode character of the string
       * (inclusive).
       * </pre>
       *
       * <code>int32 start_offset = 1;</code>
       *
       * @return The startOffset.
       */
      @java.lang.Override
      public int getStartOffset() {
        return startOffset_;
      }

      public static final int END_OFFSET_FIELD_NUMBER = 2;
      private int endOffset_ = 0;
      /**
       *
       *
       * <pre>
       * Zero-based offset of the last Unicode character (exclusive).
       * </pre>
       *
       * <code>int32 end_offset = 2;</code>
       *
       * @return The endOffset.
       */
      @java.lang.Override
      public int getEndOffset() {
        return endOffset_;
      }

      private byte memoizedIsInitialized = -1;

      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (startOffset_ != 0) {
          output.writeInt32(1, startOffset_);
        }
        if (endOffset_ != 0) {
          output.writeInt32(2, endOffset_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (startOffset_ != 0) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, startOffset_);
        }
        if (endOffset_ != 0) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, endOffset_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
          return true;
        }
        if (!(obj
            instanceof
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)) {
          return super.equals(obj);
        }
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange other =
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange) obj;

        if (getStartOffset() != other.getStartOffset()) return false;
        if (getEndOffset() != other.getEndOffset()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + START_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getStartOffset();
        hash = (37 * hash) + END_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getEndOffset();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(
              java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       *
       *
       * <pre>
       * Identifies a substring within a given text.
       * </pre>
       *
       * Protobuf type {@code
       * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StringRange_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StringRange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.class,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
                      .Builder.class);
        }

        // Construct using
        // com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.newBuilder()
        private Builder() {}

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
        }

        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          startOffset_ = 0;
          endOffset_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StringRange_descriptor;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
            getDefaultInstanceForType() {
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
              .getDefaultInstance();
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange build() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange result =
              buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
            buildPartial() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange result =
              new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange(this);
          if (bitField0_ != 0) {
            buildPartial0(result);
          }
          onBuilt();
          return result;
        }

        private void buildPartial0(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.startOffset_ = startOffset_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.endOffset_ = endOffset_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }

        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index,
            java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other
              instanceof
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange) {
            return mergeFrom(
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)
                    other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange other) {
          if (other
              == com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
                  .getDefaultInstance()) return this;
          if (other.getStartOffset() != 0) {
            setStartOffset(other.getStartOffset());
          }
          if (other.getEndOffset() != 0) {
            setEndOffset(other.getEndOffset());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8:
                  {
                    startOffset_ = input.readInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                case 16:
                  {
                    endOffset_ = input.readInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                default:
                  {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }

        private int bitField0_;

        private int startOffset_;
        /**
         *
         *
         * <pre>
         * Zero-based offset of the first Unicode character of the string
         * (inclusive).
         * </pre>
         *
         * <code>int32 start_offset = 1;</code>
         *
         * @return The startOffset.
         */
        @java.lang.Override
        public int getStartOffset() {
          return startOffset_;
        }
        /**
         *
         *
         * <pre>
         * Zero-based offset of the first Unicode character of the string
         * (inclusive).
         * </pre>
         *
         * <code>int32 start_offset = 1;</code>
         *
         * @param value The startOffset to set.
         * @return This builder for chaining.
         */
        public Builder setStartOffset(int value) {

          startOffset_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Zero-based offset of the first Unicode character of the string
         * (inclusive).
         * </pre>
         *
         * <code>int32 start_offset = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearStartOffset() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startOffset_ = 0;
          onChanged();
          return this;
        }

        private int endOffset_;
        /**
         *
         *
         * <pre>
         * Zero-based offset of the last Unicode character (exclusive).
         * </pre>
         *
         * <code>int32 end_offset = 2;</code>
         *
         * @return The endOffset.
         */
        @java.lang.Override
        public int getEndOffset() {
          return endOffset_;
        }
        /**
         *
         *
         * <pre>
         * Zero-based offset of the last Unicode character (exclusive).
         * </pre>
         *
         * <code>int32 end_offset = 2;</code>
         *
         * @param value The endOffset to set.
         * @return This builder for chaining.
         */
        public Builder setEndOffset(int value) {

          endOffset_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Zero-based offset of the last Unicode character (exclusive).
         * </pre>
         *
         * <code>int32 end_offset = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearEndOffset() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endOffset_ = 0;
          onChanged();
          return this;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)
      }

      // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange)
      private static final com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .StringRange
          DEFAULT_INSTANCE;

      static {
        DEFAULT_INSTANCE =
            new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange();
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StringRange> PARSER =
          new com.google.protobuf.AbstractParser<StringRange>() {
            @java.lang.Override
            public StringRange parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException()
                    .setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

      public static com.google.protobuf.Parser<StringRange> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StringRange> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
          getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }
    }

    public interface FormattableTextOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)
        com.google.protobuf.MessageOrBuilder {

      /**
       *
       *
       * <pre>
       * Text that may be used as is or formatted with `matches`.
       * </pre>
       *
       * <code>string text = 1;</code>
       *
       * @return The text.
       */
      java.lang.String getText();
      /**
       *
       *
       * <pre>
       * Text that may be used as is or formatted with `matches`.
       * </pre>
       *
       * <code>string text = 1;</code>
       *
       * @return The bytes for text.
       */
      com.google.protobuf.ByteString getTextBytes();

      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      java.util.List<com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>
          getMatchesList();
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange getMatches(
          int index);
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      int getMatchesCount();
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      java.util.List<
              ? extends
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                      .StringRangeOrBuilder>
          getMatchesOrBuilderList();
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRangeOrBuilder
          getMatchesOrBuilder(int index);
    }
    /**
     *
     *
     * <pre>
     * Text representing a Place or query prediction. The text may be used as is
     * or formatted.
     * </pre>
     *
     * Protobuf type {@code
     * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText}
     */
    public static final class FormattableText extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)
        FormattableTextOrBuilder {
      private static final long serialVersionUID = 0L;
      // Use FormattableText.newBuilder() to construct.
      private FormattableText(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }

      private FormattableText() {
        text_ = "";
        matches_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new FormattableText();
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_FormattableText_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_FormattableText_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .class,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder.class);
      }

      public static final int TEXT_FIELD_NUMBER = 1;

      @SuppressWarnings("serial")
      private volatile java.lang.Object text_ = "";
      /**
       *
       *
       * <pre>
       * Text that may be used as is or formatted with `matches`.
       * </pre>
       *
       * <code>string text = 1;</code>
       *
       * @return The text.
       */
      @java.lang.Override
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        }
      }
      /**
       *
       *
       * <pre>
       * Text that may be used as is or formatted with `matches`.
       * </pre>
       *
       * <code>string text = 1;</code>
       *
       * @return The bytes for text.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MATCHES_FIELD_NUMBER = 2;

      @SuppressWarnings("serial")
      private java.util.List<
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>
          matches_;
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      @java.lang.Override
      public java.util.List<
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>
          getMatchesList() {
        return matches_;
      }
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      @java.lang.Override
      public java.util.List<
              ? extends
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                      .StringRangeOrBuilder>
          getMatchesOrBuilderList() {
        return matches_;
      }
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      @java.lang.Override
      public int getMatchesCount() {
        return matches_.size();
      }
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange getMatches(
          int index) {
        return matches_.get(index);
      }
      /**
       *
       *
       * <pre>
       * A list of string ranges identifying where the input request matched in
       * `text`. The ranges can be used to format specific parts of `text`. The
       * substrings may not be exact matches of `input` if the matching was
       * determined by criteria other than string matching (for example, spell
       * corrections or transliterations).
       *
       * These values are Unicode character offsets of `text`. The ranges are
       * guaranteed to be ordered in increasing offset values.
       * </pre>
       *
       * <code>
       * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRangeOrBuilder
          getMatchesOrBuilder(int index) {
        return matches_.get(index);
      }

      private byte memoizedIsInitialized = -1;

      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_);
        }
        for (int i = 0; i < matches_.size(); i++) {
          output.writeMessage(2, matches_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, text_);
        }
        for (int i = 0; i < matches_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, matches_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
          return true;
        }
        if (!(obj
            instanceof
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)) {
          return super.equals(obj);
        }
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText other =
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText) obj;

        if (!getText().equals(other.getText())) return false;
        if (!getMatchesList().equals(other.getMatchesList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
        if (getMatchesCount() > 0) {
          hash = (37 * hash) + MATCHES_FIELD_NUMBER;
          hash = (53 * hash) + getMatchesList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(
              java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
              prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       *
       *
       * <pre>
       * Text representing a Place or query prediction. The text may be used as is
       * or formatted.
       * </pre>
       *
       * Protobuf type {@code
       * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableTextOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_FormattableText_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_FormattableText_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                      .class,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                      .Builder.class);
        }

        // Construct using
        // com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText.newBuilder()
        private Builder() {}

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
        }

        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          text_ = "";
          if (matchesBuilder_ == null) {
            matches_ = java.util.Collections.emptyList();
          } else {
            matches_ = null;
            matchesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_FormattableText_descriptor;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            getDefaultInstanceForType() {
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
              .getDefaultInstance();
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            build() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText result =
              buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            buildPartial() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText result =
              new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText(
                  this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) {
            buildPartial0(result);
          }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                result) {
          if (matchesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              matches_ = java.util.Collections.unmodifiableList(matches_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.matches_ = matches_;
          } else {
            result.matches_ = matchesBuilder_.build();
          }
        }

        private void buildPartial0(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.text_ = text_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }

        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index,
            java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other
              instanceof
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText) {
            return mergeFrom(
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)
                    other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText other) {
          if (other
              == com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                  .getDefaultInstance()) return this;
          if (!other.getText().isEmpty()) {
            text_ = other.text_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (matchesBuilder_ == null) {
            if (!other.matches_.isEmpty()) {
              if (matches_.isEmpty()) {
                matches_ = other.matches_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureMatchesIsMutable();
                matches_.addAll(other.matches_);
              }
              onChanged();
            }
          } else {
            if (!other.matches_.isEmpty()) {
              if (matchesBuilder_.isEmpty()) {
                matchesBuilder_.dispose();
                matchesBuilder_ = null;
                matches_ = other.matches_;
                bitField0_ = (bitField0_ & ~0x00000002);
                matchesBuilder_ =
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                        ? getMatchesFieldBuilder()
                        : null;
              } else {
                matchesBuilder_.addAllMessages(other.matches_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10:
                  {
                    text_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                case 18:
                  {
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange m =
                        input.readMessage(
                            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                                .StringRange.parser(),
                            extensionRegistry);
                    if (matchesBuilder_ == null) {
                      ensureMatchesIsMutable();
                      matches_.add(m);
                    } else {
                      matchesBuilder_.addMessage(m);
                    }
                    break;
                  } // case 18
                default:
                  {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }

        private int bitField0_;

        private java.lang.Object text_ = "";
        /**
         *
         *
         * <pre>
         * Text that may be used as is or formatted with `matches`.
         * </pre>
         *
         * <code>string text = 1;</code>
         *
         * @return The text.
         */
        public java.lang.String getText() {
          java.lang.Object ref = text_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            text_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         *
         *
         * <pre>
         * Text that may be used as is or formatted with `matches`.
         * </pre>
         *
         * <code>string text = 1;</code>
         *
         * @return The bytes for text.
         */
        public com.google.protobuf.ByteString getTextBytes() {
          java.lang.Object ref = text_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            text_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         *
         *
         * <pre>
         * Text that may be used as is or formatted with `matches`.
         * </pre>
         *
         * <code>string text = 1;</code>
         *
         * @param value The text to set.
         * @return This builder for chaining.
         */
        public Builder setText(java.lang.String value) {
          if (value == null) {
            throw new NullPointerException();
          }
          text_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Text that may be used as is or formatted with `matches`.
         * </pre>
         *
         * <code>string text = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearText() {
          text_ = getDefaultInstance().getText();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Text that may be used as is or formatted with `matches`.
         * </pre>
         *
         * <code>string text = 1;</code>
         *
         * @param value The bytes for text to set.
         * @return This builder for chaining.
         */
        public Builder setTextBytes(com.google.protobuf.ByteString value) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkByteStringIsUtf8(value);
          text_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.util.List<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>
            matches_ = java.util.Collections.emptyList();

        private void ensureMatchesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            matches_ =
                new java.util.ArrayList<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>(
                    matches_);
            bitField0_ |= 0x00000002;
          }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .StringRangeOrBuilder>
            matchesBuilder_;

        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public java.util.List<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>
            getMatchesList() {
          if (matchesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(matches_);
          } else {
            return matchesBuilder_.getMessageList();
          }
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public int getMatchesCount() {
          if (matchesBuilder_ == null) {
            return matches_.size();
          } else {
            return matchesBuilder_.getCount();
          }
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
            getMatches(int index) {
          if (matchesBuilder_ == null) {
            return matches_.get(index);
          } else {
            return matchesBuilder_.getMessage(index);
          }
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder setMatches(
            int index,
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange value) {
          if (matchesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchesIsMutable();
            matches_.set(index, value);
            onChanged();
          } else {
            matchesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder setMatches(
            int index,
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
                builderForValue) {
          if (matchesBuilder_ == null) {
            ensureMatchesIsMutable();
            matches_.set(index, builderForValue.build());
            onChanged();
          } else {
            matchesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder addMatches(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange value) {
          if (matchesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchesIsMutable();
            matches_.add(value);
            onChanged();
          } else {
            matchesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder addMatches(
            int index,
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange value) {
          if (matchesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMatchesIsMutable();
            matches_.add(index, value);
            onChanged();
          } else {
            matchesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder addMatches(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
                builderForValue) {
          if (matchesBuilder_ == null) {
            ensureMatchesIsMutable();
            matches_.add(builderForValue.build());
            onChanged();
          } else {
            matchesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder addMatches(
            int index,
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
                builderForValue) {
          if (matchesBuilder_ == null) {
            ensureMatchesIsMutable();
            matches_.add(index, builderForValue.build());
            onChanged();
          } else {
            matchesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder addAllMatches(
            java.lang.Iterable<
                    ? extends
                        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange>
                values) {
          if (matchesBuilder_ == null) {
            ensureMatchesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(values, matches_);
            onChanged();
          } else {
            matchesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder clearMatches() {
          if (matchesBuilder_ == null) {
            matches_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            matchesBuilder_.clear();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public Builder removeMatches(int index) {
          if (matchesBuilder_ == null) {
            ensureMatchesIsMutable();
            matches_.remove(index);
            onChanged();
          } else {
            matchesBuilder_.remove(index);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
            getMatchesBuilder(int index) {
          return getMatchesFieldBuilder().getBuilder(index);
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRangeOrBuilder
            getMatchesOrBuilder(int index) {
          if (matchesBuilder_ == null) {
            return matches_.get(index);
          } else {
            return matchesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public java.util.List<
                ? extends
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StringRangeOrBuilder>
            getMatchesOrBuilderList() {
          if (matchesBuilder_ != null) {
            return matchesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(matches_);
          }
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
            addMatchesBuilder() {
          return getMatchesFieldBuilder()
              .addBuilder(
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
                      .getDefaultInstance());
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder
            addMatchesBuilder(int index) {
          return getMatchesFieldBuilder()
              .addBuilder(
                  index,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
                      .getDefaultInstance());
        }
        /**
         *
         *
         * <pre>
         * A list of string ranges identifying where the input request matched in
         * `text`. The ranges can be used to format specific parts of `text`. The
         * substrings may not be exact matches of `input` if the matching was
         * determined by criteria other than string matching (for example, spell
         * corrections or transliterations).
         *
         * These values are Unicode character offsets of `text`. The ranges are
         * guaranteed to be ordered in increasing offset values.
         * </pre>
         *
         * <code>
         * repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange matches = 2;
         * </code>
         */
        public java.util.List<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder>
            getMatchesBuilderList() {
          return getMatchesFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange.Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .StringRangeOrBuilder>
            getMatchesFieldBuilder() {
          if (matchesBuilder_ == null) {
            matchesBuilder_ =
                new com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StringRange
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StringRangeOrBuilder>(
                    matches_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
            matches_ = null;
          }
          return matchesBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)
      }

      // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText)
      private static final com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .FormattableText
          DEFAULT_INSTANCE;

      static {
        DEFAULT_INSTANCE =
            new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText();
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FormattableText> PARSER =
          new com.google.protobuf.AbstractParser<FormattableText>() {
            @java.lang.Override
            public FormattableText parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException()
                    .setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

      public static com.google.protobuf.Parser<FormattableText> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FormattableText> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }
    }

    public interface StructuredFormatOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)
        com.google.protobuf.MessageOrBuilder {

      /**
       *
       *
       * <pre>
       * Represents the name of the Place or query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
       * </code>
       *
       * @return Whether the mainText field is set.
       */
      boolean hasMainText();
      /**
       *
       *
       * <pre>
       * Represents the name of the Place or query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
       * </code>
       *
       * @return The mainText.
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText getMainText();
      /**
       *
       *
       * <pre>
       * Represents the name of the Place or query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableTextOrBuilder
          getMainTextOrBuilder();

      /**
       *
       *
       * <pre>
       * Represents additional disambiguating features (such as a city or
       * region) to further identify the Place or refine the query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
       * </code>
       *
       * @return Whether the secondaryText field is set.
       */
      boolean hasSecondaryText();
      /**
       *
       *
       * <pre>
       * Represents additional disambiguating features (such as a city or
       * region) to further identify the Place or refine the query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
       * </code>
       *
       * @return The secondaryText.
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getSecondaryText();
      /**
       *
       *
       * <pre>
       * Represents additional disambiguating features (such as a city or
       * region) to further identify the Place or refine the query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableTextOrBuilder
          getSecondaryTextOrBuilder();
    }
    /**
     *
     *
     * <pre>
     * Contains a breakdown of a Place or query prediction into main text
     * and secondary text.
     *
     * For Place predictions, the main text contains the specific name of the
     * Place. For query predictions, the main text contains the query.
     *
     * The secondary text contains additional disambiguating features (such as a
     * city or region) to further identify the Place or refine the query.
     * </pre>
     *
     * Protobuf type {@code
     * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat}
     */
    public static final class StructuredFormat extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)
        StructuredFormatOrBuilder {
      private static final long serialVersionUID = 0L;
      // Use StructuredFormat.newBuilder() to construct.
      private StructuredFormat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }

      private StructuredFormat() {}

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new StructuredFormat();
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StructuredFormat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StructuredFormat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .class,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .Builder.class);
      }

      private int bitField0_;
      public static final int MAIN_TEXT_FIELD_NUMBER = 1;
      private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          mainText_;
      /**
       *
       *
       * <pre>
       * Represents the name of the Place or query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
       * </code>
       *
       * @return Whether the mainText field is set.
       */
      @java.lang.Override
      public boolean hasMainText() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Represents the name of the Place or query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
       * </code>
       *
       * @return The mainText.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getMainText() {
        return mainText_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : mainText_;
      }
      /**
       *
       *
       * <pre>
       * Represents the name of the Place or query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .FormattableTextOrBuilder
          getMainTextOrBuilder() {
        return mainText_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : mainText_;
      }

      public static final int SECONDARY_TEXT_FIELD_NUMBER = 2;
      private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          secondaryText_;
      /**
       *
       *
       * <pre>
       * Represents additional disambiguating features (such as a city or
       * region) to further identify the Place or refine the query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
       * </code>
       *
       * @return Whether the secondaryText field is set.
       */
      @java.lang.Override
      public boolean hasSecondaryText() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * Represents additional disambiguating features (such as a city or
       * region) to further identify the Place or refine the query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
       * </code>
       *
       * @return The secondaryText.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getSecondaryText() {
        return secondaryText_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : secondaryText_;
      }
      /**
       *
       *
       * <pre>
       * Represents additional disambiguating features (such as a city or
       * region) to further identify the Place or refine the query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .FormattableTextOrBuilder
          getSecondaryTextOrBuilder() {
        return secondaryText_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : secondaryText_;
      }

      private byte memoizedIsInitialized = -1;

      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getMainText());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getSecondaryText());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getMainText());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getSecondaryText());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
          return true;
        }
        if (!(obj
            instanceof
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)) {
          return super.equals(obj);
        }
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat other =
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat) obj;

        if (hasMainText() != other.hasMainText()) return false;
        if (hasMainText()) {
          if (!getMainText().equals(other.getMainText())) return false;
        }
        if (hasSecondaryText() != other.hasSecondaryText()) return false;
        if (hasSecondaryText()) {
          if (!getSecondaryText().equals(other.getSecondaryText())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMainText()) {
          hash = (37 * hash) + MAIN_TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getMainText().hashCode();
        }
        if (hasSecondaryText()) {
          hash = (37 * hash) + SECONDARY_TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getSecondaryText().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(
              java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
              prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       *
       *
       * <pre>
       * Contains a breakdown of a Place or query prediction into main text
       * and secondary text.
       *
       * For Place predictions, the main text contains the specific name of the
       * Place. For query predictions, the main text contains the query.
       *
       * The secondary text contains additional disambiguating features (such as a
       * city or region) to further identify the Place or refine the query.
       * </pre>
       *
       * Protobuf type {@code
       * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .StructuredFormatOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StructuredFormat_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StructuredFormat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                      .class,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                      .Builder.class);
        }

        // Construct using
        // com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
            getMainTextFieldBuilder();
            getSecondaryTextFieldBuilder();
          }
        }

        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          mainText_ = null;
          if (mainTextBuilder_ != null) {
            mainTextBuilder_.dispose();
            mainTextBuilder_ = null;
          }
          secondaryText_ = null;
          if (secondaryTextBuilder_ != null) {
            secondaryTextBuilder_.dispose();
            secondaryTextBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_StructuredFormat_descriptor;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            getDefaultInstanceForType() {
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
              .getDefaultInstance();
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            build() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat result =
              buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            buildPartial() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat result =
              new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat(
                  this);
          if (bitField0_ != 0) {
            buildPartial0(result);
          }
          onBuilt();
          return result;
        }

        private void buildPartial0(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.mainText_ = mainTextBuilder_ == null ? mainText_ : mainTextBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.secondaryText_ =
                secondaryTextBuilder_ == null ? secondaryText_ : secondaryTextBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }

        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index,
            java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other
              instanceof
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat) {
            return mergeFrom(
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)
                    other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                other) {
          if (other
              == com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                  .getDefaultInstance()) return this;
          if (other.hasMainText()) {
            mergeMainText(other.getMainText());
          }
          if (other.hasSecondaryText()) {
            mergeSecondaryText(other.getSecondaryText());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10:
                  {
                    input.readMessage(getMainTextFieldBuilder().getBuilder(), extensionRegistry);
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                case 18:
                  {
                    input.readMessage(
                        getSecondaryTextFieldBuilder().getBuilder(), extensionRegistry);
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                default:
                  {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }

        private int bitField0_;

        private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            mainText_;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            mainTextBuilder_;
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         *
         * @return Whether the mainText field is set.
         */
        public boolean hasMainText() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         *
         * @return The mainText.
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            getMainText() {
          if (mainTextBuilder_ == null) {
            return mainText_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : mainText_;
          } else {
            return mainTextBuilder_.getMessage();
          }
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        public Builder setMainText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (mainTextBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mainText_ = value;
          } else {
            mainTextBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        public Builder setMainText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText.Builder
                builderForValue) {
          if (mainTextBuilder_ == null) {
            mainText_ = builderForValue.build();
          } else {
            mainTextBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        public Builder mergeMainText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (mainTextBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)
                && mainText_ != null
                && mainText_
                    != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableText.getDefaultInstance()) {
              getMainTextBuilder().mergeFrom(value);
            } else {
              mainText_ = value;
            }
          } else {
            mainTextBuilder_.mergeFrom(value);
          }
          if (mainText_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        public Builder clearMainText() {
          bitField0_ = (bitField0_ & ~0x00000001);
          mainText_ = null;
          if (mainTextBuilder_ != null) {
            mainTextBuilder_.dispose();
            mainTextBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .Builder
            getMainTextBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getMainTextFieldBuilder().getBuilder();
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                .FormattableTextOrBuilder
            getMainTextOrBuilder() {
          if (mainTextBuilder_ != null) {
            return mainTextBuilder_.getMessageOrBuilder();
          } else {
            return mainText_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : mainText_;
          }
        }
        /**
         *
         *
         * <pre>
         * Represents the name of the Place or query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText main_text = 1;
         * </code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            getMainTextFieldBuilder() {
          if (mainTextBuilder_ == null) {
            mainTextBuilder_ =
                new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableTextOrBuilder>(
                    getMainText(), getParentForChildren(), isClean());
            mainText_ = null;
          }
          return mainTextBuilder_;
        }

        private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            secondaryText_;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            secondaryTextBuilder_;
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         *
         * @return Whether the secondaryText field is set.
         */
        public boolean hasSecondaryText() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         *
         * @return The secondaryText.
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            getSecondaryText() {
          if (secondaryTextBuilder_ == null) {
            return secondaryText_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : secondaryText_;
          } else {
            return secondaryTextBuilder_.getMessage();
          }
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        public Builder setSecondaryText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (secondaryTextBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            secondaryText_ = value;
          } else {
            secondaryTextBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        public Builder setSecondaryText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText.Builder
                builderForValue) {
          if (secondaryTextBuilder_ == null) {
            secondaryText_ = builderForValue.build();
          } else {
            secondaryTextBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        public Builder mergeSecondaryText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (secondaryTextBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)
                && secondaryText_ != null
                && secondaryText_
                    != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableText.getDefaultInstance()) {
              getSecondaryTextBuilder().mergeFrom(value);
            } else {
              secondaryText_ = value;
            }
          } else {
            secondaryTextBuilder_.mergeFrom(value);
          }
          if (secondaryText_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        public Builder clearSecondaryText() {
          bitField0_ = (bitField0_ & ~0x00000002);
          secondaryText_ = null;
          if (secondaryTextBuilder_ != null) {
            secondaryTextBuilder_.dispose();
            secondaryTextBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .Builder
            getSecondaryTextBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getSecondaryTextFieldBuilder().getBuilder();
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                .FormattableTextOrBuilder
            getSecondaryTextOrBuilder() {
          if (secondaryTextBuilder_ != null) {
            return secondaryTextBuilder_.getMessageOrBuilder();
          } else {
            return secondaryText_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : secondaryText_;
          }
        }
        /**
         *
         *
         * <pre>
         * Represents additional disambiguating features (such as a city or
         * region) to further identify the Place or refine the query.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText secondary_text = 2;
         * </code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            getSecondaryTextFieldBuilder() {
          if (secondaryTextBuilder_ == null) {
            secondaryTextBuilder_ =
                new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableTextOrBuilder>(
                    getSecondaryText(), getParentForChildren(), isClean());
            secondaryText_ = null;
          }
          return secondaryTextBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)
      }

      // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat)
      private static final com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .StructuredFormat
          DEFAULT_INSTANCE;

      static {
        DEFAULT_INSTANCE =
            new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat();
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StructuredFormat> PARSER =
          new com.google.protobuf.AbstractParser<StructuredFormat>() {
            @java.lang.Override
            public StructuredFormat parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException()
                    .setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

      public static com.google.protobuf.Parser<StructuredFormat> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StructuredFormat> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }
    }

    public interface PlacePredictionOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
        com.google.protobuf.MessageOrBuilder {

      /**
       *
       *
       * <pre>
       * The resource name of the suggested Place. This name can be used in
       * other APIs that accept Place names.
       * </pre>
       *
       * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return The place.
       */
      java.lang.String getPlace();
      /**
       *
       *
       * <pre>
       * The resource name of the suggested Place. This name can be used in
       * other APIs that accept Place names.
       * </pre>
       *
       * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return The bytes for place.
       */
      com.google.protobuf.ByteString getPlaceBytes();

      /**
       *
       *
       * <pre>
       * The unique identifier of the suggested Place. This identifier can be
       * used in other APIs that accept Place IDs.
       * </pre>
       *
       * <code>string place_id = 2;</code>
       *
       * @return The placeId.
       */
      java.lang.String getPlaceId();
      /**
       *
       *
       * <pre>
       * The unique identifier of the suggested Place. This identifier can be
       * used in other APIs that accept Place IDs.
       * </pre>
       *
       * <code>string place_id = 2;</code>
       *
       * @return The bytes for placeId.
       */
      com.google.protobuf.ByteString getPlaceIdBytes();

      /**
       *
       *
       * <pre>
       * Contains the human-readable name for the returned result. For
       * establishment results, this is usually the business name and address.
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * This text may be different from the `display_name` returned by
       * GetPlace.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if the Place does not have a translation
       * from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
       * </code>
       *
       * @return Whether the text field is set.
       */
      boolean hasText();
      /**
       *
       *
       * <pre>
       * Contains the human-readable name for the returned result. For
       * establishment results, this is usually the business name and address.
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * This text may be different from the `display_name` returned by
       * GetPlace.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if the Place does not have a translation
       * from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
       * </code>
       *
       * @return The text.
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText getText();
      /**
       *
       *
       * <pre>
       * Contains the human-readable name for the returned result. For
       * establishment results, this is usually the business name and address.
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * This text may be different from the `display_name` returned by
       * GetPlace.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if the Place does not have a translation
       * from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableTextOrBuilder
          getTextOrBuilder();

      /**
       *
       *
       * <pre>
       * A breakdown of the Place prediction into main text containing the name
       * of the Place and secondary text containing additional disambiguating
       * features (such as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
       * </code>
       *
       * @return Whether the structuredFormat field is set.
       */
      boolean hasStructuredFormat();
      /**
       *
       *
       * <pre>
       * A breakdown of the Place prediction into main text containing the name
       * of the Place and secondary text containing additional disambiguating
       * features (such as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
       * </code>
       *
       * @return The structuredFormat.
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          getStructuredFormat();
      /**
       *
       *
       * <pre>
       * A breakdown of the Place prediction into main text containing the name
       * of the Place and secondary text containing additional disambiguating
       * features (such as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormatOrBuilder
          getStructuredFormatOrBuilder();

      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @return A list containing the types.
       */
      java.util.List<java.lang.String> getTypesList();
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @return The count of types.
       */
      int getTypesCount();
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @param index The index of the element to return.
       * @return The types at the given index.
       */
      java.lang.String getTypes(int index);
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the types at the given index.
       */
      com.google.protobuf.ByteString getTypesBytes(int index);

      /**
       *
       *
       * <pre>
       * The length of the geodesic in meters from `origin` if `origin` is
       * specified. Certain predictions such as routes may not populate this
       * field.
       * </pre>
       *
       * <code>int32 distance_meters = 6;</code>
       *
       * @return The distanceMeters.
       */
      int getDistanceMeters();
    }
    /**
     *
     *
     * <pre>
     * Prediction results for a Place Autocomplete prediction.
     * </pre>
     *
     * Protobuf type {@code
     * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction}
     */
    public static final class PlacePrediction extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
        PlacePredictionOrBuilder {
      private static final long serialVersionUID = 0L;
      // Use PlacePrediction.newBuilder() to construct.
      private PlacePrediction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }

      private PlacePrediction() {
        place_ = "";
        placeId_ = "";
        types_ = com.google.protobuf.LazyStringArrayList.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new PlacePrediction();
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_PlacePrediction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_PlacePrediction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                    .class,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                    .Builder.class);
      }

      private int bitField0_;
      public static final int PLACE_FIELD_NUMBER = 1;

      @SuppressWarnings("serial")
      private volatile java.lang.Object place_ = "";
      /**
       *
       *
       * <pre>
       * The resource name of the suggested Place. This name can be used in
       * other APIs that accept Place names.
       * </pre>
       *
       * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return The place.
       */
      @java.lang.Override
      public java.lang.String getPlace() {
        java.lang.Object ref = place_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          place_ = s;
          return s;
        }
      }
      /**
       *
       *
       * <pre>
       * The resource name of the suggested Place. This name can be used in
       * other APIs that accept Place names.
       * </pre>
       *
       * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return The bytes for place.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPlaceBytes() {
        java.lang.Object ref = place_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          place_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PLACE_ID_FIELD_NUMBER = 2;

      @SuppressWarnings("serial")
      private volatile java.lang.Object placeId_ = "";
      /**
       *
       *
       * <pre>
       * The unique identifier of the suggested Place. This identifier can be
       * used in other APIs that accept Place IDs.
       * </pre>
       *
       * <code>string place_id = 2;</code>
       *
       * @return The placeId.
       */
      @java.lang.Override
      public java.lang.String getPlaceId() {
        java.lang.Object ref = placeId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          placeId_ = s;
          return s;
        }
      }
      /**
       *
       *
       * <pre>
       * The unique identifier of the suggested Place. This identifier can be
       * used in other APIs that accept Place IDs.
       * </pre>
       *
       * <code>string place_id = 2;</code>
       *
       * @return The bytes for placeId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPlaceIdBytes() {
        java.lang.Object ref = placeId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          placeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TEXT_FIELD_NUMBER = 3;
      private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text_;
      /**
       *
       *
       * <pre>
       * Contains the human-readable name for the returned result. For
       * establishment results, this is usually the business name and address.
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * This text may be different from the `display_name` returned by
       * GetPlace.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if the Place does not have a translation
       * from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
       * </code>
       *
       * @return Whether the text field is set.
       */
      @java.lang.Override
      public boolean hasText() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Contains the human-readable name for the returned result. For
       * establishment results, this is usually the business name and address.
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * This text may be different from the `display_name` returned by
       * GetPlace.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if the Place does not have a translation
       * from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
       * </code>
       *
       * @return The text.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getText() {
        return text_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : text_;
      }
      /**
       *
       *
       * <pre>
       * Contains the human-readable name for the returned result. For
       * establishment results, this is usually the business name and address.
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * This text may be different from the `display_name` returned by
       * GetPlace.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if the Place does not have a translation
       * from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .FormattableTextOrBuilder
          getTextOrBuilder() {
        return text_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : text_;
      }

      public static final int STRUCTURED_FORMAT_FIELD_NUMBER = 4;
      private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          structuredFormat_;
      /**
       *
       *
       * <pre>
       * A breakdown of the Place prediction into main text containing the name
       * of the Place and secondary text containing additional disambiguating
       * features (such as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
       * </code>
       *
       * @return Whether the structuredFormat field is set.
       */
      @java.lang.Override
      public boolean hasStructuredFormat() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * A breakdown of the Place prediction into main text containing the name
       * of the Place and secondary text containing additional disambiguating
       * features (such as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
       * </code>
       *
       * @return The structuredFormat.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          getStructuredFormat() {
        return structuredFormat_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                .getDefaultInstance()
            : structuredFormat_;
      }
      /**
       *
       *
       * <pre>
       * A breakdown of the Place prediction into main text containing the name
       * of the Place and secondary text containing additional disambiguating
       * features (such as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a Place prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .StructuredFormatOrBuilder
          getStructuredFormatOrBuilder() {
        return structuredFormat_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                .getDefaultInstance()
            : structuredFormat_;
      }

      public static final int TYPES_FIELD_NUMBER = 5;

      @SuppressWarnings("serial")
      private com.google.protobuf.LazyStringArrayList types_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @return A list containing the types.
       */
      public com.google.protobuf.ProtocolStringList getTypesList() {
        return types_;
      }
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @return The count of types.
       */
      public int getTypesCount() {
        return types_.size();
      }
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @param index The index of the element to return.
       * @return The types at the given index.
       */
      public java.lang.String getTypes(int index) {
        return types_.get(index);
      }
      /**
       *
       *
       * <pre>
       * List of types that apply to this Place from Table A or Table B in
       * https://developers.google.com/maps/documentation/places/web-service/place-types.
       *
       * A type is a categorization of a Place. Places with shared types will
       * share similar characteristics.
       * </pre>
       *
       * <code>repeated string types = 5;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the types at the given index.
       */
      public com.google.protobuf.ByteString getTypesBytes(int index) {
        return types_.getByteString(index);
      }

      public static final int DISTANCE_METERS_FIELD_NUMBER = 6;
      private int distanceMeters_ = 0;
      /**
       *
       *
       * <pre>
       * The length of the geodesic in meters from `origin` if `origin` is
       * specified. Certain predictions such as routes may not populate this
       * field.
       * </pre>
       *
       * <code>int32 distance_meters = 6;</code>
       *
       * @return The distanceMeters.
       */
      @java.lang.Override
      public int getDistanceMeters() {
        return distanceMeters_;
      }

      private byte memoizedIsInitialized = -1;

      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(place_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, place_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(placeId_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, placeId_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(3, getText());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(4, getStructuredFormat());
        }
        for (int i = 0; i < types_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, types_.getRaw(i));
        }
        if (distanceMeters_ != 0) {
          output.writeInt32(6, distanceMeters_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(place_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, place_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(placeId_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, placeId_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getText());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size +=
              com.google.protobuf.CodedOutputStream.computeMessageSize(4, getStructuredFormat());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < types_.size(); i++) {
            dataSize += computeStringSizeNoTag(types_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getTypesList().size();
        }
        if (distanceMeters_ != 0) {
          size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, distanceMeters_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
          return true;
        }
        if (!(obj
            instanceof
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)) {
          return super.equals(obj);
        }
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction other =
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction) obj;

        if (!getPlace().equals(other.getPlace())) return false;
        if (!getPlaceId().equals(other.getPlaceId())) return false;
        if (hasText() != other.hasText()) return false;
        if (hasText()) {
          if (!getText().equals(other.getText())) return false;
        }
        if (hasStructuredFormat() != other.hasStructuredFormat()) return false;
        if (hasStructuredFormat()) {
          if (!getStructuredFormat().equals(other.getStructuredFormat())) return false;
        }
        if (!getTypesList().equals(other.getTypesList())) return false;
        if (getDistanceMeters() != other.getDistanceMeters()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PLACE_FIELD_NUMBER;
        hash = (53 * hash) + getPlace().hashCode();
        hash = (37 * hash) + PLACE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPlaceId().hashCode();
        if (hasText()) {
          hash = (37 * hash) + TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getText().hashCode();
        }
        if (hasStructuredFormat()) {
          hash = (37 * hash) + STRUCTURED_FORMAT_FIELD_NUMBER;
          hash = (53 * hash) + getStructuredFormat().hashCode();
        }
        if (getTypesCount() > 0) {
          hash = (37 * hash) + TYPES_FIELD_NUMBER;
          hash = (53 * hash) + getTypesList().hashCode();
        }
        hash = (37 * hash) + DISTANCE_METERS_FIELD_NUMBER;
        hash = (53 * hash) + getDistanceMeters();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(
              java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
              prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       *
       *
       * <pre>
       * Prediction results for a Place Autocomplete prediction.
       * </pre>
       *
       * Protobuf type {@code
       * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePredictionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_PlacePrediction_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_PlacePrediction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                      .class,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                      .Builder.class);
        }

        // Construct using
        // com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
            getTextFieldBuilder();
            getStructuredFormatFieldBuilder();
          }
        }

        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          place_ = "";
          placeId_ = "";
          text_ = null;
          if (textBuilder_ != null) {
            textBuilder_.dispose();
            textBuilder_ = null;
          }
          structuredFormat_ = null;
          if (structuredFormatBuilder_ != null) {
            structuredFormatBuilder_.dispose();
            structuredFormatBuilder_ = null;
          }
          types_ = com.google.protobuf.LazyStringArrayList.emptyList();
          distanceMeters_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_PlacePrediction_descriptor;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
            getDefaultInstanceForType() {
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
              .getDefaultInstance();
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
            build() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction result =
              buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
            buildPartial() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction result =
              new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction(
                  this);
          if (bitField0_ != 0) {
            buildPartial0(result);
          }
          onBuilt();
          return result;
        }

        private void buildPartial0(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.place_ = place_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.placeId_ = placeId_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.text_ = textBuilder_ == null ? text_ : textBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.structuredFormat_ =
                structuredFormatBuilder_ == null
                    ? structuredFormat_
                    : structuredFormatBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            types_.makeImmutable();
            result.types_ = types_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.distanceMeters_ = distanceMeters_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }

        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index,
            java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other
              instanceof
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction) {
            return mergeFrom(
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
                    other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction other) {
          if (other
              == com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                  .getDefaultInstance()) return this;
          if (!other.getPlace().isEmpty()) {
            place_ = other.place_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.getPlaceId().isEmpty()) {
            placeId_ = other.placeId_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.hasText()) {
            mergeText(other.getText());
          }
          if (other.hasStructuredFormat()) {
            mergeStructuredFormat(other.getStructuredFormat());
          }
          if (!other.types_.isEmpty()) {
            if (types_.isEmpty()) {
              types_ = other.types_;
              bitField0_ |= 0x00000010;
            } else {
              ensureTypesIsMutable();
              types_.addAll(other.types_);
            }
            onChanged();
          }
          if (other.getDistanceMeters() != 0) {
            setDistanceMeters(other.getDistanceMeters());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10:
                  {
                    place_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                case 18:
                  {
                    placeId_ = input.readStringRequireUtf8();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                case 26:
                  {
                    input.readMessage(getTextFieldBuilder().getBuilder(), extensionRegistry);
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 26
                case 34:
                  {
                    input.readMessage(
                        getStructuredFormatFieldBuilder().getBuilder(), extensionRegistry);
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 34
                case 42:
                  {
                    java.lang.String s = input.readStringRequireUtf8();
                    ensureTypesIsMutable();
                    types_.add(s);
                    break;
                  } // case 42
                case 48:
                  {
                    distanceMeters_ = input.readInt32();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 48
                default:
                  {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }

        private int bitField0_;

        private java.lang.Object place_ = "";
        /**
         *
         *
         * <pre>
         * The resource name of the suggested Place. This name can be used in
         * other APIs that accept Place names.
         * </pre>
         *
         * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
         *
         * @return The place.
         */
        public java.lang.String getPlace() {
          java.lang.Object ref = place_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            place_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         *
         *
         * <pre>
         * The resource name of the suggested Place. This name can be used in
         * other APIs that accept Place names.
         * </pre>
         *
         * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
         *
         * @return The bytes for place.
         */
        public com.google.protobuf.ByteString getPlaceBytes() {
          java.lang.Object ref = place_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            place_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         *
         *
         * <pre>
         * The resource name of the suggested Place. This name can be used in
         * other APIs that accept Place names.
         * </pre>
         *
         * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
         *
         * @param value The place to set.
         * @return This builder for chaining.
         */
        public Builder setPlace(java.lang.String value) {
          if (value == null) {
            throw new NullPointerException();
          }
          place_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The resource name of the suggested Place. This name can be used in
         * other APIs that accept Place names.
         * </pre>
         *
         * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearPlace() {
          place_ = getDefaultInstance().getPlace();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The resource name of the suggested Place. This name can be used in
         * other APIs that accept Place names.
         * </pre>
         *
         * <code>string place = 1 [(.google.api.resource_reference) = { ... }</code>
         *
         * @param value The bytes for place to set.
         * @return This builder for chaining.
         */
        public Builder setPlaceBytes(com.google.protobuf.ByteString value) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkByteStringIsUtf8(value);
          place_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.lang.Object placeId_ = "";
        /**
         *
         *
         * <pre>
         * The unique identifier of the suggested Place. This identifier can be
         * used in other APIs that accept Place IDs.
         * </pre>
         *
         * <code>string place_id = 2;</code>
         *
         * @return The placeId.
         */
        public java.lang.String getPlaceId() {
          java.lang.Object ref = placeId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            placeId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         *
         *
         * <pre>
         * The unique identifier of the suggested Place. This identifier can be
         * used in other APIs that accept Place IDs.
         * </pre>
         *
         * <code>string place_id = 2;</code>
         *
         * @return The bytes for placeId.
         */
        public com.google.protobuf.ByteString getPlaceIdBytes() {
          java.lang.Object ref = placeId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            placeId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         *
         *
         * <pre>
         * The unique identifier of the suggested Place. This identifier can be
         * used in other APIs that accept Place IDs.
         * </pre>
         *
         * <code>string place_id = 2;</code>
         *
         * @param value The placeId to set.
         * @return This builder for chaining.
         */
        public Builder setPlaceId(java.lang.String value) {
          if (value == null) {
            throw new NullPointerException();
          }
          placeId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The unique identifier of the suggested Place. This identifier can be
         * used in other APIs that accept Place IDs.
         * </pre>
         *
         * <code>string place_id = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearPlaceId() {
          placeId_ = getDefaultInstance().getPlaceId();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The unique identifier of the suggested Place. This identifier can be
         * used in other APIs that accept Place IDs.
         * </pre>
         *
         * <code>string place_id = 2;</code>
         *
         * @param value The bytes for placeId to set.
         * @return This builder for chaining.
         */
        public Builder setPlaceIdBytes(com.google.protobuf.ByteString value) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkByteStringIsUtf8(value);
          placeId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            text_;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            textBuilder_;
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         *
         * @return Whether the text field is set.
         */
        public boolean hasText() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         *
         * @return The text.
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            getText() {
          if (textBuilder_ == null) {
            return text_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : text_;
          } else {
            return textBuilder_.getMessage();
          }
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        public Builder setText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (textBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            text_ = value;
          } else {
            textBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        public Builder setText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText.Builder
                builderForValue) {
          if (textBuilder_ == null) {
            text_ = builderForValue.build();
          } else {
            textBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        public Builder mergeText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (textBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0)
                && text_ != null
                && text_
                    != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableText.getDefaultInstance()) {
              getTextBuilder().mergeFrom(value);
            } else {
              text_ = value;
            }
          } else {
            textBuilder_.mergeFrom(value);
          }
          if (text_ != null) {
            bitField0_ |= 0x00000004;
            onChanged();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        public Builder clearText() {
          bitField0_ = (bitField0_ & ~0x00000004);
          text_ = null;
          if (textBuilder_ != null) {
            textBuilder_.dispose();
            textBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .Builder
            getTextBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getTextFieldBuilder().getBuilder();
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                .FormattableTextOrBuilder
            getTextOrBuilder() {
          if (textBuilder_ != null) {
            return textBuilder_.getMessageOrBuilder();
          } else {
            return text_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : text_;
          }
        }
        /**
         *
         *
         * <pre>
         * Contains the human-readable name for the returned result. For
         * establishment results, this is usually the business name and address.
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * This text may be different from the `display_name` returned by
         * GetPlace.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if the Place does not have a translation
         * from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 3;
         * </code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            getTextFieldBuilder() {
          if (textBuilder_ == null) {
            textBuilder_ =
                new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableTextOrBuilder>(getText(), getParentForChildren(), isClean());
            text_ = null;
          }
          return textBuilder_;
        }

        private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            structuredFormat_;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .StructuredFormatOrBuilder>
            structuredFormatBuilder_;
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         *
         * @return Whether the structuredFormat field is set.
         */
        public boolean hasStructuredFormat() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         *
         * @return The structuredFormat.
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            getStructuredFormat() {
          if (structuredFormatBuilder_ == null) {
            return structuredFormat_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .getDefaultInstance()
                : structuredFormat_;
          } else {
            return structuredFormatBuilder_.getMessage();
          }
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        public Builder setStructuredFormat(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                value) {
          if (structuredFormatBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            structuredFormat_ = value;
          } else {
            structuredFormatBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        public Builder setStructuredFormat(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat.Builder
                builderForValue) {
          if (structuredFormatBuilder_ == null) {
            structuredFormat_ = builderForValue.build();
          } else {
            structuredFormatBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        public Builder mergeStructuredFormat(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                value) {
          if (structuredFormatBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0)
                && structuredFormat_ != null
                && structuredFormat_
                    != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StructuredFormat.getDefaultInstance()) {
              getStructuredFormatBuilder().mergeFrom(value);
            } else {
              structuredFormat_ = value;
            }
          } else {
            structuredFormatBuilder_.mergeFrom(value);
          }
          if (structuredFormat_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        public Builder clearStructuredFormat() {
          bitField0_ = (bitField0_ & ~0x00000008);
          structuredFormat_ = null;
          if (structuredFormatBuilder_ != null) {
            structuredFormatBuilder_.dispose();
            structuredFormatBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                .Builder
            getStructuredFormatBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getStructuredFormatFieldBuilder().getBuilder();
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                .StructuredFormatOrBuilder
            getStructuredFormatOrBuilder() {
          if (structuredFormatBuilder_ != null) {
            return structuredFormatBuilder_.getMessageOrBuilder();
          } else {
            return structuredFormat_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .getDefaultInstance()
                : structuredFormat_;
          }
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the Place prediction into main text containing the name
         * of the Place and secondary text containing additional disambiguating
         * features (such as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a Place prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 4;
         * </code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .StructuredFormatOrBuilder>
            getStructuredFormatFieldBuilder() {
          if (structuredFormatBuilder_ == null) {
            structuredFormatBuilder_ =
                new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StructuredFormat,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StructuredFormatOrBuilder>(
                    getStructuredFormat(), getParentForChildren(), isClean());
            structuredFormat_ = null;
          }
          return structuredFormatBuilder_;
        }

        private com.google.protobuf.LazyStringArrayList types_ =
            com.google.protobuf.LazyStringArrayList.emptyList();

        private void ensureTypesIsMutable() {
          if (!types_.isModifiable()) {
            types_ = new com.google.protobuf.LazyStringArrayList(types_);
          }
          bitField0_ |= 0x00000010;
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @return A list containing the types.
         */
        public com.google.protobuf.ProtocolStringList getTypesList() {
          types_.makeImmutable();
          return types_;
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @return The count of types.
         */
        public int getTypesCount() {
          return types_.size();
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The types at the given index.
         */
        public java.lang.String getTypes(int index) {
          return types_.get(index);
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the types at the given index.
         */
        public com.google.protobuf.ByteString getTypesBytes(int index) {
          return types_.getByteString(index);
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @param index The index to set the value at.
         * @param value The types to set.
         * @return This builder for chaining.
         */
        public Builder setTypes(int index, java.lang.String value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.set(index, value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @param value The types to add.
         * @return This builder for chaining.
         */
        public Builder addTypes(java.lang.String value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.add(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @param values The types to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypes(java.lang.Iterable<java.lang.String> values) {
          ensureTypesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, types_);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTypes() {
          types_ = com.google.protobuf.LazyStringArrayList.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          ;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of types that apply to this Place from Table A or Table B in
         * https://developers.google.com/maps/documentation/places/web-service/place-types.
         *
         * A type is a categorization of a Place. Places with shared types will
         * share similar characteristics.
         * </pre>
         *
         * <code>repeated string types = 5;</code>
         *
         * @param value The bytes of the types to add.
         * @return This builder for chaining.
         */
        public Builder addTypesBytes(com.google.protobuf.ByteString value) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkByteStringIsUtf8(value);
          ensureTypesIsMutable();
          types_.add(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }

        private int distanceMeters_;
        /**
         *
         *
         * <pre>
         * The length of the geodesic in meters from `origin` if `origin` is
         * specified. Certain predictions such as routes may not populate this
         * field.
         * </pre>
         *
         * <code>int32 distance_meters = 6;</code>
         *
         * @return The distanceMeters.
         */
        @java.lang.Override
        public int getDistanceMeters() {
          return distanceMeters_;
        }
        /**
         *
         *
         * <pre>
         * The length of the geodesic in meters from `origin` if `origin` is
         * specified. Certain predictions such as routes may not populate this
         * field.
         * </pre>
         *
         * <code>int32 distance_meters = 6;</code>
         *
         * @param value The distanceMeters to set.
         * @return This builder for chaining.
         */
        public Builder setDistanceMeters(int value) {

          distanceMeters_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The length of the geodesic in meters from `origin` if `origin` is
         * specified. Certain predictions such as routes may not populate this
         * field.
         * </pre>
         *
         * <code>int32 distance_meters = 6;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearDistanceMeters() {
          bitField0_ = (bitField0_ & ~0x00000020);
          distanceMeters_ = 0;
          onChanged();
          return this;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
      }

      // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
      private static final com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .PlacePrediction
          DEFAULT_INSTANCE;

      static {
        DEFAULT_INSTANCE =
            new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction();
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PlacePrediction> PARSER =
          new com.google.protobuf.AbstractParser<PlacePrediction>() {
            @java.lang.Override
            public PlacePrediction parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException()
                    .setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

      public static com.google.protobuf.Parser<PlacePrediction> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PlacePrediction> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }
    }

    public interface QueryPredictionOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
        com.google.protobuf.MessageOrBuilder {

      /**
       *
       *
       * <pre>
       * The predicted text. This text does not represent a Place, but rather a
       * text query that could be used in a search endpoint (for example,
       * Text Search).
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if part of the query does not have a
       * translation from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
       * </code>
       *
       * @return Whether the text field is set.
       */
      boolean hasText();
      /**
       *
       *
       * <pre>
       * The predicted text. This text does not represent a Place, but rather a
       * text query that could be used in a search endpoint (for example,
       * Text Search).
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if part of the query does not have a
       * translation from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
       * </code>
       *
       * @return The text.
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText getText();
      /**
       *
       *
       * <pre>
       * The predicted text. This text does not represent a Place, but rather a
       * text query that could be used in a search endpoint (for example,
       * Text Search).
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if part of the query does not have a
       * translation from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableTextOrBuilder
          getTextOrBuilder();

      /**
       *
       *
       * <pre>
       * A breakdown of the query prediction into main text containing the query
       * and secondary text containing additional disambiguating features (such
       * as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
       * </code>
       *
       * @return Whether the structuredFormat field is set.
       */
      boolean hasStructuredFormat();
      /**
       *
       *
       * <pre>
       * A breakdown of the query prediction into main text containing the query
       * and secondary text containing additional disambiguating features (such
       * as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
       * </code>
       *
       * @return The structuredFormat.
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          getStructuredFormat();
      /**
       *
       *
       * <pre>
       * A breakdown of the query prediction into main text containing the query
       * and secondary text containing additional disambiguating features (such
       * as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
       * </code>
       */
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormatOrBuilder
          getStructuredFormatOrBuilder();
    }
    /**
     *
     *
     * <pre>
     * Prediction results for a Query Autocomplete prediction.
     * </pre>
     *
     * Protobuf type {@code
     * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction}
     */
    public static final class QueryPrediction extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
        QueryPredictionOrBuilder {
      private static final long serialVersionUID = 0L;
      // Use QueryPrediction.newBuilder() to construct.
      private QueryPrediction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }

      private QueryPrediction() {}

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new QueryPrediction();
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_QueryPrediction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_QueryPrediction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                    .class,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                    .Builder.class);
      }

      private int bitField0_;
      public static final int TEXT_FIELD_NUMBER = 1;
      private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text_;
      /**
       *
       *
       * <pre>
       * The predicted text. This text does not represent a Place, but rather a
       * text query that could be used in a search endpoint (for example,
       * Text Search).
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if part of the query does not have a
       * translation from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
       * </code>
       *
       * @return Whether the text field is set.
       */
      @java.lang.Override
      public boolean hasText() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * The predicted text. This text does not represent a Place, but rather a
       * text query that could be used in a search endpoint (for example,
       * Text Search).
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if part of the query does not have a
       * translation from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
       * </code>
       *
       * @return The text.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
          getText() {
        return text_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : text_;
      }
      /**
       *
       *
       * <pre>
       * The predicted text. This text does not represent a Place, but rather a
       * text query that could be used in a search endpoint (for example,
       * Text Search).
       *
       * `text` is recommended for developers who wish to show a single UI
       * element. Developers who wish to show two separate, but related, UI
       * elements may want to use `structured_format` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       *
       * May be in mixed languages if the request `input` and `language_code`
       * are in different languages or if part of the query does not have a
       * translation from the local language to `language_code`.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .FormattableTextOrBuilder
          getTextOrBuilder() {
        return text_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .getDefaultInstance()
            : text_;
      }

      public static final int STRUCTURED_FORMAT_FIELD_NUMBER = 2;
      private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          structuredFormat_;
      /**
       *
       *
       * <pre>
       * A breakdown of the query prediction into main text containing the query
       * and secondary text containing additional disambiguating features (such
       * as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
       * </code>
       *
       * @return Whether the structuredFormat field is set.
       */
      @java.lang.Override
      public boolean hasStructuredFormat() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * A breakdown of the query prediction into main text containing the query
       * and secondary text containing additional disambiguating features (such
       * as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
       * </code>
       *
       * @return The structuredFormat.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
          getStructuredFormat() {
        return structuredFormat_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                .getDefaultInstance()
            : structuredFormat_;
      }
      /**
       *
       *
       * <pre>
       * A breakdown of the query prediction into main text containing the query
       * and secondary text containing additional disambiguating features (such
       * as a city or region).
       *
       * `structured_format` is recommended for developers who wish to show two
       * separate, but related, UI elements. Developers who wish to show a
       * single UI element may want to use `text` instead. They are two
       * different ways to represent a query prediction. Users should not try to
       * parse `structured_format` into `text` or vice versa.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .StructuredFormatOrBuilder
          getStructuredFormatOrBuilder() {
        return structuredFormat_ == null
            ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                .getDefaultInstance()
            : structuredFormat_;
      }

      private byte memoizedIsInitialized = -1;

      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getText());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getStructuredFormat());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getText());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size +=
              com.google.protobuf.CodedOutputStream.computeMessageSize(2, getStructuredFormat());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
          return true;
        }
        if (!(obj
            instanceof
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)) {
          return super.equals(obj);
        }
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction other =
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction) obj;

        if (hasText() != other.hasText()) return false;
        if (hasText()) {
          if (!getText().equals(other.getText())) return false;
        }
        if (hasStructuredFormat() != other.hasStructuredFormat()) return false;
        if (hasStructuredFormat()) {
          if (!getStructuredFormat().equals(other.getStructuredFormat())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasText()) {
          hash = (37 * hash) + TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getText().hashCode();
        }
        if (hasStructuredFormat()) {
          hash = (37 * hash) + STRUCTURED_FORMAT_FIELD_NUMBER;
          hash = (53 * hash) + getStructuredFormat().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(
              java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
              prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       *
       *
       * <pre>
       * Prediction results for a Query Autocomplete prediction.
       * </pre>
       *
       * Protobuf type {@code
       * google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPredictionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_QueryPrediction_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_QueryPrediction_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                      .class,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                      .Builder.class);
        }

        // Construct using
        // com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
            getTextFieldBuilder();
            getStructuredFormatFieldBuilder();
          }
        }

        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          text_ = null;
          if (textBuilder_ != null) {
            textBuilder_.dispose();
            textBuilder_ = null;
          }
          structuredFormat_ = null;
          if (structuredFormatBuilder_ != null) {
            structuredFormatBuilder_.dispose();
            structuredFormatBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.google.maps.places.v1.PlacesServiceProto
              .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_QueryPrediction_descriptor;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
            getDefaultInstanceForType() {
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
              .getDefaultInstance();
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
            build() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction result =
              buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
            buildPartial() {
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction result =
              new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction(
                  this);
          if (bitField0_ != 0) {
            buildPartial0(result);
          }
          onBuilt();
          return result;
        }

        private void buildPartial0(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.text_ = textBuilder_ == null ? text_ : textBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.structuredFormat_ =
                structuredFormatBuilder_ == null
                    ? structuredFormat_
                    : structuredFormatBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }

        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index,
            java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other
              instanceof
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction) {
            return mergeFrom(
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
                    other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction other) {
          if (other
              == com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                  .getDefaultInstance()) return this;
          if (other.hasText()) {
            mergeText(other.getText());
          }
          if (other.hasStructuredFormat()) {
            mergeStructuredFormat(other.getStructuredFormat());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10:
                  {
                    input.readMessage(getTextFieldBuilder().getBuilder(), extensionRegistry);
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                case 18:
                  {
                    input.readMessage(
                        getStructuredFormatFieldBuilder().getBuilder(), extensionRegistry);
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                default:
                  {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }

        private int bitField0_;

        private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            text_;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            textBuilder_;
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         *
         * @return Whether the text field is set.
         */
        public boolean hasText() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         *
         * @return The text.
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
            getText() {
          if (textBuilder_ == null) {
            return text_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : text_;
          } else {
            return textBuilder_.getMessage();
          }
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        public Builder setText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (textBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            text_ = value;
          } else {
            textBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        public Builder setText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText.Builder
                builderForValue) {
          if (textBuilder_ == null) {
            text_ = builderForValue.build();
          } else {
            textBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        public Builder mergeText(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText value) {
          if (textBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)
                && text_ != null
                && text_
                    != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableText.getDefaultInstance()) {
              getTextBuilder().mergeFrom(value);
            } else {
              text_ = value;
            }
          } else {
            textBuilder_.mergeFrom(value);
          }
          if (text_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        public Builder clearText() {
          bitField0_ = (bitField0_ & ~0x00000001);
          text_ = null;
          if (textBuilder_ != null) {
            textBuilder_.dispose();
            textBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                .Builder
            getTextBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getTextFieldBuilder().getBuilder();
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                .FormattableTextOrBuilder
            getTextOrBuilder() {
          if (textBuilder_ != null) {
            return textBuilder_.getMessageOrBuilder();
          } else {
            return text_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .getDefaultInstance()
                : text_;
          }
        }
        /**
         *
         *
         * <pre>
         * The predicted text. This text does not represent a Place, but rather a
         * text query that could be used in a search endpoint (for example,
         * Text Search).
         *
         * `text` is recommended for developers who wish to show a single UI
         * element. Developers who wish to show two separate, but related, UI
         * elements may want to use `structured_format` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         *
         * May be in mixed languages if the request `input` and `language_code`
         * are in different languages or if part of the query does not have a
         * translation from the local language to `language_code`.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText text = 1;
         * </code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .FormattableTextOrBuilder>
            getTextFieldBuilder() {
          if (textBuilder_ == null) {
            textBuilder_ =
                new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.FormattableText
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .FormattableTextOrBuilder>(getText(), getParentForChildren(), isClean());
            text_ = null;
          }
          return textBuilder_;
        }

        private com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            structuredFormat_;
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .StructuredFormatOrBuilder>
            structuredFormatBuilder_;
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         *
         * @return Whether the structuredFormat field is set.
         */
        public boolean hasStructuredFormat() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         *
         * @return The structuredFormat.
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
            getStructuredFormat() {
          if (structuredFormatBuilder_ == null) {
            return structuredFormat_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .getDefaultInstance()
                : structuredFormat_;
          } else {
            return structuredFormatBuilder_.getMessage();
          }
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        public Builder setStructuredFormat(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                value) {
          if (structuredFormatBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            structuredFormat_ = value;
          } else {
            structuredFormatBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        public Builder setStructuredFormat(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat.Builder
                builderForValue) {
          if (structuredFormatBuilder_ == null) {
            structuredFormat_ = builderForValue.build();
          } else {
            structuredFormatBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        public Builder mergeStructuredFormat(
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                value) {
          if (structuredFormatBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)
                && structuredFormat_ != null
                && structuredFormat_
                    != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StructuredFormat.getDefaultInstance()) {
              getStructuredFormatBuilder().mergeFrom(value);
            } else {
              structuredFormat_ = value;
            }
          } else {
            structuredFormatBuilder_.mergeFrom(value);
          }
          if (structuredFormat_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        public Builder clearStructuredFormat() {
          bitField0_ = (bitField0_ & ~0x00000002);
          structuredFormat_ = null;
          if (structuredFormatBuilder_ != null) {
            structuredFormatBuilder_.dispose();
            structuredFormatBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                .Builder
            getStructuredFormatBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getStructuredFormatFieldBuilder().getBuilder();
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                .StructuredFormatOrBuilder
            getStructuredFormatOrBuilder() {
          if (structuredFormatBuilder_ != null) {
            return structuredFormatBuilder_.getMessageOrBuilder();
          } else {
            return structuredFormat_ == null
                ? com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .getDefaultInstance()
                : structuredFormat_;
          }
        }
        /**
         *
         *
         * <pre>
         * A breakdown of the query prediction into main text containing the query
         * and secondary text containing additional disambiguating features (such
         * as a city or region).
         *
         * `structured_format` is recommended for developers who wish to show two
         * separate, but related, UI elements. Developers who wish to show a
         * single UI element may want to use `text` instead. They are two
         * different ways to represent a query prediction. Users should not try to
         * parse `structured_format` into `text` or vice versa.
         * </pre>
         *
         * <code>
         * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat structured_format = 2;
         * </code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                    .Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                    .StructuredFormatOrBuilder>
            getStructuredFormatFieldBuilder() {
          if (structuredFormatBuilder_ == null) {
            structuredFormatBuilder_ =
                new com.google.protobuf.SingleFieldBuilderV3<
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StructuredFormat,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.StructuredFormat
                        .Builder,
                    com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                        .StructuredFormatOrBuilder>(
                    getStructuredFormat(), getParentForChildren(), isClean());
            structuredFormat_ = null;
          }
          return structuredFormatBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
      }

      // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
      private static final com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .QueryPrediction
          DEFAULT_INSTANCE;

      static {
        DEFAULT_INSTANCE =
            new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction();
      }

      public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<QueryPrediction> PARSER =
          new com.google.protobuf.AbstractParser<QueryPrediction>() {
            @java.lang.Override
            public QueryPrediction parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              Builder builder = newBuilder();
              try {
                builder.mergeFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
              } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException()
                    .setUnfinishedMessage(builder.buildPartial());
              } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                    .setUnfinishedMessage(builder.buildPartial());
              }
              return builder.buildPartial();
            }
          };

      public static com.google.protobuf.Parser<QueryPrediction> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryPrediction> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }
    }

    private int kindCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object kind_;

    public enum KindCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PLACE_PREDICTION(1),
      QUERY_PREDICTION(2),
      KIND_NOT_SET(0);
      private final int value;

      private KindCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KindCase valueOf(int value) {
        return forNumber(value);
      }

      public static KindCase forNumber(int value) {
        switch (value) {
          case 1:
            return PLACE_PREDICTION;
          case 2:
            return QUERY_PREDICTION;
          case 0:
            return KIND_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public KindCase getKindCase() {
      return KindCase.forNumber(kindCase_);
    }

    public static final int PLACE_PREDICTION_FIELD_NUMBER = 1;
    /**
     *
     *
     * <pre>
     * A prediction for a Place.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
     * </code>
     *
     * @return Whether the placePrediction field is set.
     */
    @java.lang.Override
    public boolean hasPlacePrediction() {
      return kindCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * A prediction for a Place.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
     * </code>
     *
     * @return The placePrediction.
     */
    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
        getPlacePrediction() {
      if (kindCase_ == 1) {
        return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
            kind_;
      }
      return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          .getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * A prediction for a Place.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePredictionOrBuilder
        getPlacePredictionOrBuilder() {
      if (kindCase_ == 1) {
        return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
            kind_;
      }
      return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          .getDefaultInstance();
    }

    public static final int QUERY_PREDICTION_FIELD_NUMBER = 2;
    /**
     *
     *
     * <pre>
     * A prediction for a query.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
     * </code>
     *
     * @return Whether the queryPrediction field is set.
     */
    @java.lang.Override
    public boolean hasQueryPrediction() {
      return kindCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * A prediction for a query.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
     * </code>
     *
     * @return The queryPrediction.
     */
    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
        getQueryPrediction() {
      if (kindCase_ == 2) {
        return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
            kind_;
      }
      return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          .getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * A prediction for a query.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPredictionOrBuilder
        getQueryPredictionOrBuilder() {
      if (kindCase_ == 2) {
        return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
            kind_;
      }
      return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          .getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (kindCase_ == 1) {
        output.writeMessage(
            1,
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
                kind_);
      }
      if (kindCase_ == 2) {
        output.writeMessage(
            2,
            (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
                kind_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (kindCase_ == 1) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                1,
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
                    kind_);
      }
      if (kindCase_ == 2) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                2,
                (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
                    kind_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion)) {
        return super.equals(obj);
      }
      com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion other =
          (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion) obj;

      if (!getKindCase().equals(other.getKindCase())) return false;
      switch (kindCase_) {
        case 1:
          if (!getPlacePrediction().equals(other.getPlacePrediction())) return false;
          break;
        case 2:
          if (!getQueryPrediction().equals(other.getQueryPrediction())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (kindCase_) {
        case 1:
          hash = (37 * hash) + PLACE_PREDICTION_FIELD_NUMBER;
          hash = (53 * hash) + getPlacePrediction().hashCode();
          break;
        case 2:
          hash = (37 * hash) + QUERY_PREDICTION_FIELD_NUMBER;
          hash = (53 * hash) + getQueryPrediction().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * An Autocomplete suggestion result.
     * </pre>
     *
     * Protobuf type {@code google.maps.places.v1.AutocompletePlacesResponse.Suggestion}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse.Suggestion)
        com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.class,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder.class);
      }

      // Construct using
      // com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (placePredictionBuilder_ != null) {
          placePredictionBuilder_.clear();
        }
        if (queryPredictionBuilder_ != null) {
          queryPredictionBuilder_.clear();
        }
        kindCase_ = 0;
        kind_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesResponse_Suggestion_descriptor;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
          getDefaultInstanceForType() {
        return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion build() {
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion buildPartial() {
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion result =
            new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion result) {
        result.kindCase_ = kindCase_;
        result.kind_ = this.kind_;
        if (kindCase_ == 1 && placePredictionBuilder_ != null) {
          result.kind_ = placePredictionBuilder_.build();
        }
        if (kindCase_ == 2 && queryPredictionBuilder_ != null) {
          result.kind_ = queryPredictionBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion) {
          return mergeFrom((com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion other) {
        if (other
            == com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.getDefaultInstance())
          return this;
        switch (other.getKindCase()) {
          case PLACE_PREDICTION:
            {
              mergePlacePrediction(other.getPlacePrediction());
              break;
            }
          case QUERY_PREDICTION:
            {
              mergeQueryPrediction(other.getQueryPrediction());
              break;
            }
          case KIND_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(
                      getPlacePredictionFieldBuilder().getBuilder(), extensionRegistry);
                  kindCase_ = 1;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(
                      getQueryPredictionFieldBuilder().getBuilder(), extensionRegistry);
                  kindCase_ = 2;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int kindCase_ = 0;
      private java.lang.Object kind_;

      public KindCase getKindCase() {
        return KindCase.forNumber(kindCase_);
      }

      public Builder clearKind() {
        kindCase_ = 0;
        kind_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                  .Builder,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                  .PlacePredictionOrBuilder>
          placePredictionBuilder_;
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       *
       * @return Whether the placePrediction field is set.
       */
      @java.lang.Override
      public boolean hasPlacePrediction() {
        return kindCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       *
       * @return The placePrediction.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
          getPlacePrediction() {
        if (placePredictionBuilder_ == null) {
          if (kindCase_ == 1) {
            return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
                kind_;
          }
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
              .getDefaultInstance();
        } else {
          if (kindCase_ == 1) {
            return placePredictionBuilder_.getMessage();
          }
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
              .getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      public Builder setPlacePrediction(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction value) {
        if (placePredictionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kind_ = value;
          onChanged();
        } else {
          placePredictionBuilder_.setMessage(value);
        }
        kindCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      public Builder setPlacePrediction(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction.Builder
              builderForValue) {
        if (placePredictionBuilder_ == null) {
          kind_ = builderForValue.build();
          onChanged();
        } else {
          placePredictionBuilder_.setMessage(builderForValue.build());
        }
        kindCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      public Builder mergePlacePrediction(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction value) {
        if (placePredictionBuilder_ == null) {
          if (kindCase_ == 1
              && kind_
                  != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                      .getDefaultInstance()) {
            kind_ =
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                    .newBuilder(
                        (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                                .PlacePrediction)
                            kind_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            kind_ = value;
          }
          onChanged();
        } else {
          if (kindCase_ == 1) {
            placePredictionBuilder_.mergeFrom(value);
          } else {
            placePredictionBuilder_.setMessage(value);
          }
        }
        kindCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      public Builder clearPlacePrediction() {
        if (placePredictionBuilder_ == null) {
          if (kindCase_ == 1) {
            kindCase_ = 0;
            kind_ = null;
            onChanged();
          }
        } else {
          if (kindCase_ == 1) {
            kindCase_ = 0;
            kind_ = null;
          }
          placePredictionBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction.Builder
          getPlacePredictionBuilder() {
        return getPlacePredictionFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .PlacePredictionOrBuilder
          getPlacePredictionOrBuilder() {
        if ((kindCase_ == 1) && (placePredictionBuilder_ != null)) {
          return placePredictionBuilder_.getMessageOrBuilder();
        } else {
          if (kindCase_ == 1) {
            return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
                kind_;
          }
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
              .getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A prediction for a Place.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction place_prediction = 1;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                  .Builder,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                  .PlacePredictionOrBuilder>
          getPlacePredictionFieldBuilder() {
        if (placePredictionBuilder_ == null) {
          if (!(kindCase_ == 1)) {
            kind_ =
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                    .getDefaultInstance();
          }
          placePredictionBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction
                      .Builder,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                      .PlacePredictionOrBuilder>(
                  (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.PlacePrediction)
                      kind_,
                  getParentForChildren(),
                  isClean());
          kind_ = null;
        }
        kindCase_ = 1;
        onChanged();
        return placePredictionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                  .Builder,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                  .QueryPredictionOrBuilder>
          queryPredictionBuilder_;
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       *
       * @return Whether the queryPrediction field is set.
       */
      @java.lang.Override
      public boolean hasQueryPrediction() {
        return kindCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       *
       * @return The queryPrediction.
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
          getQueryPrediction() {
        if (queryPredictionBuilder_ == null) {
          if (kindCase_ == 2) {
            return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
                kind_;
          }
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
              .getDefaultInstance();
        } else {
          if (kindCase_ == 2) {
            return queryPredictionBuilder_.getMessage();
          }
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
              .getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      public Builder setQueryPrediction(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction value) {
        if (queryPredictionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kind_ = value;
          onChanged();
        } else {
          queryPredictionBuilder_.setMessage(value);
        }
        kindCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      public Builder setQueryPrediction(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction.Builder
              builderForValue) {
        if (queryPredictionBuilder_ == null) {
          kind_ = builderForValue.build();
          onChanged();
        } else {
          queryPredictionBuilder_.setMessage(builderForValue.build());
        }
        kindCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      public Builder mergeQueryPrediction(
          com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction value) {
        if (queryPredictionBuilder_ == null) {
          if (kindCase_ == 2
              && kind_
                  != com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                      .getDefaultInstance()) {
            kind_ =
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                    .newBuilder(
                        (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                                .QueryPrediction)
                            kind_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            kind_ = value;
          }
          onChanged();
        } else {
          if (kindCase_ == 2) {
            queryPredictionBuilder_.mergeFrom(value);
          } else {
            queryPredictionBuilder_.setMessage(value);
          }
        }
        kindCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      public Builder clearQueryPrediction() {
        if (queryPredictionBuilder_ == null) {
          if (kindCase_ == 2) {
            kindCase_ = 0;
            kind_ = null;
            onChanged();
          }
        } else {
          if (kindCase_ == 2) {
            kindCase_ = 0;
            kind_ = null;
          }
          queryPredictionBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction.Builder
          getQueryPredictionBuilder() {
        return getQueryPredictionFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
              .QueryPredictionOrBuilder
          getQueryPredictionOrBuilder() {
        if ((kindCase_ == 2) && (queryPredictionBuilder_ != null)) {
          return queryPredictionBuilder_.getMessageOrBuilder();
        } else {
          if (kindCase_ == 2) {
            return (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
                kind_;
          }
          return com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
              .getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A prediction for a query.
       * </pre>
       *
       * <code>
       * .google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction query_prediction = 2;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                  .Builder,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                  .QueryPredictionOrBuilder>
          getQueryPredictionFieldBuilder() {
        if (queryPredictionBuilder_ == null) {
          if (!(kindCase_ == 2)) {
            kind_ =
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                    .getDefaultInstance();
          }
          queryPredictionBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction
                      .Builder,
                  com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
                      .QueryPredictionOrBuilder>(
                  (com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.QueryPrediction)
                      kind_,
                  getParentForChildren(),
                  isClean());
          kind_ = null;
        }
        kindCase_ = 2;
        onChanged();
        return queryPredictionBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion)
    }

    // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse.Suggestion)
    private static final com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion();
    }

    public static com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Suggestion> PARSER =
        new com.google.protobuf.AbstractParser<Suggestion>() {
          @java.lang.Override
          public Suggestion parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Suggestion> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Suggestion> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int SUGGESTIONS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion>
      suggestions_;
  /**
   *
   *
   * <pre>
   * Contains a list of suggestions, ordered in descending order of relevance.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion>
      getSuggestionsList() {
    return suggestions_;
  }
  /**
   *
   *
   * <pre>
   * Contains a list of suggestions, ordered in descending order of relevance.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder>
      getSuggestionsOrBuilderList() {
    return suggestions_;
  }
  /**
   *
   *
   * <pre>
   * Contains a list of suggestions, ordered in descending order of relevance.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
   * </code>
   */
  @java.lang.Override
  public int getSuggestionsCount() {
    return suggestions_.size();
  }
  /**
   *
   *
   * <pre>
   * Contains a list of suggestions, ordered in descending order of relevance.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion getSuggestions(int index) {
    return suggestions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Contains a list of suggestions, ordered in descending order of relevance.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder
      getSuggestionsOrBuilder(int index) {
    return suggestions_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < suggestions_.size(); i++) {
      output.writeMessage(1, suggestions_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < suggestions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, suggestions_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.places.v1.AutocompletePlacesResponse)) {
      return super.equals(obj);
    }
    com.google.maps.places.v1.AutocompletePlacesResponse other =
        (com.google.maps.places.v1.AutocompletePlacesResponse) obj;

    if (!getSuggestionsList().equals(other.getSuggestionsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSuggestionsCount() > 0) {
      hash = (37 * hash) + SUGGESTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSuggestionsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.places.v1.AutocompletePlacesResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Response proto for AutocompletePlaces.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.AutocompletePlacesResponse}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesResponse)
      com.google.maps.places.v1.AutocompletePlacesResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.AutocompletePlacesResponse.class,
              com.google.maps.places.v1.AutocompletePlacesResponse.Builder.class);
    }

    // Construct using com.google.maps.places.v1.AutocompletePlacesResponse.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (suggestionsBuilder_ == null) {
        suggestions_ = java.util.Collections.emptyList();
      } else {
        suggestions_ = null;
        suggestionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesResponse_descriptor;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse getDefaultInstanceForType() {
      return com.google.maps.places.v1.AutocompletePlacesResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse build() {
      com.google.maps.places.v1.AutocompletePlacesResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesResponse buildPartial() {
      com.google.maps.places.v1.AutocompletePlacesResponse result =
          new com.google.maps.places.v1.AutocompletePlacesResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.maps.places.v1.AutocompletePlacesResponse result) {
      if (suggestionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          suggestions_ = java.util.Collections.unmodifiableList(suggestions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.suggestions_ = suggestions_;
      } else {
        result.suggestions_ = suggestionsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.maps.places.v1.AutocompletePlacesResponse result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.places.v1.AutocompletePlacesResponse) {
        return mergeFrom((com.google.maps.places.v1.AutocompletePlacesResponse) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.places.v1.AutocompletePlacesResponse other) {
      if (other == com.google.maps.places.v1.AutocompletePlacesResponse.getDefaultInstance())
        return this;
      if (suggestionsBuilder_ == null) {
        if (!other.suggestions_.isEmpty()) {
          if (suggestions_.isEmpty()) {
            suggestions_ = other.suggestions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSuggestionsIsMutable();
            suggestions_.addAll(other.suggestions_);
          }
          onChanged();
        }
      } else {
        if (!other.suggestions_.isEmpty()) {
          if (suggestionsBuilder_.isEmpty()) {
            suggestionsBuilder_.dispose();
            suggestionsBuilder_ = null;
            suggestions_ = other.suggestions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            suggestionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getSuggestionsFieldBuilder()
                    : null;
          } else {
            suggestionsBuilder_.addAllMessages(other.suggestions_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion m =
                    input.readMessage(
                        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.parser(),
                        extensionRegistry);
                if (suggestionsBuilder_ == null) {
                  ensureSuggestionsIsMutable();
                  suggestions_.add(m);
                } else {
                  suggestionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion>
        suggestions_ = java.util.Collections.emptyList();

    private void ensureSuggestionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        suggestions_ =
            new java.util.ArrayList<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion>(suggestions_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion,
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder,
            com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder>
        suggestionsBuilder_;

    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public java.util.List<com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion>
        getSuggestionsList() {
      if (suggestionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(suggestions_);
      } else {
        return suggestionsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public int getSuggestionsCount() {
      if (suggestionsBuilder_ == null) {
        return suggestions_.size();
      } else {
        return suggestionsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion getSuggestions(
        int index) {
      if (suggestionsBuilder_ == null) {
        return suggestions_.get(index);
      } else {
        return suggestionsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder setSuggestions(
        int index, com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion value) {
      if (suggestionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuggestionsIsMutable();
        suggestions_.set(index, value);
        onChanged();
      } else {
        suggestionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder setSuggestions(
        int index,
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder builderForValue) {
      if (suggestionsBuilder_ == null) {
        ensureSuggestionsIsMutable();
        suggestions_.set(index, builderForValue.build());
        onChanged();
      } else {
        suggestionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder addSuggestions(
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion value) {
      if (suggestionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuggestionsIsMutable();
        suggestions_.add(value);
        onChanged();
      } else {
        suggestionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder addSuggestions(
        int index, com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion value) {
      if (suggestionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSuggestionsIsMutable();
        suggestions_.add(index, value);
        onChanged();
      } else {
        suggestionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder addSuggestions(
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder builderForValue) {
      if (suggestionsBuilder_ == null) {
        ensureSuggestionsIsMutable();
        suggestions_.add(builderForValue.build());
        onChanged();
      } else {
        suggestionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder addSuggestions(
        int index,
        com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder builderForValue) {
      if (suggestionsBuilder_ == null) {
        ensureSuggestionsIsMutable();
        suggestions_.add(index, builderForValue.build());
        onChanged();
      } else {
        suggestionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder addAllSuggestions(
        java.lang.Iterable<
                ? extends com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion>
            values) {
      if (suggestionsBuilder_ == null) {
        ensureSuggestionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, suggestions_);
        onChanged();
      } else {
        suggestionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder clearSuggestions() {
      if (suggestionsBuilder_ == null) {
        suggestions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        suggestionsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public Builder removeSuggestions(int index) {
      if (suggestionsBuilder_ == null) {
        ensureSuggestionsIsMutable();
        suggestions_.remove(index);
        onChanged();
      } else {
        suggestionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder
        getSuggestionsBuilder(int index) {
      return getSuggestionsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder
        getSuggestionsOrBuilder(int index) {
      if (suggestionsBuilder_ == null) {
        return suggestions_.get(index);
      } else {
        return suggestionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public java.util.List<
            ? extends com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder>
        getSuggestionsOrBuilderList() {
      if (suggestionsBuilder_ != null) {
        return suggestionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(suggestions_);
      }
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder
        addSuggestionsBuilder() {
      return getSuggestionsFieldBuilder()
          .addBuilder(
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder
        addSuggestionsBuilder(int index) {
      return getSuggestionsFieldBuilder()
          .addBuilder(
              index,
              com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Contains a list of suggestions, ordered in descending order of relevance.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.AutocompletePlacesResponse.Suggestion suggestions = 1;
     * </code>
     */
    public java.util.List<com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder>
        getSuggestionsBuilderList() {
      return getSuggestionsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion,
            com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder,
            com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder>
        getSuggestionsFieldBuilder() {
      if (suggestionsBuilder_ == null) {
        suggestionsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion,
                com.google.maps.places.v1.AutocompletePlacesResponse.Suggestion.Builder,
                com.google.maps.places.v1.AutocompletePlacesResponse.SuggestionOrBuilder>(
                suggestions_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        suggestions_ = null;
      }
      return suggestionsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesResponse)
  }

  // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesResponse)
  private static final com.google.maps.places.v1.AutocompletePlacesResponse DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.places.v1.AutocompletePlacesResponse();
  }

  public static com.google.maps.places.v1.AutocompletePlacesResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AutocompletePlacesResponse> PARSER =
      new com.google.protobuf.AbstractParser<AutocompletePlacesResponse>() {
        @java.lang.Override
        public AutocompletePlacesResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AutocompletePlacesResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AutocompletePlacesResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
