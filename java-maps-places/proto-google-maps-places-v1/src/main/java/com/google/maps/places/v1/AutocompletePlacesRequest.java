/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/places/v1/places_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.places.v1;

/**
 *
 *
 * <pre>
 * Request proto for AutocompletePlaces.
 * </pre>
 *
 * Protobuf type {@code google.maps.places.v1.AutocompletePlacesRequest}
 */
public final class AutocompletePlacesRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesRequest)
    AutocompletePlacesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AutocompletePlacesRequest.newBuilder() to construct.
  private AutocompletePlacesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AutocompletePlacesRequest() {
    input_ = "";
    includedPrimaryTypes_ = com.google.protobuf.LazyStringArrayList.emptyList();
    includedRegionCodes_ = com.google.protobuf.LazyStringArrayList.emptyList();
    languageCode_ = "";
    regionCode_ = "";
    sessionToken_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AutocompletePlacesRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_AutocompletePlacesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_AutocompletePlacesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.places.v1.AutocompletePlacesRequest.class,
            com.google.maps.places.v1.AutocompletePlacesRequest.Builder.class);
  }

  public interface LocationBiasOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesRequest.LocationBias)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return Whether the rectangle field is set.
     */
    boolean hasRectangle();
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return The rectangle.
     */
    com.google.geo.type.Viewport getRectangle();
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     */
    com.google.geo.type.ViewportOrBuilder getRectangleOrBuilder();

    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return Whether the circle field is set.
     */
    boolean hasCircle();
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return The circle.
     */
    com.google.maps.places.v1.Circle getCircle();
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     */
    com.google.maps.places.v1.CircleOrBuilder getCircleOrBuilder();

    com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.TypeCase getTypeCase();
  }
  /**
   *
   *
   * <pre>
   * The region to search. The results may be biased around the specified
   * region.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.AutocompletePlacesRequest.LocationBias}
   */
  public static final class LocationBias extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesRequest.LocationBias)
      LocationBiasOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use LocationBias.newBuilder() to construct.
    private LocationBias(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private LocationBias() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new LocationBias();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationBias_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationBias_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.class,
              com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder.class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RECTANGLE(1),
      CIRCLE(2),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1:
            return RECTANGLE;
          case 2:
            return CIRCLE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int RECTANGLE_FIELD_NUMBER = 1;
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return Whether the rectangle field is set.
     */
    @java.lang.Override
    public boolean hasRectangle() {
      return typeCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return The rectangle.
     */
    @java.lang.Override
    public com.google.geo.type.Viewport getRectangle() {
      if (typeCase_ == 1) {
        return (com.google.geo.type.Viewport) type_;
      }
      return com.google.geo.type.Viewport.getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.type.ViewportOrBuilder getRectangleOrBuilder() {
      if (typeCase_ == 1) {
        return (com.google.geo.type.Viewport) type_;
      }
      return com.google.geo.type.Viewport.getDefaultInstance();
    }

    public static final int CIRCLE_FIELD_NUMBER = 2;
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return Whether the circle field is set.
     */
    @java.lang.Override
    public boolean hasCircle() {
      return typeCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return The circle.
     */
    @java.lang.Override
    public com.google.maps.places.v1.Circle getCircle() {
      if (typeCase_ == 2) {
        return (com.google.maps.places.v1.Circle) type_;
      }
      return com.google.maps.places.v1.Circle.getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     */
    @java.lang.Override
    public com.google.maps.places.v1.CircleOrBuilder getCircleOrBuilder() {
      if (typeCase_ == 2) {
        return (com.google.maps.places.v1.Circle) type_;
      }
      return com.google.maps.places.v1.Circle.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (com.google.geo.type.Viewport) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (com.google.maps.places.v1.Circle) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                1, (com.google.geo.type.Viewport) type_);
      }
      if (typeCase_ == 2) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                2, (com.google.maps.places.v1.Circle) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias)) {
        return super.equals(obj);
      }
      com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias other =
          (com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getRectangle().equals(other.getRectangle())) return false;
          break;
        case 2:
          if (!getCircle().equals(other.getCircle())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRectangle().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CIRCLE_FIELD_NUMBER;
          hash = (53 * hash) + getCircle().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The region to search. The results may be biased around the specified
     * region.
     * </pre>
     *
     * Protobuf type {@code google.maps.places.v1.AutocompletePlacesRequest.LocationBias}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesRequest.LocationBias)
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBiasOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationBias_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationBias_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.class,
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder.class);
      }

      // Construct using
      // com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (rectangleBuilder_ != null) {
          rectangleBuilder_.clear();
        }
        if (circleBuilder_ != null) {
          circleBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationBias_descriptor;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
          getDefaultInstanceForType() {
        return com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias build() {
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias buildPartial() {
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias result =
            new com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 1 && rectangleBuilder_ != null) {
          result.type_ = rectangleBuilder_.build();
        }
        if (typeCase_ == 2 && circleBuilder_ != null) {
          result.type_ = circleBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias) {
          return mergeFrom(
              (com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias other) {
        if (other
            == com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
                .getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case RECTANGLE:
            {
              mergeRectangle(other.getRectangle());
              break;
            }
          case CIRCLE:
            {
              mergeCircle(other.getCircle());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getRectangleFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 1;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getCircleFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 2;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.type.Viewport,
              com.google.geo.type.Viewport.Builder,
              com.google.geo.type.ViewportOrBuilder>
          rectangleBuilder_;
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       *
       * @return Whether the rectangle field is set.
       */
      @java.lang.Override
      public boolean hasRectangle() {
        return typeCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       *
       * @return The rectangle.
       */
      @java.lang.Override
      public com.google.geo.type.Viewport getRectangle() {
        if (rectangleBuilder_ == null) {
          if (typeCase_ == 1) {
            return (com.google.geo.type.Viewport) type_;
          }
          return com.google.geo.type.Viewport.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return rectangleBuilder_.getMessage();
          }
          return com.google.geo.type.Viewport.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder setRectangle(com.google.geo.type.Viewport value) {
        if (rectangleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          rectangleBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder setRectangle(com.google.geo.type.Viewport.Builder builderForValue) {
        if (rectangleBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          rectangleBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder mergeRectangle(com.google.geo.type.Viewport value) {
        if (rectangleBuilder_ == null) {
          if (typeCase_ == 1 && type_ != com.google.geo.type.Viewport.getDefaultInstance()) {
            type_ =
                com.google.geo.type.Viewport.newBuilder((com.google.geo.type.Viewport) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            rectangleBuilder_.mergeFrom(value);
          } else {
            rectangleBuilder_.setMessage(value);
          }
        }
        typeCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder clearRectangle() {
        if (rectangleBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          rectangleBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public com.google.geo.type.Viewport.Builder getRectangleBuilder() {
        return getRectangleFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      @java.lang.Override
      public com.google.geo.type.ViewportOrBuilder getRectangleOrBuilder() {
        if ((typeCase_ == 1) && (rectangleBuilder_ != null)) {
          return rectangleBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (com.google.geo.type.Viewport) type_;
          }
          return com.google.geo.type.Viewport.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.type.Viewport,
              com.google.geo.type.Viewport.Builder,
              com.google.geo.type.ViewportOrBuilder>
          getRectangleFieldBuilder() {
        if (rectangleBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = com.google.geo.type.Viewport.getDefaultInstance();
          }
          rectangleBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.type.Viewport,
                  com.google.geo.type.Viewport.Builder,
                  com.google.geo.type.ViewportOrBuilder>(
                  (com.google.geo.type.Viewport) type_, getParentForChildren(), isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();
        return rectangleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.Circle,
              com.google.maps.places.v1.Circle.Builder,
              com.google.maps.places.v1.CircleOrBuilder>
          circleBuilder_;
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       *
       * @return Whether the circle field is set.
       */
      @java.lang.Override
      public boolean hasCircle() {
        return typeCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       *
       * @return The circle.
       */
      @java.lang.Override
      public com.google.maps.places.v1.Circle getCircle() {
        if (circleBuilder_ == null) {
          if (typeCase_ == 2) {
            return (com.google.maps.places.v1.Circle) type_;
          }
          return com.google.maps.places.v1.Circle.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return circleBuilder_.getMessage();
          }
          return com.google.maps.places.v1.Circle.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder setCircle(com.google.maps.places.v1.Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          circleBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder setCircle(com.google.maps.places.v1.Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          circleBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder mergeCircle(com.google.maps.places.v1.Circle value) {
        if (circleBuilder_ == null) {
          if (typeCase_ == 2 && type_ != com.google.maps.places.v1.Circle.getDefaultInstance()) {
            type_ =
                com.google.maps.places.v1.Circle.newBuilder(
                        (com.google.maps.places.v1.Circle) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            circleBuilder_.mergeFrom(value);
          } else {
            circleBuilder_.setMessage(value);
          }
        }
        typeCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder clearCircle() {
        if (circleBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          circleBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public com.google.maps.places.v1.Circle.Builder getCircleBuilder() {
        return getCircleFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.CircleOrBuilder getCircleOrBuilder() {
        if ((typeCase_ == 2) && (circleBuilder_ != null)) {
          return circleBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (com.google.maps.places.v1.Circle) type_;
          }
          return com.google.maps.places.v1.Circle.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.Circle,
              com.google.maps.places.v1.Circle.Builder,
              com.google.maps.places.v1.CircleOrBuilder>
          getCircleFieldBuilder() {
        if (circleBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = com.google.maps.places.v1.Circle.getDefaultInstance();
          }
          circleBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.maps.places.v1.Circle,
                  com.google.maps.places.v1.Circle.Builder,
                  com.google.maps.places.v1.CircleOrBuilder>(
                  (com.google.maps.places.v1.Circle) type_, getParentForChildren(), isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();
        return circleBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesRequest.LocationBias)
    }

    // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesRequest.LocationBias)
    private static final com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias();
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LocationBias> PARSER =
        new com.google.protobuf.AbstractParser<LocationBias>() {
          @java.lang.Override
          public LocationBias parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<LocationBias> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LocationBias> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface LocationRestrictionOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return Whether the rectangle field is set.
     */
    boolean hasRectangle();
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return The rectangle.
     */
    com.google.geo.type.Viewport getRectangle();
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     */
    com.google.geo.type.ViewportOrBuilder getRectangleOrBuilder();

    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return Whether the circle field is set.
     */
    boolean hasCircle();
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return The circle.
     */
    com.google.maps.places.v1.Circle getCircle();
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     */
    com.google.maps.places.v1.CircleOrBuilder getCircleOrBuilder();

    com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.TypeCase getTypeCase();
  }
  /**
   *
   *
   * <pre>
   * The region to search. The results will be restricted to the specified
   * region.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction}
   */
  public static final class LocationRestriction extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction)
      LocationRestrictionOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use LocationRestriction.newBuilder() to construct.
    private LocationRestriction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private LocationRestriction() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new LocationRestriction();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationRestriction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationRestriction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.class,
              com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder
                  .class);
    }

    private int typeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object type_;

    public enum TypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RECTANGLE(1),
      CIRCLE(2),
      TYPE_NOT_SET(0);
      private final int value;

      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1:
            return RECTANGLE;
          case 2:
            return CIRCLE;
          case 0:
            return TYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public static final int RECTANGLE_FIELD_NUMBER = 1;
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return Whether the rectangle field is set.
     */
    @java.lang.Override
    public boolean hasRectangle() {
      return typeCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     *
     * @return The rectangle.
     */
    @java.lang.Override
    public com.google.geo.type.Viewport getRectangle() {
      if (typeCase_ == 1) {
        return (com.google.geo.type.Viewport) type_;
      }
      return com.google.geo.type.Viewport.getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * A viewport defined by a northeast and a southwest corner.
     * </pre>
     *
     * <code>.google.geo.type.Viewport rectangle = 1;</code>
     */
    @java.lang.Override
    public com.google.geo.type.ViewportOrBuilder getRectangleOrBuilder() {
      if (typeCase_ == 1) {
        return (com.google.geo.type.Viewport) type_;
      }
      return com.google.geo.type.Viewport.getDefaultInstance();
    }

    public static final int CIRCLE_FIELD_NUMBER = 2;
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return Whether the circle field is set.
     */
    @java.lang.Override
    public boolean hasCircle() {
      return typeCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     *
     * @return The circle.
     */
    @java.lang.Override
    public com.google.maps.places.v1.Circle getCircle() {
      if (typeCase_ == 2) {
        return (com.google.maps.places.v1.Circle) type_;
      }
      return com.google.maps.places.v1.Circle.getDefaultInstance();
    }
    /**
     *
     *
     * <pre>
     * A circle defined by a center point and radius.
     * </pre>
     *
     * <code>.google.maps.places.v1.Circle circle = 2;</code>
     */
    @java.lang.Override
    public com.google.maps.places.v1.CircleOrBuilder getCircleOrBuilder() {
      if (typeCase_ == 2) {
        return (com.google.maps.places.v1.Circle) type_;
      }
      return com.google.maps.places.v1.Circle.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (com.google.geo.type.Viewport) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (com.google.maps.places.v1.Circle) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                1, (com.google.geo.type.Viewport) type_);
      }
      if (typeCase_ == 2) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                2, (com.google.maps.places.v1.Circle) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction)) {
        return super.equals(obj);
      }
      com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction other =
          (com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getRectangle().equals(other.getRectangle())) return false;
          break;
        case 2:
          if (!getCircle().equals(other.getCircle())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + RECTANGLE_FIELD_NUMBER;
          hash = (53 * hash) + getRectangle().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CIRCLE_FIELD_NUMBER;
          hash = (53 * hash) + getCircle().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The region to search. The results will be restricted to the specified
     * region.
     * </pre>
     *
     * Protobuf type {@code google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction)
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestrictionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationRestriction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationRestriction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.class,
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder
                    .class);
      }

      // Construct using
      // com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (rectangleBuilder_ != null) {
          rectangleBuilder_.clear();
        }
        if (circleBuilder_ != null) {
          circleBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.maps.places.v1.PlacesServiceProto
            .internal_static_google_maps_places_v1_AutocompletePlacesRequest_LocationRestriction_descriptor;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
          getDefaultInstanceForType() {
        return com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction build() {
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
          buildPartial() {
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction result =
            new com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 1 && rectangleBuilder_ != null) {
          result.type_ = rectangleBuilder_.build();
        }
        if (typeCase_ == 2 && circleBuilder_ != null) {
          result.type_ = circleBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction) {
          return mergeFrom(
              (com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction other) {
        if (other
            == com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
                .getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case RECTANGLE:
            {
              mergeRectangle(other.getRectangle());
              break;
            }
          case CIRCLE:
            {
              mergeCircle(other.getCircle());
              break;
            }
          case TYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getRectangleFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 1;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getCircleFieldBuilder().getBuilder(), extensionRegistry);
                  typeCase_ = 2;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;

      public TypeCase getTypeCase() {
        return TypeCase.forNumber(typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.type.Viewport,
              com.google.geo.type.Viewport.Builder,
              com.google.geo.type.ViewportOrBuilder>
          rectangleBuilder_;
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       *
       * @return Whether the rectangle field is set.
       */
      @java.lang.Override
      public boolean hasRectangle() {
        return typeCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       *
       * @return The rectangle.
       */
      @java.lang.Override
      public com.google.geo.type.Viewport getRectangle() {
        if (rectangleBuilder_ == null) {
          if (typeCase_ == 1) {
            return (com.google.geo.type.Viewport) type_;
          }
          return com.google.geo.type.Viewport.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return rectangleBuilder_.getMessage();
          }
          return com.google.geo.type.Viewport.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder setRectangle(com.google.geo.type.Viewport value) {
        if (rectangleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          rectangleBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder setRectangle(com.google.geo.type.Viewport.Builder builderForValue) {
        if (rectangleBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          rectangleBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder mergeRectangle(com.google.geo.type.Viewport value) {
        if (rectangleBuilder_ == null) {
          if (typeCase_ == 1 && type_ != com.google.geo.type.Viewport.getDefaultInstance()) {
            type_ =
                com.google.geo.type.Viewport.newBuilder((com.google.geo.type.Viewport) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            rectangleBuilder_.mergeFrom(value);
          } else {
            rectangleBuilder_.setMessage(value);
          }
        }
        typeCase_ = 1;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public Builder clearRectangle() {
        if (rectangleBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          rectangleBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      public com.google.geo.type.Viewport.Builder getRectangleBuilder() {
        return getRectangleFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      @java.lang.Override
      public com.google.geo.type.ViewportOrBuilder getRectangleOrBuilder() {
        if ((typeCase_ == 1) && (rectangleBuilder_ != null)) {
          return rectangleBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (com.google.geo.type.Viewport) type_;
          }
          return com.google.geo.type.Viewport.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A viewport defined by a northeast and a southwest corner.
       * </pre>
       *
       * <code>.google.geo.type.Viewport rectangle = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.geo.type.Viewport,
              com.google.geo.type.Viewport.Builder,
              com.google.geo.type.ViewportOrBuilder>
          getRectangleFieldBuilder() {
        if (rectangleBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = com.google.geo.type.Viewport.getDefaultInstance();
          }
          rectangleBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.geo.type.Viewport,
                  com.google.geo.type.Viewport.Builder,
                  com.google.geo.type.ViewportOrBuilder>(
                  (com.google.geo.type.Viewport) type_, getParentForChildren(), isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();
        return rectangleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.Circle,
              com.google.maps.places.v1.Circle.Builder,
              com.google.maps.places.v1.CircleOrBuilder>
          circleBuilder_;
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       *
       * @return Whether the circle field is set.
       */
      @java.lang.Override
      public boolean hasCircle() {
        return typeCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       *
       * @return The circle.
       */
      @java.lang.Override
      public com.google.maps.places.v1.Circle getCircle() {
        if (circleBuilder_ == null) {
          if (typeCase_ == 2) {
            return (com.google.maps.places.v1.Circle) type_;
          }
          return com.google.maps.places.v1.Circle.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return circleBuilder_.getMessage();
          }
          return com.google.maps.places.v1.Circle.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder setCircle(com.google.maps.places.v1.Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          circleBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder setCircle(com.google.maps.places.v1.Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          circleBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder mergeCircle(com.google.maps.places.v1.Circle value) {
        if (circleBuilder_ == null) {
          if (typeCase_ == 2 && type_ != com.google.maps.places.v1.Circle.getDefaultInstance()) {
            type_ =
                com.google.maps.places.v1.Circle.newBuilder(
                        (com.google.maps.places.v1.Circle) type_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            circleBuilder_.mergeFrom(value);
          } else {
            circleBuilder_.setMessage(value);
          }
        }
        typeCase_ = 2;
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public Builder clearCircle() {
        if (circleBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          circleBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      public com.google.maps.places.v1.Circle.Builder getCircleBuilder() {
        return getCircleFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      @java.lang.Override
      public com.google.maps.places.v1.CircleOrBuilder getCircleOrBuilder() {
        if ((typeCase_ == 2) && (circleBuilder_ != null)) {
          return circleBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (com.google.maps.places.v1.Circle) type_;
          }
          return com.google.maps.places.v1.Circle.getDefaultInstance();
        }
      }
      /**
       *
       *
       * <pre>
       * A circle defined by a center point and radius.
       * </pre>
       *
       * <code>.google.maps.places.v1.Circle circle = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.places.v1.Circle,
              com.google.maps.places.v1.Circle.Builder,
              com.google.maps.places.v1.CircleOrBuilder>
          getCircleFieldBuilder() {
        if (circleBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = com.google.maps.places.v1.Circle.getDefaultInstance();
          }
          circleBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.maps.places.v1.Circle,
                  com.google.maps.places.v1.Circle.Builder,
                  com.google.maps.places.v1.CircleOrBuilder>(
                  (com.google.maps.places.v1.Circle) type_, getParentForChildren(), isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();
        return circleBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction)
    }

    // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction)
    private static final com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction();
    }

    public static com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LocationRestriction> PARSER =
        new com.google.protobuf.AbstractParser<LocationRestriction>() {
          @java.lang.Override
          public LocationRestriction parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<LocationRestriction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LocationRestriction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int INPUT_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object input_ = "";
  /**
   *
   *
   * <pre>
   * Required. The text string on which to search.
   * </pre>
   *
   * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The input.
   */
  @java.lang.Override
  public java.lang.String getInput() {
    java.lang.Object ref = input_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      input_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The text string on which to search.
   * </pre>
   *
   * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for input.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getInputBytes() {
    java.lang.Object ref = input_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      input_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOCATION_BIAS_FIELD_NUMBER = 2;
  private com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias locationBias_;
  /**
   *
   *
   * <pre>
   * Optional. Bias results to a specified location.
   *
   * At most one of `location_bias` or `location_restriction` should be set. If
   * neither are set, the results will be biased by IP address, meaning the IP
   * address will be mapped to an imprecise location and used as a biasing
   * signal.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the locationBias field is set.
   */
  @java.lang.Override
  public boolean hasLocationBias() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Bias results to a specified location.
   *
   * At most one of `location_bias` or `location_restriction` should be set. If
   * neither are set, the results will be biased by IP address, meaning the IP
   * address will be mapped to an imprecise location and used as a biasing
   * signal.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The locationBias.
   */
  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias getLocationBias() {
    return locationBias_ == null
        ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.getDefaultInstance()
        : locationBias_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Bias results to a specified location.
   *
   * At most one of `location_bias` or `location_restriction` should be set. If
   * neither are set, the results will be biased by IP address, meaning the IP
   * address will be mapped to an imprecise location and used as a biasing
   * signal.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBiasOrBuilder
      getLocationBiasOrBuilder() {
    return locationBias_ == null
        ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.getDefaultInstance()
        : locationBias_;
  }

  public static final int LOCATION_RESTRICTION_FIELD_NUMBER = 3;
  private com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
      locationRestriction_;
  /**
   *
   *
   * <pre>
   * Optional. Restrict results to a specified location.
   *
   * At most one of `location_bias` or `location_restriction` should be set. If
   * neither are set, the results will be biased by IP address, meaning the IP
   * address will be mapped to an imprecise location and used as a biasing
   * signal.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the locationRestriction field is set.
   */
  @java.lang.Override
  public boolean hasLocationRestriction() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Restrict results to a specified location.
   *
   * At most one of `location_bias` or `location_restriction` should be set. If
   * neither are set, the results will be biased by IP address, meaning the IP
   * address will be mapped to an imprecise location and used as a biasing
   * signal.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The locationRestriction.
   */
  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
      getLocationRestriction() {
    return locationRestriction_ == null
        ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
            .getDefaultInstance()
        : locationRestriction_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Restrict results to a specified location.
   *
   * At most one of `location_bias` or `location_restriction` should be set. If
   * neither are set, the results will be biased by IP address, meaning the IP
   * address will be mapped to an imprecise location and used as a biasing
   * signal.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestrictionOrBuilder
      getLocationRestrictionOrBuilder() {
    return locationRestriction_ == null
        ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
            .getDefaultInstance()
        : locationRestriction_;
  }

  public static final int INCLUDED_PRIMARY_TYPES_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList includedPrimaryTypes_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * Optional. Included primary Place type (for example, "restaurant" or
   * "gas_station") in Place Types
   * (https://developers.google.com/maps/documentation/places/web-service/place-types),
   * or only `(regions)`, or only `(cities)`. A Place is only returned if its
   * primary type is included in this list. Up to 5 values can be specified. If
   * no types are specified, all Place types are returned.
   * </pre>
   *
   * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the includedPrimaryTypes.
   */
  public com.google.protobuf.ProtocolStringList getIncludedPrimaryTypesList() {
    return includedPrimaryTypes_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Included primary Place type (for example, "restaurant" or
   * "gas_station") in Place Types
   * (https://developers.google.com/maps/documentation/places/web-service/place-types),
   * or only `(regions)`, or only `(cities)`. A Place is only returned if its
   * primary type is included in this list. Up to 5 values can be specified. If
   * no types are specified, all Place types are returned.
   * </pre>
   *
   * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of includedPrimaryTypes.
   */
  public int getIncludedPrimaryTypesCount() {
    return includedPrimaryTypes_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Included primary Place type (for example, "restaurant" or
   * "gas_station") in Place Types
   * (https://developers.google.com/maps/documentation/places/web-service/place-types),
   * or only `(regions)`, or only `(cities)`. A Place is only returned if its
   * primary type is included in this list. Up to 5 values can be specified. If
   * no types are specified, all Place types are returned.
   * </pre>
   *
   * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The includedPrimaryTypes at the given index.
   */
  public java.lang.String getIncludedPrimaryTypes(int index) {
    return includedPrimaryTypes_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. Included primary Place type (for example, "restaurant" or
   * "gas_station") in Place Types
   * (https://developers.google.com/maps/documentation/places/web-service/place-types),
   * or only `(regions)`, or only `(cities)`. A Place is only returned if its
   * primary type is included in this list. Up to 5 values can be specified. If
   * no types are specified, all Place types are returned.
   * </pre>
   *
   * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the includedPrimaryTypes at the given index.
   */
  public com.google.protobuf.ByteString getIncludedPrimaryTypesBytes(int index) {
    return includedPrimaryTypes_.getByteString(index);
  }

  public static final int INCLUDED_REGION_CODES_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList includedRegionCodes_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * Optional. Only include results in the specified regions, specified as up to
   * 15 CLDR two-character region codes. An empty set will not restrict the
   * results. If both `location_restriction` and `included_region_codes` are
   * set, the results will be located in the area of intersection.
   * </pre>
   *
   * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the includedRegionCodes.
   */
  public com.google.protobuf.ProtocolStringList getIncludedRegionCodesList() {
    return includedRegionCodes_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Only include results in the specified regions, specified as up to
   * 15 CLDR two-character region codes. An empty set will not restrict the
   * results. If both `location_restriction` and `included_region_codes` are
   * set, the results will be located in the area of intersection.
   * </pre>
   *
   * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of includedRegionCodes.
   */
  public int getIncludedRegionCodesCount() {
    return includedRegionCodes_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Only include results in the specified regions, specified as up to
   * 15 CLDR two-character region codes. An empty set will not restrict the
   * results. If both `location_restriction` and `included_region_codes` are
   * set, the results will be located in the area of intersection.
   * </pre>
   *
   * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The includedRegionCodes at the given index.
   */
  public java.lang.String getIncludedRegionCodes(int index) {
    return includedRegionCodes_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. Only include results in the specified regions, specified as up to
   * 15 CLDR two-character region codes. An empty set will not restrict the
   * results. If both `location_restriction` and `included_region_codes` are
   * set, the results will be located in the area of intersection.
   * </pre>
   *
   * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the includedRegionCodes at the given index.
   */
  public com.google.protobuf.ByteString getIncludedRegionCodesBytes(int index) {
    return includedRegionCodes_.getByteString(index);
  }

  public static final int LANGUAGE_CODE_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private volatile java.lang.Object languageCode_ = "";
  /**
   *
   *
   * <pre>
   * Optional. The language in which to return results. Defaults to en-US. The
   * results may be in mixed languages if the language used in `input` is
   * different from `language_code` or if the returned Place does not have a
   * translation from the local language to `language_code`.
   * </pre>
   *
   * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The languageCode.
   */
  @java.lang.Override
  public java.lang.String getLanguageCode() {
    java.lang.Object ref = languageCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      languageCode_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The language in which to return results. Defaults to en-US. The
   * results may be in mixed languages if the language used in `input` is
   * different from `language_code` or if the returned Place does not have a
   * translation from the local language to `language_code`.
   * </pre>
   *
   * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for languageCode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLanguageCodeBytes() {
    java.lang.Object ref = languageCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      languageCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REGION_CODE_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private volatile java.lang.Object regionCode_ = "";
  /**
   *
   *
   * <pre>
   * Optional. The region code, specified as a CLDR two-character region code.
   * This affects address formatting, result ranking, and may influence what
   * results are returned. This does not restrict results to the specified
   * region. To restrict results to a region, use `region_code_restriction`.
   * </pre>
   *
   * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The regionCode.
   */
  @java.lang.Override
  public java.lang.String getRegionCode() {
    java.lang.Object ref = regionCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      regionCode_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The region code, specified as a CLDR two-character region code.
   * This affects address formatting, result ranking, and may influence what
   * results are returned. This does not restrict results to the specified
   * region. To restrict results to a region, use `region_code_restriction`.
   * </pre>
   *
   * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for regionCode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRegionCodeBytes() {
    java.lang.Object ref = regionCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      regionCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORIGIN_FIELD_NUMBER = 8;
  private com.google.type.LatLng origin_;
  /**
   *
   *
   * <pre>
   * Optional. The origin point from which to calculate geodesic distance to the
   * destination (returned as `distance_meters`). If this value is omitted,
   * geodesic distance will not be returned.
   * </pre>
   *
   * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the origin field is set.
   */
  @java.lang.Override
  public boolean hasOrigin() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. The origin point from which to calculate geodesic distance to the
   * destination (returned as `distance_meters`). If this value is omitted,
   * geodesic distance will not be returned.
   * </pre>
   *
   * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The origin.
   */
  @java.lang.Override
  public com.google.type.LatLng getOrigin() {
    return origin_ == null ? com.google.type.LatLng.getDefaultInstance() : origin_;
  }
  /**
   *
   *
   * <pre>
   * Optional. The origin point from which to calculate geodesic distance to the
   * destination (returned as `distance_meters`). If this value is omitted,
   * geodesic distance will not be returned.
   * </pre>
   *
   * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public com.google.type.LatLngOrBuilder getOriginOrBuilder() {
    return origin_ == null ? com.google.type.LatLng.getDefaultInstance() : origin_;
  }

  public static final int INPUT_OFFSET_FIELD_NUMBER = 9;
  private int inputOffset_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. A zero-based Unicode character offset of `input` indicating the
   * cursor position in `input`. The cursor position may influence what
   * predictions are returned.
   *
   * If empty, defaults to the length of `input`.
   * </pre>
   *
   * <code>int32 input_offset = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The inputOffset.
   */
  @java.lang.Override
  public int getInputOffset() {
    return inputOffset_;
  }

  public static final int INCLUDE_QUERY_PREDICTIONS_FIELD_NUMBER = 10;
  private boolean includeQueryPredictions_ = false;
  /**
   *
   *
   * <pre>
   * Optional. If true, the response will include both Place and query
   * predictions. Otherwise the response will only return Place predictions.
   * </pre>
   *
   * <code>bool include_query_predictions = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The includeQueryPredictions.
   */
  @java.lang.Override
  public boolean getIncludeQueryPredictions() {
    return includeQueryPredictions_;
  }

  public static final int SESSION_TOKEN_FIELD_NUMBER = 11;

  @SuppressWarnings("serial")
  private volatile java.lang.Object sessionToken_ = "";
  /**
   *
   *
   * <pre>
   * Optional. A string which identifies an Autocomplete session for billing
   * purposes. Must be a URL and filename safe base64 string with at most 36
   * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
   * returned.
   *
   * The session begins when the user starts typing a query, and concludes when
   * they select a place and a call to Place Details or Address Validation is
   * made. Each session can have multiple queries, followed by one Place Details
   * or Address Validation request. The credentials used for each request within
   * a session must belong to the same Google Cloud Console project. Once a
   * session has concluded, the token is no longer valid; your app must generate
   * a fresh token for each session. If the `session_token` parameter is
   * omitted, or if you reuse a session token, the session is charged as if no
   * session token was provided (each request is billed separately).
   *
   * We recommend the following guidelines:
   *
   * * Use session tokens for all Place Autocomplete calls.
   * * Generate a fresh token for each session. Using a version 4 UUID is
   *   recommended.
   * * Ensure that the credentials used for all Place Autocomplete, Place
   *   Details, and Address Validation requests within a session belong to the
   *   same Cloud Console project.
   * * Be sure to pass a unique session token for each new session. Using the
   *   same token for more than one session will result in each request being
   *   billed individually.
   * </pre>
   *
   * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The sessionToken.
   */
  @java.lang.Override
  public java.lang.String getSessionToken() {
    java.lang.Object ref = sessionToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionToken_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. A string which identifies an Autocomplete session for billing
   * purposes. Must be a URL and filename safe base64 string with at most 36
   * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
   * returned.
   *
   * The session begins when the user starts typing a query, and concludes when
   * they select a place and a call to Place Details or Address Validation is
   * made. Each session can have multiple queries, followed by one Place Details
   * or Address Validation request. The credentials used for each request within
   * a session must belong to the same Google Cloud Console project. Once a
   * session has concluded, the token is no longer valid; your app must generate
   * a fresh token for each session. If the `session_token` parameter is
   * omitted, or if you reuse a session token, the session is charged as if no
   * session token was provided (each request is billed separately).
   *
   * We recommend the following guidelines:
   *
   * * Use session tokens for all Place Autocomplete calls.
   * * Generate a fresh token for each session. Using a version 4 UUID is
   *   recommended.
   * * Ensure that the credentials used for all Place Autocomplete, Place
   *   Details, and Address Validation requests within a session belong to the
   *   same Cloud Console project.
   * * Be sure to pass a unique session token for each new session. Using the
   *   same token for more than one session will result in each request being
   *   billed individually.
   * </pre>
   *
   * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for sessionToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSessionTokenBytes() {
    java.lang.Object ref = sessionToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sessionToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INCLUDE_PURE_SERVICE_AREA_BUSINESSES_FIELD_NUMBER = 12;
  private boolean includePureServiceAreaBusinesses_ = false;
  /**
   *
   *
   * <pre>
   * Optional. Include pure service area businesses if the field is set to true.
   * Pure service area business is a business that visits or delivers to
   * customers directly but does not serve customers at their business address.
   * For example, businesses like cleaning services or plumbers. Those
   * businesses do not have a physical address or location on Google Maps.
   * Places will not return fields including `location`, `plus_code`, and other
   * location related fields for these businesses.
   * </pre>
   *
   * <code>bool include_pure_service_area_businesses = 12 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The includePureServiceAreaBusinesses.
   */
  @java.lang.Override
  public boolean getIncludePureServiceAreaBusinesses() {
    return includePureServiceAreaBusinesses_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(input_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, input_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getLocationBias());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getLocationRestriction());
    }
    for (int i = 0; i < includedPrimaryTypes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 4, includedPrimaryTypes_.getRaw(i));
    }
    for (int i = 0; i < includedRegionCodes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, includedRegionCodes_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, languageCode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(regionCode_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, regionCode_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(8, getOrigin());
    }
    if (inputOffset_ != 0) {
      output.writeInt32(9, inputOffset_);
    }
    if (includeQueryPredictions_ != false) {
      output.writeBool(10, includeQueryPredictions_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, sessionToken_);
    }
    if (includePureServiceAreaBusinesses_ != false) {
      output.writeBool(12, includePureServiceAreaBusinesses_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(input_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, input_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getLocationBias());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getLocationRestriction());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < includedPrimaryTypes_.size(); i++) {
        dataSize += computeStringSizeNoTag(includedPrimaryTypes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getIncludedPrimaryTypesList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < includedRegionCodes_.size(); i++) {
        dataSize += computeStringSizeNoTag(includedRegionCodes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getIncludedRegionCodesList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(languageCode_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, languageCode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(regionCode_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, regionCode_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getOrigin());
    }
    if (inputOffset_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(9, inputOffset_);
    }
    if (includeQueryPredictions_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(10, includeQueryPredictions_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, sessionToken_);
    }
    if (includePureServiceAreaBusinesses_ != false) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              12, includePureServiceAreaBusinesses_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.places.v1.AutocompletePlacesRequest)) {
      return super.equals(obj);
    }
    com.google.maps.places.v1.AutocompletePlacesRequest other =
        (com.google.maps.places.v1.AutocompletePlacesRequest) obj;

    if (!getInput().equals(other.getInput())) return false;
    if (hasLocationBias() != other.hasLocationBias()) return false;
    if (hasLocationBias()) {
      if (!getLocationBias().equals(other.getLocationBias())) return false;
    }
    if (hasLocationRestriction() != other.hasLocationRestriction()) return false;
    if (hasLocationRestriction()) {
      if (!getLocationRestriction().equals(other.getLocationRestriction())) return false;
    }
    if (!getIncludedPrimaryTypesList().equals(other.getIncludedPrimaryTypesList())) return false;
    if (!getIncludedRegionCodesList().equals(other.getIncludedRegionCodesList())) return false;
    if (!getLanguageCode().equals(other.getLanguageCode())) return false;
    if (!getRegionCode().equals(other.getRegionCode())) return false;
    if (hasOrigin() != other.hasOrigin()) return false;
    if (hasOrigin()) {
      if (!getOrigin().equals(other.getOrigin())) return false;
    }
    if (getInputOffset() != other.getInputOffset()) return false;
    if (getIncludeQueryPredictions() != other.getIncludeQueryPredictions()) return false;
    if (!getSessionToken().equals(other.getSessionToken())) return false;
    if (getIncludePureServiceAreaBusinesses() != other.getIncludePureServiceAreaBusinesses())
      return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INPUT_FIELD_NUMBER;
    hash = (53 * hash) + getInput().hashCode();
    if (hasLocationBias()) {
      hash = (37 * hash) + LOCATION_BIAS_FIELD_NUMBER;
      hash = (53 * hash) + getLocationBias().hashCode();
    }
    if (hasLocationRestriction()) {
      hash = (37 * hash) + LOCATION_RESTRICTION_FIELD_NUMBER;
      hash = (53 * hash) + getLocationRestriction().hashCode();
    }
    if (getIncludedPrimaryTypesCount() > 0) {
      hash = (37 * hash) + INCLUDED_PRIMARY_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getIncludedPrimaryTypesList().hashCode();
    }
    if (getIncludedRegionCodesCount() > 0) {
      hash = (37 * hash) + INCLUDED_REGION_CODES_FIELD_NUMBER;
      hash = (53 * hash) + getIncludedRegionCodesList().hashCode();
    }
    hash = (37 * hash) + LANGUAGE_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getLanguageCode().hashCode();
    hash = (37 * hash) + REGION_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getRegionCode().hashCode();
    if (hasOrigin()) {
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
    }
    hash = (37 * hash) + INPUT_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + getInputOffset();
    hash = (37 * hash) + INCLUDE_QUERY_PREDICTIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIncludeQueryPredictions());
    hash = (37 * hash) + SESSION_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getSessionToken().hashCode();
    hash = (37 * hash) + INCLUDE_PURE_SERVICE_AREA_BUSINESSES_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashBoolean(getIncludePureServiceAreaBusinesses());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.places.v1.AutocompletePlacesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Request proto for AutocompletePlaces.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.AutocompletePlacesRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.maps.places.v1.AutocompletePlacesRequest)
      com.google.maps.places.v1.AutocompletePlacesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.AutocompletePlacesRequest.class,
              com.google.maps.places.v1.AutocompletePlacesRequest.Builder.class);
    }

    // Construct using com.google.maps.places.v1.AutocompletePlacesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getLocationBiasFieldBuilder();
        getLocationRestrictionFieldBuilder();
        getOriginFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      input_ = "";
      locationBias_ = null;
      if (locationBiasBuilder_ != null) {
        locationBiasBuilder_.dispose();
        locationBiasBuilder_ = null;
      }
      locationRestriction_ = null;
      if (locationRestrictionBuilder_ != null) {
        locationRestrictionBuilder_.dispose();
        locationRestrictionBuilder_ = null;
      }
      includedPrimaryTypes_ = com.google.protobuf.LazyStringArrayList.emptyList();
      includedRegionCodes_ = com.google.protobuf.LazyStringArrayList.emptyList();
      languageCode_ = "";
      regionCode_ = "";
      origin_ = null;
      if (originBuilder_ != null) {
        originBuilder_.dispose();
        originBuilder_ = null;
      }
      inputOffset_ = 0;
      includeQueryPredictions_ = false;
      sessionToken_ = "";
      includePureServiceAreaBusinesses_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_AutocompletePlacesRequest_descriptor;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesRequest getDefaultInstanceForType() {
      return com.google.maps.places.v1.AutocompletePlacesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesRequest build() {
      com.google.maps.places.v1.AutocompletePlacesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.places.v1.AutocompletePlacesRequest buildPartial() {
      com.google.maps.places.v1.AutocompletePlacesRequest result =
          new com.google.maps.places.v1.AutocompletePlacesRequest(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.maps.places.v1.AutocompletePlacesRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.input_ = input_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.locationBias_ =
            locationBiasBuilder_ == null ? locationBias_ : locationBiasBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.locationRestriction_ =
            locationRestrictionBuilder_ == null
                ? locationRestriction_
                : locationRestrictionBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        includedPrimaryTypes_.makeImmutable();
        result.includedPrimaryTypes_ = includedPrimaryTypes_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        includedRegionCodes_.makeImmutable();
        result.includedRegionCodes_ = includedRegionCodes_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.languageCode_ = languageCode_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.regionCode_ = regionCode_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.origin_ = originBuilder_ == null ? origin_ : originBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.inputOffset_ = inputOffset_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.includeQueryPredictions_ = includeQueryPredictions_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.sessionToken_ = sessionToken_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.includePureServiceAreaBusinesses_ = includePureServiceAreaBusinesses_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.places.v1.AutocompletePlacesRequest) {
        return mergeFrom((com.google.maps.places.v1.AutocompletePlacesRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.places.v1.AutocompletePlacesRequest other) {
      if (other == com.google.maps.places.v1.AutocompletePlacesRequest.getDefaultInstance())
        return this;
      if (!other.getInput().isEmpty()) {
        input_ = other.input_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasLocationBias()) {
        mergeLocationBias(other.getLocationBias());
      }
      if (other.hasLocationRestriction()) {
        mergeLocationRestriction(other.getLocationRestriction());
      }
      if (!other.includedPrimaryTypes_.isEmpty()) {
        if (includedPrimaryTypes_.isEmpty()) {
          includedPrimaryTypes_ = other.includedPrimaryTypes_;
          bitField0_ |= 0x00000008;
        } else {
          ensureIncludedPrimaryTypesIsMutable();
          includedPrimaryTypes_.addAll(other.includedPrimaryTypes_);
        }
        onChanged();
      }
      if (!other.includedRegionCodes_.isEmpty()) {
        if (includedRegionCodes_.isEmpty()) {
          includedRegionCodes_ = other.includedRegionCodes_;
          bitField0_ |= 0x00000010;
        } else {
          ensureIncludedRegionCodesIsMutable();
          includedRegionCodes_.addAll(other.includedRegionCodes_);
        }
        onChanged();
      }
      if (!other.getLanguageCode().isEmpty()) {
        languageCode_ = other.languageCode_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getRegionCode().isEmpty()) {
        regionCode_ = other.regionCode_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.hasOrigin()) {
        mergeOrigin(other.getOrigin());
      }
      if (other.getInputOffset() != 0) {
        setInputOffset(other.getInputOffset());
      }
      if (other.getIncludeQueryPredictions() != false) {
        setIncludeQueryPredictions(other.getIncludeQueryPredictions());
      }
      if (!other.getSessionToken().isEmpty()) {
        sessionToken_ = other.sessionToken_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (other.getIncludePureServiceAreaBusinesses() != false) {
        setIncludePureServiceAreaBusinesses(other.getIncludePureServiceAreaBusinesses());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getLocationBiasFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(
                    getLocationRestrictionFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureIncludedPrimaryTypesIsMutable();
                includedPrimaryTypes_.add(s);
                break;
              } // case 34
            case 42:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureIncludedRegionCodesIsMutable();
                includedRegionCodes_.add(s);
                break;
              } // case 42
            case 50:
              {
                languageCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
            case 58:
              {
                regionCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
            case 66:
              {
                input.readMessage(getOriginFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
            case 72:
              {
                inputOffset_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
            case 80:
              {
                includeQueryPredictions_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
            case 90:
              {
                sessionToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
            case 96:
              {
                includePureServiceAreaBusinesses_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object input_ = "";
    /**
     *
     *
     * <pre>
     * Required. The text string on which to search.
     * </pre>
     *
     * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The input.
     */
    public java.lang.String getInput() {
      java.lang.Object ref = input_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        input_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The text string on which to search.
     * </pre>
     *
     * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for input.
     */
    public com.google.protobuf.ByteString getInputBytes() {
      java.lang.Object ref = input_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        input_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The text string on which to search.
     * </pre>
     *
     * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The input to set.
     * @return This builder for chaining.
     */
    public Builder setInput(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      input_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The text string on which to search.
     * </pre>
     *
     * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInput() {
      input_ = getDefaultInstance().getInput();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The text string on which to search.
     * </pre>
     *
     * <code>string input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for input to set.
     * @return This builder for chaining.
     */
    public Builder setInputBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      input_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias locationBias_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationBiasOrBuilder>
        locationBiasBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the locationBias field is set.
     */
    public boolean hasLocationBias() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The locationBias.
     */
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias getLocationBias() {
      if (locationBiasBuilder_ == null) {
        return locationBias_ == null
            ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.getDefaultInstance()
            : locationBias_;
      } else {
        return locationBiasBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setLocationBias(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias value) {
      if (locationBiasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationBias_ = value;
      } else {
        locationBiasBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setLocationBias(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder builderForValue) {
      if (locationBiasBuilder_ == null) {
        locationBias_ = builderForValue.build();
      } else {
        locationBiasBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeLocationBias(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias value) {
      if (locationBiasBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && locationBias_ != null
            && locationBias_
                != com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias
                    .getDefaultInstance()) {
          getLocationBiasBuilder().mergeFrom(value);
        } else {
          locationBias_ = value;
        }
      } else {
        locationBiasBuilder_.mergeFrom(value);
      }
      if (locationBias_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearLocationBias() {
      bitField0_ = (bitField0_ & ~0x00000002);
      locationBias_ = null;
      if (locationBiasBuilder_ != null) {
        locationBiasBuilder_.dispose();
        locationBiasBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder
        getLocationBiasBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getLocationBiasFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationBiasOrBuilder
        getLocationBiasOrBuilder() {
      if (locationBiasBuilder_ != null) {
        return locationBiasBuilder_.getMessageOrBuilder();
      } else {
        return locationBias_ == null
            ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.getDefaultInstance()
            : locationBias_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Bias results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationBias location_bias = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationBiasOrBuilder>
        getLocationBiasFieldBuilder() {
      if (locationBiasBuilder_ == null) {
        locationBiasBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias,
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationBias.Builder,
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationBiasOrBuilder>(
                getLocationBias(), getParentForChildren(), isClean());
        locationBias_ = null;
      }
      return locationBiasBuilder_;
    }

    private com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        locationRestriction_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestrictionOrBuilder>
        locationRestrictionBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the locationRestriction field is set.
     */
    public boolean hasLocationRestriction() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The locationRestriction.
     */
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
        getLocationRestriction() {
      if (locationRestrictionBuilder_ == null) {
        return locationRestriction_ == null
            ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
                .getDefaultInstance()
            : locationRestriction_;
      } else {
        return locationRestrictionBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setLocationRestriction(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction value) {
      if (locationRestrictionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationRestriction_ = value;
      } else {
        locationRestrictionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setLocationRestriction(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder
            builderForValue) {
      if (locationRestrictionBuilder_ == null) {
        locationRestriction_ = builderForValue.build();
      } else {
        locationRestrictionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeLocationRestriction(
        com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction value) {
      if (locationRestrictionBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && locationRestriction_ != null
            && locationRestriction_
                != com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
                    .getDefaultInstance()) {
          getLocationRestrictionBuilder().mergeFrom(value);
        } else {
          locationRestriction_ = value;
        }
      } else {
        locationRestrictionBuilder_.mergeFrom(value);
      }
      if (locationRestriction_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearLocationRestriction() {
      bitField0_ = (bitField0_ & ~0x00000004);
      locationRestriction_ = null;
      if (locationRestrictionBuilder_ != null) {
        locationRestrictionBuilder_.dispose();
        locationRestrictionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder
        getLocationRestrictionBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getLocationRestrictionFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestrictionOrBuilder
        getLocationRestrictionOrBuilder() {
      if (locationRestrictionBuilder_ != null) {
        return locationRestrictionBuilder_.getMessageOrBuilder();
      } else {
        return locationRestriction_ == null
            ? com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction
                .getDefaultInstance()
            : locationRestriction_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Restrict results to a specified location.
     *
     * At most one of `location_bias` or `location_restriction` should be set. If
     * neither are set, the results will be biased by IP address, meaning the IP
     * address will be mapped to an imprecise location and used as a biasing
     * signal.
     * </pre>
     *
     * <code>
     * .google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction location_restriction = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder,
            com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestrictionOrBuilder>
        getLocationRestrictionFieldBuilder() {
      if (locationRestrictionBuilder_ == null) {
        locationRestrictionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction,
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestriction.Builder,
                com.google.maps.places.v1.AutocompletePlacesRequest.LocationRestrictionOrBuilder>(
                getLocationRestriction(), getParentForChildren(), isClean());
        locationRestriction_ = null;
      }
      return locationRestrictionBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList includedPrimaryTypes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureIncludedPrimaryTypesIsMutable() {
      if (!includedPrimaryTypes_.isModifiable()) {
        includedPrimaryTypes_ = new com.google.protobuf.LazyStringArrayList(includedPrimaryTypes_);
      }
      bitField0_ |= 0x00000008;
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the includedPrimaryTypes.
     */
    public com.google.protobuf.ProtocolStringList getIncludedPrimaryTypesList() {
      includedPrimaryTypes_.makeImmutable();
      return includedPrimaryTypes_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The count of includedPrimaryTypes.
     */
    public int getIncludedPrimaryTypesCount() {
      return includedPrimaryTypes_.size();
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the element to return.
     * @return The includedPrimaryTypes at the given index.
     */
    public java.lang.String getIncludedPrimaryTypes(int index) {
      return includedPrimaryTypes_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the includedPrimaryTypes at the given index.
     */
    public com.google.protobuf.ByteString getIncludedPrimaryTypesBytes(int index) {
      return includedPrimaryTypes_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The includedPrimaryTypes to set.
     * @return This builder for chaining.
     */
    public Builder setIncludedPrimaryTypes(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIncludedPrimaryTypesIsMutable();
      includedPrimaryTypes_.set(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The includedPrimaryTypes to add.
     * @return This builder for chaining.
     */
    public Builder addIncludedPrimaryTypes(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIncludedPrimaryTypesIsMutable();
      includedPrimaryTypes_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The includedPrimaryTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllIncludedPrimaryTypes(java.lang.Iterable<java.lang.String> values) {
      ensureIncludedPrimaryTypesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, includedPrimaryTypes_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIncludedPrimaryTypes() {
      includedPrimaryTypes_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Included primary Place type (for example, "restaurant" or
     * "gas_station") in Place Types
     * (https://developers.google.com/maps/documentation/places/web-service/place-types),
     * or only `(regions)`, or only `(cities)`. A Place is only returned if its
     * primary type is included in this list. Up to 5 values can be specified. If
     * no types are specified, all Place types are returned.
     * </pre>
     *
     * <code>repeated string included_primary_types = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The bytes of the includedPrimaryTypes to add.
     * @return This builder for chaining.
     */
    public Builder addIncludedPrimaryTypesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureIncludedPrimaryTypesIsMutable();
      includedPrimaryTypes_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList includedRegionCodes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureIncludedRegionCodesIsMutable() {
      if (!includedRegionCodes_.isModifiable()) {
        includedRegionCodes_ = new com.google.protobuf.LazyStringArrayList(includedRegionCodes_);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the includedRegionCodes.
     */
    public com.google.protobuf.ProtocolStringList getIncludedRegionCodesList() {
      includedRegionCodes_.makeImmutable();
      return includedRegionCodes_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The count of includedRegionCodes.
     */
    public int getIncludedRegionCodesCount() {
      return includedRegionCodes_.size();
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the element to return.
     * @return The includedRegionCodes at the given index.
     */
    public java.lang.String getIncludedRegionCodes(int index) {
      return includedRegionCodes_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the includedRegionCodes at the given index.
     */
    public com.google.protobuf.ByteString getIncludedRegionCodesBytes(int index) {
      return includedRegionCodes_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The includedRegionCodes to set.
     * @return This builder for chaining.
     */
    public Builder setIncludedRegionCodes(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIncludedRegionCodesIsMutable();
      includedRegionCodes_.set(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The includedRegionCodes to add.
     * @return This builder for chaining.
     */
    public Builder addIncludedRegionCodes(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIncludedRegionCodesIsMutable();
      includedRegionCodes_.add(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The includedRegionCodes to add.
     * @return This builder for chaining.
     */
    public Builder addAllIncludedRegionCodes(java.lang.Iterable<java.lang.String> values) {
      ensureIncludedRegionCodesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, includedRegionCodes_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIncludedRegionCodes() {
      includedRegionCodes_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Only include results in the specified regions, specified as up to
     * 15 CLDR two-character region codes. An empty set will not restrict the
     * results. If both `location_restriction` and `included_region_codes` are
     * set, the results will be located in the area of intersection.
     * </pre>
     *
     * <code>repeated string included_region_codes = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The bytes of the includedRegionCodes to add.
     * @return This builder for chaining.
     */
    public Builder addIncludedRegionCodesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureIncludedRegionCodesIsMutable();
      includedRegionCodes_.add(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object languageCode_ = "";
    /**
     *
     *
     * <pre>
     * Optional. The language in which to return results. Defaults to en-US. The
     * results may be in mixed languages if the language used in `input` is
     * different from `language_code` or if the returned Place does not have a
     * translation from the local language to `language_code`.
     * </pre>
     *
     * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The languageCode.
     */
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        languageCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The language in which to return results. Defaults to en-US. The
     * results may be in mixed languages if the language used in `input` is
     * different from `language_code` or if the returned Place does not have a
     * translation from the local language to `language_code`.
     * </pre>
     *
     * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for languageCode.
     */
    public com.google.protobuf.ByteString getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The language in which to return results. Defaults to en-US. The
     * results may be in mixed languages if the language used in `input` is
     * different from `language_code` or if the returned Place does not have a
     * translation from the local language to `language_code`.
     * </pre>
     *
     * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The languageCode to set.
     * @return This builder for chaining.
     */
    public Builder setLanguageCode(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      languageCode_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The language in which to return results. Defaults to en-US. The
     * results may be in mixed languages if the language used in `input` is
     * different from `language_code` or if the returned Place does not have a
     * translation from the local language to `language_code`.
     * </pre>
     *
     * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLanguageCode() {
      languageCode_ = getDefaultInstance().getLanguageCode();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The language in which to return results. Defaults to en-US. The
     * results may be in mixed languages if the language used in `input` is
     * different from `language_code` or if the returned Place does not have a
     * translation from the local language to `language_code`.
     * </pre>
     *
     * <code>string language_code = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for languageCode to set.
     * @return This builder for chaining.
     */
    public Builder setLanguageCodeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      languageCode_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object regionCode_ = "";
    /**
     *
     *
     * <pre>
     * Optional. The region code, specified as a CLDR two-character region code.
     * This affects address formatting, result ranking, and may influence what
     * results are returned. This does not restrict results to the specified
     * region. To restrict results to a region, use `region_code_restriction`.
     * </pre>
     *
     * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The regionCode.
     */
    public java.lang.String getRegionCode() {
      java.lang.Object ref = regionCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        regionCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The region code, specified as a CLDR two-character region code.
     * This affects address formatting, result ranking, and may influence what
     * results are returned. This does not restrict results to the specified
     * region. To restrict results to a region, use `region_code_restriction`.
     * </pre>
     *
     * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for regionCode.
     */
    public com.google.protobuf.ByteString getRegionCodeBytes() {
      java.lang.Object ref = regionCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        regionCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The region code, specified as a CLDR two-character region code.
     * This affects address formatting, result ranking, and may influence what
     * results are returned. This does not restrict results to the specified
     * region. To restrict results to a region, use `region_code_restriction`.
     * </pre>
     *
     * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The regionCode to set.
     * @return This builder for chaining.
     */
    public Builder setRegionCode(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      regionCode_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The region code, specified as a CLDR two-character region code.
     * This affects address formatting, result ranking, and may influence what
     * results are returned. This does not restrict results to the specified
     * region. To restrict results to a region, use `region_code_restriction`.
     * </pre>
     *
     * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRegionCode() {
      regionCode_ = getDefaultInstance().getRegionCode();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The region code, specified as a CLDR two-character region code.
     * This affects address formatting, result ranking, and may influence what
     * results are returned. This does not restrict results to the specified
     * region. To restrict results to a region, use `region_code_restriction`.
     * </pre>
     *
     * <code>string region_code = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for regionCode to set.
     * @return This builder for chaining.
     */
    public Builder setRegionCodeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      regionCode_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private com.google.type.LatLng origin_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder>
        originBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the origin field is set.
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The origin.
     */
    public com.google.type.LatLng getOrigin() {
      if (originBuilder_ == null) {
        return origin_ == null ? com.google.type.LatLng.getDefaultInstance() : origin_;
      } else {
        return originBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setOrigin(com.google.type.LatLng value) {
      if (originBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        origin_ = value;
      } else {
        originBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder setOrigin(com.google.type.LatLng.Builder builderForValue) {
      if (originBuilder_ == null) {
        origin_ = builderForValue.build();
      } else {
        originBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder mergeOrigin(com.google.type.LatLng value) {
      if (originBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)
            && origin_ != null
            && origin_ != com.google.type.LatLng.getDefaultInstance()) {
          getOriginBuilder().mergeFrom(value);
        } else {
          origin_ = value;
        }
      } else {
        originBuilder_.mergeFrom(value);
      }
      if (origin_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder clearOrigin() {
      bitField0_ = (bitField0_ & ~0x00000080);
      origin_ = null;
      if (originBuilder_ != null) {
        originBuilder_.dispose();
        originBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.type.LatLng.Builder getOriginBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getOriginFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public com.google.type.LatLngOrBuilder getOriginOrBuilder() {
      if (originBuilder_ != null) {
        return originBuilder_.getMessageOrBuilder();
      } else {
        return origin_ == null ? com.google.type.LatLng.getDefaultInstance() : origin_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The origin point from which to calculate geodesic distance to the
     * destination (returned as `distance_meters`). If this value is omitted,
     * geodesic distance will not be returned.
     * </pre>
     *
     * <code>.google.type.LatLng origin = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.LatLng, com.google.type.LatLng.Builder, com.google.type.LatLngOrBuilder>
        getOriginFieldBuilder() {
      if (originBuilder_ == null) {
        originBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.LatLng,
                com.google.type.LatLng.Builder,
                com.google.type.LatLngOrBuilder>(getOrigin(), getParentForChildren(), isClean());
        origin_ = null;
      }
      return originBuilder_;
    }

    private int inputOffset_;
    /**
     *
     *
     * <pre>
     * Optional. A zero-based Unicode character offset of `input` indicating the
     * cursor position in `input`. The cursor position may influence what
     * predictions are returned.
     *
     * If empty, defaults to the length of `input`.
     * </pre>
     *
     * <code>int32 input_offset = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The inputOffset.
     */
    @java.lang.Override
    public int getInputOffset() {
      return inputOffset_;
    }
    /**
     *
     *
     * <pre>
     * Optional. A zero-based Unicode character offset of `input` indicating the
     * cursor position in `input`. The cursor position may influence what
     * predictions are returned.
     *
     * If empty, defaults to the length of `input`.
     * </pre>
     *
     * <code>int32 input_offset = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The inputOffset to set.
     * @return This builder for chaining.
     */
    public Builder setInputOffset(int value) {

      inputOffset_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A zero-based Unicode character offset of `input` indicating the
     * cursor position in `input`. The cursor position may influence what
     * predictions are returned.
     *
     * If empty, defaults to the length of `input`.
     * </pre>
     *
     * <code>int32 input_offset = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInputOffset() {
      bitField0_ = (bitField0_ & ~0x00000100);
      inputOffset_ = 0;
      onChanged();
      return this;
    }

    private boolean includeQueryPredictions_;
    /**
     *
     *
     * <pre>
     * Optional. If true, the response will include both Place and query
     * predictions. Otherwise the response will only return Place predictions.
     * </pre>
     *
     * <code>bool include_query_predictions = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The includeQueryPredictions.
     */
    @java.lang.Override
    public boolean getIncludeQueryPredictions() {
      return includeQueryPredictions_;
    }
    /**
     *
     *
     * <pre>
     * Optional. If true, the response will include both Place and query
     * predictions. Otherwise the response will only return Place predictions.
     * </pre>
     *
     * <code>bool include_query_predictions = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The includeQueryPredictions to set.
     * @return This builder for chaining.
     */
    public Builder setIncludeQueryPredictions(boolean value) {

      includeQueryPredictions_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. If true, the response will include both Place and query
     * predictions. Otherwise the response will only return Place predictions.
     * </pre>
     *
     * <code>bool include_query_predictions = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIncludeQueryPredictions() {
      bitField0_ = (bitField0_ & ~0x00000200);
      includeQueryPredictions_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object sessionToken_ = "";
    /**
     *
     *
     * <pre>
     * Optional. A string which identifies an Autocomplete session for billing
     * purposes. Must be a URL and filename safe base64 string with at most 36
     * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
     * returned.
     *
     * The session begins when the user starts typing a query, and concludes when
     * they select a place and a call to Place Details or Address Validation is
     * made. Each session can have multiple queries, followed by one Place Details
     * or Address Validation request. The credentials used for each request within
     * a session must belong to the same Google Cloud Console project. Once a
     * session has concluded, the token is no longer valid; your app must generate
     * a fresh token for each session. If the `session_token` parameter is
     * omitted, or if you reuse a session token, the session is charged as if no
     * session token was provided (each request is billed separately).
     *
     * We recommend the following guidelines:
     *
     * * Use session tokens for all Place Autocomplete calls.
     * * Generate a fresh token for each session. Using a version 4 UUID is
     *   recommended.
     * * Ensure that the credentials used for all Place Autocomplete, Place
     *   Details, and Address Validation requests within a session belong to the
     *   same Cloud Console project.
     * * Be sure to pass a unique session token for each new session. Using the
     *   same token for more than one session will result in each request being
     *   billed individually.
     * </pre>
     *
     * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The sessionToken.
     */
    public java.lang.String getSessionToken() {
      java.lang.Object ref = sessionToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A string which identifies an Autocomplete session for billing
     * purposes. Must be a URL and filename safe base64 string with at most 36
     * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
     * returned.
     *
     * The session begins when the user starts typing a query, and concludes when
     * they select a place and a call to Place Details or Address Validation is
     * made. Each session can have multiple queries, followed by one Place Details
     * or Address Validation request. The credentials used for each request within
     * a session must belong to the same Google Cloud Console project. Once a
     * session has concluded, the token is no longer valid; your app must generate
     * a fresh token for each session. If the `session_token` parameter is
     * omitted, or if you reuse a session token, the session is charged as if no
     * session token was provided (each request is billed separately).
     *
     * We recommend the following guidelines:
     *
     * * Use session tokens for all Place Autocomplete calls.
     * * Generate a fresh token for each session. Using a version 4 UUID is
     *   recommended.
     * * Ensure that the credentials used for all Place Autocomplete, Place
     *   Details, and Address Validation requests within a session belong to the
     *   same Cloud Console project.
     * * Be sure to pass a unique session token for each new session. Using the
     *   same token for more than one session will result in each request being
     *   billed individually.
     * </pre>
     *
     * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for sessionToken.
     */
    public com.google.protobuf.ByteString getSessionTokenBytes() {
      java.lang.Object ref = sessionToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sessionToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A string which identifies an Autocomplete session for billing
     * purposes. Must be a URL and filename safe base64 string with at most 36
     * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
     * returned.
     *
     * The session begins when the user starts typing a query, and concludes when
     * they select a place and a call to Place Details or Address Validation is
     * made. Each session can have multiple queries, followed by one Place Details
     * or Address Validation request. The credentials used for each request within
     * a session must belong to the same Google Cloud Console project. Once a
     * session has concluded, the token is no longer valid; your app must generate
     * a fresh token for each session. If the `session_token` parameter is
     * omitted, or if you reuse a session token, the session is charged as if no
     * session token was provided (each request is billed separately).
     *
     * We recommend the following guidelines:
     *
     * * Use session tokens for all Place Autocomplete calls.
     * * Generate a fresh token for each session. Using a version 4 UUID is
     *   recommended.
     * * Ensure that the credentials used for all Place Autocomplete, Place
     *   Details, and Address Validation requests within a session belong to the
     *   same Cloud Console project.
     * * Be sure to pass a unique session token for each new session. Using the
     *   same token for more than one session will result in each request being
     *   billed individually.
     * </pre>
     *
     * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The sessionToken to set.
     * @return This builder for chaining.
     */
    public Builder setSessionToken(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      sessionToken_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A string which identifies an Autocomplete session for billing
     * purposes. Must be a URL and filename safe base64 string with at most 36
     * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
     * returned.
     *
     * The session begins when the user starts typing a query, and concludes when
     * they select a place and a call to Place Details or Address Validation is
     * made. Each session can have multiple queries, followed by one Place Details
     * or Address Validation request. The credentials used for each request within
     * a session must belong to the same Google Cloud Console project. Once a
     * session has concluded, the token is no longer valid; your app must generate
     * a fresh token for each session. If the `session_token` parameter is
     * omitted, or if you reuse a session token, the session is charged as if no
     * session token was provided (each request is billed separately).
     *
     * We recommend the following guidelines:
     *
     * * Use session tokens for all Place Autocomplete calls.
     * * Generate a fresh token for each session. Using a version 4 UUID is
     *   recommended.
     * * Ensure that the credentials used for all Place Autocomplete, Place
     *   Details, and Address Validation requests within a session belong to the
     *   same Cloud Console project.
     * * Be sure to pass a unique session token for each new session. Using the
     *   same token for more than one session will result in each request being
     *   billed individually.
     * </pre>
     *
     * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSessionToken() {
      sessionToken_ = getDefaultInstance().getSessionToken();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A string which identifies an Autocomplete session for billing
     * purposes. Must be a URL and filename safe base64 string with at most 36
     * ASCII characters in length. Otherwise an INVALID_ARGUMENT error is
     * returned.
     *
     * The session begins when the user starts typing a query, and concludes when
     * they select a place and a call to Place Details or Address Validation is
     * made. Each session can have multiple queries, followed by one Place Details
     * or Address Validation request. The credentials used for each request within
     * a session must belong to the same Google Cloud Console project. Once a
     * session has concluded, the token is no longer valid; your app must generate
     * a fresh token for each session. If the `session_token` parameter is
     * omitted, or if you reuse a session token, the session is charged as if no
     * session token was provided (each request is billed separately).
     *
     * We recommend the following guidelines:
     *
     * * Use session tokens for all Place Autocomplete calls.
     * * Generate a fresh token for each session. Using a version 4 UUID is
     *   recommended.
     * * Ensure that the credentials used for all Place Autocomplete, Place
     *   Details, and Address Validation requests within a session belong to the
     *   same Cloud Console project.
     * * Be sure to pass a unique session token for each new session. Using the
     *   same token for more than one session will result in each request being
     *   billed individually.
     * </pre>
     *
     * <code>string session_token = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for sessionToken to set.
     * @return This builder for chaining.
     */
    public Builder setSessionTokenBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      sessionToken_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private boolean includePureServiceAreaBusinesses_;
    /**
     *
     *
     * <pre>
     * Optional. Include pure service area businesses if the field is set to true.
     * Pure service area business is a business that visits or delivers to
     * customers directly but does not serve customers at their business address.
     * For example, businesses like cleaning services or plumbers. Those
     * businesses do not have a physical address or location on Google Maps.
     * Places will not return fields including `location`, `plus_code`, and other
     * location related fields for these businesses.
     * </pre>
     *
     * <code>
     * bool include_pure_service_area_businesses = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The includePureServiceAreaBusinesses.
     */
    @java.lang.Override
    public boolean getIncludePureServiceAreaBusinesses() {
      return includePureServiceAreaBusinesses_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Include pure service area businesses if the field is set to true.
     * Pure service area business is a business that visits or delivers to
     * customers directly but does not serve customers at their business address.
     * For example, businesses like cleaning services or plumbers. Those
     * businesses do not have a physical address or location on Google Maps.
     * Places will not return fields including `location`, `plus_code`, and other
     * location related fields for these businesses.
     * </pre>
     *
     * <code>
     * bool include_pure_service_area_businesses = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The includePureServiceAreaBusinesses to set.
     * @return This builder for chaining.
     */
    public Builder setIncludePureServiceAreaBusinesses(boolean value) {

      includePureServiceAreaBusinesses_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Include pure service area businesses if the field is set to true.
     * Pure service area business is a business that visits or delivers to
     * customers directly but does not serve customers at their business address.
     * For example, businesses like cleaning services or plumbers. Those
     * businesses do not have a physical address or location on Google Maps.
     * Places will not return fields including `location`, `plus_code`, and other
     * location related fields for these businesses.
     * </pre>
     *
     * <code>
     * bool include_pure_service_area_businesses = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIncludePureServiceAreaBusinesses() {
      bitField0_ = (bitField0_ & ~0x00000800);
      includePureServiceAreaBusinesses_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.maps.places.v1.AutocompletePlacesRequest)
  }

  // @@protoc_insertion_point(class_scope:google.maps.places.v1.AutocompletePlacesRequest)
  private static final com.google.maps.places.v1.AutocompletePlacesRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.places.v1.AutocompletePlacesRequest();
  }

  public static com.google.maps.places.v1.AutocompletePlacesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AutocompletePlacesRequest> PARSER =
      new com.google.protobuf.AbstractParser<AutocompletePlacesRequest>() {
        @java.lang.Override
        public AutocompletePlacesRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AutocompletePlacesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AutocompletePlacesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.places.v1.AutocompletePlacesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
