/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/places/v1/places_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.places.v1;

/**
 *
 *
 * <pre>
 * Response proto for SearchText.
 * </pre>
 *
 * Protobuf type {@code google.maps.places.v1.SearchTextResponse}
 */
public final class SearchTextResponse extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.maps.places.v1.SearchTextResponse)
    SearchTextResponseOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SearchTextResponse.newBuilder() to construct.
  private SearchTextResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SearchTextResponse() {
    places_ = java.util.Collections.emptyList();
    routingSummaries_ = java.util.Collections.emptyList();
    contextualContents_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SearchTextResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_SearchTextResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_SearchTextResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.places.v1.SearchTextResponse.class,
            com.google.maps.places.v1.SearchTextResponse.Builder.class);
  }

  public static final int PLACES_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.maps.places.v1.Place> places_;
  /**
   *
   *
   * <pre>
   * A list of places that meet the user's text search criteria.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place places = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.maps.places.v1.Place> getPlacesList() {
    return places_;
  }
  /**
   *
   *
   * <pre>
   * A list of places that meet the user's text search criteria.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place places = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.maps.places.v1.PlaceOrBuilder>
      getPlacesOrBuilderList() {
    return places_;
  }
  /**
   *
   *
   * <pre>
   * A list of places that meet the user's text search criteria.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place places = 1;</code>
   */
  @java.lang.Override
  public int getPlacesCount() {
    return places_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of places that meet the user's text search criteria.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place places = 1;</code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.Place getPlaces(int index) {
    return places_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of places that meet the user's text search criteria.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.Place places = 1;</code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.PlaceOrBuilder getPlacesOrBuilder(int index) {
    return places_.get(index);
  }

  public static final int ROUTING_SUMMARIES_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.maps.places.v1.RoutingSummary> routingSummaries_;
  /**
   *
   *
   * <pre>
   * A list of routing summaries where each entry associates to the
   * corresponding place in the same index in the `places` field. If the routing
   * summary is not available for one of the places, it will contain an empty
   * entry. This list will have as many entries as the list of places if
   * requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.maps.places.v1.RoutingSummary> getRoutingSummariesList() {
    return routingSummaries_;
  }
  /**
   *
   *
   * <pre>
   * A list of routing summaries where each entry associates to the
   * corresponding place in the same index in the `places` field. If the routing
   * summary is not available for one of the places, it will contain an empty
   * entry. This list will have as many entries as the list of places if
   * requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.maps.places.v1.RoutingSummaryOrBuilder>
      getRoutingSummariesOrBuilderList() {
    return routingSummaries_;
  }
  /**
   *
   *
   * <pre>
   * A list of routing summaries where each entry associates to the
   * corresponding place in the same index in the `places` field. If the routing
   * summary is not available for one of the places, it will contain an empty
   * entry. This list will have as many entries as the list of places if
   * requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
   */
  @java.lang.Override
  public int getRoutingSummariesCount() {
    return routingSummaries_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of routing summaries where each entry associates to the
   * corresponding place in the same index in the `places` field. If the routing
   * summary is not available for one of the places, it will contain an empty
   * entry. This list will have as many entries as the list of places if
   * requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.RoutingSummary getRoutingSummaries(int index) {
    return routingSummaries_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of routing summaries where each entry associates to the
   * corresponding place in the same index in the `places` field. If the routing
   * summary is not available for one of the places, it will contain an empty
   * entry. This list will have as many entries as the list of places if
   * requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.RoutingSummaryOrBuilder getRoutingSummariesOrBuilder(int index) {
    return routingSummaries_.get(index);
  }

  public static final int CONTEXTUAL_CONTENTS_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<com.google.maps.places.v1.ContextualContent> contextualContents_;
  /**
   *
   *
   * <pre>
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   *
   * A list of contextual contents where each entry associates to the
   * corresponding place in the same index in the places field. The contents
   * that are relevant to the `text_query` in the request are preferred. If the
   * contextual content is not available for one of the places, it will return
   * non-contextual content. It will be empty only when the content is
   * unavailable for this place. This list will have as many entries as the
   * list of places if requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.maps.places.v1.ContextualContent> getContextualContentsList() {
    return contextualContents_;
  }
  /**
   *
   *
   * <pre>
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   *
   * A list of contextual contents where each entry associates to the
   * corresponding place in the same index in the places field. The contents
   * that are relevant to the `text_query` in the request are preferred. If the
   * contextual content is not available for one of the places, it will return
   * non-contextual content. It will be empty only when the content is
   * unavailable for this place. This list will have as many entries as the
   * list of places if requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.maps.places.v1.ContextualContentOrBuilder>
      getContextualContentsOrBuilderList() {
    return contextualContents_;
  }
  /**
   *
   *
   * <pre>
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   *
   * A list of contextual contents where each entry associates to the
   * corresponding place in the same index in the places field. The contents
   * that are relevant to the `text_query` in the request are preferred. If the
   * contextual content is not available for one of the places, it will return
   * non-contextual content. It will be empty only when the content is
   * unavailable for this place. This list will have as many entries as the
   * list of places if requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
   */
  @java.lang.Override
  public int getContextualContentsCount() {
    return contextualContents_.size();
  }
  /**
   *
   *
   * <pre>
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   *
   * A list of contextual contents where each entry associates to the
   * corresponding place in the same index in the places field. The contents
   * that are relevant to the `text_query` in the request are preferred. If the
   * contextual content is not available for one of the places, it will return
   * non-contextual content. It will be empty only when the content is
   * unavailable for this place. This list will have as many entries as the
   * list of places if requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.ContextualContent getContextualContents(int index) {
    return contextualContents_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Experimental: See
   * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
   * for more details.
   *
   * A list of contextual contents where each entry associates to the
   * corresponding place in the same index in the places field. The contents
   * that are relevant to the `text_query` in the request are preferred. If the
   * contextual content is not available for one of the places, it will return
   * non-contextual content. It will be empty only when the content is
   * unavailable for this place. This list will have as many entries as the
   * list of places if requested.
   * </pre>
   *
   * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
   */
  @java.lang.Override
  public com.google.maps.places.v1.ContextualContentOrBuilder getContextualContentsOrBuilder(
      int index) {
    return contextualContents_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < places_.size(); i++) {
      output.writeMessage(1, places_.get(i));
    }
    for (int i = 0; i < routingSummaries_.size(); i++) {
      output.writeMessage(2, routingSummaries_.get(i));
    }
    for (int i = 0; i < contextualContents_.size(); i++) {
      output.writeMessage(3, contextualContents_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < places_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, places_.get(i));
    }
    for (int i = 0; i < routingSummaries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, routingSummaries_.get(i));
    }
    for (int i = 0; i < contextualContents_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(3, contextualContents_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.places.v1.SearchTextResponse)) {
      return super.equals(obj);
    }
    com.google.maps.places.v1.SearchTextResponse other =
        (com.google.maps.places.v1.SearchTextResponse) obj;

    if (!getPlacesList().equals(other.getPlacesList())) return false;
    if (!getRoutingSummariesList().equals(other.getRoutingSummariesList())) return false;
    if (!getContextualContentsList().equals(other.getContextualContentsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPlacesCount() > 0) {
      hash = (37 * hash) + PLACES_FIELD_NUMBER;
      hash = (53 * hash) + getPlacesList().hashCode();
    }
    if (getRoutingSummariesCount() > 0) {
      hash = (37 * hash) + ROUTING_SUMMARIES_FIELD_NUMBER;
      hash = (53 * hash) + getRoutingSummariesList().hashCode();
    }
    if (getContextualContentsCount() > 0) {
      hash = (37 * hash) + CONTEXTUAL_CONTENTS_FIELD_NUMBER;
      hash = (53 * hash) + getContextualContentsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.SearchTextResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.places.v1.SearchTextResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Response proto for SearchText.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.SearchTextResponse}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.maps.places.v1.SearchTextResponse)
      com.google.maps.places.v1.SearchTextResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_SearchTextResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_SearchTextResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.SearchTextResponse.class,
              com.google.maps.places.v1.SearchTextResponse.Builder.class);
    }

    // Construct using com.google.maps.places.v1.SearchTextResponse.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (placesBuilder_ == null) {
        places_ = java.util.Collections.emptyList();
      } else {
        places_ = null;
        placesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (routingSummariesBuilder_ == null) {
        routingSummaries_ = java.util.Collections.emptyList();
      } else {
        routingSummaries_ = null;
        routingSummariesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (contextualContentsBuilder_ == null) {
        contextualContents_ = java.util.Collections.emptyList();
      } else {
        contextualContents_ = null;
        contextualContentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_SearchTextResponse_descriptor;
    }

    @java.lang.Override
    public com.google.maps.places.v1.SearchTextResponse getDefaultInstanceForType() {
      return com.google.maps.places.v1.SearchTextResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.places.v1.SearchTextResponse build() {
      com.google.maps.places.v1.SearchTextResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.places.v1.SearchTextResponse buildPartial() {
      com.google.maps.places.v1.SearchTextResponse result =
          new com.google.maps.places.v1.SearchTextResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.maps.places.v1.SearchTextResponse result) {
      if (placesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          places_ = java.util.Collections.unmodifiableList(places_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.places_ = places_;
      } else {
        result.places_ = placesBuilder_.build();
      }
      if (routingSummariesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          routingSummaries_ = java.util.Collections.unmodifiableList(routingSummaries_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.routingSummaries_ = routingSummaries_;
      } else {
        result.routingSummaries_ = routingSummariesBuilder_.build();
      }
      if (contextualContentsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          contextualContents_ = java.util.Collections.unmodifiableList(contextualContents_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.contextualContents_ = contextualContents_;
      } else {
        result.contextualContents_ = contextualContentsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.maps.places.v1.SearchTextResponse result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.places.v1.SearchTextResponse) {
        return mergeFrom((com.google.maps.places.v1.SearchTextResponse) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.places.v1.SearchTextResponse other) {
      if (other == com.google.maps.places.v1.SearchTextResponse.getDefaultInstance()) return this;
      if (placesBuilder_ == null) {
        if (!other.places_.isEmpty()) {
          if (places_.isEmpty()) {
            places_ = other.places_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePlacesIsMutable();
            places_.addAll(other.places_);
          }
          onChanged();
        }
      } else {
        if (!other.places_.isEmpty()) {
          if (placesBuilder_.isEmpty()) {
            placesBuilder_.dispose();
            placesBuilder_ = null;
            places_ = other.places_;
            bitField0_ = (bitField0_ & ~0x00000001);
            placesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getPlacesFieldBuilder()
                    : null;
          } else {
            placesBuilder_.addAllMessages(other.places_);
          }
        }
      }
      if (routingSummariesBuilder_ == null) {
        if (!other.routingSummaries_.isEmpty()) {
          if (routingSummaries_.isEmpty()) {
            routingSummaries_ = other.routingSummaries_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRoutingSummariesIsMutable();
            routingSummaries_.addAll(other.routingSummaries_);
          }
          onChanged();
        }
      } else {
        if (!other.routingSummaries_.isEmpty()) {
          if (routingSummariesBuilder_.isEmpty()) {
            routingSummariesBuilder_.dispose();
            routingSummariesBuilder_ = null;
            routingSummaries_ = other.routingSummaries_;
            bitField0_ = (bitField0_ & ~0x00000002);
            routingSummariesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getRoutingSummariesFieldBuilder()
                    : null;
          } else {
            routingSummariesBuilder_.addAllMessages(other.routingSummaries_);
          }
        }
      }
      if (contextualContentsBuilder_ == null) {
        if (!other.contextualContents_.isEmpty()) {
          if (contextualContents_.isEmpty()) {
            contextualContents_ = other.contextualContents_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureContextualContentsIsMutable();
            contextualContents_.addAll(other.contextualContents_);
          }
          onChanged();
        }
      } else {
        if (!other.contextualContents_.isEmpty()) {
          if (contextualContentsBuilder_.isEmpty()) {
            contextualContentsBuilder_.dispose();
            contextualContentsBuilder_ = null;
            contextualContents_ = other.contextualContents_;
            bitField0_ = (bitField0_ & ~0x00000004);
            contextualContentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getContextualContentsFieldBuilder()
                    : null;
          } else {
            contextualContentsBuilder_.addAllMessages(other.contextualContents_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.maps.places.v1.Place m =
                    input.readMessage(com.google.maps.places.v1.Place.parser(), extensionRegistry);
                if (placesBuilder_ == null) {
                  ensurePlacesIsMutable();
                  places_.add(m);
                } else {
                  placesBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                com.google.maps.places.v1.RoutingSummary m =
                    input.readMessage(
                        com.google.maps.places.v1.RoutingSummary.parser(), extensionRegistry);
                if (routingSummariesBuilder_ == null) {
                  ensureRoutingSummariesIsMutable();
                  routingSummaries_.add(m);
                } else {
                  routingSummariesBuilder_.addMessage(m);
                }
                break;
              } // case 18
            case 26:
              {
                com.google.maps.places.v1.ContextualContent m =
                    input.readMessage(
                        com.google.maps.places.v1.ContextualContent.parser(), extensionRegistry);
                if (contextualContentsBuilder_ == null) {
                  ensureContextualContentsIsMutable();
                  contextualContents_.add(m);
                } else {
                  contextualContentsBuilder_.addMessage(m);
                }
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.maps.places.v1.Place> places_ =
        java.util.Collections.emptyList();

    private void ensurePlacesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        places_ = new java.util.ArrayList<com.google.maps.places.v1.Place>(places_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.Place,
            com.google.maps.places.v1.Place.Builder,
            com.google.maps.places.v1.PlaceOrBuilder>
        placesBuilder_;

    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public java.util.List<com.google.maps.places.v1.Place> getPlacesList() {
      if (placesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(places_);
      } else {
        return placesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public int getPlacesCount() {
      if (placesBuilder_ == null) {
        return places_.size();
      } else {
        return placesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public com.google.maps.places.v1.Place getPlaces(int index) {
      if (placesBuilder_ == null) {
        return places_.get(index);
      } else {
        return placesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder setPlaces(int index, com.google.maps.places.v1.Place value) {
      if (placesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlacesIsMutable();
        places_.set(index, value);
        onChanged();
      } else {
        placesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder setPlaces(int index, com.google.maps.places.v1.Place.Builder builderForValue) {
      if (placesBuilder_ == null) {
        ensurePlacesIsMutable();
        places_.set(index, builderForValue.build());
        onChanged();
      } else {
        placesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder addPlaces(com.google.maps.places.v1.Place value) {
      if (placesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlacesIsMutable();
        places_.add(value);
        onChanged();
      } else {
        placesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder addPlaces(int index, com.google.maps.places.v1.Place value) {
      if (placesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePlacesIsMutable();
        places_.add(index, value);
        onChanged();
      } else {
        placesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder addPlaces(com.google.maps.places.v1.Place.Builder builderForValue) {
      if (placesBuilder_ == null) {
        ensurePlacesIsMutable();
        places_.add(builderForValue.build());
        onChanged();
      } else {
        placesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder addPlaces(int index, com.google.maps.places.v1.Place.Builder builderForValue) {
      if (placesBuilder_ == null) {
        ensurePlacesIsMutable();
        places_.add(index, builderForValue.build());
        onChanged();
      } else {
        placesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder addAllPlaces(
        java.lang.Iterable<? extends com.google.maps.places.v1.Place> values) {
      if (placesBuilder_ == null) {
        ensurePlacesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, places_);
        onChanged();
      } else {
        placesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder clearPlaces() {
      if (placesBuilder_ == null) {
        places_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        placesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public Builder removePlaces(int index) {
      if (placesBuilder_ == null) {
        ensurePlacesIsMutable();
        places_.remove(index);
        onChanged();
      } else {
        placesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public com.google.maps.places.v1.Place.Builder getPlacesBuilder(int index) {
      return getPlacesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public com.google.maps.places.v1.PlaceOrBuilder getPlacesOrBuilder(int index) {
      if (placesBuilder_ == null) {
        return places_.get(index);
      } else {
        return placesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public java.util.List<? extends com.google.maps.places.v1.PlaceOrBuilder>
        getPlacesOrBuilderList() {
      if (placesBuilder_ != null) {
        return placesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(places_);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public com.google.maps.places.v1.Place.Builder addPlacesBuilder() {
      return getPlacesFieldBuilder()
          .addBuilder(com.google.maps.places.v1.Place.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public com.google.maps.places.v1.Place.Builder addPlacesBuilder(int index) {
      return getPlacesFieldBuilder()
          .addBuilder(index, com.google.maps.places.v1.Place.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of places that meet the user's text search criteria.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.Place places = 1;</code>
     */
    public java.util.List<com.google.maps.places.v1.Place.Builder> getPlacesBuilderList() {
      return getPlacesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.Place,
            com.google.maps.places.v1.Place.Builder,
            com.google.maps.places.v1.PlaceOrBuilder>
        getPlacesFieldBuilder() {
      if (placesBuilder_ == null) {
        placesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.places.v1.Place,
                com.google.maps.places.v1.Place.Builder,
                com.google.maps.places.v1.PlaceOrBuilder>(
                places_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        places_ = null;
      }
      return placesBuilder_;
    }

    private java.util.List<com.google.maps.places.v1.RoutingSummary> routingSummaries_ =
        java.util.Collections.emptyList();

    private void ensureRoutingSummariesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        routingSummaries_ =
            new java.util.ArrayList<com.google.maps.places.v1.RoutingSummary>(routingSummaries_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.RoutingSummary,
            com.google.maps.places.v1.RoutingSummary.Builder,
            com.google.maps.places.v1.RoutingSummaryOrBuilder>
        routingSummariesBuilder_;

    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public java.util.List<com.google.maps.places.v1.RoutingSummary> getRoutingSummariesList() {
      if (routingSummariesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(routingSummaries_);
      } else {
        return routingSummariesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public int getRoutingSummariesCount() {
      if (routingSummariesBuilder_ == null) {
        return routingSummaries_.size();
      } else {
        return routingSummariesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public com.google.maps.places.v1.RoutingSummary getRoutingSummaries(int index) {
      if (routingSummariesBuilder_ == null) {
        return routingSummaries_.get(index);
      } else {
        return routingSummariesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder setRoutingSummaries(int index, com.google.maps.places.v1.RoutingSummary value) {
      if (routingSummariesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoutingSummariesIsMutable();
        routingSummaries_.set(index, value);
        onChanged();
      } else {
        routingSummariesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder setRoutingSummaries(
        int index, com.google.maps.places.v1.RoutingSummary.Builder builderForValue) {
      if (routingSummariesBuilder_ == null) {
        ensureRoutingSummariesIsMutable();
        routingSummaries_.set(index, builderForValue.build());
        onChanged();
      } else {
        routingSummariesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder addRoutingSummaries(com.google.maps.places.v1.RoutingSummary value) {
      if (routingSummariesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoutingSummariesIsMutable();
        routingSummaries_.add(value);
        onChanged();
      } else {
        routingSummariesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder addRoutingSummaries(int index, com.google.maps.places.v1.RoutingSummary value) {
      if (routingSummariesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoutingSummariesIsMutable();
        routingSummaries_.add(index, value);
        onChanged();
      } else {
        routingSummariesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder addRoutingSummaries(
        com.google.maps.places.v1.RoutingSummary.Builder builderForValue) {
      if (routingSummariesBuilder_ == null) {
        ensureRoutingSummariesIsMutable();
        routingSummaries_.add(builderForValue.build());
        onChanged();
      } else {
        routingSummariesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder addRoutingSummaries(
        int index, com.google.maps.places.v1.RoutingSummary.Builder builderForValue) {
      if (routingSummariesBuilder_ == null) {
        ensureRoutingSummariesIsMutable();
        routingSummaries_.add(index, builderForValue.build());
        onChanged();
      } else {
        routingSummariesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder addAllRoutingSummaries(
        java.lang.Iterable<? extends com.google.maps.places.v1.RoutingSummary> values) {
      if (routingSummariesBuilder_ == null) {
        ensureRoutingSummariesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, routingSummaries_);
        onChanged();
      } else {
        routingSummariesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder clearRoutingSummaries() {
      if (routingSummariesBuilder_ == null) {
        routingSummaries_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        routingSummariesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public Builder removeRoutingSummaries(int index) {
      if (routingSummariesBuilder_ == null) {
        ensureRoutingSummariesIsMutable();
        routingSummaries_.remove(index);
        onChanged();
      } else {
        routingSummariesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public com.google.maps.places.v1.RoutingSummary.Builder getRoutingSummariesBuilder(int index) {
      return getRoutingSummariesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public com.google.maps.places.v1.RoutingSummaryOrBuilder getRoutingSummariesOrBuilder(
        int index) {
      if (routingSummariesBuilder_ == null) {
        return routingSummaries_.get(index);
      } else {
        return routingSummariesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public java.util.List<? extends com.google.maps.places.v1.RoutingSummaryOrBuilder>
        getRoutingSummariesOrBuilderList() {
      if (routingSummariesBuilder_ != null) {
        return routingSummariesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(routingSummaries_);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public com.google.maps.places.v1.RoutingSummary.Builder addRoutingSummariesBuilder() {
      return getRoutingSummariesFieldBuilder()
          .addBuilder(com.google.maps.places.v1.RoutingSummary.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public com.google.maps.places.v1.RoutingSummary.Builder addRoutingSummariesBuilder(int index) {
      return getRoutingSummariesFieldBuilder()
          .addBuilder(index, com.google.maps.places.v1.RoutingSummary.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of routing summaries where each entry associates to the
     * corresponding place in the same index in the `places` field. If the routing
     * summary is not available for one of the places, it will contain an empty
     * entry. This list will have as many entries as the list of places if
     * requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.RoutingSummary routing_summaries = 2;</code>
     */
    public java.util.List<com.google.maps.places.v1.RoutingSummary.Builder>
        getRoutingSummariesBuilderList() {
      return getRoutingSummariesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.RoutingSummary,
            com.google.maps.places.v1.RoutingSummary.Builder,
            com.google.maps.places.v1.RoutingSummaryOrBuilder>
        getRoutingSummariesFieldBuilder() {
      if (routingSummariesBuilder_ == null) {
        routingSummariesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.places.v1.RoutingSummary,
                com.google.maps.places.v1.RoutingSummary.Builder,
                com.google.maps.places.v1.RoutingSummaryOrBuilder>(
                routingSummaries_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        routingSummaries_ = null;
      }
      return routingSummariesBuilder_;
    }

    private java.util.List<com.google.maps.places.v1.ContextualContent> contextualContents_ =
        java.util.Collections.emptyList();

    private void ensureContextualContentsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        contextualContents_ =
            new java.util.ArrayList<com.google.maps.places.v1.ContextualContent>(
                contextualContents_);
        bitField0_ |= 0x00000004;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.ContextualContent,
            com.google.maps.places.v1.ContextualContent.Builder,
            com.google.maps.places.v1.ContextualContentOrBuilder>
        contextualContentsBuilder_;

    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public java.util.List<com.google.maps.places.v1.ContextualContent> getContextualContentsList() {
      if (contextualContentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(contextualContents_);
      } else {
        return contextualContentsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public int getContextualContentsCount() {
      if (contextualContentsBuilder_ == null) {
        return contextualContents_.size();
      } else {
        return contextualContentsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public com.google.maps.places.v1.ContextualContent getContextualContents(int index) {
      if (contextualContentsBuilder_ == null) {
        return contextualContents_.get(index);
      } else {
        return contextualContentsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder setContextualContents(
        int index, com.google.maps.places.v1.ContextualContent value) {
      if (contextualContentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextualContentsIsMutable();
        contextualContents_.set(index, value);
        onChanged();
      } else {
        contextualContentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder setContextualContents(
        int index, com.google.maps.places.v1.ContextualContent.Builder builderForValue) {
      if (contextualContentsBuilder_ == null) {
        ensureContextualContentsIsMutable();
        contextualContents_.set(index, builderForValue.build());
        onChanged();
      } else {
        contextualContentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder addContextualContents(com.google.maps.places.v1.ContextualContent value) {
      if (contextualContentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextualContentsIsMutable();
        contextualContents_.add(value);
        onChanged();
      } else {
        contextualContentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder addContextualContents(
        int index, com.google.maps.places.v1.ContextualContent value) {
      if (contextualContentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextualContentsIsMutable();
        contextualContents_.add(index, value);
        onChanged();
      } else {
        contextualContentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder addContextualContents(
        com.google.maps.places.v1.ContextualContent.Builder builderForValue) {
      if (contextualContentsBuilder_ == null) {
        ensureContextualContentsIsMutable();
        contextualContents_.add(builderForValue.build());
        onChanged();
      } else {
        contextualContentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder addContextualContents(
        int index, com.google.maps.places.v1.ContextualContent.Builder builderForValue) {
      if (contextualContentsBuilder_ == null) {
        ensureContextualContentsIsMutable();
        contextualContents_.add(index, builderForValue.build());
        onChanged();
      } else {
        contextualContentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder addAllContextualContents(
        java.lang.Iterable<? extends com.google.maps.places.v1.ContextualContent> values) {
      if (contextualContentsBuilder_ == null) {
        ensureContextualContentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, contextualContents_);
        onChanged();
      } else {
        contextualContentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder clearContextualContents() {
      if (contextualContentsBuilder_ == null) {
        contextualContents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        contextualContentsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public Builder removeContextualContents(int index) {
      if (contextualContentsBuilder_ == null) {
        ensureContextualContentsIsMutable();
        contextualContents_.remove(index);
        onChanged();
      } else {
        contextualContentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public com.google.maps.places.v1.ContextualContent.Builder getContextualContentsBuilder(
        int index) {
      return getContextualContentsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public com.google.maps.places.v1.ContextualContentOrBuilder getContextualContentsOrBuilder(
        int index) {
      if (contextualContentsBuilder_ == null) {
        return contextualContents_.get(index);
      } else {
        return contextualContentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public java.util.List<? extends com.google.maps.places.v1.ContextualContentOrBuilder>
        getContextualContentsOrBuilderList() {
      if (contextualContentsBuilder_ != null) {
        return contextualContentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(contextualContents_);
      }
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public com.google.maps.places.v1.ContextualContent.Builder addContextualContentsBuilder() {
      return getContextualContentsFieldBuilder()
          .addBuilder(com.google.maps.places.v1.ContextualContent.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public com.google.maps.places.v1.ContextualContent.Builder addContextualContentsBuilder(
        int index) {
      return getContextualContentsFieldBuilder()
          .addBuilder(index, com.google.maps.places.v1.ContextualContent.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Experimental: See
     * https://developers.google.com/maps/documentation/places/web-service/experimental/places-generative
     * for more details.
     *
     * A list of contextual contents where each entry associates to the
     * corresponding place in the same index in the places field. The contents
     * that are relevant to the `text_query` in the request are preferred. If the
     * contextual content is not available for one of the places, it will return
     * non-contextual content. It will be empty only when the content is
     * unavailable for this place. This list will have as many entries as the
     * list of places if requested.
     * </pre>
     *
     * <code>repeated .google.maps.places.v1.ContextualContent contextual_contents = 3;</code>
     */
    public java.util.List<com.google.maps.places.v1.ContextualContent.Builder>
        getContextualContentsBuilderList() {
      return getContextualContentsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.places.v1.ContextualContent,
            com.google.maps.places.v1.ContextualContent.Builder,
            com.google.maps.places.v1.ContextualContentOrBuilder>
        getContextualContentsFieldBuilder() {
      if (contextualContentsBuilder_ == null) {
        contextualContentsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.places.v1.ContextualContent,
                com.google.maps.places.v1.ContextualContent.Builder,
                com.google.maps.places.v1.ContextualContentOrBuilder>(
                contextualContents_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        contextualContents_ = null;
      }
      return contextualContentsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.maps.places.v1.SearchTextResponse)
  }

  // @@protoc_insertion_point(class_scope:google.maps.places.v1.SearchTextResponse)
  private static final com.google.maps.places.v1.SearchTextResponse DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.places.v1.SearchTextResponse();
  }

  public static com.google.maps.places.v1.SearchTextResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SearchTextResponse> PARSER =
      new com.google.protobuf.AbstractParser<SearchTextResponse>() {
        @java.lang.Override
        public SearchTextResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<SearchTextResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SearchTextResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.places.v1.SearchTextResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
