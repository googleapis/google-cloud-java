/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/places/v1/places_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.places.v1;

/**
 *
 *
 * <pre>
 * Request for fetching a photo of a place using a photo resource name.
 * </pre>
 *
 * Protobuf type {@code google.maps.places.v1.GetPhotoMediaRequest}
 */
public final class GetPhotoMediaRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.maps.places.v1.GetPhotoMediaRequest)
    GetPhotoMediaRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GetPhotoMediaRequest.newBuilder() to construct.
  private GetPhotoMediaRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GetPhotoMediaRequest() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GetPhotoMediaRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_GetPhotoMediaRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.places.v1.PlacesServiceProto
        .internal_static_google_maps_places_v1_GetPhotoMediaRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.places.v1.GetPhotoMediaRequest.class,
            com.google.maps.places.v1.GetPhotoMediaRequest.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Required. The resource name of a photo media in the format:
   * `places/{place_id}/photos/{photo_reference}/media`.
   *
   * The resource name of a photo as returned in a Place object's `photos.name`
   * field comes with the format
   * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
   * at the end of the photo resource to get the photo media resource name.
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The resource name of a photo media in the format:
   * `places/{place_id}/photos/{photo_reference}/media`.
   *
   * The resource name of a photo as returned in a Place object's `photos.name`
   * field comes with the format
   * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
   * at the end of the photo resource to get the photo media resource name.
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_WIDTH_PX_FIELD_NUMBER = 2;
  private int maxWidthPx_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. Specifies the maximum desired width, in pixels, of the image. If
   * the image is smaller than the values specified, the original image will be
   * returned. If the image is larger in either dimension, it will be scaled to
   * match the smaller of the two dimensions, restricted to its original aspect
   * ratio. Both the max_height_px and max_width_px properties accept an integer
   * between 1 and 4800, inclusively. If the value is not within the allowed
   * range, an INVALID_ARGUMENT error will be returned.
   *
   * At least one of max_height_px or max_width_px needs to be specified. If
   * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
   * error will be returned.
   * </pre>
   *
   * <code>int32 max_width_px = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxWidthPx.
   */
  @java.lang.Override
  public int getMaxWidthPx() {
    return maxWidthPx_;
  }

  public static final int MAX_HEIGHT_PX_FIELD_NUMBER = 3;
  private int maxHeightPx_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. Specifies the maximum desired height, in pixels, of the image. If
   * the image is smaller than the values specified, the original image will be
   * returned. If the image is larger in either dimension, it will be scaled to
   * match the smaller of the two dimensions, restricted to its original aspect
   * ratio. Both the max_height_px and max_width_px properties accept an integer
   * between 1 and 4800, inclusively. If the value is not within the allowed
   * range, an INVALID_ARGUMENT error will be returned.
   *
   * At least one of max_height_px or max_width_px needs to be specified. If
   * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
   * error will be returned.
   * </pre>
   *
   * <code>int32 max_height_px = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxHeightPx.
   */
  @java.lang.Override
  public int getMaxHeightPx() {
    return maxHeightPx_;
  }

  public static final int SKIP_HTTP_REDIRECT_FIELD_NUMBER = 4;
  private boolean skipHttpRedirect_ = false;
  /**
   *
   *
   * <pre>
   * Optional. If set, skip the default HTTP redirect behavior and render a text
   * format (for example, in JSON format for HTTP use case) response. If not
   * set, an HTTP redirect will be issued to redirect the call to the image
   * media. This option is ignored for non-HTTP requests.
   * </pre>
   *
   * <code>bool skip_http_redirect = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The skipHttpRedirect.
   */
  @java.lang.Override
  public boolean getSkipHttpRedirect() {
    return skipHttpRedirect_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (maxWidthPx_ != 0) {
      output.writeInt32(2, maxWidthPx_);
    }
    if (maxHeightPx_ != 0) {
      output.writeInt32(3, maxHeightPx_);
    }
    if (skipHttpRedirect_ != false) {
      output.writeBool(4, skipHttpRedirect_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (maxWidthPx_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, maxWidthPx_);
    }
    if (maxHeightPx_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, maxHeightPx_);
    }
    if (skipHttpRedirect_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, skipHttpRedirect_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.places.v1.GetPhotoMediaRequest)) {
      return super.equals(obj);
    }
    com.google.maps.places.v1.GetPhotoMediaRequest other =
        (com.google.maps.places.v1.GetPhotoMediaRequest) obj;

    if (!getName().equals(other.getName())) return false;
    if (getMaxWidthPx() != other.getMaxWidthPx()) return false;
    if (getMaxHeightPx() != other.getMaxHeightPx()) return false;
    if (getSkipHttpRedirect() != other.getSkipHttpRedirect()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + MAX_WIDTH_PX_FIELD_NUMBER;
    hash = (53 * hash) + getMaxWidthPx();
    hash = (37 * hash) + MAX_HEIGHT_PX_FIELD_NUMBER;
    hash = (53 * hash) + getMaxHeightPx();
    hash = (37 * hash) + SKIP_HTTP_REDIRECT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getSkipHttpRedirect());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.places.v1.GetPhotoMediaRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Request for fetching a photo of a place using a photo resource name.
   * </pre>
   *
   * Protobuf type {@code google.maps.places.v1.GetPhotoMediaRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.maps.places.v1.GetPhotoMediaRequest)
      com.google.maps.places.v1.GetPhotoMediaRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_GetPhotoMediaRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_GetPhotoMediaRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.places.v1.GetPhotoMediaRequest.class,
              com.google.maps.places.v1.GetPhotoMediaRequest.Builder.class);
    }

    // Construct using com.google.maps.places.v1.GetPhotoMediaRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      maxWidthPx_ = 0;
      maxHeightPx_ = 0;
      skipHttpRedirect_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.places.v1.PlacesServiceProto
          .internal_static_google_maps_places_v1_GetPhotoMediaRequest_descriptor;
    }

    @java.lang.Override
    public com.google.maps.places.v1.GetPhotoMediaRequest getDefaultInstanceForType() {
      return com.google.maps.places.v1.GetPhotoMediaRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.places.v1.GetPhotoMediaRequest build() {
      com.google.maps.places.v1.GetPhotoMediaRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.places.v1.GetPhotoMediaRequest buildPartial() {
      com.google.maps.places.v1.GetPhotoMediaRequest result =
          new com.google.maps.places.v1.GetPhotoMediaRequest(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.maps.places.v1.GetPhotoMediaRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxWidthPx_ = maxWidthPx_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.maxHeightPx_ = maxHeightPx_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.skipHttpRedirect_ = skipHttpRedirect_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.places.v1.GetPhotoMediaRequest) {
        return mergeFrom((com.google.maps.places.v1.GetPhotoMediaRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.places.v1.GetPhotoMediaRequest other) {
      if (other == com.google.maps.places.v1.GetPhotoMediaRequest.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getMaxWidthPx() != 0) {
        setMaxWidthPx(other.getMaxWidthPx());
      }
      if (other.getMaxHeightPx() != 0) {
        setMaxHeightPx(other.getMaxHeightPx());
      }
      if (other.getSkipHttpRedirect() != false) {
        setSkipHttpRedirect(other.getSkipHttpRedirect());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                maxWidthPx_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 24:
              {
                maxHeightPx_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 32:
              {
                skipHttpRedirect_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Required. The resource name of a photo media in the format:
     * `places/{place_id}/photos/{photo_reference}/media`.
     *
     * The resource name of a photo as returned in a Place object's `photos.name`
     * field comes with the format
     * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
     * at the end of the photo resource to get the photo media resource name.
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of a photo media in the format:
     * `places/{place_id}/photos/{photo_reference}/media`.
     *
     * The resource name of a photo as returned in a Place object's `photos.name`
     * field comes with the format
     * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
     * at the end of the photo resource to get the photo media resource name.
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of a photo media in the format:
     * `places/{place_id}/photos/{photo_reference}/media`.
     *
     * The resource name of a photo as returned in a Place object's `photos.name`
     * field comes with the format
     * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
     * at the end of the photo resource to get the photo media resource name.
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of a photo media in the format:
     * `places/{place_id}/photos/{photo_reference}/media`.
     *
     * The resource name of a photo as returned in a Place object's `photos.name`
     * field comes with the format
     * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
     * at the end of the photo resource to get the photo media resource name.
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of a photo media in the format:
     * `places/{place_id}/photos/{photo_reference}/media`.
     *
     * The resource name of a photo as returned in a Place object's `photos.name`
     * field comes with the format
     * `places/{place_id}/photos/{photo_reference}`. You need to append `/media`
     * at the end of the photo resource to get the photo media resource name.
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int maxWidthPx_;
    /**
     *
     *
     * <pre>
     * Optional. Specifies the maximum desired width, in pixels, of the image. If
     * the image is smaller than the values specified, the original image will be
     * returned. If the image is larger in either dimension, it will be scaled to
     * match the smaller of the two dimensions, restricted to its original aspect
     * ratio. Both the max_height_px and max_width_px properties accept an integer
     * between 1 and 4800, inclusively. If the value is not within the allowed
     * range, an INVALID_ARGUMENT error will be returned.
     *
     * At least one of max_height_px or max_width_px needs to be specified. If
     * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
     * error will be returned.
     * </pre>
     *
     * <code>int32 max_width_px = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The maxWidthPx.
     */
    @java.lang.Override
    public int getMaxWidthPx() {
      return maxWidthPx_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the maximum desired width, in pixels, of the image. If
     * the image is smaller than the values specified, the original image will be
     * returned. If the image is larger in either dimension, it will be scaled to
     * match the smaller of the two dimensions, restricted to its original aspect
     * ratio. Both the max_height_px and max_width_px properties accept an integer
     * between 1 and 4800, inclusively. If the value is not within the allowed
     * range, an INVALID_ARGUMENT error will be returned.
     *
     * At least one of max_height_px or max_width_px needs to be specified. If
     * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
     * error will be returned.
     * </pre>
     *
     * <code>int32 max_width_px = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The maxWidthPx to set.
     * @return This builder for chaining.
     */
    public Builder setMaxWidthPx(int value) {

      maxWidthPx_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the maximum desired width, in pixels, of the image. If
     * the image is smaller than the values specified, the original image will be
     * returned. If the image is larger in either dimension, it will be scaled to
     * match the smaller of the two dimensions, restricted to its original aspect
     * ratio. Both the max_height_px and max_width_px properties accept an integer
     * between 1 and 4800, inclusively. If the value is not within the allowed
     * range, an INVALID_ARGUMENT error will be returned.
     *
     * At least one of max_height_px or max_width_px needs to be specified. If
     * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
     * error will be returned.
     * </pre>
     *
     * <code>int32 max_width_px = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxWidthPx() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxWidthPx_ = 0;
      onChanged();
      return this;
    }

    private int maxHeightPx_;
    /**
     *
     *
     * <pre>
     * Optional. Specifies the maximum desired height, in pixels, of the image. If
     * the image is smaller than the values specified, the original image will be
     * returned. If the image is larger in either dimension, it will be scaled to
     * match the smaller of the two dimensions, restricted to its original aspect
     * ratio. Both the max_height_px and max_width_px properties accept an integer
     * between 1 and 4800, inclusively. If the value is not within the allowed
     * range, an INVALID_ARGUMENT error will be returned.
     *
     * At least one of max_height_px or max_width_px needs to be specified. If
     * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
     * error will be returned.
     * </pre>
     *
     * <code>int32 max_height_px = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The maxHeightPx.
     */
    @java.lang.Override
    public int getMaxHeightPx() {
      return maxHeightPx_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the maximum desired height, in pixels, of the image. If
     * the image is smaller than the values specified, the original image will be
     * returned. If the image is larger in either dimension, it will be scaled to
     * match the smaller of the two dimensions, restricted to its original aspect
     * ratio. Both the max_height_px and max_width_px properties accept an integer
     * between 1 and 4800, inclusively. If the value is not within the allowed
     * range, an INVALID_ARGUMENT error will be returned.
     *
     * At least one of max_height_px or max_width_px needs to be specified. If
     * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
     * error will be returned.
     * </pre>
     *
     * <code>int32 max_height_px = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The maxHeightPx to set.
     * @return This builder for chaining.
     */
    public Builder setMaxHeightPx(int value) {

      maxHeightPx_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the maximum desired height, in pixels, of the image. If
     * the image is smaller than the values specified, the original image will be
     * returned. If the image is larger in either dimension, it will be scaled to
     * match the smaller of the two dimensions, restricted to its original aspect
     * ratio. Both the max_height_px and max_width_px properties accept an integer
     * between 1 and 4800, inclusively. If the value is not within the allowed
     * range, an INVALID_ARGUMENT error will be returned.
     *
     * At least one of max_height_px or max_width_px needs to be specified. If
     * neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT
     * error will be returned.
     * </pre>
     *
     * <code>int32 max_height_px = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxHeightPx() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxHeightPx_ = 0;
      onChanged();
      return this;
    }

    private boolean skipHttpRedirect_;
    /**
     *
     *
     * <pre>
     * Optional. If set, skip the default HTTP redirect behavior and render a text
     * format (for example, in JSON format for HTTP use case) response. If not
     * set, an HTTP redirect will be issued to redirect the call to the image
     * media. This option is ignored for non-HTTP requests.
     * </pre>
     *
     * <code>bool skip_http_redirect = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The skipHttpRedirect.
     */
    @java.lang.Override
    public boolean getSkipHttpRedirect() {
      return skipHttpRedirect_;
    }
    /**
     *
     *
     * <pre>
     * Optional. If set, skip the default HTTP redirect behavior and render a text
     * format (for example, in JSON format for HTTP use case) response. If not
     * set, an HTTP redirect will be issued to redirect the call to the image
     * media. This option is ignored for non-HTTP requests.
     * </pre>
     *
     * <code>bool skip_http_redirect = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The skipHttpRedirect to set.
     * @return This builder for chaining.
     */
    public Builder setSkipHttpRedirect(boolean value) {

      skipHttpRedirect_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. If set, skip the default HTTP redirect behavior and render a text
     * format (for example, in JSON format for HTTP use case) response. If not
     * set, an HTTP redirect will be issued to redirect the call to the image
     * media. This option is ignored for non-HTTP requests.
     * </pre>
     *
     * <code>bool skip_http_redirect = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSkipHttpRedirect() {
      bitField0_ = (bitField0_ & ~0x00000008);
      skipHttpRedirect_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.maps.places.v1.GetPhotoMediaRequest)
  }

  // @@protoc_insertion_point(class_scope:google.maps.places.v1.GetPhotoMediaRequest)
  private static final com.google.maps.places.v1.GetPhotoMediaRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.places.v1.GetPhotoMediaRequest();
  }

  public static com.google.maps.places.v1.GetPhotoMediaRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetPhotoMediaRequest> PARSER =
      new com.google.protobuf.AbstractParser<GetPhotoMediaRequest>() {
        @java.lang.Override
        public GetPhotoMediaRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GetPhotoMediaRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetPhotoMediaRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.places.v1.GetPhotoMediaRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
