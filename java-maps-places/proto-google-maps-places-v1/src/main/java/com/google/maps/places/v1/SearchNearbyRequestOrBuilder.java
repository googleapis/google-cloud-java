/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/places/v1/places_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.places.v1;

public interface SearchNearbyRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.places.v1.SearchNearbyRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Place details will be displayed with the preferred language if available.
   * If the language code is unspecified or unrecognized, place details of any
   * language may be returned, with a preference for English if such details
   * exist.
   *
   * Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * </pre>
   *
   * <code>string language_code = 1;</code>
   *
   * @return The languageCode.
   */
  java.lang.String getLanguageCode();
  /**
   *
   *
   * <pre>
   * Place details will be displayed with the preferred language if available.
   * If the language code is unspecified or unrecognized, place details of any
   * language may be returned, with a preference for English if such details
   * exist.
   *
   * Current list of supported languages:
   * https://developers.google.com/maps/faq#languagesupport.
   * </pre>
   *
   * <code>string language_code = 1;</code>
   *
   * @return The bytes for languageCode.
   */
  com.google.protobuf.ByteString getLanguageCodeBytes();

  /**
   *
   *
   * <pre>
   * The Unicode country/region code (CLDR) of the location where the
   * request is coming from. This parameter is used to display the place
   * details, like region-specific place name, if available. The parameter can
   * affect results based on applicable law.
   *
   * For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   *
   *
   * Note that 3-digit region codes are not currently supported.
   * </pre>
   *
   * <code>string region_code = 2;</code>
   *
   * @return The regionCode.
   */
  java.lang.String getRegionCode();
  /**
   *
   *
   * <pre>
   * The Unicode country/region code (CLDR) of the location where the
   * request is coming from. This parameter is used to display the place
   * details, like region-specific place name, if available. The parameter can
   * affect results based on applicable law.
   *
   * For more information, see
   * https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html.
   *
   *
   * Note that 3-digit region codes are not currently supported.
   * </pre>
   *
   * <code>string region_code = 2;</code>
   *
   * @return The bytes for regionCode.
   */
  com.google.protobuf.ByteString getRegionCodeBytes();

  /**
   *
   *
   * <pre>
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is
   * returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_types = 3;</code>
   *
   * @return A list containing the includedTypes.
   */
  java.util.List<java.lang.String> getIncludedTypesList();
  /**
   *
   *
   * <pre>
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is
   * returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_types = 3;</code>
   *
   * @return The count of includedTypes.
   */
  int getIncludedTypesCount();
  /**
   *
   *
   * <pre>
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is
   * returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_types = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The includedTypes at the given index.
   */
  java.lang.String getIncludedTypes(int index);
  /**
   *
   *
   * <pre>
   * Included Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is
   * returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_types = 3;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the includedTypes at the given index.
   */
  com.google.protobuf.ByteString getIncludedTypesBytes(int index);

  /**
   *
   *
   * <pre>
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If the client provides both included_types (e.g. restaurant) and
   * excluded_types (e.g. cafe), then the response should include places that
   * are restaurant but not cafe. The response includes places that match at
   * least one of the included_types and none of the excluded_types.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_types = 4;</code>
   *
   * @return A list containing the excludedTypes.
   */
  java.util.List<java.lang.String> getExcludedTypesList();
  /**
   *
   *
   * <pre>
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If the client provides both included_types (e.g. restaurant) and
   * excluded_types (e.g. cafe), then the response should include places that
   * are restaurant but not cafe. The response includes places that match at
   * least one of the included_types and none of the excluded_types.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_types = 4;</code>
   *
   * @return The count of excludedTypes.
   */
  int getExcludedTypesCount();
  /**
   *
   *
   * <pre>
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If the client provides both included_types (e.g. restaurant) and
   * excluded_types (e.g. cafe), then the response should include places that
   * are restaurant but not cafe. The response includes places that match at
   * least one of the included_types and none of the excluded_types.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_types = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The excludedTypes at the given index.
   */
  java.lang.String getExcludedTypes(int index);
  /**
   *
   *
   * <pre>
   * Excluded Place type (eg, "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If the client provides both included_types (e.g. restaurant) and
   * excluded_types (e.g. cafe), then the response should include places that
   * are restaurant but not cafe. The response includes places that match at
   * least one of the included_types and none of the excluded_types.
   *
   * If there are any conflicting types, i.e. a type appears in both
   * included_types and excluded_types, an INVALID_ARGUMENT error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_types = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the excludedTypes at the given index.
   */
  com.google.protobuf.ByteString getExcludedTypesBytes(int index);

  /**
   *
   *
   * <pre>
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   * A place can only have a single primary type from the supported types table
   * associated with it.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_primary_types = 5;</code>
   *
   * @return A list containing the includedPrimaryTypes.
   */
  java.util.List<java.lang.String> getIncludedPrimaryTypesList();
  /**
   *
   *
   * <pre>
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   * A place can only have a single primary type from the supported types table
   * associated with it.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_primary_types = 5;</code>
   *
   * @return The count of includedPrimaryTypes.
   */
  int getIncludedPrimaryTypesCount();
  /**
   *
   *
   * <pre>
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   * A place can only have a single primary type from the supported types table
   * associated with it.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_primary_types = 5;</code>
   *
   * @param index The index of the element to return.
   * @return The includedPrimaryTypes at the given index.
   */
  java.lang.String getIncludedPrimaryTypes(int index);
  /**
   *
   *
   * <pre>
   * Included primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   * A place can only have a single primary type from the supported types table
   * associated with it.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string included_primary_types = 5;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the includedPrimaryTypes at the given index.
   */
  com.google.protobuf.ByteString getIncludedPrimaryTypesBytes(int index);

  /**
   *
   *
   * <pre>
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_primary_types = 6;</code>
   *
   * @return A list containing the excludedPrimaryTypes.
   */
  java.util.List<java.lang.String> getExcludedPrimaryTypesList();
  /**
   *
   *
   * <pre>
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_primary_types = 6;</code>
   *
   * @return The count of excludedPrimaryTypes.
   */
  int getExcludedPrimaryTypesCount();
  /**
   *
   *
   * <pre>
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_primary_types = 6;</code>
   *
   * @param index The index of the element to return.
   * @return The excludedPrimaryTypes at the given index.
   */
  java.lang.String getExcludedPrimaryTypes(int index);
  /**
   *
   *
   * <pre>
   * Excluded primary Place type (e.g. "restaurant" or "gas_station") from
   * https://developers.google.com/maps/documentation/places/web-service/place-types.
   *
   * Up to 50 types from [Table
   * A](https://developers.google.com/maps/documentation/places/web-service/place-types#table-a)
   * may be specified.
   *
   * If there are any conflicting primary types, i.e. a type appears in both
   * included_primary_types and excluded_primary_types, an INVALID_ARGUMENT
   * error is returned.
   *
   * If a Place type is specified with multiple type restrictions, only places
   * that satisfy all of the restrictions are returned. For example, if we
   * have {included_types = ["restaurant"], excluded_primary_types =
   * ["restaurant"]}, the returned places provide "restaurant"
   * related services but do not operate primarily as "restaurants".
   * </pre>
   *
   * <code>repeated string excluded_primary_types = 6;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the excludedPrimaryTypes at the given index.
   */
  com.google.protobuf.ByteString getExcludedPrimaryTypesBytes(int index);

  /**
   *
   *
   * <pre>
   * Maximum number of results to return. It must be between 1 and 20 (default),
   * inclusively. If the number is unset, it falls back to the upper limit. If
   * the number is set to negative or exceeds the upper limit, an
   * INVALID_ARGUMENT error is returned.
   * </pre>
   *
   * <code>int32 max_result_count = 7;</code>
   *
   * @return The maxResultCount.
   */
  int getMaxResultCount();

  /**
   *
   *
   * <pre>
   * Required. The region to search.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.SearchNearbyRequest.LocationRestriction location_restriction = 8 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the locationRestriction field is set.
   */
  boolean hasLocationRestriction();
  /**
   *
   *
   * <pre>
   * Required. The region to search.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.SearchNearbyRequest.LocationRestriction location_restriction = 8 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The locationRestriction.
   */
  com.google.maps.places.v1.SearchNearbyRequest.LocationRestriction getLocationRestriction();
  /**
   *
   *
   * <pre>
   * Required. The region to search.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.SearchNearbyRequest.LocationRestriction location_restriction = 8 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.maps.places.v1.SearchNearbyRequest.LocationRestrictionOrBuilder
      getLocationRestrictionOrBuilder();

  /**
   *
   *
   * <pre>
   * How results will be ranked in the response.
   * </pre>
   *
   * <code>.google.maps.places.v1.SearchNearbyRequest.RankPreference rank_preference = 9;</code>
   *
   * @return The enum numeric value on the wire for rankPreference.
   */
  int getRankPreferenceValue();
  /**
   *
   *
   * <pre>
   * How results will be ranked in the response.
   * </pre>
   *
   * <code>.google.maps.places.v1.SearchNearbyRequest.RankPreference rank_preference = 9;</code>
   *
   * @return The rankPreference.
   */
  com.google.maps.places.v1.SearchNearbyRequest.RankPreference getRankPreference();

  /**
   *
   *
   * <pre>
   * Optional. Parameters that affect the routing to the search results.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.RoutingParameters routing_parameters = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the routingParameters field is set.
   */
  boolean hasRoutingParameters();
  /**
   *
   *
   * <pre>
   * Optional. Parameters that affect the routing to the search results.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.RoutingParameters routing_parameters = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The routingParameters.
   */
  com.google.maps.places.v1.RoutingParameters getRoutingParameters();
  /**
   *
   *
   * <pre>
   * Optional. Parameters that affect the routing to the search results.
   * </pre>
   *
   * <code>
   * .google.maps.places.v1.RoutingParameters routing_parameters = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.maps.places.v1.RoutingParametersOrBuilder getRoutingParametersOrBuilder();
}
