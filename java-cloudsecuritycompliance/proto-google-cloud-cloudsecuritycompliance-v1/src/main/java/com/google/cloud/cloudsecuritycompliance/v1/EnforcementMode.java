/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/cloudsecuritycompliance/v1/common.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.cloudsecuritycompliance.v1;

/**
 *
 *
 * <pre>
 * The enforcement mode of the cloud control.
 * </pre>
 *
 * Protobuf enum {@code google.cloud.cloudsecuritycompliance.v1.EnforcementMode}
 */
public enum EnforcementMode implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * Default value. This value is unused.
   * </pre>
   *
   * <code>ENFORCEMENT_MODE_UNSPECIFIED = 0;</code>
   */
  ENFORCEMENT_MODE_UNSPECIFIED(0),
  /**
   *
   *
   * <pre>
   * The cloud control is enforced to prevent resource non-compliance.
   * </pre>
   *
   * <code>PREVENTIVE = 1;</code>
   */
  PREVENTIVE(1),
  /**
   *
   *
   * <pre>
   * The cloud control is enforced to detect resource non-compliance.
   * </pre>
   *
   * <code>DETECTIVE = 2;</code>
   */
  DETECTIVE(2),
  /**
   *
   *
   * <pre>
   * The cloud control is enforced to audit resource non-compliance.
   * </pre>
   *
   * <code>AUDIT = 3;</code>
   */
  AUDIT(3),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * Default value. This value is unused.
   * </pre>
   *
   * <code>ENFORCEMENT_MODE_UNSPECIFIED = 0;</code>
   */
  public static final int ENFORCEMENT_MODE_UNSPECIFIED_VALUE = 0;

  /**
   *
   *
   * <pre>
   * The cloud control is enforced to prevent resource non-compliance.
   * </pre>
   *
   * <code>PREVENTIVE = 1;</code>
   */
  public static final int PREVENTIVE_VALUE = 1;

  /**
   *
   *
   * <pre>
   * The cloud control is enforced to detect resource non-compliance.
   * </pre>
   *
   * <code>DETECTIVE = 2;</code>
   */
  public static final int DETECTIVE_VALUE = 2;

  /**
   *
   *
   * <pre>
   * The cloud control is enforced to audit resource non-compliance.
   * </pre>
   *
   * <code>AUDIT = 3;</code>
   */
  public static final int AUDIT_VALUE = 3;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EnforcementMode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EnforcementMode forNumber(int value) {
    switch (value) {
      case 0:
        return ENFORCEMENT_MODE_UNSPECIFIED;
      case 1:
        return PREVENTIVE;
      case 2:
        return DETECTIVE;
      case 3:
        return AUDIT;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EnforcementMode> internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<EnforcementMode> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<EnforcementMode>() {
        public EnforcementMode findValueByNumber(int number) {
          return EnforcementMode.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.cloud.cloudsecuritycompliance.v1.CommonProto.getDescriptor()
        .getEnumTypes()
        .get(1);
  }

  private static final EnforcementMode[] VALUES = values();

  public static EnforcementMode valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EnforcementMode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.cloudsecuritycompliance.v1.EnforcementMode)
}
