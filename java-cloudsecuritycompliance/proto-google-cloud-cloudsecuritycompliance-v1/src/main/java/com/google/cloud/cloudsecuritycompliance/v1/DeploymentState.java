/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/cloudsecuritycompliance/v1/deployment.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.cloudsecuritycompliance.v1;

/**
 *
 *
 * <pre>
 * The state of the deployment resource.
 * </pre>
 *
 * Protobuf enum {@code google.cloud.cloudsecuritycompliance.v1.DeploymentState}
 */
public enum DeploymentState implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * Default value. This value is unused.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_UNSPECIFIED = 0;</code>
   */
  DEPLOYMENT_STATE_UNSPECIFIED(0),
  /**
   *
   *
   * <pre>
   * Validating the deployment.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_VALIDATING = 1;</code>
   */
  DEPLOYMENT_STATE_VALIDATING(1),
  /**
   *
   *
   * <pre>
   * Deployment is being created.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_CREATING = 2;</code>
   */
  DEPLOYMENT_STATE_CREATING(2),
  /**
   *
   *
   * <pre>
   * Deployment is being deleted.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_DELETING = 3;</code>
   */
  DEPLOYMENT_STATE_DELETING(3),
  /**
   *
   *
   * <pre>
   * Deployment has failed. All the changes made by the deployment were
   * successfully rolled back. You can retry or delete a deployment that's
   * in this state.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_FAILED = 4;</code>
   */
  DEPLOYMENT_STATE_FAILED(4),
  /**
   *
   *
   * <pre>
   * Deployment is successful and ready to use.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_READY = 5;</code>
   */
  DEPLOYMENT_STATE_READY(5),
  /**
   *
   *
   * <pre>
   * Deployment is partially deployed. All the cloud controls weren't deployed
   * successfully. Retrying the operation resumes from the first failed
   * step.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_PARTIALLY_DEPLOYED = 6;</code>
   */
  DEPLOYMENT_STATE_PARTIALLY_DEPLOYED(6),
  /**
   *
   *
   * <pre>
   * Deployment is partially deleted. All the cloud control deployments weren't
   * deleted successfully. Retrying the operation resumes from the first
   * failed step.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_PARTIALLY_DELETED = 7;</code>
   */
  DEPLOYMENT_STATE_PARTIALLY_DELETED(7),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * Default value. This value is unused.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_UNSPECIFIED = 0;</code>
   */
  public static final int DEPLOYMENT_STATE_UNSPECIFIED_VALUE = 0;

  /**
   *
   *
   * <pre>
   * Validating the deployment.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_VALIDATING = 1;</code>
   */
  public static final int DEPLOYMENT_STATE_VALIDATING_VALUE = 1;

  /**
   *
   *
   * <pre>
   * Deployment is being created.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_CREATING = 2;</code>
   */
  public static final int DEPLOYMENT_STATE_CREATING_VALUE = 2;

  /**
   *
   *
   * <pre>
   * Deployment is being deleted.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_DELETING = 3;</code>
   */
  public static final int DEPLOYMENT_STATE_DELETING_VALUE = 3;

  /**
   *
   *
   * <pre>
   * Deployment has failed. All the changes made by the deployment were
   * successfully rolled back. You can retry or delete a deployment that's
   * in this state.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_FAILED = 4;</code>
   */
  public static final int DEPLOYMENT_STATE_FAILED_VALUE = 4;

  /**
   *
   *
   * <pre>
   * Deployment is successful and ready to use.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_READY = 5;</code>
   */
  public static final int DEPLOYMENT_STATE_READY_VALUE = 5;

  /**
   *
   *
   * <pre>
   * Deployment is partially deployed. All the cloud controls weren't deployed
   * successfully. Retrying the operation resumes from the first failed
   * step.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_PARTIALLY_DEPLOYED = 6;</code>
   */
  public static final int DEPLOYMENT_STATE_PARTIALLY_DEPLOYED_VALUE = 6;

  /**
   *
   *
   * <pre>
   * Deployment is partially deleted. All the cloud control deployments weren't
   * deleted successfully. Retrying the operation resumes from the first
   * failed step.
   * </pre>
   *
   * <code>DEPLOYMENT_STATE_PARTIALLY_DELETED = 7;</code>
   */
  public static final int DEPLOYMENT_STATE_PARTIALLY_DELETED_VALUE = 7;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DeploymentState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DeploymentState forNumber(int value) {
    switch (value) {
      case 0:
        return DEPLOYMENT_STATE_UNSPECIFIED;
      case 1:
        return DEPLOYMENT_STATE_VALIDATING;
      case 2:
        return DEPLOYMENT_STATE_CREATING;
      case 3:
        return DEPLOYMENT_STATE_DELETING;
      case 4:
        return DEPLOYMENT_STATE_FAILED;
      case 5:
        return DEPLOYMENT_STATE_READY;
      case 6:
        return DEPLOYMENT_STATE_PARTIALLY_DEPLOYED;
      case 7:
        return DEPLOYMENT_STATE_PARTIALLY_DELETED;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DeploymentState> internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<DeploymentState> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<DeploymentState>() {
        public DeploymentState findValueByNumber(int number) {
          return DeploymentState.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.cloud.cloudsecuritycompliance.v1.DeploymentProto.getDescriptor()
        .getEnumTypes()
        .get(0);
  }

  private static final DeploymentState[] VALUES = values();

  public static DeploymentState valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DeploymentState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.cloudsecuritycompliance.v1.DeploymentState)
}
