/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/cloudsecuritycompliance/v1/deployment.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.cloudsecuritycompliance.v1;

/**
 *
 *
 * <pre>
 * CloudControlGroupDeployment contains the cloud control group and the cloud
 * control deployments in the group.
 * </pre>
 *
 * Protobuf type {@code google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment}
 */
public final class CloudControlGroupDeployment extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment)
    CloudControlGroupDeploymentOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use CloudControlGroupDeployment.newBuilder() to construct.
  private CloudControlGroupDeployment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private CloudControlGroupDeployment() {
    ccDeployments_ = java.util.Collections.emptyList();
    ccDeploymentReferences_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new CloudControlGroupDeployment();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.cloudsecuritycompliance.v1.DeploymentProto
        .internal_static_google_cloud_cloudsecuritycompliance_v1_CloudControlGroupDeployment_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.cloudsecuritycompliance.v1.DeploymentProto
        .internal_static_google_cloud_cloudsecuritycompliance_v1_CloudControlGroupDeployment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment.class,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment.Builder.class);
  }

  private int bitField0_;
  public static final int CLOUD_CONTROL_GROUP_FIELD_NUMBER = 1;
  private com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloudControlGroup_;

  /**
   *
   *
   * <pre>
   * Required. Cloud control group
   * </pre>
   *
   * <code>
   * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the cloudControlGroup field is set.
   */
  @java.lang.Override
  public boolean hasCloudControlGroup() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Required. Cloud control group
   * </pre>
   *
   * <code>
   * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The cloudControlGroup.
   */
  @java.lang.Override
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup getCloudControlGroup() {
    return cloudControlGroup_ == null
        ? com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.getDefaultInstance()
        : cloudControlGroup_;
  }

  /**
   *
   *
   * <pre>
   * Required. Cloud control group
   * </pre>
   *
   * <code>
   * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupOrBuilder
      getCloudControlGroupOrBuilder() {
    return cloudControlGroup_ == null
        ? com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.getDefaultInstance()
        : cloudControlGroup_;
  }

  public static final int CC_DEPLOYMENTS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment>
      ccDeployments_;

  /**
   *
   *
   * <pre>
   * Required. Cloud control deployments in the group
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.List<com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment>
      getCcDeploymentsList() {
    return ccDeployments_;
  }

  /**
   *
   *
   * <pre>
   * Required. Cloud control deployments in the group
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.List<
          ? extends com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder>
      getCcDeploymentsOrBuilderList() {
    return ccDeployments_;
  }

  /**
   *
   *
   * <pre>
   * Required. Cloud control deployments in the group
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  @java.lang.Deprecated
  public int getCcDeploymentsCount() {
    return ccDeployments_.size();
  }

  /**
   *
   *
   * <pre>
   * Required. Cloud control deployments in the group
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment getCcDeployments(
      int index) {
    return ccDeployments_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Required. Cloud control deployments in the group
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder
      getCcDeploymentsOrBuilder(int index) {
    return ccDeployments_.get(index);
  }

  public static final int CC_DEPLOYMENT_REFERENCES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<
          com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference>
      ccDeploymentReferences_;

  /**
   *
   *
   * <pre>
   * Output only. The references to the cloud control deployments in the cloud
   * control group. For example, if a cloud control group has two cloud
   * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
   * deployments for these cloud controls are `cloud-control-deployment-1` and
   * `cloud-control-deployment-2` respectively, then the
   * references are:
   * ```
   *  cloud_control_deployment_reference: {
   *    cloud_control_deployment:
   *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
   *  },
   *  cloud_control_deployment_reference: {
   *   cloud_control_deployment:
   *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
   *  }
   * ```
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference>
      getCcDeploymentReferencesList() {
    return ccDeploymentReferences_;
  }

  /**
   *
   *
   * <pre>
   * Output only. The references to the cloud control deployments in the cloud
   * control group. For example, if a cloud control group has two cloud
   * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
   * deployments for these cloud controls are `cloud-control-deployment-1` and
   * `cloud-control-deployment-2` respectively, then the
   * references are:
   * ```
   *  cloud_control_deployment_reference: {
   *    cloud_control_deployment:
   *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
   *  },
   *  cloud_control_deployment_reference: {
   *   cloud_control_deployment:
   *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
   *  }
   * ```
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReferenceOrBuilder>
      getCcDeploymentReferencesOrBuilderList() {
    return ccDeploymentReferences_;
  }

  /**
   *
   *
   * <pre>
   * Output only. The references to the cloud control deployments in the cloud
   * control group. For example, if a cloud control group has two cloud
   * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
   * deployments for these cloud controls are `cloud-control-deployment-1` and
   * `cloud-control-deployment-2` respectively, then the
   * references are:
   * ```
   *  cloud_control_deployment_reference: {
   *    cloud_control_deployment:
   *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
   *  },
   *  cloud_control_deployment_reference: {
   *   cloud_control_deployment:
   *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
   *  }
   * ```
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public int getCcDeploymentReferencesCount() {
    return ccDeploymentReferences_.size();
  }

  /**
   *
   *
   * <pre>
   * Output only. The references to the cloud control deployments in the cloud
   * control group. For example, if a cloud control group has two cloud
   * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
   * deployments for these cloud controls are `cloud-control-deployment-1` and
   * `cloud-control-deployment-2` respectively, then the
   * references are:
   * ```
   *  cloud_control_deployment_reference: {
   *    cloud_control_deployment:
   *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
   *  },
   *  cloud_control_deployment_reference: {
   *   cloud_control_deployment:
   *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
   *  }
   * ```
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference
      getCcDeploymentReferences(int index) {
    return ccDeploymentReferences_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Output only. The references to the cloud control deployments in the cloud
   * control group. For example, if a cloud control group has two cloud
   * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
   * deployments for these cloud controls are `cloud-control-deployment-1` and
   * `cloud-control-deployment-2` respectively, then the
   * references are:
   * ```
   *  cloud_control_deployment_reference: {
   *    cloud_control_deployment:
   *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
   *  },
   *  cloud_control_deployment_reference: {
   *   cloud_control_deployment:
   *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
   *  }
   * ```
   * </pre>
   *
   * <code>
   * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReferenceOrBuilder
      getCcDeploymentReferencesOrBuilder(int index) {
    return ccDeploymentReferences_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getCloudControlGroup());
    }
    for (int i = 0; i < ccDeployments_.size(); i++) {
      output.writeMessage(2, ccDeployments_.get(i));
    }
    for (int i = 0; i < ccDeploymentReferences_.size(); i++) {
      output.writeMessage(3, ccDeploymentReferences_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getCloudControlGroup());
    }
    for (int i = 0; i < ccDeployments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, ccDeployments_.get(i));
    }
    for (int i = 0; i < ccDeploymentReferences_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, ccDeploymentReferences_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment)) {
      return super.equals(obj);
    }
    com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment other =
        (com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment) obj;

    if (hasCloudControlGroup() != other.hasCloudControlGroup()) return false;
    if (hasCloudControlGroup()) {
      if (!getCloudControlGroup().equals(other.getCloudControlGroup())) return false;
    }
    if (!getCcDeploymentsList().equals(other.getCcDeploymentsList())) return false;
    if (!getCcDeploymentReferencesList().equals(other.getCcDeploymentReferencesList()))
      return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCloudControlGroup()) {
      hash = (37 * hash) + CLOUD_CONTROL_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getCloudControlGroup().hashCode();
    }
    if (getCcDeploymentsCount() > 0) {
      hash = (37 * hash) + CC_DEPLOYMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getCcDeploymentsList().hashCode();
    }
    if (getCcDeploymentReferencesCount() > 0) {
      hash = (37 * hash) + CC_DEPLOYMENT_REFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + getCcDeploymentReferencesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * CloudControlGroupDeployment contains the cloud control group and the cloud
   * control deployments in the group.
   * </pre>
   *
   * Protobuf type {@code google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment)
      com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeploymentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.cloudsecuritycompliance.v1.DeploymentProto
          .internal_static_google_cloud_cloudsecuritycompliance_v1_CloudControlGroupDeployment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.cloudsecuritycompliance.v1.DeploymentProto
          .internal_static_google_cloud_cloudsecuritycompliance_v1_CloudControlGroupDeployment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment.class,
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment.Builder
                  .class);
    }

    // Construct using
    // com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getCloudControlGroupFieldBuilder();
        getCcDeploymentsFieldBuilder();
        getCcDeploymentReferencesFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      cloudControlGroup_ = null;
      if (cloudControlGroupBuilder_ != null) {
        cloudControlGroupBuilder_.dispose();
        cloudControlGroupBuilder_ = null;
      }
      if (ccDeploymentsBuilder_ == null) {
        ccDeployments_ = java.util.Collections.emptyList();
      } else {
        ccDeployments_ = null;
        ccDeploymentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (ccDeploymentReferencesBuilder_ == null) {
        ccDeploymentReferences_ = java.util.Collections.emptyList();
      } else {
        ccDeploymentReferences_ = null;
        ccDeploymentReferencesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.cloudsecuritycompliance.v1.DeploymentProto
          .internal_static_google_cloud_cloudsecuritycompliance_v1_CloudControlGroupDeployment_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
        getDefaultInstanceForType() {
      return com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment build() {
      com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment result =
          buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment buildPartial() {
      com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment result =
          new com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment result) {
      if (ccDeploymentsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          ccDeployments_ = java.util.Collections.unmodifiableList(ccDeployments_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.ccDeployments_ = ccDeployments_;
      } else {
        result.ccDeployments_ = ccDeploymentsBuilder_.build();
      }
      if (ccDeploymentReferencesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          ccDeploymentReferences_ = java.util.Collections.unmodifiableList(ccDeploymentReferences_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.ccDeploymentReferences_ = ccDeploymentReferences_;
      } else {
        result.ccDeploymentReferences_ = ccDeploymentReferencesBuilder_.build();
      }
    }

    private void buildPartial0(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.cloudControlGroup_ =
            cloudControlGroupBuilder_ == null
                ? cloudControlGroup_
                : cloudControlGroupBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other
          instanceof com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment) {
        return mergeFrom(
            (com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment other) {
      if (other
          == com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
              .getDefaultInstance()) return this;
      if (other.hasCloudControlGroup()) {
        mergeCloudControlGroup(other.getCloudControlGroup());
      }
      if (ccDeploymentsBuilder_ == null) {
        if (!other.ccDeployments_.isEmpty()) {
          if (ccDeployments_.isEmpty()) {
            ccDeployments_ = other.ccDeployments_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCcDeploymentsIsMutable();
            ccDeployments_.addAll(other.ccDeployments_);
          }
          onChanged();
        }
      } else {
        if (!other.ccDeployments_.isEmpty()) {
          if (ccDeploymentsBuilder_.isEmpty()) {
            ccDeploymentsBuilder_.dispose();
            ccDeploymentsBuilder_ = null;
            ccDeployments_ = other.ccDeployments_;
            bitField0_ = (bitField0_ & ~0x00000002);
            ccDeploymentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getCcDeploymentsFieldBuilder()
                    : null;
          } else {
            ccDeploymentsBuilder_.addAllMessages(other.ccDeployments_);
          }
        }
      }
      if (ccDeploymentReferencesBuilder_ == null) {
        if (!other.ccDeploymentReferences_.isEmpty()) {
          if (ccDeploymentReferences_.isEmpty()) {
            ccDeploymentReferences_ = other.ccDeploymentReferences_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCcDeploymentReferencesIsMutable();
            ccDeploymentReferences_.addAll(other.ccDeploymentReferences_);
          }
          onChanged();
        }
      } else {
        if (!other.ccDeploymentReferences_.isEmpty()) {
          if (ccDeploymentReferencesBuilder_.isEmpty()) {
            ccDeploymentReferencesBuilder_.dispose();
            ccDeploymentReferencesBuilder_ = null;
            ccDeploymentReferences_ = other.ccDeploymentReferences_;
            bitField0_ = (bitField0_ & ~0x00000004);
            ccDeploymentReferencesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getCcDeploymentReferencesFieldBuilder()
                    : null;
          } else {
            ccDeploymentReferencesBuilder_.addAllMessages(other.ccDeploymentReferences_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(
                    getCloudControlGroupFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment m =
                    input.readMessage(
                        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.parser(),
                        extensionRegistry);
                if (ccDeploymentsBuilder_ == null) {
                  ensureCcDeploymentsIsMutable();
                  ccDeployments_.add(m);
                } else {
                  ccDeploymentsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            case 26:
              {
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference m =
                    input.readMessage(
                        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference
                            .parser(),
                        extensionRegistry);
                if (ccDeploymentReferencesBuilder_ == null) {
                  ensureCcDeploymentReferencesIsMutable();
                  ccDeploymentReferences_.add(m);
                } else {
                  ccDeploymentReferencesBuilder_.addMessage(m);
                }
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloudControlGroup_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.Builder,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupOrBuilder>
        cloudControlGroupBuilder_;

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the cloudControlGroup field is set.
     */
    public boolean hasCloudControlGroup() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The cloudControlGroup.
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup getCloudControlGroup() {
      if (cloudControlGroupBuilder_ == null) {
        return cloudControlGroup_ == null
            ? com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.getDefaultInstance()
            : cloudControlGroup_;
      } else {
        return cloudControlGroupBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setCloudControlGroup(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup value) {
      if (cloudControlGroupBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cloudControlGroup_ = value;
      } else {
        cloudControlGroupBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setCloudControlGroup(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.Builder builderForValue) {
      if (cloudControlGroupBuilder_ == null) {
        cloudControlGroup_ = builderForValue.build();
      } else {
        cloudControlGroupBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeCloudControlGroup(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup value) {
      if (cloudControlGroupBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && cloudControlGroup_ != null
            && cloudControlGroup_
                != com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup
                    .getDefaultInstance()) {
          getCloudControlGroupBuilder().mergeFrom(value);
        } else {
          cloudControlGroup_ = value;
        }
      } else {
        cloudControlGroupBuilder_.mergeFrom(value);
      }
      if (cloudControlGroup_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearCloudControlGroup() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cloudControlGroup_ = null;
      if (cloudControlGroupBuilder_ != null) {
        cloudControlGroupBuilder_.dispose();
        cloudControlGroupBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.Builder
        getCloudControlGroupBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getCloudControlGroupFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupOrBuilder
        getCloudControlGroupOrBuilder() {
      if (cloudControlGroupBuilder_ != null) {
        return cloudControlGroupBuilder_.getMessageOrBuilder();
      } else {
        return cloudControlGroup_ == null
            ? com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.getDefaultInstance()
            : cloudControlGroup_;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control group
     * </pre>
     *
     * <code>
     * .google.cloud.cloudsecuritycompliance.v1.CloudControlGroup cloud_control_group = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.Builder,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupOrBuilder>
        getCloudControlGroupFieldBuilder() {
      if (cloudControlGroupBuilder_ == null) {
        cloudControlGroupBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup,
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroup.Builder,
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupOrBuilder>(
                getCloudControlGroup(), getParentForChildren(), isClean());
        cloudControlGroup_ = null;
      }
      return cloudControlGroupBuilder_;
    }

    private java.util.List<com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment>
        ccDeployments_ = java.util.Collections.emptyList();

    private void ensureCcDeploymentsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        ccDeployments_ =
            new java.util.ArrayList<
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment>(ccDeployments_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder>
        ccDeploymentsBuilder_;

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public java.util.List<com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment>
        getCcDeploymentsList() {
      if (ccDeploymentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ccDeployments_);
      } else {
        return ccDeploymentsBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public int getCcDeploymentsCount() {
      if (ccDeploymentsBuilder_ == null) {
        return ccDeployments_.size();
      } else {
        return ccDeploymentsBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment getCcDeployments(
        int index) {
      if (ccDeploymentsBuilder_ == null) {
        return ccDeployments_.get(index);
      } else {
        return ccDeploymentsBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder setCcDeployments(
        int index, com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment value) {
      if (ccDeploymentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCcDeploymentsIsMutable();
        ccDeployments_.set(index, value);
        onChanged();
      } else {
        ccDeploymentsBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder setCcDeployments(
        int index,
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder
            builderForValue) {
      if (ccDeploymentsBuilder_ == null) {
        ensureCcDeploymentsIsMutable();
        ccDeployments_.set(index, builderForValue.build());
        onChanged();
      } else {
        ccDeploymentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder addCcDeployments(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment value) {
      if (ccDeploymentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCcDeploymentsIsMutable();
        ccDeployments_.add(value);
        onChanged();
      } else {
        ccDeploymentsBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder addCcDeployments(
        int index, com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment value) {
      if (ccDeploymentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCcDeploymentsIsMutable();
        ccDeployments_.add(index, value);
        onChanged();
      } else {
        ccDeploymentsBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder addCcDeployments(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder
            builderForValue) {
      if (ccDeploymentsBuilder_ == null) {
        ensureCcDeploymentsIsMutable();
        ccDeployments_.add(builderForValue.build());
        onChanged();
      } else {
        ccDeploymentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder addCcDeployments(
        int index,
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder
            builderForValue) {
      if (ccDeploymentsBuilder_ == null) {
        ensureCcDeploymentsIsMutable();
        ccDeployments_.add(index, builderForValue.build());
        onChanged();
      } else {
        ccDeploymentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder addAllCcDeployments(
        java.lang.Iterable<
                ? extends com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment>
            values) {
      if (ccDeploymentsBuilder_ == null) {
        ensureCcDeploymentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, ccDeployments_);
        onChanged();
      } else {
        ccDeploymentsBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder clearCcDeployments() {
      if (ccDeploymentsBuilder_ == null) {
        ccDeployments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        ccDeploymentsBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public Builder removeCcDeployments(int index) {
      if (ccDeploymentsBuilder_ == null) {
        ensureCcDeploymentsIsMutable();
        ccDeployments_.remove(index);
        onChanged();
      } else {
        ccDeploymentsBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder
        getCcDeploymentsBuilder(int index) {
      return getCcDeploymentsFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder
        getCcDeploymentsOrBuilder(int index) {
      if (ccDeploymentsBuilder_ == null) {
        return ccDeployments_.get(index);
      } else {
        return ccDeploymentsBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public java.util.List<
            ? extends com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder>
        getCcDeploymentsOrBuilderList() {
      if (ccDeploymentsBuilder_ != null) {
        return ccDeploymentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ccDeployments_);
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder
        addCcDeploymentsBuilder() {
      return getCcDeploymentsFieldBuilder()
          .addBuilder(
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder
        addCcDeploymentsBuilder(int index) {
      return getCcDeploymentsFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Required. Cloud control deployments in the group
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment cc_deployments = 2 [deprecated = true, (.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Deprecated
    public java.util.List<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder>
        getCcDeploymentsBuilderList() {
      return getCcDeploymentsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder>
        getCcDeploymentsFieldBuilder() {
      if (ccDeploymentsBuilder_ == null) {
        ccDeploymentsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment,
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeployment.Builder,
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentOrBuilder>(
                ccDeployments_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        ccDeployments_ = null;
      }
      return ccDeploymentsBuilder_;
    }

    private java.util.List<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference>
        ccDeploymentReferences_ = java.util.Collections.emptyList();

    private void ensureCcDeploymentReferencesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        ccDeploymentReferences_ =
            new java.util.ArrayList<
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference>(
                ccDeploymentReferences_);
        bitField0_ |= 0x00000004;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReferenceOrBuilder>
        ccDeploymentReferencesBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference>
        getCcDeploymentReferencesList() {
      if (ccDeploymentReferencesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ccDeploymentReferences_);
      } else {
        return ccDeploymentReferencesBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public int getCcDeploymentReferencesCount() {
      if (ccDeploymentReferencesBuilder_ == null) {
        return ccDeploymentReferences_.size();
      } else {
        return ccDeploymentReferencesBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference
        getCcDeploymentReferences(int index) {
      if (ccDeploymentReferencesBuilder_ == null) {
        return ccDeploymentReferences_.get(index);
      } else {
        return ccDeploymentReferencesBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setCcDeploymentReferences(
        int index,
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference value) {
      if (ccDeploymentReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.set(index, value);
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setCcDeploymentReferences(
        int index,
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder
            builderForValue) {
      if (ccDeploymentReferencesBuilder_ == null) {
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.set(index, builderForValue.build());
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addCcDeploymentReferences(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference value) {
      if (ccDeploymentReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.add(value);
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addCcDeploymentReferences(
        int index,
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference value) {
      if (ccDeploymentReferencesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.add(index, value);
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addCcDeploymentReferences(
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder
            builderForValue) {
      if (ccDeploymentReferencesBuilder_ == null) {
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.add(builderForValue.build());
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addCcDeploymentReferences(
        int index,
        com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder
            builderForValue) {
      if (ccDeploymentReferencesBuilder_ == null) {
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.add(index, builderForValue.build());
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addAllCcDeploymentReferences(
        java.lang.Iterable<
                ? extends
                    com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference>
            values) {
      if (ccDeploymentReferencesBuilder_ == null) {
        ensureCcDeploymentReferencesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, ccDeploymentReferences_);
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearCcDeploymentReferences() {
      if (ccDeploymentReferencesBuilder_ == null) {
        ccDeploymentReferences_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder removeCcDeploymentReferences(int index) {
      if (ccDeploymentReferencesBuilder_ == null) {
        ensureCcDeploymentReferencesIsMutable();
        ccDeploymentReferences_.remove(index);
        onChanged();
      } else {
        ccDeploymentReferencesBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder
        getCcDeploymentReferencesBuilder(int index) {
      return getCcDeploymentReferencesFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReferenceOrBuilder
        getCcDeploymentReferencesOrBuilder(int index) {
      if (ccDeploymentReferencesBuilder_ == null) {
        return ccDeploymentReferences_.get(index);
      } else {
        return ccDeploymentReferencesBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            ? extends
                com.google.cloud.cloudsecuritycompliance.v1
                    .CloudControlDeploymentReferenceOrBuilder>
        getCcDeploymentReferencesOrBuilderList() {
      if (ccDeploymentReferencesBuilder_ != null) {
        return ccDeploymentReferencesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ccDeploymentReferences_);
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder
        addCcDeploymentReferencesBuilder() {
      return getCcDeploymentReferencesFieldBuilder()
          .addBuilder(
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder
        addCcDeploymentReferencesBuilder(int index) {
      return getCcDeploymentReferencesFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Output only. The references to the cloud control deployments in the cloud
     * control group. For example, if a cloud control group has two cloud
     * controls, `cloud-control-1` and `cloud-control-2`, and the cloud control
     * deployments for these cloud controls are `cloud-control-deployment-1` and
     * `cloud-control-deployment-2` respectively, then the
     * references are:
     * ```
     *  cloud_control_deployment_reference: {
     *    cloud_control_deployment:
     *    "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-1"
     *  },
     *  cloud_control_deployment_reference: {
     *   cloud_control_deployment:
     *   "organizations/{organization}/locations/{location}/cloudControlDeployments/cloud-control-deployment-2"
     *  }
     * ```
     * </pre>
     *
     * <code>
     * repeated .google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference cc_deployment_references = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder>
        getCcDeploymentReferencesBuilderList() {
      return getCcDeploymentReferencesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder,
            com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReferenceOrBuilder>
        getCcDeploymentReferencesFieldBuilder() {
      if (ccDeploymentReferencesBuilder_ == null) {
        ccDeploymentReferencesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference,
                com.google.cloud.cloudsecuritycompliance.v1.CloudControlDeploymentReference.Builder,
                com.google.cloud.cloudsecuritycompliance.v1
                    .CloudControlDeploymentReferenceOrBuilder>(
                ccDeploymentReferences_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        ccDeploymentReferences_ = null;
      }
      return ccDeploymentReferencesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment)
  private static final com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE =
        new com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment();
  }

  public static com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CloudControlGroupDeployment> PARSER =
      new com.google.protobuf.AbstractParser<CloudControlGroupDeployment>() {
        @java.lang.Override
        public CloudControlGroupDeployment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<CloudControlGroupDeployment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CloudControlGroupDeployment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.cloudsecuritycompliance.v1.CloudControlGroupDeployment
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
