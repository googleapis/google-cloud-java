/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routing/v2/transit_preferences.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.routing.v2;

public interface TransitPreferencesOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.routing.v2.TransitPreferences)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * A set of travel modes to use when getting a `TRANSIT` route. Defaults to
   * all supported modes of travel.
   * </pre>
   *
   * <code>
   * repeated .google.maps.routing.v2.TransitPreferences.TransitTravelMode allowed_travel_modes = 1;
   * </code>
   *
   * @return A list containing the allowedTravelModes.
   */
  java.util.List<com.google.maps.routing.v2.TransitPreferences.TransitTravelMode>
      getAllowedTravelModesList();
  /**
   *
   *
   * <pre>
   * A set of travel modes to use when getting a `TRANSIT` route. Defaults to
   * all supported modes of travel.
   * </pre>
   *
   * <code>
   * repeated .google.maps.routing.v2.TransitPreferences.TransitTravelMode allowed_travel_modes = 1;
   * </code>
   *
   * @return The count of allowedTravelModes.
   */
  int getAllowedTravelModesCount();
  /**
   *
   *
   * <pre>
   * A set of travel modes to use when getting a `TRANSIT` route. Defaults to
   * all supported modes of travel.
   * </pre>
   *
   * <code>
   * repeated .google.maps.routing.v2.TransitPreferences.TransitTravelMode allowed_travel_modes = 1;
   * </code>
   *
   * @param index The index of the element to return.
   * @return The allowedTravelModes at the given index.
   */
  com.google.maps.routing.v2.TransitPreferences.TransitTravelMode getAllowedTravelModes(int index);
  /**
   *
   *
   * <pre>
   * A set of travel modes to use when getting a `TRANSIT` route. Defaults to
   * all supported modes of travel.
   * </pre>
   *
   * <code>
   * repeated .google.maps.routing.v2.TransitPreferences.TransitTravelMode allowed_travel_modes = 1;
   * </code>
   *
   * @return A list containing the enum numeric values on the wire for allowedTravelModes.
   */
  java.util.List<java.lang.Integer> getAllowedTravelModesValueList();
  /**
   *
   *
   * <pre>
   * A set of travel modes to use when getting a `TRANSIT` route. Defaults to
   * all supported modes of travel.
   * </pre>
   *
   * <code>
   * repeated .google.maps.routing.v2.TransitPreferences.TransitTravelMode allowed_travel_modes = 1;
   * </code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of allowedTravelModes at the given index.
   */
  int getAllowedTravelModesValue(int index);

  /**
   *
   *
   * <pre>
   * A routing preference that, when specified, influences the `TRANSIT` route
   * returned.
   * </pre>
   *
   * <code>
   * .google.maps.routing.v2.TransitPreferences.TransitRoutingPreference routing_preference = 2;
   * </code>
   *
   * @return The enum numeric value on the wire for routingPreference.
   */
  int getRoutingPreferenceValue();
  /**
   *
   *
   * <pre>
   * A routing preference that, when specified, influences the `TRANSIT` route
   * returned.
   * </pre>
   *
   * <code>
   * .google.maps.routing.v2.TransitPreferences.TransitRoutingPreference routing_preference = 2;
   * </code>
   *
   * @return The routingPreference.
   */
  com.google.maps.routing.v2.TransitPreferences.TransitRoutingPreference getRoutingPreference();
}
