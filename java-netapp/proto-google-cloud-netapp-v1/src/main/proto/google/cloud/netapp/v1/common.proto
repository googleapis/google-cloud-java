// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.netapp.v1;

import "google/api/field_behavior.proto";

option csharp_namespace = "Google.Cloud.NetApp.V1";
option go_package = "cloud.google.com/go/netapp/apiv1/netapppb;netapppb";
option java_multiple_files = true;
option java_outer_classname = "CommonProto";
option java_package = "com.google.cloud.netapp.v1";
option php_namespace = "Google\\Cloud\\NetApp\\V1";
option ruby_package = "Google::Cloud::NetApp::V1";

// The service level of a storage pool and its volumes.
enum ServiceLevel {
  // Unspecified service level.
  SERVICE_LEVEL_UNSPECIFIED = 0;

  // Premium service level.
  PREMIUM = 1;

  // Extreme service level.
  EXTREME = 2;

  // Standard service level.
  STANDARD = 3;

  // Flex service level.
  FLEX = 4;
}

// Flex Storage Pool performance.
enum FlexPerformance {
  // Unspecified flex performance.
  FLEX_PERFORMANCE_UNSPECIFIED = 0;

  // Flex Storage Pool with default performance.
  FLEX_PERFORMANCE_DEFAULT = 1;

  // Flex Storage Pool with custom performance.
  FLEX_PERFORMANCE_CUSTOM = 2;
}

// The volume encryption key source.
enum EncryptionType {
  // The source of the encryption key is not specified.
  ENCRYPTION_TYPE_UNSPECIFIED = 0;

  // Google managed encryption key.
  SERVICE_MANAGED = 1;

  // Customer managed encryption key, which is stored in KMS.
  CLOUD_KMS = 2;
}

// Type of directory service
enum DirectoryServiceType {
  // Directory service type is not specified.
  DIRECTORY_SERVICE_TYPE_UNSPECIFIED = 0;

  // Active directory policy attached to the storage pool.
  ACTIVE_DIRECTORY = 1;
}

// Schedule for Hybrid Replication.
// New enum values may be added in future to support different frequency of
// replication.
enum HybridReplicationSchedule {
  // Unspecified HybridReplicationSchedule
  HYBRID_REPLICATION_SCHEDULE_UNSPECIFIED = 0;

  // Replication happens once every 10 minutes.
  EVERY_10_MINUTES = 1;

  // Replication happens once every hour.
  HOURLY = 2;

  // Replication happens once every day.
  DAILY = 3;
}

// QoS (Quality of Service) Types of the storage pool
enum QosType {
  // Unspecified QoS Type
  QOS_TYPE_UNSPECIFIED = 0;

  // QoS Type is Auto
  AUTO = 1;

  // QoS Type is Manual
  MANUAL = 2;
}

// Metadata for a given
// [google.cloud.location.Location][google.cloud.location.Location].
message LocationMetadata {
  // Output only. Supported service levels in a location.
  repeated ServiceLevel supported_service_levels = 1
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Supported flex performance in a location.
  repeated FlexPerformance supported_flex_performance = 2
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Indicates if the location has VCP support.
  bool has_vcp = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// UserCommands contains the commands to be executed by the customer.
message UserCommands {
  // Output only. List of commands to be executed by the customer.
  repeated string commands = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}
