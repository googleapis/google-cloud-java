/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/netapp/v1/volume.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.netapp.v1;

public interface SimpleExportPolicyRuleOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.netapp.v1.SimpleExportPolicyRule)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Comma separated list of allowed clients IP addresses
   * </pre>
   *
   * <code>optional string allowed_clients = 1;</code>
   *
   * @return Whether the allowedClients field is set.
   */
  boolean hasAllowedClients();
  /**
   *
   *
   * <pre>
   * Comma separated list of allowed clients IP addresses
   * </pre>
   *
   * <code>optional string allowed_clients = 1;</code>
   *
   * @return The allowedClients.
   */
  java.lang.String getAllowedClients();
  /**
   *
   *
   * <pre>
   * Comma separated list of allowed clients IP addresses
   * </pre>
   *
   * <code>optional string allowed_clients = 1;</code>
   *
   * @return The bytes for allowedClients.
   */
  com.google.protobuf.ByteString getAllowedClientsBytes();

  /**
   *
   *
   * <pre>
   * Whether Unix root access will be granted.
   * </pre>
   *
   * <code>optional string has_root_access = 2;</code>
   *
   * @return Whether the hasRootAccess field is set.
   */
  boolean hasHasRootAccess();
  /**
   *
   *
   * <pre>
   * Whether Unix root access will be granted.
   * </pre>
   *
   * <code>optional string has_root_access = 2;</code>
   *
   * @return The hasRootAccess.
   */
  java.lang.String getHasRootAccess();
  /**
   *
   *
   * <pre>
   * Whether Unix root access will be granted.
   * </pre>
   *
   * <code>optional string has_root_access = 2;</code>
   *
   * @return The bytes for hasRootAccess.
   */
  com.google.protobuf.ByteString getHasRootAccessBytes();

  /**
   *
   *
   * <pre>
   * Access type (ReadWrite, ReadOnly, None)
   * </pre>
   *
   * <code>optional .google.cloud.netapp.v1.AccessType access_type = 3;</code>
   *
   * @return Whether the accessType field is set.
   */
  boolean hasAccessType();
  /**
   *
   *
   * <pre>
   * Access type (ReadWrite, ReadOnly, None)
   * </pre>
   *
   * <code>optional .google.cloud.netapp.v1.AccessType access_type = 3;</code>
   *
   * @return The enum numeric value on the wire for accessType.
   */
  int getAccessTypeValue();
  /**
   *
   *
   * <pre>
   * Access type (ReadWrite, ReadOnly, None)
   * </pre>
   *
   * <code>optional .google.cloud.netapp.v1.AccessType access_type = 3;</code>
   *
   * @return The accessType.
   */
  com.google.cloud.netapp.v1.AccessType getAccessType();

  /**
   *
   *
   * <pre>
   * NFS V3 protocol.
   * </pre>
   *
   * <code>optional bool nfsv3 = 4;</code>
   *
   * @return Whether the nfsv3 field is set.
   */
  boolean hasNfsv3();
  /**
   *
   *
   * <pre>
   * NFS V3 protocol.
   * </pre>
   *
   * <code>optional bool nfsv3 = 4;</code>
   *
   * @return The nfsv3.
   */
  boolean getNfsv3();

  /**
   *
   *
   * <pre>
   * NFS V4 protocol.
   * </pre>
   *
   * <code>optional bool nfsv4 = 5;</code>
   *
   * @return Whether the nfsv4 field is set.
   */
  boolean hasNfsv4();
  /**
   *
   *
   * <pre>
   * NFS V4 protocol.
   * </pre>
   *
   * <code>optional bool nfsv4 = 5;</code>
   *
   * @return The nfsv4.
   */
  boolean getNfsv4();

  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'authentication' kerberos security mode.
   * </pre>
   *
   * <code>optional bool kerberos_5_read_only = 6;</code>
   *
   * @return Whether the kerberos5ReadOnly field is set.
   */
  boolean hasKerberos5ReadOnly();
  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'authentication' kerberos security mode.
   * </pre>
   *
   * <code>optional bool kerberos_5_read_only = 6;</code>
   *
   * @return The kerberos5ReadOnly.
   */
  boolean getKerberos5ReadOnly();

  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'authentication' kerberos security mode. The
   * 'kerberos5ReadOnly' value be ignored if this is enabled.
   * </pre>
   *
   * <code>optional bool kerberos_5_read_write = 7;</code>
   *
   * @return Whether the kerberos5ReadWrite field is set.
   */
  boolean hasKerberos5ReadWrite();
  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'authentication' kerberos security mode. The
   * 'kerberos5ReadOnly' value be ignored if this is enabled.
   * </pre>
   *
   * <code>optional bool kerberos_5_read_write = 7;</code>
   *
   * @return The kerberos5ReadWrite.
   */
  boolean getKerberos5ReadWrite();

  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'integrity' kerberos security mode.
   * </pre>
   *
   * <code>optional bool kerberos_5i_read_only = 8;</code>
   *
   * @return Whether the kerberos5iReadOnly field is set.
   */
  boolean hasKerberos5IReadOnly();
  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'integrity' kerberos security mode.
   * </pre>
   *
   * <code>optional bool kerberos_5i_read_only = 8;</code>
   *
   * @return The kerberos5iReadOnly.
   */
  boolean getKerberos5IReadOnly();

  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
   * value be ignored if this is enabled.
   * </pre>
   *
   * <code>optional bool kerberos_5i_read_write = 9;</code>
   *
   * @return Whether the kerberos5iReadWrite field is set.
   */
  boolean hasKerberos5IReadWrite();
  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
   * value be ignored if this is enabled.
   * </pre>
   *
   * <code>optional bool kerberos_5i_read_write = 9;</code>
   *
   * @return The kerberos5iReadWrite.
   */
  boolean getKerberos5IReadWrite();

  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'privacy' kerberos security mode.
   * </pre>
   *
   * <code>optional bool kerberos_5p_read_only = 10;</code>
   *
   * @return Whether the kerberos5pReadOnly field is set.
   */
  boolean hasKerberos5PReadOnly();
  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines a read only access for clients matching
   * the 'allowedClients' specification. It enables nfs clients to mount using
   * 'privacy' kerberos security mode.
   * </pre>
   *
   * <code>optional bool kerberos_5p_read_only = 10;</code>
   *
   * @return The kerberos5pReadOnly.
   */
  boolean getKerberos5PReadOnly();

  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
   * value be ignored if this is enabled.
   * </pre>
   *
   * <code>optional bool kerberos_5p_read_write = 11;</code>
   *
   * @return Whether the kerberos5pReadWrite field is set.
   */
  boolean hasKerberos5PReadWrite();
  /**
   *
   *
   * <pre>
   * If enabled (true) the rule defines read and write access for clients
   * matching the 'allowedClients' specification. It enables nfs clients to
   * mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
   * value be ignored if this is enabled.
   * </pre>
   *
   * <code>optional bool kerberos_5p_read_write = 11;</code>
   *
   * @return The kerberos5pReadWrite.
   */
  boolean getKerberos5PReadWrite();
}
