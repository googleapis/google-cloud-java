/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gdchardwaremanagement/v1alpha/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gdchardwaremanagement.v1alpha;

public interface HardwarePhysicalInfoOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The power receptacle type.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for powerReceptacle.
   */
  int getPowerReceptacleValue();
  /**
   *
   *
   * <pre>
   * Required. The power receptacle type.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The powerReceptacle.
   */
  com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
      getPowerReceptacle();

  /**
   *
   *
   * <pre>
   * Required. Type of the uplink network connection.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for networkUplink.
   */
  int getNetworkUplinkValue();
  /**
   *
   *
   * <pre>
   * Required. Type of the uplink network connection.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The networkUplink.
   */
  com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
      getNetworkUplink();

  /**
   *
   *
   * <pre>
   * Required. Voltage of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for voltage.
   */
  int getVoltageValue();
  /**
   *
   *
   * <pre>
   * Required. Voltage of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The voltage.
   */
  com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage getVoltage();

  /**
   *
   *
   * <pre>
   * Required. Amperes of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for amperes.
   */
  int getAmperesValue();
  /**
   *
   *
   * <pre>
   * Required. Amperes of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The amperes.
   */
  com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes getAmperes();
}
