/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gdchardwaremanagement/v1alpha/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gdchardwaremanagement.v1alpha;

/**
 *
 *
 * <pre>
 * Networking configuration for a zone.
 * </pre>
 *
 * Protobuf type {@code google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig}
 */
public final class ZoneNetworkConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig)
    ZoneNetworkConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ZoneNetworkConfig.newBuilder() to construct.
  private ZoneNetworkConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ZoneNetworkConfig() {
    machineMgmtIpv4Range_ = "";
    kubernetesNodeIpv4Range_ = "";
    kubernetesControlPlaneIpv4Range_ = "";
    dnsIpv4Addresses_ = com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ZoneNetworkConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
        .internal_static_google_cloud_gdchardwaremanagement_v1alpha_ZoneNetworkConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
        .internal_static_google_cloud_gdchardwaremanagement_v1alpha_ZoneNetworkConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.class,
            com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.Builder.class);
  }

  private int bitField0_;
  public static final int MACHINE_MGMT_IPV4_RANGE_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object machineMgmtIpv4Range_ = "";
  /**
   *
   *
   * <pre>
   * Required. An IPv4 address block for machine management.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per machine in the Zone.
   * Should be in `management_ipv4_subnet`, and disjoint with other address
   * ranges.
   * </pre>
   *
   * <code>
   * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The machineMgmtIpv4Range.
   */
  @java.lang.Override
  public java.lang.String getMachineMgmtIpv4Range() {
    java.lang.Object ref = machineMgmtIpv4Range_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      machineMgmtIpv4Range_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. An IPv4 address block for machine management.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per machine in the Zone.
   * Should be in `management_ipv4_subnet`, and disjoint with other address
   * ranges.
   * </pre>
   *
   * <code>
   * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The bytes for machineMgmtIpv4Range.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMachineMgmtIpv4RangeBytes() {
    java.lang.Object ref = machineMgmtIpv4Range_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      machineMgmtIpv4Range_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KUBERNETES_NODE_IPV4_RANGE_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object kubernetesNodeIpv4Range_ = "";
  /**
   *
   *
   * <pre>
   * Required. An IPv4 address block for kubernetes nodes.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per machine in the Zone.
   * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
   * ranges.
   * </pre>
   *
   * <code>
   * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The kubernetesNodeIpv4Range.
   */
  @java.lang.Override
  public java.lang.String getKubernetesNodeIpv4Range() {
    java.lang.Object ref = kubernetesNodeIpv4Range_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kubernetesNodeIpv4Range_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. An IPv4 address block for kubernetes nodes.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per machine in the Zone.
   * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
   * ranges.
   * </pre>
   *
   * <code>
   * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The bytes for kubernetesNodeIpv4Range.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKubernetesNodeIpv4RangeBytes() {
    java.lang.Object ref = kubernetesNodeIpv4Range_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      kubernetesNodeIpv4Range_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KUBERNETES_CONTROL_PLANE_IPV4_RANGE_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object kubernetesControlPlaneIpv4Range_ = "";
  /**
   *
   *
   * <pre>
   * Required. An IPv4 address block for kubernetes control plane.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per cluster in the Zone.
   * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
   * ranges.
   * </pre>
   *
   * <code>
   * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The kubernetesControlPlaneIpv4Range.
   */
  @java.lang.Override
  public java.lang.String getKubernetesControlPlaneIpv4Range() {
    java.lang.Object ref = kubernetesControlPlaneIpv4Range_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kubernetesControlPlaneIpv4Range_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. An IPv4 address block for kubernetes control plane.
   * Should be a private RFC1918 or public CIDR block large enough to allocate
   * at least one address per cluster in the Zone.
   * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
   * ranges.
   * </pre>
   *
   * <code>
   * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The bytes for kubernetesControlPlaneIpv4Range.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKubernetesControlPlaneIpv4RangeBytes() {
    java.lang.Object ref = kubernetesControlPlaneIpv4Range_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      kubernetesControlPlaneIpv4Range_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MANAGEMENT_IPV4_SUBNET_FIELD_NUMBER = 4;
  private com.google.cloud.gdchardwaremanagement.v1alpha.Subnet managementIpv4Subnet_;
  /**
   *
   *
   * <pre>
   * Required. An IPv4 subnet for the management network.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the managementIpv4Subnet field is set.
   */
  @java.lang.Override
  public boolean hasManagementIpv4Subnet() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. An IPv4 subnet for the management network.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The managementIpv4Subnet.
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.Subnet getManagementIpv4Subnet() {
    return managementIpv4Subnet_ == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
        : managementIpv4Subnet_;
  }
  /**
   *
   *
   * <pre>
   * Required. An IPv4 subnet for the management network.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder
      getManagementIpv4SubnetOrBuilder() {
    return managementIpv4Subnet_ == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
        : managementIpv4Subnet_;
  }

  public static final int KUBERNETES_IPV4_SUBNET_FIELD_NUMBER = 5;
  private com.google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetesIpv4Subnet_;
  /**
   *
   *
   * <pre>
   * Optional. An IPv4 subnet for the kubernetes network.
   * If unspecified, the kubernetes subnet will be the same as the management
   * subnet.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the kubernetesIpv4Subnet field is set.
   */
  @java.lang.Override
  public boolean hasKubernetesIpv4Subnet() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. An IPv4 subnet for the kubernetes network.
   * If unspecified, the kubernetes subnet will be the same as the management
   * subnet.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The kubernetesIpv4Subnet.
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.Subnet getKubernetesIpv4Subnet() {
    return kubernetesIpv4Subnet_ == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
        : kubernetesIpv4Subnet_;
  }
  /**
   *
   *
   * <pre>
   * Optional. An IPv4 subnet for the kubernetes network.
   * If unspecified, the kubernetes subnet will be the same as the management
   * subnet.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder
      getKubernetesIpv4SubnetOrBuilder() {
    return kubernetesIpv4Subnet_ == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
        : kubernetesIpv4Subnet_;
  }

  public static final int DNS_IPV4_ADDRESSES_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList dnsIpv4Addresses_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * Optional. DNS nameservers.
   * The GDC Infrastructure will resolve DNS queries via these IPs.
   * If unspecified, Google DNS is used.
   * </pre>
   *
   * <code>
   * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return A list containing the dnsIpv4Addresses.
   */
  public com.google.protobuf.ProtocolStringList getDnsIpv4AddressesList() {
    return dnsIpv4Addresses_;
  }
  /**
   *
   *
   * <pre>
   * Optional. DNS nameservers.
   * The GDC Infrastructure will resolve DNS queries via these IPs.
   * If unspecified, Google DNS is used.
   * </pre>
   *
   * <code>
   * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The count of dnsIpv4Addresses.
   */
  public int getDnsIpv4AddressesCount() {
    return dnsIpv4Addresses_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. DNS nameservers.
   * The GDC Infrastructure will resolve DNS queries via these IPs.
   * If unspecified, Google DNS is used.
   * </pre>
   *
   * <code>
   * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @param index The index of the element to return.
   * @return The dnsIpv4Addresses at the given index.
   */
  public java.lang.String getDnsIpv4Addresses(int index) {
    return dnsIpv4Addresses_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. DNS nameservers.
   * The GDC Infrastructure will resolve DNS queries via these IPs.
   * If unspecified, Google DNS is used.
   * </pre>
   *
   * <code>
   * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the dnsIpv4Addresses at the given index.
   */
  public com.google.protobuf.ByteString getDnsIpv4AddressesBytes(int index) {
    return dnsIpv4Addresses_.getByteString(index);
  }

  public static final int KUBERNETES_PRIMARY_VLAN_ID_FIELD_NUMBER = 7;
  private int kubernetesPrimaryVlanId_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. Kubernetes VLAN ID.
   * By default, the kubernetes node, including the primary kubernetes network,
   * are in the same VLAN as the machine management network.
   * For network segmentation purposes, these can optionally be separated.
   * </pre>
   *
   * <code>int32 kubernetes_primary_vlan_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The kubernetesPrimaryVlanId.
   */
  @java.lang.Override
  public int getKubernetesPrimaryVlanId() {
    return kubernetesPrimaryVlanId_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(machineMgmtIpv4Range_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, machineMgmtIpv4Range_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kubernetesNodeIpv4Range_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, kubernetesNodeIpv4Range_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kubernetesControlPlaneIpv4Range_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(
          output, 3, kubernetesControlPlaneIpv4Range_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(4, getManagementIpv4Subnet());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(5, getKubernetesIpv4Subnet());
    }
    for (int i = 0; i < dnsIpv4Addresses_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, dnsIpv4Addresses_.getRaw(i));
    }
    if (kubernetesPrimaryVlanId_ != 0) {
      output.writeInt32(7, kubernetesPrimaryVlanId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(machineMgmtIpv4Range_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, machineMgmtIpv4Range_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kubernetesNodeIpv4Range_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, kubernetesNodeIpv4Range_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kubernetesControlPlaneIpv4Range_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(
              3, kubernetesControlPlaneIpv4Range_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(4, getManagementIpv4Subnet());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(5, getKubernetesIpv4Subnet());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < dnsIpv4Addresses_.size(); i++) {
        dataSize += computeStringSizeNoTag(dnsIpv4Addresses_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDnsIpv4AddressesList().size();
    }
    if (kubernetesPrimaryVlanId_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(7, kubernetesPrimaryVlanId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig other =
        (com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig) obj;

    if (!getMachineMgmtIpv4Range().equals(other.getMachineMgmtIpv4Range())) return false;
    if (!getKubernetesNodeIpv4Range().equals(other.getKubernetesNodeIpv4Range())) return false;
    if (!getKubernetesControlPlaneIpv4Range().equals(other.getKubernetesControlPlaneIpv4Range()))
      return false;
    if (hasManagementIpv4Subnet() != other.hasManagementIpv4Subnet()) return false;
    if (hasManagementIpv4Subnet()) {
      if (!getManagementIpv4Subnet().equals(other.getManagementIpv4Subnet())) return false;
    }
    if (hasKubernetesIpv4Subnet() != other.hasKubernetesIpv4Subnet()) return false;
    if (hasKubernetesIpv4Subnet()) {
      if (!getKubernetesIpv4Subnet().equals(other.getKubernetesIpv4Subnet())) return false;
    }
    if (!getDnsIpv4AddressesList().equals(other.getDnsIpv4AddressesList())) return false;
    if (getKubernetesPrimaryVlanId() != other.getKubernetesPrimaryVlanId()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MACHINE_MGMT_IPV4_RANGE_FIELD_NUMBER;
    hash = (53 * hash) + getMachineMgmtIpv4Range().hashCode();
    hash = (37 * hash) + KUBERNETES_NODE_IPV4_RANGE_FIELD_NUMBER;
    hash = (53 * hash) + getKubernetesNodeIpv4Range().hashCode();
    hash = (37 * hash) + KUBERNETES_CONTROL_PLANE_IPV4_RANGE_FIELD_NUMBER;
    hash = (53 * hash) + getKubernetesControlPlaneIpv4Range().hashCode();
    if (hasManagementIpv4Subnet()) {
      hash = (37 * hash) + MANAGEMENT_IPV4_SUBNET_FIELD_NUMBER;
      hash = (53 * hash) + getManagementIpv4Subnet().hashCode();
    }
    if (hasKubernetesIpv4Subnet()) {
      hash = (37 * hash) + KUBERNETES_IPV4_SUBNET_FIELD_NUMBER;
      hash = (53 * hash) + getKubernetesIpv4Subnet().hashCode();
    }
    if (getDnsIpv4AddressesCount() > 0) {
      hash = (37 * hash) + DNS_IPV4_ADDRESSES_FIELD_NUMBER;
      hash = (53 * hash) + getDnsIpv4AddressesList().hashCode();
    }
    hash = (37 * hash) + KUBERNETES_PRIMARY_VLAN_ID_FIELD_NUMBER;
    hash = (53 * hash) + getKubernetesPrimaryVlanId();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Networking configuration for a zone.
   * </pre>
   *
   * Protobuf type {@code google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig)
      com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
          .internal_static_google_cloud_gdchardwaremanagement_v1alpha_ZoneNetworkConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
          .internal_static_google_cloud_gdchardwaremanagement_v1alpha_ZoneNetworkConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.class,
              com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.Builder.class);
    }

    // Construct using com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getManagementIpv4SubnetFieldBuilder();
        getKubernetesIpv4SubnetFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      machineMgmtIpv4Range_ = "";
      kubernetesNodeIpv4Range_ = "";
      kubernetesControlPlaneIpv4Range_ = "";
      managementIpv4Subnet_ = null;
      if (managementIpv4SubnetBuilder_ != null) {
        managementIpv4SubnetBuilder_.dispose();
        managementIpv4SubnetBuilder_ = null;
      }
      kubernetesIpv4Subnet_ = null;
      if (kubernetesIpv4SubnetBuilder_ != null) {
        kubernetesIpv4SubnetBuilder_.dispose();
        kubernetesIpv4SubnetBuilder_ = null;
      }
      dnsIpv4Addresses_ = com.google.protobuf.LazyStringArrayList.emptyList();
      kubernetesPrimaryVlanId_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
          .internal_static_google_cloud_gdchardwaremanagement_v1alpha_ZoneNetworkConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig
        getDefaultInstanceForType() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig build() {
      com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig buildPartial() {
      com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig result =
          new com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.machineMgmtIpv4Range_ = machineMgmtIpv4Range_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.kubernetesNodeIpv4Range_ = kubernetesNodeIpv4Range_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.kubernetesControlPlaneIpv4Range_ = kubernetesControlPlaneIpv4Range_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.managementIpv4Subnet_ =
            managementIpv4SubnetBuilder_ == null
                ? managementIpv4Subnet_
                : managementIpv4SubnetBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.kubernetesIpv4Subnet_ =
            kubernetesIpv4SubnetBuilder_ == null
                ? kubernetesIpv4Subnet_
                : kubernetesIpv4SubnetBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        dnsIpv4Addresses_.makeImmutable();
        result.dnsIpv4Addresses_ = dnsIpv4Addresses_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.kubernetesPrimaryVlanId_ = kubernetesPrimaryVlanId_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig) {
        return mergeFrom((com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig other) {
      if (other
          == com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig.getDefaultInstance())
        return this;
      if (!other.getMachineMgmtIpv4Range().isEmpty()) {
        machineMgmtIpv4Range_ = other.machineMgmtIpv4Range_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getKubernetesNodeIpv4Range().isEmpty()) {
        kubernetesNodeIpv4Range_ = other.kubernetesNodeIpv4Range_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getKubernetesControlPlaneIpv4Range().isEmpty()) {
        kubernetesControlPlaneIpv4Range_ = other.kubernetesControlPlaneIpv4Range_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasManagementIpv4Subnet()) {
        mergeManagementIpv4Subnet(other.getManagementIpv4Subnet());
      }
      if (other.hasKubernetesIpv4Subnet()) {
        mergeKubernetesIpv4Subnet(other.getKubernetesIpv4Subnet());
      }
      if (!other.dnsIpv4Addresses_.isEmpty()) {
        if (dnsIpv4Addresses_.isEmpty()) {
          dnsIpv4Addresses_ = other.dnsIpv4Addresses_;
          bitField0_ |= 0x00000020;
        } else {
          ensureDnsIpv4AddressesIsMutable();
          dnsIpv4Addresses_.addAll(other.dnsIpv4Addresses_);
        }
        onChanged();
      }
      if (other.getKubernetesPrimaryVlanId() != 0) {
        setKubernetesPrimaryVlanId(other.getKubernetesPrimaryVlanId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                machineMgmtIpv4Range_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                kubernetesNodeIpv4Range_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                kubernetesControlPlaneIpv4Range_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(
                    getManagementIpv4SubnetFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 42:
              {
                input.readMessage(
                    getKubernetesIpv4SubnetFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 50:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDnsIpv4AddressesIsMutable();
                dnsIpv4Addresses_.add(s);
                break;
              } // case 50
            case 56:
              {
                kubernetesPrimaryVlanId_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object machineMgmtIpv4Range_ = "";
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for machine management.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `management_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The machineMgmtIpv4Range.
     */
    public java.lang.String getMachineMgmtIpv4Range() {
      java.lang.Object ref = machineMgmtIpv4Range_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        machineMgmtIpv4Range_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for machine management.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `management_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The bytes for machineMgmtIpv4Range.
     */
    public com.google.protobuf.ByteString getMachineMgmtIpv4RangeBytes() {
      java.lang.Object ref = machineMgmtIpv4Range_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        machineMgmtIpv4Range_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for machine management.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `management_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The machineMgmtIpv4Range to set.
     * @return This builder for chaining.
     */
    public Builder setMachineMgmtIpv4Range(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      machineMgmtIpv4Range_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for machine management.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `management_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMachineMgmtIpv4Range() {
      machineMgmtIpv4Range_ = getDefaultInstance().getMachineMgmtIpv4Range();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for machine management.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `management_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string machine_mgmt_ipv4_range = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The bytes for machineMgmtIpv4Range to set.
     * @return This builder for chaining.
     */
    public Builder setMachineMgmtIpv4RangeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      machineMgmtIpv4Range_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object kubernetesNodeIpv4Range_ = "";
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes nodes.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The kubernetesNodeIpv4Range.
     */
    public java.lang.String getKubernetesNodeIpv4Range() {
      java.lang.Object ref = kubernetesNodeIpv4Range_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kubernetesNodeIpv4Range_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes nodes.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The bytes for kubernetesNodeIpv4Range.
     */
    public com.google.protobuf.ByteString getKubernetesNodeIpv4RangeBytes() {
      java.lang.Object ref = kubernetesNodeIpv4Range_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        kubernetesNodeIpv4Range_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes nodes.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The kubernetesNodeIpv4Range to set.
     * @return This builder for chaining.
     */
    public Builder setKubernetesNodeIpv4Range(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      kubernetesNodeIpv4Range_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes nodes.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearKubernetesNodeIpv4Range() {
      kubernetesNodeIpv4Range_ = getDefaultInstance().getKubernetesNodeIpv4Range();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes nodes.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per machine in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_node_ipv4_range = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The bytes for kubernetesNodeIpv4Range to set.
     * @return This builder for chaining.
     */
    public Builder setKubernetesNodeIpv4RangeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      kubernetesNodeIpv4Range_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object kubernetesControlPlaneIpv4Range_ = "";
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes control plane.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per cluster in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The kubernetesControlPlaneIpv4Range.
     */
    public java.lang.String getKubernetesControlPlaneIpv4Range() {
      java.lang.Object ref = kubernetesControlPlaneIpv4Range_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kubernetesControlPlaneIpv4Range_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes control plane.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per cluster in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The bytes for kubernetesControlPlaneIpv4Range.
     */
    public com.google.protobuf.ByteString getKubernetesControlPlaneIpv4RangeBytes() {
      java.lang.Object ref = kubernetesControlPlaneIpv4Range_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        kubernetesControlPlaneIpv4Range_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes control plane.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per cluster in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The kubernetesControlPlaneIpv4Range to set.
     * @return This builder for chaining.
     */
    public Builder setKubernetesControlPlaneIpv4Range(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      kubernetesControlPlaneIpv4Range_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes control plane.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per cluster in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearKubernetesControlPlaneIpv4Range() {
      kubernetesControlPlaneIpv4Range_ = getDefaultInstance().getKubernetesControlPlaneIpv4Range();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 address block for kubernetes control plane.
     * Should be a private RFC1918 or public CIDR block large enough to allocate
     * at least one address per cluster in the Zone.
     * Should be in `kubernetes_ipv4_subnet`, and disjoint with other address
     * ranges.
     * </pre>
     *
     * <code>
     * string kubernetes_control_plane_ipv4_range = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The bytes for kubernetesControlPlaneIpv4Range to set.
     * @return This builder for chaining.
     */
    public Builder setKubernetesControlPlaneIpv4RangeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      kubernetesControlPlaneIpv4Range_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.cloud.gdchardwaremanagement.v1alpha.Subnet managementIpv4Subnet_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet,
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder,
            com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder>
        managementIpv4SubnetBuilder_;
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the managementIpv4Subnet field is set.
     */
    public boolean hasManagementIpv4Subnet() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The managementIpv4Subnet.
     */
    public com.google.cloud.gdchardwaremanagement.v1alpha.Subnet getManagementIpv4Subnet() {
      if (managementIpv4SubnetBuilder_ == null) {
        return managementIpv4Subnet_ == null
            ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
            : managementIpv4Subnet_;
      } else {
        return managementIpv4SubnetBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setManagementIpv4Subnet(
        com.google.cloud.gdchardwaremanagement.v1alpha.Subnet value) {
      if (managementIpv4SubnetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        managementIpv4Subnet_ = value;
      } else {
        managementIpv4SubnetBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setManagementIpv4Subnet(
        com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder builderForValue) {
      if (managementIpv4SubnetBuilder_ == null) {
        managementIpv4Subnet_ = builderForValue.build();
      } else {
        managementIpv4SubnetBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeManagementIpv4Subnet(
        com.google.cloud.gdchardwaremanagement.v1alpha.Subnet value) {
      if (managementIpv4SubnetBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && managementIpv4Subnet_ != null
            && managementIpv4Subnet_
                != com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()) {
          getManagementIpv4SubnetBuilder().mergeFrom(value);
        } else {
          managementIpv4Subnet_ = value;
        }
      } else {
        managementIpv4SubnetBuilder_.mergeFrom(value);
      }
      if (managementIpv4Subnet_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearManagementIpv4Subnet() {
      bitField0_ = (bitField0_ & ~0x00000008);
      managementIpv4Subnet_ = null;
      if (managementIpv4SubnetBuilder_ != null) {
        managementIpv4SubnetBuilder_.dispose();
        managementIpv4SubnetBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder
        getManagementIpv4SubnetBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getManagementIpv4SubnetFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder
        getManagementIpv4SubnetOrBuilder() {
      if (managementIpv4SubnetBuilder_ != null) {
        return managementIpv4SubnetBuilder_.getMessageOrBuilder();
      } else {
        return managementIpv4Subnet_ == null
            ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
            : managementIpv4Subnet_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. An IPv4 subnet for the management network.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet management_ipv4_subnet = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet,
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder,
            com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder>
        getManagementIpv4SubnetFieldBuilder() {
      if (managementIpv4SubnetBuilder_ == null) {
        managementIpv4SubnetBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gdchardwaremanagement.v1alpha.Subnet,
                com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder,
                com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder>(
                getManagementIpv4Subnet(), getParentForChildren(), isClean());
        managementIpv4Subnet_ = null;
      }
      return managementIpv4SubnetBuilder_;
    }

    private com.google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetesIpv4Subnet_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet,
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder,
            com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder>
        kubernetesIpv4SubnetBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the kubernetesIpv4Subnet field is set.
     */
    public boolean hasKubernetesIpv4Subnet() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The kubernetesIpv4Subnet.
     */
    public com.google.cloud.gdchardwaremanagement.v1alpha.Subnet getKubernetesIpv4Subnet() {
      if (kubernetesIpv4SubnetBuilder_ == null) {
        return kubernetesIpv4Subnet_ == null
            ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
            : kubernetesIpv4Subnet_;
      } else {
        return kubernetesIpv4SubnetBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setKubernetesIpv4Subnet(
        com.google.cloud.gdchardwaremanagement.v1alpha.Subnet value) {
      if (kubernetesIpv4SubnetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        kubernetesIpv4Subnet_ = value;
      } else {
        kubernetesIpv4SubnetBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setKubernetesIpv4Subnet(
        com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder builderForValue) {
      if (kubernetesIpv4SubnetBuilder_ == null) {
        kubernetesIpv4Subnet_ = builderForValue.build();
      } else {
        kubernetesIpv4SubnetBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeKubernetesIpv4Subnet(
        com.google.cloud.gdchardwaremanagement.v1alpha.Subnet value) {
      if (kubernetesIpv4SubnetBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && kubernetesIpv4Subnet_ != null
            && kubernetesIpv4Subnet_
                != com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()) {
          getKubernetesIpv4SubnetBuilder().mergeFrom(value);
        } else {
          kubernetesIpv4Subnet_ = value;
        }
      } else {
        kubernetesIpv4SubnetBuilder_.mergeFrom(value);
      }
      if (kubernetesIpv4Subnet_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearKubernetesIpv4Subnet() {
      bitField0_ = (bitField0_ & ~0x00000010);
      kubernetesIpv4Subnet_ = null;
      if (kubernetesIpv4SubnetBuilder_ != null) {
        kubernetesIpv4SubnetBuilder_.dispose();
        kubernetesIpv4SubnetBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder
        getKubernetesIpv4SubnetBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getKubernetesIpv4SubnetFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder
        getKubernetesIpv4SubnetOrBuilder() {
      if (kubernetesIpv4SubnetBuilder_ != null) {
        return kubernetesIpv4SubnetBuilder_.getMessageOrBuilder();
      } else {
        return kubernetesIpv4Subnet_ == null
            ? com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.getDefaultInstance()
            : kubernetesIpv4Subnet_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. An IPv4 subnet for the kubernetes network.
     * If unspecified, the kubernetes subnet will be the same as the management
     * subnet.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.Subnet kubernetes_ipv4_subnet = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet,
            com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder,
            com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder>
        getKubernetesIpv4SubnetFieldBuilder() {
      if (kubernetesIpv4SubnetBuilder_ == null) {
        kubernetesIpv4SubnetBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gdchardwaremanagement.v1alpha.Subnet,
                com.google.cloud.gdchardwaremanagement.v1alpha.Subnet.Builder,
                com.google.cloud.gdchardwaremanagement.v1alpha.SubnetOrBuilder>(
                getKubernetesIpv4Subnet(), getParentForChildren(), isClean());
        kubernetesIpv4Subnet_ = null;
      }
      return kubernetesIpv4SubnetBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList dnsIpv4Addresses_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureDnsIpv4AddressesIsMutable() {
      if (!dnsIpv4Addresses_.isModifiable()) {
        dnsIpv4Addresses_ = new com.google.protobuf.LazyStringArrayList(dnsIpv4Addresses_);
      }
      bitField0_ |= 0x00000020;
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return A list containing the dnsIpv4Addresses.
     */
    public com.google.protobuf.ProtocolStringList getDnsIpv4AddressesList() {
      dnsIpv4Addresses_.makeImmutable();
      return dnsIpv4Addresses_;
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return The count of dnsIpv4Addresses.
     */
    public int getDnsIpv4AddressesCount() {
      return dnsIpv4Addresses_.size();
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param index The index of the element to return.
     * @return The dnsIpv4Addresses at the given index.
     */
    public java.lang.String getDnsIpv4Addresses(int index) {
      return dnsIpv4Addresses_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the dnsIpv4Addresses at the given index.
     */
    public com.google.protobuf.ByteString getDnsIpv4AddressesBytes(int index) {
      return dnsIpv4Addresses_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The dnsIpv4Addresses to set.
     * @return This builder for chaining.
     */
    public Builder setDnsIpv4Addresses(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDnsIpv4AddressesIsMutable();
      dnsIpv4Addresses_.set(index, value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The dnsIpv4Addresses to add.
     * @return This builder for chaining.
     */
    public Builder addDnsIpv4Addresses(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDnsIpv4AddressesIsMutable();
      dnsIpv4Addresses_.add(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param values The dnsIpv4Addresses to add.
     * @return This builder for chaining.
     */
    public Builder addAllDnsIpv4Addresses(java.lang.Iterable<java.lang.String> values) {
      ensureDnsIpv4AddressesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, dnsIpv4Addresses_);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDnsIpv4Addresses() {
      dnsIpv4Addresses_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. DNS nameservers.
     * The GDC Infrastructure will resolve DNS queries via these IPs.
     * If unspecified, Google DNS is used.
     * </pre>
     *
     * <code>
     * repeated string dns_ipv4_addresses = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
     * </code>
     *
     * @param value The bytes of the dnsIpv4Addresses to add.
     * @return This builder for chaining.
     */
    public Builder addDnsIpv4AddressesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureDnsIpv4AddressesIsMutable();
      dnsIpv4Addresses_.add(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private int kubernetesPrimaryVlanId_;
    /**
     *
     *
     * <pre>
     * Optional. Kubernetes VLAN ID.
     * By default, the kubernetes node, including the primary kubernetes network,
     * are in the same VLAN as the machine management network.
     * For network segmentation purposes, these can optionally be separated.
     * </pre>
     *
     * <code>int32 kubernetes_primary_vlan_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The kubernetesPrimaryVlanId.
     */
    @java.lang.Override
    public int getKubernetesPrimaryVlanId() {
      return kubernetesPrimaryVlanId_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Kubernetes VLAN ID.
     * By default, the kubernetes node, including the primary kubernetes network,
     * are in the same VLAN as the machine management network.
     * For network segmentation purposes, these can optionally be separated.
     * </pre>
     *
     * <code>int32 kubernetes_primary_vlan_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The kubernetesPrimaryVlanId to set.
     * @return This builder for chaining.
     */
    public Builder setKubernetesPrimaryVlanId(int value) {

      kubernetesPrimaryVlanId_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Kubernetes VLAN ID.
     * By default, the kubernetes node, including the primary kubernetes network,
     * are in the same VLAN as the machine management network.
     * For network segmentation purposes, these can optionally be separated.
     * </pre>
     *
     * <code>int32 kubernetes_primary_vlan_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearKubernetesPrimaryVlanId() {
      bitField0_ = (bitField0_ & ~0x00000040);
      kubernetesPrimaryVlanId_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig)
  private static final com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig();
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ZoneNetworkConfig> PARSER =
      new com.google.protobuf.AbstractParser<ZoneNetworkConfig>() {
        @java.lang.Override
        public ZoneNetworkConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ZoneNetworkConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ZoneNetworkConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.ZoneNetworkConfig
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
