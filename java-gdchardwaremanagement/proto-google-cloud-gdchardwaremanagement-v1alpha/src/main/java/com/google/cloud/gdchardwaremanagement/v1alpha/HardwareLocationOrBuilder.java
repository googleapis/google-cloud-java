/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gdchardwaremanagement/v1alpha/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gdchardwaremanagement.v1alpha;

public interface HardwareLocationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gdchardwaremanagement.v1alpha.HardwareLocation)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Name of the site where the hardware are present.
   * Format: `projects/{project}/locations/{location}/sites/{site}`
   * </pre>
   *
   * <code>
   * string site = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The site.
   */
  java.lang.String getSite();
  /**
   *
   *
   * <pre>
   * Required. Name of the site where the hardware are present.
   * Format: `projects/{project}/locations/{location}/sites/{site}`
   * </pre>
   *
   * <code>
   * string site = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for site.
   */
  com.google.protobuf.ByteString getSiteBytes();

  /**
   *
   *
   * <pre>
   * Required. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
   * Rack 3.
   * </pre>
   *
   * <code>string rack_location = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The rackLocation.
   */
  java.lang.String getRackLocation();
  /**
   *
   *
   * <pre>
   * Required. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
   * Rack 3.
   * </pre>
   *
   * <code>string rack_location = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for rackLocation.
   */
  com.google.protobuf.ByteString getRackLocationBytes();

  /**
   *
   *
   * <pre>
   * Optional. Spaces occupied by the hardware in the rack.
   * If unset, this location is assumed to be the entire rack.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<com.google.cloud.gdchardwaremanagement.v1alpha.RackSpace> getRackSpaceList();
  /**
   *
   *
   * <pre>
   * Optional. Spaces occupied by the hardware in the rack.
   * If unset, this location is assumed to be the entire rack.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.gdchardwaremanagement.v1alpha.RackSpace getRackSpace(int index);
  /**
   *
   *
   * <pre>
   * Optional. Spaces occupied by the hardware in the rack.
   * If unset, this location is assumed to be the entire rack.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  int getRackSpaceCount();
  /**
   *
   *
   * <pre>
   * Optional. Spaces occupied by the hardware in the rack.
   * If unset, this location is assumed to be the entire rack.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<? extends com.google.cloud.gdchardwaremanagement.v1alpha.RackSpaceOrBuilder>
      getRackSpaceOrBuilderList();
  /**
   *
   *
   * <pre>
   * Optional. Spaces occupied by the hardware in the rack.
   * If unset, this location is assumed to be the entire rack.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.gdchardwaremanagement.v1alpha.RackSpaceOrBuilder getRackSpaceOrBuilder(
      int index);
}
