/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gdchardwaremanagement/v1alpha/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gdchardwaremanagement.v1alpha;

/**
 *
 *
 * <pre>
 * Physical properties of a hardware.
 * </pre>
 *
 * Protobuf type {@code google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo}
 */
public final class HardwarePhysicalInfo extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo)
    HardwarePhysicalInfoOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use HardwarePhysicalInfo.newBuilder() to construct.
  private HardwarePhysicalInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private HardwarePhysicalInfo() {
    powerReceptacle_ = 0;
    networkUplink_ = 0;
    voltage_ = 0;
    amperes_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new HardwarePhysicalInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
        .internal_static_google_cloud_gdchardwaremanagement_v1alpha_HardwarePhysicalInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
        .internal_static_google_cloud_gdchardwaremanagement_v1alpha_HardwarePhysicalInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.class,
            com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Valid power receptacle types.
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType}
   */
  public enum PowerReceptacleType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Facility plug type is unspecified.
     * </pre>
     *
     * <code>POWER_RECEPTACLE_TYPE_UNSPECIFIED = 0;</code>
     */
    POWER_RECEPTACLE_TYPE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * NEMA 5-15.
     * </pre>
     *
     * <code>NEMA_5_15 = 1;</code>
     */
    NEMA_5_15(1),
    /**
     *
     *
     * <pre>
     * C13.
     * </pre>
     *
     * <code>C_13 = 2;</code>
     */
    C_13(2),
    /**
     *
     *
     * <pre>
     * Standard european receptacle.
     * </pre>
     *
     * <code>STANDARD_EU = 3;</code>
     */
    STANDARD_EU(3),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Facility plug type is unspecified.
     * </pre>
     *
     * <code>POWER_RECEPTACLE_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int POWER_RECEPTACLE_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * NEMA 5-15.
     * </pre>
     *
     * <code>NEMA_5_15 = 1;</code>
     */
    public static final int NEMA_5_15_VALUE = 1;
    /**
     *
     *
     * <pre>
     * C13.
     * </pre>
     *
     * <code>C_13 = 2;</code>
     */
    public static final int C_13_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Standard european receptacle.
     * </pre>
     *
     * <code>STANDARD_EU = 3;</code>
     */
    public static final int STANDARD_EU_VALUE = 3;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PowerReceptacleType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PowerReceptacleType forNumber(int value) {
      switch (value) {
        case 0:
          return POWER_RECEPTACLE_TYPE_UNSPECIFIED;
        case 1:
          return NEMA_5_15;
        case 2:
          return C_13;
        case 3:
          return STANDARD_EU;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PowerReceptacleType>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<PowerReceptacleType>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PowerReceptacleType>() {
              public PowerReceptacleType findValueByNumber(int number) {
                return PowerReceptacleType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final PowerReceptacleType[] VALUES = values();

    public static PowerReceptacleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PowerReceptacleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType)
  }

  /**
   *
   *
   * <pre>
   * Valid network uplink types.
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType}
   */
  public enum NetworkUplinkType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Network uplink type is unspecified.
     * </pre>
     *
     * <code>NETWORK_UPLINK_TYPE_UNSPECIFIED = 0;</code>
     */
    NETWORK_UPLINK_TYPE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * RJ-45.
     * </pre>
     *
     * <code>RJ_45 = 1;</code>
     */
    RJ_45(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Network uplink type is unspecified.
     * </pre>
     *
     * <code>NETWORK_UPLINK_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int NETWORK_UPLINK_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * RJ-45.
     * </pre>
     *
     * <code>RJ_45 = 1;</code>
     */
    public static final int RJ_45_VALUE = 1;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NetworkUplinkType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NetworkUplinkType forNumber(int value) {
      switch (value) {
        case 0:
          return NETWORK_UPLINK_TYPE_UNSPECIFIED;
        case 1:
          return RJ_45;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NetworkUplinkType>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<NetworkUplinkType>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NetworkUplinkType>() {
              public NetworkUplinkType findValueByNumber(int number) {
                return NetworkUplinkType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.getDescriptor()
          .getEnumTypes()
          .get(1);
    }

    private static final NetworkUplinkType[] VALUES = values();

    public static NetworkUplinkType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NetworkUplinkType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType)
  }

  /**
   *
   *
   * <pre>
   * Valid voltage values.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage}
   */
  public enum Voltage implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Voltage is unspecified.
     * </pre>
     *
     * <code>VOLTAGE_UNSPECIFIED = 0;</code>
     */
    VOLTAGE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * 120V.
     * </pre>
     *
     * <code>VOLTAGE_110 = 1;</code>
     */
    VOLTAGE_110(1),
    /**
     *
     *
     * <pre>
     * 220V.
     * </pre>
     *
     * <code>VOLTAGE_220 = 3;</code>
     */
    VOLTAGE_220(3),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Voltage is unspecified.
     * </pre>
     *
     * <code>VOLTAGE_UNSPECIFIED = 0;</code>
     */
    public static final int VOLTAGE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * 120V.
     * </pre>
     *
     * <code>VOLTAGE_110 = 1;</code>
     */
    public static final int VOLTAGE_110_VALUE = 1;
    /**
     *
     *
     * <pre>
     * 220V.
     * </pre>
     *
     * <code>VOLTAGE_220 = 3;</code>
     */
    public static final int VOLTAGE_220_VALUE = 3;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Voltage valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Voltage forNumber(int value) {
      switch (value) {
        case 0:
          return VOLTAGE_UNSPECIFIED;
        case 1:
          return VOLTAGE_110;
        case 3:
          return VOLTAGE_220;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Voltage> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Voltage> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Voltage>() {
          public Voltage findValueByNumber(int number) {
            return Voltage.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.getDescriptor()
          .getEnumTypes()
          .get(2);
    }

    private static final Voltage[] VALUES = values();

    public static Voltage valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Voltage(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage)
  }

  /**
   *
   *
   * <pre>
   * Valid amperes values.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes}
   */
  public enum Amperes implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Amperes is unspecified.
     * </pre>
     *
     * <code>AMPERES_UNSPECIFIED = 0;</code>
     */
    AMPERES_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * 15A.
     * </pre>
     *
     * <code>AMPERES_15 = 1;</code>
     */
    AMPERES_15(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Amperes is unspecified.
     * </pre>
     *
     * <code>AMPERES_UNSPECIFIED = 0;</code>
     */
    public static final int AMPERES_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * 15A.
     * </pre>
     *
     * <code>AMPERES_15 = 1;</code>
     */
    public static final int AMPERES_15_VALUE = 1;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Amperes valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Amperes forNumber(int value) {
      switch (value) {
        case 0:
          return AMPERES_UNSPECIFIED;
        case 1:
          return AMPERES_15;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Amperes> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Amperes> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Amperes>() {
          public Amperes findValueByNumber(int number) {
            return Amperes.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.getDescriptor()
          .getEnumTypes()
          .get(3);
    }

    private static final Amperes[] VALUES = values();

    public static Amperes valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Amperes(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes)
  }

  public static final int POWER_RECEPTACLE_FIELD_NUMBER = 1;
  private int powerReceptacle_ = 0;
  /**
   *
   *
   * <pre>
   * Required. The power receptacle type.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for powerReceptacle.
   */
  @java.lang.Override
  public int getPowerReceptacleValue() {
    return powerReceptacle_;
  }
  /**
   *
   *
   * <pre>
   * Required. The power receptacle type.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The powerReceptacle.
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
      getPowerReceptacle() {
    com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType result =
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
            .forNumber(powerReceptacle_);
    return result == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
            .UNRECOGNIZED
        : result;
  }

  public static final int NETWORK_UPLINK_FIELD_NUMBER = 2;
  private int networkUplink_ = 0;
  /**
   *
   *
   * <pre>
   * Required. Type of the uplink network connection.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for networkUplink.
   */
  @java.lang.Override
  public int getNetworkUplinkValue() {
    return networkUplink_;
  }
  /**
   *
   *
   * <pre>
   * Required. Type of the uplink network connection.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The networkUplink.
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
      getNetworkUplink() {
    com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType result =
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
            .forNumber(networkUplink_);
    return result == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
            .UNRECOGNIZED
        : result;
  }

  public static final int VOLTAGE_FIELD_NUMBER = 3;
  private int voltage_ = 0;
  /**
   *
   *
   * <pre>
   * Required. Voltage of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for voltage.
   */
  @java.lang.Override
  public int getVoltageValue() {
    return voltage_;
  }
  /**
   *
   *
   * <pre>
   * Required. Voltage of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The voltage.
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage getVoltage() {
    com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage result =
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage.forNumber(
            voltage_);
    return result == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage.UNRECOGNIZED
        : result;
  }

  public static final int AMPERES_FIELD_NUMBER = 4;
  private int amperes_ = 0;
  /**
   *
   *
   * <pre>
   * Required. Amperes of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for amperes.
   */
  @java.lang.Override
  public int getAmperesValue() {
    return amperes_;
  }
  /**
   *
   *
   * <pre>
   * Required. Amperes of the power supply.
   * </pre>
   *
   * <code>
   * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The amperes.
   */
  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes getAmperes() {
    com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes result =
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes.forNumber(
            amperes_);
    return result == null
        ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (powerReceptacle_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
            .POWER_RECEPTACLE_TYPE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, powerReceptacle_);
    }
    if (networkUplink_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
            .NETWORK_UPLINK_TYPE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(2, networkUplink_);
    }
    if (voltage_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage
            .VOLTAGE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(3, voltage_);
    }
    if (amperes_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes
            .AMPERES_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(4, amperes_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (powerReceptacle_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
            .POWER_RECEPTACLE_TYPE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, powerReceptacle_);
    }
    if (networkUplink_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
            .NETWORK_UPLINK_TYPE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, networkUplink_);
    }
    if (voltage_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage
            .VOLTAGE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, voltage_);
    }
    if (amperes_
        != com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes
            .AMPERES_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, amperes_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo)) {
      return super.equals(obj);
    }
    com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo other =
        (com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo) obj;

    if (powerReceptacle_ != other.powerReceptacle_) return false;
    if (networkUplink_ != other.networkUplink_) return false;
    if (voltage_ != other.voltage_) return false;
    if (amperes_ != other.amperes_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POWER_RECEPTACLE_FIELD_NUMBER;
    hash = (53 * hash) + powerReceptacle_;
    hash = (37 * hash) + NETWORK_UPLINK_FIELD_NUMBER;
    hash = (53 * hash) + networkUplink_;
    hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
    hash = (53 * hash) + voltage_;
    hash = (37 * hash) + AMPERES_FIELD_NUMBER;
    hash = (53 * hash) + amperes_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Physical properties of a hardware.
   * </pre>
   *
   * Protobuf type {@code google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo)
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
          .internal_static_google_cloud_gdchardwaremanagement_v1alpha_HardwarePhysicalInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
          .internal_static_google_cloud_gdchardwaremanagement_v1alpha_HardwarePhysicalInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.class,
              com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Builder.class);
    }

    // Construct using
    // com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      powerReceptacle_ = 0;
      networkUplink_ = 0;
      voltage_ = 0;
      amperes_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.ResourcesProto
          .internal_static_google_cloud_gdchardwaremanagement_v1alpha_HardwarePhysicalInfo_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
        getDefaultInstanceForType() {
      return com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo build() {
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo buildPartial() {
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo result =
          new com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.powerReceptacle_ = powerReceptacle_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.networkUplink_ = networkUplink_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.voltage_ = voltage_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.amperes_ = amperes_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo) {
        return mergeFrom(
            (com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo other) {
      if (other
          == com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
              .getDefaultInstance()) return this;
      if (other.powerReceptacle_ != 0) {
        setPowerReceptacleValue(other.getPowerReceptacleValue());
      }
      if (other.networkUplink_ != 0) {
        setNetworkUplinkValue(other.getNetworkUplinkValue());
      }
      if (other.voltage_ != 0) {
        setVoltageValue(other.getVoltageValue());
      }
      if (other.amperes_ != 0) {
        setAmperesValue(other.getAmperesValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                powerReceptacle_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 16:
              {
                networkUplink_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 24:
              {
                voltage_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 32:
              {
                amperes_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int powerReceptacle_ = 0;
    /**
     *
     *
     * <pre>
     * Required. The power receptacle type.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for powerReceptacle.
     */
    @java.lang.Override
    public int getPowerReceptacleValue() {
      return powerReceptacle_;
    }
    /**
     *
     *
     * <pre>
     * Required. The power receptacle type.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for powerReceptacle to set.
     * @return This builder for chaining.
     */
    public Builder setPowerReceptacleValue(int value) {
      powerReceptacle_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The power receptacle type.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The powerReceptacle.
     */
    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
        getPowerReceptacle() {
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
          result =
              com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
                  .PowerReceptacleType.forNumber(powerReceptacle_);
      return result == null
          ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
              .UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. The power receptacle type.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The powerReceptacle to set.
     * @return This builder for chaining.
     */
    public Builder setPowerReceptacle(
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType
            value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      powerReceptacle_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The power receptacle type.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.PowerReceptacleType power_receptacle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPowerReceptacle() {
      bitField0_ = (bitField0_ & ~0x00000001);
      powerReceptacle_ = 0;
      onChanged();
      return this;
    }

    private int networkUplink_ = 0;
    /**
     *
     *
     * <pre>
     * Required. Type of the uplink network connection.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for networkUplink.
     */
    @java.lang.Override
    public int getNetworkUplinkValue() {
      return networkUplink_;
    }
    /**
     *
     *
     * <pre>
     * Required. Type of the uplink network connection.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for networkUplink to set.
     * @return This builder for chaining.
     */
    public Builder setNetworkUplinkValue(int value) {
      networkUplink_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Type of the uplink network connection.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The networkUplink.
     */
    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
        getNetworkUplink() {
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType result =
          com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
              .forNumber(networkUplink_);
      return result == null
          ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
              .UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. Type of the uplink network connection.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The networkUplink to set.
     * @return This builder for chaining.
     */
    public Builder setNetworkUplink(
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType
            value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      networkUplink_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Type of the uplink network connection.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.NetworkUplinkType network_uplink = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearNetworkUplink() {
      bitField0_ = (bitField0_ & ~0x00000002);
      networkUplink_ = 0;
      onChanged();
      return this;
    }

    private int voltage_ = 0;
    /**
     *
     *
     * <pre>
     * Required. Voltage of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for voltage.
     */
    @java.lang.Override
    public int getVoltageValue() {
      return voltage_;
    }
    /**
     *
     *
     * <pre>
     * Required. Voltage of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for voltage to set.
     * @return This builder for chaining.
     */
    public Builder setVoltageValue(int value) {
      voltage_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Voltage of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The voltage.
     */
    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage
        getVoltage() {
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage result =
          com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage.forNumber(
              voltage_);
      return result == null
          ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. Voltage of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The voltage to set.
     * @return This builder for chaining.
     */
    public Builder setVoltage(
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      voltage_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Voltage of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Voltage voltage = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVoltage() {
      bitField0_ = (bitField0_ & ~0x00000004);
      voltage_ = 0;
      onChanged();
      return this;
    }

    private int amperes_ = 0;
    /**
     *
     *
     * <pre>
     * Required. Amperes of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for amperes.
     */
    @java.lang.Override
    public int getAmperesValue() {
      return amperes_;
    }
    /**
     *
     *
     * <pre>
     * Required. Amperes of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for amperes to set.
     * @return This builder for chaining.
     */
    public Builder setAmperesValue(int value) {
      amperes_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Amperes of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The amperes.
     */
    @java.lang.Override
    public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes
        getAmperes() {
      com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes result =
          com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes.forNumber(
              amperes_);
      return result == null
          ? com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. Amperes of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The amperes to set.
     * @return This builder for chaining.
     */
    public Builder setAmperes(
        com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      amperes_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Amperes of the power supply.
     * </pre>
     *
     * <code>
     * .google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo.Amperes amperes = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAmperes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      amperes_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo)
  private static final com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo();
  }

  public static com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HardwarePhysicalInfo> PARSER =
      new com.google.protobuf.AbstractParser<HardwarePhysicalInfo>() {
        @java.lang.Override
        public HardwarePhysicalInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<HardwarePhysicalInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HardwarePhysicalInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
