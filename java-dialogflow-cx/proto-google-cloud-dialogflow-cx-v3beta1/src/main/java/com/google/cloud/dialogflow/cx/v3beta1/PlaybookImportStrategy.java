/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/cx/v3beta1/playbook.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.dialogflow.cx.v3beta1;

/**
 *
 *
 * <pre>
 * The playbook import strategy used for resource conflict resolution associated
 * with an
 * [ImportPlaybookRequest][google.cloud.dialogflow.cx.v3beta1.ImportPlaybookRequest].
 * </pre>
 *
 * Protobuf type {@code google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy}
 */
public final class PlaybookImportStrategy extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy)
    PlaybookImportStrategyOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use PlaybookImportStrategy.newBuilder() to construct.
  private PlaybookImportStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private PlaybookImportStrategy() {
    mainPlaybookImportStrategy_ = 0;
    nestedResourceImportStrategy_ = 0;
    toolImportStrategy_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new PlaybookImportStrategy();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.dialogflow.cx.v3beta1.PlaybookProto
        .internal_static_google_cloud_dialogflow_cx_v3beta1_PlaybookImportStrategy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.dialogflow.cx.v3beta1.PlaybookProto
        .internal_static_google_cloud_dialogflow_cx_v3beta1_PlaybookImportStrategy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.class,
            com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.Builder.class);
  }

  public static final int MAIN_PLAYBOOK_IMPORT_STRATEGY_FIELD_NUMBER = 4;
  private int mainPlaybookImportStrategy_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Specifies the import strategy used when resolving conflicts with
   * the main playbook. If not specified, 'CREATE_NEW' is assumed.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for mainPlaybookImportStrategy.
   */
  @java.lang.Override
  public int getMainPlaybookImportStrategyValue() {
    return mainPlaybookImportStrategy_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Specifies the import strategy used when resolving conflicts with
   * the main playbook. If not specified, 'CREATE_NEW' is assumed.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The mainPlaybookImportStrategy.
   */
  @java.lang.Override
  public com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy getMainPlaybookImportStrategy() {
    com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy result =
        com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.forNumber(
            mainPlaybookImportStrategy_);
    return result == null
        ? com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.UNRECOGNIZED
        : result;
  }

  public static final int NESTED_RESOURCE_IMPORT_STRATEGY_FIELD_NUMBER = 5;
  private int nestedResourceImportStrategy_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Specifies the import strategy used when resolving referenced
   * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for nestedResourceImportStrategy.
   */
  @java.lang.Override
  public int getNestedResourceImportStrategyValue() {
    return nestedResourceImportStrategy_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Specifies the import strategy used when resolving referenced
   * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The nestedResourceImportStrategy.
   */
  @java.lang.Override
  public com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy getNestedResourceImportStrategy() {
    com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy result =
        com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.forNumber(
            nestedResourceImportStrategy_);
    return result == null
        ? com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.UNRECOGNIZED
        : result;
  }

  public static final int TOOL_IMPORT_STRATEGY_FIELD_NUMBER = 6;
  private int toolImportStrategy_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Specifies the import strategy used when resolving tool conflicts.
   * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
   * main playbook and nested resource import strategies, meaning if the
   * playbook that references the tool is skipped, the tool will also be
   * skipped.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for toolImportStrategy.
   */
  @java.lang.Override
  public int getToolImportStrategyValue() {
    return toolImportStrategy_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Specifies the import strategy used when resolving tool conflicts.
   * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
   * main playbook and nested resource import strategies, meaning if the
   * playbook that references the tool is skipped, the tool will also be
   * skipped.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The toolImportStrategy.
   */
  @java.lang.Override
  public com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy getToolImportStrategy() {
    com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy result =
        com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.forNumber(toolImportStrategy_);
    return result == null
        ? com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (mainPlaybookImportStrategy_
        != com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.IMPORT_STRATEGY_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(4, mainPlaybookImportStrategy_);
    }
    if (nestedResourceImportStrategy_
        != com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.IMPORT_STRATEGY_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(5, nestedResourceImportStrategy_);
    }
    if (toolImportStrategy_
        != com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.IMPORT_STRATEGY_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(6, toolImportStrategy_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (mainPlaybookImportStrategy_
        != com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.IMPORT_STRATEGY_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, mainPlaybookImportStrategy_);
    }
    if (nestedResourceImportStrategy_
        != com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.IMPORT_STRATEGY_UNSPECIFIED
            .getNumber()) {
      size +=
          com.google.protobuf.CodedOutputStream.computeEnumSize(5, nestedResourceImportStrategy_);
    }
    if (toolImportStrategy_
        != com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.IMPORT_STRATEGY_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, toolImportStrategy_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy)) {
      return super.equals(obj);
    }
    com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy other =
        (com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy) obj;

    if (mainPlaybookImportStrategy_ != other.mainPlaybookImportStrategy_) return false;
    if (nestedResourceImportStrategy_ != other.nestedResourceImportStrategy_) return false;
    if (toolImportStrategy_ != other.toolImportStrategy_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MAIN_PLAYBOOK_IMPORT_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + mainPlaybookImportStrategy_;
    hash = (37 * hash) + NESTED_RESOURCE_IMPORT_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + nestedResourceImportStrategy_;
    hash = (37 * hash) + TOOL_IMPORT_STRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + toolImportStrategy_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The playbook import strategy used for resource conflict resolution associated
   * with an
   * [ImportPlaybookRequest][google.cloud.dialogflow.cx.v3beta1.ImportPlaybookRequest].
   * </pre>
   *
   * Protobuf type {@code google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy)
      com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.dialogflow.cx.v3beta1.PlaybookProto
          .internal_static_google_cloud_dialogflow_cx_v3beta1_PlaybookImportStrategy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dialogflow.cx.v3beta1.PlaybookProto
          .internal_static_google_cloud_dialogflow_cx_v3beta1_PlaybookImportStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.class,
              com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.Builder.class);
    }

    // Construct using com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      mainPlaybookImportStrategy_ = 0;
      nestedResourceImportStrategy_ = 0;
      toolImportStrategy_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.dialogflow.cx.v3beta1.PlaybookProto
          .internal_static_google_cloud_dialogflow_cx_v3beta1_PlaybookImportStrategy_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy
        getDefaultInstanceForType() {
      return com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy build() {
      com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy buildPartial() {
      com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy result =
          new com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.mainPlaybookImportStrategy_ = mainPlaybookImportStrategy_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.nestedResourceImportStrategy_ = nestedResourceImportStrategy_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.toolImportStrategy_ = toolImportStrategy_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy) {
        return mergeFrom((com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy other) {
      if (other
          == com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy.getDefaultInstance())
        return this;
      if (other.mainPlaybookImportStrategy_ != 0) {
        setMainPlaybookImportStrategyValue(other.getMainPlaybookImportStrategyValue());
      }
      if (other.nestedResourceImportStrategy_ != 0) {
        setNestedResourceImportStrategyValue(other.getNestedResourceImportStrategyValue());
      }
      if (other.toolImportStrategy_ != 0) {
        setToolImportStrategyValue(other.getToolImportStrategyValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 32:
              {
                mainPlaybookImportStrategy_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 32
            case 40:
              {
                nestedResourceImportStrategy_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 40
            case 48:
              {
                toolImportStrategy_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 48
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int mainPlaybookImportStrategy_ = 0;

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving conflicts with
     * the main playbook. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for mainPlaybookImportStrategy.
     */
    @java.lang.Override
    public int getMainPlaybookImportStrategyValue() {
      return mainPlaybookImportStrategy_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving conflicts with
     * the main playbook. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for mainPlaybookImportStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setMainPlaybookImportStrategyValue(int value) {
      mainPlaybookImportStrategy_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving conflicts with
     * the main playbook. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The mainPlaybookImportStrategy.
     */
    @java.lang.Override
    public com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy getMainPlaybookImportStrategy() {
      com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy result =
          com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.forNumber(
              mainPlaybookImportStrategy_);
      return result == null
          ? com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving conflicts with
     * the main playbook. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The mainPlaybookImportStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setMainPlaybookImportStrategy(
        com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      mainPlaybookImportStrategy_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving conflicts with
     * the main playbook. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy main_playbook_import_strategy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMainPlaybookImportStrategy() {
      bitField0_ = (bitField0_ & ~0x00000001);
      mainPlaybookImportStrategy_ = 0;
      onChanged();
      return this;
    }

    private int nestedResourceImportStrategy_ = 0;

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving referenced
     * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for nestedResourceImportStrategy.
     */
    @java.lang.Override
    public int getNestedResourceImportStrategyValue() {
      return nestedResourceImportStrategy_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving referenced
     * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for nestedResourceImportStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setNestedResourceImportStrategyValue(int value) {
      nestedResourceImportStrategy_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving referenced
     * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The nestedResourceImportStrategy.
     */
    @java.lang.Override
    public com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy getNestedResourceImportStrategy() {
      com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy result =
          com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.forNumber(
              nestedResourceImportStrategy_);
      return result == null
          ? com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving referenced
     * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The nestedResourceImportStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setNestedResourceImportStrategy(
        com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      nestedResourceImportStrategy_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving referenced
     * playbook/flow conflicts. If not specified, 'CREATE_NEW' is assumed.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy nested_resource_import_strategy = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearNestedResourceImportStrategy() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nestedResourceImportStrategy_ = 0;
      onChanged();
      return this;
    }

    private int toolImportStrategy_ = 0;

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving tool conflicts.
     * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
     * main playbook and nested resource import strategies, meaning if the
     * playbook that references the tool is skipped, the tool will also be
     * skipped.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for toolImportStrategy.
     */
    @java.lang.Override
    public int getToolImportStrategyValue() {
      return toolImportStrategy_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving tool conflicts.
     * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
     * main playbook and nested resource import strategies, meaning if the
     * playbook that references the tool is skipped, the tool will also be
     * skipped.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for toolImportStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setToolImportStrategyValue(int value) {
      toolImportStrategy_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving tool conflicts.
     * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
     * main playbook and nested resource import strategies, meaning if the
     * playbook that references the tool is skipped, the tool will also be
     * skipped.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The toolImportStrategy.
     */
    @java.lang.Override
    public com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy getToolImportStrategy() {
      com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy result =
          com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.forNumber(toolImportStrategy_);
      return result == null
          ? com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving tool conflicts.
     * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
     * main playbook and nested resource import strategies, meaning if the
     * playbook that references the tool is skipped, the tool will also be
     * skipped.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The toolImportStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setToolImportStrategy(
        com.google.cloud.dialogflow.cx.v3beta1.ImportStrategy value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      toolImportStrategy_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Specifies the import strategy used when resolving tool conflicts.
     * If not specified, 'CREATE_NEW' is assumed. This will be applied after the
     * main playbook and nested resource import strategies, meaning if the
     * playbook that references the tool is skipped, the tool will also be
     * skipped.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.cx.v3beta1.ImportStrategy tool_import_strategy = 6 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearToolImportStrategy() {
      bitField0_ = (bitField0_ & ~0x00000004);
      toolImportStrategy_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy)
  private static final com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy();
  }

  public static com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlaybookImportStrategy> PARSER =
      new com.google.protobuf.AbstractParser<PlaybookImportStrategy>() {
        @java.lang.Override
        public PlaybookImportStrategy parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<PlaybookImportStrategy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlaybookImportStrategy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.dialogflow.cx.v3beta1.PlaybookImportStrategy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
