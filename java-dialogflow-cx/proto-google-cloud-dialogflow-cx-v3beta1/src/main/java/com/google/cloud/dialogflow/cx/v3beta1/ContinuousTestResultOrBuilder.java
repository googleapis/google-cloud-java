/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/cx/v3beta1/environment.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.dialogflow.cx.v3beta1;

public interface ContinuousTestResultOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.dialogflow.cx.v3beta1.ContinuousTestResult)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The resource name for the continuous test result. Format:
   * `projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/environments/&lt;EnvironmentID&gt;/continuousTestResults/&lt;ContinuousTestResultID&gt;`.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * The resource name for the continuous test result. Format:
   * `projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/environments/&lt;EnvironmentID&gt;/continuousTestResults/&lt;ContinuousTestResultID&gt;`.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * The result of this continuous test run, i.e. whether all the tests in this
   * continuous test run pass or not.
   * </pre>
   *
   * <code>.google.cloud.dialogflow.cx.v3beta1.ContinuousTestResult.AggregatedTestResult result = 2;
   * </code>
   *
   * @return The enum numeric value on the wire for result.
   */
  int getResultValue();
  /**
   *
   *
   * <pre>
   * The result of this continuous test run, i.e. whether all the tests in this
   * continuous test run pass or not.
   * </pre>
   *
   * <code>.google.cloud.dialogflow.cx.v3beta1.ContinuousTestResult.AggregatedTestResult result = 2;
   * </code>
   *
   * @return The result.
   */
  com.google.cloud.dialogflow.cx.v3beta1.ContinuousTestResult.AggregatedTestResult getResult();

  /**
   *
   *
   * <pre>
   * A list of individual test case results names in this continuous test run.
   * </pre>
   *
   * <code>repeated string test_case_results = 3 [(.google.api.resource_reference) = { ... }</code>
   *
   * @return A list containing the testCaseResults.
   */
  java.util.List<java.lang.String> getTestCaseResultsList();
  /**
   *
   *
   * <pre>
   * A list of individual test case results names in this continuous test run.
   * </pre>
   *
   * <code>repeated string test_case_results = 3 [(.google.api.resource_reference) = { ... }</code>
   *
   * @return The count of testCaseResults.
   */
  int getTestCaseResultsCount();
  /**
   *
   *
   * <pre>
   * A list of individual test case results names in this continuous test run.
   * </pre>
   *
   * <code>repeated string test_case_results = 3 [(.google.api.resource_reference) = { ... }</code>
   *
   * @param index The index of the element to return.
   * @return The testCaseResults at the given index.
   */
  java.lang.String getTestCaseResults(int index);
  /**
   *
   *
   * <pre>
   * A list of individual test case results names in this continuous test run.
   * </pre>
   *
   * <code>repeated string test_case_results = 3 [(.google.api.resource_reference) = { ... }</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the testCaseResults at the given index.
   */
  com.google.protobuf.ByteString getTestCaseResultsBytes(int index);

  /**
   *
   *
   * <pre>
   * Time when the continuous testing run starts.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp run_time = 4;</code>
   *
   * @return Whether the runTime field is set.
   */
  boolean hasRunTime();
  /**
   *
   *
   * <pre>
   * Time when the continuous testing run starts.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp run_time = 4;</code>
   *
   * @return The runTime.
   */
  com.google.protobuf.Timestamp getRunTime();
  /**
   *
   *
   * <pre>
   * Time when the continuous testing run starts.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp run_time = 4;</code>
   */
  com.google.protobuf.TimestampOrBuilder getRunTimeOrBuilder();
}
