/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vmmigration/v1/vmmigration.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.vmmigration.v1;

public interface DiskMigrationJobTargetDetailsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.vmmigration.v1.DiskMigrationJobTargetDetails)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The target disk.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineDisk target_disk = 8 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the targetDisk field is set.
   */
  boolean hasTargetDisk();

  /**
   *
   *
   * <pre>
   * Required. The target disk.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineDisk target_disk = 8 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The targetDisk.
   */
  com.google.cloud.vmmigration.v1.ComputeEngineDisk getTargetDisk();

  /**
   *
   *
   * <pre>
   * Required. The target disk.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineDisk target_disk = 8 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.vmmigration.v1.ComputeEngineDiskOrBuilder getTargetDiskOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. The name of the resource of type TargetProject which represents
   * the Compute Engine project in which to create the disk. Should be of the
   * form: projects/{project}/locations/global/targetProjects/{target-project}
   * </pre>
   *
   * <code>
   * string target_project = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The targetProject.
   */
  java.lang.String getTargetProject();

  /**
   *
   *
   * <pre>
   * Required. The name of the resource of type TargetProject which represents
   * the Compute Engine project in which to create the disk. Should be of the
   * form: projects/{project}/locations/global/targetProjects/{target-project}
   * </pre>
   *
   * <code>
   * string target_project = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for targetProject.
   */
  com.google.protobuf.ByteString getTargetProjectBytes();

  /**
   *
   *
   * <pre>
   * Optional. A map of labels to associate with the disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  int getLabelsCount();

  /**
   *
   *
   * <pre>
   * Optional. A map of labels to associate with the disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  boolean containsLabels(java.lang.String key);

  /** Use {@link #getLabelsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getLabels();

  /**
   *
   *
   * <pre>
   * Optional. A map of labels to associate with the disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getLabelsMap();

  /**
   *
   *
   * <pre>
   * Optional. A map of labels to associate with the disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  /* nullable */
  java.lang.String getLabelsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);

  /**
   *
   *
   * <pre>
   * Optional. A map of labels to associate with the disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.lang.String getLabelsOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * Optional. The encryption to apply to the disk.
   * If the DiskMigrationJob parent Source resource has an encryption, this
   * field must be set to the same encryption key.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.Encryption encryption = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the encryption field is set.
   */
  boolean hasEncryption();

  /**
   *
   *
   * <pre>
   * Optional. The encryption to apply to the disk.
   * If the DiskMigrationJob parent Source resource has an encryption, this
   * field must be set to the same encryption key.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.Encryption encryption = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The encryption.
   */
  com.google.cloud.vmmigration.v1.Encryption getEncryption();

  /**
   *
   *
   * <pre>
   * Optional. The encryption to apply to the disk.
   * If the DiskMigrationJob parent Source resource has an encryption, this
   * field must be set to the same encryption key.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.Encryption encryption = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.vmmigration.v1.EncryptionOrBuilder getEncryptionOrBuilder();

  com.google.cloud.vmmigration.v1.DiskMigrationJobTargetDetails.TargetStorageCase
      getTargetStorageCase();
}
