/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vmmigration/v1/vmmigration.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.vmmigration.v1;

/**
 *
 *
 * <pre>
 * Compute Engine disk target details.
 * </pre>
 *
 * Protobuf type {@code google.cloud.vmmigration.v1.ComputeEngineDisk}
 */
public final class ComputeEngineDisk extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.vmmigration.v1.ComputeEngineDisk)
    ComputeEngineDiskOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use ComputeEngineDisk.newBuilder() to construct.
  private ComputeEngineDisk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ComputeEngineDisk() {
    diskId_ = "";
    zone_ = "";
    replicaZones_ = com.google.protobuf.LazyStringArrayList.emptyList();
    diskType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ComputeEngineDisk();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.vmmigration.v1.VmMigrationProto
        .internal_static_google_cloud_vmmigration_v1_ComputeEngineDisk_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.vmmigration.v1.VmMigrationProto
        .internal_static_google_cloud_vmmigration_v1_ComputeEngineDisk_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.vmmigration.v1.ComputeEngineDisk.class,
            com.google.cloud.vmmigration.v1.ComputeEngineDisk.Builder.class);
  }

  public static final int DISK_ID_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object diskId_ = "";

  /**
   *
   *
   * <pre>
   * Optional. Target Compute Engine Disk ID.
   * This is the resource ID segment of the Compute Engine Disk to create.
   * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
   * "disk1" is the resource ID for the disk.
   * </pre>
   *
   * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The diskId.
   */
  @java.lang.Override
  public java.lang.String getDiskId() {
    java.lang.Object ref = diskId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      diskId_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. Target Compute Engine Disk ID.
   * This is the resource ID segment of the Compute Engine Disk to create.
   * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
   * "disk1" is the resource ID for the disk.
   * </pre>
   *
   * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for diskId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDiskIdBytes() {
    java.lang.Object ref = diskId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      diskId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ZONE_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object zone_ = "";

  /**
   *
   *
   * <pre>
   * Required. The Compute Engine zone in which to create the disk. Should be of
   * the form: projects/{target-project}/locations/{zone}
   * </pre>
   *
   * <code>
   * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The zone.
   */
  @java.lang.Override
  public java.lang.String getZone() {
    java.lang.Object ref = zone_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      zone_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. The Compute Engine zone in which to create the disk. Should be of
   * the form: projects/{target-project}/locations/{zone}
   * </pre>
   *
   * <code>
   * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for zone.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getZoneBytes() {
    java.lang.Object ref = zone_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      zone_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPLICA_ZONES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList replicaZones_ =
      com.google.protobuf.LazyStringArrayList.emptyList();

  /**
   *
   *
   * <pre>
   * Optional. Replication zones of the regional disk. Should be of the form:
   * projects/{target-project}/locations/{replica-zone}
   * Currently only one replica zone is supported.
   * </pre>
   *
   * <code>
   * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return A list containing the replicaZones.
   */
  public com.google.protobuf.ProtocolStringList getReplicaZonesList() {
    return replicaZones_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Replication zones of the regional disk. Should be of the form:
   * projects/{target-project}/locations/{replica-zone}
   * Currently only one replica zone is supported.
   * </pre>
   *
   * <code>
   * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The count of replicaZones.
   */
  public int getReplicaZonesCount() {
    return replicaZones_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Replication zones of the regional disk. Should be of the form:
   * projects/{target-project}/locations/{replica-zone}
   * Currently only one replica zone is supported.
   * </pre>
   *
   * <code>
   * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @param index The index of the element to return.
   * @return The replicaZones at the given index.
   */
  public java.lang.String getReplicaZones(int index) {
    return replicaZones_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. Replication zones of the regional disk. Should be of the form:
   * projects/{target-project}/locations/{replica-zone}
   * Currently only one replica zone is supported.
   * </pre>
   *
   * <code>
   * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the replicaZones at the given index.
   */
  public com.google.protobuf.ByteString getReplicaZonesBytes(int index) {
    return replicaZones_.getByteString(index);
  }

  public static final int DISK_TYPE_FIELD_NUMBER = 4;
  private int diskType_ = 0;

  /**
   *
   *
   * <pre>
   * Required. The disk type to use.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for diskType.
   */
  @java.lang.Override
  public int getDiskTypeValue() {
    return diskType_;
  }

  /**
   *
   *
   * <pre>
   * Required. The disk type to use.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The diskType.
   */
  @java.lang.Override
  public com.google.cloud.vmmigration.v1.ComputeEngineDiskType getDiskType() {
    com.google.cloud.vmmigration.v1.ComputeEngineDiskType result =
        com.google.cloud.vmmigration.v1.ComputeEngineDiskType.forNumber(diskType_);
    return result == null
        ? com.google.cloud.vmmigration.v1.ComputeEngineDiskType.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(diskId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, diskId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(zone_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, zone_);
    }
    for (int i = 0; i < replicaZones_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, replicaZones_.getRaw(i));
    }
    if (diskType_
        != com.google.cloud.vmmigration.v1.ComputeEngineDiskType
            .COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(4, diskType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(diskId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, diskId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(zone_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, zone_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < replicaZones_.size(); i++) {
        dataSize += computeStringSizeNoTag(replicaZones_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getReplicaZonesList().size();
    }
    if (diskType_
        != com.google.cloud.vmmigration.v1.ComputeEngineDiskType
            .COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, diskType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.vmmigration.v1.ComputeEngineDisk)) {
      return super.equals(obj);
    }
    com.google.cloud.vmmigration.v1.ComputeEngineDisk other =
        (com.google.cloud.vmmigration.v1.ComputeEngineDisk) obj;

    if (!getDiskId().equals(other.getDiskId())) return false;
    if (!getZone().equals(other.getZone())) return false;
    if (!getReplicaZonesList().equals(other.getReplicaZonesList())) return false;
    if (diskType_ != other.diskType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DISK_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDiskId().hashCode();
    hash = (37 * hash) + ZONE_FIELD_NUMBER;
    hash = (53 * hash) + getZone().hashCode();
    if (getReplicaZonesCount() > 0) {
      hash = (37 * hash) + REPLICA_ZONES_FIELD_NUMBER;
      hash = (53 * hash) + getReplicaZonesList().hashCode();
    }
    hash = (37 * hash) + DISK_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + diskType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.vmmigration.v1.ComputeEngineDisk prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Compute Engine disk target details.
   * </pre>
   *
   * Protobuf type {@code google.cloud.vmmigration.v1.ComputeEngineDisk}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.vmmigration.v1.ComputeEngineDisk)
      com.google.cloud.vmmigration.v1.ComputeEngineDiskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.vmmigration.v1.VmMigrationProto
          .internal_static_google_cloud_vmmigration_v1_ComputeEngineDisk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.vmmigration.v1.VmMigrationProto
          .internal_static_google_cloud_vmmigration_v1_ComputeEngineDisk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.vmmigration.v1.ComputeEngineDisk.class,
              com.google.cloud.vmmigration.v1.ComputeEngineDisk.Builder.class);
    }

    // Construct using com.google.cloud.vmmigration.v1.ComputeEngineDisk.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      diskId_ = "";
      zone_ = "";
      replicaZones_ = com.google.protobuf.LazyStringArrayList.emptyList();
      diskType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.vmmigration.v1.VmMigrationProto
          .internal_static_google_cloud_vmmigration_v1_ComputeEngineDisk_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.vmmigration.v1.ComputeEngineDisk getDefaultInstanceForType() {
      return com.google.cloud.vmmigration.v1.ComputeEngineDisk.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.vmmigration.v1.ComputeEngineDisk build() {
      com.google.cloud.vmmigration.v1.ComputeEngineDisk result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.vmmigration.v1.ComputeEngineDisk buildPartial() {
      com.google.cloud.vmmigration.v1.ComputeEngineDisk result =
          new com.google.cloud.vmmigration.v1.ComputeEngineDisk(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.vmmigration.v1.ComputeEngineDisk result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.diskId_ = diskId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.zone_ = zone_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        replicaZones_.makeImmutable();
        result.replicaZones_ = replicaZones_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.diskType_ = diskType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.vmmigration.v1.ComputeEngineDisk) {
        return mergeFrom((com.google.cloud.vmmigration.v1.ComputeEngineDisk) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.vmmigration.v1.ComputeEngineDisk other) {
      if (other == com.google.cloud.vmmigration.v1.ComputeEngineDisk.getDefaultInstance())
        return this;
      if (!other.getDiskId().isEmpty()) {
        diskId_ = other.diskId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getZone().isEmpty()) {
        zone_ = other.zone_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.replicaZones_.isEmpty()) {
        if (replicaZones_.isEmpty()) {
          replicaZones_ = other.replicaZones_;
          bitField0_ |= 0x00000004;
        } else {
          ensureReplicaZonesIsMutable();
          replicaZones_.addAll(other.replicaZones_);
        }
        onChanged();
      }
      if (other.diskType_ != 0) {
        setDiskTypeValue(other.getDiskTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                diskId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                zone_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureReplicaZonesIsMutable();
                replicaZones_.add(s);
                break;
              } // case 26
            case 32:
              {
                diskType_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object diskId_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Target Compute Engine Disk ID.
     * This is the resource ID segment of the Compute Engine Disk to create.
     * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
     * "disk1" is the resource ID for the disk.
     * </pre>
     *
     * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The diskId.
     */
    public java.lang.String getDiskId() {
      java.lang.Object ref = diskId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diskId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Target Compute Engine Disk ID.
     * This is the resource ID segment of the Compute Engine Disk to create.
     * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
     * "disk1" is the resource ID for the disk.
     * </pre>
     *
     * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for diskId.
     */
    public com.google.protobuf.ByteString getDiskIdBytes() {
      java.lang.Object ref = diskId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        diskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Target Compute Engine Disk ID.
     * This is the resource ID segment of the Compute Engine Disk to create.
     * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
     * "disk1" is the resource ID for the disk.
     * </pre>
     *
     * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The diskId to set.
     * @return This builder for chaining.
     */
    public Builder setDiskId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      diskId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Target Compute Engine Disk ID.
     * This is the resource ID segment of the Compute Engine Disk to create.
     * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
     * "disk1" is the resource ID for the disk.
     * </pre>
     *
     * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDiskId() {
      diskId_ = getDefaultInstance().getDiskId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Target Compute Engine Disk ID.
     * This is the resource ID segment of the Compute Engine Disk to create.
     * In the resource name compute/v1/projects/{project}/zones/{zone}/disks/disk1
     * "disk1" is the resource ID for the disk.
     * </pre>
     *
     * <code>string disk_id = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for diskId to set.
     * @return This builder for chaining.
     */
    public Builder setDiskIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      diskId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object zone_ = "";

    /**
     *
     *
     * <pre>
     * Required. The Compute Engine zone in which to create the disk. Should be of
     * the form: projects/{target-project}/locations/{zone}
     * </pre>
     *
     * <code>
     * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The zone.
     */
    public java.lang.String getZone() {
      java.lang.Object ref = zone_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        zone_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The Compute Engine zone in which to create the disk. Should be of
     * the form: projects/{target-project}/locations/{zone}
     * </pre>
     *
     * <code>
     * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for zone.
     */
    public com.google.protobuf.ByteString getZoneBytes() {
      java.lang.Object ref = zone_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        zone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The Compute Engine zone in which to create the disk. Should be of
     * the form: projects/{target-project}/locations/{zone}
     * </pre>
     *
     * <code>
     * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The zone to set.
     * @return This builder for chaining.
     */
    public Builder setZone(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      zone_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The Compute Engine zone in which to create the disk. Should be of
     * the form: projects/{target-project}/locations/{zone}
     * </pre>
     *
     * <code>
     * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearZone() {
      zone_ = getDefaultInstance().getZone();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The Compute Engine zone in which to create the disk. Should be of
     * the form: projects/{target-project}/locations/{zone}
     * </pre>
     *
     * <code>
     * string zone = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for zone to set.
     * @return This builder for chaining.
     */
    public Builder setZoneBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      zone_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList replicaZones_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureReplicaZonesIsMutable() {
      if (!replicaZones_.isModifiable()) {
        replicaZones_ = new com.google.protobuf.LazyStringArrayList(replicaZones_);
      }
      bitField0_ |= 0x00000004;
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return A list containing the replicaZones.
     */
    public com.google.protobuf.ProtocolStringList getReplicaZonesList() {
      replicaZones_.makeImmutable();
      return replicaZones_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The count of replicaZones.
     */
    public int getReplicaZonesCount() {
      return replicaZones_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param index The index of the element to return.
     * @return The replicaZones at the given index.
     */
    public java.lang.String getReplicaZones(int index) {
      return replicaZones_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the replicaZones at the given index.
     */
    public com.google.protobuf.ByteString getReplicaZonesBytes(int index) {
      return replicaZones_.getByteString(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The replicaZones to set.
     * @return This builder for chaining.
     */
    public Builder setReplicaZones(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReplicaZonesIsMutable();
      replicaZones_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The replicaZones to add.
     * @return This builder for chaining.
     */
    public Builder addReplicaZones(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReplicaZonesIsMutable();
      replicaZones_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param values The replicaZones to add.
     * @return This builder for chaining.
     */
    public Builder addAllReplicaZones(java.lang.Iterable<java.lang.String> values) {
      ensureReplicaZonesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, replicaZones_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearReplicaZones() {
      replicaZones_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      ;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Replication zones of the regional disk. Should be of the form:
     * projects/{target-project}/locations/{replica-zone}
     * Currently only one replica zone is supported.
     * </pre>
     *
     * <code>
     * repeated string replica_zones = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes of the replicaZones to add.
     * @return This builder for chaining.
     */
    public Builder addReplicaZonesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureReplicaZonesIsMutable();
      replicaZones_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int diskType_ = 0;

    /**
     *
     *
     * <pre>
     * Required. The disk type to use.
     * </pre>
     *
     * <code>
     * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for diskType.
     */
    @java.lang.Override
    public int getDiskTypeValue() {
      return diskType_;
    }

    /**
     *
     *
     * <pre>
     * Required. The disk type to use.
     * </pre>
     *
     * <code>
     * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for diskType to set.
     * @return This builder for chaining.
     */
    public Builder setDiskTypeValue(int value) {
      diskType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The disk type to use.
     * </pre>
     *
     * <code>
     * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The diskType.
     */
    @java.lang.Override
    public com.google.cloud.vmmigration.v1.ComputeEngineDiskType getDiskType() {
      com.google.cloud.vmmigration.v1.ComputeEngineDiskType result =
          com.google.cloud.vmmigration.v1.ComputeEngineDiskType.forNumber(diskType_);
      return result == null
          ? com.google.cloud.vmmigration.v1.ComputeEngineDiskType.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Required. The disk type to use.
     * </pre>
     *
     * <code>
     * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The diskType to set.
     * @return This builder for chaining.
     */
    public Builder setDiskType(com.google.cloud.vmmigration.v1.ComputeEngineDiskType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      diskType_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The disk type to use.
     * </pre>
     *
     * <code>
     * .google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 4 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDiskType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      diskType_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.vmmigration.v1.ComputeEngineDisk)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.vmmigration.v1.ComputeEngineDisk)
  private static final com.google.cloud.vmmigration.v1.ComputeEngineDisk DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.vmmigration.v1.ComputeEngineDisk();
  }

  public static com.google.cloud.vmmigration.v1.ComputeEngineDisk getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ComputeEngineDisk> PARSER =
      new com.google.protobuf.AbstractParser<ComputeEngineDisk>() {
        @java.lang.Override
        public ComputeEngineDisk parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ComputeEngineDisk> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ComputeEngineDisk> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.vmmigration.v1.ComputeEngineDisk getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
