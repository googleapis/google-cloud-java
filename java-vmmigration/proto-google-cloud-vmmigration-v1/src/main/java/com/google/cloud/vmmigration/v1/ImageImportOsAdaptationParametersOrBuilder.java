/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vmmigration/v1/vmmigration.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.vmmigration.v1;

public interface ImageImportOsAdaptationParametersOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.vmmigration.v1.ImageImportOsAdaptationParameters)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Set to true in order to generalize the imported image.
   * The generalization process enables co-existence of multiple VMs created
   * from the same image.
   * For Windows, generalizing the image removes computer-specific information
   * such as installed drivers and the computer security identifier (SID).
   * </pre>
   *
   * <code>bool generalize = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The generalize.
   */
  boolean getGeneralize();

  /**
   *
   *
   * <pre>
   * Optional. Choose which type of license to apply to the imported image.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for licenseType.
   */
  int getLicenseTypeValue();

  /**
   *
   *
   * <pre>
   * Optional. Choose which type of license to apply to the imported image.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The licenseType.
   */
  com.google.cloud.vmmigration.v1.ComputeEngineLicenseType getLicenseType();

  /**
   *
   *
   * <pre>
   * Optional. By default the image will keep its existing boot option. Setting
   * this property will trigger an internal process which will convert the
   * image from using the existing boot option to another.
   * The size of the boot disk might be increased to allow the conversion
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.BootConversion boot_conversion = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for bootConversion.
   */
  int getBootConversionValue();

  /**
   *
   *
   * <pre>
   * Optional. By default the image will keep its existing boot option. Setting
   * this property will trigger an internal process which will convert the
   * image from using the existing boot option to another.
   * The size of the boot disk might be increased to allow the conversion
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.BootConversion boot_conversion = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The bootConversion.
   */
  com.google.cloud.vmmigration.v1.BootConversion getBootConversion();
}
