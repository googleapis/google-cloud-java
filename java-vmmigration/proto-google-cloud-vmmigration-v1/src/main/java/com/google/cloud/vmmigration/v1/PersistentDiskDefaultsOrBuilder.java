/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/vmmigration/v1/vmmigration.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.vmmigration.v1;

public interface PersistentDiskDefaultsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.vmmigration.v1.PersistentDiskDefaults)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The ordinal number of the source VM disk.
   * </pre>
   *
   * <code>int32 source_disk_number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The sourceDiskNumber.
   */
  int getSourceDiskNumber();

  /**
   *
   *
   * <pre>
   * Optional. The name of the Persistent Disk to create.
   * </pre>
   *
   * <code>string disk_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The diskName.
   */
  java.lang.String getDiskName();

  /**
   *
   *
   * <pre>
   * Optional. The name of the Persistent Disk to create.
   * </pre>
   *
   * <code>string disk_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for diskName.
   */
  com.google.protobuf.ByteString getDiskNameBytes();

  /**
   *
   *
   * <pre>
   * The disk type to use.
   * </pre>
   *
   * <code>.google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 3;</code>
   *
   * @return The enum numeric value on the wire for diskType.
   */
  int getDiskTypeValue();

  /**
   *
   *
   * <pre>
   * The disk type to use.
   * </pre>
   *
   * <code>.google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 3;</code>
   *
   * @return The diskType.
   */
  com.google.cloud.vmmigration.v1.ComputeEngineDiskType getDiskType();

  /**
   *
   *
   * <pre>
   * A map of labels to associate with the Persistent Disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; additional_labels = 4;</code>
   */
  int getAdditionalLabelsCount();

  /**
   *
   *
   * <pre>
   * A map of labels to associate with the Persistent Disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; additional_labels = 4;</code>
   */
  boolean containsAdditionalLabels(java.lang.String key);

  /** Use {@link #getAdditionalLabelsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getAdditionalLabels();

  /**
   *
   *
   * <pre>
   * A map of labels to associate with the Persistent Disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; additional_labels = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getAdditionalLabelsMap();

  /**
   *
   *
   * <pre>
   * A map of labels to associate with the Persistent Disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; additional_labels = 4;</code>
   */
  /* nullable */
  java.lang.String getAdditionalLabelsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);

  /**
   *
   *
   * <pre>
   * A map of labels to associate with the Persistent Disk.
   * </pre>
   *
   * <code>map&lt;string, string&gt; additional_labels = 4;</code>
   */
  java.lang.String getAdditionalLabelsOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * Optional. The encryption to apply to the disk.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.Encryption encryption = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the encryption field is set.
   */
  boolean hasEncryption();

  /**
   *
   *
   * <pre>
   * Optional. The encryption to apply to the disk.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.Encryption encryption = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The encryption.
   */
  com.google.cloud.vmmigration.v1.Encryption getEncryption();

  /**
   *
   *
   * <pre>
   * Optional. The encryption to apply to the disk.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.Encryption encryption = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.vmmigration.v1.EncryptionOrBuilder getEncryptionOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. Details for attachment of the disk to a VM.
   * Used when the disk is set to be attached to a target VM.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.VmAttachmentDetails vm_attachment_details = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the vmAttachmentDetails field is set.
   */
  boolean hasVmAttachmentDetails();

  /**
   *
   *
   * <pre>
   * Optional. Details for attachment of the disk to a VM.
   * Used when the disk is set to be attached to a target VM.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.VmAttachmentDetails vm_attachment_details = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The vmAttachmentDetails.
   */
  com.google.cloud.vmmigration.v1.VmAttachmentDetails getVmAttachmentDetails();

  /**
   *
   *
   * <pre>
   * Optional. Details for attachment of the disk to a VM.
   * Used when the disk is set to be attached to a target VM.
   * </pre>
   *
   * <code>
   * .google.cloud.vmmigration.v1.VmAttachmentDetails vm_attachment_details = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.vmmigration.v1.VmAttachmentDetailsOrBuilder getVmAttachmentDetailsOrBuilder();
}
