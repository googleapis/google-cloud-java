/*
 * Copyright 2025 The Grafeas Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grafeas/v1/intoto_provenance.proto

// Protobuf Java Version: 3.25.5
package io.grafeas.v1;

/**
 *
 *
 * <pre>
 * Steps taken to build the artifact.
 * For a TaskRun, typically each container corresponds to one step in the
 * recipe.
 * </pre>
 *
 * Protobuf type {@code grafeas.v1.Recipe}
 */
public final class Recipe extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:grafeas.v1.Recipe)
    RecipeOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Recipe.newBuilder() to construct.
  private Recipe(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Recipe() {
    type_ = "";
    entryPoint_ = "";
    arguments_ = java.util.Collections.emptyList();
    environment_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Recipe();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return io.grafeas.v1.InTotoProvenanceProto.internal_static_grafeas_v1_Recipe_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grafeas.v1.InTotoProvenanceProto.internal_static_grafeas_v1_Recipe_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grafeas.v1.Recipe.class, io.grafeas.v1.Recipe.Builder.class);
  }

  public static final int TYPE_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object type_ = "";
  /**
   *
   *
   * <pre>
   * URI indicating what type of recipe was performed. It determines the meaning
   * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
   * </pre>
   *
   * <code>string type = 1;</code>
   *
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * URI indicating what type of recipe was performed. It determines the meaning
   * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
   * </pre>
   *
   * <code>string type = 1;</code>
   *
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFINED_IN_MATERIAL_FIELD_NUMBER = 2;
  private long definedInMaterial_ = 0L;
  /**
   *
   *
   * <pre>
   * Index in materials containing the recipe steps that are not implied by
   * recipe.type. For example, if the recipe type were "make", then this would
   * point to the source containing the Makefile, not the make program itself.
   * Set to -1 if the recipe doesn't come from a material, as zero is default
   * unset value for int64.
   * </pre>
   *
   * <code>int64 defined_in_material = 2;</code>
   *
   * @return The definedInMaterial.
   */
  @java.lang.Override
  public long getDefinedInMaterial() {
    return definedInMaterial_;
  }

  public static final int ENTRY_POINT_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object entryPoint_ = "";
  /**
   *
   *
   * <pre>
   * String identifying the entry point into the build.
   * This is often a path to a configuration file and/or a target label within
   * that file. The syntax and meaning are defined by recipe.type. For example,
   * if the recipe type were "make", then this would reference the directory in
   * which to run make as well as which target to use.
   * </pre>
   *
   * <code>string entry_point = 3;</code>
   *
   * @return The entryPoint.
   */
  @java.lang.Override
  public java.lang.String getEntryPoint() {
    java.lang.Object ref = entryPoint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entryPoint_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * String identifying the entry point into the build.
   * This is often a path to a configuration file and/or a target label within
   * that file. The syntax and meaning are defined by recipe.type. For example,
   * if the recipe type were "make", then this would reference the directory in
   * which to run make as well as which target to use.
   * </pre>
   *
   * <code>string entry_point = 3;</code>
   *
   * @return The bytes for entryPoint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getEntryPointBytes() {
    java.lang.Object ref = entryPoint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      entryPoint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ARGUMENTS_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.Any> arguments_;
  /**
   *
   *
   * <pre>
   * Collection of all external inputs that influenced the build on top of
   * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
   * type were "make", then this might be the flags passed to make aside from
   * the target, which is captured in recipe.entryPoint. Since the arguments
   * field can greatly vary in structure, depending on the builder and recipe
   * type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any arguments = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.Any> getArgumentsList() {
    return arguments_;
  }
  /**
   *
   *
   * <pre>
   * Collection of all external inputs that influenced the build on top of
   * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
   * type were "make", then this might be the flags passed to make aside from
   * the target, which is captured in recipe.entryPoint. Since the arguments
   * field can greatly vary in structure, depending on the builder and recipe
   * type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any arguments = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.protobuf.AnyOrBuilder> getArgumentsOrBuilderList() {
    return arguments_;
  }
  /**
   *
   *
   * <pre>
   * Collection of all external inputs that influenced the build on top of
   * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
   * type were "make", then this might be the flags passed to make aside from
   * the target, which is captured in recipe.entryPoint. Since the arguments
   * field can greatly vary in structure, depending on the builder and recipe
   * type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any arguments = 4;</code>
   */
  @java.lang.Override
  public int getArgumentsCount() {
    return arguments_.size();
  }
  /**
   *
   *
   * <pre>
   * Collection of all external inputs that influenced the build on top of
   * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
   * type were "make", then this might be the flags passed to make aside from
   * the target, which is captured in recipe.entryPoint. Since the arguments
   * field can greatly vary in structure, depending on the builder and recipe
   * type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any arguments = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Any getArguments(int index) {
    return arguments_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Collection of all external inputs that influenced the build on top of
   * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
   * type were "make", then this might be the flags passed to make aside from
   * the target, which is captured in recipe.entryPoint. Since the arguments
   * field can greatly vary in structure, depending on the builder and recipe
   * type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any arguments = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getArgumentsOrBuilder(int index) {
    return arguments_.get(index);
  }

  public static final int ENVIRONMENT_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.Any> environment_;
  /**
   *
   *
   * <pre>
   * Any other builder-controlled inputs necessary for correctly evaluating the
   * recipe. Usually only needed for reproducing the build but not evaluated as
   * part of policy. Since the environment field can greatly vary in structure,
   * depending on the builder and recipe type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any environment = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.Any> getEnvironmentList() {
    return environment_;
  }
  /**
   *
   *
   * <pre>
   * Any other builder-controlled inputs necessary for correctly evaluating the
   * recipe. Usually only needed for reproducing the build but not evaluated as
   * part of policy. Since the environment field can greatly vary in structure,
   * depending on the builder and recipe type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any environment = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.protobuf.AnyOrBuilder> getEnvironmentOrBuilderList() {
    return environment_;
  }
  /**
   *
   *
   * <pre>
   * Any other builder-controlled inputs necessary for correctly evaluating the
   * recipe. Usually only needed for reproducing the build but not evaluated as
   * part of policy. Since the environment field can greatly vary in structure,
   * depending on the builder and recipe type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any environment = 5;</code>
   */
  @java.lang.Override
  public int getEnvironmentCount() {
    return environment_.size();
  }
  /**
   *
   *
   * <pre>
   * Any other builder-controlled inputs necessary for correctly evaluating the
   * recipe. Usually only needed for reproducing the build but not evaluated as
   * part of policy. Since the environment field can greatly vary in structure,
   * depending on the builder and recipe type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any environment = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Any getEnvironment(int index) {
    return environment_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Any other builder-controlled inputs necessary for correctly evaluating the
   * recipe. Usually only needed for reproducing the build but not evaluated as
   * part of policy. Since the environment field can greatly vary in structure,
   * depending on the builder and recipe type, this is of form "Any".
   * </pre>
   *
   * <code>repeated .google.protobuf.Any environment = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getEnvironmentOrBuilder(int index) {
    return environment_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
    }
    if (definedInMaterial_ != 0L) {
      output.writeInt64(2, definedInMaterial_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entryPoint_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, entryPoint_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      output.writeMessage(4, arguments_.get(i));
    }
    for (int i = 0; i < environment_.size(); i++) {
      output.writeMessage(5, environment_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
    }
    if (definedInMaterial_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, definedInMaterial_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entryPoint_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, entryPoint_);
    }
    for (int i = 0; i < arguments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, arguments_.get(i));
    }
    for (int i = 0; i < environment_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, environment_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof io.grafeas.v1.Recipe)) {
      return super.equals(obj);
    }
    io.grafeas.v1.Recipe other = (io.grafeas.v1.Recipe) obj;

    if (!getType().equals(other.getType())) return false;
    if (getDefinedInMaterial() != other.getDefinedInMaterial()) return false;
    if (!getEntryPoint().equals(other.getEntryPoint())) return false;
    if (!getArgumentsList().equals(other.getArgumentsList())) return false;
    if (!getEnvironmentList().equals(other.getEnvironmentList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + DEFINED_IN_MATERIAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDefinedInMaterial());
    hash = (37 * hash) + ENTRY_POINT_FIELD_NUMBER;
    hash = (53 * hash) + getEntryPoint().hashCode();
    if (getArgumentsCount() > 0) {
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArgumentsList().hashCode();
    }
    if (getEnvironmentCount() > 0) {
      hash = (37 * hash) + ENVIRONMENT_FIELD_NUMBER;
      hash = (53 * hash) + getEnvironmentList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grafeas.v1.Recipe parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static io.grafeas.v1.Recipe parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static io.grafeas.v1.Recipe parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static io.grafeas.v1.Recipe parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static io.grafeas.v1.Recipe parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static io.grafeas.v1.Recipe parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static io.grafeas.v1.Recipe parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static io.grafeas.v1.Recipe parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static io.grafeas.v1.Recipe parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static io.grafeas.v1.Recipe parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static io.grafeas.v1.Recipe parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static io.grafeas.v1.Recipe parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(io.grafeas.v1.Recipe prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Steps taken to build the artifact.
   * For a TaskRun, typically each container corresponds to one step in the
   * recipe.
   * </pre>
   *
   * Protobuf type {@code grafeas.v1.Recipe}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:grafeas.v1.Recipe)
      io.grafeas.v1.RecipeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.grafeas.v1.InTotoProvenanceProto.internal_static_grafeas_v1_Recipe_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grafeas.v1.InTotoProvenanceProto
          .internal_static_grafeas_v1_Recipe_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grafeas.v1.Recipe.class, io.grafeas.v1.Recipe.Builder.class);
    }

    // Construct using io.grafeas.v1.Recipe.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = "";
      definedInMaterial_ = 0L;
      entryPoint_ = "";
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
      } else {
        arguments_ = null;
        argumentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (environmentBuilder_ == null) {
        environment_ = java.util.Collections.emptyList();
      } else {
        environment_ = null;
        environmentBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return io.grafeas.v1.InTotoProvenanceProto.internal_static_grafeas_v1_Recipe_descriptor;
    }

    @java.lang.Override
    public io.grafeas.v1.Recipe getDefaultInstanceForType() {
      return io.grafeas.v1.Recipe.getDefaultInstance();
    }

    @java.lang.Override
    public io.grafeas.v1.Recipe build() {
      io.grafeas.v1.Recipe result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.grafeas.v1.Recipe buildPartial() {
      io.grafeas.v1.Recipe result = new io.grafeas.v1.Recipe(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.grafeas.v1.Recipe result) {
      if (argumentsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          arguments_ = java.util.Collections.unmodifiableList(arguments_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.arguments_ = arguments_;
      } else {
        result.arguments_ = argumentsBuilder_.build();
      }
      if (environmentBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          environment_ = java.util.Collections.unmodifiableList(environment_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.environment_ = environment_;
      } else {
        result.environment_ = environmentBuilder_.build();
      }
    }

    private void buildPartial0(io.grafeas.v1.Recipe result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.definedInMaterial_ = definedInMaterial_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.entryPoint_ = entryPoint_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grafeas.v1.Recipe) {
        return mergeFrom((io.grafeas.v1.Recipe) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grafeas.v1.Recipe other) {
      if (other == io.grafeas.v1.Recipe.getDefaultInstance()) return this;
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getDefinedInMaterial() != 0L) {
        setDefinedInMaterial(other.getDefinedInMaterial());
      }
      if (!other.getEntryPoint().isEmpty()) {
        entryPoint_ = other.entryPoint_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (argumentsBuilder_ == null) {
        if (!other.arguments_.isEmpty()) {
          if (arguments_.isEmpty()) {
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureArgumentsIsMutable();
            arguments_.addAll(other.arguments_);
          }
          onChanged();
        }
      } else {
        if (!other.arguments_.isEmpty()) {
          if (argumentsBuilder_.isEmpty()) {
            argumentsBuilder_.dispose();
            argumentsBuilder_ = null;
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000008);
            argumentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getArgumentsFieldBuilder()
                    : null;
          } else {
            argumentsBuilder_.addAllMessages(other.arguments_);
          }
        }
      }
      if (environmentBuilder_ == null) {
        if (!other.environment_.isEmpty()) {
          if (environment_.isEmpty()) {
            environment_ = other.environment_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureEnvironmentIsMutable();
            environment_.addAll(other.environment_);
          }
          onChanged();
        }
      } else {
        if (!other.environment_.isEmpty()) {
          if (environmentBuilder_.isEmpty()) {
            environmentBuilder_.dispose();
            environmentBuilder_ = null;
            environment_ = other.environment_;
            bitField0_ = (bitField0_ & ~0x00000010);
            environmentBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getEnvironmentFieldBuilder()
                    : null;
          } else {
            environmentBuilder_.addAllMessages(other.environment_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                type_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                definedInMaterial_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 26:
              {
                entryPoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                com.google.protobuf.Any m =
                    input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
                if (argumentsBuilder_ == null) {
                  ensureArgumentsIsMutable();
                  arguments_.add(m);
                } else {
                  argumentsBuilder_.addMessage(m);
                }
                break;
              } // case 34
            case 42:
              {
                com.google.protobuf.Any m =
                    input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
                if (environmentBuilder_ == null) {
                  ensureEnvironmentIsMutable();
                  environment_.add(m);
                } else {
                  environmentBuilder_.addMessage(m);
                }
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object type_ = "";
    /**
     *
     *
     * <pre>
     * URI indicating what type of recipe was performed. It determines the meaning
     * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URI indicating what type of recipe was performed. It determines the meaning
     * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * URI indicating what type of recipe was performed. It determines the meaning
     * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URI indicating what type of recipe was performed. It determines the meaning
     * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearType() {
      type_ = getDefaultInstance().getType();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * URI indicating what type of recipe was performed. It determines the meaning
     * of recipe.entryPoint, recipe.arguments, recipe.environment, and materials.
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long definedInMaterial_;
    /**
     *
     *
     * <pre>
     * Index in materials containing the recipe steps that are not implied by
     * recipe.type. For example, if the recipe type were "make", then this would
     * point to the source containing the Makefile, not the make program itself.
     * Set to -1 if the recipe doesn't come from a material, as zero is default
     * unset value for int64.
     * </pre>
     *
     * <code>int64 defined_in_material = 2;</code>
     *
     * @return The definedInMaterial.
     */
    @java.lang.Override
    public long getDefinedInMaterial() {
      return definedInMaterial_;
    }
    /**
     *
     *
     * <pre>
     * Index in materials containing the recipe steps that are not implied by
     * recipe.type. For example, if the recipe type were "make", then this would
     * point to the source containing the Makefile, not the make program itself.
     * Set to -1 if the recipe doesn't come from a material, as zero is default
     * unset value for int64.
     * </pre>
     *
     * <code>int64 defined_in_material = 2;</code>
     *
     * @param value The definedInMaterial to set.
     * @return This builder for chaining.
     */
    public Builder setDefinedInMaterial(long value) {

      definedInMaterial_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Index in materials containing the recipe steps that are not implied by
     * recipe.type. For example, if the recipe type were "make", then this would
     * point to the source containing the Makefile, not the make program itself.
     * Set to -1 if the recipe doesn't come from a material, as zero is default
     * unset value for int64.
     * </pre>
     *
     * <code>int64 defined_in_material = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDefinedInMaterial() {
      bitField0_ = (bitField0_ & ~0x00000002);
      definedInMaterial_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object entryPoint_ = "";
    /**
     *
     *
     * <pre>
     * String identifying the entry point into the build.
     * This is often a path to a configuration file and/or a target label within
     * that file. The syntax and meaning are defined by recipe.type. For example,
     * if the recipe type were "make", then this would reference the directory in
     * which to run make as well as which target to use.
     * </pre>
     *
     * <code>string entry_point = 3;</code>
     *
     * @return The entryPoint.
     */
    public java.lang.String getEntryPoint() {
      java.lang.Object ref = entryPoint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entryPoint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * String identifying the entry point into the build.
     * This is often a path to a configuration file and/or a target label within
     * that file. The syntax and meaning are defined by recipe.type. For example,
     * if the recipe type were "make", then this would reference the directory in
     * which to run make as well as which target to use.
     * </pre>
     *
     * <code>string entry_point = 3;</code>
     *
     * @return The bytes for entryPoint.
     */
    public com.google.protobuf.ByteString getEntryPointBytes() {
      java.lang.Object ref = entryPoint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        entryPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * String identifying the entry point into the build.
     * This is often a path to a configuration file and/or a target label within
     * that file. The syntax and meaning are defined by recipe.type. For example,
     * if the recipe type were "make", then this would reference the directory in
     * which to run make as well as which target to use.
     * </pre>
     *
     * <code>string entry_point = 3;</code>
     *
     * @param value The entryPoint to set.
     * @return This builder for chaining.
     */
    public Builder setEntryPoint(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      entryPoint_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * String identifying the entry point into the build.
     * This is often a path to a configuration file and/or a target label within
     * that file. The syntax and meaning are defined by recipe.type. For example,
     * if the recipe type were "make", then this would reference the directory in
     * which to run make as well as which target to use.
     * </pre>
     *
     * <code>string entry_point = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEntryPoint() {
      entryPoint_ = getDefaultInstance().getEntryPoint();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * String identifying the entry point into the build.
     * This is often a path to a configuration file and/or a target label within
     * that file. The syntax and meaning are defined by recipe.type. For example,
     * if the recipe type were "make", then this would reference the directory in
     * which to run make as well as which target to use.
     * </pre>
     *
     * <code>string entry_point = 3;</code>
     *
     * @param value The bytes for entryPoint to set.
     * @return This builder for chaining.
     */
    public Builder setEntryPointBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      entryPoint_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.Any> arguments_ = java.util.Collections.emptyList();

    private void ensureArgumentsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        arguments_ = new java.util.ArrayList<com.google.protobuf.Any>(arguments_);
        bitField0_ |= 0x00000008;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any,
            com.google.protobuf.Any.Builder,
            com.google.protobuf.AnyOrBuilder>
        argumentsBuilder_;

    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public java.util.List<com.google.protobuf.Any> getArgumentsList() {
      if (argumentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(arguments_);
      } else {
        return argumentsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public int getArgumentsCount() {
      if (argumentsBuilder_ == null) {
        return arguments_.size();
      } else {
        return argumentsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public com.google.protobuf.Any getArguments(int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);
      } else {
        return argumentsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder setArguments(int index, com.google.protobuf.Any value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.set(index, value);
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder setArguments(int index, com.google.protobuf.Any.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.set(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder addArguments(com.google.protobuf.Any value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder addArguments(int index, com.google.protobuf.Any value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(index, value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder addArguments(com.google.protobuf.Any.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder addArguments(int index, com.google.protobuf.Any.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder addAllArguments(java.lang.Iterable<? extends com.google.protobuf.Any> values) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, arguments_);
        onChanged();
      } else {
        argumentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder clearArguments() {
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        argumentsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public Builder removeArguments(int index) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.remove(index);
        onChanged();
      } else {
        argumentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public com.google.protobuf.Any.Builder getArgumentsBuilder(int index) {
      return getArgumentsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public com.google.protobuf.AnyOrBuilder getArgumentsOrBuilder(int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);
      } else {
        return argumentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> getArgumentsOrBuilderList() {
      if (argumentsBuilder_ != null) {
        return argumentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(arguments_);
      }
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public com.google.protobuf.Any.Builder addArgumentsBuilder() {
      return getArgumentsFieldBuilder().addBuilder(com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public com.google.protobuf.Any.Builder addArgumentsBuilder(int index) {
      return getArgumentsFieldBuilder()
          .addBuilder(index, com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Collection of all external inputs that influenced the build on top of
     * recipe.definedInMaterial and recipe.entryPoint. For example, if the recipe
     * type were "make", then this might be the flags passed to make aside from
     * the target, which is captured in recipe.entryPoint. Since the arguments
     * field can greatly vary in structure, depending on the builder and recipe
     * type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any arguments = 4;</code>
     */
    public java.util.List<com.google.protobuf.Any.Builder> getArgumentsBuilderList() {
      return getArgumentsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any,
            com.google.protobuf.Any.Builder,
            com.google.protobuf.AnyOrBuilder>
        getArgumentsFieldBuilder() {
      if (argumentsBuilder_ == null) {
        argumentsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.protobuf.Any,
                com.google.protobuf.Any.Builder,
                com.google.protobuf.AnyOrBuilder>(
                arguments_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
        arguments_ = null;
      }
      return argumentsBuilder_;
    }

    private java.util.List<com.google.protobuf.Any> environment_ =
        java.util.Collections.emptyList();

    private void ensureEnvironmentIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        environment_ = new java.util.ArrayList<com.google.protobuf.Any>(environment_);
        bitField0_ |= 0x00000010;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any,
            com.google.protobuf.Any.Builder,
            com.google.protobuf.AnyOrBuilder>
        environmentBuilder_;

    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public java.util.List<com.google.protobuf.Any> getEnvironmentList() {
      if (environmentBuilder_ == null) {
        return java.util.Collections.unmodifiableList(environment_);
      } else {
        return environmentBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public int getEnvironmentCount() {
      if (environmentBuilder_ == null) {
        return environment_.size();
      } else {
        return environmentBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public com.google.protobuf.Any getEnvironment(int index) {
      if (environmentBuilder_ == null) {
        return environment_.get(index);
      } else {
        return environmentBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder setEnvironment(int index, com.google.protobuf.Any value) {
      if (environmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnvironmentIsMutable();
        environment_.set(index, value);
        onChanged();
      } else {
        environmentBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder setEnvironment(int index, com.google.protobuf.Any.Builder builderForValue) {
      if (environmentBuilder_ == null) {
        ensureEnvironmentIsMutable();
        environment_.set(index, builderForValue.build());
        onChanged();
      } else {
        environmentBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder addEnvironment(com.google.protobuf.Any value) {
      if (environmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnvironmentIsMutable();
        environment_.add(value);
        onChanged();
      } else {
        environmentBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder addEnvironment(int index, com.google.protobuf.Any value) {
      if (environmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnvironmentIsMutable();
        environment_.add(index, value);
        onChanged();
      } else {
        environmentBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder addEnvironment(com.google.protobuf.Any.Builder builderForValue) {
      if (environmentBuilder_ == null) {
        ensureEnvironmentIsMutable();
        environment_.add(builderForValue.build());
        onChanged();
      } else {
        environmentBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder addEnvironment(int index, com.google.protobuf.Any.Builder builderForValue) {
      if (environmentBuilder_ == null) {
        ensureEnvironmentIsMutable();
        environment_.add(index, builderForValue.build());
        onChanged();
      } else {
        environmentBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder addAllEnvironment(java.lang.Iterable<? extends com.google.protobuf.Any> values) {
      if (environmentBuilder_ == null) {
        ensureEnvironmentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, environment_);
        onChanged();
      } else {
        environmentBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder clearEnvironment() {
      if (environmentBuilder_ == null) {
        environment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        environmentBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public Builder removeEnvironment(int index) {
      if (environmentBuilder_ == null) {
        ensureEnvironmentIsMutable();
        environment_.remove(index);
        onChanged();
      } else {
        environmentBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public com.google.protobuf.Any.Builder getEnvironmentBuilder(int index) {
      return getEnvironmentFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public com.google.protobuf.AnyOrBuilder getEnvironmentOrBuilder(int index) {
      if (environmentBuilder_ == null) {
        return environment_.get(index);
      } else {
        return environmentBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder>
        getEnvironmentOrBuilderList() {
      if (environmentBuilder_ != null) {
        return environmentBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(environment_);
      }
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public com.google.protobuf.Any.Builder addEnvironmentBuilder() {
      return getEnvironmentFieldBuilder().addBuilder(com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public com.google.protobuf.Any.Builder addEnvironmentBuilder(int index) {
      return getEnvironmentFieldBuilder()
          .addBuilder(index, com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Any other builder-controlled inputs necessary for correctly evaluating the
     * recipe. Usually only needed for reproducing the build but not evaluated as
     * part of policy. Since the environment field can greatly vary in structure,
     * depending on the builder and recipe type, this is of form "Any".
     * </pre>
     *
     * <code>repeated .google.protobuf.Any environment = 5;</code>
     */
    public java.util.List<com.google.protobuf.Any.Builder> getEnvironmentBuilderList() {
      return getEnvironmentFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any,
            com.google.protobuf.Any.Builder,
            com.google.protobuf.AnyOrBuilder>
        getEnvironmentFieldBuilder() {
      if (environmentBuilder_ == null) {
        environmentBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.protobuf.Any,
                com.google.protobuf.Any.Builder,
                com.google.protobuf.AnyOrBuilder>(
                environment_, ((bitField0_ & 0x00000010) != 0), getParentForChildren(), isClean());
        environment_ = null;
      }
      return environmentBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:grafeas.v1.Recipe)
  }

  // @@protoc_insertion_point(class_scope:grafeas.v1.Recipe)
  private static final io.grafeas.v1.Recipe DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new io.grafeas.v1.Recipe();
  }

  public static io.grafeas.v1.Recipe getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Recipe> PARSER =
      new com.google.protobuf.AbstractParser<Recipe>() {
        @java.lang.Override
        public Recipe parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Recipe> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Recipe> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.grafeas.v1.Recipe getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
