/*
 * Copyright 2025 The Grafeas Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grafeas/v1/vulnerability.proto

// Protobuf Java Version: 3.25.5
package io.grafeas.v1;

/**
 *
 *
 * <pre>
 * An occurrence of a severity vulnerability on a resource.
 * </pre>
 *
 * Protobuf type {@code grafeas.v1.VulnerabilityOccurrence}
 */
public final class VulnerabilityOccurrence extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:grafeas.v1.VulnerabilityOccurrence)
    VulnerabilityOccurrenceOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use VulnerabilityOccurrence.newBuilder() to construct.
  private VulnerabilityOccurrence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private VulnerabilityOccurrence() {
    type_ = "";
    severity_ = 0;
    packageIssue_ = java.util.Collections.emptyList();
    shortDescription_ = "";
    longDescription_ = "";
    relatedUrls_ = java.util.Collections.emptyList();
    effectiveSeverity_ = 0;
    cvssVersion_ = 0;
    extraDetails_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new VulnerabilityOccurrence();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return io.grafeas.v1.Vulnerability
        .internal_static_grafeas_v1_VulnerabilityOccurrence_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grafeas.v1.Vulnerability
        .internal_static_grafeas_v1_VulnerabilityOccurrence_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grafeas.v1.VulnerabilityOccurrence.class,
            io.grafeas.v1.VulnerabilityOccurrence.Builder.class);
  }

  public interface PackageIssueOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:grafeas.v1.VulnerabilityOccurrence.PackageIssue)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
     * vulnerability was found in.
     * </pre>
     *
     * <code>string affected_cpe_uri = 1;</code>
     *
     * @return The affectedCpeUri.
     */
    java.lang.String getAffectedCpeUri();
    /**
     *
     *
     * <pre>
     * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
     * vulnerability was found in.
     * </pre>
     *
     * <code>string affected_cpe_uri = 1;</code>
     *
     * @return The bytes for affectedCpeUri.
     */
    com.google.protobuf.ByteString getAffectedCpeUriBytes();

    /**
     *
     *
     * <pre>
     * Required. The package this vulnerability was found in.
     * </pre>
     *
     * <code>string affected_package = 2;</code>
     *
     * @return The affectedPackage.
     */
    java.lang.String getAffectedPackage();
    /**
     *
     *
     * <pre>
     * Required. The package this vulnerability was found in.
     * </pre>
     *
     * <code>string affected_package = 2;</code>
     *
     * @return The bytes for affectedPackage.
     */
    com.google.protobuf.ByteString getAffectedPackageBytes();

    /**
     *
     *
     * <pre>
     * Required. The version of the package that is installed on the resource
     * affected by this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Version affected_version = 3;</code>
     *
     * @return Whether the affectedVersion field is set.
     */
    boolean hasAffectedVersion();
    /**
     *
     *
     * <pre>
     * Required. The version of the package that is installed on the resource
     * affected by this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Version affected_version = 3;</code>
     *
     * @return The affectedVersion.
     */
    io.grafeas.v1.Version getAffectedVersion();
    /**
     *
     *
     * <pre>
     * Required. The version of the package that is installed on the resource
     * affected by this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Version affected_version = 3;</code>
     */
    io.grafeas.v1.VersionOrBuilder getAffectedVersionOrBuilder();

    /**
     *
     *
     * <pre>
     * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
     * was fixed in. It is possible for this to be different from the
     * affected_cpe_uri.
     * </pre>
     *
     * <code>string fixed_cpe_uri = 4;</code>
     *
     * @return The fixedCpeUri.
     */
    java.lang.String getFixedCpeUri();
    /**
     *
     *
     * <pre>
     * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
     * was fixed in. It is possible for this to be different from the
     * affected_cpe_uri.
     * </pre>
     *
     * <code>string fixed_cpe_uri = 4;</code>
     *
     * @return The bytes for fixedCpeUri.
     */
    com.google.protobuf.ByteString getFixedCpeUriBytes();

    /**
     *
     *
     * <pre>
     * The package this vulnerability was fixed in. It is possible for this to
     * be different from the affected_package.
     * </pre>
     *
     * <code>string fixed_package = 5;</code>
     *
     * @return The fixedPackage.
     */
    java.lang.String getFixedPackage();
    /**
     *
     *
     * <pre>
     * The package this vulnerability was fixed in. It is possible for this to
     * be different from the affected_package.
     * </pre>
     *
     * <code>string fixed_package = 5;</code>
     *
     * @return The bytes for fixedPackage.
     */
    com.google.protobuf.ByteString getFixedPackageBytes();

    /**
     *
     *
     * <pre>
     * Required. The version of the package this vulnerability was fixed in.
     * Setting this to VersionKind.MAXIMUM means no fix is yet available.
     * </pre>
     *
     * <code>.grafeas.v1.Version fixed_version = 6;</code>
     *
     * @return Whether the fixedVersion field is set.
     */
    boolean hasFixedVersion();
    /**
     *
     *
     * <pre>
     * Required. The version of the package this vulnerability was fixed in.
     * Setting this to VersionKind.MAXIMUM means no fix is yet available.
     * </pre>
     *
     * <code>.grafeas.v1.Version fixed_version = 6;</code>
     *
     * @return The fixedVersion.
     */
    io.grafeas.v1.Version getFixedVersion();
    /**
     *
     *
     * <pre>
     * Required. The version of the package this vulnerability was fixed in.
     * Setting this to VersionKind.MAXIMUM means no fix is yet available.
     * </pre>
     *
     * <code>.grafeas.v1.Version fixed_version = 6;</code>
     */
    io.grafeas.v1.VersionOrBuilder getFixedVersionOrBuilder();

    /**
     *
     *
     * <pre>
     * Output only. Whether a fix is available for this package.
     * </pre>
     *
     * <code>bool fix_available = 7;</code>
     *
     * @return The fixAvailable.
     */
    boolean getFixAvailable();

    /**
     *
     *
     * <pre>
     * The type of package (e.g. OS, MAVEN, GO).
     * </pre>
     *
     * <code>string package_type = 8;</code>
     *
     * @return The packageType.
     */
    java.lang.String getPackageType();
    /**
     *
     *
     * <pre>
     * The type of package (e.g. OS, MAVEN, GO).
     * </pre>
     *
     * <code>string package_type = 8;</code>
     *
     * @return The bytes for packageType.
     */
    com.google.protobuf.ByteString getPackageTypeBytes();

    /**
     *
     *
     * <pre>
     * The distro or language system assigned severity for this vulnerability
     * when that is available and note provider assigned severity when it is not
     * available.
     * </pre>
     *
     * <code>
     * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for effectiveSeverity.
     */
    int getEffectiveSeverityValue();
    /**
     *
     *
     * <pre>
     * The distro or language system assigned severity for this vulnerability
     * when that is available and note provider assigned severity when it is not
     * available.
     * </pre>
     *
     * <code>
     * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The effectiveSeverity.
     */
    io.grafeas.v1.Severity getEffectiveSeverity();

    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    java.util.List<io.grafeas.v1.FileLocation> getFileLocationList();
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    io.grafeas.v1.FileLocation getFileLocation(int index);
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    int getFileLocationCount();
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    java.util.List<? extends io.grafeas.v1.FileLocationOrBuilder> getFileLocationOrBuilderList();
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    io.grafeas.v1.FileLocationOrBuilder getFileLocationOrBuilder(int index);
  }
  /**
   *
   *
   * <pre>
   * A detail for a distro and package this vulnerability occurrence was found
   * in and its associated fix (if one is available).
   * </pre>
   *
   * Protobuf type {@code grafeas.v1.VulnerabilityOccurrence.PackageIssue}
   */
  public static final class PackageIssue extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:grafeas.v1.VulnerabilityOccurrence.PackageIssue)
      PackageIssueOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use PackageIssue.newBuilder() to construct.
    private PackageIssue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private PackageIssue() {
      affectedCpeUri_ = "";
      affectedPackage_ = "";
      fixedCpeUri_ = "";
      fixedPackage_ = "";
      packageType_ = "";
      effectiveSeverity_ = 0;
      fileLocation_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new PackageIssue();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_PackageIssue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_PackageIssue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.class,
              io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder.class);
    }

    private int bitField0_;
    public static final int AFFECTED_CPE_URI_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object affectedCpeUri_ = "";
    /**
     *
     *
     * <pre>
     * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
     * vulnerability was found in.
     * </pre>
     *
     * <code>string affected_cpe_uri = 1;</code>
     *
     * @return The affectedCpeUri.
     */
    @java.lang.Override
    public java.lang.String getAffectedCpeUri() {
      java.lang.Object ref = affectedCpeUri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        affectedCpeUri_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
     * vulnerability was found in.
     * </pre>
     *
     * <code>string affected_cpe_uri = 1;</code>
     *
     * @return The bytes for affectedCpeUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAffectedCpeUriBytes() {
      java.lang.Object ref = affectedCpeUri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        affectedCpeUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AFFECTED_PACKAGE_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private volatile java.lang.Object affectedPackage_ = "";
    /**
     *
     *
     * <pre>
     * Required. The package this vulnerability was found in.
     * </pre>
     *
     * <code>string affected_package = 2;</code>
     *
     * @return The affectedPackage.
     */
    @java.lang.Override
    public java.lang.String getAffectedPackage() {
      java.lang.Object ref = affectedPackage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        affectedPackage_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The package this vulnerability was found in.
     * </pre>
     *
     * <code>string affected_package = 2;</code>
     *
     * @return The bytes for affectedPackage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAffectedPackageBytes() {
      java.lang.Object ref = affectedPackage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        affectedPackage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AFFECTED_VERSION_FIELD_NUMBER = 3;
    private io.grafeas.v1.Version affectedVersion_;
    /**
     *
     *
     * <pre>
     * Required. The version of the package that is installed on the resource
     * affected by this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Version affected_version = 3;</code>
     *
     * @return Whether the affectedVersion field is set.
     */
    @java.lang.Override
    public boolean hasAffectedVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. The version of the package that is installed on the resource
     * affected by this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Version affected_version = 3;</code>
     *
     * @return The affectedVersion.
     */
    @java.lang.Override
    public io.grafeas.v1.Version getAffectedVersion() {
      return affectedVersion_ == null
          ? io.grafeas.v1.Version.getDefaultInstance()
          : affectedVersion_;
    }
    /**
     *
     *
     * <pre>
     * Required. The version of the package that is installed on the resource
     * affected by this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Version affected_version = 3;</code>
     */
    @java.lang.Override
    public io.grafeas.v1.VersionOrBuilder getAffectedVersionOrBuilder() {
      return affectedVersion_ == null
          ? io.grafeas.v1.Version.getDefaultInstance()
          : affectedVersion_;
    }

    public static final int FIXED_CPE_URI_FIELD_NUMBER = 4;

    @SuppressWarnings("serial")
    private volatile java.lang.Object fixedCpeUri_ = "";
    /**
     *
     *
     * <pre>
     * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
     * was fixed in. It is possible for this to be different from the
     * affected_cpe_uri.
     * </pre>
     *
     * <code>string fixed_cpe_uri = 4;</code>
     *
     * @return The fixedCpeUri.
     */
    @java.lang.Override
    public java.lang.String getFixedCpeUri() {
      java.lang.Object ref = fixedCpeUri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fixedCpeUri_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
     * was fixed in. It is possible for this to be different from the
     * affected_cpe_uri.
     * </pre>
     *
     * <code>string fixed_cpe_uri = 4;</code>
     *
     * @return The bytes for fixedCpeUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFixedCpeUriBytes() {
      java.lang.Object ref = fixedCpeUri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        fixedCpeUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIXED_PACKAGE_FIELD_NUMBER = 5;

    @SuppressWarnings("serial")
    private volatile java.lang.Object fixedPackage_ = "";
    /**
     *
     *
     * <pre>
     * The package this vulnerability was fixed in. It is possible for this to
     * be different from the affected_package.
     * </pre>
     *
     * <code>string fixed_package = 5;</code>
     *
     * @return The fixedPackage.
     */
    @java.lang.Override
    public java.lang.String getFixedPackage() {
      java.lang.Object ref = fixedPackage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fixedPackage_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The package this vulnerability was fixed in. It is possible for this to
     * be different from the affected_package.
     * </pre>
     *
     * <code>string fixed_package = 5;</code>
     *
     * @return The bytes for fixedPackage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFixedPackageBytes() {
      java.lang.Object ref = fixedPackage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        fixedPackage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIXED_VERSION_FIELD_NUMBER = 6;
    private io.grafeas.v1.Version fixedVersion_;
    /**
     *
     *
     * <pre>
     * Required. The version of the package this vulnerability was fixed in.
     * Setting this to VersionKind.MAXIMUM means no fix is yet available.
     * </pre>
     *
     * <code>.grafeas.v1.Version fixed_version = 6;</code>
     *
     * @return Whether the fixedVersion field is set.
     */
    @java.lang.Override
    public boolean hasFixedVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. The version of the package this vulnerability was fixed in.
     * Setting this to VersionKind.MAXIMUM means no fix is yet available.
     * </pre>
     *
     * <code>.grafeas.v1.Version fixed_version = 6;</code>
     *
     * @return The fixedVersion.
     */
    @java.lang.Override
    public io.grafeas.v1.Version getFixedVersion() {
      return fixedVersion_ == null ? io.grafeas.v1.Version.getDefaultInstance() : fixedVersion_;
    }
    /**
     *
     *
     * <pre>
     * Required. The version of the package this vulnerability was fixed in.
     * Setting this to VersionKind.MAXIMUM means no fix is yet available.
     * </pre>
     *
     * <code>.grafeas.v1.Version fixed_version = 6;</code>
     */
    @java.lang.Override
    public io.grafeas.v1.VersionOrBuilder getFixedVersionOrBuilder() {
      return fixedVersion_ == null ? io.grafeas.v1.Version.getDefaultInstance() : fixedVersion_;
    }

    public static final int FIX_AVAILABLE_FIELD_NUMBER = 7;
    private boolean fixAvailable_ = false;
    /**
     *
     *
     * <pre>
     * Output only. Whether a fix is available for this package.
     * </pre>
     *
     * <code>bool fix_available = 7;</code>
     *
     * @return The fixAvailable.
     */
    @java.lang.Override
    public boolean getFixAvailable() {
      return fixAvailable_;
    }

    public static final int PACKAGE_TYPE_FIELD_NUMBER = 8;

    @SuppressWarnings("serial")
    private volatile java.lang.Object packageType_ = "";
    /**
     *
     *
     * <pre>
     * The type of package (e.g. OS, MAVEN, GO).
     * </pre>
     *
     * <code>string package_type = 8;</code>
     *
     * @return The packageType.
     */
    @java.lang.Override
    public java.lang.String getPackageType() {
      java.lang.Object ref = packageType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        packageType_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The type of package (e.g. OS, MAVEN, GO).
     * </pre>
     *
     * <code>string package_type = 8;</code>
     *
     * @return The bytes for packageType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPackageTypeBytes() {
      java.lang.Object ref = packageType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        packageType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EFFECTIVE_SEVERITY_FIELD_NUMBER = 9;
    private int effectiveSeverity_ = 0;
    /**
     *
     *
     * <pre>
     * The distro or language system assigned severity for this vulnerability
     * when that is available and note provider assigned severity when it is not
     * available.
     * </pre>
     *
     * <code>
     * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for effectiveSeverity.
     */
    @java.lang.Override
    public int getEffectiveSeverityValue() {
      return effectiveSeverity_;
    }
    /**
     *
     *
     * <pre>
     * The distro or language system assigned severity for this vulnerability
     * when that is available and note provider assigned severity when it is not
     * available.
     * </pre>
     *
     * <code>
     * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The effectiveSeverity.
     */
    @java.lang.Override
    public io.grafeas.v1.Severity getEffectiveSeverity() {
      io.grafeas.v1.Severity result = io.grafeas.v1.Severity.forNumber(effectiveSeverity_);
      return result == null ? io.grafeas.v1.Severity.UNRECOGNIZED : result;
    }

    public static final int FILE_LOCATION_FIELD_NUMBER = 10;

    @SuppressWarnings("serial")
    private java.util.List<io.grafeas.v1.FileLocation> fileLocation_;
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    @java.lang.Override
    public java.util.List<io.grafeas.v1.FileLocation> getFileLocationList() {
      return fileLocation_;
    }
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.grafeas.v1.FileLocationOrBuilder>
        getFileLocationOrBuilderList() {
      return fileLocation_;
    }
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    @java.lang.Override
    public int getFileLocationCount() {
      return fileLocation_.size();
    }
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    @java.lang.Override
    public io.grafeas.v1.FileLocation getFileLocation(int index) {
      return fileLocation_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The location at which this package was found.
     * </pre>
     *
     * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
     */
    @java.lang.Override
    public io.grafeas.v1.FileLocationOrBuilder getFileLocationOrBuilder(int index) {
      return fileLocation_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(affectedCpeUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, affectedCpeUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(affectedPackage_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, affectedPackage_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getAffectedVersion());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fixedCpeUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, fixedCpeUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fixedPackage_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fixedPackage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(6, getFixedVersion());
      }
      if (fixAvailable_ != false) {
        output.writeBool(7, fixAvailable_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(packageType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, packageType_);
      }
      if (effectiveSeverity_ != io.grafeas.v1.Severity.SEVERITY_UNSPECIFIED.getNumber()) {
        output.writeEnum(9, effectiveSeverity_);
      }
      for (int i = 0; i < fileLocation_.size(); i++) {
        output.writeMessage(10, fileLocation_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(affectedCpeUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, affectedCpeUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(affectedPackage_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, affectedPackage_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getAffectedVersion());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fixedCpeUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, fixedCpeUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fixedPackage_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fixedPackage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getFixedVersion());
      }
      if (fixAvailable_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, fixAvailable_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(packageType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, packageType_);
      }
      if (effectiveSeverity_ != io.grafeas.v1.Severity.SEVERITY_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(9, effectiveSeverity_);
      }
      for (int i = 0; i < fileLocation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, fileLocation_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof io.grafeas.v1.VulnerabilityOccurrence.PackageIssue)) {
        return super.equals(obj);
      }
      io.grafeas.v1.VulnerabilityOccurrence.PackageIssue other =
          (io.grafeas.v1.VulnerabilityOccurrence.PackageIssue) obj;

      if (!getAffectedCpeUri().equals(other.getAffectedCpeUri())) return false;
      if (!getAffectedPackage().equals(other.getAffectedPackage())) return false;
      if (hasAffectedVersion() != other.hasAffectedVersion()) return false;
      if (hasAffectedVersion()) {
        if (!getAffectedVersion().equals(other.getAffectedVersion())) return false;
      }
      if (!getFixedCpeUri().equals(other.getFixedCpeUri())) return false;
      if (!getFixedPackage().equals(other.getFixedPackage())) return false;
      if (hasFixedVersion() != other.hasFixedVersion()) return false;
      if (hasFixedVersion()) {
        if (!getFixedVersion().equals(other.getFixedVersion())) return false;
      }
      if (getFixAvailable() != other.getFixAvailable()) return false;
      if (!getPackageType().equals(other.getPackageType())) return false;
      if (effectiveSeverity_ != other.effectiveSeverity_) return false;
      if (!getFileLocationList().equals(other.getFileLocationList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AFFECTED_CPE_URI_FIELD_NUMBER;
      hash = (53 * hash) + getAffectedCpeUri().hashCode();
      hash = (37 * hash) + AFFECTED_PACKAGE_FIELD_NUMBER;
      hash = (53 * hash) + getAffectedPackage().hashCode();
      if (hasAffectedVersion()) {
        hash = (37 * hash) + AFFECTED_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getAffectedVersion().hashCode();
      }
      hash = (37 * hash) + FIXED_CPE_URI_FIELD_NUMBER;
      hash = (53 * hash) + getFixedCpeUri().hashCode();
      hash = (37 * hash) + FIXED_PACKAGE_FIELD_NUMBER;
      hash = (53 * hash) + getFixedPackage().hashCode();
      if (hasFixedVersion()) {
        hash = (37 * hash) + FIXED_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getFixedVersion().hashCode();
      }
      hash = (37 * hash) + FIX_AVAILABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getFixAvailable());
      hash = (37 * hash) + PACKAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getPackageType().hashCode();
      hash = (37 * hash) + EFFECTIVE_SEVERITY_FIELD_NUMBER;
      hash = (53 * hash) + effectiveSeverity_;
      if (getFileLocationCount() > 0) {
        hash = (37 * hash) + FILE_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getFileLocationList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(io.grafeas.v1.VulnerabilityOccurrence.PackageIssue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * A detail for a distro and package this vulnerability occurrence was found
     * in and its associated fix (if one is available).
     * </pre>
     *
     * Protobuf type {@code grafeas.v1.VulnerabilityOccurrence.PackageIssue}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:grafeas.v1.VulnerabilityOccurrence.PackageIssue)
        io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return io.grafeas.v1.Vulnerability
            .internal_static_grafeas_v1_VulnerabilityOccurrence_PackageIssue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.grafeas.v1.Vulnerability
            .internal_static_grafeas_v1_VulnerabilityOccurrence_PackageIssue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.class,
                io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder.class);
      }

      // Construct using io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getAffectedVersionFieldBuilder();
          getFixedVersionFieldBuilder();
          getFileLocationFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        affectedCpeUri_ = "";
        affectedPackage_ = "";
        affectedVersion_ = null;
        if (affectedVersionBuilder_ != null) {
          affectedVersionBuilder_.dispose();
          affectedVersionBuilder_ = null;
        }
        fixedCpeUri_ = "";
        fixedPackage_ = "";
        fixedVersion_ = null;
        if (fixedVersionBuilder_ != null) {
          fixedVersionBuilder_.dispose();
          fixedVersionBuilder_ = null;
        }
        fixAvailable_ = false;
        packageType_ = "";
        effectiveSeverity_ = 0;
        if (fileLocationBuilder_ == null) {
          fileLocation_ = java.util.Collections.emptyList();
        } else {
          fileLocation_ = null;
          fileLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return io.grafeas.v1.Vulnerability
            .internal_static_grafeas_v1_VulnerabilityOccurrence_PackageIssue_descriptor;
      }

      @java.lang.Override
      public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue getDefaultInstanceForType() {
        return io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.getDefaultInstance();
      }

      @java.lang.Override
      public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue build() {
        io.grafeas.v1.VulnerabilityOccurrence.PackageIssue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue buildPartial() {
        io.grafeas.v1.VulnerabilityOccurrence.PackageIssue result =
            new io.grafeas.v1.VulnerabilityOccurrence.PackageIssue(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          io.grafeas.v1.VulnerabilityOccurrence.PackageIssue result) {
        if (fileLocationBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            fileLocation_ = java.util.Collections.unmodifiableList(fileLocation_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.fileLocation_ = fileLocation_;
        } else {
          result.fileLocation_ = fileLocationBuilder_.build();
        }
      }

      private void buildPartial0(io.grafeas.v1.VulnerabilityOccurrence.PackageIssue result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.affectedCpeUri_ = affectedCpeUri_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.affectedPackage_ = affectedPackage_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.affectedVersion_ =
              affectedVersionBuilder_ == null ? affectedVersion_ : affectedVersionBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.fixedCpeUri_ = fixedCpeUri_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.fixedPackage_ = fixedPackage_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.fixedVersion_ =
              fixedVersionBuilder_ == null ? fixedVersion_ : fixedVersionBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.fixAvailable_ = fixAvailable_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.packageType_ = packageType_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.effectiveSeverity_ = effectiveSeverity_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.grafeas.v1.VulnerabilityOccurrence.PackageIssue) {
          return mergeFrom((io.grafeas.v1.VulnerabilityOccurrence.PackageIssue) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.grafeas.v1.VulnerabilityOccurrence.PackageIssue other) {
        if (other == io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.getDefaultInstance())
          return this;
        if (!other.getAffectedCpeUri().isEmpty()) {
          affectedCpeUri_ = other.affectedCpeUri_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getAffectedPackage().isEmpty()) {
          affectedPackage_ = other.affectedPackage_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasAffectedVersion()) {
          mergeAffectedVersion(other.getAffectedVersion());
        }
        if (!other.getFixedCpeUri().isEmpty()) {
          fixedCpeUri_ = other.fixedCpeUri_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getFixedPackage().isEmpty()) {
          fixedPackage_ = other.fixedPackage_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasFixedVersion()) {
          mergeFixedVersion(other.getFixedVersion());
        }
        if (other.getFixAvailable() != false) {
          setFixAvailable(other.getFixAvailable());
        }
        if (!other.getPackageType().isEmpty()) {
          packageType_ = other.packageType_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (other.effectiveSeverity_ != 0) {
          setEffectiveSeverityValue(other.getEffectiveSeverityValue());
        }
        if (fileLocationBuilder_ == null) {
          if (!other.fileLocation_.isEmpty()) {
            if (fileLocation_.isEmpty()) {
              fileLocation_ = other.fileLocation_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureFileLocationIsMutable();
              fileLocation_.addAll(other.fileLocation_);
            }
            onChanged();
          }
        } else {
          if (!other.fileLocation_.isEmpty()) {
            if (fileLocationBuilder_.isEmpty()) {
              fileLocationBuilder_.dispose();
              fileLocationBuilder_ = null;
              fileLocation_ = other.fileLocation_;
              bitField0_ = (bitField0_ & ~0x00000200);
              fileLocationBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getFileLocationFieldBuilder()
                      : null;
            } else {
              fileLocationBuilder_.addAllMessages(other.fileLocation_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  affectedCpeUri_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  affectedPackage_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              case 26:
                {
                  input.readMessage(
                      getAffectedVersionFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
              case 34:
                {
                  fixedCpeUri_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
              case 42:
                {
                  fixedPackage_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
              case 50:
                {
                  input.readMessage(getFixedVersionFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000020;
                  break;
                } // case 50
              case 56:
                {
                  fixAvailable_ = input.readBool();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
              case 66:
                {
                  packageType_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 66
              case 72:
                {
                  effectiveSeverity_ = input.readEnum();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
              case 82:
                {
                  io.grafeas.v1.FileLocation m =
                      input.readMessage(io.grafeas.v1.FileLocation.parser(), extensionRegistry);
                  if (fileLocationBuilder_ == null) {
                    ensureFileLocationIsMutable();
                    fileLocation_.add(m);
                  } else {
                    fileLocationBuilder_.addMessage(m);
                  }
                  break;
                } // case 82
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object affectedCpeUri_ = "";
      /**
       *
       *
       * <pre>
       * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
       * vulnerability was found in.
       * </pre>
       *
       * <code>string affected_cpe_uri = 1;</code>
       *
       * @return The affectedCpeUri.
       */
      public java.lang.String getAffectedCpeUri() {
        java.lang.Object ref = affectedCpeUri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          affectedCpeUri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
       * vulnerability was found in.
       * </pre>
       *
       * <code>string affected_cpe_uri = 1;</code>
       *
       * @return The bytes for affectedCpeUri.
       */
      public com.google.protobuf.ByteString getAffectedCpeUriBytes() {
        java.lang.Object ref = affectedCpeUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          affectedCpeUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
       * vulnerability was found in.
       * </pre>
       *
       * <code>string affected_cpe_uri = 1;</code>
       *
       * @param value The affectedCpeUri to set.
       * @return This builder for chaining.
       */
      public Builder setAffectedCpeUri(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        affectedCpeUri_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
       * vulnerability was found in.
       * </pre>
       *
       * <code>string affected_cpe_uri = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearAffectedCpeUri() {
        affectedCpeUri_ = getDefaultInstance().getAffectedCpeUri();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The [CPE URI](https://cpe.mitre.org/specification/) this
       * vulnerability was found in.
       * </pre>
       *
       * <code>string affected_cpe_uri = 1;</code>
       *
       * @param value The bytes for affectedCpeUri to set.
       * @return This builder for chaining.
       */
      public Builder setAffectedCpeUriBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        affectedCpeUri_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object affectedPackage_ = "";
      /**
       *
       *
       * <pre>
       * Required. The package this vulnerability was found in.
       * </pre>
       *
       * <code>string affected_package = 2;</code>
       *
       * @return The affectedPackage.
       */
      public java.lang.String getAffectedPackage() {
        java.lang.Object ref = affectedPackage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          affectedPackage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The package this vulnerability was found in.
       * </pre>
       *
       * <code>string affected_package = 2;</code>
       *
       * @return The bytes for affectedPackage.
       */
      public com.google.protobuf.ByteString getAffectedPackageBytes() {
        java.lang.Object ref = affectedPackage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          affectedPackage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The package this vulnerability was found in.
       * </pre>
       *
       * <code>string affected_package = 2;</code>
       *
       * @param value The affectedPackage to set.
       * @return This builder for chaining.
       */
      public Builder setAffectedPackage(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        affectedPackage_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The package this vulnerability was found in.
       * </pre>
       *
       * <code>string affected_package = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearAffectedPackage() {
        affectedPackage_ = getDefaultInstance().getAffectedPackage();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The package this vulnerability was found in.
       * </pre>
       *
       * <code>string affected_package = 2;</code>
       *
       * @param value The bytes for affectedPackage to set.
       * @return This builder for chaining.
       */
      public Builder setAffectedPackageBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        affectedPackage_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private io.grafeas.v1.Version affectedVersion_;
      private com.google.protobuf.SingleFieldBuilderV3<
              io.grafeas.v1.Version, io.grafeas.v1.Version.Builder, io.grafeas.v1.VersionOrBuilder>
          affectedVersionBuilder_;
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       *
       * @return Whether the affectedVersion field is set.
       */
      public boolean hasAffectedVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       *
       * @return The affectedVersion.
       */
      public io.grafeas.v1.Version getAffectedVersion() {
        if (affectedVersionBuilder_ == null) {
          return affectedVersion_ == null
              ? io.grafeas.v1.Version.getDefaultInstance()
              : affectedVersion_;
        } else {
          return affectedVersionBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      public Builder setAffectedVersion(io.grafeas.v1.Version value) {
        if (affectedVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          affectedVersion_ = value;
        } else {
          affectedVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      public Builder setAffectedVersion(io.grafeas.v1.Version.Builder builderForValue) {
        if (affectedVersionBuilder_ == null) {
          affectedVersion_ = builderForValue.build();
        } else {
          affectedVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      public Builder mergeAffectedVersion(io.grafeas.v1.Version value) {
        if (affectedVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)
              && affectedVersion_ != null
              && affectedVersion_ != io.grafeas.v1.Version.getDefaultInstance()) {
            getAffectedVersionBuilder().mergeFrom(value);
          } else {
            affectedVersion_ = value;
          }
        } else {
          affectedVersionBuilder_.mergeFrom(value);
        }
        if (affectedVersion_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      public Builder clearAffectedVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        affectedVersion_ = null;
        if (affectedVersionBuilder_ != null) {
          affectedVersionBuilder_.dispose();
          affectedVersionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      public io.grafeas.v1.Version.Builder getAffectedVersionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getAffectedVersionFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      public io.grafeas.v1.VersionOrBuilder getAffectedVersionOrBuilder() {
        if (affectedVersionBuilder_ != null) {
          return affectedVersionBuilder_.getMessageOrBuilder();
        } else {
          return affectedVersion_ == null
              ? io.grafeas.v1.Version.getDefaultInstance()
              : affectedVersion_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package that is installed on the resource
       * affected by this vulnerability.
       * </pre>
       *
       * <code>.grafeas.v1.Version affected_version = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              io.grafeas.v1.Version, io.grafeas.v1.Version.Builder, io.grafeas.v1.VersionOrBuilder>
          getAffectedVersionFieldBuilder() {
        if (affectedVersionBuilder_ == null) {
          affectedVersionBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  io.grafeas.v1.Version,
                  io.grafeas.v1.Version.Builder,
                  io.grafeas.v1.VersionOrBuilder>(
                  getAffectedVersion(), getParentForChildren(), isClean());
          affectedVersion_ = null;
        }
        return affectedVersionBuilder_;
      }

      private java.lang.Object fixedCpeUri_ = "";
      /**
       *
       *
       * <pre>
       * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
       * was fixed in. It is possible for this to be different from the
       * affected_cpe_uri.
       * </pre>
       *
       * <code>string fixed_cpe_uri = 4;</code>
       *
       * @return The fixedCpeUri.
       */
      public java.lang.String getFixedCpeUri() {
        java.lang.Object ref = fixedCpeUri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fixedCpeUri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
       * was fixed in. It is possible for this to be different from the
       * affected_cpe_uri.
       * </pre>
       *
       * <code>string fixed_cpe_uri = 4;</code>
       *
       * @return The bytes for fixedCpeUri.
       */
      public com.google.protobuf.ByteString getFixedCpeUriBytes() {
        java.lang.Object ref = fixedCpeUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          fixedCpeUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
       * was fixed in. It is possible for this to be different from the
       * affected_cpe_uri.
       * </pre>
       *
       * <code>string fixed_cpe_uri = 4;</code>
       *
       * @param value The fixedCpeUri to set.
       * @return This builder for chaining.
       */
      public Builder setFixedCpeUri(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        fixedCpeUri_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
       * was fixed in. It is possible for this to be different from the
       * affected_cpe_uri.
       * </pre>
       *
       * <code>string fixed_cpe_uri = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearFixedCpeUri() {
        fixedCpeUri_ = getDefaultInstance().getFixedCpeUri();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
       * was fixed in. It is possible for this to be different from the
       * affected_cpe_uri.
       * </pre>
       *
       * <code>string fixed_cpe_uri = 4;</code>
       *
       * @param value The bytes for fixedCpeUri to set.
       * @return This builder for chaining.
       */
      public Builder setFixedCpeUriBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        fixedCpeUri_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object fixedPackage_ = "";
      /**
       *
       *
       * <pre>
       * The package this vulnerability was fixed in. It is possible for this to
       * be different from the affected_package.
       * </pre>
       *
       * <code>string fixed_package = 5;</code>
       *
       * @return The fixedPackage.
       */
      public java.lang.String getFixedPackage() {
        java.lang.Object ref = fixedPackage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fixedPackage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The package this vulnerability was fixed in. It is possible for this to
       * be different from the affected_package.
       * </pre>
       *
       * <code>string fixed_package = 5;</code>
       *
       * @return The bytes for fixedPackage.
       */
      public com.google.protobuf.ByteString getFixedPackageBytes() {
        java.lang.Object ref = fixedPackage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          fixedPackage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The package this vulnerability was fixed in. It is possible for this to
       * be different from the affected_package.
       * </pre>
       *
       * <code>string fixed_package = 5;</code>
       *
       * @param value The fixedPackage to set.
       * @return This builder for chaining.
       */
      public Builder setFixedPackage(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        fixedPackage_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The package this vulnerability was fixed in. It is possible for this to
       * be different from the affected_package.
       * </pre>
       *
       * <code>string fixed_package = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearFixedPackage() {
        fixedPackage_ = getDefaultInstance().getFixedPackage();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The package this vulnerability was fixed in. It is possible for this to
       * be different from the affected_package.
       * </pre>
       *
       * <code>string fixed_package = 5;</code>
       *
       * @param value The bytes for fixedPackage to set.
       * @return This builder for chaining.
       */
      public Builder setFixedPackageBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        fixedPackage_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private io.grafeas.v1.Version fixedVersion_;
      private com.google.protobuf.SingleFieldBuilderV3<
              io.grafeas.v1.Version, io.grafeas.v1.Version.Builder, io.grafeas.v1.VersionOrBuilder>
          fixedVersionBuilder_;
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       *
       * @return Whether the fixedVersion field is set.
       */
      public boolean hasFixedVersion() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       *
       * @return The fixedVersion.
       */
      public io.grafeas.v1.Version getFixedVersion() {
        if (fixedVersionBuilder_ == null) {
          return fixedVersion_ == null ? io.grafeas.v1.Version.getDefaultInstance() : fixedVersion_;
        } else {
          return fixedVersionBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      public Builder setFixedVersion(io.grafeas.v1.Version value) {
        if (fixedVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fixedVersion_ = value;
        } else {
          fixedVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      public Builder setFixedVersion(io.grafeas.v1.Version.Builder builderForValue) {
        if (fixedVersionBuilder_ == null) {
          fixedVersion_ = builderForValue.build();
        } else {
          fixedVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      public Builder mergeFixedVersion(io.grafeas.v1.Version value) {
        if (fixedVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)
              && fixedVersion_ != null
              && fixedVersion_ != io.grafeas.v1.Version.getDefaultInstance()) {
            getFixedVersionBuilder().mergeFrom(value);
          } else {
            fixedVersion_ = value;
          }
        } else {
          fixedVersionBuilder_.mergeFrom(value);
        }
        if (fixedVersion_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      public Builder clearFixedVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fixedVersion_ = null;
        if (fixedVersionBuilder_ != null) {
          fixedVersionBuilder_.dispose();
          fixedVersionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      public io.grafeas.v1.Version.Builder getFixedVersionBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getFixedVersionFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      public io.grafeas.v1.VersionOrBuilder getFixedVersionOrBuilder() {
        if (fixedVersionBuilder_ != null) {
          return fixedVersionBuilder_.getMessageOrBuilder();
        } else {
          return fixedVersion_ == null ? io.grafeas.v1.Version.getDefaultInstance() : fixedVersion_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The version of the package this vulnerability was fixed in.
       * Setting this to VersionKind.MAXIMUM means no fix is yet available.
       * </pre>
       *
       * <code>.grafeas.v1.Version fixed_version = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              io.grafeas.v1.Version, io.grafeas.v1.Version.Builder, io.grafeas.v1.VersionOrBuilder>
          getFixedVersionFieldBuilder() {
        if (fixedVersionBuilder_ == null) {
          fixedVersionBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  io.grafeas.v1.Version,
                  io.grafeas.v1.Version.Builder,
                  io.grafeas.v1.VersionOrBuilder>(
                  getFixedVersion(), getParentForChildren(), isClean());
          fixedVersion_ = null;
        }
        return fixedVersionBuilder_;
      }

      private boolean fixAvailable_;
      /**
       *
       *
       * <pre>
       * Output only. Whether a fix is available for this package.
       * </pre>
       *
       * <code>bool fix_available = 7;</code>
       *
       * @return The fixAvailable.
       */
      @java.lang.Override
      public boolean getFixAvailable() {
        return fixAvailable_;
      }
      /**
       *
       *
       * <pre>
       * Output only. Whether a fix is available for this package.
       * </pre>
       *
       * <code>bool fix_available = 7;</code>
       *
       * @param value The fixAvailable to set.
       * @return This builder for chaining.
       */
      public Builder setFixAvailable(boolean value) {

        fixAvailable_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. Whether a fix is available for this package.
       * </pre>
       *
       * <code>bool fix_available = 7;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearFixAvailable() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fixAvailable_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object packageType_ = "";
      /**
       *
       *
       * <pre>
       * The type of package (e.g. OS, MAVEN, GO).
       * </pre>
       *
       * <code>string package_type = 8;</code>
       *
       * @return The packageType.
       */
      public java.lang.String getPackageType() {
        java.lang.Object ref = packageType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          packageType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The type of package (e.g. OS, MAVEN, GO).
       * </pre>
       *
       * <code>string package_type = 8;</code>
       *
       * @return The bytes for packageType.
       */
      public com.google.protobuf.ByteString getPackageTypeBytes() {
        java.lang.Object ref = packageType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          packageType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The type of package (e.g. OS, MAVEN, GO).
       * </pre>
       *
       * <code>string package_type = 8;</code>
       *
       * @param value The packageType to set.
       * @return This builder for chaining.
       */
      public Builder setPackageType(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        packageType_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The type of package (e.g. OS, MAVEN, GO).
       * </pre>
       *
       * <code>string package_type = 8;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPackageType() {
        packageType_ = getDefaultInstance().getPackageType();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The type of package (e.g. OS, MAVEN, GO).
       * </pre>
       *
       * <code>string package_type = 8;</code>
       *
       * @param value The bytes for packageType to set.
       * @return This builder for chaining.
       */
      public Builder setPackageTypeBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        packageType_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private int effectiveSeverity_ = 0;
      /**
       *
       *
       * <pre>
       * The distro or language system assigned severity for this vulnerability
       * when that is available and note provider assigned severity when it is not
       * available.
       * </pre>
       *
       * <code>
       * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The enum numeric value on the wire for effectiveSeverity.
       */
      @java.lang.Override
      public int getEffectiveSeverityValue() {
        return effectiveSeverity_;
      }
      /**
       *
       *
       * <pre>
       * The distro or language system assigned severity for this vulnerability
       * when that is available and note provider assigned severity when it is not
       * available.
       * </pre>
       *
       * <code>
       * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The enum numeric value on the wire for effectiveSeverity to set.
       * @return This builder for chaining.
       */
      public Builder setEffectiveSeverityValue(int value) {
        effectiveSeverity_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The distro or language system assigned severity for this vulnerability
       * when that is available and note provider assigned severity when it is not
       * available.
       * </pre>
       *
       * <code>
       * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The effectiveSeverity.
       */
      @java.lang.Override
      public io.grafeas.v1.Severity getEffectiveSeverity() {
        io.grafeas.v1.Severity result = io.grafeas.v1.Severity.forNumber(effectiveSeverity_);
        return result == null ? io.grafeas.v1.Severity.UNRECOGNIZED : result;
      }
      /**
       *
       *
       * <pre>
       * The distro or language system assigned severity for this vulnerability
       * when that is available and note provider assigned severity when it is not
       * available.
       * </pre>
       *
       * <code>
       * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The effectiveSeverity to set.
       * @return This builder for chaining.
       */
      public Builder setEffectiveSeverity(io.grafeas.v1.Severity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        effectiveSeverity_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The distro or language system assigned severity for this vulnerability
       * when that is available and note provider assigned severity when it is not
       * available.
       * </pre>
       *
       * <code>
       * .grafeas.v1.Severity effective_severity = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearEffectiveSeverity() {
        bitField0_ = (bitField0_ & ~0x00000100);
        effectiveSeverity_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.grafeas.v1.FileLocation> fileLocation_ =
          java.util.Collections.emptyList();

      private void ensureFileLocationIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          fileLocation_ = new java.util.ArrayList<io.grafeas.v1.FileLocation>(fileLocation_);
          bitField0_ |= 0x00000200;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              io.grafeas.v1.FileLocation,
              io.grafeas.v1.FileLocation.Builder,
              io.grafeas.v1.FileLocationOrBuilder>
          fileLocationBuilder_;

      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public java.util.List<io.grafeas.v1.FileLocation> getFileLocationList() {
        if (fileLocationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fileLocation_);
        } else {
          return fileLocationBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public int getFileLocationCount() {
        if (fileLocationBuilder_ == null) {
          return fileLocation_.size();
        } else {
          return fileLocationBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public io.grafeas.v1.FileLocation getFileLocation(int index) {
        if (fileLocationBuilder_ == null) {
          return fileLocation_.get(index);
        } else {
          return fileLocationBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder setFileLocation(int index, io.grafeas.v1.FileLocation value) {
        if (fileLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileLocationIsMutable();
          fileLocation_.set(index, value);
          onChanged();
        } else {
          fileLocationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder setFileLocation(
          int index, io.grafeas.v1.FileLocation.Builder builderForValue) {
        if (fileLocationBuilder_ == null) {
          ensureFileLocationIsMutable();
          fileLocation_.set(index, builderForValue.build());
          onChanged();
        } else {
          fileLocationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder addFileLocation(io.grafeas.v1.FileLocation value) {
        if (fileLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileLocationIsMutable();
          fileLocation_.add(value);
          onChanged();
        } else {
          fileLocationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder addFileLocation(int index, io.grafeas.v1.FileLocation value) {
        if (fileLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileLocationIsMutable();
          fileLocation_.add(index, value);
          onChanged();
        } else {
          fileLocationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder addFileLocation(io.grafeas.v1.FileLocation.Builder builderForValue) {
        if (fileLocationBuilder_ == null) {
          ensureFileLocationIsMutable();
          fileLocation_.add(builderForValue.build());
          onChanged();
        } else {
          fileLocationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder addFileLocation(
          int index, io.grafeas.v1.FileLocation.Builder builderForValue) {
        if (fileLocationBuilder_ == null) {
          ensureFileLocationIsMutable();
          fileLocation_.add(index, builderForValue.build());
          onChanged();
        } else {
          fileLocationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder addAllFileLocation(
          java.lang.Iterable<? extends io.grafeas.v1.FileLocation> values) {
        if (fileLocationBuilder_ == null) {
          ensureFileLocationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, fileLocation_);
          onChanged();
        } else {
          fileLocationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder clearFileLocation() {
        if (fileLocationBuilder_ == null) {
          fileLocation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          fileLocationBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public Builder removeFileLocation(int index) {
        if (fileLocationBuilder_ == null) {
          ensureFileLocationIsMutable();
          fileLocation_.remove(index);
          onChanged();
        } else {
          fileLocationBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public io.grafeas.v1.FileLocation.Builder getFileLocationBuilder(int index) {
        return getFileLocationFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public io.grafeas.v1.FileLocationOrBuilder getFileLocationOrBuilder(int index) {
        if (fileLocationBuilder_ == null) {
          return fileLocation_.get(index);
        } else {
          return fileLocationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public java.util.List<? extends io.grafeas.v1.FileLocationOrBuilder>
          getFileLocationOrBuilderList() {
        if (fileLocationBuilder_ != null) {
          return fileLocationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fileLocation_);
        }
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public io.grafeas.v1.FileLocation.Builder addFileLocationBuilder() {
        return getFileLocationFieldBuilder()
            .addBuilder(io.grafeas.v1.FileLocation.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public io.grafeas.v1.FileLocation.Builder addFileLocationBuilder(int index) {
        return getFileLocationFieldBuilder()
            .addBuilder(index, io.grafeas.v1.FileLocation.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * The location at which this package was found.
       * </pre>
       *
       * <code>repeated .grafeas.v1.FileLocation file_location = 10;</code>
       */
      public java.util.List<io.grafeas.v1.FileLocation.Builder> getFileLocationBuilderList() {
        return getFileLocationFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              io.grafeas.v1.FileLocation,
              io.grafeas.v1.FileLocation.Builder,
              io.grafeas.v1.FileLocationOrBuilder>
          getFileLocationFieldBuilder() {
        if (fileLocationBuilder_ == null) {
          fileLocationBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  io.grafeas.v1.FileLocation,
                  io.grafeas.v1.FileLocation.Builder,
                  io.grafeas.v1.FileLocationOrBuilder>(
                  fileLocation_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          fileLocation_ = null;
        }
        return fileLocationBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:grafeas.v1.VulnerabilityOccurrence.PackageIssue)
    }

    // @@protoc_insertion_point(class_scope:grafeas.v1.VulnerabilityOccurrence.PackageIssue)
    private static final io.grafeas.v1.VulnerabilityOccurrence.PackageIssue DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new io.grafeas.v1.VulnerabilityOccurrence.PackageIssue();
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.PackageIssue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PackageIssue> PARSER =
        new com.google.protobuf.AbstractParser<PackageIssue>() {
          @java.lang.Override
          public PackageIssue parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<PackageIssue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PackageIssue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface VexAssessmentOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:grafeas.v1.VulnerabilityOccurrence.VexAssessment)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
     * tracking number for the vulnerability.
     * Deprecated: Use vulnerability_id instead to denote CVEs.
     * </pre>
     *
     * <code>string cve = 1 [deprecated = true];</code>
     *
     * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
     *     grafeas/v1/vulnerability.proto;l=262
     * @return The cve.
     */
    @java.lang.Deprecated
    java.lang.String getCve();
    /**
     *
     *
     * <pre>
     * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
     * tracking number for the vulnerability.
     * Deprecated: Use vulnerability_id instead to denote CVEs.
     * </pre>
     *
     * <code>string cve = 1 [deprecated = true];</code>
     *
     * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
     *     grafeas/v1/vulnerability.proto;l=262
     * @return The bytes for cve.
     */
    @java.lang.Deprecated
    com.google.protobuf.ByteString getCveBytes();

    /**
     *
     *
     * <pre>
     * The vulnerability identifier for this Assessment. Will hold one of
     * common identifiers e.g. CVE, GHSA etc.
     * </pre>
     *
     * <code>string vulnerability_id = 8;</code>
     *
     * @return The vulnerabilityId.
     */
    java.lang.String getVulnerabilityId();
    /**
     *
     *
     * <pre>
     * The vulnerability identifier for this Assessment. Will hold one of
     * common identifiers e.g. CVE, GHSA etc.
     * </pre>
     *
     * <code>string vulnerability_id = 8;</code>
     *
     * @return The bytes for vulnerabilityId.
     */
    com.google.protobuf.ByteString getVulnerabilityIdBytes();

    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    java.util.List<io.grafeas.v1.RelatedUrl> getRelatedUrisList();
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    io.grafeas.v1.RelatedUrl getRelatedUris(int index);
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    int getRelatedUrisCount();
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    java.util.List<? extends io.grafeas.v1.RelatedUrlOrBuilder> getRelatedUrisOrBuilderList();
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    io.grafeas.v1.RelatedUrlOrBuilder getRelatedUrisOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * The VulnerabilityAssessment note from which this VexAssessment was
     * generated.
     * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
     * (-- api-linter: core::0122::name-suffix=disabled
     *     aip.dev/not-precedent: The suffix is kept for consistency. --)
     * </pre>
     *
     * <code>string note_name = 3;</code>
     *
     * @return The noteName.
     */
    java.lang.String getNoteName();
    /**
     *
     *
     * <pre>
     * The VulnerabilityAssessment note from which this VexAssessment was
     * generated.
     * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
     * (-- api-linter: core::0122::name-suffix=disabled
     *     aip.dev/not-precedent: The suffix is kept for consistency. --)
     * </pre>
     *
     * <code>string note_name = 3;</code>
     *
     * @return The bytes for noteName.
     */
    com.google.protobuf.ByteString getNoteNameBytes();

    /**
     *
     *
     * <pre>
     * Provides the state of this Vulnerability assessment.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
     *
     * @return The enum numeric value on the wire for state.
     */
    int getStateValue();
    /**
     *
     *
     * <pre>
     * Provides the state of this Vulnerability assessment.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
     *
     * @return The state.
     */
    io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State getState();

    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @return A list containing the impacts.
     */
    java.util.List<java.lang.String> getImpactsList();
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @return The count of impacts.
     */
    int getImpactsCount();
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @param index The index of the element to return.
     * @return The impacts at the given index.
     */
    java.lang.String getImpacts(int index);
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the impacts at the given index.
     */
    com.google.protobuf.ByteString getImpactsBytes(int index);

    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    java.util.List<io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>
        getRemediationsList();
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation getRemediations(int index);
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    int getRemediationsCount();
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    java.util.List<
            ? extends io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder>
        getRemediationsOrBuilderList();
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder
        getRemediationsOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * Justification provides the justification when the state of the
     * assessment if NOT_AFFECTED.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
     * </code>
     *
     * @return Whether the justification field is set.
     */
    boolean hasJustification();
    /**
     *
     *
     * <pre>
     * Justification provides the justification when the state of the
     * assessment if NOT_AFFECTED.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
     * </code>
     *
     * @return The justification.
     */
    io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification getJustification();
    /**
     *
     *
     * <pre>
     * Justification provides the justification when the state of the
     * assessment if NOT_AFFECTED.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
     * </code>
     */
    io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.JustificationOrBuilder
        getJustificationOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * VexAssessment provides all publisher provided Vex information that is
   * related to this vulnerability.
   * </pre>
   *
   * Protobuf type {@code grafeas.v1.VulnerabilityOccurrence.VexAssessment}
   */
  public static final class VexAssessment extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:grafeas.v1.VulnerabilityOccurrence.VexAssessment)
      VexAssessmentOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use VexAssessment.newBuilder() to construct.
    private VexAssessment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private VexAssessment() {
      cve_ = "";
      vulnerabilityId_ = "";
      relatedUris_ = java.util.Collections.emptyList();
      noteName_ = "";
      state_ = 0;
      impacts_ = com.google.protobuf.LazyStringArrayList.emptyList();
      remediations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new VexAssessment();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_VexAssessment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_VexAssessment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.class,
              io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder.class);
    }

    private int bitField0_;
    public static final int CVE_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object cve_ = "";
    /**
     *
     *
     * <pre>
     * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
     * tracking number for the vulnerability.
     * Deprecated: Use vulnerability_id instead to denote CVEs.
     * </pre>
     *
     * <code>string cve = 1 [deprecated = true];</code>
     *
     * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
     *     grafeas/v1/vulnerability.proto;l=262
     * @return The cve.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.lang.String getCve() {
      java.lang.Object ref = cve_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cve_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
     * tracking number for the vulnerability.
     * Deprecated: Use vulnerability_id instead to denote CVEs.
     * </pre>
     *
     * <code>string cve = 1 [deprecated = true];</code>
     *
     * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
     *     grafeas/v1/vulnerability.proto;l=262
     * @return The bytes for cve.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public com.google.protobuf.ByteString getCveBytes() {
      java.lang.Object ref = cve_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        cve_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VULNERABILITY_ID_FIELD_NUMBER = 8;

    @SuppressWarnings("serial")
    private volatile java.lang.Object vulnerabilityId_ = "";
    /**
     *
     *
     * <pre>
     * The vulnerability identifier for this Assessment. Will hold one of
     * common identifiers e.g. CVE, GHSA etc.
     * </pre>
     *
     * <code>string vulnerability_id = 8;</code>
     *
     * @return The vulnerabilityId.
     */
    @java.lang.Override
    public java.lang.String getVulnerabilityId() {
      java.lang.Object ref = vulnerabilityId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vulnerabilityId_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The vulnerability identifier for this Assessment. Will hold one of
     * common identifiers e.g. CVE, GHSA etc.
     * </pre>
     *
     * <code>string vulnerability_id = 8;</code>
     *
     * @return The bytes for vulnerabilityId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getVulnerabilityIdBytes() {
      java.lang.Object ref = vulnerabilityId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        vulnerabilityId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELATED_URIS_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private java.util.List<io.grafeas.v1.RelatedUrl> relatedUris_;
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.grafeas.v1.RelatedUrl> getRelatedUrisList() {
      return relatedUris_;
    }
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.grafeas.v1.RelatedUrlOrBuilder>
        getRelatedUrisOrBuilderList() {
      return relatedUris_;
    }
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    @java.lang.Override
    public int getRelatedUrisCount() {
      return relatedUris_.size();
    }
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    @java.lang.Override
    public io.grafeas.v1.RelatedUrl getRelatedUris(int index) {
      return relatedUris_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Holds a list of references associated with this vulnerability item and
     * assessment.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
     */
    @java.lang.Override
    public io.grafeas.v1.RelatedUrlOrBuilder getRelatedUrisOrBuilder(int index) {
      return relatedUris_.get(index);
    }

    public static final int NOTE_NAME_FIELD_NUMBER = 3;

    @SuppressWarnings("serial")
    private volatile java.lang.Object noteName_ = "";
    /**
     *
     *
     * <pre>
     * The VulnerabilityAssessment note from which this VexAssessment was
     * generated.
     * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
     * (-- api-linter: core::0122::name-suffix=disabled
     *     aip.dev/not-precedent: The suffix is kept for consistency. --)
     * </pre>
     *
     * <code>string note_name = 3;</code>
     *
     * @return The noteName.
     */
    @java.lang.Override
    public java.lang.String getNoteName() {
      java.lang.Object ref = noteName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        noteName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The VulnerabilityAssessment note from which this VexAssessment was
     * generated.
     * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
     * (-- api-linter: core::0122::name-suffix=disabled
     *     aip.dev/not-precedent: The suffix is kept for consistency. --)
     * </pre>
     *
     * <code>string note_name = 3;</code>
     *
     * @return The bytes for noteName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNoteNameBytes() {
      java.lang.Object ref = noteName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        noteName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATE_FIELD_NUMBER = 4;
    private int state_ = 0;
    /**
     *
     *
     * <pre>
     * Provides the state of this Vulnerability assessment.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }
    /**
     *
     *
     * <pre>
     * Provides the state of this Vulnerability assessment.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
     *
     * @return The state.
     */
    @java.lang.Override
    public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State getState() {
      io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State result =
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State.forNumber(state_);
      return result == null
          ? io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State.UNRECOGNIZED
          : result;
    }

    public static final int IMPACTS_FIELD_NUMBER = 5;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList impacts_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @return A list containing the impacts.
     */
    public com.google.protobuf.ProtocolStringList getImpactsList() {
      return impacts_;
    }
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @return The count of impacts.
     */
    public int getImpactsCount() {
      return impacts_.size();
    }
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @param index The index of the element to return.
     * @return The impacts at the given index.
     */
    public java.lang.String getImpacts(int index) {
      return impacts_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Contains information about the impact of this vulnerability,
     * this will change with time.
     * </pre>
     *
     * <code>repeated string impacts = 5;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the impacts at the given index.
     */
    public com.google.protobuf.ByteString getImpactsBytes(int index) {
      return impacts_.getByteString(index);
    }

    public static final int REMEDIATIONS_FIELD_NUMBER = 6;

    @SuppressWarnings("serial")
    private java.util.List<io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>
        remediations_;
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    @java.lang.Override
    public java.util.List<io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>
        getRemediationsList() {
      return remediations_;
    }
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder>
        getRemediationsOrBuilderList() {
      return remediations_;
    }
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    @java.lang.Override
    public int getRemediationsCount() {
      return remediations_.size();
    }
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    @java.lang.Override
    public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation getRemediations(
        int index) {
      return remediations_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * </pre>
     *
     * <code>
     * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
     * </code>
     */
    @java.lang.Override
    public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder
        getRemediationsOrBuilder(int index) {
      return remediations_.get(index);
    }

    public static final int JUSTIFICATION_FIELD_NUMBER = 7;
    private io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification_;
    /**
     *
     *
     * <pre>
     * Justification provides the justification when the state of the
     * assessment if NOT_AFFECTED.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
     * </code>
     *
     * @return Whether the justification field is set.
     */
    @java.lang.Override
    public boolean hasJustification() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Justification provides the justification when the state of the
     * assessment if NOT_AFFECTED.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
     * </code>
     *
     * @return The justification.
     */
    @java.lang.Override
    public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification getJustification() {
      return justification_ == null
          ? io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.getDefaultInstance()
          : justification_;
    }
    /**
     *
     *
     * <pre>
     * Justification provides the justification when the state of the
     * assessment if NOT_AFFECTED.
     * </pre>
     *
     * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
     * </code>
     */
    @java.lang.Override
    public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.JustificationOrBuilder
        getJustificationOrBuilder() {
      return justification_ == null
          ? io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.getDefaultInstance()
          : justification_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cve_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cve_);
      }
      for (int i = 0; i < relatedUris_.size(); i++) {
        output.writeMessage(2, relatedUris_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(noteName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, noteName_);
      }
      if (state_
          != io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State.STATE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(4, state_);
      }
      for (int i = 0; i < impacts_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, impacts_.getRaw(i));
      }
      for (int i = 0; i < remediations_.size(); i++) {
        output.writeMessage(6, remediations_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(7, getJustification());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vulnerabilityId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, vulnerabilityId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cve_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cve_);
      }
      for (int i = 0; i < relatedUris_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, relatedUris_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(noteName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, noteName_);
      }
      if (state_
          != io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State.STATE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, state_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < impacts_.size(); i++) {
          dataSize += computeStringSizeNoTag(impacts_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getImpactsList().size();
      }
      for (int i = 0; i < remediations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, remediations_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, getJustification());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vulnerabilityId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, vulnerabilityId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof io.grafeas.v1.VulnerabilityOccurrence.VexAssessment)) {
        return super.equals(obj);
      }
      io.grafeas.v1.VulnerabilityOccurrence.VexAssessment other =
          (io.grafeas.v1.VulnerabilityOccurrence.VexAssessment) obj;

      if (!getCve().equals(other.getCve())) return false;
      if (!getVulnerabilityId().equals(other.getVulnerabilityId())) return false;
      if (!getRelatedUrisList().equals(other.getRelatedUrisList())) return false;
      if (!getNoteName().equals(other.getNoteName())) return false;
      if (state_ != other.state_) return false;
      if (!getImpactsList().equals(other.getImpactsList())) return false;
      if (!getRemediationsList().equals(other.getRemediationsList())) return false;
      if (hasJustification() != other.hasJustification()) return false;
      if (hasJustification()) {
        if (!getJustification().equals(other.getJustification())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CVE_FIELD_NUMBER;
      hash = (53 * hash) + getCve().hashCode();
      hash = (37 * hash) + VULNERABILITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getVulnerabilityId().hashCode();
      if (getRelatedUrisCount() > 0) {
        hash = (37 * hash) + RELATED_URIS_FIELD_NUMBER;
        hash = (53 * hash) + getRelatedUrisList().hashCode();
      }
      hash = (37 * hash) + NOTE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getNoteName().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      if (getImpactsCount() > 0) {
        hash = (37 * hash) + IMPACTS_FIELD_NUMBER;
        hash = (53 * hash) + getImpactsList().hashCode();
      }
      if (getRemediationsCount() > 0) {
        hash = (37 * hash) + REMEDIATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRemediationsList().hashCode();
      }
      if (hasJustification()) {
        hash = (37 * hash) + JUSTIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getJustification().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        io.grafeas.v1.VulnerabilityOccurrence.VexAssessment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * VexAssessment provides all publisher provided Vex information that is
     * related to this vulnerability.
     * </pre>
     *
     * Protobuf type {@code grafeas.v1.VulnerabilityOccurrence.VexAssessment}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:grafeas.v1.VulnerabilityOccurrence.VexAssessment)
        io.grafeas.v1.VulnerabilityOccurrence.VexAssessmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return io.grafeas.v1.Vulnerability
            .internal_static_grafeas_v1_VulnerabilityOccurrence_VexAssessment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.grafeas.v1.Vulnerability
            .internal_static_grafeas_v1_VulnerabilityOccurrence_VexAssessment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.class,
                io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder.class);
      }

      // Construct using io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getRelatedUrisFieldBuilder();
          getRemediationsFieldBuilder();
          getJustificationFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cve_ = "";
        vulnerabilityId_ = "";
        if (relatedUrisBuilder_ == null) {
          relatedUris_ = java.util.Collections.emptyList();
        } else {
          relatedUris_ = null;
          relatedUrisBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        noteName_ = "";
        state_ = 0;
        impacts_ = com.google.protobuf.LazyStringArrayList.emptyList();
        if (remediationsBuilder_ == null) {
          remediations_ = java.util.Collections.emptyList();
        } else {
          remediations_ = null;
          remediationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        justification_ = null;
        if (justificationBuilder_ != null) {
          justificationBuilder_.dispose();
          justificationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return io.grafeas.v1.Vulnerability
            .internal_static_grafeas_v1_VulnerabilityOccurrence_VexAssessment_descriptor;
      }

      @java.lang.Override
      public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment getDefaultInstanceForType() {
        return io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance();
      }

      @java.lang.Override
      public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment build() {
        io.grafeas.v1.VulnerabilityOccurrence.VexAssessment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment buildPartial() {
        io.grafeas.v1.VulnerabilityOccurrence.VexAssessment result =
            new io.grafeas.v1.VulnerabilityOccurrence.VexAssessment(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          io.grafeas.v1.VulnerabilityOccurrence.VexAssessment result) {
        if (relatedUrisBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            relatedUris_ = java.util.Collections.unmodifiableList(relatedUris_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.relatedUris_ = relatedUris_;
        } else {
          result.relatedUris_ = relatedUrisBuilder_.build();
        }
        if (remediationsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            remediations_ = java.util.Collections.unmodifiableList(remediations_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.remediations_ = remediations_;
        } else {
          result.remediations_ = remediationsBuilder_.build();
        }
      }

      private void buildPartial0(io.grafeas.v1.VulnerabilityOccurrence.VexAssessment result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cve_ = cve_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.vulnerabilityId_ = vulnerabilityId_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.noteName_ = noteName_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.state_ = state_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          impacts_.makeImmutable();
          result.impacts_ = impacts_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.justification_ =
              justificationBuilder_ == null ? justification_ : justificationBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.grafeas.v1.VulnerabilityOccurrence.VexAssessment) {
          return mergeFrom((io.grafeas.v1.VulnerabilityOccurrence.VexAssessment) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.grafeas.v1.VulnerabilityOccurrence.VexAssessment other) {
        if (other == io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance())
          return this;
        if (!other.getCve().isEmpty()) {
          cve_ = other.cve_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getVulnerabilityId().isEmpty()) {
          vulnerabilityId_ = other.vulnerabilityId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (relatedUrisBuilder_ == null) {
          if (!other.relatedUris_.isEmpty()) {
            if (relatedUris_.isEmpty()) {
              relatedUris_ = other.relatedUris_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRelatedUrisIsMutable();
              relatedUris_.addAll(other.relatedUris_);
            }
            onChanged();
          }
        } else {
          if (!other.relatedUris_.isEmpty()) {
            if (relatedUrisBuilder_.isEmpty()) {
              relatedUrisBuilder_.dispose();
              relatedUrisBuilder_ = null;
              relatedUris_ = other.relatedUris_;
              bitField0_ = (bitField0_ & ~0x00000004);
              relatedUrisBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getRelatedUrisFieldBuilder()
                      : null;
            } else {
              relatedUrisBuilder_.addAllMessages(other.relatedUris_);
            }
          }
        }
        if (!other.getNoteName().isEmpty()) {
          noteName_ = other.noteName_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        if (!other.impacts_.isEmpty()) {
          if (impacts_.isEmpty()) {
            impacts_ = other.impacts_;
            bitField0_ |= 0x00000020;
          } else {
            ensureImpactsIsMutable();
            impacts_.addAll(other.impacts_);
          }
          onChanged();
        }
        if (remediationsBuilder_ == null) {
          if (!other.remediations_.isEmpty()) {
            if (remediations_.isEmpty()) {
              remediations_ = other.remediations_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureRemediationsIsMutable();
              remediations_.addAll(other.remediations_);
            }
            onChanged();
          }
        } else {
          if (!other.remediations_.isEmpty()) {
            if (remediationsBuilder_.isEmpty()) {
              remediationsBuilder_.dispose();
              remediationsBuilder_ = null;
              remediations_ = other.remediations_;
              bitField0_ = (bitField0_ & ~0x00000040);
              remediationsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getRemediationsFieldBuilder()
                      : null;
            } else {
              remediationsBuilder_.addAllMessages(other.remediations_);
            }
          }
        }
        if (other.hasJustification()) {
          mergeJustification(other.getJustification());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  cve_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  io.grafeas.v1.RelatedUrl m =
                      input.readMessage(io.grafeas.v1.RelatedUrl.parser(), extensionRegistry);
                  if (relatedUrisBuilder_ == null) {
                    ensureRelatedUrisIsMutable();
                    relatedUris_.add(m);
                  } else {
                    relatedUrisBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
              case 26:
                {
                  noteName_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 26
              case 32:
                {
                  state_ = input.readEnum();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 32
              case 42:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureImpactsIsMutable();
                  impacts_.add(s);
                  break;
                } // case 42
              case 50:
                {
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation m =
                      input.readMessage(
                          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.parser(),
                          extensionRegistry);
                  if (remediationsBuilder_ == null) {
                    ensureRemediationsIsMutable();
                    remediations_.add(m);
                  } else {
                    remediationsBuilder_.addMessage(m);
                  }
                  break;
                } // case 50
              case 58:
                {
                  input.readMessage(getJustificationFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000080;
                  break;
                } // case 58
              case 66:
                {
                  vulnerabilityId_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 66
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object cve_ = "";
      /**
       *
       *
       * <pre>
       * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
       * tracking number for the vulnerability.
       * Deprecated: Use vulnerability_id instead to denote CVEs.
       * </pre>
       *
       * <code>string cve = 1 [deprecated = true];</code>
       *
       * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
       *     grafeas/v1/vulnerability.proto;l=262
       * @return The cve.
       */
      @java.lang.Deprecated
      public java.lang.String getCve() {
        java.lang.Object ref = cve_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cve_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
       * tracking number for the vulnerability.
       * Deprecated: Use vulnerability_id instead to denote CVEs.
       * </pre>
       *
       * <code>string cve = 1 [deprecated = true];</code>
       *
       * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
       *     grafeas/v1/vulnerability.proto;l=262
       * @return The bytes for cve.
       */
      @java.lang.Deprecated
      public com.google.protobuf.ByteString getCveBytes() {
        java.lang.Object ref = cve_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          cve_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
       * tracking number for the vulnerability.
       * Deprecated: Use vulnerability_id instead to denote CVEs.
       * </pre>
       *
       * <code>string cve = 1 [deprecated = true];</code>
       *
       * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
       *     grafeas/v1/vulnerability.proto;l=262
       * @param value The cve to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated
      public Builder setCve(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        cve_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
       * tracking number for the vulnerability.
       * Deprecated: Use vulnerability_id instead to denote CVEs.
       * </pre>
       *
       * <code>string cve = 1 [deprecated = true];</code>
       *
       * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
       *     grafeas/v1/vulnerability.proto;l=262
       * @return This builder for chaining.
       */
      @java.lang.Deprecated
      public Builder clearCve() {
        cve_ = getDefaultInstance().getCve();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
       * tracking number for the vulnerability.
       * Deprecated: Use vulnerability_id instead to denote CVEs.
       * </pre>
       *
       * <code>string cve = 1 [deprecated = true];</code>
       *
       * @deprecated grafeas.v1.VulnerabilityOccurrence.VexAssessment.cve is deprecated. See
       *     grafeas/v1/vulnerability.proto;l=262
       * @param value The bytes for cve to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated
      public Builder setCveBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        cve_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object vulnerabilityId_ = "";
      /**
       *
       *
       * <pre>
       * The vulnerability identifier for this Assessment. Will hold one of
       * common identifiers e.g. CVE, GHSA etc.
       * </pre>
       *
       * <code>string vulnerability_id = 8;</code>
       *
       * @return The vulnerabilityId.
       */
      public java.lang.String getVulnerabilityId() {
        java.lang.Object ref = vulnerabilityId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vulnerabilityId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The vulnerability identifier for this Assessment. Will hold one of
       * common identifiers e.g. CVE, GHSA etc.
       * </pre>
       *
       * <code>string vulnerability_id = 8;</code>
       *
       * @return The bytes for vulnerabilityId.
       */
      public com.google.protobuf.ByteString getVulnerabilityIdBytes() {
        java.lang.Object ref = vulnerabilityId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          vulnerabilityId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The vulnerability identifier for this Assessment. Will hold one of
       * common identifiers e.g. CVE, GHSA etc.
       * </pre>
       *
       * <code>string vulnerability_id = 8;</code>
       *
       * @param value The vulnerabilityId to set.
       * @return This builder for chaining.
       */
      public Builder setVulnerabilityId(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        vulnerabilityId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The vulnerability identifier for this Assessment. Will hold one of
       * common identifiers e.g. CVE, GHSA etc.
       * </pre>
       *
       * <code>string vulnerability_id = 8;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearVulnerabilityId() {
        vulnerabilityId_ = getDefaultInstance().getVulnerabilityId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The vulnerability identifier for this Assessment. Will hold one of
       * common identifiers e.g. CVE, GHSA etc.
       * </pre>
       *
       * <code>string vulnerability_id = 8;</code>
       *
       * @param value The bytes for vulnerabilityId to set.
       * @return This builder for chaining.
       */
      public Builder setVulnerabilityIdBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        vulnerabilityId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.util.List<io.grafeas.v1.RelatedUrl> relatedUris_ =
          java.util.Collections.emptyList();

      private void ensureRelatedUrisIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          relatedUris_ = new java.util.ArrayList<io.grafeas.v1.RelatedUrl>(relatedUris_);
          bitField0_ |= 0x00000004;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              io.grafeas.v1.RelatedUrl,
              io.grafeas.v1.RelatedUrl.Builder,
              io.grafeas.v1.RelatedUrlOrBuilder>
          relatedUrisBuilder_;

      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public java.util.List<io.grafeas.v1.RelatedUrl> getRelatedUrisList() {
        if (relatedUrisBuilder_ == null) {
          return java.util.Collections.unmodifiableList(relatedUris_);
        } else {
          return relatedUrisBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public int getRelatedUrisCount() {
        if (relatedUrisBuilder_ == null) {
          return relatedUris_.size();
        } else {
          return relatedUrisBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public io.grafeas.v1.RelatedUrl getRelatedUris(int index) {
        if (relatedUrisBuilder_ == null) {
          return relatedUris_.get(index);
        } else {
          return relatedUrisBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder setRelatedUris(int index, io.grafeas.v1.RelatedUrl value) {
        if (relatedUrisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelatedUrisIsMutable();
          relatedUris_.set(index, value);
          onChanged();
        } else {
          relatedUrisBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder setRelatedUris(int index, io.grafeas.v1.RelatedUrl.Builder builderForValue) {
        if (relatedUrisBuilder_ == null) {
          ensureRelatedUrisIsMutable();
          relatedUris_.set(index, builderForValue.build());
          onChanged();
        } else {
          relatedUrisBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder addRelatedUris(io.grafeas.v1.RelatedUrl value) {
        if (relatedUrisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelatedUrisIsMutable();
          relatedUris_.add(value);
          onChanged();
        } else {
          relatedUrisBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder addRelatedUris(int index, io.grafeas.v1.RelatedUrl value) {
        if (relatedUrisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelatedUrisIsMutable();
          relatedUris_.add(index, value);
          onChanged();
        } else {
          relatedUrisBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder addRelatedUris(io.grafeas.v1.RelatedUrl.Builder builderForValue) {
        if (relatedUrisBuilder_ == null) {
          ensureRelatedUrisIsMutable();
          relatedUris_.add(builderForValue.build());
          onChanged();
        } else {
          relatedUrisBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder addRelatedUris(int index, io.grafeas.v1.RelatedUrl.Builder builderForValue) {
        if (relatedUrisBuilder_ == null) {
          ensureRelatedUrisIsMutable();
          relatedUris_.add(index, builderForValue.build());
          onChanged();
        } else {
          relatedUrisBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder addAllRelatedUris(
          java.lang.Iterable<? extends io.grafeas.v1.RelatedUrl> values) {
        if (relatedUrisBuilder_ == null) {
          ensureRelatedUrisIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, relatedUris_);
          onChanged();
        } else {
          relatedUrisBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder clearRelatedUris() {
        if (relatedUrisBuilder_ == null) {
          relatedUris_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          relatedUrisBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public Builder removeRelatedUris(int index) {
        if (relatedUrisBuilder_ == null) {
          ensureRelatedUrisIsMutable();
          relatedUris_.remove(index);
          onChanged();
        } else {
          relatedUrisBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public io.grafeas.v1.RelatedUrl.Builder getRelatedUrisBuilder(int index) {
        return getRelatedUrisFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public io.grafeas.v1.RelatedUrlOrBuilder getRelatedUrisOrBuilder(int index) {
        if (relatedUrisBuilder_ == null) {
          return relatedUris_.get(index);
        } else {
          return relatedUrisBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public java.util.List<? extends io.grafeas.v1.RelatedUrlOrBuilder>
          getRelatedUrisOrBuilderList() {
        if (relatedUrisBuilder_ != null) {
          return relatedUrisBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(relatedUris_);
        }
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public io.grafeas.v1.RelatedUrl.Builder addRelatedUrisBuilder() {
        return getRelatedUrisFieldBuilder()
            .addBuilder(io.grafeas.v1.RelatedUrl.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public io.grafeas.v1.RelatedUrl.Builder addRelatedUrisBuilder(int index) {
        return getRelatedUrisFieldBuilder()
            .addBuilder(index, io.grafeas.v1.RelatedUrl.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Holds a list of references associated with this vulnerability item and
       * assessment.
       * </pre>
       *
       * <code>repeated .grafeas.v1.RelatedUrl related_uris = 2;</code>
       */
      public java.util.List<io.grafeas.v1.RelatedUrl.Builder> getRelatedUrisBuilderList() {
        return getRelatedUrisFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              io.grafeas.v1.RelatedUrl,
              io.grafeas.v1.RelatedUrl.Builder,
              io.grafeas.v1.RelatedUrlOrBuilder>
          getRelatedUrisFieldBuilder() {
        if (relatedUrisBuilder_ == null) {
          relatedUrisBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  io.grafeas.v1.RelatedUrl,
                  io.grafeas.v1.RelatedUrl.Builder,
                  io.grafeas.v1.RelatedUrlOrBuilder>(
                  relatedUris_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          relatedUris_ = null;
        }
        return relatedUrisBuilder_;
      }

      private java.lang.Object noteName_ = "";
      /**
       *
       *
       * <pre>
       * The VulnerabilityAssessment note from which this VexAssessment was
       * generated.
       * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
       * (-- api-linter: core::0122::name-suffix=disabled
       *     aip.dev/not-precedent: The suffix is kept for consistency. --)
       * </pre>
       *
       * <code>string note_name = 3;</code>
       *
       * @return The noteName.
       */
      public java.lang.String getNoteName() {
        java.lang.Object ref = noteName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          noteName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The VulnerabilityAssessment note from which this VexAssessment was
       * generated.
       * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
       * (-- api-linter: core::0122::name-suffix=disabled
       *     aip.dev/not-precedent: The suffix is kept for consistency. --)
       * </pre>
       *
       * <code>string note_name = 3;</code>
       *
       * @return The bytes for noteName.
       */
      public com.google.protobuf.ByteString getNoteNameBytes() {
        java.lang.Object ref = noteName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          noteName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The VulnerabilityAssessment note from which this VexAssessment was
       * generated.
       * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
       * (-- api-linter: core::0122::name-suffix=disabled
       *     aip.dev/not-precedent: The suffix is kept for consistency. --)
       * </pre>
       *
       * <code>string note_name = 3;</code>
       *
       * @param value The noteName to set.
       * @return This builder for chaining.
       */
      public Builder setNoteName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        noteName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The VulnerabilityAssessment note from which this VexAssessment was
       * generated.
       * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
       * (-- api-linter: core::0122::name-suffix=disabled
       *     aip.dev/not-precedent: The suffix is kept for consistency. --)
       * </pre>
       *
       * <code>string note_name = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNoteName() {
        noteName_ = getDefaultInstance().getNoteName();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The VulnerabilityAssessment note from which this VexAssessment was
       * generated.
       * This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
       * (-- api-linter: core::0122::name-suffix=disabled
       *     aip.dev/not-precedent: The suffix is kept for consistency. --)
       * </pre>
       *
       * <code>string note_name = 3;</code>
       *
       * @param value The bytes for noteName to set.
       * @return This builder for chaining.
       */
      public Builder setNoteNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        noteName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private int state_ = 0;
      /**
       *
       *
       * <pre>
       * Provides the state of this Vulnerability assessment.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
       *
       * @return The enum numeric value on the wire for state.
       */
      @java.lang.Override
      public int getStateValue() {
        return state_;
      }
      /**
       *
       *
       * <pre>
       * Provides the state of this Vulnerability assessment.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
       *
       * @param value The enum numeric value on the wire for state to set.
       * @return This builder for chaining.
       */
      public Builder setStateValue(int value) {
        state_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Provides the state of this Vulnerability assessment.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
       *
       * @return The state.
       */
      @java.lang.Override
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State getState() {
        io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State result =
            io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State.forNumber(state_);
        return result == null
            ? io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Provides the state of this Vulnerability assessment.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
       *
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Provides the state of this Vulnerability assessment.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.State state = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList impacts_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureImpactsIsMutable() {
        if (!impacts_.isModifiable()) {
          impacts_ = new com.google.protobuf.LazyStringArrayList(impacts_);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @return A list containing the impacts.
       */
      public com.google.protobuf.ProtocolStringList getImpactsList() {
        impacts_.makeImmutable();
        return impacts_;
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @return The count of impacts.
       */
      public int getImpactsCount() {
        return impacts_.size();
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @param index The index of the element to return.
       * @return The impacts at the given index.
       */
      public java.lang.String getImpacts(int index) {
        return impacts_.get(index);
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the impacts at the given index.
       */
      public com.google.protobuf.ByteString getImpactsBytes(int index) {
        return impacts_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @param index The index to set the value at.
       * @param value The impacts to set.
       * @return This builder for chaining.
       */
      public Builder setImpacts(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureImpactsIsMutable();
        impacts_.set(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @param value The impacts to add.
       * @return This builder for chaining.
       */
      public Builder addImpacts(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureImpactsIsMutable();
        impacts_.add(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @param values The impacts to add.
       * @return This builder for chaining.
       */
      public Builder addAllImpacts(java.lang.Iterable<java.lang.String> values) {
        ensureImpactsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, impacts_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearImpacts() {
        impacts_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Contains information about the impact of this vulnerability,
       * this will change with time.
       * </pre>
       *
       * <code>repeated string impacts = 5;</code>
       *
       * @param value The bytes of the impacts to add.
       * @return This builder for chaining.
       */
      public Builder addImpactsBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureImpactsIsMutable();
        impacts_.add(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private java.util.List<io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>
          remediations_ = java.util.Collections.emptyList();

      private void ensureRemediationsIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          remediations_ =
              new java.util.ArrayList<
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>(remediations_);
          bitField0_ |= 0x00000040;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder>
          remediationsBuilder_;

      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public java.util.List<io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>
          getRemediationsList() {
        if (remediationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(remediations_);
        } else {
          return remediationsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public int getRemediationsCount() {
        if (remediationsBuilder_ == null) {
          return remediations_.size();
        } else {
          return remediationsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation getRemediations(
          int index) {
        if (remediationsBuilder_ == null) {
          return remediations_.get(index);
        } else {
          return remediationsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder setRemediations(
          int index, io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation value) {
        if (remediationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemediationsIsMutable();
          remediations_.set(index, value);
          onChanged();
        } else {
          remediationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder setRemediations(
          int index,
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder
              builderForValue) {
        if (remediationsBuilder_ == null) {
          ensureRemediationsIsMutable();
          remediations_.set(index, builderForValue.build());
          onChanged();
        } else {
          remediationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder addRemediations(
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation value) {
        if (remediationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemediationsIsMutable();
          remediations_.add(value);
          onChanged();
        } else {
          remediationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder addRemediations(
          int index, io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation value) {
        if (remediationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemediationsIsMutable();
          remediations_.add(index, value);
          onChanged();
        } else {
          remediationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder addRemediations(
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder
              builderForValue) {
        if (remediationsBuilder_ == null) {
          ensureRemediationsIsMutable();
          remediations_.add(builderForValue.build());
          onChanged();
        } else {
          remediationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder addRemediations(
          int index,
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder
              builderForValue) {
        if (remediationsBuilder_ == null) {
          ensureRemediationsIsMutable();
          remediations_.add(index, builderForValue.build());
          onChanged();
        } else {
          remediationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder addAllRemediations(
          java.lang.Iterable<
                  ? extends io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation>
              values) {
        if (remediationsBuilder_ == null) {
          ensureRemediationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, remediations_);
          onChanged();
        } else {
          remediationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder clearRemediations() {
        if (remediationsBuilder_ == null) {
          remediations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          remediationsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public Builder removeRemediations(int index) {
        if (remediationsBuilder_ == null) {
          ensureRemediationsIsMutable();
          remediations_.remove(index);
          onChanged();
        } else {
          remediationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder
          getRemediationsBuilder(int index) {
        return getRemediationsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder
          getRemediationsOrBuilder(int index) {
        if (remediationsBuilder_ == null) {
          return remediations_.get(index);
        } else {
          return remediationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public java.util.List<
              ? extends io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder>
          getRemediationsOrBuilderList() {
        if (remediationsBuilder_ != null) {
          return remediationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(remediations_);
        }
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder
          addRemediationsBuilder() {
        return getRemediationsFieldBuilder()
            .addBuilder(
                io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder
          addRemediationsBuilder(int index) {
        return getRemediationsFieldBuilder()
            .addBuilder(
                index,
                io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Specifies details on how to handle (and presumably, fix) a vulnerability.
       * </pre>
       *
       * <code>
       * repeated .grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation remediations = 6;
       * </code>
       */
      public java.util.List<
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder>
          getRemediationsBuilderList() {
        return getRemediationsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder>
          getRemediationsFieldBuilder() {
        if (remediationsBuilder_ == null) {
          remediationsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation,
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.Builder,
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.RemediationOrBuilder>(
                  remediations_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          remediations_ = null;
        }
        return remediationsBuilder_;
      }

      private io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification_;
      private com.google.protobuf.SingleFieldBuilderV3<
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.Builder,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.JustificationOrBuilder>
          justificationBuilder_;
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       *
       * @return Whether the justification field is set.
       */
      public boolean hasJustification() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       *
       * @return The justification.
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification getJustification() {
        if (justificationBuilder_ == null) {
          return justification_ == null
              ? io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification
                  .getDefaultInstance()
              : justification_;
        } else {
          return justificationBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      public Builder setJustification(
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification value) {
        if (justificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          justification_ = value;
        } else {
          justificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      public Builder setJustification(
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.Builder
              builderForValue) {
        if (justificationBuilder_ == null) {
          justification_ = builderForValue.build();
        } else {
          justificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      public Builder mergeJustification(
          io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification value) {
        if (justificationBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)
              && justification_ != null
              && justification_
                  != io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification
                      .getDefaultInstance()) {
            getJustificationBuilder().mergeFrom(value);
          } else {
            justification_ = value;
          }
        } else {
          justificationBuilder_.mergeFrom(value);
        }
        if (justification_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      public Builder clearJustification() {
        bitField0_ = (bitField0_ & ~0x00000080);
        justification_ = null;
        if (justificationBuilder_ != null) {
          justificationBuilder_.dispose();
          justificationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.Builder
          getJustificationBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getJustificationFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      public io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.JustificationOrBuilder
          getJustificationOrBuilder() {
        if (justificationBuilder_ != null) {
          return justificationBuilder_.getMessageOrBuilder();
        } else {
          return justification_ == null
              ? io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification
                  .getDefaultInstance()
              : justification_;
        }
      }
      /**
       *
       *
       * <pre>
       * Justification provides the justification when the state of the
       * assessment if NOT_AFFECTED.
       * </pre>
       *
       * <code>.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification justification = 7;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.Builder,
              io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.JustificationOrBuilder>
          getJustificationFieldBuilder() {
        if (justificationBuilder_ == null) {
          justificationBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification,
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.Justification.Builder,
                  io.grafeas.v1.VulnerabilityAssessmentNote.Assessment.JustificationOrBuilder>(
                  getJustification(), getParentForChildren(), isClean());
          justification_ = null;
        }
        return justificationBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:grafeas.v1.VulnerabilityOccurrence.VexAssessment)
    }

    // @@protoc_insertion_point(class_scope:grafeas.v1.VulnerabilityOccurrence.VexAssessment)
    private static final io.grafeas.v1.VulnerabilityOccurrence.VexAssessment DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new io.grafeas.v1.VulnerabilityOccurrence.VexAssessment();
    }

    public static io.grafeas.v1.VulnerabilityOccurrence.VexAssessment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VexAssessment> PARSER =
        new com.google.protobuf.AbstractParser<VexAssessment>() {
          @java.lang.Override
          public VexAssessment parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<VexAssessment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VexAssessment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object type_ = "";
  /**
   *
   *
   * <pre>
   * The type of package; whether native or non native (e.g., ruby gems, node.js
   * packages, etc.).
   * </pre>
   *
   * <code>string type = 1;</code>
   *
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The type of package; whether native or non native (e.g., ruby gems, node.js
   * packages, etc.).
   * </pre>
   *
   * <code>string type = 1;</code>
   *
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SEVERITY_FIELD_NUMBER = 2;
  private int severity_ = 0;
  /**
   *
   *
   * <pre>
   * Output only. The note provider assigned severity of this vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.Severity severity = 2;</code>
   *
   * @return The enum numeric value on the wire for severity.
   */
  @java.lang.Override
  public int getSeverityValue() {
    return severity_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The note provider assigned severity of this vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.Severity severity = 2;</code>
   *
   * @return The severity.
   */
  @java.lang.Override
  public io.grafeas.v1.Severity getSeverity() {
    io.grafeas.v1.Severity result = io.grafeas.v1.Severity.forNumber(severity_);
    return result == null ? io.grafeas.v1.Severity.UNRECOGNIZED : result;
  }

  public static final int CVSS_SCORE_FIELD_NUMBER = 3;
  private float cvssScore_ = 0F;
  /**
   *
   *
   * <pre>
   * Output only. The CVSS score of this vulnerability. CVSS score is on a
   * scale of 0 - 10 where 0 indicates low severity and 10 indicates high
   * severity.
   * </pre>
   *
   * <code>float cvss_score = 3;</code>
   *
   * @return The cvssScore.
   */
  @java.lang.Override
  public float getCvssScore() {
    return cvssScore_;
  }

  public static final int CVSSV3_FIELD_NUMBER = 10;
  private io.grafeas.v1.CVSS cvssv3_;
  /**
   *
   *
   * <pre>
   * The cvss v3 score for the vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
   *
   * @return Whether the cvssv3 field is set.
   */
  @java.lang.Override
  public boolean hasCvssv3() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The cvss v3 score for the vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
   *
   * @return The cvssv3.
   */
  @java.lang.Override
  public io.grafeas.v1.CVSS getCvssv3() {
    return cvssv3_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssv3_;
  }
  /**
   *
   *
   * <pre>
   * The cvss v3 score for the vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
   */
  @java.lang.Override
  public io.grafeas.v1.CVSSOrBuilder getCvssv3OrBuilder() {
    return cvssv3_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssv3_;
  }

  public static final int PACKAGE_ISSUE_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<io.grafeas.v1.VulnerabilityOccurrence.PackageIssue> packageIssue_;
  /**
   *
   *
   * <pre>
   * Required. The set of affected locations and their fixes (if available)
   * within the associated resource.
   * </pre>
   *
   * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
   */
  @java.lang.Override
  public java.util.List<io.grafeas.v1.VulnerabilityOccurrence.PackageIssue> getPackageIssueList() {
    return packageIssue_;
  }
  /**
   *
   *
   * <pre>
   * Required. The set of affected locations and their fixes (if available)
   * within the associated resource.
   * </pre>
   *
   * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder>
      getPackageIssueOrBuilderList() {
    return packageIssue_;
  }
  /**
   *
   *
   * <pre>
   * Required. The set of affected locations and their fixes (if available)
   * within the associated resource.
   * </pre>
   *
   * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
   */
  @java.lang.Override
  public int getPackageIssueCount() {
    return packageIssue_.size();
  }
  /**
   *
   *
   * <pre>
   * Required. The set of affected locations and their fixes (if available)
   * within the associated resource.
   * </pre>
   *
   * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
   */
  @java.lang.Override
  public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue getPackageIssue(int index) {
    return packageIssue_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Required. The set of affected locations and their fixes (if available)
   * within the associated resource.
   * </pre>
   *
   * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
   */
  @java.lang.Override
  public io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder getPackageIssueOrBuilder(
      int index) {
    return packageIssue_.get(index);
  }

  public static final int SHORT_DESCRIPTION_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object shortDescription_ = "";
  /**
   *
   *
   * <pre>
   * Output only. A one sentence description of this vulnerability.
   * </pre>
   *
   * <code>string short_description = 5;</code>
   *
   * @return The shortDescription.
   */
  @java.lang.Override
  public java.lang.String getShortDescription() {
    java.lang.Object ref = shortDescription_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      shortDescription_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. A one sentence description of this vulnerability.
   * </pre>
   *
   * <code>string short_description = 5;</code>
   *
   * @return The bytes for shortDescription.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getShortDescriptionBytes() {
    java.lang.Object ref = shortDescription_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      shortDescription_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LONG_DESCRIPTION_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private volatile java.lang.Object longDescription_ = "";
  /**
   *
   *
   * <pre>
   * Output only. A detailed description of this vulnerability.
   * </pre>
   *
   * <code>string long_description = 6;</code>
   *
   * @return The longDescription.
   */
  @java.lang.Override
  public java.lang.String getLongDescription() {
    java.lang.Object ref = longDescription_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      longDescription_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. A detailed description of this vulnerability.
   * </pre>
   *
   * <code>string long_description = 6;</code>
   *
   * @return The bytes for longDescription.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getLongDescriptionBytes() {
    java.lang.Object ref = longDescription_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      longDescription_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RELATED_URLS_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private java.util.List<io.grafeas.v1.RelatedUrl> relatedUrls_;
  /**
   *
   *
   * <pre>
   * Output only. URLs related to this vulnerability.
   * </pre>
   *
   * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
   */
  @java.lang.Override
  public java.util.List<io.grafeas.v1.RelatedUrl> getRelatedUrlsList() {
    return relatedUrls_;
  }
  /**
   *
   *
   * <pre>
   * Output only. URLs related to this vulnerability.
   * </pre>
   *
   * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.grafeas.v1.RelatedUrlOrBuilder> getRelatedUrlsOrBuilderList() {
    return relatedUrls_;
  }
  /**
   *
   *
   * <pre>
   * Output only. URLs related to this vulnerability.
   * </pre>
   *
   * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
   */
  @java.lang.Override
  public int getRelatedUrlsCount() {
    return relatedUrls_.size();
  }
  /**
   *
   *
   * <pre>
   * Output only. URLs related to this vulnerability.
   * </pre>
   *
   * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
   */
  @java.lang.Override
  public io.grafeas.v1.RelatedUrl getRelatedUrls(int index) {
    return relatedUrls_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Output only. URLs related to this vulnerability.
   * </pre>
   *
   * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
   */
  @java.lang.Override
  public io.grafeas.v1.RelatedUrlOrBuilder getRelatedUrlsOrBuilder(int index) {
    return relatedUrls_.get(index);
  }

  public static final int EFFECTIVE_SEVERITY_FIELD_NUMBER = 8;
  private int effectiveSeverity_ = 0;
  /**
   *
   *
   * <pre>
   * The distro assigned severity for this vulnerability when it is available,
   * otherwise this is the note provider assigned severity.
   *
   * When there are multiple PackageIssues for this vulnerability, they can have
   * different effective severities because some might be provided by the distro
   * while others are provided by the language ecosystem for a language pack.
   * For this reason, it is advised to use the effective severity on the
   * PackageIssue level. In the case where multiple PackageIssues have differing
   * effective severities, this field should be the highest severity for any of
   * the PackageIssues.
   * </pre>
   *
   * <code>.grafeas.v1.Severity effective_severity = 8;</code>
   *
   * @return The enum numeric value on the wire for effectiveSeverity.
   */
  @java.lang.Override
  public int getEffectiveSeverityValue() {
    return effectiveSeverity_;
  }
  /**
   *
   *
   * <pre>
   * The distro assigned severity for this vulnerability when it is available,
   * otherwise this is the note provider assigned severity.
   *
   * When there are multiple PackageIssues for this vulnerability, they can have
   * different effective severities because some might be provided by the distro
   * while others are provided by the language ecosystem for a language pack.
   * For this reason, it is advised to use the effective severity on the
   * PackageIssue level. In the case where multiple PackageIssues have differing
   * effective severities, this field should be the highest severity for any of
   * the PackageIssues.
   * </pre>
   *
   * <code>.grafeas.v1.Severity effective_severity = 8;</code>
   *
   * @return The effectiveSeverity.
   */
  @java.lang.Override
  public io.grafeas.v1.Severity getEffectiveSeverity() {
    io.grafeas.v1.Severity result = io.grafeas.v1.Severity.forNumber(effectiveSeverity_);
    return result == null ? io.grafeas.v1.Severity.UNRECOGNIZED : result;
  }

  public static final int FIX_AVAILABLE_FIELD_NUMBER = 9;
  private boolean fixAvailable_ = false;
  /**
   *
   *
   * <pre>
   * Output only. Whether at least one of the affected packages has a fix
   * available.
   * </pre>
   *
   * <code>bool fix_available = 9;</code>
   *
   * @return The fixAvailable.
   */
  @java.lang.Override
  public boolean getFixAvailable() {
    return fixAvailable_;
  }

  public static final int CVSS_VERSION_FIELD_NUMBER = 11;
  private int cvssVersion_ = 0;
  /**
   *
   *
   * <pre>
   * Output only. CVSS version used to populate cvss_score and severity.
   * </pre>
   *
   * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
   *
   * @return The enum numeric value on the wire for cvssVersion.
   */
  @java.lang.Override
  public int getCvssVersionValue() {
    return cvssVersion_;
  }
  /**
   *
   *
   * <pre>
   * Output only. CVSS version used to populate cvss_score and severity.
   * </pre>
   *
   * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
   *
   * @return The cvssVersion.
   */
  @java.lang.Override
  public io.grafeas.v1.CVSSVersion getCvssVersion() {
    io.grafeas.v1.CVSSVersion result = io.grafeas.v1.CVSSVersion.forNumber(cvssVersion_);
    return result == null ? io.grafeas.v1.CVSSVersion.UNRECOGNIZED : result;
  }

  public static final int CVSS_V2_FIELD_NUMBER = 12;
  private io.grafeas.v1.CVSS cvssV2_;
  /**
   *
   *
   * <pre>
   * The cvss v2 score for the vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
   *
   * @return Whether the cvssV2 field is set.
   */
  @java.lang.Override
  public boolean hasCvssV2() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * The cvss v2 score for the vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
   *
   * @return The cvssV2.
   */
  @java.lang.Override
  public io.grafeas.v1.CVSS getCvssV2() {
    return cvssV2_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssV2_;
  }
  /**
   *
   *
   * <pre>
   * The cvss v2 score for the vulnerability.
   * </pre>
   *
   * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
   */
  @java.lang.Override
  public io.grafeas.v1.CVSSOrBuilder getCvssV2OrBuilder() {
    return cvssV2_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssV2_;
  }

  public static final int VEX_ASSESSMENT_FIELD_NUMBER = 13;
  private io.grafeas.v1.VulnerabilityOccurrence.VexAssessment vexAssessment_;
  /**
   * <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code>
   *
   * @return Whether the vexAssessment field is set.
   */
  @java.lang.Override
  public boolean hasVexAssessment() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code>
   *
   * @return The vexAssessment.
   */
  @java.lang.Override
  public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment getVexAssessment() {
    return vexAssessment_ == null
        ? io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance()
        : vexAssessment_;
  }
  /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
  @java.lang.Override
  public io.grafeas.v1.VulnerabilityOccurrence.VexAssessmentOrBuilder getVexAssessmentOrBuilder() {
    return vexAssessment_ == null
        ? io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance()
        : vexAssessment_;
  }

  public static final int EXTRA_DETAILS_FIELD_NUMBER = 14;

  @SuppressWarnings("serial")
  private volatile java.lang.Object extraDetails_ = "";
  /**
   *
   *
   * <pre>
   * Occurrence-specific extra details about the vulnerability.
   * </pre>
   *
   * <code>string extra_details = 14;</code>
   *
   * @return The extraDetails.
   */
  @java.lang.Override
  public java.lang.String getExtraDetails() {
    java.lang.Object ref = extraDetails_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      extraDetails_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Occurrence-specific extra details about the vulnerability.
   * </pre>
   *
   * <code>string extra_details = 14;</code>
   *
   * @return The bytes for extraDetails.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getExtraDetailsBytes() {
    java.lang.Object ref = extraDetails_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      extraDetails_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
    }
    if (severity_ != io.grafeas.v1.Severity.SEVERITY_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, severity_);
    }
    if (java.lang.Float.floatToRawIntBits(cvssScore_) != 0) {
      output.writeFloat(3, cvssScore_);
    }
    for (int i = 0; i < packageIssue_.size(); i++) {
      output.writeMessage(4, packageIssue_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shortDescription_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, shortDescription_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(longDescription_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, longDescription_);
    }
    for (int i = 0; i < relatedUrls_.size(); i++) {
      output.writeMessage(7, relatedUrls_.get(i));
    }
    if (effectiveSeverity_ != io.grafeas.v1.Severity.SEVERITY_UNSPECIFIED.getNumber()) {
      output.writeEnum(8, effectiveSeverity_);
    }
    if (fixAvailable_ != false) {
      output.writeBool(9, fixAvailable_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(10, getCvssv3());
    }
    if (cvssVersion_ != io.grafeas.v1.CVSSVersion.CVSS_VERSION_UNSPECIFIED.getNumber()) {
      output.writeEnum(11, cvssVersion_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(12, getCvssV2());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(13, getVexAssessment());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(extraDetails_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, extraDetails_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
    }
    if (severity_ != io.grafeas.v1.Severity.SEVERITY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, severity_);
    }
    if (java.lang.Float.floatToRawIntBits(cvssScore_) != 0) {
      size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, cvssScore_);
    }
    for (int i = 0; i < packageIssue_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, packageIssue_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shortDescription_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, shortDescription_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(longDescription_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, longDescription_);
    }
    for (int i = 0; i < relatedUrls_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, relatedUrls_.get(i));
    }
    if (effectiveSeverity_ != io.grafeas.v1.Severity.SEVERITY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(8, effectiveSeverity_);
    }
    if (fixAvailable_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(9, fixAvailable_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, getCvssv3());
    }
    if (cvssVersion_ != io.grafeas.v1.CVSSVersion.CVSS_VERSION_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(11, cvssVersion_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, getCvssV2());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(13, getVexAssessment());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(extraDetails_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, extraDetails_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof io.grafeas.v1.VulnerabilityOccurrence)) {
      return super.equals(obj);
    }
    io.grafeas.v1.VulnerabilityOccurrence other = (io.grafeas.v1.VulnerabilityOccurrence) obj;

    if (!getType().equals(other.getType())) return false;
    if (severity_ != other.severity_) return false;
    if (java.lang.Float.floatToIntBits(getCvssScore())
        != java.lang.Float.floatToIntBits(other.getCvssScore())) return false;
    if (hasCvssv3() != other.hasCvssv3()) return false;
    if (hasCvssv3()) {
      if (!getCvssv3().equals(other.getCvssv3())) return false;
    }
    if (!getPackageIssueList().equals(other.getPackageIssueList())) return false;
    if (!getShortDescription().equals(other.getShortDescription())) return false;
    if (!getLongDescription().equals(other.getLongDescription())) return false;
    if (!getRelatedUrlsList().equals(other.getRelatedUrlsList())) return false;
    if (effectiveSeverity_ != other.effectiveSeverity_) return false;
    if (getFixAvailable() != other.getFixAvailable()) return false;
    if (cvssVersion_ != other.cvssVersion_) return false;
    if (hasCvssV2() != other.hasCvssV2()) return false;
    if (hasCvssV2()) {
      if (!getCvssV2().equals(other.getCvssV2())) return false;
    }
    if (hasVexAssessment() != other.hasVexAssessment()) return false;
    if (hasVexAssessment()) {
      if (!getVexAssessment().equals(other.getVexAssessment())) return false;
    }
    if (!getExtraDetails().equals(other.getExtraDetails())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
    hash = (53 * hash) + severity_;
    hash = (37 * hash) + CVSS_SCORE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(getCvssScore());
    if (hasCvssv3()) {
      hash = (37 * hash) + CVSSV3_FIELD_NUMBER;
      hash = (53 * hash) + getCvssv3().hashCode();
    }
    if (getPackageIssueCount() > 0) {
      hash = (37 * hash) + PACKAGE_ISSUE_FIELD_NUMBER;
      hash = (53 * hash) + getPackageIssueList().hashCode();
    }
    hash = (37 * hash) + SHORT_DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getShortDescription().hashCode();
    hash = (37 * hash) + LONG_DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getLongDescription().hashCode();
    if (getRelatedUrlsCount() > 0) {
      hash = (37 * hash) + RELATED_URLS_FIELD_NUMBER;
      hash = (53 * hash) + getRelatedUrlsList().hashCode();
    }
    hash = (37 * hash) + EFFECTIVE_SEVERITY_FIELD_NUMBER;
    hash = (53 * hash) + effectiveSeverity_;
    hash = (37 * hash) + FIX_AVAILABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getFixAvailable());
    hash = (37 * hash) + CVSS_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + cvssVersion_;
    if (hasCvssV2()) {
      hash = (37 * hash) + CVSS_V2_FIELD_NUMBER;
      hash = (53 * hash) + getCvssV2().hashCode();
    }
    if (hasVexAssessment()) {
      hash = (37 * hash) + VEX_ASSESSMENT_FIELD_NUMBER;
      hash = (53 * hash) + getVexAssessment().hashCode();
    }
    hash = (37 * hash) + EXTRA_DETAILS_FIELD_NUMBER;
    hash = (53 * hash) + getExtraDetails().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static io.grafeas.v1.VulnerabilityOccurrence parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(io.grafeas.v1.VulnerabilityOccurrence prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * An occurrence of a severity vulnerability on a resource.
   * </pre>
   *
   * Protobuf type {@code grafeas.v1.VulnerabilityOccurrence}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:grafeas.v1.VulnerabilityOccurrence)
      io.grafeas.v1.VulnerabilityOccurrenceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grafeas.v1.VulnerabilityOccurrence.class,
              io.grafeas.v1.VulnerabilityOccurrence.Builder.class);
    }

    // Construct using io.grafeas.v1.VulnerabilityOccurrence.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getCvssv3FieldBuilder();
        getPackageIssueFieldBuilder();
        getRelatedUrlsFieldBuilder();
        getCvssV2FieldBuilder();
        getVexAssessmentFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = "";
      severity_ = 0;
      cvssScore_ = 0F;
      cvssv3_ = null;
      if (cvssv3Builder_ != null) {
        cvssv3Builder_.dispose();
        cvssv3Builder_ = null;
      }
      if (packageIssueBuilder_ == null) {
        packageIssue_ = java.util.Collections.emptyList();
      } else {
        packageIssue_ = null;
        packageIssueBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      shortDescription_ = "";
      longDescription_ = "";
      if (relatedUrlsBuilder_ == null) {
        relatedUrls_ = java.util.Collections.emptyList();
      } else {
        relatedUrls_ = null;
        relatedUrlsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      effectiveSeverity_ = 0;
      fixAvailable_ = false;
      cvssVersion_ = 0;
      cvssV2_ = null;
      if (cvssV2Builder_ != null) {
        cvssV2Builder_.dispose();
        cvssV2Builder_ = null;
      }
      vexAssessment_ = null;
      if (vexAssessmentBuilder_ != null) {
        vexAssessmentBuilder_.dispose();
        vexAssessmentBuilder_ = null;
      }
      extraDetails_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return io.grafeas.v1.Vulnerability
          .internal_static_grafeas_v1_VulnerabilityOccurrence_descriptor;
    }

    @java.lang.Override
    public io.grafeas.v1.VulnerabilityOccurrence getDefaultInstanceForType() {
      return io.grafeas.v1.VulnerabilityOccurrence.getDefaultInstance();
    }

    @java.lang.Override
    public io.grafeas.v1.VulnerabilityOccurrence build() {
      io.grafeas.v1.VulnerabilityOccurrence result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.grafeas.v1.VulnerabilityOccurrence buildPartial() {
      io.grafeas.v1.VulnerabilityOccurrence result =
          new io.grafeas.v1.VulnerabilityOccurrence(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.grafeas.v1.VulnerabilityOccurrence result) {
      if (packageIssueBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          packageIssue_ = java.util.Collections.unmodifiableList(packageIssue_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.packageIssue_ = packageIssue_;
      } else {
        result.packageIssue_ = packageIssueBuilder_.build();
      }
      if (relatedUrlsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          relatedUrls_ = java.util.Collections.unmodifiableList(relatedUrls_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.relatedUrls_ = relatedUrls_;
      } else {
        result.relatedUrls_ = relatedUrlsBuilder_.build();
      }
    }

    private void buildPartial0(io.grafeas.v1.VulnerabilityOccurrence result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.severity_ = severity_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.cvssScore_ = cvssScore_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.cvssv3_ = cvssv3Builder_ == null ? cvssv3_ : cvssv3Builder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.shortDescription_ = shortDescription_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.longDescription_ = longDescription_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.effectiveSeverity_ = effectiveSeverity_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.fixAvailable_ = fixAvailable_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.cvssVersion_ = cvssVersion_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.cvssV2_ = cvssV2Builder_ == null ? cvssV2_ : cvssV2Builder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.vexAssessment_ =
            vexAssessmentBuilder_ == null ? vexAssessment_ : vexAssessmentBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.extraDetails_ = extraDetails_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grafeas.v1.VulnerabilityOccurrence) {
        return mergeFrom((io.grafeas.v1.VulnerabilityOccurrence) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grafeas.v1.VulnerabilityOccurrence other) {
      if (other == io.grafeas.v1.VulnerabilityOccurrence.getDefaultInstance()) return this;
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.severity_ != 0) {
        setSeverityValue(other.getSeverityValue());
      }
      if (other.getCvssScore() != 0F) {
        setCvssScore(other.getCvssScore());
      }
      if (other.hasCvssv3()) {
        mergeCvssv3(other.getCvssv3());
      }
      if (packageIssueBuilder_ == null) {
        if (!other.packageIssue_.isEmpty()) {
          if (packageIssue_.isEmpty()) {
            packageIssue_ = other.packageIssue_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePackageIssueIsMutable();
            packageIssue_.addAll(other.packageIssue_);
          }
          onChanged();
        }
      } else {
        if (!other.packageIssue_.isEmpty()) {
          if (packageIssueBuilder_.isEmpty()) {
            packageIssueBuilder_.dispose();
            packageIssueBuilder_ = null;
            packageIssue_ = other.packageIssue_;
            bitField0_ = (bitField0_ & ~0x00000010);
            packageIssueBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getPackageIssueFieldBuilder()
                    : null;
          } else {
            packageIssueBuilder_.addAllMessages(other.packageIssue_);
          }
        }
      }
      if (!other.getShortDescription().isEmpty()) {
        shortDescription_ = other.shortDescription_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getLongDescription().isEmpty()) {
        longDescription_ = other.longDescription_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (relatedUrlsBuilder_ == null) {
        if (!other.relatedUrls_.isEmpty()) {
          if (relatedUrls_.isEmpty()) {
            relatedUrls_ = other.relatedUrls_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRelatedUrlsIsMutable();
            relatedUrls_.addAll(other.relatedUrls_);
          }
          onChanged();
        }
      } else {
        if (!other.relatedUrls_.isEmpty()) {
          if (relatedUrlsBuilder_.isEmpty()) {
            relatedUrlsBuilder_.dispose();
            relatedUrlsBuilder_ = null;
            relatedUrls_ = other.relatedUrls_;
            bitField0_ = (bitField0_ & ~0x00000080);
            relatedUrlsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getRelatedUrlsFieldBuilder()
                    : null;
          } else {
            relatedUrlsBuilder_.addAllMessages(other.relatedUrls_);
          }
        }
      }
      if (other.effectiveSeverity_ != 0) {
        setEffectiveSeverityValue(other.getEffectiveSeverityValue());
      }
      if (other.getFixAvailable() != false) {
        setFixAvailable(other.getFixAvailable());
      }
      if (other.cvssVersion_ != 0) {
        setCvssVersionValue(other.getCvssVersionValue());
      }
      if (other.hasCvssV2()) {
        mergeCvssV2(other.getCvssV2());
      }
      if (other.hasVexAssessment()) {
        mergeVexAssessment(other.getVexAssessment());
      }
      if (!other.getExtraDetails().isEmpty()) {
        extraDetails_ = other.extraDetails_;
        bitField0_ |= 0x00002000;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                type_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                severity_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 29:
              {
                cvssScore_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
            case 34:
              {
                io.grafeas.v1.VulnerabilityOccurrence.PackageIssue m =
                    input.readMessage(
                        io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.parser(),
                        extensionRegistry);
                if (packageIssueBuilder_ == null) {
                  ensurePackageIssueIsMutable();
                  packageIssue_.add(m);
                } else {
                  packageIssueBuilder_.addMessage(m);
                }
                break;
              } // case 34
            case 42:
              {
                shortDescription_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 42
            case 50:
              {
                longDescription_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 50
            case 58:
              {
                io.grafeas.v1.RelatedUrl m =
                    input.readMessage(io.grafeas.v1.RelatedUrl.parser(), extensionRegistry);
                if (relatedUrlsBuilder_ == null) {
                  ensureRelatedUrlsIsMutable();
                  relatedUrls_.add(m);
                } else {
                  relatedUrlsBuilder_.addMessage(m);
                }
                break;
              } // case 58
            case 64:
              {
                effectiveSeverity_ = input.readEnum();
                bitField0_ |= 0x00000100;
                break;
              } // case 64
            case 72:
              {
                fixAvailable_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 72
            case 82:
              {
                input.readMessage(getCvssv3FieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 82
            case 88:
              {
                cvssVersion_ = input.readEnum();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
            case 98:
              {
                input.readMessage(getCvssV2FieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 98
            case 106:
              {
                input.readMessage(getVexAssessmentFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 106
            case 114:
              {
                extraDetails_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00002000;
                break;
              } // case 114
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object type_ = "";
    /**
     *
     *
     * <pre>
     * The type of package; whether native or non native (e.g., ruby gems, node.js
     * packages, etc.).
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The type of package; whether native or non native (e.g., ruby gems, node.js
     * packages, etc.).
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The type of package; whether native or non native (e.g., ruby gems, node.js
     * packages, etc.).
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The type of package; whether native or non native (e.g., ruby gems, node.js
     * packages, etc.).
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearType() {
      type_ = getDefaultInstance().getType();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The type of package; whether native or non native (e.g., ruby gems, node.js
     * packages, etc.).
     * </pre>
     *
     * <code>string type = 1;</code>
     *
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int severity_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. The note provider assigned severity of this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Severity severity = 2;</code>
     *
     * @return The enum numeric value on the wire for severity.
     */
    @java.lang.Override
    public int getSeverityValue() {
      return severity_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The note provider assigned severity of this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Severity severity = 2;</code>
     *
     * @param value The enum numeric value on the wire for severity to set.
     * @return This builder for chaining.
     */
    public Builder setSeverityValue(int value) {
      severity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The note provider assigned severity of this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Severity severity = 2;</code>
     *
     * @return The severity.
     */
    @java.lang.Override
    public io.grafeas.v1.Severity getSeverity() {
      io.grafeas.v1.Severity result = io.grafeas.v1.Severity.forNumber(severity_);
      return result == null ? io.grafeas.v1.Severity.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * Output only. The note provider assigned severity of this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Severity severity = 2;</code>
     *
     * @param value The severity to set.
     * @return This builder for chaining.
     */
    public Builder setSeverity(io.grafeas.v1.Severity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      severity_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The note provider assigned severity of this vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.Severity severity = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSeverity() {
      bitField0_ = (bitField0_ & ~0x00000002);
      severity_ = 0;
      onChanged();
      return this;
    }

    private float cvssScore_;
    /**
     *
     *
     * <pre>
     * Output only. The CVSS score of this vulnerability. CVSS score is on a
     * scale of 0 - 10 where 0 indicates low severity and 10 indicates high
     * severity.
     * </pre>
     *
     * <code>float cvss_score = 3;</code>
     *
     * @return The cvssScore.
     */
    @java.lang.Override
    public float getCvssScore() {
      return cvssScore_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The CVSS score of this vulnerability. CVSS score is on a
     * scale of 0 - 10 where 0 indicates low severity and 10 indicates high
     * severity.
     * </pre>
     *
     * <code>float cvss_score = 3;</code>
     *
     * @param value The cvssScore to set.
     * @return This builder for chaining.
     */
    public Builder setCvssScore(float value) {

      cvssScore_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The CVSS score of this vulnerability. CVSS score is on a
     * scale of 0 - 10 where 0 indicates low severity and 10 indicates high
     * severity.
     * </pre>
     *
     * <code>float cvss_score = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCvssScore() {
      bitField0_ = (bitField0_ & ~0x00000004);
      cvssScore_ = 0F;
      onChanged();
      return this;
    }

    private io.grafeas.v1.CVSS cvssv3_;
    private com.google.protobuf.SingleFieldBuilderV3<
            io.grafeas.v1.CVSS, io.grafeas.v1.CVSS.Builder, io.grafeas.v1.CVSSOrBuilder>
        cvssv3Builder_;
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     *
     * @return Whether the cvssv3 field is set.
     */
    public boolean hasCvssv3() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     *
     * @return The cvssv3.
     */
    public io.grafeas.v1.CVSS getCvssv3() {
      if (cvssv3Builder_ == null) {
        return cvssv3_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssv3_;
      } else {
        return cvssv3Builder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    public Builder setCvssv3(io.grafeas.v1.CVSS value) {
      if (cvssv3Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cvssv3_ = value;
      } else {
        cvssv3Builder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    public Builder setCvssv3(io.grafeas.v1.CVSS.Builder builderForValue) {
      if (cvssv3Builder_ == null) {
        cvssv3_ = builderForValue.build();
      } else {
        cvssv3Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    public Builder mergeCvssv3(io.grafeas.v1.CVSS value) {
      if (cvssv3Builder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && cvssv3_ != null
            && cvssv3_ != io.grafeas.v1.CVSS.getDefaultInstance()) {
          getCvssv3Builder().mergeFrom(value);
        } else {
          cvssv3_ = value;
        }
      } else {
        cvssv3Builder_.mergeFrom(value);
      }
      if (cvssv3_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    public Builder clearCvssv3() {
      bitField0_ = (bitField0_ & ~0x00000008);
      cvssv3_ = null;
      if (cvssv3Builder_ != null) {
        cvssv3Builder_.dispose();
        cvssv3Builder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    public io.grafeas.v1.CVSS.Builder getCvssv3Builder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getCvssv3FieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    public io.grafeas.v1.CVSSOrBuilder getCvssv3OrBuilder() {
      if (cvssv3Builder_ != null) {
        return cvssv3Builder_.getMessageOrBuilder();
      } else {
        return cvssv3_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssv3_;
      }
    }
    /**
     *
     *
     * <pre>
     * The cvss v3 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvssv3 = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            io.grafeas.v1.CVSS, io.grafeas.v1.CVSS.Builder, io.grafeas.v1.CVSSOrBuilder>
        getCvssv3FieldBuilder() {
      if (cvssv3Builder_ == null) {
        cvssv3Builder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                io.grafeas.v1.CVSS, io.grafeas.v1.CVSS.Builder, io.grafeas.v1.CVSSOrBuilder>(
                getCvssv3(), getParentForChildren(), isClean());
        cvssv3_ = null;
      }
      return cvssv3Builder_;
    }

    private java.util.List<io.grafeas.v1.VulnerabilityOccurrence.PackageIssue> packageIssue_ =
        java.util.Collections.emptyList();

    private void ensurePackageIssueIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        packageIssue_ =
            new java.util.ArrayList<io.grafeas.v1.VulnerabilityOccurrence.PackageIssue>(
                packageIssue_);
        bitField0_ |= 0x00000010;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            io.grafeas.v1.VulnerabilityOccurrence.PackageIssue,
            io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder,
            io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder>
        packageIssueBuilder_;

    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public java.util.List<io.grafeas.v1.VulnerabilityOccurrence.PackageIssue>
        getPackageIssueList() {
      if (packageIssueBuilder_ == null) {
        return java.util.Collections.unmodifiableList(packageIssue_);
      } else {
        return packageIssueBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public int getPackageIssueCount() {
      if (packageIssueBuilder_ == null) {
        return packageIssue_.size();
      } else {
        return packageIssueBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue getPackageIssue(int index) {
      if (packageIssueBuilder_ == null) {
        return packageIssue_.get(index);
      } else {
        return packageIssueBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder setPackageIssue(
        int index, io.grafeas.v1.VulnerabilityOccurrence.PackageIssue value) {
      if (packageIssueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackageIssueIsMutable();
        packageIssue_.set(index, value);
        onChanged();
      } else {
        packageIssueBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder setPackageIssue(
        int index, io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder builderForValue) {
      if (packageIssueBuilder_ == null) {
        ensurePackageIssueIsMutable();
        packageIssue_.set(index, builderForValue.build());
        onChanged();
      } else {
        packageIssueBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder addPackageIssue(io.grafeas.v1.VulnerabilityOccurrence.PackageIssue value) {
      if (packageIssueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackageIssueIsMutable();
        packageIssue_.add(value);
        onChanged();
      } else {
        packageIssueBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder addPackageIssue(
        int index, io.grafeas.v1.VulnerabilityOccurrence.PackageIssue value) {
      if (packageIssueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackageIssueIsMutable();
        packageIssue_.add(index, value);
        onChanged();
      } else {
        packageIssueBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder addPackageIssue(
        io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder builderForValue) {
      if (packageIssueBuilder_ == null) {
        ensurePackageIssueIsMutable();
        packageIssue_.add(builderForValue.build());
        onChanged();
      } else {
        packageIssueBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder addPackageIssue(
        int index, io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder builderForValue) {
      if (packageIssueBuilder_ == null) {
        ensurePackageIssueIsMutable();
        packageIssue_.add(index, builderForValue.build());
        onChanged();
      } else {
        packageIssueBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder addAllPackageIssue(
        java.lang.Iterable<? extends io.grafeas.v1.VulnerabilityOccurrence.PackageIssue> values) {
      if (packageIssueBuilder_ == null) {
        ensurePackageIssueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, packageIssue_);
        onChanged();
      } else {
        packageIssueBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder clearPackageIssue() {
      if (packageIssueBuilder_ == null) {
        packageIssue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        packageIssueBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public Builder removePackageIssue(int index) {
      if (packageIssueBuilder_ == null) {
        ensurePackageIssueIsMutable();
        packageIssue_.remove(index);
        onChanged();
      } else {
        packageIssueBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder getPackageIssueBuilder(
        int index) {
      return getPackageIssueFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder getPackageIssueOrBuilder(
        int index) {
      if (packageIssueBuilder_ == null) {
        return packageIssue_.get(index);
      } else {
        return packageIssueBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public java.util.List<? extends io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder>
        getPackageIssueOrBuilderList() {
      if (packageIssueBuilder_ != null) {
        return packageIssueBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(packageIssue_);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder addPackageIssueBuilder() {
      return getPackageIssueFieldBuilder()
          .addBuilder(io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder addPackageIssueBuilder(
        int index) {
      return getPackageIssueFieldBuilder()
          .addBuilder(
              index, io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Required. The set of affected locations and their fixes (if available)
     * within the associated resource.
     * </pre>
     *
     * <code>repeated .grafeas.v1.VulnerabilityOccurrence.PackageIssue package_issue = 4;</code>
     */
    public java.util.List<io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder>
        getPackageIssueBuilderList() {
      return getPackageIssueFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            io.grafeas.v1.VulnerabilityOccurrence.PackageIssue,
            io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder,
            io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder>
        getPackageIssueFieldBuilder() {
      if (packageIssueBuilder_ == null) {
        packageIssueBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                io.grafeas.v1.VulnerabilityOccurrence.PackageIssue,
                io.grafeas.v1.VulnerabilityOccurrence.PackageIssue.Builder,
                io.grafeas.v1.VulnerabilityOccurrence.PackageIssueOrBuilder>(
                packageIssue_, ((bitField0_ & 0x00000010) != 0), getParentForChildren(), isClean());
        packageIssue_ = null;
      }
      return packageIssueBuilder_;
    }

    private java.lang.Object shortDescription_ = "";
    /**
     *
     *
     * <pre>
     * Output only. A one sentence description of this vulnerability.
     * </pre>
     *
     * <code>string short_description = 5;</code>
     *
     * @return The shortDescription.
     */
    public java.lang.String getShortDescription() {
      java.lang.Object ref = shortDescription_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        shortDescription_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. A one sentence description of this vulnerability.
     * </pre>
     *
     * <code>string short_description = 5;</code>
     *
     * @return The bytes for shortDescription.
     */
    public com.google.protobuf.ByteString getShortDescriptionBytes() {
      java.lang.Object ref = shortDescription_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        shortDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. A one sentence description of this vulnerability.
     * </pre>
     *
     * <code>string short_description = 5;</code>
     *
     * @param value The shortDescription to set.
     * @return This builder for chaining.
     */
    public Builder setShortDescription(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      shortDescription_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A one sentence description of this vulnerability.
     * </pre>
     *
     * <code>string short_description = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearShortDescription() {
      shortDescription_ = getDefaultInstance().getShortDescription();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A one sentence description of this vulnerability.
     * </pre>
     *
     * <code>string short_description = 5;</code>
     *
     * @param value The bytes for shortDescription to set.
     * @return This builder for chaining.
     */
    public Builder setShortDescriptionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      shortDescription_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object longDescription_ = "";
    /**
     *
     *
     * <pre>
     * Output only. A detailed description of this vulnerability.
     * </pre>
     *
     * <code>string long_description = 6;</code>
     *
     * @return The longDescription.
     */
    public java.lang.String getLongDescription() {
      java.lang.Object ref = longDescription_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        longDescription_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. A detailed description of this vulnerability.
     * </pre>
     *
     * <code>string long_description = 6;</code>
     *
     * @return The bytes for longDescription.
     */
    public com.google.protobuf.ByteString getLongDescriptionBytes() {
      java.lang.Object ref = longDescription_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        longDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. A detailed description of this vulnerability.
     * </pre>
     *
     * <code>string long_description = 6;</code>
     *
     * @param value The longDescription to set.
     * @return This builder for chaining.
     */
    public Builder setLongDescription(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      longDescription_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A detailed description of this vulnerability.
     * </pre>
     *
     * <code>string long_description = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLongDescription() {
      longDescription_ = getDefaultInstance().getLongDescription();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. A detailed description of this vulnerability.
     * </pre>
     *
     * <code>string long_description = 6;</code>
     *
     * @param value The bytes for longDescription to set.
     * @return This builder for chaining.
     */
    public Builder setLongDescriptionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      longDescription_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private java.util.List<io.grafeas.v1.RelatedUrl> relatedUrls_ =
        java.util.Collections.emptyList();

    private void ensureRelatedUrlsIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        relatedUrls_ = new java.util.ArrayList<io.grafeas.v1.RelatedUrl>(relatedUrls_);
        bitField0_ |= 0x00000080;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            io.grafeas.v1.RelatedUrl,
            io.grafeas.v1.RelatedUrl.Builder,
            io.grafeas.v1.RelatedUrlOrBuilder>
        relatedUrlsBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public java.util.List<io.grafeas.v1.RelatedUrl> getRelatedUrlsList() {
      if (relatedUrlsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relatedUrls_);
      } else {
        return relatedUrlsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public int getRelatedUrlsCount() {
      if (relatedUrlsBuilder_ == null) {
        return relatedUrls_.size();
      } else {
        return relatedUrlsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public io.grafeas.v1.RelatedUrl getRelatedUrls(int index) {
      if (relatedUrlsBuilder_ == null) {
        return relatedUrls_.get(index);
      } else {
        return relatedUrlsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder setRelatedUrls(int index, io.grafeas.v1.RelatedUrl value) {
      if (relatedUrlsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedUrlsIsMutable();
        relatedUrls_.set(index, value);
        onChanged();
      } else {
        relatedUrlsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder setRelatedUrls(int index, io.grafeas.v1.RelatedUrl.Builder builderForValue) {
      if (relatedUrlsBuilder_ == null) {
        ensureRelatedUrlsIsMutable();
        relatedUrls_.set(index, builderForValue.build());
        onChanged();
      } else {
        relatedUrlsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder addRelatedUrls(io.grafeas.v1.RelatedUrl value) {
      if (relatedUrlsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedUrlsIsMutable();
        relatedUrls_.add(value);
        onChanged();
      } else {
        relatedUrlsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder addRelatedUrls(int index, io.grafeas.v1.RelatedUrl value) {
      if (relatedUrlsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedUrlsIsMutable();
        relatedUrls_.add(index, value);
        onChanged();
      } else {
        relatedUrlsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder addRelatedUrls(io.grafeas.v1.RelatedUrl.Builder builderForValue) {
      if (relatedUrlsBuilder_ == null) {
        ensureRelatedUrlsIsMutable();
        relatedUrls_.add(builderForValue.build());
        onChanged();
      } else {
        relatedUrlsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder addRelatedUrls(int index, io.grafeas.v1.RelatedUrl.Builder builderForValue) {
      if (relatedUrlsBuilder_ == null) {
        ensureRelatedUrlsIsMutable();
        relatedUrls_.add(index, builderForValue.build());
        onChanged();
      } else {
        relatedUrlsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder addAllRelatedUrls(
        java.lang.Iterable<? extends io.grafeas.v1.RelatedUrl> values) {
      if (relatedUrlsBuilder_ == null) {
        ensureRelatedUrlsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, relatedUrls_);
        onChanged();
      } else {
        relatedUrlsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder clearRelatedUrls() {
      if (relatedUrlsBuilder_ == null) {
        relatedUrls_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        relatedUrlsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public Builder removeRelatedUrls(int index) {
      if (relatedUrlsBuilder_ == null) {
        ensureRelatedUrlsIsMutable();
        relatedUrls_.remove(index);
        onChanged();
      } else {
        relatedUrlsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public io.grafeas.v1.RelatedUrl.Builder getRelatedUrlsBuilder(int index) {
      return getRelatedUrlsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public io.grafeas.v1.RelatedUrlOrBuilder getRelatedUrlsOrBuilder(int index) {
      if (relatedUrlsBuilder_ == null) {
        return relatedUrls_.get(index);
      } else {
        return relatedUrlsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public java.util.List<? extends io.grafeas.v1.RelatedUrlOrBuilder>
        getRelatedUrlsOrBuilderList() {
      if (relatedUrlsBuilder_ != null) {
        return relatedUrlsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relatedUrls_);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public io.grafeas.v1.RelatedUrl.Builder addRelatedUrlsBuilder() {
      return getRelatedUrlsFieldBuilder().addBuilder(io.grafeas.v1.RelatedUrl.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public io.grafeas.v1.RelatedUrl.Builder addRelatedUrlsBuilder(int index) {
      return getRelatedUrlsFieldBuilder()
          .addBuilder(index, io.grafeas.v1.RelatedUrl.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. URLs related to this vulnerability.
     * </pre>
     *
     * <code>repeated .grafeas.v1.RelatedUrl related_urls = 7;</code>
     */
    public java.util.List<io.grafeas.v1.RelatedUrl.Builder> getRelatedUrlsBuilderList() {
      return getRelatedUrlsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            io.grafeas.v1.RelatedUrl,
            io.grafeas.v1.RelatedUrl.Builder,
            io.grafeas.v1.RelatedUrlOrBuilder>
        getRelatedUrlsFieldBuilder() {
      if (relatedUrlsBuilder_ == null) {
        relatedUrlsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                io.grafeas.v1.RelatedUrl,
                io.grafeas.v1.RelatedUrl.Builder,
                io.grafeas.v1.RelatedUrlOrBuilder>(
                relatedUrls_, ((bitField0_ & 0x00000080) != 0), getParentForChildren(), isClean());
        relatedUrls_ = null;
      }
      return relatedUrlsBuilder_;
    }

    private int effectiveSeverity_ = 0;
    /**
     *
     *
     * <pre>
     * The distro assigned severity for this vulnerability when it is available,
     * otherwise this is the note provider assigned severity.
     *
     * When there are multiple PackageIssues for this vulnerability, they can have
     * different effective severities because some might be provided by the distro
     * while others are provided by the language ecosystem for a language pack.
     * For this reason, it is advised to use the effective severity on the
     * PackageIssue level. In the case where multiple PackageIssues have differing
     * effective severities, this field should be the highest severity for any of
     * the PackageIssues.
     * </pre>
     *
     * <code>.grafeas.v1.Severity effective_severity = 8;</code>
     *
     * @return The enum numeric value on the wire for effectiveSeverity.
     */
    @java.lang.Override
    public int getEffectiveSeverityValue() {
      return effectiveSeverity_;
    }
    /**
     *
     *
     * <pre>
     * The distro assigned severity for this vulnerability when it is available,
     * otherwise this is the note provider assigned severity.
     *
     * When there are multiple PackageIssues for this vulnerability, they can have
     * different effective severities because some might be provided by the distro
     * while others are provided by the language ecosystem for a language pack.
     * For this reason, it is advised to use the effective severity on the
     * PackageIssue level. In the case where multiple PackageIssues have differing
     * effective severities, this field should be the highest severity for any of
     * the PackageIssues.
     * </pre>
     *
     * <code>.grafeas.v1.Severity effective_severity = 8;</code>
     *
     * @param value The enum numeric value on the wire for effectiveSeverity to set.
     * @return This builder for chaining.
     */
    public Builder setEffectiveSeverityValue(int value) {
      effectiveSeverity_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The distro assigned severity for this vulnerability when it is available,
     * otherwise this is the note provider assigned severity.
     *
     * When there are multiple PackageIssues for this vulnerability, they can have
     * different effective severities because some might be provided by the distro
     * while others are provided by the language ecosystem for a language pack.
     * For this reason, it is advised to use the effective severity on the
     * PackageIssue level. In the case where multiple PackageIssues have differing
     * effective severities, this field should be the highest severity for any of
     * the PackageIssues.
     * </pre>
     *
     * <code>.grafeas.v1.Severity effective_severity = 8;</code>
     *
     * @return The effectiveSeverity.
     */
    @java.lang.Override
    public io.grafeas.v1.Severity getEffectiveSeverity() {
      io.grafeas.v1.Severity result = io.grafeas.v1.Severity.forNumber(effectiveSeverity_);
      return result == null ? io.grafeas.v1.Severity.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * The distro assigned severity for this vulnerability when it is available,
     * otherwise this is the note provider assigned severity.
     *
     * When there are multiple PackageIssues for this vulnerability, they can have
     * different effective severities because some might be provided by the distro
     * while others are provided by the language ecosystem for a language pack.
     * For this reason, it is advised to use the effective severity on the
     * PackageIssue level. In the case where multiple PackageIssues have differing
     * effective severities, this field should be the highest severity for any of
     * the PackageIssues.
     * </pre>
     *
     * <code>.grafeas.v1.Severity effective_severity = 8;</code>
     *
     * @param value The effectiveSeverity to set.
     * @return This builder for chaining.
     */
    public Builder setEffectiveSeverity(io.grafeas.v1.Severity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      effectiveSeverity_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The distro assigned severity for this vulnerability when it is available,
     * otherwise this is the note provider assigned severity.
     *
     * When there are multiple PackageIssues for this vulnerability, they can have
     * different effective severities because some might be provided by the distro
     * while others are provided by the language ecosystem for a language pack.
     * For this reason, it is advised to use the effective severity on the
     * PackageIssue level. In the case where multiple PackageIssues have differing
     * effective severities, this field should be the highest severity for any of
     * the PackageIssues.
     * </pre>
     *
     * <code>.grafeas.v1.Severity effective_severity = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEffectiveSeverity() {
      bitField0_ = (bitField0_ & ~0x00000100);
      effectiveSeverity_ = 0;
      onChanged();
      return this;
    }

    private boolean fixAvailable_;
    /**
     *
     *
     * <pre>
     * Output only. Whether at least one of the affected packages has a fix
     * available.
     * </pre>
     *
     * <code>bool fix_available = 9;</code>
     *
     * @return The fixAvailable.
     */
    @java.lang.Override
    public boolean getFixAvailable() {
      return fixAvailable_;
    }
    /**
     *
     *
     * <pre>
     * Output only. Whether at least one of the affected packages has a fix
     * available.
     * </pre>
     *
     * <code>bool fix_available = 9;</code>
     *
     * @param value The fixAvailable to set.
     * @return This builder for chaining.
     */
    public Builder setFixAvailable(boolean value) {

      fixAvailable_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Whether at least one of the affected packages has a fix
     * available.
     * </pre>
     *
     * <code>bool fix_available = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFixAvailable() {
      bitField0_ = (bitField0_ & ~0x00000200);
      fixAvailable_ = false;
      onChanged();
      return this;
    }

    private int cvssVersion_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. CVSS version used to populate cvss_score and severity.
     * </pre>
     *
     * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
     *
     * @return The enum numeric value on the wire for cvssVersion.
     */
    @java.lang.Override
    public int getCvssVersionValue() {
      return cvssVersion_;
    }
    /**
     *
     *
     * <pre>
     * Output only. CVSS version used to populate cvss_score and severity.
     * </pre>
     *
     * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
     *
     * @param value The enum numeric value on the wire for cvssVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCvssVersionValue(int value) {
      cvssVersion_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. CVSS version used to populate cvss_score and severity.
     * </pre>
     *
     * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
     *
     * @return The cvssVersion.
     */
    @java.lang.Override
    public io.grafeas.v1.CVSSVersion getCvssVersion() {
      io.grafeas.v1.CVSSVersion result = io.grafeas.v1.CVSSVersion.forNumber(cvssVersion_);
      return result == null ? io.grafeas.v1.CVSSVersion.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * Output only. CVSS version used to populate cvss_score and severity.
     * </pre>
     *
     * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
     *
     * @param value The cvssVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCvssVersion(io.grafeas.v1.CVSSVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000400;
      cvssVersion_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. CVSS version used to populate cvss_score and severity.
     * </pre>
     *
     * <code>.grafeas.v1.CVSSVersion cvss_version = 11;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCvssVersion() {
      bitField0_ = (bitField0_ & ~0x00000400);
      cvssVersion_ = 0;
      onChanged();
      return this;
    }

    private io.grafeas.v1.CVSS cvssV2_;
    private com.google.protobuf.SingleFieldBuilderV3<
            io.grafeas.v1.CVSS, io.grafeas.v1.CVSS.Builder, io.grafeas.v1.CVSSOrBuilder>
        cvssV2Builder_;
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     *
     * @return Whether the cvssV2 field is set.
     */
    public boolean hasCvssV2() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     *
     * @return The cvssV2.
     */
    public io.grafeas.v1.CVSS getCvssV2() {
      if (cvssV2Builder_ == null) {
        return cvssV2_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssV2_;
      } else {
        return cvssV2Builder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    public Builder setCvssV2(io.grafeas.v1.CVSS value) {
      if (cvssV2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cvssV2_ = value;
      } else {
        cvssV2Builder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    public Builder setCvssV2(io.grafeas.v1.CVSS.Builder builderForValue) {
      if (cvssV2Builder_ == null) {
        cvssV2_ = builderForValue.build();
      } else {
        cvssV2Builder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    public Builder mergeCvssV2(io.grafeas.v1.CVSS value) {
      if (cvssV2Builder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)
            && cvssV2_ != null
            && cvssV2_ != io.grafeas.v1.CVSS.getDefaultInstance()) {
          getCvssV2Builder().mergeFrom(value);
        } else {
          cvssV2_ = value;
        }
      } else {
        cvssV2Builder_.mergeFrom(value);
      }
      if (cvssV2_ != null) {
        bitField0_ |= 0x00000800;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    public Builder clearCvssV2() {
      bitField0_ = (bitField0_ & ~0x00000800);
      cvssV2_ = null;
      if (cvssV2Builder_ != null) {
        cvssV2Builder_.dispose();
        cvssV2Builder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    public io.grafeas.v1.CVSS.Builder getCvssV2Builder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getCvssV2FieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    public io.grafeas.v1.CVSSOrBuilder getCvssV2OrBuilder() {
      if (cvssV2Builder_ != null) {
        return cvssV2Builder_.getMessageOrBuilder();
      } else {
        return cvssV2_ == null ? io.grafeas.v1.CVSS.getDefaultInstance() : cvssV2_;
      }
    }
    /**
     *
     *
     * <pre>
     * The cvss v2 score for the vulnerability.
     * </pre>
     *
     * <code>.grafeas.v1.CVSS cvss_v2 = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            io.grafeas.v1.CVSS, io.grafeas.v1.CVSS.Builder, io.grafeas.v1.CVSSOrBuilder>
        getCvssV2FieldBuilder() {
      if (cvssV2Builder_ == null) {
        cvssV2Builder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                io.grafeas.v1.CVSS, io.grafeas.v1.CVSS.Builder, io.grafeas.v1.CVSSOrBuilder>(
                getCvssV2(), getParentForChildren(), isClean());
        cvssV2_ = null;
      }
      return cvssV2Builder_;
    }

    private io.grafeas.v1.VulnerabilityOccurrence.VexAssessment vexAssessment_;
    private com.google.protobuf.SingleFieldBuilderV3<
            io.grafeas.v1.VulnerabilityOccurrence.VexAssessment,
            io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder,
            io.grafeas.v1.VulnerabilityOccurrence.VexAssessmentOrBuilder>
        vexAssessmentBuilder_;
    /**
     * <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code>
     *
     * @return Whether the vexAssessment field is set.
     */
    public boolean hasVexAssessment() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code>
     *
     * @return The vexAssessment.
     */
    public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment getVexAssessment() {
      if (vexAssessmentBuilder_ == null) {
        return vexAssessment_ == null
            ? io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance()
            : vexAssessment_;
      } else {
        return vexAssessmentBuilder_.getMessage();
      }
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    public Builder setVexAssessment(io.grafeas.v1.VulnerabilityOccurrence.VexAssessment value) {
      if (vexAssessmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vexAssessment_ = value;
      } else {
        vexAssessmentBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    public Builder setVexAssessment(
        io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder builderForValue) {
      if (vexAssessmentBuilder_ == null) {
        vexAssessment_ = builderForValue.build();
      } else {
        vexAssessmentBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    public Builder mergeVexAssessment(io.grafeas.v1.VulnerabilityOccurrence.VexAssessment value) {
      if (vexAssessmentBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)
            && vexAssessment_ != null
            && vexAssessment_
                != io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance()) {
          getVexAssessmentBuilder().mergeFrom(value);
        } else {
          vexAssessment_ = value;
        }
      } else {
        vexAssessmentBuilder_.mergeFrom(value);
      }
      if (vexAssessment_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    public Builder clearVexAssessment() {
      bitField0_ = (bitField0_ & ~0x00001000);
      vexAssessment_ = null;
      if (vexAssessmentBuilder_ != null) {
        vexAssessmentBuilder_.dispose();
        vexAssessmentBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    public io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder getVexAssessmentBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getVexAssessmentFieldBuilder().getBuilder();
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    public io.grafeas.v1.VulnerabilityOccurrence.VexAssessmentOrBuilder
        getVexAssessmentOrBuilder() {
      if (vexAssessmentBuilder_ != null) {
        return vexAssessmentBuilder_.getMessageOrBuilder();
      } else {
        return vexAssessment_ == null
            ? io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.getDefaultInstance()
            : vexAssessment_;
      }
    }
    /** <code>.grafeas.v1.VulnerabilityOccurrence.VexAssessment vex_assessment = 13;</code> */
    private com.google.protobuf.SingleFieldBuilderV3<
            io.grafeas.v1.VulnerabilityOccurrence.VexAssessment,
            io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder,
            io.grafeas.v1.VulnerabilityOccurrence.VexAssessmentOrBuilder>
        getVexAssessmentFieldBuilder() {
      if (vexAssessmentBuilder_ == null) {
        vexAssessmentBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                io.grafeas.v1.VulnerabilityOccurrence.VexAssessment,
                io.grafeas.v1.VulnerabilityOccurrence.VexAssessment.Builder,
                io.grafeas.v1.VulnerabilityOccurrence.VexAssessmentOrBuilder>(
                getVexAssessment(), getParentForChildren(), isClean());
        vexAssessment_ = null;
      }
      return vexAssessmentBuilder_;
    }

    private java.lang.Object extraDetails_ = "";
    /**
     *
     *
     * <pre>
     * Occurrence-specific extra details about the vulnerability.
     * </pre>
     *
     * <code>string extra_details = 14;</code>
     *
     * @return The extraDetails.
     */
    public java.lang.String getExtraDetails() {
      java.lang.Object ref = extraDetails_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        extraDetails_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Occurrence-specific extra details about the vulnerability.
     * </pre>
     *
     * <code>string extra_details = 14;</code>
     *
     * @return The bytes for extraDetails.
     */
    public com.google.protobuf.ByteString getExtraDetailsBytes() {
      java.lang.Object ref = extraDetails_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        extraDetails_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Occurrence-specific extra details about the vulnerability.
     * </pre>
     *
     * <code>string extra_details = 14;</code>
     *
     * @param value The extraDetails to set.
     * @return This builder for chaining.
     */
    public Builder setExtraDetails(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      extraDetails_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Occurrence-specific extra details about the vulnerability.
     * </pre>
     *
     * <code>string extra_details = 14;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearExtraDetails() {
      extraDetails_ = getDefaultInstance().getExtraDetails();
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Occurrence-specific extra details about the vulnerability.
     * </pre>
     *
     * <code>string extra_details = 14;</code>
     *
     * @param value The bytes for extraDetails to set.
     * @return This builder for chaining.
     */
    public Builder setExtraDetailsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      extraDetails_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:grafeas.v1.VulnerabilityOccurrence)
  }

  // @@protoc_insertion_point(class_scope:grafeas.v1.VulnerabilityOccurrence)
  private static final io.grafeas.v1.VulnerabilityOccurrence DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new io.grafeas.v1.VulnerabilityOccurrence();
  }

  public static io.grafeas.v1.VulnerabilityOccurrence getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VulnerabilityOccurrence> PARSER =
      new com.google.protobuf.AbstractParser<VulnerabilityOccurrence>() {
        @java.lang.Override
        public VulnerabilityOccurrence parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<VulnerabilityOccurrence> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VulnerabilityOccurrence> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.grafeas.v1.VulnerabilityOccurrence getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
