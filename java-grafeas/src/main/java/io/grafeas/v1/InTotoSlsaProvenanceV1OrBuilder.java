/*
 * Copyright 2025 The Grafeas Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grafeas/v1/intoto_statement.proto

// Protobuf Java Version: 3.25.5
package io.grafeas.v1;

public interface InTotoSlsaProvenanceV1OrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:grafeas.v1.InTotoSlsaProvenanceV1)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * InToto spec defined at
   * https://github.com/in-toto/attestation/tree/main/spec#statement
   * </pre>
   *
   * <code>string type = 1 [json_name = "_type"];</code>
   *
   * @return The type.
   */
  java.lang.String getType();
  /**
   *
   *
   * <pre>
   * InToto spec defined at
   * https://github.com/in-toto/attestation/tree/main/spec#statement
   * </pre>
   *
   * <code>string type = 1 [json_name = "_type"];</code>
   *
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString getTypeBytes();

  /** <code>repeated .grafeas.v1.Subject subject = 2;</code> */
  java.util.List<io.grafeas.v1.Subject> getSubjectList();
  /** <code>repeated .grafeas.v1.Subject subject = 2;</code> */
  io.grafeas.v1.Subject getSubject(int index);
  /** <code>repeated .grafeas.v1.Subject subject = 2;</code> */
  int getSubjectCount();
  /** <code>repeated .grafeas.v1.Subject subject = 2;</code> */
  java.util.List<? extends io.grafeas.v1.SubjectOrBuilder> getSubjectOrBuilderList();
  /** <code>repeated .grafeas.v1.Subject subject = 2;</code> */
  io.grafeas.v1.SubjectOrBuilder getSubjectOrBuilder(int index);

  /**
   * <code>string predicate_type = 3;</code>
   *
   * @return The predicateType.
   */
  java.lang.String getPredicateType();
  /**
   * <code>string predicate_type = 3;</code>
   *
   * @return The bytes for predicateType.
   */
  com.google.protobuf.ByteString getPredicateTypeBytes();

  /**
   * <code>.grafeas.v1.InTotoSlsaProvenanceV1.SlsaProvenanceV1 predicate = 4;</code>
   *
   * @return Whether the predicate field is set.
   */
  boolean hasPredicate();
  /**
   * <code>.grafeas.v1.InTotoSlsaProvenanceV1.SlsaProvenanceV1 predicate = 4;</code>
   *
   * @return The predicate.
   */
  io.grafeas.v1.InTotoSlsaProvenanceV1.SlsaProvenanceV1 getPredicate();
  /** <code>.grafeas.v1.InTotoSlsaProvenanceV1.SlsaProvenanceV1 predicate = 4;</code> */
  io.grafeas.v1.InTotoSlsaProvenanceV1.SlsaProvenanceV1OrBuilder getPredicateOrBuilder();
}
