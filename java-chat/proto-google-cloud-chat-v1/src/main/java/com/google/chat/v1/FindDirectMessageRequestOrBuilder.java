/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/chat/v1/space.proto

// Protobuf Java Version: 3.25.5
package com.google.chat.v1;

public interface FindDirectMessageRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.chat.v1.FindDirectMessageRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Resource name of the user to find direct message with.
   *
   * Format: `users/{user}`, where `{user}` is either the `id` for the
   * [person](https://developers.google.com/people/api/rest/v1/people) from the
   * People API, or the `id` for the
   * [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users)
   * in the Directory API. For example, if the People API profile ID is
   * `123456789`, you can find a direct message with that person by using
   * `users/123456789` as the `name`. When [authenticated as a
   * user](https://developers.google.com/workspace/chat/authenticate-authorize-chat-user),
   * you can use the email as an alias for `{user}`. For example,
   * `users/example&#64;gmail.com` where `example&#64;gmail.com` is the email of the
   * Google Chat user.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Required. Resource name of the user to find direct message with.
   *
   * Format: `users/{user}`, where `{user}` is either the `id` for the
   * [person](https://developers.google.com/people/api/rest/v1/people) from the
   * People API, or the `id` for the
   * [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users)
   * in the Directory API. For example, if the People API profile ID is
   * `123456789`, you can find a direct message with that person by using
   * `users/123456789` as the `name`. When [authenticated as a
   * user](https://developers.google.com/workspace/chat/authenticate-authorize-chat-user),
   * you can use the email as an alias for `{user}`. For example,
   * `users/example&#64;gmail.com` where `example&#64;gmail.com` is the email of the
   * Google Chat user.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();
}
