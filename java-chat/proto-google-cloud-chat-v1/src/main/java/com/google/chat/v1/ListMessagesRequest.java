/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/chat/v1/message.proto

// Protobuf Java Version: 3.25.5
package com.google.chat.v1;

/**
 *
 *
 * <pre>
 * Lists messages in the specified space, that the user is a member of.
 * </pre>
 *
 * Protobuf type {@code google.chat.v1.ListMessagesRequest}
 */
public final class ListMessagesRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.chat.v1.ListMessagesRequest)
    ListMessagesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ListMessagesRequest.newBuilder() to construct.
  private ListMessagesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ListMessagesRequest() {
    parent_ = "";
    pageToken_ = "";
    filter_ = "";
    orderBy_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ListMessagesRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.chat.v1.MessageProto
        .internal_static_google_chat_v1_ListMessagesRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.chat.v1.MessageProto
        .internal_static_google_chat_v1_ListMessagesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.chat.v1.ListMessagesRequest.class,
            com.google.chat.v1.ListMessagesRequest.Builder.class);
  }

  public static final int PARENT_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object parent_ = "";
  /**
   *
   *
   * <pre>
   * Required. The resource name of the space to list messages from.
   *
   * Format: `spaces/{space}`
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The resource name of the space to list messages from.
   *
   * Format: `spaces/{space}`
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 2;
  private int pageSize_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. The maximum number of messages returned. The service might return
   * fewer messages than this value.
   *
   * If unspecified, at most 25 are returned.
   *
   * The maximum value is 1000. If you use a value more than 1000, it's
   * automatically changed to 1000.
   *
   * Negative values return an `INVALID_ARGUMENT` error.
   * </pre>
   *
   * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object pageToken_ = "";
  /**
   *
   *
   * <pre>
   * Optional. A page token received from a previous list messages call. Provide
   * this parameter to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided should match the call that
   * provided the page token. Passing different values to the other parameters
   * might lead to unexpected results.
   * </pre>
   *
   * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageToken.
   */
  @java.lang.Override
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. A page token received from a previous list messages call. Provide
   * this parameter to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided should match the call that
   * provided the page token. Passing different values to the other parameters
   * might lead to unexpected results.
   * </pre>
   *
   * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for pageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTER_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object filter_ = "";
  /**
   *
   *
   * <pre>
   * Optional. A query filter.
   *
   * You can filter messages by date (`create_time`) and thread (`thread.name`).
   *
   * To filter messages by the date they were created, specify the `create_time`
   * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
   * format and double quotation marks. For example,
   * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
   * list messages that were created after a timestamp, or the less than
   * operator `&lt;` to list messages that were created before a timestamp. To
   * filter messages within a time interval, use the `AND` operator between two
   * timestamps.
   *
   * To filter by thread, specify the `thread.name`, formatted as
   * `spaces/{space}/threads/{thread}`. You can only specify one
   * `thread.name` per query.
   *
   * To filter by both thread and date, use the `AND` operator in your query.
   *
   * For example, the following queries are valid:
   *
   * ```
   * create_time &gt; "2012-04-21T11:30:00-04:00"
   *
   * create_time &gt; "2012-04-21T11:30:00-04:00" AND
   *   thread.name = spaces/AAAAAAAAAAA/threads/123
   *
   * create_time &gt; "2012-04-21T11:30:00+00:00" AND
   *
   * create_time &lt; "2013-01-01T00:00:00+00:00" AND
   *   thread.name = spaces/AAAAAAAAAAA/threads/123
   *
   * thread.name = spaces/AAAAAAAAAAA/threads/123
   * ```
   *
   * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
   * error.
   * </pre>
   *
   * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The filter.
   */
  @java.lang.Override
  public java.lang.String getFilter() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filter_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. A query filter.
   *
   * You can filter messages by date (`create_time`) and thread (`thread.name`).
   *
   * To filter messages by the date they were created, specify the `create_time`
   * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
   * format and double quotation marks. For example,
   * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
   * list messages that were created after a timestamp, or the less than
   * operator `&lt;` to list messages that were created before a timestamp. To
   * filter messages within a time interval, use the `AND` operator between two
   * timestamps.
   *
   * To filter by thread, specify the `thread.name`, formatted as
   * `spaces/{space}/threads/{thread}`. You can only specify one
   * `thread.name` per query.
   *
   * To filter by both thread and date, use the `AND` operator in your query.
   *
   * For example, the following queries are valid:
   *
   * ```
   * create_time &gt; "2012-04-21T11:30:00-04:00"
   *
   * create_time &gt; "2012-04-21T11:30:00-04:00" AND
   *   thread.name = spaces/AAAAAAAAAAA/threads/123
   *
   * create_time &gt; "2012-04-21T11:30:00+00:00" AND
   *
   * create_time &lt; "2013-01-01T00:00:00+00:00" AND
   *   thread.name = spaces/AAAAAAAAAAA/threads/123
   *
   * thread.name = spaces/AAAAAAAAAAA/threads/123
   * ```
   *
   * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
   * error.
   * </pre>
   *
   * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for filter.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getFilterBytes() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      filter_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORDER_BY_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object orderBy_ = "";
  /**
   *
   *
   * <pre>
   * Optional. How the list of messages is ordered. Specify a value to order by
   * an ordering operation. Valid ordering operation values are as follows:
   *
   * - `ASC` for ascending.
   *
   * - `DESC` for descending.
   *
   * The default ordering is `create_time ASC`.
   * </pre>
   *
   * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The orderBy.
   */
  @java.lang.Override
  public java.lang.String getOrderBy() {
    java.lang.Object ref = orderBy_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      orderBy_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. How the list of messages is ordered. Specify a value to order by
   * an ordering operation. Valid ordering operation values are as follows:
   *
   * - `ASC` for ascending.
   *
   * - `DESC` for descending.
   *
   * The default ordering is `create_time ASC`.
   * </pre>
   *
   * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for orderBy.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getOrderByBytes() {
    java.lang.Object ref = orderBy_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      orderBy_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHOW_DELETED_FIELD_NUMBER = 6;
  private boolean showDeleted_ = false;
  /**
   *
   *
   * <pre>
   * Optional. Whether to include deleted messages. Deleted messages include
   * deleted time and metadata about their deletion, but message content is
   * unavailable.
   * </pre>
   *
   * <code>bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The showDeleted.
   */
  @java.lang.Override
  public boolean getShowDeleted() {
    return showDeleted_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, parent_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(2, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pageToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, filter_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(orderBy_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, orderBy_);
    }
    if (showDeleted_ != false) {
      output.writeBool(6, showDeleted_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, parent_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, pageSize_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pageToken_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, filter_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(orderBy_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, orderBy_);
    }
    if (showDeleted_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, showDeleted_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.chat.v1.ListMessagesRequest)) {
      return super.equals(obj);
    }
    com.google.chat.v1.ListMessagesRequest other = (com.google.chat.v1.ListMessagesRequest) obj;

    if (!getParent().equals(other.getParent())) return false;
    if (getPageSize() != other.getPageSize()) return false;
    if (!getPageToken().equals(other.getPageToken())) return false;
    if (!getFilter().equals(other.getFilter())) return false;
    if (!getOrderBy().equals(other.getOrderBy())) return false;
    if (getShowDeleted() != other.getShowDeleted()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PARENT_FIELD_NUMBER;
    hash = (53 * hash) + getParent().hashCode();
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    hash = (37 * hash) + FILTER_FIELD_NUMBER;
    hash = (53 * hash) + getFilter().hashCode();
    hash = (37 * hash) + ORDER_BY_FIELD_NUMBER;
    hash = (53 * hash) + getOrderBy().hashCode();
    hash = (37 * hash) + SHOW_DELETED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getShowDeleted());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.chat.v1.ListMessagesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.chat.v1.ListMessagesRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.chat.v1.ListMessagesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.chat.v1.ListMessagesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Lists messages in the specified space, that the user is a member of.
   * </pre>
   *
   * Protobuf type {@code google.chat.v1.ListMessagesRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.chat.v1.ListMessagesRequest)
      com.google.chat.v1.ListMessagesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.chat.v1.MessageProto
          .internal_static_google_chat_v1_ListMessagesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.chat.v1.MessageProto
          .internal_static_google_chat_v1_ListMessagesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.chat.v1.ListMessagesRequest.class,
              com.google.chat.v1.ListMessagesRequest.Builder.class);
    }

    // Construct using com.google.chat.v1.ListMessagesRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      parent_ = "";
      pageSize_ = 0;
      pageToken_ = "";
      filter_ = "";
      orderBy_ = "";
      showDeleted_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.chat.v1.MessageProto
          .internal_static_google_chat_v1_ListMessagesRequest_descriptor;
    }

    @java.lang.Override
    public com.google.chat.v1.ListMessagesRequest getDefaultInstanceForType() {
      return com.google.chat.v1.ListMessagesRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.chat.v1.ListMessagesRequest build() {
      com.google.chat.v1.ListMessagesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.chat.v1.ListMessagesRequest buildPartial() {
      com.google.chat.v1.ListMessagesRequest result =
          new com.google.chat.v1.ListMessagesRequest(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.chat.v1.ListMessagesRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.parent_ = parent_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.pageSize_ = pageSize_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.pageToken_ = pageToken_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.filter_ = filter_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.orderBy_ = orderBy_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.showDeleted_ = showDeleted_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.chat.v1.ListMessagesRequest) {
        return mergeFrom((com.google.chat.v1.ListMessagesRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.chat.v1.ListMessagesRequest other) {
      if (other == com.google.chat.v1.ListMessagesRequest.getDefaultInstance()) return this;
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getFilter().isEmpty()) {
        filter_ = other.filter_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getOrderBy().isEmpty()) {
        orderBy_ = other.orderBy_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getShowDeleted() != false) {
        setShowDeleted(other.getShowDeleted());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                parent_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                pageSize_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 26:
              {
                pageToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                filter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 42:
              {
                orderBy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 48:
              {
                showDeleted_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object parent_ = "";
    /**
     *
     *
     * <pre>
     * Required. The resource name of the space to list messages from.
     *
     * Format: `spaces/{space}`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The parent.
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the space to list messages from.
     *
     * Format: `spaces/{space}`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for parent.
     */
    public com.google.protobuf.ByteString getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the space to list messages from.
     *
     * Format: `spaces/{space}`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parent_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the space to list messages from.
     *
     * Format: `spaces/{space}`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      parent_ = getDefaultInstance().getParent();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the space to list messages from.
     *
     * Format: `spaces/{space}`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      parent_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int pageSize_;
    /**
     *
     *
     * <pre>
     * Optional. The maximum number of messages returned. The service might return
     * fewer messages than this value.
     *
     * If unspecified, at most 25 are returned.
     *
     * The maximum value is 1000. If you use a value more than 1000, it's
     * automatically changed to 1000.
     *
     * Negative values return an `INVALID_ARGUMENT` error.
     * </pre>
     *
     * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     *
     *
     * <pre>
     * Optional. The maximum number of messages returned. The service might return
     * fewer messages than this value.
     *
     * If unspecified, at most 25 are returned.
     *
     * The maximum value is 1000. If you use a value more than 1000, it's
     * automatically changed to 1000.
     *
     * Negative values return an `INVALID_ARGUMENT` error.
     * </pre>
     *
     * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {

      pageSize_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The maximum number of messages returned. The service might return
     * fewer messages than this value.
     *
     * If unspecified, at most 25 are returned.
     *
     * The maximum value is 1000. If you use a value more than 1000, it's
     * automatically changed to 1000.
     *
     * Negative values return an `INVALID_ARGUMENT` error.
     * </pre>
     *
     * <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     *
     *
     * <pre>
     * Optional. A page token received from a previous list messages call. Provide
     * this parameter to retrieve the subsequent page.
     *
     * When paginating, all other parameters provided should match the call that
     * provided the page token. Passing different values to the other parameters
     * might lead to unexpected results.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The pageToken.
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A page token received from a previous list messages call. Provide
     * this parameter to retrieve the subsequent page.
     *
     * When paginating, all other parameters provided should match the call that
     * provided the page token. Passing different values to the other parameters
     * might lead to unexpected results.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for pageToken.
     */
    public com.google.protobuf.ByteString getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A page token received from a previous list messages call. Provide
     * this parameter to retrieve the subsequent page.
     *
     * When paginating, all other parameters provided should match the call that
     * provided the page token. Passing different values to the other parameters
     * might lead to unexpected results.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageToken(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pageToken_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A page token received from a previous list messages call. Provide
     * this parameter to retrieve the subsequent page.
     *
     * When paginating, all other parameters provided should match the call that
     * provided the page token. Passing different values to the other parameters
     * might lead to unexpected results.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPageToken() {
      pageToken_ = getDefaultInstance().getPageToken();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A page token received from a previous list messages call. Provide
     * this parameter to retrieve the subsequent page.
     *
     * When paginating, all other parameters provided should match the call that
     * provided the page token. Passing different values to the other parameters
     * might lead to unexpected results.
     * </pre>
     *
     * <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageTokenBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      pageToken_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object filter_ = "";
    /**
     *
     *
     * <pre>
     * Optional. A query filter.
     *
     * You can filter messages by date (`create_time`) and thread (`thread.name`).
     *
     * To filter messages by the date they were created, specify the `create_time`
     * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
     * format and double quotation marks. For example,
     * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
     * list messages that were created after a timestamp, or the less than
     * operator `&lt;` to list messages that were created before a timestamp. To
     * filter messages within a time interval, use the `AND` operator between two
     * timestamps.
     *
     * To filter by thread, specify the `thread.name`, formatted as
     * `spaces/{space}/threads/{thread}`. You can only specify one
     * `thread.name` per query.
     *
     * To filter by both thread and date, use the `AND` operator in your query.
     *
     * For example, the following queries are valid:
     *
     * ```
     * create_time &gt; "2012-04-21T11:30:00-04:00"
     *
     * create_time &gt; "2012-04-21T11:30:00-04:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * create_time &gt; "2012-04-21T11:30:00+00:00" AND
     *
     * create_time &lt; "2013-01-01T00:00:00+00:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * thread.name = spaces/AAAAAAAAAAA/threads/123
     * ```
     *
     * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
     * error.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The filter.
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A query filter.
     *
     * You can filter messages by date (`create_time`) and thread (`thread.name`).
     *
     * To filter messages by the date they were created, specify the `create_time`
     * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
     * format and double quotation marks. For example,
     * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
     * list messages that were created after a timestamp, or the less than
     * operator `&lt;` to list messages that were created before a timestamp. To
     * filter messages within a time interval, use the `AND` operator between two
     * timestamps.
     *
     * To filter by thread, specify the `thread.name`, formatted as
     * `spaces/{space}/threads/{thread}`. You can only specify one
     * `thread.name` per query.
     *
     * To filter by both thread and date, use the `AND` operator in your query.
     *
     * For example, the following queries are valid:
     *
     * ```
     * create_time &gt; "2012-04-21T11:30:00-04:00"
     *
     * create_time &gt; "2012-04-21T11:30:00-04:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * create_time &gt; "2012-04-21T11:30:00+00:00" AND
     *
     * create_time &lt; "2013-01-01T00:00:00+00:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * thread.name = spaces/AAAAAAAAAAA/threads/123
     * ```
     *
     * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
     * error.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for filter.
     */
    public com.google.protobuf.ByteString getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A query filter.
     *
     * You can filter messages by date (`create_time`) and thread (`thread.name`).
     *
     * To filter messages by the date they were created, specify the `create_time`
     * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
     * format and double quotation marks. For example,
     * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
     * list messages that were created after a timestamp, or the less than
     * operator `&lt;` to list messages that were created before a timestamp. To
     * filter messages within a time interval, use the `AND` operator between two
     * timestamps.
     *
     * To filter by thread, specify the `thread.name`, formatted as
     * `spaces/{space}/threads/{thread}`. You can only specify one
     * `thread.name` per query.
     *
     * To filter by both thread and date, use the `AND` operator in your query.
     *
     * For example, the following queries are valid:
     *
     * ```
     * create_time &gt; "2012-04-21T11:30:00-04:00"
     *
     * create_time &gt; "2012-04-21T11:30:00-04:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * create_time &gt; "2012-04-21T11:30:00+00:00" AND
     *
     * create_time &lt; "2013-01-01T00:00:00+00:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * thread.name = spaces/AAAAAAAAAAA/threads/123
     * ```
     *
     * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
     * error.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilter(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      filter_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A query filter.
     *
     * You can filter messages by date (`create_time`) and thread (`thread.name`).
     *
     * To filter messages by the date they were created, specify the `create_time`
     * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
     * format and double quotation marks. For example,
     * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
     * list messages that were created after a timestamp, or the less than
     * operator `&lt;` to list messages that were created before a timestamp. To
     * filter messages within a time interval, use the `AND` operator between two
     * timestamps.
     *
     * To filter by thread, specify the `thread.name`, formatted as
     * `spaces/{space}/threads/{thread}`. You can only specify one
     * `thread.name` per query.
     *
     * To filter by both thread and date, use the `AND` operator in your query.
     *
     * For example, the following queries are valid:
     *
     * ```
     * create_time &gt; "2012-04-21T11:30:00-04:00"
     *
     * create_time &gt; "2012-04-21T11:30:00-04:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * create_time &gt; "2012-04-21T11:30:00+00:00" AND
     *
     * create_time &lt; "2013-01-01T00:00:00+00:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * thread.name = spaces/AAAAAAAAAAA/threads/123
     * ```
     *
     * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
     * error.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFilter() {
      filter_ = getDefaultInstance().getFilter();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A query filter.
     *
     * You can filter messages by date (`create_time`) and thread (`thread.name`).
     *
     * To filter messages by the date they were created, specify the `create_time`
     * with a timestamp in [RFC-3339](https://www.rfc-editor.org/rfc/rfc3339)
     * format and double quotation marks. For example,
     * `"2023-04-21T11:30:00-04:00"`. You can use the greater than operator `&gt;` to
     * list messages that were created after a timestamp, or the less than
     * operator `&lt;` to list messages that were created before a timestamp. To
     * filter messages within a time interval, use the `AND` operator between two
     * timestamps.
     *
     * To filter by thread, specify the `thread.name`, formatted as
     * `spaces/{space}/threads/{thread}`. You can only specify one
     * `thread.name` per query.
     *
     * To filter by both thread and date, use the `AND` operator in your query.
     *
     * For example, the following queries are valid:
     *
     * ```
     * create_time &gt; "2012-04-21T11:30:00-04:00"
     *
     * create_time &gt; "2012-04-21T11:30:00-04:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * create_time &gt; "2012-04-21T11:30:00+00:00" AND
     *
     * create_time &lt; "2013-01-01T00:00:00+00:00" AND
     *   thread.name = spaces/AAAAAAAAAAA/threads/123
     *
     * thread.name = spaces/AAAAAAAAAAA/threads/123
     * ```
     *
     * Invalid queries are rejected by the server with an `INVALID_ARGUMENT`
     * error.
     * </pre>
     *
     * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilterBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      filter_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object orderBy_ = "";
    /**
     *
     *
     * <pre>
     * Optional. How the list of messages is ordered. Specify a value to order by
     * an ordering operation. Valid ordering operation values are as follows:
     *
     * - `ASC` for ascending.
     *
     * - `DESC` for descending.
     *
     * The default ordering is `create_time ASC`.
     * </pre>
     *
     * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The orderBy.
     */
    public java.lang.String getOrderBy() {
      java.lang.Object ref = orderBy_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        orderBy_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. How the list of messages is ordered. Specify a value to order by
     * an ordering operation. Valid ordering operation values are as follows:
     *
     * - `ASC` for ascending.
     *
     * - `DESC` for descending.
     *
     * The default ordering is `create_time ASC`.
     * </pre>
     *
     * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for orderBy.
     */
    public com.google.protobuf.ByteString getOrderByBytes() {
      java.lang.Object ref = orderBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        orderBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. How the list of messages is ordered. Specify a value to order by
     * an ordering operation. Valid ordering operation values are as follows:
     *
     * - `ASC` for ascending.
     *
     * - `DESC` for descending.
     *
     * The default ordering is `create_time ASC`.
     * </pre>
     *
     * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The orderBy to set.
     * @return This builder for chaining.
     */
    public Builder setOrderBy(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      orderBy_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. How the list of messages is ordered. Specify a value to order by
     * an ordering operation. Valid ordering operation values are as follows:
     *
     * - `ASC` for ascending.
     *
     * - `DESC` for descending.
     *
     * The default ordering is `create_time ASC`.
     * </pre>
     *
     * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOrderBy() {
      orderBy_ = getDefaultInstance().getOrderBy();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. How the list of messages is ordered. Specify a value to order by
     * an ordering operation. Valid ordering operation values are as follows:
     *
     * - `ASC` for ascending.
     *
     * - `DESC` for descending.
     *
     * The default ordering is `create_time ASC`.
     * </pre>
     *
     * <code>string order_by = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for orderBy to set.
     * @return This builder for chaining.
     */
    public Builder setOrderByBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      orderBy_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private boolean showDeleted_;
    /**
     *
     *
     * <pre>
     * Optional. Whether to include deleted messages. Deleted messages include
     * deleted time and metadata about their deletion, but message content is
     * unavailable.
     * </pre>
     *
     * <code>bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The showDeleted.
     */
    @java.lang.Override
    public boolean getShowDeleted() {
      return showDeleted_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Whether to include deleted messages. Deleted messages include
     * deleted time and metadata about their deletion, but message content is
     * unavailable.
     * </pre>
     *
     * <code>bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The showDeleted to set.
     * @return This builder for chaining.
     */
    public Builder setShowDeleted(boolean value) {

      showDeleted_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Whether to include deleted messages. Deleted messages include
     * deleted time and metadata about their deletion, but message content is
     * unavailable.
     * </pre>
     *
     * <code>bool show_deleted = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearShowDeleted() {
      bitField0_ = (bitField0_ & ~0x00000020);
      showDeleted_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.chat.v1.ListMessagesRequest)
  }

  // @@protoc_insertion_point(class_scope:google.chat.v1.ListMessagesRequest)
  private static final com.google.chat.v1.ListMessagesRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.chat.v1.ListMessagesRequest();
  }

  public static com.google.chat.v1.ListMessagesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListMessagesRequest> PARSER =
      new com.google.protobuf.AbstractParser<ListMessagesRequest>() {
        @java.lang.Override
        public ListMessagesRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ListMessagesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListMessagesRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.chat.v1.ListMessagesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
