/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/managedkafka/v1/resources.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.managedkafka.v1;

public final class ResourcesProto {
  private ResourcesProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Cluster_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Cluster_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_CapacityConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_CapacityConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_RebalanceConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_RebalanceConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_NetworkConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_NetworkConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_AccessConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_AccessConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_GcpConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_GcpConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_TlsConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_TlsConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_TrustConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_TrustConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_TrustConfig_CertificateAuthorityServiceConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_TrustConfig_CertificateAuthorityServiceConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Topic_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Topic_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_OperationMetadata_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_OperationMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConnectCluster_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConnectCluster_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConnectCluster_LabelsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConnectCluster_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConnectCluster_ConfigEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConnectCluster_ConfigEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConnectAccessConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConnectAccessConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConnectGcpConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConnectGcpConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Connector_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Connector_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Connector_ConfigsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Connector_ConfigsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_TaskRetryPolicy_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_TaskRetryPolicy_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Acl_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Acl_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_AclEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_AclEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n"
          + ",google/cloud/managedkafka/v1/resources"
          + ".proto\022\034google.cloud.managedkafka.v1\032\037go"
          + "ogle/api/field_behavior.proto\032\031google/ap"
          + "i/resource.proto\032\036google/protobuf/durati"
          + "on.proto\032\037google/protobuf/timestamp.proto\"\232\007\n"
          + "\007Cluster\022B\n\n"
          + "gcp_config\030\t \001(\0132\'.goog"
          + "le.cloud.managedkafka.v1.GcpConfigB\003\340A\002H\000\022\021\n"
          + "\004name\030\001 \001(\tB\003\340A\010\0224\n"
          + "\013create_time\030\002 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\0224\n"
          + "\013update_time\030\003 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\022F\n"
          + "\006labels\030\004 \003(\01321.google.cloud."
          + "managedkafka.v1.Cluster.LabelsEntryB\003\340A\001\022J\n"
          + "\017capacity_config\030\005"
          + " \001(\0132,.google.cloud.managedkafka.v1.CapacityConfigB\003\340A\002\022L\n"
          + "\020rebalance_config\030\010"
          + " \001(\0132-.google.cloud.managedkafka.v1.RebalanceConfigB\003\340A\001\022?\n"
          + "\005state\030\n"
          + " \001(\0162+.google.cloud.managedkafka.v1.Cluster.StateB\003\340A\003\022\037\n\r"
          + "satisfies_pzi\030\013 \001(\010B\003\340A\003H\001\210\001\001\022\037\n\r"
          + "satisfies_pzs\030\014 \001(\010B\003\340A\003H\002\210\001\001\022@\n\n"
          + "tls_config\030\r"
          + " \001(\0132\'.google.cloud.managedkafka.v1.TlsConfigB\003\340A\001\032-\n"
          + "\013LabelsEntry\022\013\n"
          + "\003key\030\001 \001(\t\022\r\n"
          + "\005value\030\002 \001(\t:\0028\001\"F\n"
          + "\005State\022\025\n"
          + "\021STATE_UNSPECIFIED\020\000\022\014\n"
          + "\010CREATING\020\001\022\n\n"
          + "\006ACTIVE\020\002\022\014\n"
          + "\010DELETING\020\003:w\352At\n"
          + "#managedkafka.googleapis.com/Cluster\022:projec"
          + "ts/{project}/locations/{location}/clusters/{cluster}*\010clusters2\007clusterB\021\n"
          + "\017platform_configB\020\n"
          + "\016_satisfies_pziB\020\n"
          + "\016_satisfies_pzs\"D\n"
          + "\016CapacityConfig\022\027\n\n"
          + "vcpu_count\030\001 \001(\003B\003\340A\002\022\031\n"
          + "\014memory_bytes\030\002 \001(\003B\003\340A\002\"\250\001\n"
          + "\017RebalanceConfig\022E\n"
          + "\004mode\030\001 \001(\01622.google."
          + "cloud.managedkafka.v1.RebalanceConfig.ModeB\003\340A\001\"N\n"
          + "\004Mode\022\024\n"
          + "\020MODE_UNSPECIFIED\020\000\022\020\n"
          + "\014NO_REBALANCE\020\001\022\036\n"
          + "\032AUTO_REBALANCE_ON_SCALE_UP\020\002\"$\n\r"
          + "NetworkConfig\022\023\n"
          + "\006subnet\030\002 \001(\tB\003\340A\002\"Y\n"
          + "\014AccessConfig\022I\n"
          + "\017network_configs\030\001"
          + " \003(\0132+.google.cloud.managedkafka.v1.NetworkConfigB\003\340A\002\"\222\001\n"
          + "\tGcpConfig\022F\n\r"
          + "access_config\030\003"
          + " \001(\0132*.google.cloud.managedkafka.v1.AccessConfigB\003\340A\002\022=\n"
          + "\007kms_key\030\002 \001(\tB,\340A\001\340A\005\372A#\n"
          + "!cloudkms.googleapis.com/CryptoKey\"{\n"
          + "\tTlsConfig\022D\n"
          + "\014trust_config\030\001 \001(\013"
          + "2).google.cloud.managedkafka.v1.TrustConfigB\003\340A\001\022(\n"
          + "\033ssl_principal_mapping_rules\030\002 \001(\tB\003\340A\001\"\323\001\n"
          + "\013TrustConfig\022e\n"
          + "\013cas_configs\030\001 \003(\0132K.google.cloud.managedkafka.v1.T"
          + "rustConfig.CertificateAuthorityServiceConfigB\003\340A\001\032]\n"
          + "!CertificateAuthorityServiceConfig\0228\n"
          + "\007ca_pool\030\001 \001(\tB\'\340A\002\372A!\n"
          + "\037privateca.googleapis.com/CaPool\"\327\002\n"
          + "\005Topic\022\021\n"
          + "\004name\030\001 \001(\tB\003\340A\010\022\034\n"
          + "\017partition_count\030\002 \001(\005B\003\340A\002\022\"\n"
          + "\022replication_factor\030\003 \001(\005B\006\340A\002\340A\005\022F\n"
          + "\007configs\030\004"
          + " \003(\01320.google.cloud.managedkafka.v1.Topic.ConfigsEntryB\003\340A\001\032.\n"
          + "\014ConfigsEntry\022\013\n"
          + "\003key\030\001 \001(\t\022\r\n"
          + "\005value\030\002 \001(\t:\0028\001:\200\001\352A}\n"
          + "!managedkafka.googleapis.com/Topic\022Iprojects/{project}/locations/{location"
          + "}/clusters/{cluster}/topics/{topic}*\006topics2\005topic\"\341\001\n"
          + "\025ConsumerTopicMetadata\022\\\n\n"
          + "partitions\030\001 \003(\0132C.google.cloud.managedk"
          + "afka.v1.ConsumerTopicMetadata.PartitionsEntryB\003\340A\001\032j\n"
          + "\017PartitionsEntry\022\013\n"
          + "\003key\030\001 \001(\005\022F\n"
          + "\005value\030\002 \001(\01327.google.cloud.managed"
          + "kafka.v1.ConsumerPartitionMetadata:\0028\001\"G\n"
          + "\031ConsumerPartitionMetadata\022\023\n"
          + "\006offset\030\001 \001(\003B\003\340A\002\022\025\n"
          + "\010metadata\030\002 \001(\tB\003\340A\001\"\201\003\n\r"
          + "ConsumerGroup\022\021\n"
          + "\004name\030\001 \001(\tB\003\340A\010\022L\n"
          + "\006topics\030\002"
          + " \003(\01327.google.cloud.managedkafka.v1.ConsumerGroup.TopicsEntryB\003\340A\001\032b\n"
          + "\013TopicsEntry\022\013\n"
          + "\003key\030\001 \001(\t\022B\n"
          + "\005value\030\002 \001(\01323.google.c"
          + "loud.managedkafka.v1.ConsumerTopicMetadata:\0028\001:\252\001\352A\246\001\n"
          + ")managedkafka.googleapis.com/ConsumerGroup\022Zprojects/{project}/loc"
          + "ations/{location}/clusters/{cluster}/con"
          + "sumerGroups/{consumer_group}*\016consumerGroups2\r"
          + "consumerGroup\"\200\002\n"
          + "\021OperationMetadata\0224\n"
          + "\013create_time\030\001 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\0221\n"
          + "\010end_time\030\002 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\022\023\n"
          + "\006target\030\003 \001(\tB\003\340A\003\022\021\n"
          + "\004verb\030\004 \001(\tB\003\340A\003\022\033\n"
          + "\016status_message\030\005 \001(\tB\003\340A\003\022#\n"
          + "\026requested_cancellation\030\006 \001(\010B\003\340A\003\022\030\n"
          + "\013api_version\030\007 \001(\tB\003\340A\003\"\203\007\n"
          + "\016ConnectCluster\022I\n\n"
          + "gcp_config\030\007 \001(\0132.."
          + "google.cloud.managedkafka.v1.ConnectGcpConfigB\003\340A\002H\000\022\021\n"
          + "\004name\030\001 \001(\tB\003\340A\010\022\035\n\r"
          + "kafka_cluster\030\002 \001(\tB\006\340A\002\340A\005\0224\n"
          + "\013create_time\030\003 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\0224\n"
          + "\013update_time\030\004 \001(\0132\032.google.protobuf.TimestampB\003\340A\003\022M\n"
          + "\006labels\030\005 \003(\01328.google.clou"
          + "d.managedkafka.v1.ConnectCluster.LabelsEntryB\003\340A\001\022J\n"
          + "\017capacity_config\030\006 \001(\0132,.goo"
          + "gle.cloud.managedkafka.v1.CapacityConfigB\003\340A\002\022F\n"
          + "\005state\030\010"
          + " \001(\01622.google.cloud.managedkafka.v1.ConnectCluster.StateB\003\340A\003\022M\n"
          + "\006config\030\t"
          + " \003(\01328.google.cloud.managedkafka.v1.ConnectCluster.ConfigEntryB\003\340A\001\032-\n"
          + "\013LabelsEntry\022\013\n"
          + "\003key\030\001 \001(\t\022\r\n"
          + "\005value\030\002 \001(\t:\0028\001\032-\n"
          + "\013ConfigEntry\022\013\n"
          + "\003key\030\001 \001(\t\022\r\n"
          + "\005value\030\002 \001(\t:\0028\001\"F\n"
          + "\005State\022\025\n"
          + "\021STATE_UNSPECIFIED\020\000\022\014\n"
          + "\010CREATING\020\001\022\n\n"
          + "\006ACTIVE\020\002\022\014\n"
          + "\010DELETING\020\003:\234\001\352A\230\001\n"
          + "*managedkafka.googleapis.com/ConnectCluster\022Iprojects/{project}/locati"
          + "ons/{location}/connectClusters/{connect_"
          + "cluster}*\017connectClusters2\016connectClusterB\021\n"
          + "\017platform_config\"s\n"
          + "\024ConnectNetworkConfig\022\033\n"
          + "\016primary_subnet\030\003 \001(\tB\003\340A\002\022\037\n"
          + "\022additional_subnets\030\004 \003(\tB\003\340A\001\022\035\n"
          + "\020dns_domain_names\030\002 \003(\tB\003\340A\001\"g\n"
          + "\023ConnectAccessConfig\022P\n"
          + "\017network_configs\030\001 \003(\01322.google.cloud"
          + ".managedkafka.v1.ConnectNetworkConfigB\003\340A\002\"\253\001\n"
          + "\020ConnectGcpConfig\022M\n\r"
          + "access_config\030\001"
          + " \001(\01321.google.cloud.managedkafka.v1.ConnectAccessConfigB\003\340A\002\022H\n"
          + "\014secret_paths\030\002 \003(\tB2\340A\001\372A,\n"
          + "*secretmanager.googleapis.com/SecretVersion\"\333\004\n"
          + "\tConnector\022Q\n"
          + "\023task_restart_policy\030\004"
          + " \001(\0132-.google.cloud.managedkafka.v1.TaskRetryPolicyB\003\340A\001H\000\022\021\n"
          + "\004name\030\001 \001(\tB\003\340A\010\022J\n"
          + "\007configs\030\002 \003(\01324.google.c"
          + "loud.managedkafka.v1.Connector.ConfigsEntryB\003\340A\001\022A\n"
          + "\005state\030\003"
          + " \001(\0162-.google.cloud.managedkafka.v1.Connector.StateB\003\340A\003\032.\n"
          + "\014ConfigsEntry\022\013\n"
          + "\003key\030\001 \001(\t\022\r\n"
          + "\005value\030\002 \001(\t:\0028\001\"p\n"
          + "\005State\022\025\n"
          + "\021STATE_UNSPECIFIED\020\000\022\016\n\n"
          + "UNASSIGNED\020\001\022\013\n"
          + "\007RUNNING\020\002\022\n\n"
          + "\006PAUSED\020\003\022\n\n"
          + "\006FAILED\020\004\022\016\n\n"
          + "RESTARTING\020\005\022\013\n"
          + "\007STOPPED\020\006:\244\001\352A\240\001\n"
          + "%managedkafka.googleapis.com/Connector\022`projects/{project}/locations/{locat"
          + "ion}/connectClusters/{connect_cluster}/connectors/{connector}*\n"
          + "connectors2\tconnectorB\020\n"
          + "\016restart_policy\"\203\001\n"
          + "\017TaskRetryPolicy\0227\n"
          + "\017minimum_backoff\030\001"
          + " \001(\0132\031.google.protobuf.DurationB\003\340A\001\0227\n"
          + "\017maximum_backoff\030\002"
          + " \001(\0132\031.google.protobuf.DurationB\003\340A\001\"\270\002\n"
          + "\003Acl\022\021\n"
          + "\004name\030\001 \001(\tB\003\340A\010\022@\n"
          + "\013acl_entries\030\002"
          + " \003(\0132&.google.cloud.managedkafka.v1.AclEntryB\003\340A\002\022\021\n"
          + "\004etag\030\003 \001(\tB\003\340A\001\022\032\n\r"
          + "resource_type\030\004 \001(\tB\003\340A\003\022\032\n\r"
          + "resource_name\030\005 \001(\tB\003\340A\003\022\031\n"
          + "\014pattern_type\030\006 \001(\tB\003\340A\003:v\352As\n"
          + "\037managedkafka.googleapis.com/Acl\022Eprojects/"
          + "{project}/locations/{location}/clusters/{cluster}/acls/{acl}*\004acls2\003acl\"k\n"
          + "\010AclEntry\022\026\n"
          + "\tprincipal\030\004 \001(\tB\003\340A\002\022\034\n"
          + "\017permission_type\030\005 \001(\tB\003\340A\002\022\026\n"
          + "\toperation\030\006 \001(\tB\003\340A\002\022\021\n"
          + "\004host\030\007 \001(\tB\003\340A\002B\242\004\n"
          + " com.google.cloud.managedkafka.v1B\016ResourcesProtoP\001ZDclo"
          + "ud.google.com/go/managedkafka/apiv1/mana"
          + "gedkafkapb;managedkafkapb\252\002\034Google.Cloud"
          + ".ManagedKafka.V1\312\002\034Google\\Cloud\\ManagedK"
          + "afka\\V1\352\002\037Google::Cloud::ManagedKafka::V1\352Ax\n"
          + "!cloudkms.googleapis.com/CryptoKey\022Sprojects/{project}/locations/{location}"
          + "/keyRings/{key_ring}/cryptoKeys/{crypto_key}\352Ak\n"
          + "*secretmanager.googleapis.com/Se"
          + "cretVersion\022=projects/{project}/secrets/{secret}/versions/{secret_version}\352A\\\n"
          + "\037privateca.googleapis.com/CaPool\0229projects"
          + "/{project}/locations/{location}/caPools/{ca_pool}b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.FieldBehaviorProto.getDescriptor(),
              com.google.api.ResourceProto.getDescriptor(),
              com.google.protobuf.DurationProto.getDescriptor(),
              com.google.protobuf.TimestampProto.getDescriptor(),
            });
    internal_static_google_cloud_managedkafka_v1_Cluster_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Cluster_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Cluster_descriptor,
            new java.lang.String[] {
              "GcpConfig",
              "Name",
              "CreateTime",
              "UpdateTime",
              "Labels",
              "CapacityConfig",
              "RebalanceConfig",
              "State",
              "SatisfiesPzi",
              "SatisfiesPzs",
              "TlsConfig",
              "PlatformConfig",
            });
    internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_Cluster_descriptor.getNestedTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_CapacityConfig_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_google_cloud_managedkafka_v1_CapacityConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_CapacityConfig_descriptor,
            new java.lang.String[] {
              "VcpuCount", "MemoryBytes",
            });
    internal_static_google_cloud_managedkafka_v1_RebalanceConfig_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_google_cloud_managedkafka_v1_RebalanceConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_RebalanceConfig_descriptor,
            new java.lang.String[] {
              "Mode",
            });
    internal_static_google_cloud_managedkafka_v1_NetworkConfig_descriptor =
        getDescriptor().getMessageTypes().get(3);
    internal_static_google_cloud_managedkafka_v1_NetworkConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_NetworkConfig_descriptor,
            new java.lang.String[] {
              "Subnet",
            });
    internal_static_google_cloud_managedkafka_v1_AccessConfig_descriptor =
        getDescriptor().getMessageTypes().get(4);
    internal_static_google_cloud_managedkafka_v1_AccessConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_AccessConfig_descriptor,
            new java.lang.String[] {
              "NetworkConfigs",
            });
    internal_static_google_cloud_managedkafka_v1_GcpConfig_descriptor =
        getDescriptor().getMessageTypes().get(5);
    internal_static_google_cloud_managedkafka_v1_GcpConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_GcpConfig_descriptor,
            new java.lang.String[] {
              "AccessConfig", "KmsKey",
            });
    internal_static_google_cloud_managedkafka_v1_TlsConfig_descriptor =
        getDescriptor().getMessageTypes().get(6);
    internal_static_google_cloud_managedkafka_v1_TlsConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_TlsConfig_descriptor,
            new java.lang.String[] {
              "TrustConfig", "SslPrincipalMappingRules",
            });
    internal_static_google_cloud_managedkafka_v1_TrustConfig_descriptor =
        getDescriptor().getMessageTypes().get(7);
    internal_static_google_cloud_managedkafka_v1_TrustConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_TrustConfig_descriptor,
            new java.lang.String[] {
              "CasConfigs",
            });
    internal_static_google_cloud_managedkafka_v1_TrustConfig_CertificateAuthorityServiceConfig_descriptor =
        internal_static_google_cloud_managedkafka_v1_TrustConfig_descriptor.getNestedTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_TrustConfig_CertificateAuthorityServiceConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_TrustConfig_CertificateAuthorityServiceConfig_descriptor,
            new java.lang.String[] {
              "CaPool",
            });
    internal_static_google_cloud_managedkafka_v1_Topic_descriptor =
        getDescriptor().getMessageTypes().get(8);
    internal_static_google_cloud_managedkafka_v1_Topic_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Topic_descriptor,
            new java.lang.String[] {
              "Name", "PartitionCount", "ReplicationFactor", "Configs",
            });
    internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_Topic_descriptor.getNestedTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor =
        getDescriptor().getMessageTypes().get(9);
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor,
            new java.lang.String[] {
              "Partitions",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor
            .getNestedTypes()
            .get(0);
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_descriptor =
        getDescriptor().getMessageTypes().get(10);
    internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_descriptor,
            new java.lang.String[] {
              "Offset", "Metadata",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor =
        getDescriptor().getMessageTypes().get(11);
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor,
            new java.lang.String[] {
              "Name", "Topics",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor
            .getNestedTypes()
            .get(0);
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_OperationMetadata_descriptor =
        getDescriptor().getMessageTypes().get(12);
    internal_static_google_cloud_managedkafka_v1_OperationMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_OperationMetadata_descriptor,
            new java.lang.String[] {
              "CreateTime",
              "EndTime",
              "Target",
              "Verb",
              "StatusMessage",
              "RequestedCancellation",
              "ApiVersion",
            });
    internal_static_google_cloud_managedkafka_v1_ConnectCluster_descriptor =
        getDescriptor().getMessageTypes().get(13);
    internal_static_google_cloud_managedkafka_v1_ConnectCluster_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConnectCluster_descriptor,
            new java.lang.String[] {
              "GcpConfig",
              "Name",
              "KafkaCluster",
              "CreateTime",
              "UpdateTime",
              "Labels",
              "CapacityConfig",
              "State",
              "Config",
              "PlatformConfig",
            });
    internal_static_google_cloud_managedkafka_v1_ConnectCluster_LabelsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_ConnectCluster_descriptor
            .getNestedTypes()
            .get(0);
    internal_static_google_cloud_managedkafka_v1_ConnectCluster_LabelsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConnectCluster_LabelsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_ConnectCluster_ConfigEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_ConnectCluster_descriptor
            .getNestedTypes()
            .get(1);
    internal_static_google_cloud_managedkafka_v1_ConnectCluster_ConfigEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConnectCluster_ConfigEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_descriptor =
        getDescriptor().getMessageTypes().get(14);
    internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_descriptor,
            new java.lang.String[] {
              "PrimarySubnet", "AdditionalSubnets", "DnsDomainNames",
            });
    internal_static_google_cloud_managedkafka_v1_ConnectAccessConfig_descriptor =
        getDescriptor().getMessageTypes().get(15);
    internal_static_google_cloud_managedkafka_v1_ConnectAccessConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConnectAccessConfig_descriptor,
            new java.lang.String[] {
              "NetworkConfigs",
            });
    internal_static_google_cloud_managedkafka_v1_ConnectGcpConfig_descriptor =
        getDescriptor().getMessageTypes().get(16);
    internal_static_google_cloud_managedkafka_v1_ConnectGcpConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConnectGcpConfig_descriptor,
            new java.lang.String[] {
              "AccessConfig", "SecretPaths",
            });
    internal_static_google_cloud_managedkafka_v1_Connector_descriptor =
        getDescriptor().getMessageTypes().get(17);
    internal_static_google_cloud_managedkafka_v1_Connector_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Connector_descriptor,
            new java.lang.String[] {
              "TaskRestartPolicy", "Name", "Configs", "State", "RestartPolicy",
            });
    internal_static_google_cloud_managedkafka_v1_Connector_ConfigsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_Connector_descriptor.getNestedTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Connector_ConfigsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Connector_ConfigsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_TaskRetryPolicy_descriptor =
        getDescriptor().getMessageTypes().get(18);
    internal_static_google_cloud_managedkafka_v1_TaskRetryPolicy_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_TaskRetryPolicy_descriptor,
            new java.lang.String[] {
              "MinimumBackoff", "MaximumBackoff",
            });
    internal_static_google_cloud_managedkafka_v1_Acl_descriptor =
        getDescriptor().getMessageTypes().get(19);
    internal_static_google_cloud_managedkafka_v1_Acl_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Acl_descriptor,
            new java.lang.String[] {
              "Name", "AclEntries", "Etag", "ResourceType", "ResourceName", "PatternType",
            });
    internal_static_google_cloud_managedkafka_v1_AclEntry_descriptor =
        getDescriptor().getMessageTypes().get(20);
    internal_static_google_cloud_managedkafka_v1_AclEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_AclEntry_descriptor,
            new java.lang.String[] {
              "Principal", "PermissionType", "Operation", "Host",
            });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    registry.add(com.google.api.ResourceProto.resource);
    registry.add(com.google.api.ResourceProto.resourceDefinition);
    registry.add(com.google.api.ResourceProto.resourceReference);
    com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(
        descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.api.ResourceProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
