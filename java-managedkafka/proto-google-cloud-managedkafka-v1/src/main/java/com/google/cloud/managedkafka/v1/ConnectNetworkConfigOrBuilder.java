/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/managedkafka/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.managedkafka.v1;

public interface ConnectNetworkConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.managedkafka.v1.ConnectNetworkConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. VPC subnet to make available to the Kafka Connect cluster.
   * Structured like:
   * projects/{project}/regions/{region}/subnetworks/{subnet_id}
   *
   * It is used to create a Private Service Connect (PSC) interface for the
   * Kafka Connect workers. It must be located in the same region as the
   * Kafka Connect cluster.
   *
   * The CIDR range of the subnet must be within the IPv4 address ranges for
   * private networks, as specified in RFC 1918. The primary subnet CIDR range
   * must have a minimum size of /22 (1024 addresses).
   * </pre>
   *
   * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The primarySubnet.
   */
  java.lang.String getPrimarySubnet();

  /**
   *
   *
   * <pre>
   * Required. VPC subnet to make available to the Kafka Connect cluster.
   * Structured like:
   * projects/{project}/regions/{region}/subnetworks/{subnet_id}
   *
   * It is used to create a Private Service Connect (PSC) interface for the
   * Kafka Connect workers. It must be located in the same region as the
   * Kafka Connect cluster.
   *
   * The CIDR range of the subnet must be within the IPv4 address ranges for
   * private networks, as specified in RFC 1918. The primary subnet CIDR range
   * must have a minimum size of /22 (1024 addresses).
   * </pre>
   *
   * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for primarySubnet.
   */
  com.google.protobuf.ByteString getPrimarySubnetBytes();

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the additionalSubnets.
   */
  java.util.List<java.lang.String> getAdditionalSubnetsList();

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of additionalSubnets.
   */
  int getAdditionalSubnetsCount();

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The additionalSubnets at the given index.
   */
  java.lang.String getAdditionalSubnets(int index);

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the additionalSubnets at the given index.
   */
  com.google.protobuf.ByteString getAdditionalSubnetsBytes(int index);

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the dnsDomainNames.
   */
  java.util.List<java.lang.String> getDnsDomainNamesList();

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of dnsDomainNames.
   */
  int getDnsDomainNamesCount();

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The dnsDomainNames at the given index.
   */
  java.lang.String getDnsDomainNames(int index);

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the dnsDomainNames at the given index.
   */
  com.google.protobuf.ByteString getDnsDomainNamesBytes(int index);
}
