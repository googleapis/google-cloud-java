/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/managedkafka/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.managedkafka.v1;

/**
 *
 *
 * <pre>
 * A Kafka consumer group in a given cluster.
 * </pre>
 *
 * Protobuf type {@code google.cloud.managedkafka.v1.ConsumerGroup}
 */
public final class ConsumerGroup extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.managedkafka.v1.ConsumerGroup)
    ConsumerGroupOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ConsumerGroup.newBuilder() to construct.
  private ConsumerGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ConsumerGroup() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ConsumerGroup();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.managedkafka.v1.ResourcesProto
        .internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 2:
        return internalGetTopics();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.managedkafka.v1.ResourcesProto
        .internal_static_google_cloud_managedkafka_v1_ConsumerGroup_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.managedkafka.v1.ConsumerGroup.class,
            com.google.cloud.managedkafka.v1.ConsumerGroup.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Identifier. The name of the consumer group. The `consumer_group` segment is
   * used when connecting directly to the cluster. Structured like:
   * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Identifier. The name of the consumer group. The `consumer_group` segment is
   * used when connecting directly to the cluster. Structured like:
   * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOPICS_FIELD_NUMBER = 2;

  private static final class TopicsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
                    newDefaultInstance(
                        com.google.cloud.managedkafka.v1.ResourcesProto
                            .internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        com.google.cloud.managedkafka.v1.ConsumerTopicMetadata
                            .getDefaultInstance());
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
          java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
      topics_;

  private com.google.protobuf.MapField<
          java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
      internalGetTopics() {
    if (topics_ == null) {
      return com.google.protobuf.MapField.emptyMapField(TopicsDefaultEntryHolder.defaultEntry);
    }
    return topics_;
  }

  public int getTopicsCount() {
    return internalGetTopics().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Metadata for this consumer group for all topics it has metadata
   * for. The key of the map is a topic name, structured like:
   * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public boolean containsTopics(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetTopics().getMap().containsKey(key);
  }
  /** Use {@link #getTopicsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
      getTopics() {
    return getTopicsMap();
  }
  /**
   *
   *
   * <pre>
   * Optional. Metadata for this consumer group for all topics it has metadata
   * for. The key of the map is a topic name, structured like:
   * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
      getTopicsMap() {
    return internalGetTopics().getMap();
  }
  /**
   *
   *
   * <pre>
   * Optional. Metadata for this consumer group for all topics it has metadata
   * for. The key of the map is a topic name, structured like:
   * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public /* nullable */ com.google.cloud.managedkafka.v1.ConsumerTopicMetadata getTopicsOrDefault(
      java.lang.String key,
      /* nullable */
      com.google.cloud.managedkafka.v1.ConsumerTopicMetadata defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata> map =
        internalGetTopics().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * Optional. Metadata for this consumer group for all topics it has metadata
   * for. The key of the map is a topic name, structured like:
   * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.managedkafka.v1.ConsumerTopicMetadata getTopicsOrThrow(
      java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata> map =
        internalGetTopics().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetTopics(), TopicsDefaultEntryHolder.defaultEntry, 2);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (java.util.Map.Entry<
            java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
        entry : internalGetTopics().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
          topics__ =
              TopicsDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, topics__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.managedkafka.v1.ConsumerGroup)) {
      return super.equals(obj);
    }
    com.google.cloud.managedkafka.v1.ConsumerGroup other =
        (com.google.cloud.managedkafka.v1.ConsumerGroup) obj;

    if (!getName().equals(other.getName())) return false;
    if (!internalGetTopics().equals(other.internalGetTopics())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (!internalGetTopics().getMap().isEmpty()) {
      hash = (37 * hash) + TOPICS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTopics().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.managedkafka.v1.ConsumerGroup prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A Kafka consumer group in a given cluster.
   * </pre>
   *
   * Protobuf type {@code google.cloud.managedkafka.v1.ConsumerGroup}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.managedkafka.v1.ConsumerGroup)
      com.google.cloud.managedkafka.v1.ConsumerGroupOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetTopics();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableTopics();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_ConsumerGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.managedkafka.v1.ConsumerGroup.class,
              com.google.cloud.managedkafka.v1.ConsumerGroup.Builder.class);
    }

    // Construct using com.google.cloud.managedkafka.v1.ConsumerGroup.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      internalGetMutableTopics().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConsumerGroup getDefaultInstanceForType() {
      return com.google.cloud.managedkafka.v1.ConsumerGroup.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConsumerGroup build() {
      com.google.cloud.managedkafka.v1.ConsumerGroup result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConsumerGroup buildPartial() {
      com.google.cloud.managedkafka.v1.ConsumerGroup result =
          new com.google.cloud.managedkafka.v1.ConsumerGroup(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.managedkafka.v1.ConsumerGroup result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.topics_ = internalGetTopics().build(TopicsDefaultEntryHolder.defaultEntry);
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.managedkafka.v1.ConsumerGroup) {
        return mergeFrom((com.google.cloud.managedkafka.v1.ConsumerGroup) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.managedkafka.v1.ConsumerGroup other) {
      if (other == com.google.cloud.managedkafka.v1.ConsumerGroup.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      internalGetMutableTopics().mergeFrom(other.internalGetTopics());
      bitField0_ |= 0x00000002;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
                    topics__ =
                        input.readMessage(
                            TopicsDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableTopics()
                    .ensureBuilderMap()
                    .put(topics__.getKey(), topics__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Identifier. The name of the consumer group. The `consumer_group` segment is
     * used when connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Identifier. The name of the consumer group. The `consumer_group` segment is
     * used when connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Identifier. The name of the consumer group. The `consumer_group` segment is
     * used when connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Identifier. The name of the consumer group. The `consumer_group` segment is
     * used when connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Identifier. The name of the consumer group. The `consumer_group` segment is
     * used when connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/consumerGroups/{consumer_group}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private static final class TopicsConverter
        implements com.google.protobuf.MapFieldBuilder.Converter<
            java.lang.String,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata> {
      @java.lang.Override
      public com.google.cloud.managedkafka.v1.ConsumerTopicMetadata build(
          com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder val) {
        if (val instanceof com.google.cloud.managedkafka.v1.ConsumerTopicMetadata) {
          return (com.google.cloud.managedkafka.v1.ConsumerTopicMetadata) val;
        }
        return ((com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<
              java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
          defaultEntry() {
        return TopicsDefaultEntryHolder.defaultEntry;
      }
    };

    private static final TopicsConverter topicsConverter = new TopicsConverter();

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.Builder>
        topics_;

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.Builder>
        internalGetTopics() {
      if (topics_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(topicsConverter);
      }
      return topics_;
    }

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata,
            com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.Builder>
        internalGetMutableTopics() {
      if (topics_ == null) {
        topics_ = new com.google.protobuf.MapFieldBuilder<>(topicsConverter);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return topics_;
    }

    public int getTopicsCount() {
      return internalGetTopics().ensureBuilderMap().size();
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public boolean containsTopics(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetTopics().ensureBuilderMap().containsKey(key);
    }
    /** Use {@link #getTopicsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
        getTopics() {
      return getTopicsMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
        getTopicsMap() {
      return internalGetTopics().getImmutableMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public /* nullable */ com.google.cloud.managedkafka.v1.ConsumerTopicMetadata getTopicsOrDefault(
        java.lang.String key,
        /* nullable */
        com.google.cloud.managedkafka.v1.ConsumerTopicMetadata defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder>
          map = internalGetMutableTopics().ensureBuilderMap();
      return map.containsKey(key) ? topicsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConsumerTopicMetadata getTopicsOrThrow(
        java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder>
          map = internalGetMutableTopics().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return topicsConverter.build(map.get(key));
    }

    public Builder clearTopics() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableTopics().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeTopics(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableTopics().ensureBuilderMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
        getMutableTopics() {
      bitField0_ |= 0x00000002;
      return internalGetMutableTopics().ensureMessageMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder putTopics(
        java.lang.String key, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableTopics().ensureBuilderMap().put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder putAllTopics(
        java.util.Map<java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
            values) {
      for (java.util.Map.Entry<
              java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadata>
          e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableTopics().ensureBuilderMap().putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Metadata for this consumer group for all topics it has metadata
     * for. The key of the map is a topic name, structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.managedkafka.v1.ConsumerTopicMetadata&gt; topics = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.Builder putTopicsBuilderIfAbsent(
        java.lang.String key) {
      java.util.Map<
              java.lang.String, com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder>
          builderMap = internalGetMutableTopics().ensureBuilderMap();
      com.google.cloud.managedkafka.v1.ConsumerTopicMetadataOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof com.google.cloud.managedkafka.v1.ConsumerTopicMetadata) {
        entry = ((com.google.cloud.managedkafka.v1.ConsumerTopicMetadata) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (com.google.cloud.managedkafka.v1.ConsumerTopicMetadata.Builder) entry;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.managedkafka.v1.ConsumerGroup)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.managedkafka.v1.ConsumerGroup)
  private static final com.google.cloud.managedkafka.v1.ConsumerGroup DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.managedkafka.v1.ConsumerGroup();
  }

  public static com.google.cloud.managedkafka.v1.ConsumerGroup getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConsumerGroup> PARSER =
      new com.google.protobuf.AbstractParser<ConsumerGroup>() {
        @java.lang.Override
        public ConsumerGroup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ConsumerGroup> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConsumerGroup> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.managedkafka.v1.ConsumerGroup getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
