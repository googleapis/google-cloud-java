/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/managedkafka/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.managedkafka.v1;

/**
 *
 *
 * <pre>
 * The configuration of a Virtual Private Cloud (VPC) network that can access
 * the Kafka Connect cluster.
 * </pre>
 *
 * Protobuf type {@code google.cloud.managedkafka.v1.ConnectNetworkConfig}
 */
public final class ConnectNetworkConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.managedkafka.v1.ConnectNetworkConfig)
    ConnectNetworkConfigOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use ConnectNetworkConfig.newBuilder() to construct.
  private ConnectNetworkConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ConnectNetworkConfig() {
    primarySubnet_ = "";
    additionalSubnets_ = com.google.protobuf.LazyStringArrayList.emptyList();
    dnsDomainNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ConnectNetworkConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.managedkafka.v1.ResourcesProto
        .internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.managedkafka.v1.ResourcesProto
        .internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.managedkafka.v1.ConnectNetworkConfig.class,
            com.google.cloud.managedkafka.v1.ConnectNetworkConfig.Builder.class);
  }

  public static final int PRIMARY_SUBNET_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object primarySubnet_ = "";

  /**
   *
   *
   * <pre>
   * Required. VPC subnet to make available to the Kafka Connect cluster.
   * Structured like:
   * projects/{project}/regions/{region}/subnetworks/{subnet_id}
   *
   * It is used to create a Private Service Connect (PSC) interface for the
   * Kafka Connect workers. It must be located in the same region as the
   * Kafka Connect cluster.
   *
   * The CIDR range of the subnet must be within the IPv4 address ranges for
   * private networks, as specified in RFC 1918. The primary subnet CIDR range
   * must have a minimum size of /22 (1024 addresses).
   * </pre>
   *
   * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The primarySubnet.
   */
  @java.lang.Override
  public java.lang.String getPrimarySubnet() {
    java.lang.Object ref = primarySubnet_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      primarySubnet_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. VPC subnet to make available to the Kafka Connect cluster.
   * Structured like:
   * projects/{project}/regions/{region}/subnetworks/{subnet_id}
   *
   * It is used to create a Private Service Connect (PSC) interface for the
   * Kafka Connect workers. It must be located in the same region as the
   * Kafka Connect cluster.
   *
   * The CIDR range of the subnet must be within the IPv4 address ranges for
   * private networks, as specified in RFC 1918. The primary subnet CIDR range
   * must have a minimum size of /22 (1024 addresses).
   * </pre>
   *
   * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for primarySubnet.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPrimarySubnetBytes() {
    java.lang.Object ref = primarySubnet_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      primarySubnet_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADDITIONAL_SUBNETS_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList additionalSubnets_ =
      com.google.protobuf.LazyStringArrayList.emptyList();

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the additionalSubnets.
   */
  public com.google.protobuf.ProtocolStringList getAdditionalSubnetsList() {
    return additionalSubnets_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of additionalSubnets.
   */
  public int getAdditionalSubnetsCount() {
    return additionalSubnets_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The additionalSubnets at the given index.
   */
  public java.lang.String getAdditionalSubnets(int index) {
    return additionalSubnets_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. Additional subnets may be specified. They may be in another
   * region, but must be in the same VPC network. The Connect workers can
   * communicate with network endpoints in either the primary or additional
   * subnets.
   * </pre>
   *
   * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the additionalSubnets at the given index.
   */
  public com.google.protobuf.ByteString getAdditionalSubnetsBytes(int index) {
    return additionalSubnets_.getByteString(index);
  }

  public static final int DNS_DOMAIN_NAMES_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList dnsDomainNames_ =
      com.google.protobuf.LazyStringArrayList.emptyList();

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the dnsDomainNames.
   */
  public com.google.protobuf.ProtocolStringList getDnsDomainNamesList() {
    return dnsDomainNames_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of dnsDomainNames.
   */
  public int getDnsDomainNamesCount() {
    return dnsDomainNames_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The dnsDomainNames at the given index.
   */
  public java.lang.String getDnsDomainNames(int index) {
    return dnsDomainNames_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. Additional DNS domain names from the subnet's network to be made
   * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
   * add the bootstrap address's dns domain name of the target cluster to make
   * it visible to the connector. For example:
   * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
   * </pre>
   *
   * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the dnsDomainNames at the given index.
   */
  public com.google.protobuf.ByteString getDnsDomainNamesBytes(int index) {
    return dnsDomainNames_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < dnsDomainNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dnsDomainNames_.getRaw(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(primarySubnet_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, primarySubnet_);
    }
    for (int i = 0; i < additionalSubnets_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, additionalSubnets_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < dnsDomainNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(dnsDomainNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDnsDomainNamesList().size();
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(primarySubnet_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, primarySubnet_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < additionalSubnets_.size(); i++) {
        dataSize += computeStringSizeNoTag(additionalSubnets_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAdditionalSubnetsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.managedkafka.v1.ConnectNetworkConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.managedkafka.v1.ConnectNetworkConfig other =
        (com.google.cloud.managedkafka.v1.ConnectNetworkConfig) obj;

    if (!getPrimarySubnet().equals(other.getPrimarySubnet())) return false;
    if (!getAdditionalSubnetsList().equals(other.getAdditionalSubnetsList())) return false;
    if (!getDnsDomainNamesList().equals(other.getDnsDomainNamesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PRIMARY_SUBNET_FIELD_NUMBER;
    hash = (53 * hash) + getPrimarySubnet().hashCode();
    if (getAdditionalSubnetsCount() > 0) {
      hash = (37 * hash) + ADDITIONAL_SUBNETS_FIELD_NUMBER;
      hash = (53 * hash) + getAdditionalSubnetsList().hashCode();
    }
    if (getDnsDomainNamesCount() > 0) {
      hash = (37 * hash) + DNS_DOMAIN_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getDnsDomainNamesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.managedkafka.v1.ConnectNetworkConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The configuration of a Virtual Private Cloud (VPC) network that can access
   * the Kafka Connect cluster.
   * </pre>
   *
   * Protobuf type {@code google.cloud.managedkafka.v1.ConnectNetworkConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.managedkafka.v1.ConnectNetworkConfig)
      com.google.cloud.managedkafka.v1.ConnectNetworkConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.managedkafka.v1.ConnectNetworkConfig.class,
              com.google.cloud.managedkafka.v1.ConnectNetworkConfig.Builder.class);
    }

    // Construct using com.google.cloud.managedkafka.v1.ConnectNetworkConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      primarySubnet_ = "";
      additionalSubnets_ = com.google.protobuf.LazyStringArrayList.emptyList();
      dnsDomainNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_ConnectNetworkConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConnectNetworkConfig getDefaultInstanceForType() {
      return com.google.cloud.managedkafka.v1.ConnectNetworkConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConnectNetworkConfig build() {
      com.google.cloud.managedkafka.v1.ConnectNetworkConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.ConnectNetworkConfig buildPartial() {
      com.google.cloud.managedkafka.v1.ConnectNetworkConfig result =
          new com.google.cloud.managedkafka.v1.ConnectNetworkConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.managedkafka.v1.ConnectNetworkConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.primarySubnet_ = primarySubnet_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        additionalSubnets_.makeImmutable();
        result.additionalSubnets_ = additionalSubnets_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        dnsDomainNames_.makeImmutable();
        result.dnsDomainNames_ = dnsDomainNames_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.managedkafka.v1.ConnectNetworkConfig) {
        return mergeFrom((com.google.cloud.managedkafka.v1.ConnectNetworkConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.managedkafka.v1.ConnectNetworkConfig other) {
      if (other == com.google.cloud.managedkafka.v1.ConnectNetworkConfig.getDefaultInstance())
        return this;
      if (!other.getPrimarySubnet().isEmpty()) {
        primarySubnet_ = other.primarySubnet_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.additionalSubnets_.isEmpty()) {
        if (additionalSubnets_.isEmpty()) {
          additionalSubnets_ = other.additionalSubnets_;
          bitField0_ |= 0x00000002;
        } else {
          ensureAdditionalSubnetsIsMutable();
          additionalSubnets_.addAll(other.additionalSubnets_);
        }
        onChanged();
      }
      if (!other.dnsDomainNames_.isEmpty()) {
        if (dnsDomainNames_.isEmpty()) {
          dnsDomainNames_ = other.dnsDomainNames_;
          bitField0_ |= 0x00000004;
        } else {
          ensureDnsDomainNamesIsMutable();
          dnsDomainNames_.addAll(other.dnsDomainNames_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDnsDomainNamesIsMutable();
                dnsDomainNames_.add(s);
                break;
              } // case 18
            case 26:
              {
                primarySubnet_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 26
            case 34:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureAdditionalSubnetsIsMutable();
                additionalSubnets_.add(s);
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object primarySubnet_ = "";

    /**
     *
     *
     * <pre>
     * Required. VPC subnet to make available to the Kafka Connect cluster.
     * Structured like:
     * projects/{project}/regions/{region}/subnetworks/{subnet_id}
     *
     * It is used to create a Private Service Connect (PSC) interface for the
     * Kafka Connect workers. It must be located in the same region as the
     * Kafka Connect cluster.
     *
     * The CIDR range of the subnet must be within the IPv4 address ranges for
     * private networks, as specified in RFC 1918. The primary subnet CIDR range
     * must have a minimum size of /22 (1024 addresses).
     * </pre>
     *
     * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The primarySubnet.
     */
    public java.lang.String getPrimarySubnet() {
      java.lang.Object ref = primarySubnet_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        primarySubnet_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. VPC subnet to make available to the Kafka Connect cluster.
     * Structured like:
     * projects/{project}/regions/{region}/subnetworks/{subnet_id}
     *
     * It is used to create a Private Service Connect (PSC) interface for the
     * Kafka Connect workers. It must be located in the same region as the
     * Kafka Connect cluster.
     *
     * The CIDR range of the subnet must be within the IPv4 address ranges for
     * private networks, as specified in RFC 1918. The primary subnet CIDR range
     * must have a minimum size of /22 (1024 addresses).
     * </pre>
     *
     * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for primarySubnet.
     */
    public com.google.protobuf.ByteString getPrimarySubnetBytes() {
      java.lang.Object ref = primarySubnet_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        primarySubnet_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. VPC subnet to make available to the Kafka Connect cluster.
     * Structured like:
     * projects/{project}/regions/{region}/subnetworks/{subnet_id}
     *
     * It is used to create a Private Service Connect (PSC) interface for the
     * Kafka Connect workers. It must be located in the same region as the
     * Kafka Connect cluster.
     *
     * The CIDR range of the subnet must be within the IPv4 address ranges for
     * private networks, as specified in RFC 1918. The primary subnet CIDR range
     * must have a minimum size of /22 (1024 addresses).
     * </pre>
     *
     * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The primarySubnet to set.
     * @return This builder for chaining.
     */
    public Builder setPrimarySubnet(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      primarySubnet_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. VPC subnet to make available to the Kafka Connect cluster.
     * Structured like:
     * projects/{project}/regions/{region}/subnetworks/{subnet_id}
     *
     * It is used to create a Private Service Connect (PSC) interface for the
     * Kafka Connect workers. It must be located in the same region as the
     * Kafka Connect cluster.
     *
     * The CIDR range of the subnet must be within the IPv4 address ranges for
     * private networks, as specified in RFC 1918. The primary subnet CIDR range
     * must have a minimum size of /22 (1024 addresses).
     * </pre>
     *
     * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPrimarySubnet() {
      primarySubnet_ = getDefaultInstance().getPrimarySubnet();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. VPC subnet to make available to the Kafka Connect cluster.
     * Structured like:
     * projects/{project}/regions/{region}/subnetworks/{subnet_id}
     *
     * It is used to create a Private Service Connect (PSC) interface for the
     * Kafka Connect workers. It must be located in the same region as the
     * Kafka Connect cluster.
     *
     * The CIDR range of the subnet must be within the IPv4 address ranges for
     * private networks, as specified in RFC 1918. The primary subnet CIDR range
     * must have a minimum size of /22 (1024 addresses).
     * </pre>
     *
     * <code>string primary_subnet = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for primarySubnet to set.
     * @return This builder for chaining.
     */
    public Builder setPrimarySubnetBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      primarySubnet_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList additionalSubnets_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureAdditionalSubnetsIsMutable() {
      if (!additionalSubnets_.isModifiable()) {
        additionalSubnets_ = new com.google.protobuf.LazyStringArrayList(additionalSubnets_);
      }
      bitField0_ |= 0x00000002;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the additionalSubnets.
     */
    public com.google.protobuf.ProtocolStringList getAdditionalSubnetsList() {
      additionalSubnets_.makeImmutable();
      return additionalSubnets_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The count of additionalSubnets.
     */
    public int getAdditionalSubnetsCount() {
      return additionalSubnets_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the element to return.
     * @return The additionalSubnets at the given index.
     */
    public java.lang.String getAdditionalSubnets(int index) {
      return additionalSubnets_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the additionalSubnets at the given index.
     */
    public com.google.protobuf.ByteString getAdditionalSubnetsBytes(int index) {
      return additionalSubnets_.getByteString(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The additionalSubnets to set.
     * @return This builder for chaining.
     */
    public Builder setAdditionalSubnets(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAdditionalSubnetsIsMutable();
      additionalSubnets_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The additionalSubnets to add.
     * @return This builder for chaining.
     */
    public Builder addAdditionalSubnets(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAdditionalSubnetsIsMutable();
      additionalSubnets_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The additionalSubnets to add.
     * @return This builder for chaining.
     */
    public Builder addAllAdditionalSubnets(java.lang.Iterable<java.lang.String> values) {
      ensureAdditionalSubnetsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, additionalSubnets_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAdditionalSubnets() {
      additionalSubnets_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      ;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional subnets may be specified. They may be in another
     * region, but must be in the same VPC network. The Connect workers can
     * communicate with network endpoints in either the primary or additional
     * subnets.
     * </pre>
     *
     * <code>repeated string additional_subnets = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The bytes of the additionalSubnets to add.
     * @return This builder for chaining.
     */
    public Builder addAdditionalSubnetsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureAdditionalSubnetsIsMutable();
      additionalSubnets_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList dnsDomainNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureDnsDomainNamesIsMutable() {
      if (!dnsDomainNames_.isModifiable()) {
        dnsDomainNames_ = new com.google.protobuf.LazyStringArrayList(dnsDomainNames_);
      }
      bitField0_ |= 0x00000004;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the dnsDomainNames.
     */
    public com.google.protobuf.ProtocolStringList getDnsDomainNamesList() {
      dnsDomainNames_.makeImmutable();
      return dnsDomainNames_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of dnsDomainNames.
     */
    public int getDnsDomainNamesCount() {
      return dnsDomainNames_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The dnsDomainNames at the given index.
     */
    public java.lang.String getDnsDomainNames(int index) {
      return dnsDomainNames_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the dnsDomainNames at the given index.
     */
    public com.google.protobuf.ByteString getDnsDomainNamesBytes(int index) {
      return dnsDomainNames_.getByteString(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index to set the value at.
     * @param value The dnsDomainNames to set.
     * @return This builder for chaining.
     */
    public Builder setDnsDomainNames(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDnsDomainNamesIsMutable();
      dnsDomainNames_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The dnsDomainNames to add.
     * @return This builder for chaining.
     */
    public Builder addDnsDomainNames(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDnsDomainNamesIsMutable();
      dnsDomainNames_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param values The dnsDomainNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllDnsDomainNames(java.lang.Iterable<java.lang.String> values) {
      ensureDnsDomainNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, dnsDomainNames_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDnsDomainNames() {
      dnsDomainNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      ;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Additional DNS domain names from the subnet's network to be made
     * visible to the Connect Cluster. When using MirrorMaker2, it's necessary to
     * add the bootstrap address's dns domain name of the target cluster to make
     * it visible to the connector. For example:
     * my-kafka-cluster.us-central1.managedkafka.my-project.cloud.goog
     * </pre>
     *
     * <code>repeated string dns_domain_names = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes of the dnsDomainNames to add.
     * @return This builder for chaining.
     */
    public Builder addDnsDomainNamesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureDnsDomainNamesIsMutable();
      dnsDomainNames_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.managedkafka.v1.ConnectNetworkConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.managedkafka.v1.ConnectNetworkConfig)
  private static final com.google.cloud.managedkafka.v1.ConnectNetworkConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.managedkafka.v1.ConnectNetworkConfig();
  }

  public static com.google.cloud.managedkafka.v1.ConnectNetworkConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConnectNetworkConfig> PARSER =
      new com.google.protobuf.AbstractParser<ConnectNetworkConfig>() {
        @java.lang.Override
        public ConnectNetworkConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ConnectNetworkConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConnectNetworkConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.managedkafka.v1.ConnectNetworkConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
