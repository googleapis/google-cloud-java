/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/managedkafka/v1/resources.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.managedkafka.v1;

/**
 *
 *
 * <pre>
 * A Kafka Connect connector in a given ConnectCluster.
 * </pre>
 *
 * Protobuf type {@code google.cloud.managedkafka.v1.Connector}
 */
public final class Connector extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.managedkafka.v1.Connector)
    ConnectorOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use Connector.newBuilder() to construct.
  private Connector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Connector() {
    name_ = "";
    state_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Connector();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.managedkafka.v1.ResourcesProto
        .internal_static_google_cloud_managedkafka_v1_Connector_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 2:
        return internalGetConfigs();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.managedkafka.v1.ResourcesProto
        .internal_static_google_cloud_managedkafka_v1_Connector_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.managedkafka.v1.Connector.class,
            com.google.cloud.managedkafka.v1.Connector.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The state of the connector.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.managedkafka.v1.Connector.State}
   */
  public enum State implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * A state was not specified.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The connector is not assigned to any tasks, usually transient.
     * </pre>
     *
     * <code>UNASSIGNED = 1;</code>
     */
    UNASSIGNED(1),
    /**
     *
     *
     * <pre>
     * The connector is running.
     * </pre>
     *
     * <code>RUNNING = 2;</code>
     */
    RUNNING(2),
    /**
     *
     *
     * <pre>
     * The connector has been paused.
     * </pre>
     *
     * <code>PAUSED = 3;</code>
     */
    PAUSED(3),
    /**
     *
     *
     * <pre>
     * The connector has failed. See logs for why.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    FAILED(4),
    /**
     *
     *
     * <pre>
     * The connector is restarting.
     * </pre>
     *
     * <code>RESTARTING = 5;</code>
     */
    RESTARTING(5),
    /**
     *
     *
     * <pre>
     * The connector has been stopped.
     * </pre>
     *
     * <code>STOPPED = 6;</code>
     */
    STOPPED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * A state was not specified.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * The connector is not assigned to any tasks, usually transient.
     * </pre>
     *
     * <code>UNASSIGNED = 1;</code>
     */
    public static final int UNASSIGNED_VALUE = 1;

    /**
     *
     *
     * <pre>
     * The connector is running.
     * </pre>
     *
     * <code>RUNNING = 2;</code>
     */
    public static final int RUNNING_VALUE = 2;

    /**
     *
     *
     * <pre>
     * The connector has been paused.
     * </pre>
     *
     * <code>PAUSED = 3;</code>
     */
    public static final int PAUSED_VALUE = 3;

    /**
     *
     *
     * <pre>
     * The connector has failed. See logs for why.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    public static final int FAILED_VALUE = 4;

    /**
     *
     *
     * <pre>
     * The connector is restarting.
     * </pre>
     *
     * <code>RESTARTING = 5;</code>
     */
    public static final int RESTARTING_VALUE = 5;

    /**
     *
     *
     * <pre>
     * The connector has been stopped.
     * </pre>
     *
     * <code>STOPPED = 6;</code>
     */
    public static final int STOPPED_VALUE = 6;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0:
          return STATE_UNSPECIFIED;
        case 1:
          return UNASSIGNED;
        case 2:
          return RUNNING;
        case 3:
          return PAUSED;
        case 4:
          return FAILED;
        case 5:
          return RESTARTING;
        case 6:
          return STOPPED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<State> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<State>() {
          public State findValueByNumber(int number) {
            return State.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.managedkafka.v1.Connector.getDescriptor().getEnumTypes().get(0);
    }

    private static final State[] VALUES = values();

    public static State valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.managedkafka.v1.Connector.State)
  }

  private int restartPolicyCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object restartPolicy_;

  public enum RestartPolicyCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TASK_RESTART_POLICY(4),
    RESTARTPOLICY_NOT_SET(0);
    private final int value;

    private RestartPolicyCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RestartPolicyCase valueOf(int value) {
      return forNumber(value);
    }

    public static RestartPolicyCase forNumber(int value) {
      switch (value) {
        case 4:
          return TASK_RESTART_POLICY;
        case 0:
          return RESTARTPOLICY_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public RestartPolicyCase getRestartPolicyCase() {
    return RestartPolicyCase.forNumber(restartPolicyCase_);
  }

  public static final int TASK_RESTART_POLICY_FIELD_NUMBER = 4;

  /**
   *
   *
   * <pre>
   * Optional. Restarts the individual tasks of a Connector.
   * </pre>
   *
   * <code>
   * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the taskRestartPolicy field is set.
   */
  @java.lang.Override
  public boolean hasTaskRestartPolicy() {
    return restartPolicyCase_ == 4;
  }

  /**
   *
   *
   * <pre>
   * Optional. Restarts the individual tasks of a Connector.
   * </pre>
   *
   * <code>
   * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The taskRestartPolicy.
   */
  @java.lang.Override
  public com.google.cloud.managedkafka.v1.TaskRetryPolicy getTaskRestartPolicy() {
    if (restartPolicyCase_ == 4) {
      return (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_;
    }
    return com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Optional. Restarts the individual tasks of a Connector.
   * </pre>
   *
   * <code>
   * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.managedkafka.v1.TaskRetryPolicyOrBuilder getTaskRestartPolicyOrBuilder() {
    if (restartPolicyCase_ == 4) {
      return (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_;
    }
    return com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance();
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";

  /**
   *
   *
   * <pre>
   * Identifier. The name of the connector.
   * Structured like:
   * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Identifier. The name of the connector.
   * Structured like:
   * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONFIGS_FIELD_NUMBER = 2;

  private static final class ConfigsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            com.google.cloud.managedkafka.v1.ResourcesProto
                .internal_static_google_cloud_managedkafka_v1_Connector_ConfigsEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<java.lang.String, java.lang.String> configs_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetConfigs() {
    if (configs_ == null) {
      return com.google.protobuf.MapField.emptyMapField(ConfigsDefaultEntryHolder.defaultEntry);
    }
    return configs_;
  }

  public int getConfigsCount() {
    return internalGetConfigs().getMap().size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Connector config as keys/values.
   * The keys of the map are connector property names, for example:
   * `connector.class`, `tasks.max`, `key.converter`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public boolean containsConfigs(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetConfigs().getMap().containsKey(key);
  }

  /** Use {@link #getConfigsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getConfigs() {
    return getConfigsMap();
  }

  /**
   *
   *
   * <pre>
   * Optional. Connector config as keys/values.
   * The keys of the map are connector property names, for example:
   * `connector.class`, `tasks.max`, `key.converter`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getConfigsMap() {
    return internalGetConfigs().getMap();
  }

  /**
   *
   *
   * <pre>
   * Optional. Connector config as keys/values.
   * The keys of the map are connector property names, for example:
   * `connector.class`, `tasks.max`, `key.converter`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public /* nullable */ java.lang.String getConfigsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigs().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }

  /**
   *
   *
   * <pre>
   * Optional. Connector config as keys/values.
   * The keys of the map are connector property names, for example:
   * `connector.class`, `tasks.max`, `key.converter`.
   * </pre>
   *
   * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public java.lang.String getConfigsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigs().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int STATE_FIELD_NUMBER = 3;
  private int state_ = 0;

  /**
   *
   *
   * <pre>
   * Output only. The current state of the connector.
   * </pre>
   *
   * <code>
   * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }

  /**
   *
   *
   * <pre>
   * Output only. The current state of the connector.
   * </pre>
   *
   * <code>
   * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  @java.lang.Override
  public com.google.cloud.managedkafka.v1.Connector.State getState() {
    com.google.cloud.managedkafka.v1.Connector.State result =
        com.google.cloud.managedkafka.v1.Connector.State.forNumber(state_);
    return result == null ? com.google.cloud.managedkafka.v1.Connector.State.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetConfigs(), ConfigsDefaultEntryHolder.defaultEntry, 2);
    if (state_ != com.google.cloud.managedkafka.v1.Connector.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, state_);
    }
    if (restartPolicyCase_ == 4) {
      output.writeMessage(4, (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetConfigs().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> configs__ =
          ConfigsDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, configs__);
    }
    if (state_ != com.google.cloud.managedkafka.v1.Connector.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, state_);
    }
    if (restartPolicyCase_ == 4) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              4, (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.managedkafka.v1.Connector)) {
      return super.equals(obj);
    }
    com.google.cloud.managedkafka.v1.Connector other =
        (com.google.cloud.managedkafka.v1.Connector) obj;

    if (!getName().equals(other.getName())) return false;
    if (!internalGetConfigs().equals(other.internalGetConfigs())) return false;
    if (state_ != other.state_) return false;
    if (!getRestartPolicyCase().equals(other.getRestartPolicyCase())) return false;
    switch (restartPolicyCase_) {
      case 4:
        if (!getTaskRestartPolicy().equals(other.getTaskRestartPolicy())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (!internalGetConfigs().getMap().isEmpty()) {
      hash = (37 * hash) + CONFIGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetConfigs().hashCode();
    }
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    switch (restartPolicyCase_) {
      case 4:
        hash = (37 * hash) + TASK_RESTART_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getTaskRestartPolicy().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.managedkafka.v1.Connector parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.managedkafka.v1.Connector prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * A Kafka Connect connector in a given ConnectCluster.
   * </pre>
   *
   * Protobuf type {@code google.cloud.managedkafka.v1.Connector}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.managedkafka.v1.Connector)
      com.google.cloud.managedkafka.v1.ConnectorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_Connector_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetConfigs();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableConfigs();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_Connector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.managedkafka.v1.Connector.class,
              com.google.cloud.managedkafka.v1.Connector.Builder.class);
    }

    // Construct using com.google.cloud.managedkafka.v1.Connector.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (taskRestartPolicyBuilder_ != null) {
        taskRestartPolicyBuilder_.clear();
      }
      name_ = "";
      internalGetMutableConfigs().clear();
      state_ = 0;
      restartPolicyCase_ = 0;
      restartPolicy_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.managedkafka.v1.ResourcesProto
          .internal_static_google_cloud_managedkafka_v1_Connector_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.Connector getDefaultInstanceForType() {
      return com.google.cloud.managedkafka.v1.Connector.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.Connector build() {
      com.google.cloud.managedkafka.v1.Connector result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.managedkafka.v1.Connector buildPartial() {
      com.google.cloud.managedkafka.v1.Connector result =
          new com.google.cloud.managedkafka.v1.Connector(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.managedkafka.v1.Connector result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.configs_ = internalGetConfigs();
        result.configs_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.state_ = state_;
      }
    }

    private void buildPartialOneofs(com.google.cloud.managedkafka.v1.Connector result) {
      result.restartPolicyCase_ = restartPolicyCase_;
      result.restartPolicy_ = this.restartPolicy_;
      if (restartPolicyCase_ == 4 && taskRestartPolicyBuilder_ != null) {
        result.restartPolicy_ = taskRestartPolicyBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.managedkafka.v1.Connector) {
        return mergeFrom((com.google.cloud.managedkafka.v1.Connector) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.managedkafka.v1.Connector other) {
      if (other == com.google.cloud.managedkafka.v1.Connector.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      internalGetMutableConfigs().mergeFrom(other.internalGetConfigs());
      bitField0_ |= 0x00000004;
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      switch (other.getRestartPolicyCase()) {
        case TASK_RESTART_POLICY:
          {
            mergeTaskRestartPolicy(other.getTaskRestartPolicy());
            break;
          }
        case RESTARTPOLICY_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 10
            case 18:
              {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String> configs__ =
                    input.readMessage(
                        ConfigsDefaultEntryHolder.defaultEntry.getParserForType(),
                        extensionRegistry);
                internalGetMutableConfigs()
                    .getMutableMap()
                    .put(configs__.getKey(), configs__.getValue());
                bitField0_ |= 0x00000004;
                break;
              } // case 18
            case 24:
              {
                state_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 24
            case 34:
              {
                input.readMessage(
                    getTaskRestartPolicyFieldBuilder().getBuilder(), extensionRegistry);
                restartPolicyCase_ = 4;
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int restartPolicyCase_ = 0;
    private java.lang.Object restartPolicy_;

    public RestartPolicyCase getRestartPolicyCase() {
      return RestartPolicyCase.forNumber(restartPolicyCase_);
    }

    public Builder clearRestartPolicy() {
      restartPolicyCase_ = 0;
      restartPolicy_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.managedkafka.v1.TaskRetryPolicy,
            com.google.cloud.managedkafka.v1.TaskRetryPolicy.Builder,
            com.google.cloud.managedkafka.v1.TaskRetryPolicyOrBuilder>
        taskRestartPolicyBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the taskRestartPolicy field is set.
     */
    @java.lang.Override
    public boolean hasTaskRestartPolicy() {
      return restartPolicyCase_ == 4;
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The taskRestartPolicy.
     */
    @java.lang.Override
    public com.google.cloud.managedkafka.v1.TaskRetryPolicy getTaskRestartPolicy() {
      if (taskRestartPolicyBuilder_ == null) {
        if (restartPolicyCase_ == 4) {
          return (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_;
        }
        return com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance();
      } else {
        if (restartPolicyCase_ == 4) {
          return taskRestartPolicyBuilder_.getMessage();
        }
        return com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setTaskRestartPolicy(com.google.cloud.managedkafka.v1.TaskRetryPolicy value) {
      if (taskRestartPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        restartPolicy_ = value;
        onChanged();
      } else {
        taskRestartPolicyBuilder_.setMessage(value);
      }
      restartPolicyCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setTaskRestartPolicy(
        com.google.cloud.managedkafka.v1.TaskRetryPolicy.Builder builderForValue) {
      if (taskRestartPolicyBuilder_ == null) {
        restartPolicy_ = builderForValue.build();
        onChanged();
      } else {
        taskRestartPolicyBuilder_.setMessage(builderForValue.build());
      }
      restartPolicyCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeTaskRestartPolicy(com.google.cloud.managedkafka.v1.TaskRetryPolicy value) {
      if (taskRestartPolicyBuilder_ == null) {
        if (restartPolicyCase_ == 4
            && restartPolicy_
                != com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance()) {
          restartPolicy_ =
              com.google.cloud.managedkafka.v1.TaskRetryPolicy.newBuilder(
                      (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          restartPolicy_ = value;
        }
        onChanged();
      } else {
        if (restartPolicyCase_ == 4) {
          taskRestartPolicyBuilder_.mergeFrom(value);
        } else {
          taskRestartPolicyBuilder_.setMessage(value);
        }
      }
      restartPolicyCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearTaskRestartPolicy() {
      if (taskRestartPolicyBuilder_ == null) {
        if (restartPolicyCase_ == 4) {
          restartPolicyCase_ = 0;
          restartPolicy_ = null;
          onChanged();
        }
      } else {
        if (restartPolicyCase_ == 4) {
          restartPolicyCase_ = 0;
          restartPolicy_ = null;
        }
        taskRestartPolicyBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.managedkafka.v1.TaskRetryPolicy.Builder getTaskRestartPolicyBuilder() {
      return getTaskRestartPolicyFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.managedkafka.v1.TaskRetryPolicyOrBuilder
        getTaskRestartPolicyOrBuilder() {
      if ((restartPolicyCase_ == 4) && (taskRestartPolicyBuilder_ != null)) {
        return taskRestartPolicyBuilder_.getMessageOrBuilder();
      } else {
        if (restartPolicyCase_ == 4) {
          return (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_;
        }
        return com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Restarts the individual tasks of a Connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.TaskRetryPolicy task_restart_policy = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.managedkafka.v1.TaskRetryPolicy,
            com.google.cloud.managedkafka.v1.TaskRetryPolicy.Builder,
            com.google.cloud.managedkafka.v1.TaskRetryPolicyOrBuilder>
        getTaskRestartPolicyFieldBuilder() {
      if (taskRestartPolicyBuilder_ == null) {
        if (!(restartPolicyCase_ == 4)) {
          restartPolicy_ = com.google.cloud.managedkafka.v1.TaskRetryPolicy.getDefaultInstance();
        }
        taskRestartPolicyBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.managedkafka.v1.TaskRetryPolicy,
                com.google.cloud.managedkafka.v1.TaskRetryPolicy.Builder,
                com.google.cloud.managedkafka.v1.TaskRetryPolicyOrBuilder>(
                (com.google.cloud.managedkafka.v1.TaskRetryPolicy) restartPolicy_,
                getParentForChildren(),
                isClean());
        restartPolicy_ = null;
      }
      restartPolicyCase_ = 4;
      onChanged();
      return taskRestartPolicyBuilder_;
    }

    private java.lang.Object name_ = "";

    /**
     *
     *
     * <pre>
     * Identifier. The name of the connector.
     * Structured like:
     * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Identifier. The name of the connector.
     * Structured like:
     * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Identifier. The name of the connector.
     * Structured like:
     * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Identifier. The name of the connector.
     * Structured like:
     * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Identifier. The name of the connector.
     * Structured like:
     * projects/{project}/locations/{location}/connectClusters/{connect_cluster}/connectors/{connector}
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> configs_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetConfigs() {
      if (configs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(ConfigsDefaultEntryHolder.defaultEntry);
      }
      return configs_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableConfigs() {
      if (configs_ == null) {
        configs_ = com.google.protobuf.MapField.newMapField(ConfigsDefaultEntryHolder.defaultEntry);
      }
      if (!configs_.isMutable()) {
        configs_ = configs_.copy();
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return configs_;
    }

    public int getConfigsCount() {
      return internalGetConfigs().getMap().size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public boolean containsConfigs(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetConfigs().getMap().containsKey(key);
    }

    /** Use {@link #getConfigsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getConfigs() {
      return getConfigsMap();
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getConfigsMap() {
      return internalGetConfigs().getMap();
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public /* nullable */ java.lang.String getConfigsOrDefault(
        java.lang.String key,
        /* nullable */
        java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public java.lang.String getConfigsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetConfigs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearConfigs() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableConfigs().getMutableMap().clear();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder removeConfigs(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableConfigs().getMutableMap().remove(key);
      return this;
    }

    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableConfigs() {
      bitField0_ |= 0x00000004;
      return internalGetMutableConfigs().getMutableMap();
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder putConfigs(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableConfigs().getMutableMap().put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Connector config as keys/values.
     * The keys of the map are connector property names, for example:
     * `connector.class`, `tasks.max`, `key.converter`.
     * </pre>
     *
     * <code>map&lt;string, string&gt; configs = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder putAllConfigs(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableConfigs().getMutableMap().putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }

    private int state_ = 0;

    /**
     *
     *
     * <pre>
     * Output only. The current state of the connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }

    /**
     *
     *
     * <pre>
     * Output only. The current state of the connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      state_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The current state of the connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The state.
     */
    @java.lang.Override
    public com.google.cloud.managedkafka.v1.Connector.State getState() {
      com.google.cloud.managedkafka.v1.Connector.State result =
          com.google.cloud.managedkafka.v1.Connector.State.forNumber(state_);
      return result == null
          ? com.google.cloud.managedkafka.v1.Connector.State.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Output only. The current state of the connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.cloud.managedkafka.v1.Connector.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      state_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The current state of the connector.
     * </pre>
     *
     * <code>
     * .google.cloud.managedkafka.v1.Connector.State state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000008);
      state_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.managedkafka.v1.Connector)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.managedkafka.v1.Connector)
  private static final com.google.cloud.managedkafka.v1.Connector DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.managedkafka.v1.Connector();
  }

  public static com.google.cloud.managedkafka.v1.Connector getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Connector> PARSER =
      new com.google.protobuf.AbstractParser<Connector>() {
        @java.lang.Override
        public Connector parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Connector> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Connector> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.managedkafka.v1.Connector getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
