/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkebackup/v1/backup_plan.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkebackup.v1;

public interface RpoConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gkebackup.v1.RpoConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Defines the target RPO for the BackupPlan in minutes, which means
   * the target maximum data loss in time that is acceptable for this
   * BackupPlan. This must be at least 60, i.e., 1 hour, and at most 86400,
   * i.e., 60 days.
   * </pre>
   *
   * <code>int32 target_rpo_minutes = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The targetRpoMinutes.
   */
  int getTargetRpoMinutes();

  /**
   *
   *
   * <pre>
   * Optional. User specified time windows during which backup can NOT happen
   * for this BackupPlan - backups should start and finish outside of any given
   * exclusion window. Note: backup jobs will be scheduled to start and
   * finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window.
   * All the time and date values in exclusion_windows entry in the API are in
   * UTC.
   * We only allow &lt;=1 recurrence (daily or weekly) exclusion window for a
   * BackupPlan while no restriction on number of single occurrence
   * windows.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkebackup.v1.ExclusionWindow exclusion_windows = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<com.google.cloud.gkebackup.v1.ExclusionWindow> getExclusionWindowsList();
  /**
   *
   *
   * <pre>
   * Optional. User specified time windows during which backup can NOT happen
   * for this BackupPlan - backups should start and finish outside of any given
   * exclusion window. Note: backup jobs will be scheduled to start and
   * finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window.
   * All the time and date values in exclusion_windows entry in the API are in
   * UTC.
   * We only allow &lt;=1 recurrence (daily or weekly) exclusion window for a
   * BackupPlan while no restriction on number of single occurrence
   * windows.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkebackup.v1.ExclusionWindow exclusion_windows = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.gkebackup.v1.ExclusionWindow getExclusionWindows(int index);
  /**
   *
   *
   * <pre>
   * Optional. User specified time windows during which backup can NOT happen
   * for this BackupPlan - backups should start and finish outside of any given
   * exclusion window. Note: backup jobs will be scheduled to start and
   * finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window.
   * All the time and date values in exclusion_windows entry in the API are in
   * UTC.
   * We only allow &lt;=1 recurrence (daily or weekly) exclusion window for a
   * BackupPlan while no restriction on number of single occurrence
   * windows.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkebackup.v1.ExclusionWindow exclusion_windows = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  int getExclusionWindowsCount();
  /**
   *
   *
   * <pre>
   * Optional. User specified time windows during which backup can NOT happen
   * for this BackupPlan - backups should start and finish outside of any given
   * exclusion window. Note: backup jobs will be scheduled to start and
   * finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window.
   * All the time and date values in exclusion_windows entry in the API are in
   * UTC.
   * We only allow &lt;=1 recurrence (daily or weekly) exclusion window for a
   * BackupPlan while no restriction on number of single occurrence
   * windows.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkebackup.v1.ExclusionWindow exclusion_windows = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<? extends com.google.cloud.gkebackup.v1.ExclusionWindowOrBuilder>
      getExclusionWindowsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Optional. User specified time windows during which backup can NOT happen
   * for this BackupPlan - backups should start and finish outside of any given
   * exclusion window. Note: backup jobs will be scheduled to start and
   * finish outside the duration of the window as much as possible, but
   * running jobs will not get canceled when it runs into the window.
   * All the time and date values in exclusion_windows entry in the API are in
   * UTC.
   * We only allow &lt;=1 recurrence (daily or weekly) exclusion window for a
   * BackupPlan while no restriction on number of single occurrence
   * windows.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkebackup.v1.ExclusionWindow exclusion_windows = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.gkebackup.v1.ExclusionWindowOrBuilder getExclusionWindowsOrBuilder(int index);
}
