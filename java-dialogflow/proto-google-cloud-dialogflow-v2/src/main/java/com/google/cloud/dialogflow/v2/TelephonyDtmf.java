/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/audio_config.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.dialogflow.v2;

/**
 *
 *
 * <pre>
 * [DTMF](https://en.wikipedia.org/wiki/Dual-tone_multi-frequency_signaling)
 * digit in Telephony Gateway.
 * </pre>
 *
 * Protobuf enum {@code google.cloud.dialogflow.v2.TelephonyDtmf}
 */
public enum TelephonyDtmf implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * Not specified. This value may be used to indicate an absent digit.
   * </pre>
   *
   * <code>TELEPHONY_DTMF_UNSPECIFIED = 0;</code>
   */
  TELEPHONY_DTMF_UNSPECIFIED(0),
  /**
   *
   *
   * <pre>
   * Number: '1'.
   * </pre>
   *
   * <code>DTMF_ONE = 1;</code>
   */
  DTMF_ONE(1),
  /**
   *
   *
   * <pre>
   * Number: '2'.
   * </pre>
   *
   * <code>DTMF_TWO = 2;</code>
   */
  DTMF_TWO(2),
  /**
   *
   *
   * <pre>
   * Number: '3'.
   * </pre>
   *
   * <code>DTMF_THREE = 3;</code>
   */
  DTMF_THREE(3),
  /**
   *
   *
   * <pre>
   * Number: '4'.
   * </pre>
   *
   * <code>DTMF_FOUR = 4;</code>
   */
  DTMF_FOUR(4),
  /**
   *
   *
   * <pre>
   * Number: '5'.
   * </pre>
   *
   * <code>DTMF_FIVE = 5;</code>
   */
  DTMF_FIVE(5),
  /**
   *
   *
   * <pre>
   * Number: '6'.
   * </pre>
   *
   * <code>DTMF_SIX = 6;</code>
   */
  DTMF_SIX(6),
  /**
   *
   *
   * <pre>
   * Number: '7'.
   * </pre>
   *
   * <code>DTMF_SEVEN = 7;</code>
   */
  DTMF_SEVEN(7),
  /**
   *
   *
   * <pre>
   * Number: '8'.
   * </pre>
   *
   * <code>DTMF_EIGHT = 8;</code>
   */
  DTMF_EIGHT(8),
  /**
   *
   *
   * <pre>
   * Number: '9'.
   * </pre>
   *
   * <code>DTMF_NINE = 9;</code>
   */
  DTMF_NINE(9),
  /**
   *
   *
   * <pre>
   * Number: '0'.
   * </pre>
   *
   * <code>DTMF_ZERO = 10;</code>
   */
  DTMF_ZERO(10),
  /**
   *
   *
   * <pre>
   * Letter: 'A'.
   * </pre>
   *
   * <code>DTMF_A = 11;</code>
   */
  DTMF_A(11),
  /**
   *
   *
   * <pre>
   * Letter: 'B'.
   * </pre>
   *
   * <code>DTMF_B = 12;</code>
   */
  DTMF_B(12),
  /**
   *
   *
   * <pre>
   * Letter: 'C'.
   * </pre>
   *
   * <code>DTMF_C = 13;</code>
   */
  DTMF_C(13),
  /**
   *
   *
   * <pre>
   * Letter: 'D'.
   * </pre>
   *
   * <code>DTMF_D = 14;</code>
   */
  DTMF_D(14),
  /**
   *
   *
   * <pre>
   * Asterisk/star: '*'.
   * </pre>
   *
   * <code>DTMF_STAR = 15;</code>
   */
  DTMF_STAR(15),
  /**
   *
   *
   * <pre>
   * Pound/diamond/hash/square/gate/octothorpe: '#'.
   * </pre>
   *
   * <code>DTMF_POUND = 16;</code>
   */
  DTMF_POUND(16),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * Not specified. This value may be used to indicate an absent digit.
   * </pre>
   *
   * <code>TELEPHONY_DTMF_UNSPECIFIED = 0;</code>
   */
  public static final int TELEPHONY_DTMF_UNSPECIFIED_VALUE = 0;
  /**
   *
   *
   * <pre>
   * Number: '1'.
   * </pre>
   *
   * <code>DTMF_ONE = 1;</code>
   */
  public static final int DTMF_ONE_VALUE = 1;
  /**
   *
   *
   * <pre>
   * Number: '2'.
   * </pre>
   *
   * <code>DTMF_TWO = 2;</code>
   */
  public static final int DTMF_TWO_VALUE = 2;
  /**
   *
   *
   * <pre>
   * Number: '3'.
   * </pre>
   *
   * <code>DTMF_THREE = 3;</code>
   */
  public static final int DTMF_THREE_VALUE = 3;
  /**
   *
   *
   * <pre>
   * Number: '4'.
   * </pre>
   *
   * <code>DTMF_FOUR = 4;</code>
   */
  public static final int DTMF_FOUR_VALUE = 4;
  /**
   *
   *
   * <pre>
   * Number: '5'.
   * </pre>
   *
   * <code>DTMF_FIVE = 5;</code>
   */
  public static final int DTMF_FIVE_VALUE = 5;
  /**
   *
   *
   * <pre>
   * Number: '6'.
   * </pre>
   *
   * <code>DTMF_SIX = 6;</code>
   */
  public static final int DTMF_SIX_VALUE = 6;
  /**
   *
   *
   * <pre>
   * Number: '7'.
   * </pre>
   *
   * <code>DTMF_SEVEN = 7;</code>
   */
  public static final int DTMF_SEVEN_VALUE = 7;
  /**
   *
   *
   * <pre>
   * Number: '8'.
   * </pre>
   *
   * <code>DTMF_EIGHT = 8;</code>
   */
  public static final int DTMF_EIGHT_VALUE = 8;
  /**
   *
   *
   * <pre>
   * Number: '9'.
   * </pre>
   *
   * <code>DTMF_NINE = 9;</code>
   */
  public static final int DTMF_NINE_VALUE = 9;
  /**
   *
   *
   * <pre>
   * Number: '0'.
   * </pre>
   *
   * <code>DTMF_ZERO = 10;</code>
   */
  public static final int DTMF_ZERO_VALUE = 10;
  /**
   *
   *
   * <pre>
   * Letter: 'A'.
   * </pre>
   *
   * <code>DTMF_A = 11;</code>
   */
  public static final int DTMF_A_VALUE = 11;
  /**
   *
   *
   * <pre>
   * Letter: 'B'.
   * </pre>
   *
   * <code>DTMF_B = 12;</code>
   */
  public static final int DTMF_B_VALUE = 12;
  /**
   *
   *
   * <pre>
   * Letter: 'C'.
   * </pre>
   *
   * <code>DTMF_C = 13;</code>
   */
  public static final int DTMF_C_VALUE = 13;
  /**
   *
   *
   * <pre>
   * Letter: 'D'.
   * </pre>
   *
   * <code>DTMF_D = 14;</code>
   */
  public static final int DTMF_D_VALUE = 14;
  /**
   *
   *
   * <pre>
   * Asterisk/star: '*'.
   * </pre>
   *
   * <code>DTMF_STAR = 15;</code>
   */
  public static final int DTMF_STAR_VALUE = 15;
  /**
   *
   *
   * <pre>
   * Pound/diamond/hash/square/gate/octothorpe: '#'.
   * </pre>
   *
   * <code>DTMF_POUND = 16;</code>
   */
  public static final int DTMF_POUND_VALUE = 16;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TelephonyDtmf valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TelephonyDtmf forNumber(int value) {
    switch (value) {
      case 0:
        return TELEPHONY_DTMF_UNSPECIFIED;
      case 1:
        return DTMF_ONE;
      case 2:
        return DTMF_TWO;
      case 3:
        return DTMF_THREE;
      case 4:
        return DTMF_FOUR;
      case 5:
        return DTMF_FIVE;
      case 6:
        return DTMF_SIX;
      case 7:
        return DTMF_SEVEN;
      case 8:
        return DTMF_EIGHT;
      case 9:
        return DTMF_NINE;
      case 10:
        return DTMF_ZERO;
      case 11:
        return DTMF_A;
      case 12:
        return DTMF_B;
      case 13:
        return DTMF_C;
      case 14:
        return DTMF_D;
      case 15:
        return DTMF_STAR;
      case 16:
        return DTMF_POUND;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TelephonyDtmf> internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<TelephonyDtmf> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<TelephonyDtmf>() {
        public TelephonyDtmf findValueByNumber(int number) {
          return TelephonyDtmf.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.cloud.dialogflow.v2.AudioConfigProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final TelephonyDtmf[] VALUES = values();

  public static TelephonyDtmf valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TelephonyDtmf(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.cloud.dialogflow.v2.TelephonyDtmf)
}
