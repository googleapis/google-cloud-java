/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dialogflow/v2/participant.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.dialogflow.v2;

/**
 *
 *
 * <pre>
 * Represents a conversation participant (human agent, virtual agent, end-user).
 * </pre>
 *
 * Protobuf type {@code google.cloud.dialogflow.v2.Participant}
 */
public final class Participant extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.dialogflow.v2.Participant)
    ParticipantOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Participant.newBuilder() to construct.
  private Participant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Participant() {
    name_ = "";
    role_ = 0;
    sipRecordingMediaLabel_ = "";
    obfuscatedExternalUserId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Participant();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.dialogflow.v2.ParticipantProto
        .internal_static_google_cloud_dialogflow_v2_Participant_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 8:
        return internalGetDocumentsMetadataFilters();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.dialogflow.v2.ParticipantProto
        .internal_static_google_cloud_dialogflow_v2_Participant_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.dialogflow.v2.Participant.class,
            com.google.cloud.dialogflow.v2.Participant.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Enumeration of the roles a participant can play in a conversation.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.dialogflow.v2.Participant.Role}
   */
  public enum Role implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Participant role not set.
     * </pre>
     *
     * <code>ROLE_UNSPECIFIED = 0;</code>
     */
    ROLE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Participant is a human agent.
     * </pre>
     *
     * <code>HUMAN_AGENT = 1;</code>
     */
    HUMAN_AGENT(1),
    /**
     *
     *
     * <pre>
     * Participant is an automated agent, such as a Dialogflow agent.
     * </pre>
     *
     * <code>AUTOMATED_AGENT = 2;</code>
     */
    AUTOMATED_AGENT(2),
    /**
     *
     *
     * <pre>
     * Participant is an end user that has called or chatted with
     * Dialogflow services.
     * </pre>
     *
     * <code>END_USER = 3;</code>
     */
    END_USER(3),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Participant role not set.
     * </pre>
     *
     * <code>ROLE_UNSPECIFIED = 0;</code>
     */
    public static final int ROLE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Participant is a human agent.
     * </pre>
     *
     * <code>HUMAN_AGENT = 1;</code>
     */
    public static final int HUMAN_AGENT_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Participant is an automated agent, such as a Dialogflow agent.
     * </pre>
     *
     * <code>AUTOMATED_AGENT = 2;</code>
     */
    public static final int AUTOMATED_AGENT_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Participant is an end user that has called or chatted with
     * Dialogflow services.
     * </pre>
     *
     * <code>END_USER = 3;</code>
     */
    public static final int END_USER_VALUE = 3;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Role valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Role forNumber(int value) {
      switch (value) {
        case 0:
          return ROLE_UNSPECIFIED;
        case 1:
          return HUMAN_AGENT;
        case 2:
          return AUTOMATED_AGENT;
        case 3:
          return END_USER;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Role> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Role> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Role>() {
          public Role findValueByNumber(int number) {
            return Role.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.dialogflow.v2.Participant.getDescriptor().getEnumTypes().get(0);
    }

    private static final Role[] VALUES = values();

    public static Role valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Role(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.dialogflow.v2.Participant.Role)
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Optional. The unique identifier of this participant.
   * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
   * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The unique identifier of this participant.
   * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
   * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROLE_FIELD_NUMBER = 2;
  private int role_ = 0;
  /**
   *
   *
   * <pre>
   * Immutable. The role this participant plays in the conversation. This field
   * must be set during participant creation and is then immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The enum numeric value on the wire for role.
   */
  @java.lang.Override
  public int getRoleValue() {
    return role_;
  }
  /**
   *
   *
   * <pre>
   * Immutable. The role this participant plays in the conversation. This field
   * must be set during participant creation and is then immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The role.
   */
  @java.lang.Override
  public com.google.cloud.dialogflow.v2.Participant.Role getRole() {
    com.google.cloud.dialogflow.v2.Participant.Role result =
        com.google.cloud.dialogflow.v2.Participant.Role.forNumber(role_);
    return result == null ? com.google.cloud.dialogflow.v2.Participant.Role.UNRECOGNIZED : result;
  }

  public static final int SIP_RECORDING_MEDIA_LABEL_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private volatile java.lang.Object sipRecordingMediaLabel_ = "";
  /**
   *
   *
   * <pre>
   * Optional. Label applied to streams representing this participant in SIPREC
   * XML metadata and SDP. This is used to assign transcriptions from that
   * media stream to this participant. This field can be updated.
   * </pre>
   *
   * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The sipRecordingMediaLabel.
   */
  @java.lang.Override
  public java.lang.String getSipRecordingMediaLabel() {
    java.lang.Object ref = sipRecordingMediaLabel_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sipRecordingMediaLabel_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. Label applied to streams representing this participant in SIPREC
   * XML metadata and SDP. This is used to assign transcriptions from that
   * media stream to this participant. This field can be updated.
   * </pre>
   *
   * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for sipRecordingMediaLabel.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSipRecordingMediaLabelBytes() {
    java.lang.Object ref = sipRecordingMediaLabel_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sipRecordingMediaLabel_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OBFUSCATED_EXTERNAL_USER_ID_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private volatile java.lang.Object obfuscatedExternalUserId_ = "";
  /**
   *
   *
   * <pre>
   * Optional. Obfuscated user id that should be associated with the created
   * participant.
   *
   * You can specify a user id as follows:
   *
   * 1. If you set this field in
   *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
   *    or
   *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
   *    Dialogflow adds the obfuscated user id with the participant.
   *
   * 2. If you set this field in
   *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
   *    or
   *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
   *    Dialogflow will update
   *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
   *
   * Dialogflow returns an error if you try to add a user id for a
   * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
   * participant.
   *
   * Dialogflow uses this user id for billing and measurement purposes. For
   * example, Dialogflow determines whether a user in one conversation returned
   * in a later conversation.
   *
   * Note:
   *
   * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
   *   id first.
   * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
   *   hash function like SHA-512.
   * * The length of the user id must be &lt;= 256 characters.
   * </pre>
   *
   * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The obfuscatedExternalUserId.
   */
  @java.lang.Override
  public java.lang.String getObfuscatedExternalUserId() {
    java.lang.Object ref = obfuscatedExternalUserId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      obfuscatedExternalUserId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. Obfuscated user id that should be associated with the created
   * participant.
   *
   * You can specify a user id as follows:
   *
   * 1. If you set this field in
   *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
   *    or
   *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
   *    Dialogflow adds the obfuscated user id with the participant.
   *
   * 2. If you set this field in
   *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
   *    or
   *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
   *    Dialogflow will update
   *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
   *
   * Dialogflow returns an error if you try to add a user id for a
   * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
   * participant.
   *
   * Dialogflow uses this user id for billing and measurement purposes. For
   * example, Dialogflow determines whether a user in one conversation returned
   * in a later conversation.
   *
   * Note:
   *
   * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
   *   id first.
   * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
   *   hash function like SHA-512.
   * * The length of the user id must be &lt;= 256 characters.
   * </pre>
   *
   * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for obfuscatedExternalUserId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getObfuscatedExternalUserIdBytes() {
    java.lang.Object ref = obfuscatedExternalUserId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      obfuscatedExternalUserId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOCUMENTS_METADATA_FILTERS_FIELD_NUMBER = 8;

  private static final class DocumentsMetadataFiltersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            com.google.cloud.dialogflow.v2.ParticipantProto
                .internal_static_google_cloud_dialogflow_v2_Participant_DocumentsMetadataFiltersEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      documentsMetadataFilters_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetDocumentsMetadataFilters() {
    if (documentsMetadataFilters_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DocumentsMetadataFiltersDefaultEntryHolder.defaultEntry);
    }
    return documentsMetadataFilters_;
  }

  public int getDocumentsMetadataFiltersCount() {
    return internalGetDocumentsMetadataFilters().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Key-value filters on the metadata of documents returned by
   * article suggestion. If specified, article suggestion only returns suggested
   * documents that match all filters in their
   * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
   * values for a metadata key should be concatenated by comma. For example,
   * filters to match all documents that have 'US' or 'CA' in their market
   * metadata values and 'agent' in their user metadata values will be
   * ```
   * documents_metadata_filters {
   *   key: "market"
   *   value: "US,CA"
   * }
   * documents_metadata_filters {
   *   key: "user"
   *   value: "agent"
   * }
   * ```
   * </pre>
   *
   * <code>
   * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public boolean containsDocumentsMetadataFilters(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetDocumentsMetadataFilters().getMap().containsKey(key);
  }
  /** Use {@link #getDocumentsMetadataFiltersMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getDocumentsMetadataFilters() {
    return getDocumentsMetadataFiltersMap();
  }
  /**
   *
   *
   * <pre>
   * Optional. Key-value filters on the metadata of documents returned by
   * article suggestion. If specified, article suggestion only returns suggested
   * documents that match all filters in their
   * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
   * values for a metadata key should be concatenated by comma. For example,
   * filters to match all documents that have 'US' or 'CA' in their market
   * metadata values and 'agent' in their user metadata values will be
   * ```
   * documents_metadata_filters {
   *   key: "market"
   *   value: "US,CA"
   * }
   * documents_metadata_filters {
   *   key: "user"
   *   value: "agent"
   * }
   * ```
   * </pre>
   *
   * <code>
   * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getDocumentsMetadataFiltersMap() {
    return internalGetDocumentsMetadataFilters().getMap();
  }
  /**
   *
   *
   * <pre>
   * Optional. Key-value filters on the metadata of documents returned by
   * article suggestion. If specified, article suggestion only returns suggested
   * documents that match all filters in their
   * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
   * values for a metadata key should be concatenated by comma. For example,
   * filters to match all documents that have 'US' or 'CA' in their market
   * metadata values and 'agent' in their user metadata values will be
   * ```
   * documents_metadata_filters {
   *   key: "market"
   *   value: "US,CA"
   * }
   * documents_metadata_filters {
   *   key: "user"
   *   value: "agent"
   * }
   * ```
   * </pre>
   *
   * <code>
   * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public /* nullable */ java.lang.String getDocumentsMetadataFiltersOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetDocumentsMetadataFilters().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * Optional. Key-value filters on the metadata of documents returned by
   * article suggestion. If specified, article suggestion only returns suggested
   * documents that match all filters in their
   * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
   * values for a metadata key should be concatenated by comma. For example,
   * filters to match all documents that have 'US' or 'CA' in their market
   * metadata values and 'agent' in their user metadata values will be
   * ```
   * documents_metadata_filters {
   *   key: "market"
   *   value: "US,CA"
   * }
   * documents_metadata_filters {
   *   key: "user"
   *   value: "agent"
   * }
   * ```
   * </pre>
   *
   * <code>
   * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.lang.String getDocumentsMetadataFiltersOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetDocumentsMetadataFilters().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (role_ != com.google.cloud.dialogflow.v2.Participant.Role.ROLE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, role_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sipRecordingMediaLabel_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, sipRecordingMediaLabel_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(obfuscatedExternalUserId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, obfuscatedExternalUserId_);
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output,
        internalGetDocumentsMetadataFilters(),
        DocumentsMetadataFiltersDefaultEntryHolder.defaultEntry,
        8);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (role_ != com.google.cloud.dialogflow.v2.Participant.Role.ROLE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, role_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sipRecordingMediaLabel_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, sipRecordingMediaLabel_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(obfuscatedExternalUserId_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(7, obfuscatedExternalUserId_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetDocumentsMetadataFilters().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> documentsMetadataFilters__ =
          DocumentsMetadataFiltersDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(8, documentsMetadataFilters__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.dialogflow.v2.Participant)) {
      return super.equals(obj);
    }
    com.google.cloud.dialogflow.v2.Participant other =
        (com.google.cloud.dialogflow.v2.Participant) obj;

    if (!getName().equals(other.getName())) return false;
    if (role_ != other.role_) return false;
    if (!getSipRecordingMediaLabel().equals(other.getSipRecordingMediaLabel())) return false;
    if (!getObfuscatedExternalUserId().equals(other.getObfuscatedExternalUserId())) return false;
    if (!internalGetDocumentsMetadataFilters().equals(other.internalGetDocumentsMetadataFilters()))
      return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + ROLE_FIELD_NUMBER;
    hash = (53 * hash) + role_;
    hash = (37 * hash) + SIP_RECORDING_MEDIA_LABEL_FIELD_NUMBER;
    hash = (53 * hash) + getSipRecordingMediaLabel().hashCode();
    hash = (37 * hash) + OBFUSCATED_EXTERNAL_USER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getObfuscatedExternalUserId().hashCode();
    if (!internalGetDocumentsMetadataFilters().getMap().isEmpty()) {
      hash = (37 * hash) + DOCUMENTS_METADATA_FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDocumentsMetadataFilters().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.dialogflow.v2.Participant parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.dialogflow.v2.Participant prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Represents a conversation participant (human agent, virtual agent, end-user).
   * </pre>
   *
   * Protobuf type {@code google.cloud.dialogflow.v2.Participant}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.dialogflow.v2.Participant)
      com.google.cloud.dialogflow.v2.ParticipantOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.dialogflow.v2.ParticipantProto
          .internal_static_google_cloud_dialogflow_v2_Participant_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 8:
          return internalGetDocumentsMetadataFilters();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 8:
          return internalGetMutableDocumentsMetadataFilters();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.dialogflow.v2.ParticipantProto
          .internal_static_google_cloud_dialogflow_v2_Participant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.dialogflow.v2.Participant.class,
              com.google.cloud.dialogflow.v2.Participant.Builder.class);
    }

    // Construct using com.google.cloud.dialogflow.v2.Participant.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      role_ = 0;
      sipRecordingMediaLabel_ = "";
      obfuscatedExternalUserId_ = "";
      internalGetMutableDocumentsMetadataFilters().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.dialogflow.v2.ParticipantProto
          .internal_static_google_cloud_dialogflow_v2_Participant_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.dialogflow.v2.Participant getDefaultInstanceForType() {
      return com.google.cloud.dialogflow.v2.Participant.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.dialogflow.v2.Participant build() {
      com.google.cloud.dialogflow.v2.Participant result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.dialogflow.v2.Participant buildPartial() {
      com.google.cloud.dialogflow.v2.Participant result =
          new com.google.cloud.dialogflow.v2.Participant(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.dialogflow.v2.Participant result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.role_ = role_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.sipRecordingMediaLabel_ = sipRecordingMediaLabel_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.obfuscatedExternalUserId_ = obfuscatedExternalUserId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.documentsMetadataFilters_ = internalGetDocumentsMetadataFilters();
        result.documentsMetadataFilters_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.dialogflow.v2.Participant) {
        return mergeFrom((com.google.cloud.dialogflow.v2.Participant) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.dialogflow.v2.Participant other) {
      if (other == com.google.cloud.dialogflow.v2.Participant.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.role_ != 0) {
        setRoleValue(other.getRoleValue());
      }
      if (!other.getSipRecordingMediaLabel().isEmpty()) {
        sipRecordingMediaLabel_ = other.sipRecordingMediaLabel_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getObfuscatedExternalUserId().isEmpty()) {
        obfuscatedExternalUserId_ = other.obfuscatedExternalUserId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      internalGetMutableDocumentsMetadataFilters()
          .mergeFrom(other.internalGetDocumentsMetadataFilters());
      bitField0_ |= 0x00000010;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                role_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 50:
              {
                sipRecordingMediaLabel_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 50
            case 58:
              {
                obfuscatedExternalUserId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 58
            case 66:
              {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                    documentsMetadataFilters__ =
                        input.readMessage(
                            DocumentsMetadataFiltersDefaultEntryHolder.defaultEntry
                                .getParserForType(),
                            extensionRegistry);
                internalGetMutableDocumentsMetadataFilters()
                    .getMutableMap()
                    .put(
                        documentsMetadataFilters__.getKey(), documentsMetadataFilters__.getValue());
                bitField0_ |= 0x00000010;
                break;
              } // case 66
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Optional. The unique identifier of this participant.
     * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
     * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The unique identifier of this participant.
     * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
     * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The unique identifier of this participant.
     * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
     * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The unique identifier of this participant.
     * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
     * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The unique identifier of this participant.
     * Format: `projects/&lt;Project ID&gt;/locations/&lt;Location
     * ID&gt;/conversations/&lt;Conversation ID&gt;/participants/&lt;Participant ID&gt;`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int role_ = 0;
    /**
     *
     *
     * <pre>
     * Immutable. The role this participant plays in the conversation. This field
     * must be set during participant creation and is then immutable.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The enum numeric value on the wire for role.
     */
    @java.lang.Override
    public int getRoleValue() {
      return role_;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The role this participant plays in the conversation. This field
     * must be set during participant creation and is then immutable.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @param value The enum numeric value on the wire for role to set.
     * @return This builder for chaining.
     */
    public Builder setRoleValue(int value) {
      role_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The role this participant plays in the conversation. This field
     * must be set during participant creation and is then immutable.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The role.
     */
    @java.lang.Override
    public com.google.cloud.dialogflow.v2.Participant.Role getRole() {
      com.google.cloud.dialogflow.v2.Participant.Role result =
          com.google.cloud.dialogflow.v2.Participant.Role.forNumber(role_);
      return result == null ? com.google.cloud.dialogflow.v2.Participant.Role.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The role this participant plays in the conversation. This field
     * must be set during participant creation and is then immutable.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @param value The role to set.
     * @return This builder for chaining.
     */
    public Builder setRole(com.google.cloud.dialogflow.v2.Participant.Role value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      role_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The role this participant plays in the conversation. This field
     * must be set during participant creation and is then immutable.
     * </pre>
     *
     * <code>
     * .google.cloud.dialogflow.v2.Participant.Role role = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRole() {
      bitField0_ = (bitField0_ & ~0x00000002);
      role_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object sipRecordingMediaLabel_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Label applied to streams representing this participant in SIPREC
     * XML metadata and SDP. This is used to assign transcriptions from that
     * media stream to this participant. This field can be updated.
     * </pre>
     *
     * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The sipRecordingMediaLabel.
     */
    public java.lang.String getSipRecordingMediaLabel() {
      java.lang.Object ref = sipRecordingMediaLabel_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sipRecordingMediaLabel_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Label applied to streams representing this participant in SIPREC
     * XML metadata and SDP. This is used to assign transcriptions from that
     * media stream to this participant. This field can be updated.
     * </pre>
     *
     * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for sipRecordingMediaLabel.
     */
    public com.google.protobuf.ByteString getSipRecordingMediaLabelBytes() {
      java.lang.Object ref = sipRecordingMediaLabel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sipRecordingMediaLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Label applied to streams representing this participant in SIPREC
     * XML metadata and SDP. This is used to assign transcriptions from that
     * media stream to this participant. This field can be updated.
     * </pre>
     *
     * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The sipRecordingMediaLabel to set.
     * @return This builder for chaining.
     */
    public Builder setSipRecordingMediaLabel(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      sipRecordingMediaLabel_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Label applied to streams representing this participant in SIPREC
     * XML metadata and SDP. This is used to assign transcriptions from that
     * media stream to this participant. This field can be updated.
     * </pre>
     *
     * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSipRecordingMediaLabel() {
      sipRecordingMediaLabel_ = getDefaultInstance().getSipRecordingMediaLabel();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Label applied to streams representing this participant in SIPREC
     * XML metadata and SDP. This is used to assign transcriptions from that
     * media stream to this participant. This field can be updated.
     * </pre>
     *
     * <code>string sip_recording_media_label = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for sipRecordingMediaLabel to set.
     * @return This builder for chaining.
     */
    public Builder setSipRecordingMediaLabelBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      sipRecordingMediaLabel_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object obfuscatedExternalUserId_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Obfuscated user id that should be associated with the created
     * participant.
     *
     * You can specify a user id as follows:
     *
     * 1. If you set this field in
     *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
     *    or
     *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
     *    Dialogflow adds the obfuscated user id with the participant.
     *
     * 2. If you set this field in
     *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
     *    or
     *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
     *    Dialogflow will update
     *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
     *
     * Dialogflow returns an error if you try to add a user id for a
     * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
     * participant.
     *
     * Dialogflow uses this user id for billing and measurement purposes. For
     * example, Dialogflow determines whether a user in one conversation returned
     * in a later conversation.
     *
     * Note:
     *
     * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
     *   id first.
     * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
     *   hash function like SHA-512.
     * * The length of the user id must be &lt;= 256 characters.
     * </pre>
     *
     * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The obfuscatedExternalUserId.
     */
    public java.lang.String getObfuscatedExternalUserId() {
      java.lang.Object ref = obfuscatedExternalUserId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        obfuscatedExternalUserId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Obfuscated user id that should be associated with the created
     * participant.
     *
     * You can specify a user id as follows:
     *
     * 1. If you set this field in
     *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
     *    or
     *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
     *    Dialogflow adds the obfuscated user id with the participant.
     *
     * 2. If you set this field in
     *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
     *    or
     *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
     *    Dialogflow will update
     *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
     *
     * Dialogflow returns an error if you try to add a user id for a
     * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
     * participant.
     *
     * Dialogflow uses this user id for billing and measurement purposes. For
     * example, Dialogflow determines whether a user in one conversation returned
     * in a later conversation.
     *
     * Note:
     *
     * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
     *   id first.
     * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
     *   hash function like SHA-512.
     * * The length of the user id must be &lt;= 256 characters.
     * </pre>
     *
     * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The bytes for obfuscatedExternalUserId.
     */
    public com.google.protobuf.ByteString getObfuscatedExternalUserIdBytes() {
      java.lang.Object ref = obfuscatedExternalUserId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        obfuscatedExternalUserId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Obfuscated user id that should be associated with the created
     * participant.
     *
     * You can specify a user id as follows:
     *
     * 1. If you set this field in
     *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
     *    or
     *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
     *    Dialogflow adds the obfuscated user id with the participant.
     *
     * 2. If you set this field in
     *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
     *    or
     *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
     *    Dialogflow will update
     *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
     *
     * Dialogflow returns an error if you try to add a user id for a
     * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
     * participant.
     *
     * Dialogflow uses this user id for billing and measurement purposes. For
     * example, Dialogflow determines whether a user in one conversation returned
     * in a later conversation.
     *
     * Note:
     *
     * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
     *   id first.
     * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
     *   hash function like SHA-512.
     * * The length of the user id must be &lt;= 256 characters.
     * </pre>
     *
     * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The obfuscatedExternalUserId to set.
     * @return This builder for chaining.
     */
    public Builder setObfuscatedExternalUserId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      obfuscatedExternalUserId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Obfuscated user id that should be associated with the created
     * participant.
     *
     * You can specify a user id as follows:
     *
     * 1. If you set this field in
     *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
     *    or
     *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
     *    Dialogflow adds the obfuscated user id with the participant.
     *
     * 2. If you set this field in
     *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
     *    or
     *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
     *    Dialogflow will update
     *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
     *
     * Dialogflow returns an error if you try to add a user id for a
     * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
     * participant.
     *
     * Dialogflow uses this user id for billing and measurement purposes. For
     * example, Dialogflow determines whether a user in one conversation returned
     * in a later conversation.
     *
     * Note:
     *
     * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
     *   id first.
     * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
     *   hash function like SHA-512.
     * * The length of the user id must be &lt;= 256 characters.
     * </pre>
     *
     * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearObfuscatedExternalUserId() {
      obfuscatedExternalUserId_ = getDefaultInstance().getObfuscatedExternalUserId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Obfuscated user id that should be associated with the created
     * participant.
     *
     * You can specify a user id as follows:
     *
     * 1. If you set this field in
     *    [CreateParticipantRequest][google.cloud.dialogflow.v2.CreateParticipantRequest.participant]
     *    or
     *    [UpdateParticipantRequest][google.cloud.dialogflow.v2.UpdateParticipantRequest.participant],
     *    Dialogflow adds the obfuscated user id with the participant.
     *
     * 2. If you set this field in
     *    [AnalyzeContent][google.cloud.dialogflow.v2.AnalyzeContentRequest.participant]
     *    or
     *    [StreamingAnalyzeContent][google.cloud.dialogflow.v2.StreamingAnalyzeContentRequest.participant],
     *    Dialogflow will update
     *    [Participant.obfuscated_external_user_id][google.cloud.dialogflow.v2.Participant.obfuscated_external_user_id].
     *
     * Dialogflow returns an error if you try to add a user id for a
     * non-[END_USER][google.cloud.dialogflow.v2.Participant.Role.END_USER]
     * participant.
     *
     * Dialogflow uses this user id for billing and measurement purposes. For
     * example, Dialogflow determines whether a user in one conversation returned
     * in a later conversation.
     *
     * Note:
     *
     * * Please never pass raw user ids to Dialogflow. Always obfuscate your user
     *   id first.
     * * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a
     *   hash function like SHA-512.
     * * The length of the user id must be &lt;= 256 characters.
     * </pre>
     *
     * <code>string obfuscated_external_user_id = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The bytes for obfuscatedExternalUserId to set.
     * @return This builder for chaining.
     */
    public Builder setObfuscatedExternalUserIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      obfuscatedExternalUserId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        documentsMetadataFilters_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetDocumentsMetadataFilters() {
      if (documentsMetadataFilters_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DocumentsMetadataFiltersDefaultEntryHolder.defaultEntry);
      }
      return documentsMetadataFilters_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableDocumentsMetadataFilters() {
      if (documentsMetadataFilters_ == null) {
        documentsMetadataFilters_ =
            com.google.protobuf.MapField.newMapField(
                DocumentsMetadataFiltersDefaultEntryHolder.defaultEntry);
      }
      if (!documentsMetadataFilters_.isMutable()) {
        documentsMetadataFilters_ = documentsMetadataFilters_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return documentsMetadataFilters_;
    }

    public int getDocumentsMetadataFiltersCount() {
      return internalGetDocumentsMetadataFilters().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public boolean containsDocumentsMetadataFilters(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetDocumentsMetadataFilters().getMap().containsKey(key);
    }
    /** Use {@link #getDocumentsMetadataFiltersMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getDocumentsMetadataFilters() {
      return getDocumentsMetadataFiltersMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getDocumentsMetadataFiltersMap() {
      return internalGetDocumentsMetadataFilters().getMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public /* nullable */ java.lang.String getDocumentsMetadataFiltersOrDefault(
        java.lang.String key,
        /* nullable */
        java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetDocumentsMetadataFilters().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public java.lang.String getDocumentsMetadataFiltersOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetDocumentsMetadataFilters().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearDocumentsMetadataFilters() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableDocumentsMetadataFilters().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeDocumentsMetadataFilters(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableDocumentsMetadataFilters().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableDocumentsMetadataFilters() {
      bitField0_ |= 0x00000010;
      return internalGetMutableDocumentsMetadataFilters().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder putDocumentsMetadataFilters(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableDocumentsMetadataFilters().getMutableMap().put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Key-value filters on the metadata of documents returned by
     * article suggestion. If specified, article suggestion only returns suggested
     * documents that match all filters in their
     * [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
     * values for a metadata key should be concatenated by comma. For example,
     * filters to match all documents that have 'US' or 'CA' in their market
     * metadata values and 'agent' in their user metadata values will be
     * ```
     * documents_metadata_filters {
     *   key: "market"
     *   value: "US,CA"
     * }
     * documents_metadata_filters {
     *   key: "user"
     *   value: "agent"
     * }
     * ```
     * </pre>
     *
     * <code>
     * map&lt;string, string&gt; documents_metadata_filters = 8 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder putAllDocumentsMetadataFilters(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableDocumentsMetadataFilters().getMutableMap().putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.dialogflow.v2.Participant)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.dialogflow.v2.Participant)
  private static final com.google.cloud.dialogflow.v2.Participant DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.dialogflow.v2.Participant();
  }

  public static com.google.cloud.dialogflow.v2.Participant getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Participant> PARSER =
      new com.google.protobuf.AbstractParser<Participant>() {
        @java.lang.Override
        public Participant parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Participant> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Participant> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.dialogflow.v2.Participant getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
