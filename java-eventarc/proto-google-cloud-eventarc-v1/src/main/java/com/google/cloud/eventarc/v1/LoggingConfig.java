/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/eventarc/v1/logging_config.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.eventarc.v1;

/**
 *
 *
 * <pre>
 * The configuration for Platform Telemetry logging for Eventarc Advanced
 * resources.
 * </pre>
 *
 * Protobuf type {@code google.cloud.eventarc.v1.LoggingConfig}
 */
public final class LoggingConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.eventarc.v1.LoggingConfig)
    LoggingConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use LoggingConfig.newBuilder() to construct.
  private LoggingConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private LoggingConfig() {
    logSeverity_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new LoggingConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.eventarc.v1.LoggingConfigProto
        .internal_static_google_cloud_eventarc_v1_LoggingConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.eventarc.v1.LoggingConfigProto
        .internal_static_google_cloud_eventarc_v1_LoggingConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.eventarc.v1.LoggingConfig.class,
            com.google.cloud.eventarc.v1.LoggingConfig.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The different severities for logging supported by Eventarc Advanced
   * resources.
   * This enum is an exhaustive list of log severities and is FROZEN. Do not
   * expect new values to be added.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.eventarc.v1.LoggingConfig.LogSeverity}
   */
  public enum LogSeverity implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Log severity is not specified. This value is treated the same as NONE,
     * but is used to distinguish between no update and update to NONE in
     * update_masks.
     * </pre>
     *
     * <code>LOG_SEVERITY_UNSPECIFIED = 0;</code>
     */
    LOG_SEVERITY_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Default value at resource creation, presence of this value must be
     * treated as no logging/disable logging.
     * </pre>
     *
     * <code>NONE = 1;</code>
     */
    NONE(1),
    /**
     *
     *
     * <pre>
     * Debug or trace level logging.
     * </pre>
     *
     * <code>DEBUG = 2;</code>
     */
    DEBUG(2),
    /**
     *
     *
     * <pre>
     * Routine information, such as ongoing status or performance.
     * </pre>
     *
     * <code>INFO = 3;</code>
     */
    INFO(3),
    /**
     *
     *
     * <pre>
     * Normal but significant events, such as start up, shut down, or a
     * configuration change.
     * </pre>
     *
     * <code>NOTICE = 4;</code>
     */
    NOTICE(4),
    /**
     *
     *
     * <pre>
     * Warning events might cause problems.
     * </pre>
     *
     * <code>WARNING = 5;</code>
     */
    WARNING(5),
    /**
     *
     *
     * <pre>
     * Error events are likely to cause problems.
     * </pre>
     *
     * <code>ERROR = 6;</code>
     */
    ERROR(6),
    /**
     *
     *
     * <pre>
     * Critical events cause more severe problems or outages.
     * </pre>
     *
     * <code>CRITICAL = 7;</code>
     */
    CRITICAL(7),
    /**
     *
     *
     * <pre>
     * A person must take action immediately.
     * </pre>
     *
     * <code>ALERT = 8;</code>
     */
    ALERT(8),
    /**
     *
     *
     * <pre>
     * One or more systems are unusable.
     * </pre>
     *
     * <code>EMERGENCY = 9;</code>
     */
    EMERGENCY(9),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Log severity is not specified. This value is treated the same as NONE,
     * but is used to distinguish between no update and update to NONE in
     * update_masks.
     * </pre>
     *
     * <code>LOG_SEVERITY_UNSPECIFIED = 0;</code>
     */
    public static final int LOG_SEVERITY_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Default value at resource creation, presence of this value must be
     * treated as no logging/disable logging.
     * </pre>
     *
     * <code>NONE = 1;</code>
     */
    public static final int NONE_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Debug or trace level logging.
     * </pre>
     *
     * <code>DEBUG = 2;</code>
     */
    public static final int DEBUG_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Routine information, such as ongoing status or performance.
     * </pre>
     *
     * <code>INFO = 3;</code>
     */
    public static final int INFO_VALUE = 3;
    /**
     *
     *
     * <pre>
     * Normal but significant events, such as start up, shut down, or a
     * configuration change.
     * </pre>
     *
     * <code>NOTICE = 4;</code>
     */
    public static final int NOTICE_VALUE = 4;
    /**
     *
     *
     * <pre>
     * Warning events might cause problems.
     * </pre>
     *
     * <code>WARNING = 5;</code>
     */
    public static final int WARNING_VALUE = 5;
    /**
     *
     *
     * <pre>
     * Error events are likely to cause problems.
     * </pre>
     *
     * <code>ERROR = 6;</code>
     */
    public static final int ERROR_VALUE = 6;
    /**
     *
     *
     * <pre>
     * Critical events cause more severe problems or outages.
     * </pre>
     *
     * <code>CRITICAL = 7;</code>
     */
    public static final int CRITICAL_VALUE = 7;
    /**
     *
     *
     * <pre>
     * A person must take action immediately.
     * </pre>
     *
     * <code>ALERT = 8;</code>
     */
    public static final int ALERT_VALUE = 8;
    /**
     *
     *
     * <pre>
     * One or more systems are unusable.
     * </pre>
     *
     * <code>EMERGENCY = 9;</code>
     */
    public static final int EMERGENCY_VALUE = 9;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogSeverity valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LogSeverity forNumber(int value) {
      switch (value) {
        case 0:
          return LOG_SEVERITY_UNSPECIFIED;
        case 1:
          return NONE;
        case 2:
          return DEBUG;
        case 3:
          return INFO;
        case 4:
          return NOTICE;
        case 5:
          return WARNING;
        case 6:
          return ERROR;
        case 7:
          return CRITICAL;
        case 8:
          return ALERT;
        case 9:
          return EMERGENCY;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogSeverity> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<LogSeverity> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LogSeverity>() {
          public LogSeverity findValueByNumber(int number) {
            return LogSeverity.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.eventarc.v1.LoggingConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final LogSeverity[] VALUES = values();

    public static LogSeverity valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LogSeverity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.eventarc.v1.LoggingConfig.LogSeverity)
  }

  public static final int LOG_SEVERITY_FIELD_NUMBER = 1;
  private int logSeverity_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. The minimum severity of logs that will be sent to
   * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
   * sent, unless it is NONE.
   * </pre>
   *
   * <code>
   * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for logSeverity.
   */
  @java.lang.Override
  public int getLogSeverityValue() {
    return logSeverity_;
  }
  /**
   *
   *
   * <pre>
   * Optional. The minimum severity of logs that will be sent to
   * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
   * sent, unless it is NONE.
   * </pre>
   *
   * <code>
   * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The logSeverity.
   */
  @java.lang.Override
  public com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity getLogSeverity() {
    com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity result =
        com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity.forNumber(logSeverity_);
    return result == null
        ? com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (logSeverity_
        != com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity.LOG_SEVERITY_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, logSeverity_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (logSeverity_
        != com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity.LOG_SEVERITY_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, logSeverity_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.eventarc.v1.LoggingConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.eventarc.v1.LoggingConfig other =
        (com.google.cloud.eventarc.v1.LoggingConfig) obj;

    if (logSeverity_ != other.logSeverity_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LOG_SEVERITY_FIELD_NUMBER;
    hash = (53 * hash) + logSeverity_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.eventarc.v1.LoggingConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The configuration for Platform Telemetry logging for Eventarc Advanced
   * resources.
   * </pre>
   *
   * Protobuf type {@code google.cloud.eventarc.v1.LoggingConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.eventarc.v1.LoggingConfig)
      com.google.cloud.eventarc.v1.LoggingConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.eventarc.v1.LoggingConfigProto
          .internal_static_google_cloud_eventarc_v1_LoggingConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.eventarc.v1.LoggingConfigProto
          .internal_static_google_cloud_eventarc_v1_LoggingConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.eventarc.v1.LoggingConfig.class,
              com.google.cloud.eventarc.v1.LoggingConfig.Builder.class);
    }

    // Construct using com.google.cloud.eventarc.v1.LoggingConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      logSeverity_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.eventarc.v1.LoggingConfigProto
          .internal_static_google_cloud_eventarc_v1_LoggingConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.eventarc.v1.LoggingConfig getDefaultInstanceForType() {
      return com.google.cloud.eventarc.v1.LoggingConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.eventarc.v1.LoggingConfig build() {
      com.google.cloud.eventarc.v1.LoggingConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.eventarc.v1.LoggingConfig buildPartial() {
      com.google.cloud.eventarc.v1.LoggingConfig result =
          new com.google.cloud.eventarc.v1.LoggingConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.eventarc.v1.LoggingConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.logSeverity_ = logSeverity_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.eventarc.v1.LoggingConfig) {
        return mergeFrom((com.google.cloud.eventarc.v1.LoggingConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.eventarc.v1.LoggingConfig other) {
      if (other == com.google.cloud.eventarc.v1.LoggingConfig.getDefaultInstance()) return this;
      if (other.logSeverity_ != 0) {
        setLogSeverityValue(other.getLogSeverityValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                logSeverity_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int logSeverity_ = 0;
    /**
     *
     *
     * <pre>
     * Optional. The minimum severity of logs that will be sent to
     * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
     * sent, unless it is NONE.
     * </pre>
     *
     * <code>
     * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for logSeverity.
     */
    @java.lang.Override
    public int getLogSeverityValue() {
      return logSeverity_;
    }
    /**
     *
     *
     * <pre>
     * Optional. The minimum severity of logs that will be sent to
     * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
     * sent, unless it is NONE.
     * </pre>
     *
     * <code>
     * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for logSeverity to set.
     * @return This builder for chaining.
     */
    public Builder setLogSeverityValue(int value) {
      logSeverity_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The minimum severity of logs that will be sent to
     * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
     * sent, unless it is NONE.
     * </pre>
     *
     * <code>
     * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The logSeverity.
     */
    @java.lang.Override
    public com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity getLogSeverity() {
      com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity result =
          com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity.forNumber(logSeverity_);
      return result == null
          ? com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Optional. The minimum severity of logs that will be sent to
     * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
     * sent, unless it is NONE.
     * </pre>
     *
     * <code>
     * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The logSeverity to set.
     * @return This builder for chaining.
     */
    public Builder setLogSeverity(com.google.cloud.eventarc.v1.LoggingConfig.LogSeverity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      logSeverity_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The minimum severity of logs that will be sent to
     * Stackdriver/Platform Telemetry. Logs at severitiy ≥ this value will be
     * sent, unless it is NONE.
     * </pre>
     *
     * <code>
     * .google.cloud.eventarc.v1.LoggingConfig.LogSeverity log_severity = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLogSeverity() {
      bitField0_ = (bitField0_ & ~0x00000001);
      logSeverity_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.eventarc.v1.LoggingConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.eventarc.v1.LoggingConfig)
  private static final com.google.cloud.eventarc.v1.LoggingConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.eventarc.v1.LoggingConfig();
  }

  public static com.google.cloud.eventarc.v1.LoggingConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LoggingConfig> PARSER =
      new com.google.protobuf.AbstractParser<LoggingConfig>() {
        @java.lang.Override
        public LoggingConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<LoggingConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LoggingConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.eventarc.v1.LoggingConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
