/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/identity/accesscontextmanager/v1/access_level.proto

// Protobuf Java Version: 3.25.5
package com.google.identity.accesscontextmanager.v1;

public interface BasicLevelOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.BasicLevel)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. A list of requirements for the `AccessLevel` to be granted.
   * </pre>
   *
   * <code>repeated .google.identity.accesscontextmanager.v1.Condition conditions = 1;</code>
   */
  java.util.List<com.google.identity.accesscontextmanager.v1.Condition> getConditionsList();
  /**
   *
   *
   * <pre>
   * Required. A list of requirements for the `AccessLevel` to be granted.
   * </pre>
   *
   * <code>repeated .google.identity.accesscontextmanager.v1.Condition conditions = 1;</code>
   */
  com.google.identity.accesscontextmanager.v1.Condition getConditions(int index);
  /**
   *
   *
   * <pre>
   * Required. A list of requirements for the `AccessLevel` to be granted.
   * </pre>
   *
   * <code>repeated .google.identity.accesscontextmanager.v1.Condition conditions = 1;</code>
   */
  int getConditionsCount();
  /**
   *
   *
   * <pre>
   * Required. A list of requirements for the `AccessLevel` to be granted.
   * </pre>
   *
   * <code>repeated .google.identity.accesscontextmanager.v1.Condition conditions = 1;</code>
   */
  java.util.List<? extends com.google.identity.accesscontextmanager.v1.ConditionOrBuilder>
      getConditionsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Required. A list of requirements for the `AccessLevel` to be granted.
   * </pre>
   *
   * <code>repeated .google.identity.accesscontextmanager.v1.Condition conditions = 1;</code>
   */
  com.google.identity.accesscontextmanager.v1.ConditionOrBuilder getConditionsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * How the `conditions` list should be combined to determine if a request is
   * granted this `AccessLevel`. If AND is used, each `Condition` in
   * `conditions` must be satisfied for the `AccessLevel` to be applied. If OR
   * is used, at least one `Condition` in `conditions` must be satisfied for the
   * `AccessLevel` to be applied. Default behavior is AND.
   * </pre>
   *
   * <code>
   * .google.identity.accesscontextmanager.v1.BasicLevel.ConditionCombiningFunction combining_function = 2;
   * </code>
   *
   * @return The enum numeric value on the wire for combiningFunction.
   */
  int getCombiningFunctionValue();
  /**
   *
   *
   * <pre>
   * How the `conditions` list should be combined to determine if a request is
   * granted this `AccessLevel`. If AND is used, each `Condition` in
   * `conditions` must be satisfied for the `AccessLevel` to be applied. If OR
   * is used, at least one `Condition` in `conditions` must be satisfied for the
   * `AccessLevel` to be applied. Default behavior is AND.
   * </pre>
   *
   * <code>
   * .google.identity.accesscontextmanager.v1.BasicLevel.ConditionCombiningFunction combining_function = 2;
   * </code>
   *
   * @return The combiningFunction.
   */
  com.google.identity.accesscontextmanager.v1.BasicLevel.ConditionCombiningFunction
      getCombiningFunction();
}
