/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/identity/accesscontextmanager/v1/service_perimeter.proto

// Protobuf Java Version: 3.25.5
package com.google.identity.accesscontextmanager.v1;

/**
 *
 *
 * <pre>
 * `ServicePerimeterConfig` specifies a set of Google Cloud resources that
 * describe specific Service Perimeter configuration.
 * </pre>
 *
 * Protobuf type {@code google.identity.accesscontextmanager.v1.ServicePerimeterConfig}
 */
public final class ServicePerimeterConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
    ServicePerimeterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ServicePerimeterConfig.newBuilder() to construct.
  private ServicePerimeterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ServicePerimeterConfig() {
    resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
    accessLevels_ = com.google.protobuf.LazyStringArrayList.emptyList();
    restrictedServices_ = com.google.protobuf.LazyStringArrayList.emptyList();
    ingressPolicies_ = java.util.Collections.emptyList();
    egressPolicies_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ServicePerimeterConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
        .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
        .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.class,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Specifies the types of identities that are allowed access in either
   * [IngressFrom]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
   * or [EgressFrom]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom]
   * rules.
   * </pre>
   *
   * Protobuf enum {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType}
   */
  public enum IdentityType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * No blanket identity group specified.
     * </pre>
     *
     * <code>IDENTITY_TYPE_UNSPECIFIED = 0;</code>
     */
    IDENTITY_TYPE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Authorize access from all identities outside the perimeter.
     * </pre>
     *
     * <code>ANY_IDENTITY = 1;</code>
     */
    ANY_IDENTITY(1),
    /**
     *
     *
     * <pre>
     * Authorize access from all human users outside the perimeter.
     * </pre>
     *
     * <code>ANY_USER_ACCOUNT = 2;</code>
     */
    ANY_USER_ACCOUNT(2),
    /**
     *
     *
     * <pre>
     * Authorize access from all service accounts outside the perimeter.
     * </pre>
     *
     * <code>ANY_SERVICE_ACCOUNT = 3;</code>
     */
    ANY_SERVICE_ACCOUNT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * No blanket identity group specified.
     * </pre>
     *
     * <code>IDENTITY_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int IDENTITY_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Authorize access from all identities outside the perimeter.
     * </pre>
     *
     * <code>ANY_IDENTITY = 1;</code>
     */
    public static final int ANY_IDENTITY_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Authorize access from all human users outside the perimeter.
     * </pre>
     *
     * <code>ANY_USER_ACCOUNT = 2;</code>
     */
    public static final int ANY_USER_ACCOUNT_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Authorize access from all service accounts outside the perimeter.
     * </pre>
     *
     * <code>ANY_SERVICE_ACCOUNT = 3;</code>
     */
    public static final int ANY_SERVICE_ACCOUNT_VALUE = 3;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IdentityType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IdentityType forNumber(int value) {
      switch (value) {
        case 0:
          return IDENTITY_TYPE_UNSPECIFIED;
        case 1:
          return ANY_IDENTITY;
        case 2:
          return ANY_USER_ACCOUNT;
        case 3:
          return ANY_SERVICE_ACCOUNT;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IdentityType> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<IdentityType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<IdentityType>() {
          public IdentityType findValueByNumber(int number) {
            return IdentityType.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final IdentityType[] VALUES = values();

    public static IdentityType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IdentityType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType)
  }

  public interface VpcAccessibleServicesOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Whether to restrict API calls within the Service Perimeter to the list of
     * APIs specified in 'allowed_services'.
     * </pre>
     *
     * <code>bool enable_restriction = 1;</code>
     *
     * @return The enableRestriction.
     */
    boolean getEnableRestriction();

    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @return A list containing the allowedServices.
     */
    java.util.List<java.lang.String> getAllowedServicesList();
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @return The count of allowedServices.
     */
    int getAllowedServicesCount();
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The allowedServices at the given index.
     */
    java.lang.String getAllowedServices(int index);
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the allowedServices at the given index.
     */
    com.google.protobuf.ByteString getAllowedServicesBytes(int index);
  }
  /**
   *
   *
   * <pre>
   * Specifies how APIs are allowed to communicate within the Service
   * Perimeter.
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices}
   */
  public static final class VpcAccessibleServices extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
      VpcAccessibleServicesOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use VpcAccessibleServices.newBuilder() to construct.
    private VpcAccessibleServices(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private VpcAccessibleServices() {
      allowedServices_ = com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new VpcAccessibleServices();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_VpcAccessibleServices_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_VpcAccessibleServices_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .VpcAccessibleServices.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .VpcAccessibleServices.Builder.class);
    }

    public static final int ENABLE_RESTRICTION_FIELD_NUMBER = 1;
    private boolean enableRestriction_ = false;
    /**
     *
     *
     * <pre>
     * Whether to restrict API calls within the Service Perimeter to the list of
     * APIs specified in 'allowed_services'.
     * </pre>
     *
     * <code>bool enable_restriction = 1;</code>
     *
     * @return The enableRestriction.
     */
    @java.lang.Override
    public boolean getEnableRestriction() {
      return enableRestriction_;
    }

    public static final int ALLOWED_SERVICES_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList allowedServices_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @return A list containing the allowedServices.
     */
    public com.google.protobuf.ProtocolStringList getAllowedServicesList() {
      return allowedServices_;
    }
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @return The count of allowedServices.
     */
    public int getAllowedServicesCount() {
      return allowedServices_.size();
    }
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The allowedServices at the given index.
     */
    public java.lang.String getAllowedServices(int index) {
      return allowedServices_.get(index);
    }
    /**
     *
     *
     * <pre>
     * The list of APIs usable within the Service Perimeter. Must be empty
     * unless 'enable_restriction' is True. You can specify a list of individual
     * services, as well as include the 'RESTRICTED-SERVICES' value, which
     * automatically includes all of the services protected by the perimeter.
     * </pre>
     *
     * <code>repeated string allowed_services = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the allowedServices at the given index.
     */
    public com.google.protobuf.ByteString getAllowedServicesBytes(int index) {
      return allowedServices_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (enableRestriction_ != false) {
        output.writeBool(1, enableRestriction_);
      }
      for (int i = 0; i < allowedServices_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, allowedServices_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (enableRestriction_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, enableRestriction_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allowedServices_.size(); i++) {
          dataSize += computeStringSizeNoTag(allowedServices_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAllowedServicesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .VpcAccessibleServices)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
          other =
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .VpcAccessibleServices)
                  obj;

      if (getEnableRestriction() != other.getEnableRestriction()) return false;
      if (!getAllowedServicesList().equals(other.getAllowedServicesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENABLE_RESTRICTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getEnableRestriction());
      if (getAllowedServicesCount() > 0) {
        hash = (37 * hash) + ALLOWED_SERVICES_FIELD_NUMBER;
        hash = (53 * hash) + getAllowedServicesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Specifies how APIs are allowed to communicate within the Service
     * Perimeter.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServicesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_VpcAccessibleServices_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_VpcAccessibleServices_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServices.class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServices.Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        enableRestriction_ = false;
        allowedServices_ = com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_VpcAccessibleServices_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .VpcAccessibleServices
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .VpcAccessibleServices
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .VpcAccessibleServices
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            result =
                new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServices(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
              result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.enableRestriction_ = enableRestriction_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          allowedServices_.makeImmutable();
          result.allowedServices_ = allowedServices_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServices) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .VpcAccessibleServices)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
              other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServices.getDefaultInstance()) return this;
        if (other.getEnableRestriction() != false) {
          setEnableRestriction(other.getEnableRestriction());
        }
        if (!other.allowedServices_.isEmpty()) {
          if (allowedServices_.isEmpty()) {
            allowedServices_ = other.allowedServices_;
            bitField0_ |= 0x00000002;
          } else {
            ensureAllowedServicesIsMutable();
            allowedServices_.addAll(other.allowedServices_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  enableRestriction_ = input.readBool();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureAllowedServicesIsMutable();
                  allowedServices_.add(s);
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private boolean enableRestriction_;
      /**
       *
       *
       * <pre>
       * Whether to restrict API calls within the Service Perimeter to the list of
       * APIs specified in 'allowed_services'.
       * </pre>
       *
       * <code>bool enable_restriction = 1;</code>
       *
       * @return The enableRestriction.
       */
      @java.lang.Override
      public boolean getEnableRestriction() {
        return enableRestriction_;
      }
      /**
       *
       *
       * <pre>
       * Whether to restrict API calls within the Service Perimeter to the list of
       * APIs specified in 'allowed_services'.
       * </pre>
       *
       * <code>bool enable_restriction = 1;</code>
       *
       * @param value The enableRestriction to set.
       * @return This builder for chaining.
       */
      public Builder setEnableRestriction(boolean value) {

        enableRestriction_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Whether to restrict API calls within the Service Perimeter to the list of
       * APIs specified in 'allowed_services'.
       * </pre>
       *
       * <code>bool enable_restriction = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearEnableRestriction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enableRestriction_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList allowedServices_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureAllowedServicesIsMutable() {
        if (!allowedServices_.isModifiable()) {
          allowedServices_ = new com.google.protobuf.LazyStringArrayList(allowedServices_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @return A list containing the allowedServices.
       */
      public com.google.protobuf.ProtocolStringList getAllowedServicesList() {
        allowedServices_.makeImmutable();
        return allowedServices_;
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @return The count of allowedServices.
       */
      public int getAllowedServicesCount() {
        return allowedServices_.size();
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @param index The index of the element to return.
       * @return The allowedServices at the given index.
       */
      public java.lang.String getAllowedServices(int index) {
        return allowedServices_.get(index);
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the allowedServices at the given index.
       */
      public com.google.protobuf.ByteString getAllowedServicesBytes(int index) {
        return allowedServices_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @param index The index to set the value at.
       * @param value The allowedServices to set.
       * @return This builder for chaining.
       */
      public Builder setAllowedServices(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllowedServicesIsMutable();
        allowedServices_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @param value The allowedServices to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedServices(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllowedServicesIsMutable();
        allowedServices_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @param values The allowedServices to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllowedServices(java.lang.Iterable<java.lang.String> values) {
        ensureAllowedServicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, allowedServices_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearAllowedServices() {
        allowedServices_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The list of APIs usable within the Service Perimeter. Must be empty
       * unless 'enable_restriction' is True. You can specify a list of individual
       * services, as well as include the 'RESTRICTED-SERVICES' value, which
       * automatically includes all of the services protected by the perimeter.
       * </pre>
       *
       * <code>repeated string allowed_services = 2;</code>
       *
       * @param value The bytes of the allowedServices to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedServicesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureAllowedServicesIsMutable();
        allowedServices_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .VpcAccessibleServices();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServices
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VpcAccessibleServices> PARSER =
        new com.google.protobuf.AbstractParser<VpcAccessibleServices>() {
          @java.lang.Override
          public VpcAccessibleServices parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<VpcAccessibleServices> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VpcAccessibleServices> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface MethodSelectorOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Value for `method` should be a valid method name for the corresponding
     * `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * If `*` used as value for `method`, then ALL methods and permissions are
     * allowed.
     * </pre>
     *
     * <code>string method = 1;</code>
     *
     * @return Whether the method field is set.
     */
    boolean hasMethod();
    /**
     *
     *
     * <pre>
     * Value for `method` should be a valid method name for the corresponding
     * `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * If `*` used as value for `method`, then ALL methods and permissions are
     * allowed.
     * </pre>
     *
     * <code>string method = 1;</code>
     *
     * @return The method.
     */
    java.lang.String getMethod();
    /**
     *
     *
     * <pre>
     * Value for `method` should be a valid method name for the corresponding
     * `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * If `*` used as value for `method`, then ALL methods and permissions are
     * allowed.
     * </pre>
     *
     * <code>string method = 1;</code>
     *
     * @return The bytes for method.
     */
    com.google.protobuf.ByteString getMethodBytes();

    /**
     *
     *
     * <pre>
     * Value for `permission` should be a valid Cloud IAM permission for the
     * corresponding `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * <code>string permission = 2;</code>
     *
     * @return Whether the permission field is set.
     */
    boolean hasPermission();
    /**
     *
     *
     * <pre>
     * Value for `permission` should be a valid Cloud IAM permission for the
     * corresponding `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * <code>string permission = 2;</code>
     *
     * @return The permission.
     */
    java.lang.String getPermission();
    /**
     *
     *
     * <pre>
     * Value for `permission` should be a valid Cloud IAM permission for the
     * corresponding `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * <code>string permission = 2;</code>
     *
     * @return The bytes for permission.
     */
    com.google.protobuf.ByteString getPermissionBytes();

    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector.KindCase
        getKindCase();
  }
  /**
   *
   *
   * <pre>
   * An allowed method or permission of a service specified in [ApiOperation]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector}
   */
  public static final class MethodSelector extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)
      MethodSelectorOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use MethodSelector.newBuilder() to construct.
    private MethodSelector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private MethodSelector() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new MethodSelector();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_MethodSelector_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_MethodSelector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                  .class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                  .Builder.class);
    }

    private int kindCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object kind_;

    public enum KindCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      METHOD(1),
      PERMISSION(2),
      KIND_NOT_SET(0);
      private final int value;

      private KindCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static KindCase valueOf(int value) {
        return forNumber(value);
      }

      public static KindCase forNumber(int value) {
        switch (value) {
          case 1:
            return METHOD;
          case 2:
            return PERMISSION;
          case 0:
            return KIND_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public KindCase getKindCase() {
      return KindCase.forNumber(kindCase_);
    }

    public static final int METHOD_FIELD_NUMBER = 1;
    /**
     *
     *
     * <pre>
     * Value for `method` should be a valid method name for the corresponding
     * `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * If `*` used as value for `method`, then ALL methods and permissions are
     * allowed.
     * </pre>
     *
     * <code>string method = 1;</code>
     *
     * @return Whether the method field is set.
     */
    public boolean hasMethod() {
      return kindCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * Value for `method` should be a valid method name for the corresponding
     * `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * If `*` used as value for `method`, then ALL methods and permissions are
     * allowed.
     * </pre>
     *
     * <code>string method = 1;</code>
     *
     * @return The method.
     */
    public java.lang.String getMethod() {
      java.lang.Object ref = "";
      if (kindCase_ == 1) {
        ref = kind_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (kindCase_ == 1) {
          kind_ = s;
        }
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Value for `method` should be a valid method name for the corresponding
     * `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * If `*` used as value for `method`, then ALL methods and permissions are
     * allowed.
     * </pre>
     *
     * <code>string method = 1;</code>
     *
     * @return The bytes for method.
     */
    public com.google.protobuf.ByteString getMethodBytes() {
      java.lang.Object ref = "";
      if (kindCase_ == 1) {
        ref = kind_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (kindCase_ == 1) {
          kind_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERMISSION_FIELD_NUMBER = 2;
    /**
     *
     *
     * <pre>
     * Value for `permission` should be a valid Cloud IAM permission for the
     * corresponding `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * <code>string permission = 2;</code>
     *
     * @return Whether the permission field is set.
     */
    public boolean hasPermission() {
      return kindCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * Value for `permission` should be a valid Cloud IAM permission for the
     * corresponding `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * <code>string permission = 2;</code>
     *
     * @return The permission.
     */
    public java.lang.String getPermission() {
      java.lang.Object ref = "";
      if (kindCase_ == 2) {
        ref = kind_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (kindCase_ == 2) {
          kind_ = s;
        }
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Value for `permission` should be a valid Cloud IAM permission for the
     * corresponding `service_name` in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * <code>string permission = 2;</code>
     *
     * @return The bytes for permission.
     */
    public com.google.protobuf.ByteString getPermissionBytes() {
      java.lang.Object ref = "";
      if (kindCase_ == 2) {
        ref = kind_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (kindCase_ == 2) {
          kind_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (kindCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kind_);
      }
      if (kindCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, kind_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (kindCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kind_);
      }
      if (kindCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, kind_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector) obj;

      if (!getKindCase().equals(other.getKindCase())) return false;
      switch (kindCase_) {
        case 1:
          if (!getMethod().equals(other.getMethod())) return false;
          break;
        case 2:
          if (!getPermission().equals(other.getPermission())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (kindCase_) {
        case 1:
          hash = (37 * hash) + METHOD_FIELD_NUMBER;
          hash = (53 * hash) + getMethod().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PERMISSION_FIELD_NUMBER;
          hash = (53 * hash) + getPermission().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * An allowed method or permission of a service specified in [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_MethodSelector_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_MethodSelector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                    .class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        kindCase_ = 0;
        kind_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_MethodSelector_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector(
                this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
              result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
              result) {
        result.kindCase_ = kindCase_;
        result.kind_ = this.kind_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                .getDefaultInstance()) return this;
        switch (other.getKindCase()) {
          case METHOD:
            {
              kindCase_ = 1;
              kind_ = other.kind_;
              onChanged();
              break;
            }
          case PERMISSION:
            {
              kindCase_ = 2;
              kind_ = other.kind_;
              onChanged();
              break;
            }
          case KIND_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  kindCase_ = 1;
                  kind_ = s;
                  break;
                } // case 10
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  kindCase_ = 2;
                  kind_ = s;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int kindCase_ = 0;
      private java.lang.Object kind_;

      public KindCase getKindCase() {
        return KindCase.forNumber(kindCase_);
      }

      public Builder clearKind() {
        kindCase_ = 0;
        kind_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       *
       *
       * <pre>
       * Value for `method` should be a valid method name for the corresponding
       * `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * If `*` used as value for `method`, then ALL methods and permissions are
       * allowed.
       * </pre>
       *
       * <code>string method = 1;</code>
       *
       * @return Whether the method field is set.
       */
      @java.lang.Override
      public boolean hasMethod() {
        return kindCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * Value for `method` should be a valid method name for the corresponding
       * `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * If `*` used as value for `method`, then ALL methods and permissions are
       * allowed.
       * </pre>
       *
       * <code>string method = 1;</code>
       *
       * @return The method.
       */
      @java.lang.Override
      public java.lang.String getMethod() {
        java.lang.Object ref = "";
        if (kindCase_ == 1) {
          ref = kind_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (kindCase_ == 1) {
            kind_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Value for `method` should be a valid method name for the corresponding
       * `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * If `*` used as value for `method`, then ALL methods and permissions are
       * allowed.
       * </pre>
       *
       * <code>string method = 1;</code>
       *
       * @return The bytes for method.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMethodBytes() {
        java.lang.Object ref = "";
        if (kindCase_ == 1) {
          ref = kind_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          if (kindCase_ == 1) {
            kind_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Value for `method` should be a valid method name for the corresponding
       * `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * If `*` used as value for `method`, then ALL methods and permissions are
       * allowed.
       * </pre>
       *
       * <code>string method = 1;</code>
       *
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        kindCase_ = 1;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Value for `method` should be a valid method name for the corresponding
       * `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * If `*` used as value for `method`, then ALL methods and permissions are
       * allowed.
       * </pre>
       *
       * <code>string method = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        if (kindCase_ == 1) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Value for `method` should be a valid method name for the corresponding
       * `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * If `*` used as value for `method`, then ALL methods and permissions are
       * allowed.
       * </pre>
       *
       * <code>string method = 1;</code>
       *
       * @param value The bytes for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        kindCase_ = 1;
        kind_ = value;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Value for `permission` should be a valid Cloud IAM permission for the
       * corresponding `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * </pre>
       *
       * <code>string permission = 2;</code>
       *
       * @return Whether the permission field is set.
       */
      @java.lang.Override
      public boolean hasPermission() {
        return kindCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * Value for `permission` should be a valid Cloud IAM permission for the
       * corresponding `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * </pre>
       *
       * <code>string permission = 2;</code>
       *
       * @return The permission.
       */
      @java.lang.Override
      public java.lang.String getPermission() {
        java.lang.Object ref = "";
        if (kindCase_ == 2) {
          ref = kind_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (kindCase_ == 2) {
            kind_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Value for `permission` should be a valid Cloud IAM permission for the
       * corresponding `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * </pre>
       *
       * <code>string permission = 2;</code>
       *
       * @return The bytes for permission.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPermissionBytes() {
        java.lang.Object ref = "";
        if (kindCase_ == 2) {
          ref = kind_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          if (kindCase_ == 2) {
            kind_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Value for `permission` should be a valid Cloud IAM permission for the
       * corresponding `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * </pre>
       *
       * <code>string permission = 2;</code>
       *
       * @param value The permission to set.
       * @return This builder for chaining.
       */
      public Builder setPermission(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        kindCase_ = 2;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Value for `permission` should be a valid Cloud IAM permission for the
       * corresponding `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * </pre>
       *
       * <code>string permission = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPermission() {
        if (kindCase_ == 2) {
          kindCase_ = 0;
          kind_ = null;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Value for `permission` should be a valid Cloud IAM permission for the
       * corresponding `service_name` in [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation].
       * </pre>
       *
       * <code>string permission = 2;</code>
       *
       * @param value The bytes for permission to set.
       * @return This builder for chaining.
       */
      public Builder setPermissionBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        kindCase_ = 2;
        kind_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .MethodSelector
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MethodSelector> PARSER =
        new com.google.protobuf.AbstractParser<MethodSelector>() {
          @java.lang.Override
          public MethodSelector parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<MethodSelector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MethodSelector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ApiOperationOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The name of the API whose methods or permissions the [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * or [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * want to allow. A single [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * with `service_name` field set to `*` will allow all methods AND
     * permissions for all services.
     * </pre>
     *
     * <code>string service_name = 1;</code>
     *
     * @return The serviceName.
     */
    java.lang.String getServiceName();
    /**
     *
     *
     * <pre>
     * The name of the API whose methods or permissions the [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * or [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * want to allow. A single [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * with `service_name` field set to `*` will allow all methods AND
     * permissions for all services.
     * </pre>
     *
     * <code>string service_name = 1;</code>
     *
     * @return The bytes for serviceName.
     */
    com.google.protobuf.ByteString getServiceNameBytes();

    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector>
        getMethodSelectorsList();
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        getMethodSelectors(int index);
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    int getMethodSelectorsCount();
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .MethodSelectorOrBuilder>
        getMethodSelectorsOrBuilderList();
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelectorOrBuilder
        getMethodSelectorsOrBuilder(int index);
  }
  /**
   *
   *
   * <pre>
   * Identification for an API Operation.
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation}
   */
  public static final class ApiOperation extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)
      ApiOperationOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ApiOperation.newBuilder() to construct.
    private ApiOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ApiOperation() {
      serviceName_ = "";
      methodSelectors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ApiOperation();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_ApiOperation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_ApiOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder.class);
    }

    public static final int SERVICE_NAME_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object serviceName_ = "";
    /**
     *
     *
     * <pre>
     * The name of the API whose methods or permissions the [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * or [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * want to allow. A single [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * with `service_name` field set to `*` will allow all methods AND
     * permissions for all services.
     * </pre>
     *
     * <code>string service_name = 1;</code>
     *
     * @return The serviceName.
     */
    @java.lang.Override
    public java.lang.String getServiceName() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of the API whose methods or permissions the [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * or [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * want to allow. A single [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * with `service_name` field set to `*` will allow all methods AND
     * permissions for all services.
     * </pre>
     *
     * <code>string service_name = 1;</code>
     *
     * @return The bytes for serviceName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getServiceNameBytes() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHOD_SELECTORS_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector>
        methodSelectors_;
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector>
        getMethodSelectorsList() {
      return methodSelectors_;
    }
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .MethodSelectorOrBuilder>
        getMethodSelectorsOrBuilderList() {
      return methodSelectors_;
    }
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    @java.lang.Override
    public int getMethodSelectorsCount() {
      return methodSelectors_.size();
    }
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
        getMethodSelectors(int index) {
      return methodSelectors_.get(index);
    }
    /**
     *
     *
     * <pre>
     * API methods or permissions to allow. Method or permission must belong to
     * the service specified by `service_name` field. A single [MethodSelector]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
     * entry with `*` specified for the `method` field will allow all methods
     * AND permissions for the service specified in `service_name`.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .MethodSelectorOrBuilder
        getMethodSelectorsOrBuilder(int index) {
      return methodSelectors_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serviceName_);
      }
      for (int i = 0; i < methodSelectors_.size(); i++) {
        output.writeMessage(2, methodSelectors_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serviceName_);
      }
      for (int i = 0; i < methodSelectors_.size(); i++) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(2, methodSelectors_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation) obj;

      if (!getServiceName().equals(other.getServiceName())) return false;
      if (!getMethodSelectorsList().equals(other.getMethodSelectorsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getServiceName().hashCode();
      if (getMethodSelectorsCount() > 0) {
        hash = (37 * hash) + METHOD_SELECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getMethodSelectorsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Identification for an API Operation.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_ApiOperation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_ApiOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                    .class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        serviceName_ = "";
        if (methodSelectorsBuilder_ == null) {
          methodSelectors_ = java.util.Collections.emptyList();
        } else {
          methodSelectors_ = null;
          methodSelectorsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_ApiOperation_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation(
                this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation result) {
        if (methodSelectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            methodSelectors_ = java.util.Collections.unmodifiableList(methodSelectors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.methodSelectors_ = methodSelectors_;
        } else {
          result.methodSelectors_ = methodSelectorsBuilder_.build();
        }
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.serviceName_ = serviceName_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                .getDefaultInstance()) return this;
        if (!other.getServiceName().isEmpty()) {
          serviceName_ = other.serviceName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (methodSelectorsBuilder_ == null) {
          if (!other.methodSelectors_.isEmpty()) {
            if (methodSelectors_.isEmpty()) {
              methodSelectors_ = other.methodSelectors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMethodSelectorsIsMutable();
              methodSelectors_.addAll(other.methodSelectors_);
            }
            onChanged();
          }
        } else {
          if (!other.methodSelectors_.isEmpty()) {
            if (methodSelectorsBuilder_.isEmpty()) {
              methodSelectorsBuilder_.dispose();
              methodSelectorsBuilder_ = null;
              methodSelectors_ = other.methodSelectors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              methodSelectorsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getMethodSelectorsFieldBuilder()
                      : null;
            } else {
              methodSelectorsBuilder_.addAllMessages(other.methodSelectors_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  serviceName_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                      m =
                          input.readMessage(
                              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                                  .MethodSelector.parser(),
                              extensionRegistry);
                  if (methodSelectorsBuilder_ == null) {
                    ensureMethodSelectorsIsMutable();
                    methodSelectors_.add(m);
                  } else {
                    methodSelectorsBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object serviceName_ = "";
      /**
       *
       *
       * <pre>
       * The name of the API whose methods or permissions the [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * or [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * want to allow. A single [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * with `service_name` field set to `*` will allow all methods AND
       * permissions for all services.
       * </pre>
       *
       * <code>string service_name = 1;</code>
       *
       * @return The serviceName.
       */
      public java.lang.String getServiceName() {
        java.lang.Object ref = serviceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The name of the API whose methods or permissions the [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * or [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * want to allow. A single [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * with `service_name` field set to `*` will allow all methods AND
       * permissions for all services.
       * </pre>
       *
       * <code>string service_name = 1;</code>
       *
       * @return The bytes for serviceName.
       */
      public com.google.protobuf.ByteString getServiceNameBytes() {
        java.lang.Object ref = serviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          serviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The name of the API whose methods or permissions the [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * or [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * want to allow. A single [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * with `service_name` field set to `*` will allow all methods AND
       * permissions for all services.
       * </pre>
       *
       * <code>string service_name = 1;</code>
       *
       * @param value The serviceName to set.
       * @return This builder for chaining.
       */
      public Builder setServiceName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The name of the API whose methods or permissions the [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * or [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * want to allow. A single [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * with `service_name` field set to `*` will allow all methods AND
       * permissions for all services.
       * </pre>
       *
       * <code>string service_name = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearServiceName() {
        serviceName_ = getDefaultInstance().getServiceName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The name of the API whose methods or permissions the [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * or [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * want to allow. A single [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * with `service_name` field set to `*` will allow all methods AND
       * permissions for all services.
       * </pre>
       *
       * <code>string service_name = 1;</code>
       *
       * @param value The bytes for serviceName to set.
       * @return This builder for chaining.
       */
      public Builder setServiceNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        serviceName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector>
          methodSelectors_ = java.util.Collections.emptyList();

      private void ensureMethodSelectorsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          methodSelectors_ =
              new java.util.ArrayList<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .MethodSelector>(methodSelectors_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .MethodSelectorOrBuilder>
          methodSelectorsBuilder_;

      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector>
          getMethodSelectorsList() {
        if (methodSelectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(methodSelectors_);
        } else {
          return methodSelectorsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public int getMethodSelectorsCount() {
        if (methodSelectorsBuilder_ == null) {
          return methodSelectors_.size();
        } else {
          return methodSelectorsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
          getMethodSelectors(int index) {
        if (methodSelectorsBuilder_ == null) {
          return methodSelectors_.get(index);
        } else {
          return methodSelectorsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder setMethodSelectors(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector value) {
        if (methodSelectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodSelectorsIsMutable();
          methodSelectors_.set(index, value);
          onChanged();
        } else {
          methodSelectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder setMethodSelectors(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector.Builder
              builderForValue) {
        if (methodSelectorsBuilder_ == null) {
          ensureMethodSelectorsIsMutable();
          methodSelectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          methodSelectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder addMethodSelectors(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector value) {
        if (methodSelectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodSelectorsIsMutable();
          methodSelectors_.add(value);
          onChanged();
        } else {
          methodSelectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder addMethodSelectors(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector value) {
        if (methodSelectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodSelectorsIsMutable();
          methodSelectors_.add(index, value);
          onChanged();
        } else {
          methodSelectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder addMethodSelectors(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector.Builder
              builderForValue) {
        if (methodSelectorsBuilder_ == null) {
          ensureMethodSelectorsIsMutable();
          methodSelectors_.add(builderForValue.build());
          onChanged();
        } else {
          methodSelectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder addMethodSelectors(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector.Builder
              builderForValue) {
        if (methodSelectorsBuilder_ == null) {
          ensureMethodSelectorsIsMutable();
          methodSelectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          methodSelectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder addAllMethodSelectors(
          java.lang.Iterable<
                  ? extends
                      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                          .MethodSelector>
              values) {
        if (methodSelectorsBuilder_ == null) {
          ensureMethodSelectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, methodSelectors_);
          onChanged();
        } else {
          methodSelectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder clearMethodSelectors() {
        if (methodSelectorsBuilder_ == null) {
          methodSelectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          methodSelectorsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public Builder removeMethodSelectors(int index) {
        if (methodSelectorsBuilder_ == null) {
          ensureMethodSelectorsIsMutable();
          methodSelectors_.remove(index);
          onChanged();
        } else {
          methodSelectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
              .Builder
          getMethodSelectorsBuilder(int index) {
        return getMethodSelectorsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .MethodSelectorOrBuilder
          getMethodSelectorsOrBuilder(int index) {
        if (methodSelectorsBuilder_ == null) {
          return methodSelectors_.get(index);
        } else {
          return methodSelectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public java.util.List<
              ? extends
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .MethodSelectorOrBuilder>
          getMethodSelectorsOrBuilderList() {
        if (methodSelectorsBuilder_ != null) {
          return methodSelectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(methodSelectors_);
        }
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
              .Builder
          addMethodSelectorsBuilder() {
        return getMethodSelectorsFieldBuilder()
            .addBuilder(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
              .Builder
          addMethodSelectorsBuilder(int index) {
        return getMethodSelectorsFieldBuilder()
            .addBuilder(
                index,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * API methods or permissions to allow. Method or permission must belong to
       * the service specified by `service_name` field. A single [MethodSelector]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector]
       * entry with `*` specified for the `method` field will allow all methods
       * AND permissions for the service specified in `service_name`.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector method_selectors = 2;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                  .Builder>
          getMethodSelectorsBuilderList() {
        return getMethodSelectorsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .MethodSelectorOrBuilder>
          getMethodSelectorsFieldBuilder() {
        if (methodSelectorsBuilder_ == null) {
          methodSelectorsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.MethodSelector
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .MethodSelectorOrBuilder>(
                  methodSelectors_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          methodSelectors_ = null;
        }
        return methodSelectorsBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .ApiOperation
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApiOperation> PARSER =
        new com.google.protobuf.AbstractParser<ApiOperation>() {
          @java.lang.Override
          public ApiOperation parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ApiOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ApiOperation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface IngressSourceOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * An [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] resource
     * name that allow resources within the [ServicePerimeters]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
     * accessed from the internet. [AccessLevels]
     * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
     * be in the same policy as this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * Referencing a nonexistent [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
     * an error. If no [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
     * specified for `access_level`, then all [IngressSources]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
     * will be allowed.
     * </pre>
     *
     * <code>string access_level = 1;</code>
     *
     * @return Whether the accessLevel field is set.
     */
    boolean hasAccessLevel();
    /**
     *
     *
     * <pre>
     * An [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] resource
     * name that allow resources within the [ServicePerimeters]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
     * accessed from the internet. [AccessLevels]
     * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
     * be in the same policy as this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * Referencing a nonexistent [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
     * an error. If no [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
     * specified for `access_level`, then all [IngressSources]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
     * will be allowed.
     * </pre>
     *
     * <code>string access_level = 1;</code>
     *
     * @return The accessLevel.
     */
    java.lang.String getAccessLevel();
    /**
     *
     *
     * <pre>
     * An [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] resource
     * name that allow resources within the [ServicePerimeters]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
     * accessed from the internet. [AccessLevels]
     * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
     * be in the same policy as this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * Referencing a nonexistent [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
     * an error. If no [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
     * specified for `access_level`, then all [IngressSources]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
     * will be allowed.
     * </pre>
     *
     * <code>string access_level = 1;</code>
     *
     * @return The bytes for accessLevel.
     */
    com.google.protobuf.ByteString getAccessLevelBytes();

    /**
     *
     *
     * <pre>
     * A Google Cloud resource that is allowed to ingress the perimeter.
     * Requests from these resources will be allowed to access perimeter data.
     * Currently only projects are allowed.
     * Format: `projects/{project_number}`
     * The project may be in any Google Cloud organization, not just the
     * organization that the perimeter is defined in. `*` is not allowed, the
     * case of allowing all Google Cloud resources only is not supported.
     * </pre>
     *
     * <code>string resource = 2;</code>
     *
     * @return Whether the resource field is set.
     */
    boolean hasResource();
    /**
     *
     *
     * <pre>
     * A Google Cloud resource that is allowed to ingress the perimeter.
     * Requests from these resources will be allowed to access perimeter data.
     * Currently only projects are allowed.
     * Format: `projects/{project_number}`
     * The project may be in any Google Cloud organization, not just the
     * organization that the perimeter is defined in. `*` is not allowed, the
     * case of allowing all Google Cloud resources only is not supported.
     * </pre>
     *
     * <code>string resource = 2;</code>
     *
     * @return The resource.
     */
    java.lang.String getResource();
    /**
     *
     *
     * <pre>
     * A Google Cloud resource that is allowed to ingress the perimeter.
     * Requests from these resources will be allowed to access perimeter data.
     * Currently only projects are allowed.
     * Format: `projects/{project_number}`
     * The project may be in any Google Cloud organization, not just the
     * organization that the perimeter is defined in. `*` is not allowed, the
     * case of allowing all Google Cloud resources only is not supported.
     * </pre>
     *
     * <code>string resource = 2;</code>
     *
     * @return The bytes for resource.
     */
    com.google.protobuf.ByteString getResourceBytes();

    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource.SourceCase
        getSourceCase();
  }
  /**
   *
   *
   * <pre>
   * The source that [IngressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * authorizes access from.
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource}
   */
  public static final class IngressSource extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)
      IngressSourceOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use IngressSource.newBuilder() to construct.
    private IngressSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private IngressSource() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new IngressSource();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                  .class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                  .Builder.class);
    }

    private int sourceCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object source_;

    public enum SourceCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ACCESS_LEVEL(1),
      RESOURCE(2),
      SOURCE_NOT_SET(0);
      private final int value;

      private SourceCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SourceCase valueOf(int value) {
        return forNumber(value);
      }

      public static SourceCase forNumber(int value) {
        switch (value) {
          case 1:
            return ACCESS_LEVEL;
          case 2:
            return RESOURCE;
          case 0:
            return SOURCE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public SourceCase getSourceCase() {
      return SourceCase.forNumber(sourceCase_);
    }

    public static final int ACCESS_LEVEL_FIELD_NUMBER = 1;
    /**
     *
     *
     * <pre>
     * An [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] resource
     * name that allow resources within the [ServicePerimeters]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
     * accessed from the internet. [AccessLevels]
     * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
     * be in the same policy as this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * Referencing a nonexistent [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
     * an error. If no [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
     * specified for `access_level`, then all [IngressSources]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
     * will be allowed.
     * </pre>
     *
     * <code>string access_level = 1;</code>
     *
     * @return Whether the accessLevel field is set.
     */
    public boolean hasAccessLevel() {
      return sourceCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * An [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] resource
     * name that allow resources within the [ServicePerimeters]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
     * accessed from the internet. [AccessLevels]
     * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
     * be in the same policy as this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * Referencing a nonexistent [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
     * an error. If no [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
     * specified for `access_level`, then all [IngressSources]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
     * will be allowed.
     * </pre>
     *
     * <code>string access_level = 1;</code>
     *
     * @return The accessLevel.
     */
    public java.lang.String getAccessLevel() {
      java.lang.Object ref = "";
      if (sourceCase_ == 1) {
        ref = source_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (sourceCase_ == 1) {
          source_ = s;
        }
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * An [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] resource
     * name that allow resources within the [ServicePerimeters]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
     * accessed from the internet. [AccessLevels]
     * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
     * be in the same policy as this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * Referencing a nonexistent [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
     * an error. If no [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
     * specified for `access_level`, then all [IngressSources]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
     * will be allowed.
     * </pre>
     *
     * <code>string access_level = 1;</code>
     *
     * @return The bytes for accessLevel.
     */
    public com.google.protobuf.ByteString getAccessLevelBytes() {
      java.lang.Object ref = "";
      if (sourceCase_ == 1) {
        ref = source_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (sourceCase_ == 1) {
          source_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCE_FIELD_NUMBER = 2;
    /**
     *
     *
     * <pre>
     * A Google Cloud resource that is allowed to ingress the perimeter.
     * Requests from these resources will be allowed to access perimeter data.
     * Currently only projects are allowed.
     * Format: `projects/{project_number}`
     * The project may be in any Google Cloud organization, not just the
     * organization that the perimeter is defined in. `*` is not allowed, the
     * case of allowing all Google Cloud resources only is not supported.
     * </pre>
     *
     * <code>string resource = 2;</code>
     *
     * @return Whether the resource field is set.
     */
    public boolean hasResource() {
      return sourceCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * A Google Cloud resource that is allowed to ingress the perimeter.
     * Requests from these resources will be allowed to access perimeter data.
     * Currently only projects are allowed.
     * Format: `projects/{project_number}`
     * The project may be in any Google Cloud organization, not just the
     * organization that the perimeter is defined in. `*` is not allowed, the
     * case of allowing all Google Cloud resources only is not supported.
     * </pre>
     *
     * <code>string resource = 2;</code>
     *
     * @return The resource.
     */
    public java.lang.String getResource() {
      java.lang.Object ref = "";
      if (sourceCase_ == 2) {
        ref = source_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (sourceCase_ == 2) {
          source_ = s;
        }
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * A Google Cloud resource that is allowed to ingress the perimeter.
     * Requests from these resources will be allowed to access perimeter data.
     * Currently only projects are allowed.
     * Format: `projects/{project_number}`
     * The project may be in any Google Cloud organization, not just the
     * organization that the perimeter is defined in. `*` is not allowed, the
     * case of allowing all Google Cloud resources only is not supported.
     * </pre>
     *
     * <code>string resource = 2;</code>
     *
     * @return The bytes for resource.
     */
    public com.google.protobuf.ByteString getResourceBytes() {
      java.lang.Object ref = "";
      if (sourceCase_ == 2) {
        ref = source_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (sourceCase_ == 2) {
          source_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (sourceCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, source_);
      }
      if (sourceCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, source_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sourceCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, source_);
      }
      if (sourceCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, source_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource) obj;

      if (!getSourceCase().equals(other.getSourceCase())) return false;
      switch (sourceCase_) {
        case 1:
          if (!getAccessLevel().equals(other.getAccessLevel())) return false;
          break;
        case 2:
          if (!getResource().equals(other.getResource())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sourceCase_) {
        case 1:
          hash = (37 * hash) + ACCESS_LEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getAccessLevel().hashCode();
          break;
        case 2:
          hash = (37 * hash) + RESOURCE_FIELD_NUMBER;
          hash = (53 * hash) + getResource().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The source that [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressSource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                    .class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sourceCase_ = 0;
        source_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressSource_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource(
                this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource result) {
        result.sourceCase_ = sourceCase_;
        result.source_ = this.source_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                .getDefaultInstance()) return this;
        switch (other.getSourceCase()) {
          case ACCESS_LEVEL:
            {
              sourceCase_ = 1;
              source_ = other.source_;
              onChanged();
              break;
            }
          case RESOURCE:
            {
              sourceCase_ = 2;
              source_ = other.source_;
              onChanged();
              break;
            }
          case SOURCE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  sourceCase_ = 1;
                  source_ = s;
                  break;
                } // case 10
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  sourceCase_ = 2;
                  source_ = s;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int sourceCase_ = 0;
      private java.lang.Object source_;

      public SourceCase getSourceCase() {
        return SourceCase.forNumber(sourceCase_);
      }

      public Builder clearSource() {
        sourceCase_ = 0;
        source_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       *
       *
       * <pre>
       * An [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] resource
       * name that allow resources within the [ServicePerimeters]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
       * accessed from the internet. [AccessLevels]
       * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
       * be in the same policy as this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * Referencing a nonexistent [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
       * an error. If no [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] names are
       * listed, resources within the perimeter can only be accessed via Google
       * Cloud calls with request origins within the perimeter. Example:
       * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
       * specified for `access_level`, then all [IngressSources]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
       * will be allowed.
       * </pre>
       *
       * <code>string access_level = 1;</code>
       *
       * @return Whether the accessLevel field is set.
       */
      @java.lang.Override
      public boolean hasAccessLevel() {
        return sourceCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * An [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] resource
       * name that allow resources within the [ServicePerimeters]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
       * accessed from the internet. [AccessLevels]
       * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
       * be in the same policy as this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * Referencing a nonexistent [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
       * an error. If no [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] names are
       * listed, resources within the perimeter can only be accessed via Google
       * Cloud calls with request origins within the perimeter. Example:
       * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
       * specified for `access_level`, then all [IngressSources]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
       * will be allowed.
       * </pre>
       *
       * <code>string access_level = 1;</code>
       *
       * @return The accessLevel.
       */
      @java.lang.Override
      public java.lang.String getAccessLevel() {
        java.lang.Object ref = "";
        if (sourceCase_ == 1) {
          ref = source_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (sourceCase_ == 1) {
            source_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * An [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] resource
       * name that allow resources within the [ServicePerimeters]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
       * accessed from the internet. [AccessLevels]
       * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
       * be in the same policy as this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * Referencing a nonexistent [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
       * an error. If no [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] names are
       * listed, resources within the perimeter can only be accessed via Google
       * Cloud calls with request origins within the perimeter. Example:
       * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
       * specified for `access_level`, then all [IngressSources]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
       * will be allowed.
       * </pre>
       *
       * <code>string access_level = 1;</code>
       *
       * @return The bytes for accessLevel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAccessLevelBytes() {
        java.lang.Object ref = "";
        if (sourceCase_ == 1) {
          ref = source_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          if (sourceCase_ == 1) {
            source_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * An [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] resource
       * name that allow resources within the [ServicePerimeters]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
       * accessed from the internet. [AccessLevels]
       * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
       * be in the same policy as this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * Referencing a nonexistent [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
       * an error. If no [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] names are
       * listed, resources within the perimeter can only be accessed via Google
       * Cloud calls with request origins within the perimeter. Example:
       * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
       * specified for `access_level`, then all [IngressSources]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
       * will be allowed.
       * </pre>
       *
       * <code>string access_level = 1;</code>
       *
       * @param value The accessLevel to set.
       * @return This builder for chaining.
       */
      public Builder setAccessLevel(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourceCase_ = 1;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * An [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] resource
       * name that allow resources within the [ServicePerimeters]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
       * accessed from the internet. [AccessLevels]
       * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
       * be in the same policy as this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * Referencing a nonexistent [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
       * an error. If no [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] names are
       * listed, resources within the perimeter can only be accessed via Google
       * Cloud calls with request origins within the perimeter. Example:
       * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
       * specified for `access_level`, then all [IngressSources]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
       * will be allowed.
       * </pre>
       *
       * <code>string access_level = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearAccessLevel() {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * An [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] resource
       * name that allow resources within the [ServicePerimeters]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] to be
       * accessed from the internet. [AccessLevels]
       * [google.identity.accesscontextmanager.v1.AccessLevel] listed must
       * be in the same policy as this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * Referencing a nonexistent [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] will cause
       * an error. If no [AccessLevel]
       * [google.identity.accesscontextmanager.v1.AccessLevel] names are
       * listed, resources within the perimeter can only be accessed via Google
       * Cloud calls with request origins within the perimeter. Example:
       * `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is
       * specified for `access_level`, then all [IngressSources]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource]
       * will be allowed.
       * </pre>
       *
       * <code>string access_level = 1;</code>
       *
       * @param value The bytes for accessLevel to set.
       * @return This builder for chaining.
       */
      public Builder setAccessLevelBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        sourceCase_ = 1;
        source_ = value;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * A Google Cloud resource that is allowed to ingress the perimeter.
       * Requests from these resources will be allowed to access perimeter data.
       * Currently only projects are allowed.
       * Format: `projects/{project_number}`
       * The project may be in any Google Cloud organization, not just the
       * organization that the perimeter is defined in. `*` is not allowed, the
       * case of allowing all Google Cloud resources only is not supported.
       * </pre>
       *
       * <code>string resource = 2;</code>
       *
       * @return Whether the resource field is set.
       */
      @java.lang.Override
      public boolean hasResource() {
        return sourceCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * A Google Cloud resource that is allowed to ingress the perimeter.
       * Requests from these resources will be allowed to access perimeter data.
       * Currently only projects are allowed.
       * Format: `projects/{project_number}`
       * The project may be in any Google Cloud organization, not just the
       * organization that the perimeter is defined in. `*` is not allowed, the
       * case of allowing all Google Cloud resources only is not supported.
       * </pre>
       *
       * <code>string resource = 2;</code>
       *
       * @return The resource.
       */
      @java.lang.Override
      public java.lang.String getResource() {
        java.lang.Object ref = "";
        if (sourceCase_ == 2) {
          ref = source_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (sourceCase_ == 2) {
            source_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * A Google Cloud resource that is allowed to ingress the perimeter.
       * Requests from these resources will be allowed to access perimeter data.
       * Currently only projects are allowed.
       * Format: `projects/{project_number}`
       * The project may be in any Google Cloud organization, not just the
       * organization that the perimeter is defined in. `*` is not allowed, the
       * case of allowing all Google Cloud resources only is not supported.
       * </pre>
       *
       * <code>string resource = 2;</code>
       *
       * @return The bytes for resource.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getResourceBytes() {
        java.lang.Object ref = "";
        if (sourceCase_ == 2) {
          ref = source_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          if (sourceCase_ == 2) {
            source_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * A Google Cloud resource that is allowed to ingress the perimeter.
       * Requests from these resources will be allowed to access perimeter data.
       * Currently only projects are allowed.
       * Format: `projects/{project_number}`
       * The project may be in any Google Cloud organization, not just the
       * organization that the perimeter is defined in. `*` is not allowed, the
       * case of allowing all Google Cloud resources only is not supported.
       * </pre>
       *
       * <code>string resource = 2;</code>
       *
       * @param value The resource to set.
       * @return This builder for chaining.
       */
      public Builder setResource(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourceCase_ = 2;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A Google Cloud resource that is allowed to ingress the perimeter.
       * Requests from these resources will be allowed to access perimeter data.
       * Currently only projects are allowed.
       * Format: `projects/{project_number}`
       * The project may be in any Google Cloud organization, not just the
       * organization that the perimeter is defined in. `*` is not allowed, the
       * case of allowing all Google Cloud resources only is not supported.
       * </pre>
       *
       * <code>string resource = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearResource() {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A Google Cloud resource that is allowed to ingress the perimeter.
       * Requests from these resources will be allowed to access perimeter data.
       * Currently only projects are allowed.
       * Format: `projects/{project_number}`
       * The project may be in any Google Cloud organization, not just the
       * organization that the perimeter is defined in. `*` is not allowed, the
       * case of allowing all Google Cloud resources only is not supported.
       * </pre>
       *
       * <code>string resource = 2;</code>
       *
       * @param value The bytes for resource to set.
       * @return This builder for chaining.
       */
      public Builder setResourceBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        sourceCase_ = 2;
        source_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .IngressSource
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressSource> PARSER =
        new com.google.protobuf.AbstractParser<IngressSource>() {
          @java.lang.Override
          public IngressSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<IngressSource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressSource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface IngressFromOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    java.util.List<com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource>
        getSourcesList();
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource getSources(
        int index);
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    int getSourcesCount();
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .IngressSourceOrBuilder>
        getSourcesOrBuilderList();
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSourceOrBuilder
        getSourcesOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @return A list containing the identities.
     */
    java.util.List<java.lang.String> getIdentitiesList();
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @return The count of identities.
     */
    int getIdentitiesCount();
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The identities at the given index.
     */
    java.lang.String getIdentities(int index);
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the identities at the given index.
     */
    com.google.protobuf.ByteString getIdentitiesBytes(int index);

    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access from outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
     * </code>
     *
     * @return The enum numeric value on the wire for identityType.
     */
    int getIdentityTypeValue();
    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access from outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
     * </code>
     *
     * @return The identityType.
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
        getIdentityType();
  }
  /**
   *
   *
   * <pre>
   * Defines the conditions under which an [IngressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * matches a request. Conditions are based on information about the source of
   * the request. The request must satisfy what is defined in `sources` AND
   * identity related fields in order to match.
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom}
   */
  public static final class IngressFrom extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)
      IngressFromOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use IngressFrom.newBuilder() to construct.
    private IngressFrom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private IngressFrom() {
      sources_ = java.util.Collections.emptyList();
      identities_ = com.google.protobuf.LazyStringArrayList.emptyList();
      identityType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new IngressFrom();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressFrom_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressFrom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom.Builder
                  .class);
    }

    public static final int SOURCES_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource>
        sources_;
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource>
        getSourcesList() {
      return sources_;
    }
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .IngressSourceOrBuilder>
        getSourcesOrBuilderList() {
      return sources_;
    }
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    @java.lang.Override
    public int getSourcesCount() {
      return sources_.size();
    }
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
        getSources(int index) {
      return sources_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Sources that this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * authorizes access from.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSourceOrBuilder
        getSourcesOrBuilder(int index) {
      return sources_.get(index);
    }

    public static final int IDENTITIES_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList identities_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @return A list containing the identities.
     */
    public com.google.protobuf.ProtocolStringList getIdentitiesList() {
      return identities_;
    }
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @return The count of identities.
     */
    public int getIdentitiesCount() {
      return identities_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The identities at the given index.
     */
    public java.lang.String getIdentities(int index) {
      return identities_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this ingress
     * policy. Should be in the format of email address. The email address
     * should represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the identities at the given index.
     */
    public com.google.protobuf.ByteString getIdentitiesBytes(int index) {
      return identities_.getByteString(index);
    }

    public static final int IDENTITY_TYPE_FIELD_NUMBER = 3;
    private int identityType_ = 0;
    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access from outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
     * </code>
     *
     * @return The enum numeric value on the wire for identityType.
     */
    @java.lang.Override
    public int getIdentityTypeValue() {
      return identityType_;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access from outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
     * </code>
     *
     * @return The identityType.
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
        getIdentityType() {
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType result =
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType.forNumber(
              identityType_);
      return result == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
              .UNRECOGNIZED
          : result;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < sources_.size(); i++) {
        output.writeMessage(1, sources_.get(i));
      }
      for (int i = 0; i < identities_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, identities_.getRaw(i));
      }
      if (identityType_
          != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
              .IDENTITY_TYPE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(3, identityType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < sources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, sources_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < identities_.size(); i++) {
          dataSize += computeStringSizeNoTag(identities_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIdentitiesList().size();
      }
      if (identityType_
          != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
              .IDENTITY_TYPE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, identityType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom) obj;

      if (!getSourcesList().equals(other.getSourcesList())) return false;
      if (!getIdentitiesList().equals(other.getIdentitiesList())) return false;
      if (identityType_ != other.identityType_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSourcesCount() > 0) {
        hash = (37 * hash) + SOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getSourcesList().hashCode();
      }
      if (getIdentitiesCount() > 0) {
        hash = (37 * hash) + IDENTITIES_FIELD_NUMBER;
        hash = (53 * hash) + getIdentitiesList().hashCode();
      }
      hash = (37 * hash) + IDENTITY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + identityType_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions under which an [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * matches a request. Conditions are based on information about the source of
     * the request. The request must satisfy what is defined in `sources` AND
     * identity related fields in order to match.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFromOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressFrom_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressFrom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                    .class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (sourcesBuilder_ == null) {
          sources_ = java.util.Collections.emptyList();
        } else {
          sources_ = null;
          sourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        identities_ = com.google.protobuf.LazyStringArrayList.emptyList();
        identityType_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressFrom_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom(
                this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom result) {
        if (sourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            sources_ = java.util.Collections.unmodifiableList(sources_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sources_ = sources_;
        } else {
          result.sources_ = sourcesBuilder_.build();
        }
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          identities_.makeImmutable();
          result.identities_ = identities_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.identityType_ = identityType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                .getDefaultInstance()) return this;
        if (sourcesBuilder_ == null) {
          if (!other.sources_.isEmpty()) {
            if (sources_.isEmpty()) {
              sources_ = other.sources_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSourcesIsMutable();
              sources_.addAll(other.sources_);
            }
            onChanged();
          }
        } else {
          if (!other.sources_.isEmpty()) {
            if (sourcesBuilder_.isEmpty()) {
              sourcesBuilder_.dispose();
              sourcesBuilder_ = null;
              sources_ = other.sources_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sourcesBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getSourcesFieldBuilder()
                      : null;
            } else {
              sourcesBuilder_.addAllMessages(other.sources_);
            }
          }
        }
        if (!other.identities_.isEmpty()) {
          if (identities_.isEmpty()) {
            identities_ = other.identities_;
            bitField0_ |= 0x00000002;
          } else {
            ensureIdentitiesIsMutable();
            identities_.addAll(other.identities_);
          }
          onChanged();
        }
        if (other.identityType_ != 0) {
          setIdentityTypeValue(other.getIdentityTypeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                      m =
                          input.readMessage(
                              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                                  .IngressSource.parser(),
                              extensionRegistry);
                  if (sourcesBuilder_ == null) {
                    ensureSourcesIsMutable();
                    sources_.add(m);
                  } else {
                    sourcesBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureIdentitiesIsMutable();
                  identities_.add(s);
                  break;
                } // case 18
              case 24:
                {
                  identityType_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource>
          sources_ = java.util.Collections.emptyList();

      private void ensureSourcesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sources_ =
              new java.util.ArrayList<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource>(
                  sources_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .IngressSourceOrBuilder>
          sourcesBuilder_;

      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource>
          getSourcesList() {
        if (sourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sources_);
        } else {
          return sourcesBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public int getSourcesCount() {
        if (sourcesBuilder_ == null) {
          return sources_.size();
        } else {
          return sourcesBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
          getSources(int index) {
        if (sourcesBuilder_ == null) {
          return sources_.get(index);
        } else {
          return sourcesBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder setSources(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.set(index, value);
          onChanged();
        } else {
          sourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder setSources(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource.Builder
              builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.set(index, builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder addSources(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.add(value);
          onChanged();
        } else {
          sourcesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder addSources(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource value) {
        if (sourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcesIsMutable();
          sources_.add(index, value);
          onChanged();
        } else {
          sourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder addSources(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource.Builder
              builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.add(builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder addSources(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource.Builder
              builderForValue) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.add(index, builderForValue.build());
          onChanged();
        } else {
          sourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder addAllSources(
          java.lang.Iterable<
                  ? extends
                      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                          .IngressSource>
              values) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, sources_);
          onChanged();
        } else {
          sourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder clearSources() {
        if (sourcesBuilder_ == null) {
          sources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sourcesBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public Builder removeSources(int index) {
        if (sourcesBuilder_ == null) {
          ensureSourcesIsMutable();
          sources_.remove(index);
          onChanged();
        } else {
          sourcesBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
              .Builder
          getSourcesBuilder(int index) {
        return getSourcesFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .IngressSourceOrBuilder
          getSourcesOrBuilder(int index) {
        if (sourcesBuilder_ == null) {
          return sources_.get(index);
        } else {
          return sourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public java.util.List<
              ? extends
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .IngressSourceOrBuilder>
          getSourcesOrBuilderList() {
        if (sourcesBuilder_ != null) {
          return sourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sources_);
        }
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
              .Builder
          addSourcesBuilder() {
        return getSourcesFieldBuilder()
            .addBuilder(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
              .Builder
          addSourcesBuilder(int index) {
        return getSourcesFieldBuilder()
            .addBuilder(
                index,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Sources that this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * authorizes access from.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource sources = 1;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                  .Builder>
          getSourcesBuilderList() {
        return getSourcesFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .IngressSourceOrBuilder>
          getSourcesFieldBuilder() {
        if (sourcesBuilder_ == null) {
          sourcesBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressSource
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .IngressSourceOrBuilder>(
                  sources_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
          sources_ = null;
        }
        return sourcesBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList identities_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureIdentitiesIsMutable() {
        if (!identities_.isModifiable()) {
          identities_ = new com.google.protobuf.LazyStringArrayList(identities_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @return A list containing the identities.
       */
      public com.google.protobuf.ProtocolStringList getIdentitiesList() {
        identities_.makeImmutable();
        return identities_;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @return The count of identities.
       */
      public int getIdentitiesCount() {
        return identities_.size();
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @param index The index of the element to return.
       * @return The identities at the given index.
       */
      public java.lang.String getIdentities(int index) {
        return identities_.get(index);
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the identities at the given index.
       */
      public com.google.protobuf.ByteString getIdentitiesBytes(int index) {
        return identities_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @param index The index to set the value at.
       * @param value The identities to set.
       * @return This builder for chaining.
       */
      public Builder setIdentities(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdentitiesIsMutable();
        identities_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @param value The identities to add.
       * @return This builder for chaining.
       */
      public Builder addIdentities(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdentitiesIsMutable();
        identities_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @param values The identities to add.
       * @return This builder for chaining.
       */
      public Builder addAllIdentities(java.lang.Iterable<java.lang.String> values) {
        ensureIdentitiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, identities_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearIdentities() {
        identities_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this ingress
       * policy. Should be in the format of email address. The email address
       * should represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 2;</code>
       *
       * @param value The bytes of the identities to add.
       * @return This builder for chaining.
       */
      public Builder addIdentitiesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureIdentitiesIsMutable();
        identities_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int identityType_ = 0;
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access from outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
       * </code>
       *
       * @return The enum numeric value on the wire for identityType.
       */
      @java.lang.Override
      public int getIdentityTypeValue() {
        return identityType_;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access from outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
       * </code>
       *
       * @param value The enum numeric value on the wire for identityType to set.
       * @return This builder for chaining.
       */
      public Builder setIdentityTypeValue(int value) {
        identityType_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access from outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
       * </code>
       *
       * @return The identityType.
       */
      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
          getIdentityType() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType result =
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
                .forNumber(identityType_);
        return result == null
            ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
                .UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access from outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
       * </code>
       *
       * @param value The identityType to set.
       * @return This builder for chaining.
       */
      public Builder setIdentityType(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        identityType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access from outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 3;
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearIdentityType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        identityType_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .IngressFrom
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressFrom> PARSER =
        new com.google.protobuf.AbstractParser<IngressFrom>() {
          @java.lang.Override
          public IngressFrom parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<IngressFrom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressFrom> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface IngressToOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    java.util.List<com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
        getOperationsList();
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation getOperations(
        int index);
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    int getOperationsCount();
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .ApiOperationOrBuilder>
        getOperationsOrBuilderList();
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperationOrBuilder
        getOperationsOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @return A list containing the resources.
     */
    java.util.List<java.lang.String> getResourcesList();
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @return The count of resources.
     */
    int getResourcesCount();
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    java.lang.String getResources(int index);
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the resources at the given index.
     */
    com.google.protobuf.ByteString getResourcesBytes(int index);
  }
  /**
   *
   *
   * <pre>
   * Defines the conditions under which an [IngressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * matches a request. Conditions are based on information about the
   * [ApiOperation]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
   * intended to be performed on the target resource of the request. The request
   * must satisfy what is defined in `operations` AND `resources` in order to
   * match.
   * </pre>
   *
   * Protobuf type {@code google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo}
   */
  public static final class IngressTo extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo)
      IngressToOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use IngressTo.newBuilder() to construct.
    private IngressTo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private IngressTo() {
      operations_ = java.util.Collections.emptyList();
      resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new IngressTo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressTo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressTo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.Builder
                  .class);
    }

    public static final int OPERATIONS_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
        operations_;
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
        getOperationsList() {
      return operations_;
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .ApiOperationOrBuilder>
        getOperationsOrBuilderList() {
      return operations_;
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    @java.lang.Override
    public int getOperationsCount() {
      return operations_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        getOperations(int index) {
      return operations_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
     * in this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperationOrBuilder
        getOperationsOrBuilder(int index) {
      return operations_.get(index);
    }

    public static final int RESOURCES_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList resources_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @return A list containing the resources.
     */
    public com.google.protobuf.ProtocolStringList getResourcesList() {
      return resources_;
    }
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @return The count of resources.
     */
    public int getResourcesCount() {
      return resources_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    public java.lang.String getResources(int index) {
      return resources_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
     * allowed to be accessed by sources defined in the corresponding
     * [IngressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
     * If a single `*` is specified, then access to all resources inside the
     * perimeter are allowed.
     * </pre>
     *
     * <code>repeated string resources = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the resources at the given index.
     */
    public com.google.protobuf.ByteString getResourcesBytes(int index) {
      return resources_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < operations_.size(); i++) {
        output.writeMessage(1, operations_.get(i));
      }
      for (int i = 0; i < resources_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, resources_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < operations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, operations_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < resources_.size(); i++) {
          dataSize += computeStringSizeNoTag(resources_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getResourcesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo) obj;

      if (!getOperationsList().equals(other.getOperationsList())) return false;
      if (!getResourcesList().equals(other.getResourcesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOperationsCount() > 0) {
        hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOperationsList().hashCode();
      }
      if (getResourcesCount() > 0) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResourcesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions under which an [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * matches a request. Conditions are based on information about the
     * [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * intended to be performed on the target resource of the request. The request
     * must satisfy what is defined in `operations` AND `resources` in order to
     * match.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressToOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressTo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressTo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.Builder
                    .class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
        } else {
          operations_ = null;
          operationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressTo_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo result) {
        if (operationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            operations_ = java.util.Collections.unmodifiableList(operations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.operations_ = operations_;
        } else {
          result.operations_ = operationsBuilder_.build();
        }
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          resources_.makeImmutable();
          result.resources_ = resources_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
                .getDefaultInstance()) return this;
        if (operationsBuilder_ == null) {
          if (!other.operations_.isEmpty()) {
            if (operations_.isEmpty()) {
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOperationsIsMutable();
              operations_.addAll(other.operations_);
            }
            onChanged();
          }
        } else {
          if (!other.operations_.isEmpty()) {
            if (operationsBuilder_.isEmpty()) {
              operationsBuilder_.dispose();
              operationsBuilder_ = null;
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              operationsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getOperationsFieldBuilder()
                      : null;
            } else {
              operationsBuilder_.addAllMessages(other.operations_);
            }
          }
        }
        if (!other.resources_.isEmpty()) {
          if (resources_.isEmpty()) {
            resources_ = other.resources_;
            bitField0_ |= 0x00000002;
          } else {
            ensureResourcesIsMutable();
            resources_.addAll(other.resources_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                      m =
                          input.readMessage(
                              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                                  .ApiOperation.parser(),
                              extensionRegistry);
                  if (operationsBuilder_ == null) {
                    ensureOperationsIsMutable();
                    operations_.add(m);
                  } else {
                    operationsBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureResourcesIsMutable();
                  resources_.add(s);
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
          operations_ = java.util.Collections.emptyList();

      private void ensureOperationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          operations_ =
              new java.util.ArrayList<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>(
                  operations_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .ApiOperationOrBuilder>
          operationsBuilder_;

      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
          getOperationsList() {
        if (operationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operations_);
        } else {
          return operationsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public int getOperationsCount() {
        if (operationsBuilder_ == null) {
          return operations_.size();
        } else {
          return operationsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
          getOperations(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder setOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.set(index, value);
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder setOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
              builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder addOperations(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder addOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(index, value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder addOperations(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
              builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder addOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
              builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder addAllOperations(
          java.lang.Iterable<
                  ? extends
                      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                          .ApiOperation>
              values) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, operations_);
          onChanged();
        } else {
          operationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder clearOperations() {
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public Builder removeOperations(int index) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.remove(index);
          onChanged();
        } else {
          operationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
          getOperationsBuilder(int index) {
        return getOperationsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .ApiOperationOrBuilder
          getOperationsOrBuilder(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public java.util.List<
              ? extends
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .ApiOperationOrBuilder>
          getOperationsOrBuilderList() {
        if (operationsBuilder_ != null) {
          return operationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operations_);
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
          addOperationsBuilder() {
        return getOperationsFieldBuilder()
            .addBuilder(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
          addOperationsBuilder(int index) {
        return getOperationsFieldBuilder()
            .addBuilder(
                index,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom]
       * in this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter].
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 1;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder>
          getOperationsBuilderList() {
        return getOperationsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .ApiOperationOrBuilder>
          getOperationsFieldBuilder() {
        if (operationsBuilder_ == null) {
          operationsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .ApiOperationOrBuilder>(
                  operations_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
          operations_ = null;
        }
        return operationsBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList resources_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureResourcesIsMutable() {
        if (!resources_.isModifiable()) {
          resources_ = new com.google.protobuf.LazyStringArrayList(resources_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @return A list containing the resources.
       */
      public com.google.protobuf.ProtocolStringList getResourcesList() {
        resources_.makeImmutable();
        return resources_;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @return The count of resources.
       */
      public int getResourcesCount() {
        return resources_.size();
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @param index The index of the element to return.
       * @return The resources at the given index.
       */
      public java.lang.String getResources(int index) {
        return resources_.get(index);
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the resources at the given index.
       */
      public com.google.protobuf.ByteString getResourcesBytes(int index) {
        return resources_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @param index The index to set the value at.
       * @param value The resources to set.
       * @return This builder for chaining.
       */
      public Builder setResources(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @param value The resources to add.
       * @return This builder for chaining.
       */
      public Builder addResources(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @param values The resources to add.
       * @return This builder for chaining.
       */
      public Builder addAllResources(java.lang.Iterable<java.lang.String> values) {
        ensureResourcesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, resources_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearResources() {
        resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, protected by this [ServicePerimeter]
       * [google.identity.accesscontextmanager.v1.ServicePerimeter] that are
       * allowed to be accessed by sources defined in the corresponding
       * [IngressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom].
       * If a single `*` is specified, then access to all resources inside the
       * perimeter are allowed.
       * </pre>
       *
       * <code>repeated string resources = 2;</code>
       *
       * @param value The bytes of the resources to add.
       * @return This builder for chaining.
       */
      public Builder addResourcesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureResourcesIsMutable();
        resources_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .IngressTo
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressTo> PARSER =
        new com.google.protobuf.AbstractParser<IngressTo>() {
          @java.lang.Override
          public IngressTo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<IngressTo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressTo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface IngressPolicyOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Defines the conditions on the source of a request causing this
     * [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
     * </code>
     *
     * @return Whether the ingressFrom field is set.
     */
    boolean hasIngressFrom();
    /**
     *
     *
     * <pre>
     * Defines the conditions on the source of a request causing this
     * [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
     * </code>
     *
     * @return The ingressFrom.
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom getIngressFrom();
    /**
     *
     *
     * <pre>
     * Defines the conditions on the source of a request causing this
     * [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFromOrBuilder
        getIngressFromOrBuilder();

    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and request destination that cause this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
     * </code>
     *
     * @return Whether the ingressTo field is set.
     */
    boolean hasIngressTo();
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and request destination that cause this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
     * </code>
     *
     * @return The ingressTo.
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo getIngressTo();
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and request destination that cause this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressToOrBuilder
        getIngressToOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * Policy for ingress into [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter].
   *
   * [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * match requests based on `ingress_from` and `ingress_to` stanzas.  For an
   * ingress policy to match, both the `ingress_from` and `ingress_to` stanzas
   * must be matched. If an [IngressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * matches a request, the request is allowed through the perimeter boundary
   * from outside the perimeter.
   *
   * For example, access from the internet can be allowed either
   * based on an [AccessLevel]
   * [google.identity.accesscontextmanager.v1.AccessLevel] or, for traffic
   * hosted on Google Cloud, the project of the source network. For access from
   * private networks, using the project of the hosting network is required.
   *
   * Individual ingress policies can be limited by restricting which
   * services and/or actions they match using the `ingress_to` field.
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy}
   */
  public static final class IngressPolicy extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)
      IngressPolicyOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use IngressPolicy.newBuilder() to construct.
    private IngressPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private IngressPolicy() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new IngressPolicy();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                  .class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                  .Builder.class);
    }

    private int bitField0_;
    public static final int INGRESS_FROM_FIELD_NUMBER = 1;
    private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        ingressFrom_;
    /**
     *
     *
     * <pre>
     * Defines the conditions on the source of a request causing this
     * [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
     * </code>
     *
     * @return Whether the ingressFrom field is set.
     */
    @java.lang.Override
    public boolean hasIngressFrom() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions on the source of a request causing this
     * [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
     * </code>
     *
     * @return The ingressFrom.
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
        getIngressFrom() {
      return ingressFrom_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
              .getDefaultInstance()
          : ingressFrom_;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions on the source of a request causing this
     * [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFromOrBuilder
        getIngressFromOrBuilder() {
      return ingressFrom_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
              .getDefaultInstance()
          : ingressFrom_;
    }

    public static final int INGRESS_TO_FIELD_NUMBER = 2;
    private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingressTo_;
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and request destination that cause this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
     * </code>
     *
     * @return Whether the ingressTo field is set.
     */
    @java.lang.Override
    public boolean hasIngressTo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and request destination that cause this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
     * </code>
     *
     * @return The ingressTo.
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
        getIngressTo() {
      return ingressTo_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
              .getDefaultInstance()
          : ingressTo_;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and request destination that cause this [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressToOrBuilder
        getIngressToOrBuilder() {
      return ingressTo_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
              .getDefaultInstance()
          : ingressTo_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getIngressFrom());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getIngressTo());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getIngressFrom());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getIngressTo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy) obj;

      if (hasIngressFrom() != other.hasIngressFrom()) return false;
      if (hasIngressFrom()) {
        if (!getIngressFrom().equals(other.getIngressFrom())) return false;
      }
      if (hasIngressTo() != other.hasIngressTo()) return false;
      if (hasIngressTo()) {
        if (!getIngressTo().equals(other.getIngressTo())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIngressFrom()) {
        hash = (37 * hash) + INGRESS_FROM_FIELD_NUMBER;
        hash = (53 * hash) + getIngressFrom().hashCode();
      }
      if (hasIngressTo()) {
        hash = (37 * hash) + INGRESS_TO_FIELD_NUMBER;
        hash = (53 * hash) + getIngressTo().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Policy for ingress into [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter].
     *
     * [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * match requests based on `ingress_from` and `ingress_to` stanzas.  For an
     * ingress policy to match, both the `ingress_from` and `ingress_to` stanzas
     * must be matched. If an [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * matches a request, the request is allowed through the perimeter boundary
     * from outside the perimeter.
     *
     * For example, access from the internet can be allowed either
     * based on an [AccessLevel]
     * [google.identity.accesscontextmanager.v1.AccessLevel] or, for traffic
     * hosted on Google Cloud, the project of the source network. For access from
     * private networks, using the project of the hosting network is required.
     *
     * Individual ingress policies can be limited by restricting which
     * services and/or actions they match using the `ingress_to` field.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                    .class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getIngressFromFieldBuilder();
          getIngressToFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        ingressFrom_ = null;
        if (ingressFromBuilder_ != null) {
          ingressFromBuilder_.dispose();
          ingressFromBuilder_ = null;
        }
        ingressTo_ = null;
        if (ingressToBuilder_ != null) {
          ingressToBuilder_.dispose();
          ingressToBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_IngressPolicy_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy(
                this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ingressFrom_ =
              ingressFromBuilder_ == null ? ingressFrom_ : ingressFromBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ingressTo_ = ingressToBuilder_ == null ? ingressTo_ : ingressToBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                .getDefaultInstance()) return this;
        if (other.hasIngressFrom()) {
          mergeIngressFrom(other.getIngressFrom());
        }
        if (other.hasIngressTo()) {
          mergeIngressTo(other.getIngressTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getIngressFromFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getIngressToFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
          ingressFrom_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .IngressFromOrBuilder>
          ingressFromBuilder_;
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       *
       * @return Whether the ingressFrom field is set.
       */
      public boolean hasIngressFrom() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       *
       * @return The ingressFrom.
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
          getIngressFrom() {
        if (ingressFromBuilder_ == null) {
          return ingressFrom_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                  .getDefaultInstance()
              : ingressFrom_;
        } else {
          return ingressFromBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      public Builder setIngressFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom value) {
        if (ingressFromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ingressFrom_ = value;
        } else {
          ingressFromBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      public Builder setIngressFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom.Builder
              builderForValue) {
        if (ingressFromBuilder_ == null) {
          ingressFrom_ = builderForValue.build();
        } else {
          ingressFromBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      public Builder mergeIngressFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom value) {
        if (ingressFromBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)
              && ingressFrom_ != null
              && ingressFrom_
                  != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                      .getDefaultInstance()) {
            getIngressFromBuilder().mergeFrom(value);
          } else {
            ingressFrom_ = value;
          }
        } else {
          ingressFromBuilder_.mergeFrom(value);
        }
        if (ingressFrom_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      public Builder clearIngressFrom() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ingressFrom_ = null;
        if (ingressFromBuilder_ != null) {
          ingressFromBuilder_.dispose();
          ingressFromBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom.Builder
          getIngressFromBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getIngressFromFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFromOrBuilder
          getIngressFromOrBuilder() {
        if (ingressFromBuilder_ != null) {
          return ingressFromBuilder_.getMessageOrBuilder();
        } else {
          return ingressFrom_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                  .getDefaultInstance()
              : ingressFrom_;
        }
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the source of a request causing this
       * [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom ingress_from = 1;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .IngressFromOrBuilder>
          getIngressFromFieldBuilder() {
        if (ingressFromBuilder_ == null) {
          ingressFromBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressFrom
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .IngressFromOrBuilder>(getIngressFrom(), getParentForChildren(), isClean());
          ingressFrom_ = null;
        }
        return ingressFromBuilder_;
      }

      private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
          ingressTo_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressToOrBuilder>
          ingressToBuilder_;
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       *
       * @return Whether the ingressTo field is set.
       */
      public boolean hasIngressTo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       *
       * @return The ingressTo.
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
          getIngressTo() {
        if (ingressToBuilder_ == null) {
          return ingressTo_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
                  .getDefaultInstance()
              : ingressTo_;
        } else {
          return ingressToBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      public Builder setIngressTo(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo value) {
        if (ingressToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ingressTo_ = value;
        } else {
          ingressToBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      public Builder setIngressTo(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.Builder
              builderForValue) {
        if (ingressToBuilder_ == null) {
          ingressTo_ = builderForValue.build();
        } else {
          ingressToBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      public Builder mergeIngressTo(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo value) {
        if (ingressToBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && ingressTo_ != null
              && ingressTo_
                  != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
                      .getDefaultInstance()) {
            getIngressToBuilder().mergeFrom(value);
          } else {
            ingressTo_ = value;
          }
        } else {
          ingressToBuilder_.mergeFrom(value);
        }
        if (ingressTo_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      public Builder clearIngressTo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ingressTo_ = null;
        if (ingressToBuilder_ != null) {
          ingressToBuilder_.dispose();
          ingressToBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.Builder
          getIngressToBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIngressToFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressToOrBuilder
          getIngressToOrBuilder() {
        if (ingressToBuilder_ != null) {
          return ingressToBuilder_.getMessageOrBuilder();
        } else {
          return ingressTo_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
                  .getDefaultInstance()
              : ingressTo_;
        }
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and request destination that cause this [IngressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo ingress_to = 2;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo.Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressToOrBuilder>
          getIngressToFieldBuilder() {
        if (ingressToBuilder_ == null) {
          ingressToBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressTo
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .IngressToOrBuilder>(getIngressTo(), getParentForChildren(), isClean());
          ingressTo_ = null;
        }
        return ingressToBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .IngressPolicy
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressPolicy> PARSER =
        new com.google.protobuf.AbstractParser<IngressPolicy>() {
          @java.lang.Override
          public IngressPolicy parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<IngressPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface EgressFromOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @return A list containing the identities.
     */
    java.util.List<java.lang.String> getIdentitiesList();
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @return The count of identities.
     */
    int getIdentitiesCount();
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The identities at the given index.
     */
    java.lang.String getIdentities(int index);
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the identities at the given index.
     */
    com.google.protobuf.ByteString getIdentitiesBytes(int index);

    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access to outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
     * </code>
     *
     * @return The enum numeric value on the wire for identityType.
     */
    int getIdentityTypeValue();
    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access to outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
     * </code>
     *
     * @return The identityType.
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
        getIdentityType();
  }
  /**
   *
   *
   * <pre>
   * Defines the conditions under which an [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * matches a request. Conditions based on information about the source of the
   * request. Note that if the destination of the request is also protected by a
   * [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter], then that
   * [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] must have
   * an [IngressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * which allows access in order for this request to succeed.
   * </pre>
   *
   * Protobuf type {@code google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom}
   */
  public static final class EgressFrom extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)
      EgressFromOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use EgressFrom.newBuilder() to construct.
    private EgressFrom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private EgressFrom() {
      identities_ = com.google.protobuf.LazyStringArrayList.emptyList();
      identityType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new EgressFrom();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressFrom_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressFrom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.Builder
                  .class);
    }

    public static final int IDENTITIES_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList identities_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @return A list containing the identities.
     */
    public com.google.protobuf.ProtocolStringList getIdentitiesList() {
      return identities_;
    }
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @return The count of identities.
     */
    public int getIdentitiesCount() {
      return identities_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The identities at the given index.
     */
    public java.lang.String getIdentities(int index) {
      return identities_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of identities that are allowed access through this [EgressPolicy].
     * Should be in the format of email address. The email address should
     * represent individual user or service account only.
     * </pre>
     *
     * <code>repeated string identities = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the identities at the given index.
     */
    public com.google.protobuf.ByteString getIdentitiesBytes(int index) {
      return identities_.getByteString(index);
    }

    public static final int IDENTITY_TYPE_FIELD_NUMBER = 2;
    private int identityType_ = 0;
    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access to outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
     * </code>
     *
     * @return The enum numeric value on the wire for identityType.
     */
    @java.lang.Override
    public int getIdentityTypeValue() {
      return identityType_;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of identities that are allowed access to outside the
     * perimeter. If left unspecified, then members of `identities` field will
     * be allowed access.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
     * </code>
     *
     * @return The identityType.
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
        getIdentityType() {
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType result =
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType.forNumber(
              identityType_);
      return result == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
              .UNRECOGNIZED
          : result;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < identities_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, identities_.getRaw(i));
      }
      if (identityType_
          != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
              .IDENTITY_TYPE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(2, identityType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < identities_.size(); i++) {
          dataSize += computeStringSizeNoTag(identities_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIdentitiesList().size();
      }
      if (identityType_
          != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
              .IDENTITY_TYPE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, identityType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom) obj;

      if (!getIdentitiesList().equals(other.getIdentitiesList())) return false;
      if (identityType_ != other.identityType_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIdentitiesCount() > 0) {
        hash = (37 * hash) + IDENTITIES_FIELD_NUMBER;
        hash = (53 * hash) + getIdentitiesList().hashCode();
      }
      hash = (37 * hash) + IDENTITY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + identityType_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions under which an [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * matches a request. Conditions based on information about the source of the
     * request. Note that if the destination of the request is also protected by a
     * [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter], then that
     * [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] must have
     * an [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * which allows access in order for this request to succeed.
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFromOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressFrom_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressFrom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        identities_ = com.google.protobuf.LazyStringArrayList.emptyList();
        identityType_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressFrom_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          identities_.makeImmutable();
          result.identities_ = identities_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.identityType_ = identityType_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
                .getDefaultInstance()) return this;
        if (!other.identities_.isEmpty()) {
          if (identities_.isEmpty()) {
            identities_ = other.identities_;
            bitField0_ |= 0x00000001;
          } else {
            ensureIdentitiesIsMutable();
            identities_.addAll(other.identities_);
          }
          onChanged();
        }
        if (other.identityType_ != 0) {
          setIdentityTypeValue(other.getIdentityTypeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureIdentitiesIsMutable();
                  identities_.add(s);
                  break;
                } // case 10
              case 16:
                {
                  identityType_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList identities_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureIdentitiesIsMutable() {
        if (!identities_.isModifiable()) {
          identities_ = new com.google.protobuf.LazyStringArrayList(identities_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @return A list containing the identities.
       */
      public com.google.protobuf.ProtocolStringList getIdentitiesList() {
        identities_.makeImmutable();
        return identities_;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @return The count of identities.
       */
      public int getIdentitiesCount() {
        return identities_.size();
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @param index The index of the element to return.
       * @return The identities at the given index.
       */
      public java.lang.String getIdentities(int index) {
        return identities_.get(index);
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the identities at the given index.
       */
      public com.google.protobuf.ByteString getIdentitiesBytes(int index) {
        return identities_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @param index The index to set the value at.
       * @param value The identities to set.
       * @return This builder for chaining.
       */
      public Builder setIdentities(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdentitiesIsMutable();
        identities_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @param value The identities to add.
       * @return This builder for chaining.
       */
      public Builder addIdentities(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIdentitiesIsMutable();
        identities_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @param values The identities to add.
       * @return This builder for chaining.
       */
      public Builder addAllIdentities(java.lang.Iterable<java.lang.String> values) {
        ensureIdentitiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, identities_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearIdentities() {
        identities_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of identities that are allowed access through this [EgressPolicy].
       * Should be in the format of email address. The email address should
       * represent individual user or service account only.
       * </pre>
       *
       * <code>repeated string identities = 1;</code>
       *
       * @param value The bytes of the identities to add.
       * @return This builder for chaining.
       */
      public Builder addIdentitiesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureIdentitiesIsMutable();
        identities_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int identityType_ = 0;
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access to outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
       * </code>
       *
       * @return The enum numeric value on the wire for identityType.
       */
      @java.lang.Override
      public int getIdentityTypeValue() {
        return identityType_;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access to outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
       * </code>
       *
       * @param value The enum numeric value on the wire for identityType to set.
       * @return This builder for chaining.
       */
      public Builder setIdentityTypeValue(int value) {
        identityType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access to outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
       * </code>
       *
       * @return The identityType.
       */
      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
          getIdentityType() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType result =
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
                .forNumber(identityType_);
        return result == null
            ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType
                .UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access to outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
       * </code>
       *
       * @param value The identityType to set.
       * @return This builder for chaining.
       */
      public Builder setIdentityType(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        identityType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Specifies the type of identities that are allowed access to outside the
       * perimeter. If left unspecified, then members of `identities` field will
       * be allowed access.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IdentityType identity_type = 2;
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearIdentityType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        identityType_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .EgressFrom
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EgressFrom> PARSER =
        new com.google.protobuf.AbstractParser<EgressFrom>() {
          @java.lang.Override
          public EgressFrom parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<EgressFrom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EgressFrom> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface EgressToOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return A list containing the resources.
     */
    java.util.List<java.lang.String> getResourcesList();
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return The count of resources.
     */
    int getResourcesCount();
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    java.lang.String getResources(int index);
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the resources at the given index.
     */
    com.google.protobuf.ByteString getResourcesBytes(int index);

    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    java.util.List<com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
        getOperationsList();
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation getOperations(
        int index);
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    int getOperationsCount();
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .ApiOperationOrBuilder>
        getOperationsOrBuilderList();
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperationOrBuilder
        getOperationsOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @return A list containing the externalResources.
     */
    java.util.List<java.lang.String> getExternalResourcesList();
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @return The count of externalResources.
     */
    int getExternalResourcesCount();
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The externalResources at the given index.
     */
    java.lang.String getExternalResources(int index);
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the externalResources at the given index.
     */
    com.google.protobuf.ByteString getExternalResourcesBytes(int index);
  }
  /**
   *
   *
   * <pre>
   * Defines the conditions under which an [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * matches a request. Conditions are based on information about the
   * [ApiOperation]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
   * intended to be performed on the `resources` specified. Note that if the
   * destination of the request is also protected by a [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter], then that
   * [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] must have
   * an [IngressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * which allows access in order for this request to succeed. The request must
   * match `operations` AND `resources` fields in order to be allowed egress out
   * of the perimeter.
   * </pre>
   *
   * Protobuf type {@code google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo}
   */
  public static final class EgressTo extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo)
      EgressToOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use EgressTo.newBuilder() to construct.
    private EgressTo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private EgressTo() {
      resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
      operations_ = java.util.Collections.emptyList();
      externalResources_ = com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new EgressTo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressTo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressTo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.Builder
                  .class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList resources_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return A list containing the resources.
     */
    public com.google.protobuf.ProtocolStringList getResourcesList() {
      return resources_;
    }
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return The count of resources.
     */
    public int getResourcesCount() {
      return resources_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    public java.lang.String getResources(int index) {
      return resources_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of resources, currently only projects in the form
     * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
     * defined in the corresponding [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it contains a resource in this list.  If `*` is
     * specified for `resources`, then this [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
     * rule will authorize access to all resources outside the perimeter.
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the resources at the given index.
     */
    public com.google.protobuf.ByteString getResourcesBytes(int index) {
      return resources_.getByteString(index);
    }

    public static final int OPERATIONS_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
        operations_;
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
        getOperationsList() {
      return operations_;
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .ApiOperationOrBuilder>
        getOperationsOrBuilderList() {
      return operations_;
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    @java.lang.Override
    public int getOperationsCount() {
      return operations_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
        getOperations(int index) {
      return operations_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of [ApiOperations]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * allowed to be performed by the sources specified in the corresponding
     * [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
     * A request matches if it uses an operation/service in this list.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperationOrBuilder
        getOperationsOrBuilder(int index) {
      return operations_.get(index);
    }

    public static final int EXTERNAL_RESOURCES_FIELD_NUMBER = 3;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList externalResources_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @return A list containing the externalResources.
     */
    public com.google.protobuf.ProtocolStringList getExternalResourcesList() {
      return externalResources_;
    }
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @return The count of externalResources.
     */
    public int getExternalResourcesCount() {
      return externalResources_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @param index The index of the element to return.
     * @return The externalResources at the given index.
     */
    public java.lang.String getExternalResources(int index) {
      return externalResources_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of external resources that are allowed to be accessed. Only AWS
     * and Azure resources are supported. For Amazon S3, the supported format is
     * s3://BUCKET_NAME. For Azure Storage, the supported format is
     * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
     * if it contains an external resource in this list (Example:
     * s3://bucket/path). Currently '*' is not allowed.
     * </pre>
     *
     * <code>repeated string external_resources = 3;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the externalResources at the given index.
     */
    public com.google.protobuf.ByteString getExternalResourcesBytes(int index) {
      return externalResources_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < resources_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resources_.getRaw(i));
      }
      for (int i = 0; i < operations_.size(); i++) {
        output.writeMessage(2, operations_.get(i));
      }
      for (int i = 0; i < externalResources_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, externalResources_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < resources_.size(); i++) {
          dataSize += computeStringSizeNoTag(resources_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getResourcesList().size();
      }
      for (int i = 0; i < operations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, operations_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < externalResources_.size(); i++) {
          dataSize += computeStringSizeNoTag(externalResources_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExternalResourcesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo) obj;

      if (!getResourcesList().equals(other.getResourcesList())) return false;
      if (!getOperationsList().equals(other.getOperationsList())) return false;
      if (!getExternalResourcesList().equals(other.getExternalResourcesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getResourcesCount() > 0) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResourcesList().hashCode();
      }
      if (getOperationsCount() > 0) {
        hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOperationsList().hashCode();
      }
      if (getExternalResourcesCount() > 0) {
        hash = (37 * hash) + EXTERNAL_RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getExternalResourcesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions under which an [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * matches a request. Conditions are based on information about the
     * [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * intended to be performed on the `resources` specified. Note that if the
     * destination of the request is also protected by a [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter], then that
     * [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] must have
     * an [IngressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * which allows access in order for this request to succeed. The request must
     * match `operations` AND `resources` fields in order to be allowed egress out
     * of the perimeter.
     * </pre>
     *
     * Protobuf type {@code google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressToOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressTo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressTo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.Builder
                    .class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
        } else {
          operations_ = null;
          operationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        externalResources_ = com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressTo_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo result) {
        if (operationsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            operations_ = java.util.Collections.unmodifiableList(operations_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.operations_ = operations_;
        } else {
          result.operations_ = operationsBuilder_.build();
        }
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          resources_.makeImmutable();
          result.resources_ = resources_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          externalResources_.makeImmutable();
          result.externalResources_ = externalResources_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
                .getDefaultInstance()) return this;
        if (!other.resources_.isEmpty()) {
          if (resources_.isEmpty()) {
            resources_ = other.resources_;
            bitField0_ |= 0x00000001;
          } else {
            ensureResourcesIsMutable();
            resources_.addAll(other.resources_);
          }
          onChanged();
        }
        if (operationsBuilder_ == null) {
          if (!other.operations_.isEmpty()) {
            if (operations_.isEmpty()) {
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOperationsIsMutable();
              operations_.addAll(other.operations_);
            }
            onChanged();
          }
        } else {
          if (!other.operations_.isEmpty()) {
            if (operationsBuilder_.isEmpty()) {
              operationsBuilder_.dispose();
              operationsBuilder_ = null;
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000002);
              operationsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getOperationsFieldBuilder()
                      : null;
            } else {
              operationsBuilder_.addAllMessages(other.operations_);
            }
          }
        }
        if (!other.externalResources_.isEmpty()) {
          if (externalResources_.isEmpty()) {
            externalResources_ = other.externalResources_;
            bitField0_ |= 0x00000004;
          } else {
            ensureExternalResourcesIsMutable();
            externalResources_.addAll(other.externalResources_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureResourcesIsMutable();
                  resources_.add(s);
                  break;
                } // case 10
              case 18:
                {
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                      m =
                          input.readMessage(
                              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                                  .ApiOperation.parser(),
                              extensionRegistry);
                  if (operationsBuilder_ == null) {
                    ensureOperationsIsMutable();
                    operations_.add(m);
                  } else {
                    operationsBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
              case 26:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureExternalResourcesIsMutable();
                  externalResources_.add(s);
                  break;
                } // case 26
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList resources_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureResourcesIsMutable() {
        if (!resources_.isModifiable()) {
          resources_ = new com.google.protobuf.LazyStringArrayList(resources_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @return A list containing the resources.
       */
      public com.google.protobuf.ProtocolStringList getResourcesList() {
        resources_.makeImmutable();
        return resources_;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @return The count of resources.
       */
      public int getResourcesCount() {
        return resources_.size();
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @param index The index of the element to return.
       * @return The resources at the given index.
       */
      public java.lang.String getResources(int index) {
        return resources_.get(index);
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the resources at the given index.
       */
      public com.google.protobuf.ByteString getResourcesBytes(int index) {
        return resources_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @param index The index to set the value at.
       * @param value The resources to set.
       * @return This builder for chaining.
       */
      public Builder setResources(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @param value The resources to add.
       * @return This builder for chaining.
       */
      public Builder addResources(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResourcesIsMutable();
        resources_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @param values The resources to add.
       * @return This builder for chaining.
       */
      public Builder addAllResources(java.lang.Iterable<java.lang.String> values) {
        ensureResourcesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, resources_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearResources() {
        resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of resources, currently only projects in the form
       * `projects/&lt;projectnumber&gt;`, that are allowed to be accessed by sources
       * defined in the corresponding [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it contains a resource in this list.  If `*` is
       * specified for `resources`, then this [EgressTo]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo]
       * rule will authorize access to all resources outside the perimeter.
       * </pre>
       *
       * <code>repeated string resources = 1;</code>
       *
       * @param value The bytes of the resources to add.
       * @return This builder for chaining.
       */
      public Builder addResourcesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureResourcesIsMutable();
        resources_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
          operations_ = java.util.Collections.emptyList();

      private void ensureOperationsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          operations_ =
              new java.util.ArrayList<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>(
                  operations_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .ApiOperationOrBuilder>
          operationsBuilder_;

      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation>
          getOperationsList() {
        if (operationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operations_);
        } else {
          return operationsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public int getOperationsCount() {
        if (operationsBuilder_ == null) {
          return operations_.size();
        } else {
          return operationsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
          getOperations(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder setOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.set(index, value);
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder setOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
              builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder addOperations(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder addOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(index, value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder addOperations(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
              builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder addOperations(
          int index,
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
              builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder addAllOperations(
          java.lang.Iterable<
                  ? extends
                      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                          .ApiOperation>
              values) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, operations_);
          onChanged();
        } else {
          operationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder clearOperations() {
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public Builder removeOperations(int index) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.remove(index);
          onChanged();
        } else {
          operationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
          getOperationsBuilder(int index) {
        return getOperationsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .ApiOperationOrBuilder
          getOperationsOrBuilder(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public java.util.List<
              ? extends
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .ApiOperationOrBuilder>
          getOperationsOrBuilderList() {
        if (operationsBuilder_ != null) {
          return operationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operations_);
        }
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
          addOperationsBuilder() {
        return getOperationsFieldBuilder()
            .addBuilder(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation.Builder
          addOperationsBuilder(int index) {
        return getOperationsFieldBuilder()
            .addBuilder(
                index,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * A list of [ApiOperations]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * allowed to be performed by the sources specified in the corresponding
       * [EgressFrom]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom].
       * A request matches if it uses an operation/service in this list.
       * </pre>
       *
       * <code>
       * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation operations = 2;
       * </code>
       */
      public java.util.List<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder>
          getOperationsBuilderList() {
        return getOperationsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                  .Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .ApiOperationOrBuilder>
          getOperationsFieldBuilder() {
        if (operationsBuilder_ == null) {
          operationsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .ApiOperationOrBuilder>(
                  operations_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
          operations_ = null;
        }
        return operationsBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList externalResources_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureExternalResourcesIsMutable() {
        if (!externalResources_.isModifiable()) {
          externalResources_ = new com.google.protobuf.LazyStringArrayList(externalResources_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @return A list containing the externalResources.
       */
      public com.google.protobuf.ProtocolStringList getExternalResourcesList() {
        externalResources_.makeImmutable();
        return externalResources_;
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @return The count of externalResources.
       */
      public int getExternalResourcesCount() {
        return externalResources_.size();
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @param index The index of the element to return.
       * @return The externalResources at the given index.
       */
      public java.lang.String getExternalResources(int index) {
        return externalResources_.get(index);
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the externalResources at the given index.
       */
      public com.google.protobuf.ByteString getExternalResourcesBytes(int index) {
        return externalResources_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @param index The index to set the value at.
       * @param value The externalResources to set.
       * @return This builder for chaining.
       */
      public Builder setExternalResources(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalResourcesIsMutable();
        externalResources_.set(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @param value The externalResources to add.
       * @return This builder for chaining.
       */
      public Builder addExternalResources(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExternalResourcesIsMutable();
        externalResources_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @param values The externalResources to add.
       * @return This builder for chaining.
       */
      public Builder addAllExternalResources(java.lang.Iterable<java.lang.String> values) {
        ensureExternalResourcesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, externalResources_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearExternalResources() {
        externalResources_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * A list of external resources that are allowed to be accessed. Only AWS
       * and Azure resources are supported. For Amazon S3, the supported format is
       * s3://BUCKET_NAME. For Azure Storage, the supported format is
       * azure://myaccount.blob.core.windows.net/CONTAINER_NAME. A request matches
       * if it contains an external resource in this list (Example:
       * s3://bucket/path). Currently '*' is not allowed.
       * </pre>
       *
       * <code>repeated string external_resources = 3;</code>
       *
       * @param value The bytes of the externalResources to add.
       * @return This builder for chaining.
       */
      public Builder addExternalResourcesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureExternalResourcesIsMutable();
        externalResources_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EgressTo> PARSER =
        new com.google.protobuf.AbstractParser<EgressTo>() {
          @java.lang.Override
          public EgressTo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<EgressTo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EgressTo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface EgressPolicyOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Defines conditions on the source of a request causing this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
     * </code>
     *
     * @return Whether the egressFrom field is set.
     */
    boolean hasEgressFrom();
    /**
     *
     *
     * <pre>
     * Defines conditions on the source of a request causing this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
     * </code>
     *
     * @return The egressFrom.
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom getEgressFrom();
    /**
     *
     *
     * <pre>
     * Defines conditions on the source of a request causing this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFromOrBuilder
        getEgressFromOrBuilder();

    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and destination resources that cause this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
     * </code>
     *
     * @return Whether the egressTo field is set.
     */
    boolean hasEgressTo();
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and destination resources that cause this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
     * </code>
     *
     * @return The egressTo.
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo getEgressTo();
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and destination resources that cause this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
     * </code>
     */
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressToOrBuilder
        getEgressToOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * Policy for egress from perimeter.
   *
   * [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * match requests based on `egress_from` and `egress_to` stanzas.  For an
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * to match, both `egress_from` and `egress_to` stanzas must be matched. If an
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * matches a request, the request is allowed to span the [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] boundary.
   * For example, an [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * can be used to allow VMs on networks within the [ServicePerimeter]
   * [google.identity.accesscontextmanager.v1.ServicePerimeter] to access a
   * defined set of projects outside the perimeter in certain contexts (e.g. to
   * read data from a Cloud Storage bucket or query against a BigQuery dataset).
   *
   * [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * are concerned with the *resources* that a request relates as well as the
   * API services and API actions being used.  They do not related to the
   * direction of data movement.  More detailed documentation for this concept
   * can be found in the descriptions of [EgressFrom]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom]
   * and [EgressTo]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo].
   * </pre>
   *
   * Protobuf type {@code
   * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy}
   */
  public static final class EgressPolicy extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)
      EgressPolicyOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use EgressPolicy.newBuilder() to construct.
    private EgressPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private EgressPolicy() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new EgressPolicy();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                  .Builder.class);
    }

    private int bitField0_;
    public static final int EGRESS_FROM_FIELD_NUMBER = 1;
    private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        egressFrom_;
    /**
     *
     *
     * <pre>
     * Defines conditions on the source of a request causing this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
     * </code>
     *
     * @return Whether the egressFrom field is set.
     */
    @java.lang.Override
    public boolean hasEgressFrom() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Defines conditions on the source of a request causing this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
     * </code>
     *
     * @return The egressFrom.
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
        getEgressFrom() {
      return egressFrom_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
              .getDefaultInstance()
          : egressFrom_;
    }
    /**
     *
     *
     * <pre>
     * Defines conditions on the source of a request causing this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFromOrBuilder
        getEgressFromOrBuilder() {
      return egressFrom_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
              .getDefaultInstance()
          : egressFrom_;
    }

    public static final int EGRESS_TO_FIELD_NUMBER = 2;
    private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egressTo_;
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and destination resources that cause this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
     * </code>
     *
     * @return Whether the egressTo field is set.
     */
    @java.lang.Override
    public boolean hasEgressTo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and destination resources that cause this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
     * </code>
     *
     * @return The egressTo.
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
        getEgressTo() {
      return egressTo_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
              .getDefaultInstance()
          : egressTo_;
    }
    /**
     *
     *
     * <pre>
     * Defines the conditions on the [ApiOperation]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
     * and destination resources that cause this [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply.
     * </pre>
     *
     * <code>.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressToOrBuilder
        getEgressToOrBuilder() {
      return egressTo_ == null
          ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
              .getDefaultInstance()
          : egressTo_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getEgressFrom());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getEgressTo());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getEgressFrom());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getEgressTo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)) {
        return super.equals(obj);
      }
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy other =
          (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy) obj;

      if (hasEgressFrom() != other.hasEgressFrom()) return false;
      if (hasEgressFrom()) {
        if (!getEgressFrom().equals(other.getEgressFrom())) return false;
      }
      if (hasEgressTo() != other.hasEgressTo()) return false;
      if (hasEgressTo()) {
        if (!getEgressTo().equals(other.getEgressTo())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEgressFrom()) {
        hash = (37 * hash) + EGRESS_FROM_FIELD_NUMBER;
        hash = (53 * hash) + getEgressFrom().hashCode();
      }
      if (hasEgressTo()) {
        hash = (37 * hash) + EGRESS_TO_FIELD_NUMBER;
        hash = (53 * hash) + getEgressTo().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Policy for egress from perimeter.
     *
     * [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * match requests based on `egress_from` and `egress_to` stanzas.  For an
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to match, both `egress_from` and `egress_to` stanzas must be matched. If an
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * matches a request, the request is allowed to span the [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] boundary.
     * For example, an [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * can be used to allow VMs on networks within the [ServicePerimeter]
     * [google.identity.accesscontextmanager.v1.ServicePerimeter] to access a
     * defined set of projects outside the perimeter in certain contexts (e.g. to
     * read data from a Cloud Storage bucket or query against a BigQuery dataset).
     *
     * [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * are concerned with the *resources* that a request relates as well as the
     * API services and API actions being used.  They do not related to the
     * direction of data movement.  More detailed documentation for this concept
     * can be found in the descriptions of [EgressFrom]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom]
     * and [EgressTo]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo].
     * </pre>
     *
     * Protobuf type {@code
     * google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                    .class,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                    .Builder.class);
      }

      // Construct using
      // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getEgressFromFieldBuilder();
          getEgressToFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        egressFrom_ = null;
        if (egressFromBuilder_ != null) {
          egressFromBuilder_.dispose();
          egressFromBuilder_ = null;
        }
        egressTo_ = null;
        if (egressToBuilder_ != null) {
          egressToBuilder_.dispose();
          egressToBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
            .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_EgressPolicy_descriptor;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
          getDefaultInstanceForType() {
        return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
          build() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
          buildPartial() {
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy result =
            new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy(
                this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.egressFrom_ =
              egressFromBuilder_ == null ? egressFrom_ : egressFromBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.egressTo_ = egressToBuilder_ == null ? egressTo_ : egressToBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy) {
          return mergeFrom(
              (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy other) {
        if (other
            == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                .getDefaultInstance()) return this;
        if (other.hasEgressFrom()) {
          mergeEgressFrom(other.getEgressFrom());
        }
        if (other.hasEgressTo()) {
          mergeEgressTo(other.getEgressTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getEgressFromFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getEgressToFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
          egressFrom_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .EgressFromOrBuilder>
          egressFromBuilder_;
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       *
       * @return Whether the egressFrom field is set.
       */
      public boolean hasEgressFrom() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       *
       * @return The egressFrom.
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
          getEgressFrom() {
        if (egressFromBuilder_ == null) {
          return egressFrom_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
                  .getDefaultInstance()
              : egressFrom_;
        } else {
          return egressFromBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      public Builder setEgressFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom value) {
        if (egressFromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          egressFrom_ = value;
        } else {
          egressFromBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      public Builder setEgressFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.Builder
              builderForValue) {
        if (egressFromBuilder_ == null) {
          egressFrom_ = builderForValue.build();
        } else {
          egressFromBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      public Builder mergeEgressFrom(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom value) {
        if (egressFromBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)
              && egressFrom_ != null
              && egressFrom_
                  != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
                      .getDefaultInstance()) {
            getEgressFromBuilder().mergeFrom(value);
          } else {
            egressFrom_ = value;
          }
        } else {
          egressFromBuilder_.mergeFrom(value);
        }
        if (egressFrom_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      public Builder clearEgressFrom() {
        bitField0_ = (bitField0_ & ~0x00000001);
        egressFrom_ = null;
        if (egressFromBuilder_ != null) {
          egressFromBuilder_.dispose();
          egressFromBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.Builder
          getEgressFromBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getEgressFromFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFromOrBuilder
          getEgressFromOrBuilder() {
        if (egressFromBuilder_ != null) {
          return egressFromBuilder_.getMessageOrBuilder();
        } else {
          return egressFrom_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
                  .getDefaultInstance()
              : egressFrom_;
        }
      }
      /**
       *
       *
       * <pre>
       * Defines conditions on the source of a request causing this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom egress_from = 1;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom.Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .EgressFromOrBuilder>
          getEgressFromFieldBuilder() {
        if (egressFromBuilder_ == null) {
          egressFromBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressFrom
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .EgressFromOrBuilder>(getEgressFrom(), getParentForChildren(), isClean());
          egressFrom_ = null;
        }
        return egressFromBuilder_;
      }

      private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egressTo_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressToOrBuilder>
          egressToBuilder_;
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       *
       * @return Whether the egressTo field is set.
       */
      public boolean hasEgressTo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       *
       * @return The egressTo.
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
          getEgressTo() {
        if (egressToBuilder_ == null) {
          return egressTo_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
                  .getDefaultInstance()
              : egressTo_;
        } else {
          return egressToBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      public Builder setEgressTo(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo value) {
        if (egressToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          egressTo_ = value;
        } else {
          egressToBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      public Builder setEgressTo(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.Builder
              builderForValue) {
        if (egressToBuilder_ == null) {
          egressTo_ = builderForValue.build();
        } else {
          egressToBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      public Builder mergeEgressTo(
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo value) {
        if (egressToBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && egressTo_ != null
              && egressTo_
                  != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
                      .getDefaultInstance()) {
            getEgressToBuilder().mergeFrom(value);
          } else {
            egressTo_ = value;
          }
        } else {
          egressToBuilder_.mergeFrom(value);
        }
        if (egressTo_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      public Builder clearEgressTo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        egressTo_ = null;
        if (egressToBuilder_ != null) {
          egressToBuilder_.dispose();
          egressToBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.Builder
          getEgressToBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEgressToFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressToOrBuilder
          getEgressToOrBuilder() {
        if (egressToBuilder_ != null) {
          return egressToBuilder_.getMessageOrBuilder();
        } else {
          return egressTo_ == null
              ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
                  .getDefaultInstance()
              : egressTo_;
        }
      }
      /**
       *
       *
       * <pre>
       * Defines the conditions on the [ApiOperation]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.ApiOperation]
       * and destination resources that cause this [EgressPolicy]
       * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
       * to apply.
       * </pre>
       *
       * <code>
       * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo egress_to = 2;
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo.Builder,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressToOrBuilder>
          getEgressToFieldBuilder() {
        if (egressToBuilder_ == null) {
          egressToBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressTo
                      .Builder,
                  com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                      .EgressToOrBuilder>(getEgressTo(), getParentForChildren(), isClean());
          egressTo_ = null;
        }
        return egressToBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)
    }

    // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy)
    private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .EgressPolicy
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy();
    }

    public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EgressPolicy> PARSER =
        new com.google.protobuf.AbstractParser<EgressPolicy>() {
          @java.lang.Override
          public EgressPolicy parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<EgressPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EgressPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int RESOURCES_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList resources_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * A list of Google Cloud resources that are inside of the service perimeter.
   * Currently only projects are allowed. Format: `projects/{project_number}`
   * </pre>
   *
   * <code>repeated string resources = 1;</code>
   *
   * @return A list containing the resources.
   */
  public com.google.protobuf.ProtocolStringList getResourcesList() {
    return resources_;
  }
  /**
   *
   *
   * <pre>
   * A list of Google Cloud resources that are inside of the service perimeter.
   * Currently only projects are allowed. Format: `projects/{project_number}`
   * </pre>
   *
   * <code>repeated string resources = 1;</code>
   *
   * @return The count of resources.
   */
  public int getResourcesCount() {
    return resources_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of Google Cloud resources that are inside of the service perimeter.
   * Currently only projects are allowed. Format: `projects/{project_number}`
   * </pre>
   *
   * <code>repeated string resources = 1;</code>
   *
   * @param index The index of the element to return.
   * @return The resources at the given index.
   */
  public java.lang.String getResources(int index) {
    return resources_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of Google Cloud resources that are inside of the service perimeter.
   * Currently only projects are allowed. Format: `projects/{project_number}`
   * </pre>
   *
   * <code>repeated string resources = 1;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the resources at the given index.
   */
  public com.google.protobuf.ByteString getResourcesBytes(int index) {
    return resources_.getByteString(index);
  }

  public static final int ACCESS_LEVELS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList accessLevels_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * A list of `AccessLevel` resource names that allow resources within the
   * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
   * must be in the same policy as this `ServicePerimeter`. Referencing a
   * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
   * listed, resources within the perimeter can only be accessed via Google
   * Cloud calls with request origins within the perimeter. Example:
   * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
   * For Service Perimeter Bridge, must be empty.
   * </pre>
   *
   * <code>repeated string access_levels = 2;</code>
   *
   * @return A list containing the accessLevels.
   */
  public com.google.protobuf.ProtocolStringList getAccessLevelsList() {
    return accessLevels_;
  }
  /**
   *
   *
   * <pre>
   * A list of `AccessLevel` resource names that allow resources within the
   * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
   * must be in the same policy as this `ServicePerimeter`. Referencing a
   * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
   * listed, resources within the perimeter can only be accessed via Google
   * Cloud calls with request origins within the perimeter. Example:
   * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
   * For Service Perimeter Bridge, must be empty.
   * </pre>
   *
   * <code>repeated string access_levels = 2;</code>
   *
   * @return The count of accessLevels.
   */
  public int getAccessLevelsCount() {
    return accessLevels_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of `AccessLevel` resource names that allow resources within the
   * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
   * must be in the same policy as this `ServicePerimeter`. Referencing a
   * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
   * listed, resources within the perimeter can only be accessed via Google
   * Cloud calls with request origins within the perimeter. Example:
   * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
   * For Service Perimeter Bridge, must be empty.
   * </pre>
   *
   * <code>repeated string access_levels = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The accessLevels at the given index.
   */
  public java.lang.String getAccessLevels(int index) {
    return accessLevels_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of `AccessLevel` resource names that allow resources within the
   * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
   * must be in the same policy as this `ServicePerimeter`. Referencing a
   * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
   * listed, resources within the perimeter can only be accessed via Google
   * Cloud calls with request origins within the perimeter. Example:
   * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
   * For Service Perimeter Bridge, must be empty.
   * </pre>
   *
   * <code>repeated string access_levels = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the accessLevels at the given index.
   */
  public com.google.protobuf.ByteString getAccessLevelsBytes(int index) {
    return accessLevels_.getByteString(index);
  }

  public static final int RESTRICTED_SERVICES_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList restrictedServices_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * Google Cloud services that are subject to the Service Perimeter
   * restrictions. For example, if `storage.googleapis.com` is specified, access
   * to the storage buckets inside the perimeter must meet the perimeter's
   * access restrictions.
   * </pre>
   *
   * <code>repeated string restricted_services = 4;</code>
   *
   * @return A list containing the restrictedServices.
   */
  public com.google.protobuf.ProtocolStringList getRestrictedServicesList() {
    return restrictedServices_;
  }
  /**
   *
   *
   * <pre>
   * Google Cloud services that are subject to the Service Perimeter
   * restrictions. For example, if `storage.googleapis.com` is specified, access
   * to the storage buckets inside the perimeter must meet the perimeter's
   * access restrictions.
   * </pre>
   *
   * <code>repeated string restricted_services = 4;</code>
   *
   * @return The count of restrictedServices.
   */
  public int getRestrictedServicesCount() {
    return restrictedServices_.size();
  }
  /**
   *
   *
   * <pre>
   * Google Cloud services that are subject to the Service Perimeter
   * restrictions. For example, if `storage.googleapis.com` is specified, access
   * to the storage buckets inside the perimeter must meet the perimeter's
   * access restrictions.
   * </pre>
   *
   * <code>repeated string restricted_services = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The restrictedServices at the given index.
   */
  public java.lang.String getRestrictedServices(int index) {
    return restrictedServices_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Google Cloud services that are subject to the Service Perimeter
   * restrictions. For example, if `storage.googleapis.com` is specified, access
   * to the storage buckets inside the perimeter must meet the perimeter's
   * access restrictions.
   * </pre>
   *
   * <code>repeated string restricted_services = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the restrictedServices at the given index.
   */
  public com.google.protobuf.ByteString getRestrictedServicesBytes(int index) {
    return restrictedServices_.getByteString(index);
  }

  public static final int VPC_ACCESSIBLE_SERVICES_FIELD_NUMBER = 10;
  private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
      vpcAccessibleServices_;
  /**
   *
   *
   * <pre>
   * Configuration for APIs allowed within Perimeter.
   * </pre>
   *
   * <code>
   * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
   * </code>
   *
   * @return Whether the vpcAccessibleServices field is set.
   */
  @java.lang.Override
  public boolean hasVpcAccessibleServices() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Configuration for APIs allowed within Perimeter.
   * </pre>
   *
   * <code>
   * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
   * </code>
   *
   * @return The vpcAccessibleServices.
   */
  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
      getVpcAccessibleServices() {
    return vpcAccessibleServices_ == null
        ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            .getDefaultInstance()
        : vpcAccessibleServices_;
  }
  /**
   *
   *
   * <pre>
   * Configuration for APIs allowed within Perimeter.
   * </pre>
   *
   * <code>
   * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
   * </code>
   */
  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
          .VpcAccessibleServicesOrBuilder
      getVpcAccessibleServicesOrBuilder() {
    return vpcAccessibleServices_ == null
        ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            .getDefaultInstance()
        : vpcAccessibleServices_;
  }

  public static final int INGRESS_POLICIES_FIELD_NUMBER = 8;

  @SuppressWarnings("serial")
  private java.util.List<
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy>
      ingressPolicies_;
  /**
   *
   *
   * <pre>
   * List of [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
   * each of which is evaluated separately. Access is granted if any [Ingress
   * Policy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy>
      getIngressPoliciesList() {
    return ingressPolicies_;
  }
  /**
   *
   *
   * <pre>
   * List of [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
   * each of which is evaluated separately. Access is granted if any [Ingress
   * Policy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .IngressPolicyOrBuilder>
      getIngressPoliciesOrBuilderList() {
    return ingressPolicies_;
  }
  /**
   *
   *
   * <pre>
   * List of [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
   * each of which is evaluated separately. Access is granted if any [Ingress
   * Policy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
   * </code>
   */
  @java.lang.Override
  public int getIngressPoliciesCount() {
    return ingressPolicies_.size();
  }
  /**
   *
   *
   * <pre>
   * List of [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
   * each of which is evaluated separately. Access is granted if any [Ingress
   * Policy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
   * </code>
   */
  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
      getIngressPolicies(int index) {
    return ingressPolicies_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
   * each of which is evaluated separately. Access is granted if any [Ingress
   * Policy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
   * </code>
   */
  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicyOrBuilder
      getIngressPoliciesOrBuilder(int index) {
    return ingressPolicies_.get(index);
  }

  public static final int EGRESS_POLICIES_FIELD_NUMBER = 9;

  @SuppressWarnings("serial")
  private java.util.List<
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy>
      egressPolicies_;
  /**
   *
   *
   * <pre>
   * List of [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
   * each of which is evaluated separately. Access is granted if any
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy>
      getEgressPoliciesList() {
    return egressPolicies_;
  }
  /**
   *
   *
   * <pre>
   * List of [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
   * each of which is evaluated separately. Access is granted if any
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                  .EgressPolicyOrBuilder>
      getEgressPoliciesOrBuilderList() {
    return egressPolicies_;
  }
  /**
   *
   *
   * <pre>
   * List of [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
   * each of which is evaluated separately. Access is granted if any
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
   * </code>
   */
  @java.lang.Override
  public int getEgressPoliciesCount() {
    return egressPolicies_.size();
  }
  /**
   *
   *
   * <pre>
   * List of [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
   * each of which is evaluated separately. Access is granted if any
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
   * </code>
   */
  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
      getEgressPolicies(int index) {
    return egressPolicies_.get(index);
  }
  /**
   *
   *
   * <pre>
   * List of [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
   * each of which is evaluated separately. Access is granted if any
   * [EgressPolicy]
   * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
   * grants it. Must be empty for a perimeter bridge.
   * </pre>
   *
   * <code>
   * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
   * </code>
   */
  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicyOrBuilder
      getEgressPoliciesOrBuilder(int index) {
    return egressPolicies_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < resources_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resources_.getRaw(i));
    }
    for (int i = 0; i < accessLevels_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, accessLevels_.getRaw(i));
    }
    for (int i = 0; i < restrictedServices_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, restrictedServices_.getRaw(i));
    }
    for (int i = 0; i < ingressPolicies_.size(); i++) {
      output.writeMessage(8, ingressPolicies_.get(i));
    }
    for (int i = 0; i < egressPolicies_.size(); i++) {
      output.writeMessage(9, egressPolicies_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(10, getVpcAccessibleServices());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < resources_.size(); i++) {
        dataSize += computeStringSizeNoTag(resources_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getResourcesList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < accessLevels_.size(); i++) {
        dataSize += computeStringSizeNoTag(accessLevels_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAccessLevelsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < restrictedServices_.size(); i++) {
        dataSize += computeStringSizeNoTag(restrictedServices_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRestrictedServicesList().size();
    }
    for (int i = 0; i < ingressPolicies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, ingressPolicies_.get(i));
    }
    for (int i = 0; i < egressPolicies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, egressPolicies_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(10, getVpcAccessibleServices());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig)) {
      return super.equals(obj);
    }
    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig other =
        (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig) obj;

    if (!getResourcesList().equals(other.getResourcesList())) return false;
    if (!getAccessLevelsList().equals(other.getAccessLevelsList())) return false;
    if (!getRestrictedServicesList().equals(other.getRestrictedServicesList())) return false;
    if (hasVpcAccessibleServices() != other.hasVpcAccessibleServices()) return false;
    if (hasVpcAccessibleServices()) {
      if (!getVpcAccessibleServices().equals(other.getVpcAccessibleServices())) return false;
    }
    if (!getIngressPoliciesList().equals(other.getIngressPoliciesList())) return false;
    if (!getEgressPoliciesList().equals(other.getEgressPoliciesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getResourcesCount() > 0) {
      hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + getResourcesList().hashCode();
    }
    if (getAccessLevelsCount() > 0) {
      hash = (37 * hash) + ACCESS_LEVELS_FIELD_NUMBER;
      hash = (53 * hash) + getAccessLevelsList().hashCode();
    }
    if (getRestrictedServicesCount() > 0) {
      hash = (37 * hash) + RESTRICTED_SERVICES_FIELD_NUMBER;
      hash = (53 * hash) + getRestrictedServicesList().hashCode();
    }
    if (hasVpcAccessibleServices()) {
      hash = (37 * hash) + VPC_ACCESSIBLE_SERVICES_FIELD_NUMBER;
      hash = (53 * hash) + getVpcAccessibleServices().hashCode();
    }
    if (getIngressPoliciesCount() > 0) {
      hash = (37 * hash) + INGRESS_POLICIES_FIELD_NUMBER;
      hash = (53 * hash) + getIngressPoliciesList().hashCode();
    }
    if (getEgressPoliciesCount() > 0) {
      hash = (37 * hash) + EGRESS_POLICIES_FIELD_NUMBER;
      hash = (53 * hash) + getEgressPoliciesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * `ServicePerimeterConfig` specifies a set of Google Cloud resources that
   * describe specific Service Perimeter configuration.
   * </pre>
   *
   * Protobuf type {@code google.identity.accesscontextmanager.v1.ServicePerimeterConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.class,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.Builder.class);
    }

    // Construct using
    // com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getVpcAccessibleServicesFieldBuilder();
        getIngressPoliciesFieldBuilder();
        getEgressPoliciesFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
      accessLevels_ = com.google.protobuf.LazyStringArrayList.emptyList();
      restrictedServices_ = com.google.protobuf.LazyStringArrayList.emptyList();
      vpcAccessibleServices_ = null;
      if (vpcAccessibleServicesBuilder_ != null) {
        vpcAccessibleServicesBuilder_.dispose();
        vpcAccessibleServicesBuilder_ = null;
      }
      if (ingressPoliciesBuilder_ == null) {
        ingressPolicies_ = java.util.Collections.emptyList();
      } else {
        ingressPolicies_ = null;
        ingressPoliciesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (egressPoliciesBuilder_ == null) {
        egressPolicies_ = java.util.Collections.emptyList();
      } else {
        egressPolicies_ = null;
        egressPoliciesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterProto
          .internal_static_google_identity_accesscontextmanager_v1_ServicePerimeterConfig_descriptor;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
        getDefaultInstanceForType() {
      return com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig build() {
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig buildPartial() {
      com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig result =
          new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig result) {
      if (ingressPoliciesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          ingressPolicies_ = java.util.Collections.unmodifiableList(ingressPolicies_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.ingressPolicies_ = ingressPolicies_;
      } else {
        result.ingressPolicies_ = ingressPoliciesBuilder_.build();
      }
      if (egressPoliciesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          egressPolicies_ = java.util.Collections.unmodifiableList(egressPolicies_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.egressPolicies_ = egressPolicies_;
      } else {
        result.egressPolicies_ = egressPoliciesBuilder_.build();
      }
    }

    private void buildPartial0(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        resources_.makeImmutable();
        result.resources_ = resources_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        accessLevels_.makeImmutable();
        result.accessLevels_ = accessLevels_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        restrictedServices_.makeImmutable();
        result.restrictedServices_ = restrictedServices_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.vpcAccessibleServices_ =
            vpcAccessibleServicesBuilder_ == null
                ? vpcAccessibleServices_
                : vpcAccessibleServicesBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig) {
        return mergeFrom(
            (com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig other) {
      if (other
          == com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
              .getDefaultInstance()) return this;
      if (!other.resources_.isEmpty()) {
        if (resources_.isEmpty()) {
          resources_ = other.resources_;
          bitField0_ |= 0x00000001;
        } else {
          ensureResourcesIsMutable();
          resources_.addAll(other.resources_);
        }
        onChanged();
      }
      if (!other.accessLevels_.isEmpty()) {
        if (accessLevels_.isEmpty()) {
          accessLevels_ = other.accessLevels_;
          bitField0_ |= 0x00000002;
        } else {
          ensureAccessLevelsIsMutable();
          accessLevels_.addAll(other.accessLevels_);
        }
        onChanged();
      }
      if (!other.restrictedServices_.isEmpty()) {
        if (restrictedServices_.isEmpty()) {
          restrictedServices_ = other.restrictedServices_;
          bitField0_ |= 0x00000004;
        } else {
          ensureRestrictedServicesIsMutable();
          restrictedServices_.addAll(other.restrictedServices_);
        }
        onChanged();
      }
      if (other.hasVpcAccessibleServices()) {
        mergeVpcAccessibleServices(other.getVpcAccessibleServices());
      }
      if (ingressPoliciesBuilder_ == null) {
        if (!other.ingressPolicies_.isEmpty()) {
          if (ingressPolicies_.isEmpty()) {
            ingressPolicies_ = other.ingressPolicies_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureIngressPoliciesIsMutable();
            ingressPolicies_.addAll(other.ingressPolicies_);
          }
          onChanged();
        }
      } else {
        if (!other.ingressPolicies_.isEmpty()) {
          if (ingressPoliciesBuilder_.isEmpty()) {
            ingressPoliciesBuilder_.dispose();
            ingressPoliciesBuilder_ = null;
            ingressPolicies_ = other.ingressPolicies_;
            bitField0_ = (bitField0_ & ~0x00000010);
            ingressPoliciesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getIngressPoliciesFieldBuilder()
                    : null;
          } else {
            ingressPoliciesBuilder_.addAllMessages(other.ingressPolicies_);
          }
        }
      }
      if (egressPoliciesBuilder_ == null) {
        if (!other.egressPolicies_.isEmpty()) {
          if (egressPolicies_.isEmpty()) {
            egressPolicies_ = other.egressPolicies_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEgressPoliciesIsMutable();
            egressPolicies_.addAll(other.egressPolicies_);
          }
          onChanged();
        }
      } else {
        if (!other.egressPolicies_.isEmpty()) {
          if (egressPoliciesBuilder_.isEmpty()) {
            egressPoliciesBuilder_.dispose();
            egressPoliciesBuilder_ = null;
            egressPolicies_ = other.egressPolicies_;
            bitField0_ = (bitField0_ & ~0x00000020);
            egressPoliciesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getEgressPoliciesFieldBuilder()
                    : null;
          } else {
            egressPoliciesBuilder_.addAllMessages(other.egressPolicies_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureResourcesIsMutable();
                resources_.add(s);
                break;
              } // case 10
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureAccessLevelsIsMutable();
                accessLevels_.add(s);
                break;
              } // case 18
            case 34:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureRestrictedServicesIsMutable();
                restrictedServices_.add(s);
                break;
              } // case 34
            case 66:
              {
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy m =
                    input.readMessage(
                        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                            .IngressPolicy.parser(),
                        extensionRegistry);
                if (ingressPoliciesBuilder_ == null) {
                  ensureIngressPoliciesIsMutable();
                  ingressPolicies_.add(m);
                } else {
                  ingressPoliciesBuilder_.addMessage(m);
                }
                break;
              } // case 66
            case 74:
              {
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy m =
                    input.readMessage(
                        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                            .EgressPolicy.parser(),
                        extensionRegistry);
                if (egressPoliciesBuilder_ == null) {
                  ensureEgressPoliciesIsMutable();
                  egressPolicies_.add(m);
                } else {
                  egressPoliciesBuilder_.addMessage(m);
                }
                break;
              } // case 74
            case 82:
              {
                input.readMessage(
                    getVpcAccessibleServicesFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 82
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.LazyStringArrayList resources_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureResourcesIsMutable() {
      if (!resources_.isModifiable()) {
        resources_ = new com.google.protobuf.LazyStringArrayList(resources_);
      }
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return A list containing the resources.
     */
    public com.google.protobuf.ProtocolStringList getResourcesList() {
      resources_.makeImmutable();
      return resources_;
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return The count of resources.
     */
    public int getResourcesCount() {
      return resources_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    public java.lang.String getResources(int index) {
      return resources_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the resources at the given index.
     */
    public com.google.protobuf.ByteString getResourcesBytes(int index) {
      return resources_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param index The index to set the value at.
     * @param value The resources to set.
     * @return This builder for chaining.
     */
    public Builder setResources(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureResourcesIsMutable();
      resources_.set(index, value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param value The resources to add.
     * @return This builder for chaining.
     */
    public Builder addResources(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureResourcesIsMutable();
      resources_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param values The resources to add.
     * @return This builder for chaining.
     */
    public Builder addAllResources(java.lang.Iterable<java.lang.String> values) {
      ensureResourcesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, resources_);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearResources() {
      resources_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of Google Cloud resources that are inside of the service perimeter.
     * Currently only projects are allowed. Format: `projects/{project_number}`
     * </pre>
     *
     * <code>repeated string resources = 1;</code>
     *
     * @param value The bytes of the resources to add.
     * @return This builder for chaining.
     */
    public Builder addResourcesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureResourcesIsMutable();
      resources_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList accessLevels_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureAccessLevelsIsMutable() {
      if (!accessLevels_.isModifiable()) {
        accessLevels_ = new com.google.protobuf.LazyStringArrayList(accessLevels_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @return A list containing the accessLevels.
     */
    public com.google.protobuf.ProtocolStringList getAccessLevelsList() {
      accessLevels_.makeImmutable();
      return accessLevels_;
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @return The count of accessLevels.
     */
    public int getAccessLevelsCount() {
      return accessLevels_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The accessLevels at the given index.
     */
    public java.lang.String getAccessLevels(int index) {
      return accessLevels_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the accessLevels at the given index.
     */
    public com.google.protobuf.ByteString getAccessLevelsBytes(int index) {
      return accessLevels_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @param index The index to set the value at.
     * @param value The accessLevels to set.
     * @return This builder for chaining.
     */
    public Builder setAccessLevels(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAccessLevelsIsMutable();
      accessLevels_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @param value The accessLevels to add.
     * @return This builder for chaining.
     */
    public Builder addAccessLevels(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAccessLevelsIsMutable();
      accessLevels_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @param values The accessLevels to add.
     * @return This builder for chaining.
     */
    public Builder addAllAccessLevels(java.lang.Iterable<java.lang.String> values) {
      ensureAccessLevelsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, accessLevels_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAccessLevels() {
      accessLevels_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of `AccessLevel` resource names that allow resources within the
     * `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
     * must be in the same policy as this `ServicePerimeter`. Referencing a
     * nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
     * listed, resources within the perimeter can only be accessed via Google
     * Cloud calls with request origins within the perimeter. Example:
     * `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
     * For Service Perimeter Bridge, must be empty.
     * </pre>
     *
     * <code>repeated string access_levels = 2;</code>
     *
     * @param value The bytes of the accessLevels to add.
     * @return This builder for chaining.
     */
    public Builder addAccessLevelsBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureAccessLevelsIsMutable();
      accessLevels_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList restrictedServices_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureRestrictedServicesIsMutable() {
      if (!restrictedServices_.isModifiable()) {
        restrictedServices_ = new com.google.protobuf.LazyStringArrayList(restrictedServices_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @return A list containing the restrictedServices.
     */
    public com.google.protobuf.ProtocolStringList getRestrictedServicesList() {
      restrictedServices_.makeImmutable();
      return restrictedServices_;
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @return The count of restrictedServices.
     */
    public int getRestrictedServicesCount() {
      return restrictedServices_.size();
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @param index The index of the element to return.
     * @return The restrictedServices at the given index.
     */
    public java.lang.String getRestrictedServices(int index) {
      return restrictedServices_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the restrictedServices at the given index.
     */
    public com.google.protobuf.ByteString getRestrictedServicesBytes(int index) {
      return restrictedServices_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @param index The index to set the value at.
     * @param value The restrictedServices to set.
     * @return This builder for chaining.
     */
    public Builder setRestrictedServices(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRestrictedServicesIsMutable();
      restrictedServices_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @param value The restrictedServices to add.
     * @return This builder for chaining.
     */
    public Builder addRestrictedServices(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRestrictedServicesIsMutable();
      restrictedServices_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @param values The restrictedServices to add.
     * @return This builder for chaining.
     */
    public Builder addAllRestrictedServices(java.lang.Iterable<java.lang.String> values) {
      ensureRestrictedServicesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, restrictedServices_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRestrictedServices() {
      restrictedServices_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Google Cloud services that are subject to the Service Perimeter
     * restrictions. For example, if `storage.googleapis.com` is specified, access
     * to the storage buckets inside the perimeter must meet the perimeter's
     * access restrictions.
     * </pre>
     *
     * <code>repeated string restricted_services = 4;</code>
     *
     * @param value The bytes of the restrictedServices to add.
     * @return This builder for chaining.
     */
    public Builder addRestrictedServicesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureRestrictedServicesIsMutable();
      restrictedServices_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
        vpcAccessibleServices_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServices,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
                .Builder,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServicesOrBuilder>
        vpcAccessibleServicesBuilder_;
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     *
     * @return Whether the vpcAccessibleServices field is set.
     */
    public boolean hasVpcAccessibleServices() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     *
     * @return The vpcAccessibleServices.
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
        getVpcAccessibleServices() {
      if (vpcAccessibleServicesBuilder_ == null) {
        return vpcAccessibleServices_ == null
            ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServices.getDefaultInstance()
            : vpcAccessibleServices_;
      } else {
        return vpcAccessibleServicesBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    public Builder setVpcAccessibleServices(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            value) {
      if (vpcAccessibleServicesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vpcAccessibleServices_ = value;
      } else {
        vpcAccessibleServicesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    public Builder setVpcAccessibleServices(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
                .Builder
            builderForValue) {
      if (vpcAccessibleServicesBuilder_ == null) {
        vpcAccessibleServices_ = builderForValue.build();
      } else {
        vpcAccessibleServicesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    public Builder mergeVpcAccessibleServices(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            value) {
      if (vpcAccessibleServicesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && vpcAccessibleServices_ != null
            && vpcAccessibleServices_
                != com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServices.getDefaultInstance()) {
          getVpcAccessibleServicesBuilder().mergeFrom(value);
        } else {
          vpcAccessibleServices_ = value;
        }
      } else {
        vpcAccessibleServicesBuilder_.mergeFrom(value);
      }
      if (vpcAccessibleServices_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    public Builder clearVpcAccessibleServices() {
      bitField0_ = (bitField0_ & ~0x00000008);
      vpcAccessibleServices_ = null;
      if (vpcAccessibleServicesBuilder_ != null) {
        vpcAccessibleServicesBuilder_.dispose();
        vpcAccessibleServicesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
            .Builder
        getVpcAccessibleServicesBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getVpcAccessibleServicesFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
            .VpcAccessibleServicesOrBuilder
        getVpcAccessibleServicesOrBuilder() {
      if (vpcAccessibleServicesBuilder_ != null) {
        return vpcAccessibleServicesBuilder_.getMessageOrBuilder();
      } else {
        return vpcAccessibleServices_ == null
            ? com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServices.getDefaultInstance()
            : vpcAccessibleServices_;
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration for APIs allowed within Perimeter.
     * </pre>
     *
     * <code>
     * .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices vpc_accessible_services = 10;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServices,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.VpcAccessibleServices
                .Builder,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .VpcAccessibleServicesOrBuilder>
        getVpcAccessibleServicesFieldBuilder() {
      if (vpcAccessibleServicesBuilder_ == null) {
        vpcAccessibleServicesBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServices,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServices.Builder,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .VpcAccessibleServicesOrBuilder>(
                getVpcAccessibleServices(), getParentForChildren(), isClean());
        vpcAccessibleServices_ = null;
      }
      return vpcAccessibleServicesBuilder_;
    }

    private java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy>
        ingressPolicies_ = java.util.Collections.emptyList();

    private void ensureIngressPoliciesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        ingressPolicies_ =
            new java.util.ArrayList<
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy>(
                ingressPolicies_);
        bitField0_ |= 0x00000010;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                .Builder,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .IngressPolicyOrBuilder>
        ingressPoliciesBuilder_;

    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy>
        getIngressPoliciesList() {
      if (ingressPoliciesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ingressPolicies_);
      } else {
        return ingressPoliciesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public int getIngressPoliciesCount() {
      if (ingressPoliciesBuilder_ == null) {
        return ingressPolicies_.size();
      } else {
        return ingressPoliciesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
        getIngressPolicies(int index) {
      if (ingressPoliciesBuilder_ == null) {
        return ingressPolicies_.get(index);
      } else {
        return ingressPoliciesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder setIngressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy value) {
      if (ingressPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.set(index, value);
        onChanged();
      } else {
        ingressPoliciesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder setIngressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.Builder
            builderForValue) {
      if (ingressPoliciesBuilder_ == null) {
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.set(index, builderForValue.build());
        onChanged();
      } else {
        ingressPoliciesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder addIngressPolicies(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy value) {
      if (ingressPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.add(value);
        onChanged();
      } else {
        ingressPoliciesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder addIngressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy value) {
      if (ingressPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.add(index, value);
        onChanged();
      } else {
        ingressPoliciesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder addIngressPolicies(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.Builder
            builderForValue) {
      if (ingressPoliciesBuilder_ == null) {
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.add(builderForValue.build());
        onChanged();
      } else {
        ingressPoliciesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder addIngressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.Builder
            builderForValue) {
      if (ingressPoliciesBuilder_ == null) {
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.add(index, builderForValue.build());
        onChanged();
      } else {
        ingressPoliciesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder addAllIngressPolicies(
        java.lang.Iterable<
                ? extends
                    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                        .IngressPolicy>
            values) {
      if (ingressPoliciesBuilder_ == null) {
        ensureIngressPoliciesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, ingressPolicies_);
        onChanged();
      } else {
        ingressPoliciesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder clearIngressPolicies() {
      if (ingressPoliciesBuilder_ == null) {
        ingressPolicies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        ingressPoliciesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public Builder removeIngressPolicies(int index) {
      if (ingressPoliciesBuilder_ == null) {
        ensureIngressPoliciesIsMutable();
        ingressPolicies_.remove(index);
        onChanged();
      } else {
        ingressPoliciesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.Builder
        getIngressPoliciesBuilder(int index) {
      return getIngressPoliciesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicyOrBuilder
        getIngressPoliciesOrBuilder(int index) {
      if (ingressPoliciesBuilder_ == null) {
        return ingressPolicies_.get(index);
      } else {
        return ingressPoliciesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .IngressPolicyOrBuilder>
        getIngressPoliciesOrBuilderList() {
      if (ingressPoliciesBuilder_ != null) {
        return ingressPoliciesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ingressPolicies_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.Builder
        addIngressPoliciesBuilder() {
      return getIngressPoliciesFieldBuilder()
          .addBuilder(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy.Builder
        addIngressPoliciesBuilder(int index) {
      return getIngressPoliciesFieldBuilder()
          .addBuilder(
              index,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [IngressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy],
     * each of which is evaluated separately. Access is granted if any [Ingress
     * Policy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy ingress_policies = 8;
     * </code>
     */
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                .Builder>
        getIngressPoliciesBuilderList() {
      return getIngressPoliciesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                .Builder,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .IngressPolicyOrBuilder>
        getIngressPoliciesFieldBuilder() {
      if (ingressPoliciesBuilder_ == null) {
        ingressPoliciesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.IngressPolicy
                    .Builder,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .IngressPolicyOrBuilder>(
                ingressPolicies_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        ingressPolicies_ = null;
      }
      return ingressPoliciesBuilder_;
    }

    private java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy>
        egressPolicies_ = java.util.Collections.emptyList();

    private void ensureEgressPoliciesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        egressPolicies_ =
            new java.util.ArrayList<
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy>(
                egressPolicies_);
        bitField0_ |= 0x00000020;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .EgressPolicyOrBuilder>
        egressPoliciesBuilder_;

    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy>
        getEgressPoliciesList() {
      if (egressPoliciesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(egressPolicies_);
      } else {
        return egressPoliciesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public int getEgressPoliciesCount() {
      if (egressPoliciesBuilder_ == null) {
        return egressPolicies_.size();
      } else {
        return egressPoliciesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
        getEgressPolicies(int index) {
      if (egressPoliciesBuilder_ == null) {
        return egressPolicies_.get(index);
      } else {
        return egressPoliciesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder setEgressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy value) {
      if (egressPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEgressPoliciesIsMutable();
        egressPolicies_.set(index, value);
        onChanged();
      } else {
        egressPoliciesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder setEgressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder
            builderForValue) {
      if (egressPoliciesBuilder_ == null) {
        ensureEgressPoliciesIsMutable();
        egressPolicies_.set(index, builderForValue.build());
        onChanged();
      } else {
        egressPoliciesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder addEgressPolicies(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy value) {
      if (egressPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEgressPoliciesIsMutable();
        egressPolicies_.add(value);
        onChanged();
      } else {
        egressPoliciesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder addEgressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy value) {
      if (egressPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEgressPoliciesIsMutable();
        egressPolicies_.add(index, value);
        onChanged();
      } else {
        egressPoliciesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder addEgressPolicies(
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder
            builderForValue) {
      if (egressPoliciesBuilder_ == null) {
        ensureEgressPoliciesIsMutable();
        egressPolicies_.add(builderForValue.build());
        onChanged();
      } else {
        egressPoliciesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder addEgressPolicies(
        int index,
        com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder
            builderForValue) {
      if (egressPoliciesBuilder_ == null) {
        ensureEgressPoliciesIsMutable();
        egressPolicies_.add(index, builderForValue.build());
        onChanged();
      } else {
        egressPoliciesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder addAllEgressPolicies(
        java.lang.Iterable<
                ? extends
                    com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy>
            values) {
      if (egressPoliciesBuilder_ == null) {
        ensureEgressPoliciesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, egressPolicies_);
        onChanged();
      } else {
        egressPoliciesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder clearEgressPolicies() {
      if (egressPoliciesBuilder_ == null) {
        egressPolicies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        egressPoliciesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public Builder removeEgressPolicies(int index) {
      if (egressPoliciesBuilder_ == null) {
        ensureEgressPoliciesIsMutable();
        egressPolicies_.remove(index);
        onChanged();
      } else {
        egressPoliciesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder
        getEgressPoliciesBuilder(int index) {
      return getEgressPoliciesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicyOrBuilder
        getEgressPoliciesOrBuilder(int index) {
      if (egressPoliciesBuilder_ == null) {
        return egressPolicies_.get(index);
      } else {
        return egressPoliciesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public java.util.List<
            ? extends
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .EgressPolicyOrBuilder>
        getEgressPoliciesOrBuilderList() {
      if (egressPoliciesBuilder_ != null) {
        return egressPoliciesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(egressPolicies_);
      }
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder
        addEgressPoliciesBuilder() {
      return getEgressPoliciesFieldBuilder()
          .addBuilder(
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder
        addEgressPoliciesBuilder(int index) {
      return getEgressPoliciesFieldBuilder()
          .addBuilder(
              index,
              com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * List of [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * to apply to the perimeter. A perimeter may have multiple [EgressPolicies]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy],
     * each of which is evaluated separately. Access is granted if any
     * [EgressPolicy]
     * [google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy]
     * grants it. Must be empty for a perimeter bridge.
     * </pre>
     *
     * <code>
     * repeated .google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy egress_policies = 9;
     * </code>
     */
    public java.util.List<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder>
        getEgressPoliciesBuilderList() {
      return getEgressPoliciesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy.Builder,
            com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                .EgressPolicyOrBuilder>
        getEgressPoliciesFieldBuilder() {
      if (egressPoliciesBuilder_ == null) {
        egressPoliciesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig.EgressPolicy
                    .Builder,
                com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
                    .EgressPolicyOrBuilder>(
                egressPolicies_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        egressPolicies_ = null;
      }
      return egressPoliciesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  }

  // @@protoc_insertion_point(class_scope:google.identity.accesscontextmanager.v1.ServicePerimeterConfig)
  private static final com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig();
  }

  public static com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServicePerimeterConfig> PARSER =
      new com.google.protobuf.AbstractParser<ServicePerimeterConfig>() {
        @java.lang.Override
        public ServicePerimeterConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ServicePerimeterConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServicePerimeterConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.identity.accesscontextmanager.v1.ServicePerimeterConfig
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
