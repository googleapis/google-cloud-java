/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/translate/v3/common.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.translate.v3;

/**
 *
 *
 * <pre>
 * Represents a single entry in a glossary.
 * </pre>
 *
 * Protobuf type {@code google.cloud.translation.v3.GlossaryEntry}
 */
public final class GlossaryEntry extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.translation.v3.GlossaryEntry)
    GlossaryEntryOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GlossaryEntry.newBuilder() to construct.
  private GlossaryEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GlossaryEntry() {
    name_ = "";
    description_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GlossaryEntry();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.translate.v3.CommonProto
        .internal_static_google_cloud_translation_v3_GlossaryEntry_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.translate.v3.CommonProto
        .internal_static_google_cloud_translation_v3_GlossaryEntry_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.translate.v3.GlossaryEntry.class,
            com.google.cloud.translate.v3.GlossaryEntry.Builder.class);
  }

  public interface GlossaryTermsPairOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The source term is the term that will get match in the text,
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     *
     * @return Whether the sourceTerm field is set.
     */
    boolean hasSourceTerm();
    /**
     *
     *
     * <pre>
     * The source term is the term that will get match in the text,
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     *
     * @return The sourceTerm.
     */
    com.google.cloud.translate.v3.GlossaryTerm getSourceTerm();
    /**
     *
     *
     * <pre>
     * The source term is the term that will get match in the text,
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     */
    com.google.cloud.translate.v3.GlossaryTermOrBuilder getSourceTermOrBuilder();

    /**
     *
     *
     * <pre>
     * The term that will replace the match source term.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     *
     * @return Whether the targetTerm field is set.
     */
    boolean hasTargetTerm();
    /**
     *
     *
     * <pre>
     * The term that will replace the match source term.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     *
     * @return The targetTerm.
     */
    com.google.cloud.translate.v3.GlossaryTerm getTargetTerm();
    /**
     *
     *
     * <pre>
     * The term that will replace the match source term.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     */
    com.google.cloud.translate.v3.GlossaryTermOrBuilder getTargetTermOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * Represents a single entry for an unidirectional glossary.
   * </pre>
   *
   * Protobuf type {@code google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair}
   */
  public static final class GlossaryTermsPair extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair)
      GlossaryTermsPairOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use GlossaryTermsPair.newBuilder() to construct.
    private GlossaryTermsPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GlossaryTermsPair() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new GlossaryTermsPair();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsPair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.class,
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_TERM_FIELD_NUMBER = 1;
    private com.google.cloud.translate.v3.GlossaryTerm sourceTerm_;
    /**
     *
     *
     * <pre>
     * The source term is the term that will get match in the text,
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     *
     * @return Whether the sourceTerm field is set.
     */
    @java.lang.Override
    public boolean hasSourceTerm() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The source term is the term that will get match in the text,
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     *
     * @return The sourceTerm.
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryTerm getSourceTerm() {
      return sourceTerm_ == null
          ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
          : sourceTerm_;
    }
    /**
     *
     *
     * <pre>
     * The source term is the term that will get match in the text,
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryTermOrBuilder getSourceTermOrBuilder() {
      return sourceTerm_ == null
          ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
          : sourceTerm_;
    }

    public static final int TARGET_TERM_FIELD_NUMBER = 2;
    private com.google.cloud.translate.v3.GlossaryTerm targetTerm_;
    /**
     *
     *
     * <pre>
     * The term that will replace the match source term.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     *
     * @return Whether the targetTerm field is set.
     */
    @java.lang.Override
    public boolean hasTargetTerm() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * The term that will replace the match source term.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     *
     * @return The targetTerm.
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryTerm getTargetTerm() {
      return targetTerm_ == null
          ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
          : targetTerm_;
    }
    /**
     *
     *
     * <pre>
     * The term that will replace the match source term.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryTermOrBuilder getTargetTermOrBuilder() {
      return targetTerm_ == null
          ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
          : targetTerm_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getSourceTerm());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getTargetTerm());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getSourceTerm());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getTargetTerm());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair)) {
        return super.equals(obj);
      }
      com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair other =
          (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) obj;

      if (hasSourceTerm() != other.hasSourceTerm()) return false;
      if (hasSourceTerm()) {
        if (!getSourceTerm().equals(other.getSourceTerm())) return false;
      }
      if (hasTargetTerm() != other.hasTargetTerm()) return false;
      if (hasTargetTerm()) {
        if (!getTargetTerm().equals(other.getTargetTerm())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSourceTerm()) {
        hash = (37 * hash) + SOURCE_TERM_FIELD_NUMBER;
        hash = (53 * hash) + getSourceTerm().hashCode();
      }
      if (hasTargetTerm()) {
        hash = (37 * hash) + TARGET_TERM_FIELD_NUMBER;
        hash = (53 * hash) + getTargetTerm().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Represents a single entry for an unidirectional glossary.
     * </pre>
     *
     * Protobuf type {@code google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair)
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.translate.v3.CommonProto
            .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsPair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.translate.v3.CommonProto
            .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.class,
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder.class);
      }

      // Construct using com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getSourceTermFieldBuilder();
          getTargetTermFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sourceTerm_ = null;
        if (sourceTermBuilder_ != null) {
          sourceTermBuilder_.dispose();
          sourceTermBuilder_ = null;
        }
        targetTerm_ = null;
        if (targetTermBuilder_ != null) {
          targetTermBuilder_.dispose();
          targetTermBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.translate.v3.CommonProto
            .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsPair_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair
          getDefaultInstanceForType() {
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair build() {
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair buildPartial() {
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair result =
            new com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sourceTerm_ =
              sourceTermBuilder_ == null ? sourceTerm_ : sourceTermBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.targetTerm_ =
              targetTermBuilder_ == null ? targetTerm_ : targetTermBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) {
          return mergeFrom((com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair other) {
        if (other
            == com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance())
          return this;
        if (other.hasSourceTerm()) {
          mergeSourceTerm(other.getSourceTerm());
        }
        if (other.hasTargetTerm()) {
          mergeTargetTerm(other.getTargetTerm());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getSourceTermFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getTargetTermFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.cloud.translate.v3.GlossaryTerm sourceTerm_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.translate.v3.GlossaryTerm,
              com.google.cloud.translate.v3.GlossaryTerm.Builder,
              com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          sourceTermBuilder_;
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       *
       * @return Whether the sourceTerm field is set.
       */
      public boolean hasSourceTerm() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       *
       * @return The sourceTerm.
       */
      public com.google.cloud.translate.v3.GlossaryTerm getSourceTerm() {
        if (sourceTermBuilder_ == null) {
          return sourceTerm_ == null
              ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
              : sourceTerm_;
        } else {
          return sourceTermBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      public Builder setSourceTerm(com.google.cloud.translate.v3.GlossaryTerm value) {
        if (sourceTermBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceTerm_ = value;
        } else {
          sourceTermBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      public Builder setSourceTerm(
          com.google.cloud.translate.v3.GlossaryTerm.Builder builderForValue) {
        if (sourceTermBuilder_ == null) {
          sourceTerm_ = builderForValue.build();
        } else {
          sourceTermBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      public Builder mergeSourceTerm(com.google.cloud.translate.v3.GlossaryTerm value) {
        if (sourceTermBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)
              && sourceTerm_ != null
              && sourceTerm_ != com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()) {
            getSourceTermBuilder().mergeFrom(value);
          } else {
            sourceTerm_ = value;
          }
        } else {
          sourceTermBuilder_.mergeFrom(value);
        }
        if (sourceTerm_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      public Builder clearSourceTerm() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceTerm_ = null;
        if (sourceTermBuilder_ != null) {
          sourceTermBuilder_.dispose();
          sourceTermBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTerm.Builder getSourceTermBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSourceTermFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTermOrBuilder getSourceTermOrBuilder() {
        if (sourceTermBuilder_ != null) {
          return sourceTermBuilder_.getMessageOrBuilder();
        } else {
          return sourceTerm_ == null
              ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
              : sourceTerm_;
        }
      }
      /**
       *
       *
       * <pre>
       * The source term is the term that will get match in the text,
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.translate.v3.GlossaryTerm,
              com.google.cloud.translate.v3.GlossaryTerm.Builder,
              com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          getSourceTermFieldBuilder() {
        if (sourceTermBuilder_ == null) {
          sourceTermBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.cloud.translate.v3.GlossaryTerm,
                  com.google.cloud.translate.v3.GlossaryTerm.Builder,
                  com.google.cloud.translate.v3.GlossaryTermOrBuilder>(
                  getSourceTerm(), getParentForChildren(), isClean());
          sourceTerm_ = null;
        }
        return sourceTermBuilder_;
      }

      private com.google.cloud.translate.v3.GlossaryTerm targetTerm_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.translate.v3.GlossaryTerm,
              com.google.cloud.translate.v3.GlossaryTerm.Builder,
              com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          targetTermBuilder_;
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       *
       * @return Whether the targetTerm field is set.
       */
      public boolean hasTargetTerm() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       *
       * @return The targetTerm.
       */
      public com.google.cloud.translate.v3.GlossaryTerm getTargetTerm() {
        if (targetTermBuilder_ == null) {
          return targetTerm_ == null
              ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
              : targetTerm_;
        } else {
          return targetTermBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      public Builder setTargetTerm(com.google.cloud.translate.v3.GlossaryTerm value) {
        if (targetTermBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetTerm_ = value;
        } else {
          targetTermBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      public Builder setTargetTerm(
          com.google.cloud.translate.v3.GlossaryTerm.Builder builderForValue) {
        if (targetTermBuilder_ == null) {
          targetTerm_ = builderForValue.build();
        } else {
          targetTermBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      public Builder mergeTargetTerm(com.google.cloud.translate.v3.GlossaryTerm value) {
        if (targetTermBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && targetTerm_ != null
              && targetTerm_ != com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()) {
            getTargetTermBuilder().mergeFrom(value);
          } else {
            targetTerm_ = value;
          }
        } else {
          targetTermBuilder_.mergeFrom(value);
        }
        if (targetTerm_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      public Builder clearTargetTerm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetTerm_ = null;
        if (targetTermBuilder_ != null) {
          targetTermBuilder_.dispose();
          targetTermBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTerm.Builder getTargetTermBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTargetTermFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTermOrBuilder getTargetTermOrBuilder() {
        if (targetTermBuilder_ != null) {
          return targetTermBuilder_.getMessageOrBuilder();
        } else {
          return targetTerm_ == null
              ? com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance()
              : targetTerm_;
        }
      }
      /**
       *
       *
       * <pre>
       * The term that will replace the match source term.
       * </pre>
       *
       * <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.translate.v3.GlossaryTerm,
              com.google.cloud.translate.v3.GlossaryTerm.Builder,
              com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          getTargetTermFieldBuilder() {
        if (targetTermBuilder_ == null) {
          targetTermBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.cloud.translate.v3.GlossaryTerm,
                  com.google.cloud.translate.v3.GlossaryTerm.Builder,
                  com.google.cloud.translate.v3.GlossaryTermOrBuilder>(
                  getTargetTerm(), getParentForChildren(), isClean());
          targetTerm_ = null;
        }
        return targetTermBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair)
    private static final com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair();
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GlossaryTermsPair> PARSER =
        new com.google.protobuf.AbstractParser<GlossaryTermsPair>() {
          @java.lang.Override
          public GlossaryTermsPair parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<GlossaryTermsPair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GlossaryTermsPair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface GlossaryTermsSetOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    java.util.List<com.google.cloud.translate.v3.GlossaryTerm> getTermsList();
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    com.google.cloud.translate.v3.GlossaryTerm getTerms(int index);
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    int getTermsCount();
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    java.util.List<? extends com.google.cloud.translate.v3.GlossaryTermOrBuilder>
        getTermsOrBuilderList();
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    com.google.cloud.translate.v3.GlossaryTermOrBuilder getTermsOrBuilder(int index);
  }
  /**
   *
   *
   * <pre>
   * Represents a single entry for an equivalent term set glossary. This is used
   * for equivalent term sets where each term can be replaced by the other terms
   * in the set.
   * </pre>
   *
   * Protobuf type {@code google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet}
   */
  public static final class GlossaryTermsSet extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet)
      GlossaryTermsSetOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use GlossaryTermsSet.newBuilder() to construct.
    private GlossaryTermsSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GlossaryTermsSet() {
      terms_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new GlossaryTermsSet();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.class,
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder.class);
    }

    public static final int TERMS_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private java.util.List<com.google.cloud.translate.v3.GlossaryTerm> terms_;
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.cloud.translate.v3.GlossaryTerm> getTermsList() {
      return terms_;
    }
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.cloud.translate.v3.GlossaryTermOrBuilder>
        getTermsOrBuilderList() {
      return terms_;
    }
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    @java.lang.Override
    public int getTermsCount() {
      return terms_.size();
    }
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryTerm getTerms(int index) {
      return terms_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Each term in the set represents a term that can be replaced by the other
     * terms.
     * </pre>
     *
     * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryTermOrBuilder getTermsOrBuilder(int index) {
      return terms_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < terms_.size(); i++) {
        output.writeMessage(1, terms_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < terms_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, terms_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet)) {
        return super.equals(obj);
      }
      com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet other =
          (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) obj;

      if (!getTermsList().equals(other.getTermsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTermsCount() > 0) {
        hash = (37 * hash) + TERMS_FIELD_NUMBER;
        hash = (53 * hash) + getTermsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Represents a single entry for an equivalent term set glossary. This is used
     * for equivalent term sets where each term can be replaced by the other terms
     * in the set.
     * </pre>
     *
     * Protobuf type {@code google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet)
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.translate.v3.CommonProto
            .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.translate.v3.CommonProto
            .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.class,
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder.class);
      }

      // Construct using com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (termsBuilder_ == null) {
          terms_ = java.util.Collections.emptyList();
        } else {
          terms_ = null;
          termsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.translate.v3.CommonProto
            .internal_static_google_cloud_translation_v3_GlossaryEntry_GlossaryTermsSet_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet
          getDefaultInstanceForType() {
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet build() {
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet buildPartial() {
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet result =
            new com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet result) {
        if (termsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            terms_ = java.util.Collections.unmodifiableList(terms_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.terms_ = terms_;
        } else {
          result.terms_ = termsBuilder_.build();
        }
      }

      private void buildPartial0(
          com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) {
          return mergeFrom((com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet other) {
        if (other
            == com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance())
          return this;
        if (termsBuilder_ == null) {
          if (!other.terms_.isEmpty()) {
            if (terms_.isEmpty()) {
              terms_ = other.terms_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTermsIsMutable();
              terms_.addAll(other.terms_);
            }
            onChanged();
          }
        } else {
          if (!other.terms_.isEmpty()) {
            if (termsBuilder_.isEmpty()) {
              termsBuilder_.dispose();
              termsBuilder_ = null;
              terms_ = other.terms_;
              bitField0_ = (bitField0_ & ~0x00000001);
              termsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getTermsFieldBuilder()
                      : null;
            } else {
              termsBuilder_.addAllMessages(other.terms_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  com.google.cloud.translate.v3.GlossaryTerm m =
                      input.readMessage(
                          com.google.cloud.translate.v3.GlossaryTerm.parser(), extensionRegistry);
                  if (termsBuilder_ == null) {
                    ensureTermsIsMutable();
                    terms_.add(m);
                  } else {
                    termsBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.util.List<com.google.cloud.translate.v3.GlossaryTerm> terms_ =
          java.util.Collections.emptyList();

      private void ensureTermsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          terms_ = new java.util.ArrayList<com.google.cloud.translate.v3.GlossaryTerm>(terms_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.translate.v3.GlossaryTerm,
              com.google.cloud.translate.v3.GlossaryTerm.Builder,
              com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          termsBuilder_;

      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public java.util.List<com.google.cloud.translate.v3.GlossaryTerm> getTermsList() {
        if (termsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(terms_);
        } else {
          return termsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public int getTermsCount() {
        if (termsBuilder_ == null) {
          return terms_.size();
        } else {
          return termsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTerm getTerms(int index) {
        if (termsBuilder_ == null) {
          return terms_.get(index);
        } else {
          return termsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder setTerms(int index, com.google.cloud.translate.v3.GlossaryTerm value) {
        if (termsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTermsIsMutable();
          terms_.set(index, value);
          onChanged();
        } else {
          termsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder setTerms(
          int index, com.google.cloud.translate.v3.GlossaryTerm.Builder builderForValue) {
        if (termsBuilder_ == null) {
          ensureTermsIsMutable();
          terms_.set(index, builderForValue.build());
          onChanged();
        } else {
          termsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder addTerms(com.google.cloud.translate.v3.GlossaryTerm value) {
        if (termsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTermsIsMutable();
          terms_.add(value);
          onChanged();
        } else {
          termsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder addTerms(int index, com.google.cloud.translate.v3.GlossaryTerm value) {
        if (termsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTermsIsMutable();
          terms_.add(index, value);
          onChanged();
        } else {
          termsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder addTerms(com.google.cloud.translate.v3.GlossaryTerm.Builder builderForValue) {
        if (termsBuilder_ == null) {
          ensureTermsIsMutable();
          terms_.add(builderForValue.build());
          onChanged();
        } else {
          termsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder addTerms(
          int index, com.google.cloud.translate.v3.GlossaryTerm.Builder builderForValue) {
        if (termsBuilder_ == null) {
          ensureTermsIsMutable();
          terms_.add(index, builderForValue.build());
          onChanged();
        } else {
          termsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder addAllTerms(
          java.lang.Iterable<? extends com.google.cloud.translate.v3.GlossaryTerm> values) {
        if (termsBuilder_ == null) {
          ensureTermsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, terms_);
          onChanged();
        } else {
          termsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder clearTerms() {
        if (termsBuilder_ == null) {
          terms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          termsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public Builder removeTerms(int index) {
        if (termsBuilder_ == null) {
          ensureTermsIsMutable();
          terms_.remove(index);
          onChanged();
        } else {
          termsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTerm.Builder getTermsBuilder(int index) {
        return getTermsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTermOrBuilder getTermsOrBuilder(int index) {
        if (termsBuilder_ == null) {
          return terms_.get(index);
        } else {
          return termsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public java.util.List<? extends com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          getTermsOrBuilderList() {
        if (termsBuilder_ != null) {
          return termsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(terms_);
        }
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTerm.Builder addTermsBuilder() {
        return getTermsFieldBuilder()
            .addBuilder(com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public com.google.cloud.translate.v3.GlossaryTerm.Builder addTermsBuilder(int index) {
        return getTermsFieldBuilder()
            .addBuilder(index, com.google.cloud.translate.v3.GlossaryTerm.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Each term in the set represents a term that can be replaced by the other
       * terms.
       * </pre>
       *
       * <code>repeated .google.cloud.translation.v3.GlossaryTerm terms = 1;</code>
       */
      public java.util.List<com.google.cloud.translate.v3.GlossaryTerm.Builder>
          getTermsBuilderList() {
        return getTermsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.translate.v3.GlossaryTerm,
              com.google.cloud.translate.v3.GlossaryTerm.Builder,
              com.google.cloud.translate.v3.GlossaryTermOrBuilder>
          getTermsFieldBuilder() {
        if (termsBuilder_ == null) {
          termsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.cloud.translate.v3.GlossaryTerm,
                  com.google.cloud.translate.v3.GlossaryTerm.Builder,
                  com.google.cloud.translate.v3.GlossaryTermOrBuilder>(
                  terms_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
          terms_ = null;
        }
        return termsBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet)
    private static final com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet();
    }

    public static com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GlossaryTermsSet> PARSER =
        new com.google.protobuf.AbstractParser<GlossaryTermsSet>() {
          @java.lang.Override
          public GlossaryTermsSet parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<GlossaryTermsSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GlossaryTermsSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int dataCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object data_;

  public enum DataCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TERMS_PAIR(2),
    TERMS_SET(3),
    DATA_NOT_SET(0);
    private final int value;

    private DataCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataCase forNumber(int value) {
      switch (value) {
        case 2:
          return TERMS_PAIR;
        case 3:
          return TERMS_SET;
        case 0:
          return DATA_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public DataCase getDataCase() {
    return DataCase.forNumber(dataCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the entry.
   * Format:
   *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the entry.
   * Format:
   *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TERMS_PAIR_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * Used for an unidirectional glossary.
   * </pre>
   *
   * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
   *
   * @return Whether the termsPair field is set.
   */
  @java.lang.Override
  public boolean hasTermsPair() {
    return dataCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * Used for an unidirectional glossary.
   * </pre>
   *
   * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
   *
   * @return The termsPair.
   */
  @java.lang.Override
  public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair getTermsPair() {
    if (dataCase_ == 2) {
      return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_;
    }
    return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Used for an unidirectional glossary.
   * </pre>
   *
   * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPairOrBuilder
      getTermsPairOrBuilder() {
    if (dataCase_ == 2) {
      return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_;
    }
    return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
  }

  public static final int TERMS_SET_FIELD_NUMBER = 3;
  /**
   *
   *
   * <pre>
   * Used for an equivalent term sets glossary.
   * </pre>
   *
   * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
   *
   * @return Whether the termsSet field is set.
   */
  @java.lang.Override
  public boolean hasTermsSet() {
    return dataCase_ == 3;
  }
  /**
   *
   *
   * <pre>
   * Used for an equivalent term sets glossary.
   * </pre>
   *
   * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
   *
   * @return The termsSet.
   */
  @java.lang.Override
  public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet getTermsSet() {
    if (dataCase_ == 3) {
      return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_;
    }
    return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Used for an equivalent term sets glossary.
   * </pre>
   *
   * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
   */
  @java.lang.Override
  public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSetOrBuilder
      getTermsSetOrBuilder() {
    if (dataCase_ == 3) {
      return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_;
    }
    return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   *
   *
   * <pre>
   * Describes the glossary entry.
   * </pre>
   *
   * <code>string description = 4;</code>
   *
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Describes the glossary entry.
   * </pre>
   *
   * <code>string description = 4;</code>
   *
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (dataCase_ == 2) {
      output.writeMessage(2, (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_);
    }
    if (dataCase_ == 3) {
      output.writeMessage(3, (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (dataCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_);
    }
    if (dataCase_ == 3) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.translate.v3.GlossaryEntry)) {
      return super.equals(obj);
    }
    com.google.cloud.translate.v3.GlossaryEntry other =
        (com.google.cloud.translate.v3.GlossaryEntry) obj;

    if (!getName().equals(other.getName())) return false;
    if (!getDescription().equals(other.getDescription())) return false;
    if (!getDataCase().equals(other.getDataCase())) return false;
    switch (dataCase_) {
      case 2:
        if (!getTermsPair().equals(other.getTermsPair())) return false;
        break;
      case 3:
        if (!getTermsSet().equals(other.getTermsSet())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    switch (dataCase_) {
      case 2:
        hash = (37 * hash) + TERMS_PAIR_FIELD_NUMBER;
        hash = (53 * hash) + getTermsPair().hashCode();
        break;
      case 3:
        hash = (37 * hash) + TERMS_SET_FIELD_NUMBER;
        hash = (53 * hash) + getTermsSet().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.translate.v3.GlossaryEntry parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.translate.v3.GlossaryEntry prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Represents a single entry in a glossary.
   * </pre>
   *
   * Protobuf type {@code google.cloud.translation.v3.GlossaryEntry}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.translation.v3.GlossaryEntry)
      com.google.cloud.translate.v3.GlossaryEntryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.translate.v3.GlossaryEntry.class,
              com.google.cloud.translate.v3.GlossaryEntry.Builder.class);
    }

    // Construct using com.google.cloud.translate.v3.GlossaryEntry.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      if (termsPairBuilder_ != null) {
        termsPairBuilder_.clear();
      }
      if (termsSetBuilder_ != null) {
        termsSetBuilder_.clear();
      }
      description_ = "";
      dataCase_ = 0;
      data_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.translate.v3.CommonProto
          .internal_static_google_cloud_translation_v3_GlossaryEntry_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry getDefaultInstanceForType() {
      return com.google.cloud.translate.v3.GlossaryEntry.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry build() {
      com.google.cloud.translate.v3.GlossaryEntry result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry buildPartial() {
      com.google.cloud.translate.v3.GlossaryEntry result =
          new com.google.cloud.translate.v3.GlossaryEntry(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.translate.v3.GlossaryEntry result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.description_ = description_;
      }
    }

    private void buildPartialOneofs(com.google.cloud.translate.v3.GlossaryEntry result) {
      result.dataCase_ = dataCase_;
      result.data_ = this.data_;
      if (dataCase_ == 2 && termsPairBuilder_ != null) {
        result.data_ = termsPairBuilder_.build();
      }
      if (dataCase_ == 3 && termsSetBuilder_ != null) {
        result.data_ = termsSetBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.translate.v3.GlossaryEntry) {
        return mergeFrom((com.google.cloud.translate.v3.GlossaryEntry) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.translate.v3.GlossaryEntry other) {
      if (other == com.google.cloud.translate.v3.GlossaryEntry.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      switch (other.getDataCase()) {
        case TERMS_PAIR:
          {
            mergeTermsPair(other.getTermsPair());
            break;
          }
        case TERMS_SET:
          {
            mergeTermsSet(other.getTermsSet());
            break;
          }
        case DATA_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getTermsPairFieldBuilder().getBuilder(), extensionRegistry);
                dataCase_ = 2;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getTermsSetFieldBuilder().getBuilder(), extensionRegistry);
                dataCase_ = 3;
                break;
              } // case 26
            case 34:
              {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;

    public DataCase getDataCase() {
      return DataCase.forNumber(dataCase_);
    }

    public Builder clearData() {
      dataCase_ = 0;
      data_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the entry.
     * Format:
     *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the entry.
     * Format:
     *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the entry.
     * Format:
     *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the entry.
     * Format:
     *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the entry.
     * Format:
     *   `projects/&#42;&#47;locations/&#42;&#47;glossaries/&#42;&#47;glossaryEntries/&#42;`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPairOrBuilder>
        termsPairBuilder_;
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     *
     * @return Whether the termsPair field is set.
     */
    @java.lang.Override
    public boolean hasTermsPair() {
      return dataCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     *
     * @return The termsPair.
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair getTermsPair() {
      if (termsPairBuilder_ == null) {
        if (dataCase_ == 2) {
          return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_;
        }
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
      } else {
        if (dataCase_ == 2) {
          return termsPairBuilder_.getMessage();
        }
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    public Builder setTermsPair(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair value) {
      if (termsPairBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        termsPairBuilder_.setMessage(value);
      }
      dataCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    public Builder setTermsPair(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder builderForValue) {
      if (termsPairBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        termsPairBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    public Builder mergeTermsPair(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair value) {
      if (termsPairBuilder_ == null) {
        if (dataCase_ == 2
            && data_
                != com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair
                    .getDefaultInstance()) {
          data_ =
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.newBuilder(
                      (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 2) {
          termsPairBuilder_.mergeFrom(value);
        } else {
          termsPairBuilder_.setMessage(value);
        }
      }
      dataCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    public Builder clearTermsPair() {
      if (termsPairBuilder_ == null) {
        if (dataCase_ == 2) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 2) {
          dataCase_ = 0;
          data_ = null;
        }
        termsPairBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder
        getTermsPairBuilder() {
      return getTermsPairFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPairOrBuilder
        getTermsPairOrBuilder() {
      if ((dataCase_ == 2) && (termsPairBuilder_ != null)) {
        return termsPairBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 2) {
          return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_;
        }
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Used for an unidirectional glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair terms_pair = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPairOrBuilder>
        getTermsPairFieldBuilder() {
      if (termsPairBuilder_ == null) {
        if (!(dataCase_ == 2)) {
          data_ =
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.getDefaultInstance();
        }
        termsPairBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair,
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair.Builder,
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPairOrBuilder>(
                (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsPair) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 2;
      onChanged();
      return termsPairBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSetOrBuilder>
        termsSetBuilder_;
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     *
     * @return Whether the termsSet field is set.
     */
    @java.lang.Override
    public boolean hasTermsSet() {
      return dataCase_ == 3;
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     *
     * @return The termsSet.
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet getTermsSet() {
      if (termsSetBuilder_ == null) {
        if (dataCase_ == 3) {
          return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_;
        }
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
      } else {
        if (dataCase_ == 3) {
          return termsSetBuilder_.getMessage();
        }
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    public Builder setTermsSet(com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet value) {
      if (termsSetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        termsSetBuilder_.setMessage(value);
      }
      dataCase_ = 3;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    public Builder setTermsSet(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder builderForValue) {
      if (termsSetBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        termsSetBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 3;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    public Builder mergeTermsSet(
        com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet value) {
      if (termsSetBuilder_ == null) {
        if (dataCase_ == 3
            && data_
                != com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet
                    .getDefaultInstance()) {
          data_ =
              com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.newBuilder(
                      (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 3) {
          termsSetBuilder_.mergeFrom(value);
        } else {
          termsSetBuilder_.setMessage(value);
        }
      }
      dataCase_ = 3;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    public Builder clearTermsSet() {
      if (termsSetBuilder_ == null) {
        if (dataCase_ == 3) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 3) {
          dataCase_ = 0;
          data_ = null;
        }
        termsSetBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder
        getTermsSetBuilder() {
      return getTermsSetFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    @java.lang.Override
    public com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSetOrBuilder
        getTermsSetOrBuilder() {
      if ((dataCase_ == 3) && (termsSetBuilder_ != null)) {
        return termsSetBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 3) {
          return (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_;
        }
        return com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Used for an equivalent term sets glossary.
     * </pre>
     *
     * <code>.google.cloud.translation.v3.GlossaryEntry.GlossaryTermsSet terms_set = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder,
            com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSetOrBuilder>
        getTermsSetFieldBuilder() {
      if (termsSetBuilder_ == null) {
        if (!(dataCase_ == 3)) {
          data_ = com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.getDefaultInstance();
        }
        termsSetBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet,
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet.Builder,
                com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSetOrBuilder>(
                (com.google.cloud.translate.v3.GlossaryEntry.GlossaryTermsSet) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 3;
      onChanged();
      return termsSetBuilder_;
    }

    private java.lang.Object description_ = "";
    /**
     *
     *
     * <pre>
     * Describes the glossary entry.
     * </pre>
     *
     * <code>string description = 4;</code>
     *
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Describes the glossary entry.
     * </pre>
     *
     * <code>string description = 4;</code>
     *
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Describes the glossary entry.
     * </pre>
     *
     * <code>string description = 4;</code>
     *
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      description_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Describes the glossary entry.
     * </pre>
     *
     * <code>string description = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Describes the glossary entry.
     * </pre>
     *
     * <code>string description = 4;</code>
     *
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.translation.v3.GlossaryEntry)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.translation.v3.GlossaryEntry)
  private static final com.google.cloud.translate.v3.GlossaryEntry DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.translate.v3.GlossaryEntry();
  }

  public static com.google.cloud.translate.v3.GlossaryEntry getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GlossaryEntry> PARSER =
      new com.google.protobuf.AbstractParser<GlossaryEntry>() {
        @java.lang.Override
        public GlossaryEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GlossaryEntry> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GlossaryEntry> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.translate.v3.GlossaryEntry getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
