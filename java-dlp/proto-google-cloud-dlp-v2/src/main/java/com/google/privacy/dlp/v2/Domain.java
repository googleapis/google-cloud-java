/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.8
package com.google.privacy.dlp.v2;

/**
 *
 *
 * <pre>
 * A domain represents a thematic category that a data profile can fall under.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2.Domain}
 */
public final class Domain extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2.Domain)
    DomainOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use Domain.newBuilder() to construct.
  private Domain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Domain() {
    category_ = 0;
    signals_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Domain();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.privacy.dlp.v2.DlpProto
        .internal_static_google_privacy_dlp_v2_Domain_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2.DlpProto
        .internal_static_google_privacy_dlp_v2_Domain_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2.Domain.class, com.google.privacy.dlp.v2.Domain.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * This enum defines the various domain categories a data profile can fall
   * under.
   * </pre>
   *
   * Protobuf enum {@code google.privacy.dlp.v2.Domain.Category}
   */
  public enum Category implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Category unspecified.
     * </pre>
     *
     * <code>CATEGORY_UNSPECIFIED = 0;</code>
     */
    CATEGORY_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Indicates that the data profile is related to artificial intelligence.
     * When set, all findings stored to Security Command Center will set the
     * corresponding AI domain field of `Finding` objects.
     * </pre>
     *
     * <code>AI = 1;</code>
     */
    AI(1),
    /**
     *
     *
     * <pre>
     * Indicates that the data profile is related to code.
     * </pre>
     *
     * <code>CODE = 2;</code>
     */
    CODE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Category unspecified.
     * </pre>
     *
     * <code>CATEGORY_UNSPECIFIED = 0;</code>
     */
    public static final int CATEGORY_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Indicates that the data profile is related to artificial intelligence.
     * When set, all findings stored to Security Command Center will set the
     * corresponding AI domain field of `Finding` objects.
     * </pre>
     *
     * <code>AI = 1;</code>
     */
    public static final int AI_VALUE = 1;

    /**
     *
     *
     * <pre>
     * Indicates that the data profile is related to code.
     * </pre>
     *
     * <code>CODE = 2;</code>
     */
    public static final int CODE_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Category valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Category forNumber(int value) {
      switch (value) {
        case 0:
          return CATEGORY_UNSPECIFIED;
        case 1:
          return AI;
        case 2:
          return CODE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Category> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Category> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Category>() {
          public Category findValueByNumber(int number) {
            return Category.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.privacy.dlp.v2.Domain.getDescriptor().getEnumTypes().get(0);
    }

    private static final Category[] VALUES = values();

    public static Category valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Category(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.privacy.dlp.v2.Domain.Category)
  }

  /**
   *
   *
   * <pre>
   * The signal used to determine the category.
   * This list may increase over time.
   * </pre>
   *
   * Protobuf enum {@code google.privacy.dlp.v2.Domain.Signal}
   */
  public enum Signal implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Unused.
     * </pre>
     *
     * <code>SIGNAL_UNSPECIFIED = 0;</code>
     */
    SIGNAL_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * One or more machine learning models are present.
     * </pre>
     *
     * <code>MODEL = 1;</code>
     */
    MODEL(1),
    /**
     *
     *
     * <pre>
     * A table appears to be a text embedding.
     * </pre>
     *
     * <code>TEXT_EMBEDDING = 2;</code>
     */
    TEXT_EMBEDDING(2),
    /**
     *
     *
     * <pre>
     * The [Cloud SQL Vertex
     * AI](https://cloud.google.com/sql/docs/postgres/integrate-cloud-sql-with-vertex-ai)
     * plugin is installed on the database.
     * </pre>
     *
     * <code>VERTEX_PLUGIN = 3;</code>
     */
    VERTEX_PLUGIN(3),
    /**
     *
     *
     * <pre>
     * Support for [Cloud SQL vector
     * embeddings](https://cloud.google.com/sql/docs/mysql/enable-vector-search)
     * is enabled on the database.
     * </pre>
     *
     * <code>VECTOR_PLUGIN = 4;</code>
     */
    VECTOR_PLUGIN(4),
    /**
     *
     *
     * <pre>
     * Source code is present.
     * </pre>
     *
     * <code>SOURCE_CODE = 5;</code>
     */
    SOURCE_CODE(5),
    /**
     *
     *
     * <pre>
     * If the service determines the category type. For example, Vertex AI
     * assets would always have a `Category` of `AI`.
     * </pre>
     *
     * <code>SERVICE = 6;</code>
     */
    SERVICE(6),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Unused.
     * </pre>
     *
     * <code>SIGNAL_UNSPECIFIED = 0;</code>
     */
    public static final int SIGNAL_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * One or more machine learning models are present.
     * </pre>
     *
     * <code>MODEL = 1;</code>
     */
    public static final int MODEL_VALUE = 1;

    /**
     *
     *
     * <pre>
     * A table appears to be a text embedding.
     * </pre>
     *
     * <code>TEXT_EMBEDDING = 2;</code>
     */
    public static final int TEXT_EMBEDDING_VALUE = 2;

    /**
     *
     *
     * <pre>
     * The [Cloud SQL Vertex
     * AI](https://cloud.google.com/sql/docs/postgres/integrate-cloud-sql-with-vertex-ai)
     * plugin is installed on the database.
     * </pre>
     *
     * <code>VERTEX_PLUGIN = 3;</code>
     */
    public static final int VERTEX_PLUGIN_VALUE = 3;

    /**
     *
     *
     * <pre>
     * Support for [Cloud SQL vector
     * embeddings](https://cloud.google.com/sql/docs/mysql/enable-vector-search)
     * is enabled on the database.
     * </pre>
     *
     * <code>VECTOR_PLUGIN = 4;</code>
     */
    public static final int VECTOR_PLUGIN_VALUE = 4;

    /**
     *
     *
     * <pre>
     * Source code is present.
     * </pre>
     *
     * <code>SOURCE_CODE = 5;</code>
     */
    public static final int SOURCE_CODE_VALUE = 5;

    /**
     *
     *
     * <pre>
     * If the service determines the category type. For example, Vertex AI
     * assets would always have a `Category` of `AI`.
     * </pre>
     *
     * <code>SERVICE = 6;</code>
     */
    public static final int SERVICE_VALUE = 6;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Signal valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Signal forNumber(int value) {
      switch (value) {
        case 0:
          return SIGNAL_UNSPECIFIED;
        case 1:
          return MODEL;
        case 2:
          return TEXT_EMBEDDING;
        case 3:
          return VERTEX_PLUGIN;
        case 4:
          return VECTOR_PLUGIN;
        case 5:
          return SOURCE_CODE;
        case 6:
          return SERVICE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Signal> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Signal> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Signal>() {
          public Signal findValueByNumber(int number) {
            return Signal.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.privacy.dlp.v2.Domain.getDescriptor().getEnumTypes().get(1);
    }

    private static final Signal[] VALUES = values();

    public static Signal valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Signal(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.privacy.dlp.v2.Domain.Signal)
  }

  public static final int CATEGORY_FIELD_NUMBER = 1;
  private int category_ = 0;

  /**
   *
   *
   * <pre>
   * A domain category that this profile is related to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
   *
   * @return The enum numeric value on the wire for category.
   */
  @java.lang.Override
  public int getCategoryValue() {
    return category_;
  }

  /**
   *
   *
   * <pre>
   * A domain category that this profile is related to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
   *
   * @return The category.
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.Domain.Category getCategory() {
    com.google.privacy.dlp.v2.Domain.Category result =
        com.google.privacy.dlp.v2.Domain.Category.forNumber(category_);
    return result == null ? com.google.privacy.dlp.v2.Domain.Category.UNRECOGNIZED : result;
  }

  public static final int SIGNALS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> signals_;

  private static final com.google.protobuf.Internal.ListAdapter.Converter<
          java.lang.Integer, com.google.privacy.dlp.v2.Domain.Signal>
      signals_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.privacy.dlp.v2.Domain.Signal>() {
            public com.google.privacy.dlp.v2.Domain.Signal convert(java.lang.Integer from) {
              com.google.privacy.dlp.v2.Domain.Signal result =
                  com.google.privacy.dlp.v2.Domain.Signal.forNumber(from);
              return result == null ? com.google.privacy.dlp.v2.Domain.Signal.UNRECOGNIZED : result;
            }
          };

  /**
   *
   *
   * <pre>
   * The collection of signals that influenced selection of the category.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
   *
   * @return A list containing the signals.
   */
  @java.lang.Override
  public java.util.List<com.google.privacy.dlp.v2.Domain.Signal> getSignalsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.privacy.dlp.v2.Domain.Signal>(signals_, signals_converter_);
  }

  /**
   *
   *
   * <pre>
   * The collection of signals that influenced selection of the category.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
   *
   * @return The count of signals.
   */
  @java.lang.Override
  public int getSignalsCount() {
    return signals_.size();
  }

  /**
   *
   *
   * <pre>
   * The collection of signals that influenced selection of the category.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The signals at the given index.
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.Domain.Signal getSignals(int index) {
    return signals_converter_.convert(signals_.get(index));
  }

  /**
   *
   *
   * <pre>
   * The collection of signals that influenced selection of the category.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
   *
   * @return A list containing the enum numeric values on the wire for signals.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer> getSignalsValueList() {
    return signals_;
  }

  /**
   *
   *
   * <pre>
   * The collection of signals that influenced selection of the category.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of signals at the given index.
   */
  @java.lang.Override
  public int getSignalsValue(int index) {
    return signals_.get(index);
  }

  private int signalsMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    getSerializedSize();
    if (category_ != com.google.privacy.dlp.v2.Domain.Category.CATEGORY_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, category_);
    }
    if (getSignalsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(signalsMemoizedSerializedSize);
    }
    for (int i = 0; i < signals_.size(); i++) {
      output.writeEnumNoTag(signals_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (category_ != com.google.privacy.dlp.v2.Domain.Category.CATEGORY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, category_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < signals_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(signals_.get(i));
      }
      size += dataSize;
      if (!getSignalsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(dataSize);
      }
      signalsMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2.Domain)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2.Domain other = (com.google.privacy.dlp.v2.Domain) obj;

    if (category_ != other.category_) return false;
    if (!signals_.equals(other.signals_)) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
    hash = (53 * hash) + category_;
    if (getSignalsCount() > 0) {
      hash = (37 * hash) + SIGNALS_FIELD_NUMBER;
      hash = (53 * hash) + signals_.hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.Domain parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.Domain parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.Domain parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.privacy.dlp.v2.Domain prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * A domain represents a thematic category that a data profile can fall under.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2.Domain}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2.Domain)
      com.google.privacy.dlp.v2.DomainOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_Domain_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_Domain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2.Domain.class,
              com.google.privacy.dlp.v2.Domain.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2.Domain.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      category_ = 0;
      signals_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_Domain_descriptor;
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.Domain getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2.Domain.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.Domain build() {
      com.google.privacy.dlp.v2.Domain result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.Domain buildPartial() {
      com.google.privacy.dlp.v2.Domain result = new com.google.privacy.dlp.v2.Domain(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.privacy.dlp.v2.Domain result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        signals_ = java.util.Collections.unmodifiableList(signals_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.signals_ = signals_;
    }

    private void buildPartial0(com.google.privacy.dlp.v2.Domain result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.category_ = category_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2.Domain) {
        return mergeFrom((com.google.privacy.dlp.v2.Domain) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2.Domain other) {
      if (other == com.google.privacy.dlp.v2.Domain.getDefaultInstance()) return this;
      if (other.category_ != 0) {
        setCategoryValue(other.getCategoryValue());
      }
      if (!other.signals_.isEmpty()) {
        if (signals_.isEmpty()) {
          signals_ = other.signals_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureSignalsIsMutable();
          signals_.addAll(other.signals_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                category_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 16:
              {
                int tmpRaw = input.readEnum();
                ensureSignalsIsMutable();
                signals_.add(tmpRaw);
                break;
              } // case 16
            case 18:
              {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureSignalsIsMutable();
                  signals_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int category_ = 0;

    /**
     *
     *
     * <pre>
     * A domain category that this profile is related to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
     *
     * @return The enum numeric value on the wire for category.
     */
    @java.lang.Override
    public int getCategoryValue() {
      return category_;
    }

    /**
     *
     *
     * <pre>
     * A domain category that this profile is related to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
     *
     * @param value The enum numeric value on the wire for category to set.
     * @return This builder for chaining.
     */
    public Builder setCategoryValue(int value) {
      category_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A domain category that this profile is related to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
     *
     * @return The category.
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.Domain.Category getCategory() {
      com.google.privacy.dlp.v2.Domain.Category result =
          com.google.privacy.dlp.v2.Domain.Category.forNumber(category_);
      return result == null ? com.google.privacy.dlp.v2.Domain.Category.UNRECOGNIZED : result;
    }

    /**
     *
     *
     * <pre>
     * A domain category that this profile is related to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
     *
     * @param value The category to set.
     * @return This builder for chaining.
     */
    public Builder setCategory(com.google.privacy.dlp.v2.Domain.Category value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      category_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * A domain category that this profile is related to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.Domain.Category category = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCategory() {
      bitField0_ = (bitField0_ & ~0x00000001);
      category_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> signals_ = java.util.Collections.emptyList();

    private void ensureSignalsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        signals_ = new java.util.ArrayList<java.lang.Integer>(signals_);
        bitField0_ |= 0x00000002;
      }
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @return A list containing the signals.
     */
    public java.util.List<com.google.privacy.dlp.v2.Domain.Signal> getSignalsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.privacy.dlp.v2.Domain.Signal>(signals_, signals_converter_);
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @return The count of signals.
     */
    public int getSignalsCount() {
      return signals_.size();
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The signals at the given index.
     */
    public com.google.privacy.dlp.v2.Domain.Signal getSignals(int index) {
      return signals_converter_.convert(signals_.get(index));
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param index The index to set the value at.
     * @param value The signals to set.
     * @return This builder for chaining.
     */
    public Builder setSignals(int index, com.google.privacy.dlp.v2.Domain.Signal value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSignalsIsMutable();
      signals_.set(index, value.getNumber());
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param value The signals to add.
     * @return This builder for chaining.
     */
    public Builder addSignals(com.google.privacy.dlp.v2.Domain.Signal value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSignalsIsMutable();
      signals_.add(value.getNumber());
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param values The signals to add.
     * @return This builder for chaining.
     */
    public Builder addAllSignals(
        java.lang.Iterable<? extends com.google.privacy.dlp.v2.Domain.Signal> values) {
      ensureSignalsIsMutable();
      for (com.google.privacy.dlp.v2.Domain.Signal value : values) {
        signals_.add(value.getNumber());
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSignals() {
      signals_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @return A list containing the enum numeric values on the wire for signals.
     */
    public java.util.List<java.lang.Integer> getSignalsValueList() {
      return java.util.Collections.unmodifiableList(signals_);
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of signals at the given index.
     */
    public int getSignalsValue(int index) {
      return signals_.get(index);
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for signals to set.
     * @return This builder for chaining.
     */
    public Builder setSignalsValue(int index, int value) {
      ensureSignalsIsMutable();
      signals_.set(index, value);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param value The enum numeric value on the wire for signals to add.
     * @return This builder for chaining.
     */
    public Builder addSignalsValue(int value) {
      ensureSignalsIsMutable();
      signals_.add(value);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The collection of signals that influenced selection of the category.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.Domain.Signal signals = 2;</code>
     *
     * @param values The enum numeric values on the wire for signals to add.
     * @return This builder for chaining.
     */
    public Builder addAllSignalsValue(java.lang.Iterable<java.lang.Integer> values) {
      ensureSignalsIsMutable();
      for (int value : values) {
        signals_.add(value);
      }
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2.Domain)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2.Domain)
  private static final com.google.privacy.dlp.v2.Domain DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2.Domain();
  }

  public static com.google.privacy.dlp.v2.Domain getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Domain> PARSER =
      new com.google.protobuf.AbstractParser<Domain>() {
        @java.lang.Override
        public Domain parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Domain> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Domain> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.privacy.dlp.v2.Domain getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
