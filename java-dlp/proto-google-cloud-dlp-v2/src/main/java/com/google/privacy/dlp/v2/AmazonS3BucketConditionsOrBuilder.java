/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface AmazonS3BucketConditionsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.AmazonS3BucketConditions)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Bucket types that should be profiled.
   * Optional. Defaults to TYPE_ALL_SUPPORTED if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType bucket_types = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the bucketTypes.
   */
  java.util.List<com.google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType>
      getBucketTypesList();
  /**
   *
   *
   * <pre>
   * Optional. Bucket types that should be profiled.
   * Optional. Defaults to TYPE_ALL_SUPPORTED if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType bucket_types = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of bucketTypes.
   */
  int getBucketTypesCount();
  /**
   *
   *
   * <pre>
   * Optional. Bucket types that should be profiled.
   * Optional. Defaults to TYPE_ALL_SUPPORTED if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType bucket_types = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The bucketTypes at the given index.
   */
  com.google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType getBucketTypes(int index);
  /**
   *
   *
   * <pre>
   * Optional. Bucket types that should be profiled.
   * Optional. Defaults to TYPE_ALL_SUPPORTED if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType bucket_types = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the enum numeric values on the wire for bucketTypes.
   */
  java.util.List<java.lang.Integer> getBucketTypesValueList();
  /**
   *
   *
   * <pre>
   * Optional. Bucket types that should be profiled.
   * Optional. Defaults to TYPE_ALL_SUPPORTED if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType bucket_types = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of bucketTypes at the given index.
   */
  int getBucketTypesValue(int index);

  /**
   *
   *
   * <pre>
   * Optional. Object classes that should be profiled.
   * Optional. Defaults to ALL_SUPPORTED_CLASSES if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass object_storage_classes = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the objectStorageClasses.
   */
  java.util.List<com.google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass>
      getObjectStorageClassesList();
  /**
   *
   *
   * <pre>
   * Optional. Object classes that should be profiled.
   * Optional. Defaults to ALL_SUPPORTED_CLASSES if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass object_storage_classes = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of objectStorageClasses.
   */
  int getObjectStorageClassesCount();
  /**
   *
   *
   * <pre>
   * Optional. Object classes that should be profiled.
   * Optional. Defaults to ALL_SUPPORTED_CLASSES if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass object_storage_classes = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The objectStorageClasses at the given index.
   */
  com.google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass getObjectStorageClasses(
      int index);
  /**
   *
   *
   * <pre>
   * Optional. Object classes that should be profiled.
   * Optional. Defaults to ALL_SUPPORTED_CLASSES if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass object_storage_classes = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the enum numeric values on the wire for objectStorageClasses.
   */
  java.util.List<java.lang.Integer> getObjectStorageClassesValueList();
  /**
   *
   *
   * <pre>
   * Optional. Object classes that should be profiled.
   * Optional. Defaults to ALL_SUPPORTED_CLASSES if unspecified.
   * </pre>
   *
   * <code>
   * repeated .google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass object_storage_classes = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of objectStorageClasses at the given index.
   */
  int getObjectStorageClassesValue(int index);
}
