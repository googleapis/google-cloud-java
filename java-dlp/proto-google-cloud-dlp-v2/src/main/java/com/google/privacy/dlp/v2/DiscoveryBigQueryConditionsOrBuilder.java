/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface DiscoveryBigQueryConditionsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.DiscoveryBigQueryConditions)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * BigQuery table must have been created after this date. Used to avoid
   * backfilling.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 1;</code>
   *
   * @return Whether the createdAfter field is set.
   */
  boolean hasCreatedAfter();
  /**
   *
   *
   * <pre>
   * BigQuery table must have been created after this date. Used to avoid
   * backfilling.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 1;</code>
   *
   * @return The createdAfter.
   */
  com.google.protobuf.Timestamp getCreatedAfter();
  /**
   *
   *
   * <pre>
   * BigQuery table must have been created after this date. Used to avoid
   * backfilling.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_after = 1;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreatedAfterOrBuilder();

  /**
   *
   *
   * <pre>
   * Restrict discovery to specific table types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryTableTypes types = 2;</code>
   *
   * @return Whether the types field is set.
   */
  boolean hasTypes();
  /**
   *
   *
   * <pre>
   * Restrict discovery to specific table types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryTableTypes types = 2;</code>
   *
   * @return The types.
   */
  com.google.privacy.dlp.v2.BigQueryTableTypes getTypes();
  /**
   *
   *
   * <pre>
   * Restrict discovery to specific table types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryTableTypes types = 2;</code>
   */
  com.google.privacy.dlp.v2.BigQueryTableTypesOrBuilder getTypesOrBuilder();

  /**
   *
   *
   * <pre>
   * Restrict discovery to categories of table types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryTableTypeCollection type_collection = 3;</code>
   *
   * @return Whether the typeCollection field is set.
   */
  boolean hasTypeCollection();
  /**
   *
   *
   * <pre>
   * Restrict discovery to categories of table types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryTableTypeCollection type_collection = 3;</code>
   *
   * @return The enum numeric value on the wire for typeCollection.
   */
  int getTypeCollectionValue();
  /**
   *
   *
   * <pre>
   * Restrict discovery to categories of table types.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryTableTypeCollection type_collection = 3;</code>
   *
   * @return The typeCollection.
   */
  com.google.privacy.dlp.v2.BigQueryTableTypeCollection getTypeCollection();

  /**
   *
   *
   * <pre>
   * At least one of the conditions must be true for a table to be scanned.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DiscoveryBigQueryConditions.OrConditions or_conditions = 4;</code>
   *
   * @return Whether the orConditions field is set.
   */
  boolean hasOrConditions();
  /**
   *
   *
   * <pre>
   * At least one of the conditions must be true for a table to be scanned.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DiscoveryBigQueryConditions.OrConditions or_conditions = 4;</code>
   *
   * @return The orConditions.
   */
  com.google.privacy.dlp.v2.DiscoveryBigQueryConditions.OrConditions getOrConditions();
  /**
   *
   *
   * <pre>
   * At least one of the conditions must be true for a table to be scanned.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DiscoveryBigQueryConditions.OrConditions or_conditions = 4;</code>
   */
  com.google.privacy.dlp.v2.DiscoveryBigQueryConditions.OrConditionsOrBuilder
      getOrConditionsOrBuilder();

  com.google.privacy.dlp.v2.DiscoveryBigQueryConditions.IncludedTypesCase getIncludedTypesCase();
}
