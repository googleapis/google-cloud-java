/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/storage.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface DatastoreOptionsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.DatastoreOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * A partition ID identifies a grouping of entities. The grouping is always
   * by project and namespace, however the namespace ID may be empty.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.PartitionId partition_id = 1;</code>
   *
   * @return Whether the partitionId field is set.
   */
  boolean hasPartitionId();
  /**
   *
   *
   * <pre>
   * A partition ID identifies a grouping of entities. The grouping is always
   * by project and namespace, however the namespace ID may be empty.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.PartitionId partition_id = 1;</code>
   *
   * @return The partitionId.
   */
  com.google.privacy.dlp.v2.PartitionId getPartitionId();
  /**
   *
   *
   * <pre>
   * A partition ID identifies a grouping of entities. The grouping is always
   * by project and namespace, however the namespace ID may be empty.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.PartitionId partition_id = 1;</code>
   */
  com.google.privacy.dlp.v2.PartitionIdOrBuilder getPartitionIdOrBuilder();

  /**
   *
   *
   * <pre>
   * The kind to process.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.KindExpression kind = 2;</code>
   *
   * @return Whether the kind field is set.
   */
  boolean hasKind();
  /**
   *
   *
   * <pre>
   * The kind to process.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.KindExpression kind = 2;</code>
   *
   * @return The kind.
   */
  com.google.privacy.dlp.v2.KindExpression getKind();
  /**
   *
   *
   * <pre>
   * The kind to process.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.KindExpression kind = 2;</code>
   */
  com.google.privacy.dlp.v2.KindExpressionOrBuilder getKindOrBuilder();
}
