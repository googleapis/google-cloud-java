/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface DataProfileFindingOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.DataProfileFinding)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The content that was found. Even if the content is not textual, it
   * may be converted to a textual representation here. If the finding exceeds
   * 4096 bytes in length, the quote may be omitted.
   * </pre>
   *
   * <code>string quote = 1;</code>
   *
   * @return The quote.
   */
  java.lang.String getQuote();

  /**
   *
   *
   * <pre>
   * The content that was found. Even if the content is not textual, it
   * may be converted to a textual representation here. If the finding exceeds
   * 4096 bytes in length, the quote may be omitted.
   * </pre>
   *
   * <code>string quote = 1;</code>
   *
   * @return The bytes for quote.
   */
  com.google.protobuf.ByteString getQuoteBytes();

  /**
   *
   *
   * <pre>
   * The [type of
   * content](https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference)
   * that might have been found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.InfoType infotype = 2;</code>
   *
   * @return Whether the infotype field is set.
   */
  boolean hasInfotype();

  /**
   *
   *
   * <pre>
   * The [type of
   * content](https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference)
   * that might have been found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.InfoType infotype = 2;</code>
   *
   * @return The infotype.
   */
  com.google.privacy.dlp.v2.InfoType getInfotype();

  /**
   *
   *
   * <pre>
   * The [type of
   * content](https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference)
   * that might have been found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.InfoType infotype = 2;</code>
   */
  com.google.privacy.dlp.v2.InfoTypeOrBuilder getInfotypeOrBuilder();

  /**
   *
   *
   * <pre>
   * Contains data parsed from quotes. Currently supported infoTypes: DATE,
   * DATE_OF_BIRTH, and TIME.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.QuoteInfo quote_info = 3;</code>
   *
   * @return Whether the quoteInfo field is set.
   */
  boolean hasQuoteInfo();

  /**
   *
   *
   * <pre>
   * Contains data parsed from quotes. Currently supported infoTypes: DATE,
   * DATE_OF_BIRTH, and TIME.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.QuoteInfo quote_info = 3;</code>
   *
   * @return The quoteInfo.
   */
  com.google.privacy.dlp.v2.QuoteInfo getQuoteInfo();

  /**
   *
   *
   * <pre>
   * Contains data parsed from quotes. Currently supported infoTypes: DATE,
   * DATE_OF_BIRTH, and TIME.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.QuoteInfo quote_info = 3;</code>
   */
  com.google.privacy.dlp.v2.QuoteInfoOrBuilder getQuoteInfoOrBuilder();

  /**
   *
   *
   * <pre>
   * Resource name of the data profile associated with the finding.
   * </pre>
   *
   * <code>string data_profile_resource_name = 4;</code>
   *
   * @return The dataProfileResourceName.
   */
  java.lang.String getDataProfileResourceName();

  /**
   *
   *
   * <pre>
   * Resource name of the data profile associated with the finding.
   * </pre>
   *
   * <code>string data_profile_resource_name = 4;</code>
   *
   * @return The bytes for dataProfileResourceName.
   */
  com.google.protobuf.ByteString getDataProfileResourceNameBytes();

  /**
   *
   *
   * <pre>
   * A unique identifier for the finding.
   * </pre>
   *
   * <code>string finding_id = 5;</code>
   *
   * @return The findingId.
   */
  java.lang.String getFindingId();

  /**
   *
   *
   * <pre>
   * A unique identifier for the finding.
   * </pre>
   *
   * <code>string finding_id = 5;</code>
   *
   * @return The bytes for findingId.
   */
  com.google.protobuf.ByteString getFindingIdBytes();

  /**
   *
   *
   * <pre>
   * Timestamp when the finding was detected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 6;</code>
   *
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();

  /**
   *
   *
   * <pre>
   * Timestamp when the finding was detected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 6;</code>
   *
   * @return The timestamp.
   */
  com.google.protobuf.Timestamp getTimestamp();

  /**
   *
   *
   * <pre>
   * Timestamp when the finding was detected.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 6;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

  /**
   *
   *
   * <pre>
   * Where the content was found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DataProfileFindingLocation location = 7;</code>
   *
   * @return Whether the location field is set.
   */
  boolean hasLocation();

  /**
   *
   *
   * <pre>
   * Where the content was found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DataProfileFindingLocation location = 7;</code>
   *
   * @return The location.
   */
  com.google.privacy.dlp.v2.DataProfileFindingLocation getLocation();

  /**
   *
   *
   * <pre>
   * Where the content was found.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DataProfileFindingLocation location = 7;</code>
   */
  com.google.privacy.dlp.v2.DataProfileFindingLocationOrBuilder getLocationOrBuilder();

  /**
   *
   *
   * <pre>
   * How broadly a resource has been shared.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.ResourceVisibility resource_visibility = 8;</code>
   *
   * @return The enum numeric value on the wire for resourceVisibility.
   */
  int getResourceVisibilityValue();

  /**
   *
   *
   * <pre>
   * How broadly a resource has been shared.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.ResourceVisibility resource_visibility = 8;</code>
   *
   * @return The resourceVisibility.
   */
  com.google.privacy.dlp.v2.ResourceVisibility getResourceVisibility();

  /**
   *
   *
   * <pre>
   * The [full resource
   * name](https://cloud.google.com/apis/design/resource_names#full_resource_name)
   * of the resource profiled for this finding.
   * </pre>
   *
   * <code>string full_resource_name = 9;</code>
   *
   * @return The fullResourceName.
   */
  java.lang.String getFullResourceName();

  /**
   *
   *
   * <pre>
   * The [full resource
   * name](https://cloud.google.com/apis/design/resource_names#full_resource_name)
   * of the resource profiled for this finding.
   * </pre>
   *
   * <code>string full_resource_name = 9;</code>
   *
   * @return The bytes for fullResourceName.
   */
  com.google.protobuf.ByteString getFullResourceNameBytes();

  /**
   *
   *
   * <pre>
   * The type of the resource that was profiled.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DataSourceType data_source_type = 10;</code>
   *
   * @return Whether the dataSourceType field is set.
   */
  boolean hasDataSourceType();

  /**
   *
   *
   * <pre>
   * The type of the resource that was profiled.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DataSourceType data_source_type = 10;</code>
   *
   * @return The dataSourceType.
   */
  com.google.privacy.dlp.v2.DataSourceType getDataSourceType();

  /**
   *
   *
   * <pre>
   * The type of the resource that was profiled.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.DataSourceType data_source_type = 10;</code>
   */
  com.google.privacy.dlp.v2.DataSourceTypeOrBuilder getDataSourceTypeOrBuilder();
}
