/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.8
package com.google.privacy.dlp.v2;

public interface HybridInspectStatisticsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.HybridInspectStatistics)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The number of hybrid inspection requests processed within this job.
   * </pre>
   *
   * <code>int64 processed_count = 1;</code>
   *
   * @return The processedCount.
   */
  long getProcessedCount();

  /**
   *
   *
   * <pre>
   * The number of hybrid inspection requests aborted because the job ran
   * out of quota or was ended before they could be processed.
   * </pre>
   *
   * <code>int64 aborted_count = 2;</code>
   *
   * @return The abortedCount.
   */
  long getAbortedCount();

  /**
   *
   *
   * <pre>
   * The number of hybrid requests currently being processed. Only populated
   * when called via method `getDlpJob`.
   * A burst of traffic may cause hybrid inspect requests to be enqueued.
   * Processing will take place as quickly as possible, but resource limitations
   * may impact how long a request is enqueued for.
   * </pre>
   *
   * <code>int64 pending_count = 3;</code>
   *
   * @return The pendingCount.
   */
  long getPendingCount();
}
