/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

/**
 *
 *
 * <pre>
 * A type of transformation that is applied over structured data such as a
 * table.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2.RecordTransformations}
 */
public final class RecordTransformations extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2.RecordTransformations)
    RecordTransformationsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use RecordTransformations.newBuilder() to construct.
  private RecordTransformations(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private RecordTransformations() {
    fieldTransformations_ = java.util.Collections.emptyList();
    recordSuppressions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new RecordTransformations();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.privacy.dlp.v2.DlpProto
        .internal_static_google_privacy_dlp_v2_RecordTransformations_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2.DlpProto
        .internal_static_google_privacy_dlp_v2_RecordTransformations_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2.RecordTransformations.class,
            com.google.privacy.dlp.v2.RecordTransformations.Builder.class);
  }

  public static final int FIELD_TRANSFORMATIONS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.privacy.dlp.v2.FieldTransformation> fieldTransformations_;
  /**
   *
   *
   * <pre>
   * Transform the record by applying various field transformations.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.privacy.dlp.v2.FieldTransformation>
      getFieldTransformationsList() {
    return fieldTransformations_;
  }
  /**
   *
   *
   * <pre>
   * Transform the record by applying various field transformations.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.privacy.dlp.v2.FieldTransformationOrBuilder>
      getFieldTransformationsOrBuilderList() {
    return fieldTransformations_;
  }
  /**
   *
   *
   * <pre>
   * Transform the record by applying various field transformations.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
   */
  @java.lang.Override
  public int getFieldTransformationsCount() {
    return fieldTransformations_.size();
  }
  /**
   *
   *
   * <pre>
   * Transform the record by applying various field transformations.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.FieldTransformation getFieldTransformations(int index) {
    return fieldTransformations_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Transform the record by applying various field transformations.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.FieldTransformationOrBuilder getFieldTransformationsOrBuilder(
      int index) {
    return fieldTransformations_.get(index);
  }

  public static final int RECORD_SUPPRESSIONS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.privacy.dlp.v2.RecordSuppression> recordSuppressions_;
  /**
   *
   *
   * <pre>
   * Configuration defining which records get suppressed entirely. Records that
   * match any suppression rule are omitted from the output.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.privacy.dlp.v2.RecordSuppression> getRecordSuppressionsList() {
    return recordSuppressions_;
  }
  /**
   *
   *
   * <pre>
   * Configuration defining which records get suppressed entirely. Records that
   * match any suppression rule are omitted from the output.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.privacy.dlp.v2.RecordSuppressionOrBuilder>
      getRecordSuppressionsOrBuilderList() {
    return recordSuppressions_;
  }
  /**
   *
   *
   * <pre>
   * Configuration defining which records get suppressed entirely. Records that
   * match any suppression rule are omitted from the output.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
   */
  @java.lang.Override
  public int getRecordSuppressionsCount() {
    return recordSuppressions_.size();
  }
  /**
   *
   *
   * <pre>
   * Configuration defining which records get suppressed entirely. Records that
   * match any suppression rule are omitted from the output.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.RecordSuppression getRecordSuppressions(int index) {
    return recordSuppressions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Configuration defining which records get suppressed entirely. Records that
   * match any suppression rule are omitted from the output.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.RecordSuppressionOrBuilder getRecordSuppressionsOrBuilder(
      int index) {
    return recordSuppressions_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < fieldTransformations_.size(); i++) {
      output.writeMessage(1, fieldTransformations_.get(i));
    }
    for (int i = 0; i < recordSuppressions_.size(); i++) {
      output.writeMessage(2, recordSuppressions_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < fieldTransformations_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(1, fieldTransformations_.get(i));
    }
    for (int i = 0; i < recordSuppressions_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(2, recordSuppressions_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2.RecordTransformations)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2.RecordTransformations other =
        (com.google.privacy.dlp.v2.RecordTransformations) obj;

    if (!getFieldTransformationsList().equals(other.getFieldTransformationsList())) return false;
    if (!getRecordSuppressionsList().equals(other.getRecordSuppressionsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFieldTransformationsCount() > 0) {
      hash = (37 * hash) + FIELD_TRANSFORMATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getFieldTransformationsList().hashCode();
    }
    if (getRecordSuppressionsCount() > 0) {
      hash = (37 * hash) + RECORD_SUPPRESSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getRecordSuppressionsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.RecordTransformations parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.privacy.dlp.v2.RecordTransformations prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A type of transformation that is applied over structured data such as a
   * table.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2.RecordTransformations}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2.RecordTransformations)
      com.google.privacy.dlp.v2.RecordTransformationsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_RecordTransformations_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_RecordTransformations_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2.RecordTransformations.class,
              com.google.privacy.dlp.v2.RecordTransformations.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2.RecordTransformations.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (fieldTransformationsBuilder_ == null) {
        fieldTransformations_ = java.util.Collections.emptyList();
      } else {
        fieldTransformations_ = null;
        fieldTransformationsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (recordSuppressionsBuilder_ == null) {
        recordSuppressions_ = java.util.Collections.emptyList();
      } else {
        recordSuppressions_ = null;
        recordSuppressionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_RecordTransformations_descriptor;
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.RecordTransformations getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2.RecordTransformations.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.RecordTransformations build() {
      com.google.privacy.dlp.v2.RecordTransformations result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.RecordTransformations buildPartial() {
      com.google.privacy.dlp.v2.RecordTransformations result =
          new com.google.privacy.dlp.v2.RecordTransformations(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.privacy.dlp.v2.RecordTransformations result) {
      if (fieldTransformationsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fieldTransformations_ = java.util.Collections.unmodifiableList(fieldTransformations_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fieldTransformations_ = fieldTransformations_;
      } else {
        result.fieldTransformations_ = fieldTransformationsBuilder_.build();
      }
      if (recordSuppressionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          recordSuppressions_ = java.util.Collections.unmodifiableList(recordSuppressions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.recordSuppressions_ = recordSuppressions_;
      } else {
        result.recordSuppressions_ = recordSuppressionsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.privacy.dlp.v2.RecordTransformations result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2.RecordTransformations) {
        return mergeFrom((com.google.privacy.dlp.v2.RecordTransformations) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2.RecordTransformations other) {
      if (other == com.google.privacy.dlp.v2.RecordTransformations.getDefaultInstance())
        return this;
      if (fieldTransformationsBuilder_ == null) {
        if (!other.fieldTransformations_.isEmpty()) {
          if (fieldTransformations_.isEmpty()) {
            fieldTransformations_ = other.fieldTransformations_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFieldTransformationsIsMutable();
            fieldTransformations_.addAll(other.fieldTransformations_);
          }
          onChanged();
        }
      } else {
        if (!other.fieldTransformations_.isEmpty()) {
          if (fieldTransformationsBuilder_.isEmpty()) {
            fieldTransformationsBuilder_.dispose();
            fieldTransformationsBuilder_ = null;
            fieldTransformations_ = other.fieldTransformations_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fieldTransformationsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getFieldTransformationsFieldBuilder()
                    : null;
          } else {
            fieldTransformationsBuilder_.addAllMessages(other.fieldTransformations_);
          }
        }
      }
      if (recordSuppressionsBuilder_ == null) {
        if (!other.recordSuppressions_.isEmpty()) {
          if (recordSuppressions_.isEmpty()) {
            recordSuppressions_ = other.recordSuppressions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRecordSuppressionsIsMutable();
            recordSuppressions_.addAll(other.recordSuppressions_);
          }
          onChanged();
        }
      } else {
        if (!other.recordSuppressions_.isEmpty()) {
          if (recordSuppressionsBuilder_.isEmpty()) {
            recordSuppressionsBuilder_.dispose();
            recordSuppressionsBuilder_ = null;
            recordSuppressions_ = other.recordSuppressions_;
            bitField0_ = (bitField0_ & ~0x00000002);
            recordSuppressionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getRecordSuppressionsFieldBuilder()
                    : null;
          } else {
            recordSuppressionsBuilder_.addAllMessages(other.recordSuppressions_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.privacy.dlp.v2.FieldTransformation m =
                    input.readMessage(
                        com.google.privacy.dlp.v2.FieldTransformation.parser(), extensionRegistry);
                if (fieldTransformationsBuilder_ == null) {
                  ensureFieldTransformationsIsMutable();
                  fieldTransformations_.add(m);
                } else {
                  fieldTransformationsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                com.google.privacy.dlp.v2.RecordSuppression m =
                    input.readMessage(
                        com.google.privacy.dlp.v2.RecordSuppression.parser(), extensionRegistry);
                if (recordSuppressionsBuilder_ == null) {
                  ensureRecordSuppressionsIsMutable();
                  recordSuppressions_.add(m);
                } else {
                  recordSuppressionsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.privacy.dlp.v2.FieldTransformation> fieldTransformations_ =
        java.util.Collections.emptyList();

    private void ensureFieldTransformationsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fieldTransformations_ =
            new java.util.ArrayList<com.google.privacy.dlp.v2.FieldTransformation>(
                fieldTransformations_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.privacy.dlp.v2.FieldTransformation,
            com.google.privacy.dlp.v2.FieldTransformation.Builder,
            com.google.privacy.dlp.v2.FieldTransformationOrBuilder>
        fieldTransformationsBuilder_;

    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2.FieldTransformation>
        getFieldTransformationsList() {
      if (fieldTransformationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fieldTransformations_);
      } else {
        return fieldTransformationsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public int getFieldTransformationsCount() {
      if (fieldTransformationsBuilder_ == null) {
        return fieldTransformations_.size();
      } else {
        return fieldTransformationsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2.FieldTransformation getFieldTransformations(int index) {
      if (fieldTransformationsBuilder_ == null) {
        return fieldTransformations_.get(index);
      } else {
        return fieldTransformationsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder setFieldTransformations(
        int index, com.google.privacy.dlp.v2.FieldTransformation value) {
      if (fieldTransformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.set(index, value);
        onChanged();
      } else {
        fieldTransformationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder setFieldTransformations(
        int index, com.google.privacy.dlp.v2.FieldTransformation.Builder builderForValue) {
      if (fieldTransformationsBuilder_ == null) {
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.set(index, builderForValue.build());
        onChanged();
      } else {
        fieldTransformationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder addFieldTransformations(com.google.privacy.dlp.v2.FieldTransformation value) {
      if (fieldTransformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.add(value);
        onChanged();
      } else {
        fieldTransformationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder addFieldTransformations(
        int index, com.google.privacy.dlp.v2.FieldTransformation value) {
      if (fieldTransformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.add(index, value);
        onChanged();
      } else {
        fieldTransformationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder addFieldTransformations(
        com.google.privacy.dlp.v2.FieldTransformation.Builder builderForValue) {
      if (fieldTransformationsBuilder_ == null) {
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.add(builderForValue.build());
        onChanged();
      } else {
        fieldTransformationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder addFieldTransformations(
        int index, com.google.privacy.dlp.v2.FieldTransformation.Builder builderForValue) {
      if (fieldTransformationsBuilder_ == null) {
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.add(index, builderForValue.build());
        onChanged();
      } else {
        fieldTransformationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder addAllFieldTransformations(
        java.lang.Iterable<? extends com.google.privacy.dlp.v2.FieldTransformation> values) {
      if (fieldTransformationsBuilder_ == null) {
        ensureFieldTransformationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, fieldTransformations_);
        onChanged();
      } else {
        fieldTransformationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder clearFieldTransformations() {
      if (fieldTransformationsBuilder_ == null) {
        fieldTransformations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fieldTransformationsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public Builder removeFieldTransformations(int index) {
      if (fieldTransformationsBuilder_ == null) {
        ensureFieldTransformationsIsMutable();
        fieldTransformations_.remove(index);
        onChanged();
      } else {
        fieldTransformationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2.FieldTransformation.Builder getFieldTransformationsBuilder(
        int index) {
      return getFieldTransformationsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2.FieldTransformationOrBuilder getFieldTransformationsOrBuilder(
        int index) {
      if (fieldTransformationsBuilder_ == null) {
        return fieldTransformations_.get(index);
      } else {
        return fieldTransformationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public java.util.List<? extends com.google.privacy.dlp.v2.FieldTransformationOrBuilder>
        getFieldTransformationsOrBuilderList() {
      if (fieldTransformationsBuilder_ != null) {
        return fieldTransformationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fieldTransformations_);
      }
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2.FieldTransformation.Builder addFieldTransformationsBuilder() {
      return getFieldTransformationsFieldBuilder()
          .addBuilder(com.google.privacy.dlp.v2.FieldTransformation.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public com.google.privacy.dlp.v2.FieldTransformation.Builder addFieldTransformationsBuilder(
        int index) {
      return getFieldTransformationsFieldBuilder()
          .addBuilder(index, com.google.privacy.dlp.v2.FieldTransformation.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Transform the record by applying various field transformations.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.FieldTransformation field_transformations = 1;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2.FieldTransformation.Builder>
        getFieldTransformationsBuilderList() {
      return getFieldTransformationsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.privacy.dlp.v2.FieldTransformation,
            com.google.privacy.dlp.v2.FieldTransformation.Builder,
            com.google.privacy.dlp.v2.FieldTransformationOrBuilder>
        getFieldTransformationsFieldBuilder() {
      if (fieldTransformationsBuilder_ == null) {
        fieldTransformationsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.privacy.dlp.v2.FieldTransformation,
                com.google.privacy.dlp.v2.FieldTransformation.Builder,
                com.google.privacy.dlp.v2.FieldTransformationOrBuilder>(
                fieldTransformations_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        fieldTransformations_ = null;
      }
      return fieldTransformationsBuilder_;
    }

    private java.util.List<com.google.privacy.dlp.v2.RecordSuppression> recordSuppressions_ =
        java.util.Collections.emptyList();

    private void ensureRecordSuppressionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        recordSuppressions_ =
            new java.util.ArrayList<com.google.privacy.dlp.v2.RecordSuppression>(
                recordSuppressions_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.privacy.dlp.v2.RecordSuppression,
            com.google.privacy.dlp.v2.RecordSuppression.Builder,
            com.google.privacy.dlp.v2.RecordSuppressionOrBuilder>
        recordSuppressionsBuilder_;

    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2.RecordSuppression> getRecordSuppressionsList() {
      if (recordSuppressionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(recordSuppressions_);
      } else {
        return recordSuppressionsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public int getRecordSuppressionsCount() {
      if (recordSuppressionsBuilder_ == null) {
        return recordSuppressions_.size();
      } else {
        return recordSuppressionsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public com.google.privacy.dlp.v2.RecordSuppression getRecordSuppressions(int index) {
      if (recordSuppressionsBuilder_ == null) {
        return recordSuppressions_.get(index);
      } else {
        return recordSuppressionsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder setRecordSuppressions(
        int index, com.google.privacy.dlp.v2.RecordSuppression value) {
      if (recordSuppressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.set(index, value);
        onChanged();
      } else {
        recordSuppressionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder setRecordSuppressions(
        int index, com.google.privacy.dlp.v2.RecordSuppression.Builder builderForValue) {
      if (recordSuppressionsBuilder_ == null) {
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.set(index, builderForValue.build());
        onChanged();
      } else {
        recordSuppressionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder addRecordSuppressions(com.google.privacy.dlp.v2.RecordSuppression value) {
      if (recordSuppressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.add(value);
        onChanged();
      } else {
        recordSuppressionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder addRecordSuppressions(
        int index, com.google.privacy.dlp.v2.RecordSuppression value) {
      if (recordSuppressionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.add(index, value);
        onChanged();
      } else {
        recordSuppressionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder addRecordSuppressions(
        com.google.privacy.dlp.v2.RecordSuppression.Builder builderForValue) {
      if (recordSuppressionsBuilder_ == null) {
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.add(builderForValue.build());
        onChanged();
      } else {
        recordSuppressionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder addRecordSuppressions(
        int index, com.google.privacy.dlp.v2.RecordSuppression.Builder builderForValue) {
      if (recordSuppressionsBuilder_ == null) {
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.add(index, builderForValue.build());
        onChanged();
      } else {
        recordSuppressionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder addAllRecordSuppressions(
        java.lang.Iterable<? extends com.google.privacy.dlp.v2.RecordSuppression> values) {
      if (recordSuppressionsBuilder_ == null) {
        ensureRecordSuppressionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, recordSuppressions_);
        onChanged();
      } else {
        recordSuppressionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder clearRecordSuppressions() {
      if (recordSuppressionsBuilder_ == null) {
        recordSuppressions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        recordSuppressionsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public Builder removeRecordSuppressions(int index) {
      if (recordSuppressionsBuilder_ == null) {
        ensureRecordSuppressionsIsMutable();
        recordSuppressions_.remove(index);
        onChanged();
      } else {
        recordSuppressionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public com.google.privacy.dlp.v2.RecordSuppression.Builder getRecordSuppressionsBuilder(
        int index) {
      return getRecordSuppressionsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public com.google.privacy.dlp.v2.RecordSuppressionOrBuilder getRecordSuppressionsOrBuilder(
        int index) {
      if (recordSuppressionsBuilder_ == null) {
        return recordSuppressions_.get(index);
      } else {
        return recordSuppressionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public java.util.List<? extends com.google.privacy.dlp.v2.RecordSuppressionOrBuilder>
        getRecordSuppressionsOrBuilderList() {
      if (recordSuppressionsBuilder_ != null) {
        return recordSuppressionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(recordSuppressions_);
      }
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public com.google.privacy.dlp.v2.RecordSuppression.Builder addRecordSuppressionsBuilder() {
      return getRecordSuppressionsFieldBuilder()
          .addBuilder(com.google.privacy.dlp.v2.RecordSuppression.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public com.google.privacy.dlp.v2.RecordSuppression.Builder addRecordSuppressionsBuilder(
        int index) {
      return getRecordSuppressionsFieldBuilder()
          .addBuilder(index, com.google.privacy.dlp.v2.RecordSuppression.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Configuration defining which records get suppressed entirely. Records that
     * match any suppression rule are omitted from the output.
     * </pre>
     *
     * <code>repeated .google.privacy.dlp.v2.RecordSuppression record_suppressions = 2;</code>
     */
    public java.util.List<com.google.privacy.dlp.v2.RecordSuppression.Builder>
        getRecordSuppressionsBuilderList() {
      return getRecordSuppressionsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.privacy.dlp.v2.RecordSuppression,
            com.google.privacy.dlp.v2.RecordSuppression.Builder,
            com.google.privacy.dlp.v2.RecordSuppressionOrBuilder>
        getRecordSuppressionsFieldBuilder() {
      if (recordSuppressionsBuilder_ == null) {
        recordSuppressionsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.privacy.dlp.v2.RecordSuppression,
                com.google.privacy.dlp.v2.RecordSuppression.Builder,
                com.google.privacy.dlp.v2.RecordSuppressionOrBuilder>(
                recordSuppressions_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        recordSuppressions_ = null;
      }
      return recordSuppressionsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2.RecordTransformations)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2.RecordTransformations)
  private static final com.google.privacy.dlp.v2.RecordTransformations DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2.RecordTransformations();
  }

  public static com.google.privacy.dlp.v2.RecordTransformations getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RecordTransformations> PARSER =
      new com.google.protobuf.AbstractParser<RecordTransformations>() {
        @java.lang.Override
        public RecordTransformations parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<RecordTransformations> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RecordTransformations> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.privacy.dlp.v2.RecordTransformations getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
