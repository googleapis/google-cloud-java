/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface StoredInfoTypeOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.StoredInfoType)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Resource name.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Resource name.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Current version of the stored info type.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.StoredInfoTypeVersion current_version = 2;</code>
   *
   * @return Whether the currentVersion field is set.
   */
  boolean hasCurrentVersion();
  /**
   *
   *
   * <pre>
   * Current version of the stored info type.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.StoredInfoTypeVersion current_version = 2;</code>
   *
   * @return The currentVersion.
   */
  com.google.privacy.dlp.v2.StoredInfoTypeVersion getCurrentVersion();
  /**
   *
   *
   * <pre>
   * Current version of the stored info type.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.StoredInfoTypeVersion current_version = 2;</code>
   */
  com.google.privacy.dlp.v2.StoredInfoTypeVersionOrBuilder getCurrentVersionOrBuilder();

  /**
   *
   *
   * <pre>
   * Pending versions of the stored info type. Empty if no versions are
   * pending.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.StoredInfoTypeVersion pending_versions = 3;</code>
   */
  java.util.List<com.google.privacy.dlp.v2.StoredInfoTypeVersion> getPendingVersionsList();
  /**
   *
   *
   * <pre>
   * Pending versions of the stored info type. Empty if no versions are
   * pending.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.StoredInfoTypeVersion pending_versions = 3;</code>
   */
  com.google.privacy.dlp.v2.StoredInfoTypeVersion getPendingVersions(int index);
  /**
   *
   *
   * <pre>
   * Pending versions of the stored info type. Empty if no versions are
   * pending.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.StoredInfoTypeVersion pending_versions = 3;</code>
   */
  int getPendingVersionsCount();
  /**
   *
   *
   * <pre>
   * Pending versions of the stored info type. Empty if no versions are
   * pending.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.StoredInfoTypeVersion pending_versions = 3;</code>
   */
  java.util.List<? extends com.google.privacy.dlp.v2.StoredInfoTypeVersionOrBuilder>
      getPendingVersionsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Pending versions of the stored info type. Empty if no versions are
   * pending.
   * </pre>
   *
   * <code>repeated .google.privacy.dlp.v2.StoredInfoTypeVersion pending_versions = 3;</code>
   */
  com.google.privacy.dlp.v2.StoredInfoTypeVersionOrBuilder getPendingVersionsOrBuilder(int index);
}
