/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface DiscoveryTargetOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.DiscoveryTarget)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * BigQuery target for Discovery. The first target to match a table will be
   * the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryDiscoveryTarget big_query_target = 1;</code>
   *
   * @return Whether the bigQueryTarget field is set.
   */
  boolean hasBigQueryTarget();
  /**
   *
   *
   * <pre>
   * BigQuery target for Discovery. The first target to match a table will be
   * the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryDiscoveryTarget big_query_target = 1;</code>
   *
   * @return The bigQueryTarget.
   */
  com.google.privacy.dlp.v2.BigQueryDiscoveryTarget getBigQueryTarget();
  /**
   *
   *
   * <pre>
   * BigQuery target for Discovery. The first target to match a table will be
   * the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.BigQueryDiscoveryTarget big_query_target = 1;</code>
   */
  com.google.privacy.dlp.v2.BigQueryDiscoveryTargetOrBuilder getBigQueryTargetOrBuilder();

  /**
   *
   *
   * <pre>
   * Cloud SQL target for Discovery. The first target to match a table will be
   * the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.CloudSqlDiscoveryTarget cloud_sql_target = 2;</code>
   *
   * @return Whether the cloudSqlTarget field is set.
   */
  boolean hasCloudSqlTarget();
  /**
   *
   *
   * <pre>
   * Cloud SQL target for Discovery. The first target to match a table will be
   * the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.CloudSqlDiscoveryTarget cloud_sql_target = 2;</code>
   *
   * @return The cloudSqlTarget.
   */
  com.google.privacy.dlp.v2.CloudSqlDiscoveryTarget getCloudSqlTarget();
  /**
   *
   *
   * <pre>
   * Cloud SQL target for Discovery. The first target to match a table will be
   * the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.CloudSqlDiscoveryTarget cloud_sql_target = 2;</code>
   */
  com.google.privacy.dlp.v2.CloudSqlDiscoveryTargetOrBuilder getCloudSqlTargetOrBuilder();

  /**
   *
   *
   * <pre>
   * Discovery target that looks for credentials and secrets stored in cloud
   * resource metadata and reports them as vulnerabilities to Security Command
   * Center. Only one target of this type is allowed.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.SecretsDiscoveryTarget secrets_target = 3;</code>
   *
   * @return Whether the secretsTarget field is set.
   */
  boolean hasSecretsTarget();
  /**
   *
   *
   * <pre>
   * Discovery target that looks for credentials and secrets stored in cloud
   * resource metadata and reports them as vulnerabilities to Security Command
   * Center. Only one target of this type is allowed.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.SecretsDiscoveryTarget secrets_target = 3;</code>
   *
   * @return The secretsTarget.
   */
  com.google.privacy.dlp.v2.SecretsDiscoveryTarget getSecretsTarget();
  /**
   *
   *
   * <pre>
   * Discovery target that looks for credentials and secrets stored in cloud
   * resource metadata and reports them as vulnerabilities to Security Command
   * Center. Only one target of this type is allowed.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.SecretsDiscoveryTarget secrets_target = 3;</code>
   */
  com.google.privacy.dlp.v2.SecretsDiscoveryTargetOrBuilder getSecretsTargetOrBuilder();

  /**
   *
   *
   * <pre>
   * Cloud Storage target for Discovery. The first target to match a table
   * will be the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.CloudStorageDiscoveryTarget cloud_storage_target = 4;</code>
   *
   * @return Whether the cloudStorageTarget field is set.
   */
  boolean hasCloudStorageTarget();
  /**
   *
   *
   * <pre>
   * Cloud Storage target for Discovery. The first target to match a table
   * will be the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.CloudStorageDiscoveryTarget cloud_storage_target = 4;</code>
   *
   * @return The cloudStorageTarget.
   */
  com.google.privacy.dlp.v2.CloudStorageDiscoveryTarget getCloudStorageTarget();
  /**
   *
   *
   * <pre>
   * Cloud Storage target for Discovery. The first target to match a table
   * will be the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.CloudStorageDiscoveryTarget cloud_storage_target = 4;</code>
   */
  com.google.privacy.dlp.v2.CloudStorageDiscoveryTargetOrBuilder getCloudStorageTargetOrBuilder();

  /**
   *
   *
   * <pre>
   * Other clouds target for discovery. The first target to match a resource
   * will be the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.OtherCloudDiscoveryTarget other_cloud_target = 5;</code>
   *
   * @return Whether the otherCloudTarget field is set.
   */
  boolean hasOtherCloudTarget();
  /**
   *
   *
   * <pre>
   * Other clouds target for discovery. The first target to match a resource
   * will be the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.OtherCloudDiscoveryTarget other_cloud_target = 5;</code>
   *
   * @return The otherCloudTarget.
   */
  com.google.privacy.dlp.v2.OtherCloudDiscoveryTarget getOtherCloudTarget();
  /**
   *
   *
   * <pre>
   * Other clouds target for discovery. The first target to match a resource
   * will be the one applied.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.OtherCloudDiscoveryTarget other_cloud_target = 5;</code>
   */
  com.google.privacy.dlp.v2.OtherCloudDiscoveryTargetOrBuilder getOtherCloudTargetOrBuilder();

  /**
   *
   *
   * <pre>
   * Vertex AI dataset target for Discovery. The first target to match a
   * dataset will be the one applied. Note that discovery for Vertex AI can
   * incur Cloud Storage Class B operation charges for storage.objects.get
   * operations and retrieval fees. For more information, see [Cloud Storage
   * pricing](https://cloud.google.com/storage/pricing#price-tables).
   * Note that discovery for Vertex AI dataset will not be able to scan images
   * unless DiscoveryConfig.processing_location.image_fallback_location has
   * multi_region_processing or global_processing configured.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetDiscoveryTarget vertex_dataset_target = 7;</code>
   *
   * @return Whether the vertexDatasetTarget field is set.
   */
  boolean hasVertexDatasetTarget();
  /**
   *
   *
   * <pre>
   * Vertex AI dataset target for Discovery. The first target to match a
   * dataset will be the one applied. Note that discovery for Vertex AI can
   * incur Cloud Storage Class B operation charges for storage.objects.get
   * operations and retrieval fees. For more information, see [Cloud Storage
   * pricing](https://cloud.google.com/storage/pricing#price-tables).
   * Note that discovery for Vertex AI dataset will not be able to scan images
   * unless DiscoveryConfig.processing_location.image_fallback_location has
   * multi_region_processing or global_processing configured.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetDiscoveryTarget vertex_dataset_target = 7;</code>
   *
   * @return The vertexDatasetTarget.
   */
  com.google.privacy.dlp.v2.VertexDatasetDiscoveryTarget getVertexDatasetTarget();
  /**
   *
   *
   * <pre>
   * Vertex AI dataset target for Discovery. The first target to match a
   * dataset will be the one applied. Note that discovery for Vertex AI can
   * incur Cloud Storage Class B operation charges for storage.objects.get
   * operations and retrieval fees. For more information, see [Cloud Storage
   * pricing](https://cloud.google.com/storage/pricing#price-tables).
   * Note that discovery for Vertex AI dataset will not be able to scan images
   * unless DiscoveryConfig.processing_location.image_fallback_location has
   * multi_region_processing or global_processing configured.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetDiscoveryTarget vertex_dataset_target = 7;</code>
   */
  com.google.privacy.dlp.v2.VertexDatasetDiscoveryTargetOrBuilder getVertexDatasetTargetOrBuilder();

  com.google.privacy.dlp.v2.DiscoveryTarget.TargetCase getTargetCase();
}
