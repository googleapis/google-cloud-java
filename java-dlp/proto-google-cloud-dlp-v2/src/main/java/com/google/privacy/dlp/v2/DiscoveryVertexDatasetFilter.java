/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

/**
 *
 *
 * <pre>
 * Determines what datasets will have profiles generated within an organization
 * or project. Includes the ability to filter by regular expression patterns
 * on project ID or dataset regex.
 * </pre>
 *
 * Protobuf type {@code google.privacy.dlp.v2.DiscoveryVertexDatasetFilter}
 */
public final class DiscoveryVertexDatasetFilter extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.privacy.dlp.v2.DiscoveryVertexDatasetFilter)
    DiscoveryVertexDatasetFilterOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use DiscoveryVertexDatasetFilter.newBuilder() to construct.
  private DiscoveryVertexDatasetFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private DiscoveryVertexDatasetFilter() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new DiscoveryVertexDatasetFilter();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.privacy.dlp.v2.DlpProto
        .internal_static_google_privacy_dlp_v2_DiscoveryVertexDatasetFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.privacy.dlp.v2.DlpProto
        .internal_static_google_privacy_dlp_v2_DiscoveryVertexDatasetFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.class,
            com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.Builder.class);
  }

  private int filterCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object filter_;

  public enum FilterCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    COLLECTION(1),
    VERTEX_DATASET_RESOURCE_REFERENCE(2),
    OTHERS(100),
    FILTER_NOT_SET(0);
    private final int value;

    private FilterCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FilterCase valueOf(int value) {
      return forNumber(value);
    }

    public static FilterCase forNumber(int value) {
      switch (value) {
        case 1:
          return COLLECTION;
        case 2:
          return VERTEX_DATASET_RESOURCE_REFERENCE;
        case 100:
          return OTHERS;
        case 0:
          return FILTER_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public FilterCase getFilterCase() {
    return FilterCase.forNumber(filterCase_);
  }

  public static final int COLLECTION_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   * A specific set of Vertex AI datasets for this filter to apply to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
   *
   * @return Whether the collection field is set.
   */
  @java.lang.Override
  public boolean hasCollection() {
    return filterCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   * A specific set of Vertex AI datasets for this filter to apply to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
   *
   * @return The collection.
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.VertexDatasetCollection getCollection() {
    if (filterCase_ == 1) {
      return (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_;
    }
    return com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * A specific set of Vertex AI datasets for this filter to apply to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.VertexDatasetCollectionOrBuilder getCollectionOrBuilder() {
    if (filterCase_ == 1) {
      return (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_;
    }
    return com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance();
  }

  public static final int VERTEX_DATASET_RESOURCE_REFERENCE_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * The dataset resource to scan. Targets including this can only include
   * one target (the target with this dataset resource reference).
   * </pre>
   *
   * <code>
   * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
   * </code>
   *
   * @return Whether the vertexDatasetResourceReference field is set.
   */
  @java.lang.Override
  public boolean hasVertexDatasetResourceReference() {
    return filterCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * The dataset resource to scan. Targets including this can only include
   * one target (the target with this dataset resource reference).
   * </pre>
   *
   * <code>
   * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
   * </code>
   *
   * @return The vertexDatasetResourceReference.
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.VertexDatasetResourceReference
      getVertexDatasetResourceReference() {
    if (filterCase_ == 2) {
      return (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_;
    }
    return com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * The dataset resource to scan. Targets including this can only include
   * one target (the target with this dataset resource reference).
   * </pre>
   *
   * <code>
   * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
   * </code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.VertexDatasetResourceReferenceOrBuilder
      getVertexDatasetResourceReferenceOrBuilder() {
    if (filterCase_ == 2) {
      return (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_;
    }
    return com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance();
  }

  public static final int OTHERS_FIELD_NUMBER = 100;
  /**
   *
   *
   * <pre>
   * Catch-all. This should always be the last target in the list because
   * anything above it will apply first. Should only appear once in a
   * configuration. If none is specified, a default one will be added
   * automatically.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
   *
   * @return Whether the others field is set.
   */
  @java.lang.Override
  public boolean hasOthers() {
    return filterCase_ == 100;
  }
  /**
   *
   *
   * <pre>
   * Catch-all. This should always be the last target in the list because
   * anything above it will apply first. Should only appear once in a
   * configuration. If none is specified, a default one will be added
   * automatically.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
   *
   * @return The others.
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.AllOtherResources getOthers() {
    if (filterCase_ == 100) {
      return (com.google.privacy.dlp.v2.AllOtherResources) filter_;
    }
    return com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Catch-all. This should always be the last target in the list because
   * anything above it will apply first. Should only appear once in a
   * configuration. If none is specified, a default one will be added
   * automatically.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
   */
  @java.lang.Override
  public com.google.privacy.dlp.v2.AllOtherResourcesOrBuilder getOthersOrBuilder() {
    if (filterCase_ == 100) {
      return (com.google.privacy.dlp.v2.AllOtherResources) filter_;
    }
    return com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (filterCase_ == 1) {
      output.writeMessage(1, (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_);
    }
    if (filterCase_ == 2) {
      output.writeMessage(2, (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_);
    }
    if (filterCase_ == 100) {
      output.writeMessage(100, (com.google.privacy.dlp.v2.AllOtherResources) filter_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (filterCase_ == 1) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              1, (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_);
    }
    if (filterCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_);
    }
    if (filterCase_ == 100) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              100, (com.google.privacy.dlp.v2.AllOtherResources) filter_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter)) {
      return super.equals(obj);
    }
    com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter other =
        (com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter) obj;

    if (!getFilterCase().equals(other.getFilterCase())) return false;
    switch (filterCase_) {
      case 1:
        if (!getCollection().equals(other.getCollection())) return false;
        break;
      case 2:
        if (!getVertexDatasetResourceReference().equals(other.getVertexDatasetResourceReference()))
          return false;
        break;
      case 100:
        if (!getOthers().equals(other.getOthers())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (filterCase_) {
      case 1:
        hash = (37 * hash) + COLLECTION_FIELD_NUMBER;
        hash = (53 * hash) + getCollection().hashCode();
        break;
      case 2:
        hash = (37 * hash) + VERTEX_DATASET_RESOURCE_REFERENCE_FIELD_NUMBER;
        hash = (53 * hash) + getVertexDatasetResourceReference().hashCode();
        break;
      case 100:
        hash = (37 * hash) + OTHERS_FIELD_NUMBER;
        hash = (53 * hash) + getOthers().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Determines what datasets will have profiles generated within an organization
   * or project. Includes the ability to filter by regular expression patterns
   * on project ID or dataset regex.
   * </pre>
   *
   * Protobuf type {@code google.privacy.dlp.v2.DiscoveryVertexDatasetFilter}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.privacy.dlp.v2.DiscoveryVertexDatasetFilter)
      com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_DiscoveryVertexDatasetFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_DiscoveryVertexDatasetFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.class,
              com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.Builder.class);
    }

    // Construct using com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (collectionBuilder_ != null) {
        collectionBuilder_.clear();
      }
      if (vertexDatasetResourceReferenceBuilder_ != null) {
        vertexDatasetResourceReferenceBuilder_.clear();
      }
      if (othersBuilder_ != null) {
        othersBuilder_.clear();
      }
      filterCase_ = 0;
      filter_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.privacy.dlp.v2.DlpProto
          .internal_static_google_privacy_dlp_v2_DiscoveryVertexDatasetFilter_descriptor;
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter getDefaultInstanceForType() {
      return com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter build() {
      com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter buildPartial() {
      com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter result =
          new com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter result) {
      result.filterCase_ = filterCase_;
      result.filter_ = this.filter_;
      if (filterCase_ == 1 && collectionBuilder_ != null) {
        result.filter_ = collectionBuilder_.build();
      }
      if (filterCase_ == 2 && vertexDatasetResourceReferenceBuilder_ != null) {
        result.filter_ = vertexDatasetResourceReferenceBuilder_.build();
      }
      if (filterCase_ == 100 && othersBuilder_ != null) {
        result.filter_ = othersBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter) {
        return mergeFrom((com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter other) {
      if (other == com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.getDefaultInstance())
        return this;
      switch (other.getFilterCase()) {
        case COLLECTION:
          {
            mergeCollection(other.getCollection());
            break;
          }
        case VERTEX_DATASET_RESOURCE_REFERENCE:
          {
            mergeVertexDatasetResourceReference(other.getVertexDatasetResourceReference());
            break;
          }
        case OTHERS:
          {
            mergeOthers(other.getOthers());
            break;
          }
        case FILTER_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getCollectionFieldBuilder().getBuilder(), extensionRegistry);
                filterCase_ = 1;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(
                    getVertexDatasetResourceReferenceFieldBuilder().getBuilder(),
                    extensionRegistry);
                filterCase_ = 2;
                break;
              } // case 18
            case 802:
              {
                input.readMessage(getOthersFieldBuilder().getBuilder(), extensionRegistry);
                filterCase_ = 100;
                break;
              } // case 802
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int filterCase_ = 0;
    private java.lang.Object filter_;

    public FilterCase getFilterCase() {
      return FilterCase.forNumber(filterCase_);
    }

    public Builder clearFilter() {
      filterCase_ = 0;
      filter_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.VertexDatasetCollection,
            com.google.privacy.dlp.v2.VertexDatasetCollection.Builder,
            com.google.privacy.dlp.v2.VertexDatasetCollectionOrBuilder>
        collectionBuilder_;
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     *
     * @return Whether the collection field is set.
     */
    @java.lang.Override
    public boolean hasCollection() {
      return filterCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     *
     * @return The collection.
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.VertexDatasetCollection getCollection() {
      if (collectionBuilder_ == null) {
        if (filterCase_ == 1) {
          return (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_;
        }
        return com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance();
      } else {
        if (filterCase_ == 1) {
          return collectionBuilder_.getMessage();
        }
        return com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    public Builder setCollection(com.google.privacy.dlp.v2.VertexDatasetCollection value) {
      if (collectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filter_ = value;
        onChanged();
      } else {
        collectionBuilder_.setMessage(value);
      }
      filterCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    public Builder setCollection(
        com.google.privacy.dlp.v2.VertexDatasetCollection.Builder builderForValue) {
      if (collectionBuilder_ == null) {
        filter_ = builderForValue.build();
        onChanged();
      } else {
        collectionBuilder_.setMessage(builderForValue.build());
      }
      filterCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    public Builder mergeCollection(com.google.privacy.dlp.v2.VertexDatasetCollection value) {
      if (collectionBuilder_ == null) {
        if (filterCase_ == 1
            && filter_ != com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance()) {
          filter_ =
              com.google.privacy.dlp.v2.VertexDatasetCollection.newBuilder(
                      (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          filter_ = value;
        }
        onChanged();
      } else {
        if (filterCase_ == 1) {
          collectionBuilder_.mergeFrom(value);
        } else {
          collectionBuilder_.setMessage(value);
        }
      }
      filterCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    public Builder clearCollection() {
      if (collectionBuilder_ == null) {
        if (filterCase_ == 1) {
          filterCase_ = 0;
          filter_ = null;
          onChanged();
        }
      } else {
        if (filterCase_ == 1) {
          filterCase_ = 0;
          filter_ = null;
        }
        collectionBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    public com.google.privacy.dlp.v2.VertexDatasetCollection.Builder getCollectionBuilder() {
      return getCollectionFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.VertexDatasetCollectionOrBuilder getCollectionOrBuilder() {
      if ((filterCase_ == 1) && (collectionBuilder_ != null)) {
        return collectionBuilder_.getMessageOrBuilder();
      } else {
        if (filterCase_ == 1) {
          return (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_;
        }
        return com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * A specific set of Vertex AI datasets for this filter to apply to.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.VertexDatasetCollection,
            com.google.privacy.dlp.v2.VertexDatasetCollection.Builder,
            com.google.privacy.dlp.v2.VertexDatasetCollectionOrBuilder>
        getCollectionFieldBuilder() {
      if (collectionBuilder_ == null) {
        if (!(filterCase_ == 1)) {
          filter_ = com.google.privacy.dlp.v2.VertexDatasetCollection.getDefaultInstance();
        }
        collectionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.privacy.dlp.v2.VertexDatasetCollection,
                com.google.privacy.dlp.v2.VertexDatasetCollection.Builder,
                com.google.privacy.dlp.v2.VertexDatasetCollectionOrBuilder>(
                (com.google.privacy.dlp.v2.VertexDatasetCollection) filter_,
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      filterCase_ = 1;
      onChanged();
      return collectionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.VertexDatasetResourceReference,
            com.google.privacy.dlp.v2.VertexDatasetResourceReference.Builder,
            com.google.privacy.dlp.v2.VertexDatasetResourceReferenceOrBuilder>
        vertexDatasetResourceReferenceBuilder_;
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     *
     * @return Whether the vertexDatasetResourceReference field is set.
     */
    @java.lang.Override
    public boolean hasVertexDatasetResourceReference() {
      return filterCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     *
     * @return The vertexDatasetResourceReference.
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.VertexDatasetResourceReference
        getVertexDatasetResourceReference() {
      if (vertexDatasetResourceReferenceBuilder_ == null) {
        if (filterCase_ == 2) {
          return (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_;
        }
        return com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance();
      } else {
        if (filterCase_ == 2) {
          return vertexDatasetResourceReferenceBuilder_.getMessage();
        }
        return com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    public Builder setVertexDatasetResourceReference(
        com.google.privacy.dlp.v2.VertexDatasetResourceReference value) {
      if (vertexDatasetResourceReferenceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filter_ = value;
        onChanged();
      } else {
        vertexDatasetResourceReferenceBuilder_.setMessage(value);
      }
      filterCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    public Builder setVertexDatasetResourceReference(
        com.google.privacy.dlp.v2.VertexDatasetResourceReference.Builder builderForValue) {
      if (vertexDatasetResourceReferenceBuilder_ == null) {
        filter_ = builderForValue.build();
        onChanged();
      } else {
        vertexDatasetResourceReferenceBuilder_.setMessage(builderForValue.build());
      }
      filterCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    public Builder mergeVertexDatasetResourceReference(
        com.google.privacy.dlp.v2.VertexDatasetResourceReference value) {
      if (vertexDatasetResourceReferenceBuilder_ == null) {
        if (filterCase_ == 2
            && filter_
                != com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance()) {
          filter_ =
              com.google.privacy.dlp.v2.VertexDatasetResourceReference.newBuilder(
                      (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          filter_ = value;
        }
        onChanged();
      } else {
        if (filterCase_ == 2) {
          vertexDatasetResourceReferenceBuilder_.mergeFrom(value);
        } else {
          vertexDatasetResourceReferenceBuilder_.setMessage(value);
        }
      }
      filterCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    public Builder clearVertexDatasetResourceReference() {
      if (vertexDatasetResourceReferenceBuilder_ == null) {
        if (filterCase_ == 2) {
          filterCase_ = 0;
          filter_ = null;
          onChanged();
        }
      } else {
        if (filterCase_ == 2) {
          filterCase_ = 0;
          filter_ = null;
        }
        vertexDatasetResourceReferenceBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    public com.google.privacy.dlp.v2.VertexDatasetResourceReference.Builder
        getVertexDatasetResourceReferenceBuilder() {
      return getVertexDatasetResourceReferenceFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.VertexDatasetResourceReferenceOrBuilder
        getVertexDatasetResourceReferenceOrBuilder() {
      if ((filterCase_ == 2) && (vertexDatasetResourceReferenceBuilder_ != null)) {
        return vertexDatasetResourceReferenceBuilder_.getMessageOrBuilder();
      } else {
        if (filterCase_ == 2) {
          return (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_;
        }
        return com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * The dataset resource to scan. Targets including this can only include
     * one target (the target with this dataset resource reference).
     * </pre>
     *
     * <code>
     * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.VertexDatasetResourceReference,
            com.google.privacy.dlp.v2.VertexDatasetResourceReference.Builder,
            com.google.privacy.dlp.v2.VertexDatasetResourceReferenceOrBuilder>
        getVertexDatasetResourceReferenceFieldBuilder() {
      if (vertexDatasetResourceReferenceBuilder_ == null) {
        if (!(filterCase_ == 2)) {
          filter_ = com.google.privacy.dlp.v2.VertexDatasetResourceReference.getDefaultInstance();
        }
        vertexDatasetResourceReferenceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.privacy.dlp.v2.VertexDatasetResourceReference,
                com.google.privacy.dlp.v2.VertexDatasetResourceReference.Builder,
                com.google.privacy.dlp.v2.VertexDatasetResourceReferenceOrBuilder>(
                (com.google.privacy.dlp.v2.VertexDatasetResourceReference) filter_,
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      filterCase_ = 2;
      onChanged();
      return vertexDatasetResourceReferenceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.AllOtherResources,
            com.google.privacy.dlp.v2.AllOtherResources.Builder,
            com.google.privacy.dlp.v2.AllOtherResourcesOrBuilder>
        othersBuilder_;
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     *
     * @return Whether the others field is set.
     */
    @java.lang.Override
    public boolean hasOthers() {
      return filterCase_ == 100;
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     *
     * @return The others.
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.AllOtherResources getOthers() {
      if (othersBuilder_ == null) {
        if (filterCase_ == 100) {
          return (com.google.privacy.dlp.v2.AllOtherResources) filter_;
        }
        return com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance();
      } else {
        if (filterCase_ == 100) {
          return othersBuilder_.getMessage();
        }
        return com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    public Builder setOthers(com.google.privacy.dlp.v2.AllOtherResources value) {
      if (othersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filter_ = value;
        onChanged();
      } else {
        othersBuilder_.setMessage(value);
      }
      filterCase_ = 100;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    public Builder setOthers(com.google.privacy.dlp.v2.AllOtherResources.Builder builderForValue) {
      if (othersBuilder_ == null) {
        filter_ = builderForValue.build();
        onChanged();
      } else {
        othersBuilder_.setMessage(builderForValue.build());
      }
      filterCase_ = 100;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    public Builder mergeOthers(com.google.privacy.dlp.v2.AllOtherResources value) {
      if (othersBuilder_ == null) {
        if (filterCase_ == 100
            && filter_ != com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance()) {
          filter_ =
              com.google.privacy.dlp.v2.AllOtherResources.newBuilder(
                      (com.google.privacy.dlp.v2.AllOtherResources) filter_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          filter_ = value;
        }
        onChanged();
      } else {
        if (filterCase_ == 100) {
          othersBuilder_.mergeFrom(value);
        } else {
          othersBuilder_.setMessage(value);
        }
      }
      filterCase_ = 100;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    public Builder clearOthers() {
      if (othersBuilder_ == null) {
        if (filterCase_ == 100) {
          filterCase_ = 0;
          filter_ = null;
          onChanged();
        }
      } else {
        if (filterCase_ == 100) {
          filterCase_ = 0;
          filter_ = null;
        }
        othersBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    public com.google.privacy.dlp.v2.AllOtherResources.Builder getOthersBuilder() {
      return getOthersFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    @java.lang.Override
    public com.google.privacy.dlp.v2.AllOtherResourcesOrBuilder getOthersOrBuilder() {
      if ((filterCase_ == 100) && (othersBuilder_ != null)) {
        return othersBuilder_.getMessageOrBuilder();
      } else {
        if (filterCase_ == 100) {
          return (com.google.privacy.dlp.v2.AllOtherResources) filter_;
        }
        return com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Catch-all. This should always be the last target in the list because
     * anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     * </pre>
     *
     * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.privacy.dlp.v2.AllOtherResources,
            com.google.privacy.dlp.v2.AllOtherResources.Builder,
            com.google.privacy.dlp.v2.AllOtherResourcesOrBuilder>
        getOthersFieldBuilder() {
      if (othersBuilder_ == null) {
        if (!(filterCase_ == 100)) {
          filter_ = com.google.privacy.dlp.v2.AllOtherResources.getDefaultInstance();
        }
        othersBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.privacy.dlp.v2.AllOtherResources,
                com.google.privacy.dlp.v2.AllOtherResources.Builder,
                com.google.privacy.dlp.v2.AllOtherResourcesOrBuilder>(
                (com.google.privacy.dlp.v2.AllOtherResources) filter_,
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      filterCase_ = 100;
      onChanged();
      return othersBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.privacy.dlp.v2.DiscoveryVertexDatasetFilter)
  }

  // @@protoc_insertion_point(class_scope:google.privacy.dlp.v2.DiscoveryVertexDatasetFilter)
  private static final com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter();
  }

  public static com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DiscoveryVertexDatasetFilter> PARSER =
      new com.google.protobuf.AbstractParser<DiscoveryVertexDatasetFilter>() {
        @java.lang.Override
        public DiscoveryVertexDatasetFilter parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<DiscoveryVertexDatasetFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DiscoveryVertexDatasetFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
