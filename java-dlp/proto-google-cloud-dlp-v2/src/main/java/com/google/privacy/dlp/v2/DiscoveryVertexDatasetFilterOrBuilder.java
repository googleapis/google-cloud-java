/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/privacy/dlp/v2/dlp.proto

// Protobuf Java Version: 3.25.5
package com.google.privacy.dlp.v2;

public interface DiscoveryVertexDatasetFilterOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.privacy.dlp.v2.DiscoveryVertexDatasetFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * A specific set of Vertex AI datasets for this filter to apply to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
   *
   * @return Whether the collection field is set.
   */
  boolean hasCollection();
  /**
   *
   *
   * <pre>
   * A specific set of Vertex AI datasets for this filter to apply to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
   *
   * @return The collection.
   */
  com.google.privacy.dlp.v2.VertexDatasetCollection getCollection();
  /**
   *
   *
   * <pre>
   * A specific set of Vertex AI datasets for this filter to apply to.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.VertexDatasetCollection collection = 1;</code>
   */
  com.google.privacy.dlp.v2.VertexDatasetCollectionOrBuilder getCollectionOrBuilder();

  /**
   *
   *
   * <pre>
   * The dataset resource to scan. Targets including this can only include
   * one target (the target with this dataset resource reference).
   * </pre>
   *
   * <code>
   * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
   * </code>
   *
   * @return Whether the vertexDatasetResourceReference field is set.
   */
  boolean hasVertexDatasetResourceReference();
  /**
   *
   *
   * <pre>
   * The dataset resource to scan. Targets including this can only include
   * one target (the target with this dataset resource reference).
   * </pre>
   *
   * <code>
   * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
   * </code>
   *
   * @return The vertexDatasetResourceReference.
   */
  com.google.privacy.dlp.v2.VertexDatasetResourceReference getVertexDatasetResourceReference();
  /**
   *
   *
   * <pre>
   * The dataset resource to scan. Targets including this can only include
   * one target (the target with this dataset resource reference).
   * </pre>
   *
   * <code>
   * .google.privacy.dlp.v2.VertexDatasetResourceReference vertex_dataset_resource_reference = 2;
   * </code>
   */
  com.google.privacy.dlp.v2.VertexDatasetResourceReferenceOrBuilder
      getVertexDatasetResourceReferenceOrBuilder();

  /**
   *
   *
   * <pre>
   * Catch-all. This should always be the last target in the list because
   * anything above it will apply first. Should only appear once in a
   * configuration. If none is specified, a default one will be added
   * automatically.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
   *
   * @return Whether the others field is set.
   */
  boolean hasOthers();
  /**
   *
   *
   * <pre>
   * Catch-all. This should always be the last target in the list because
   * anything above it will apply first. Should only appear once in a
   * configuration. If none is specified, a default one will be added
   * automatically.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
   *
   * @return The others.
   */
  com.google.privacy.dlp.v2.AllOtherResources getOthers();
  /**
   *
   *
   * <pre>
   * Catch-all. This should always be the last target in the list because
   * anything above it will apply first. Should only appear once in a
   * configuration. If none is specified, a default one will be added
   * automatically.
   * </pre>
   *
   * <code>.google.privacy.dlp.v2.AllOtherResources others = 100;</code>
   */
  com.google.privacy.dlp.v2.AllOtherResourcesOrBuilder getOthersOrBuilder();

  com.google.privacy.dlp.v2.DiscoveryVertexDatasetFilter.FilterCase getFilterCase();
}
