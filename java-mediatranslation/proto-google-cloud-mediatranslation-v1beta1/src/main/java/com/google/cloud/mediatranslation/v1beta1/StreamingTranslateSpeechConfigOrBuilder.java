/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/mediatranslation/v1beta1/media_translation.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.mediatranslation.v1beta1;

public interface StreamingTranslateSpeechConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.mediatranslation.v1beta1.StreamingTranslateSpeechConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The common config for all the following audio contents.
   * </pre>
   *
   * <code>
   * .google.cloud.mediatranslation.v1beta1.TranslateSpeechConfig audio_config = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the audioConfig field is set.
   */
  boolean hasAudioConfig();
  /**
   *
   *
   * <pre>
   * Required. The common config for all the following audio contents.
   * </pre>
   *
   * <code>
   * .google.cloud.mediatranslation.v1beta1.TranslateSpeechConfig audio_config = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The audioConfig.
   */
  com.google.cloud.mediatranslation.v1beta1.TranslateSpeechConfig getAudioConfig();
  /**
   *
   *
   * <pre>
   * Required. The common config for all the following audio contents.
   * </pre>
   *
   * <code>
   * .google.cloud.mediatranslation.v1beta1.TranslateSpeechConfig audio_config = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.mediatranslation.v1beta1.TranslateSpeechConfigOrBuilder
      getAudioConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. If `false` or omitted, the system performs
   * continuous translation (continuing to wait for and process audio even if
   * the user pauses speaking) until the client closes the input stream (gRPC
   * API) or until the maximum time limit has been reached. May return multiple
   * `StreamingTranslateSpeechResult`s with the `is_final` flag set to `true`.
   *
   * If `true`, the speech translator will detect a single spoken utterance.
   * When it detects that the user has paused or stopped speaking, it will
   * return an `END_OF_SINGLE_UTTERANCE` event and cease translation.
   * When the client receives 'END_OF_SINGLE_UTTERANCE' event, the client should
   * stop sending the requests. However, clients should keep receiving remaining
   * responses until the stream is terminated. To construct the complete
   * sentence in a streaming way, one should override (if 'is_final' of previous
   * response is false), or append (if 'is_final' of previous response is true).
   * </pre>
   *
   * <code>bool single_utterance = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The singleUtterance.
   */
  boolean getSingleUtterance();
}
