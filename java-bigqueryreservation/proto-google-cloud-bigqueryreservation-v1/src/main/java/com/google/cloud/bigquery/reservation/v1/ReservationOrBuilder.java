/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/reservation/v1/reservation.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.bigquery.reservation.v1;

public interface ReservationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.reservation.v1.Reservation)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the reservation, e.g.,
   * `projects/&#42;&#47;locations/&#42;&#47;reservations/team1-prod`.
   * The reservation_id must only contain lower case alphanumeric characters or
   * dashes. It must start with a letter and must not end with a dash. Its
   * maximum length is 64 characters.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  java.lang.String getName();

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the reservation, e.g.,
   * `projects/&#42;&#47;locations/&#42;&#47;reservations/team1-prod`.
   * The reservation_id must only contain lower case alphanumeric characters or
   * dashes. It must start with a letter and must not end with a dash. Its
   * maximum length is 64 characters.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. Baseline slots available to this reservation. A slot is a unit of
   * computational power in BigQuery, and serves as the unit of parallelism.
   *
   * Queries using this reservation might use more slots during runtime if
   * ignore_idle_slots is set to false, or autoscaling is enabled.
   *
   * The total slot_capacity of the reservation and its siblings
   * may exceed the total slot_count of capacity commitments. In that case, the
   * exceeding slots will be charged with the autoscale SKU. You can increase
   * the number of baseline slots in a reservation every few minutes. If you
   * want to decrease your baseline slots, you are limited to once an hour if
   * you have recently changed your baseline slot capacity and your baseline
   * slots exceed your committed slots. Otherwise, you can decrease your
   * baseline slots every few minutes.
   * </pre>
   *
   * <code>int64 slot_capacity = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The slotCapacity.
   */
  long getSlotCapacity();

  /**
   *
   *
   * <pre>
   * Optional. If false, any query or pipeline job using this reservation will
   * use idle slots from other reservations within the same admin project. If
   * true, a query or pipeline job using this reservation will execute with the
   * slot capacity specified in the slot_capacity field at most.
   * </pre>
   *
   * <code>bool ignore_idle_slots = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The ignoreIdleSlots.
   */
  boolean getIgnoreIdleSlots();

  /**
   *
   *
   * <pre>
   * Optional. The configuration parameters for the auto scaling feature.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.Autoscale autoscale = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the autoscale field is set.
   */
  boolean hasAutoscale();

  /**
   *
   *
   * <pre>
   * Optional. The configuration parameters for the auto scaling feature.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.Autoscale autoscale = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The autoscale.
   */
  com.google.cloud.bigquery.reservation.v1.Reservation.Autoscale getAutoscale();

  /**
   *
   *
   * <pre>
   * Optional. The configuration parameters for the auto scaling feature.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.Autoscale autoscale = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.bigquery.reservation.v1.Reservation.AutoscaleOrBuilder getAutoscaleOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. Job concurrency target which sets a soft upper bound on the
   * number of jobs that can run concurrently in this reservation. This is a
   * soft target due to asynchronous nature of the system and various
   * optimizations for small queries. Default value is 0 which means that
   * concurrency target will be automatically computed by the system. NOTE: this
   * field is exposed as target job concurrency in the Information Schema, DDL
   * and BigQuery CLI.
   * </pre>
   *
   * <code>int64 concurrency = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The concurrency.
   */
  long getConcurrency();

  /**
   *
   *
   * <pre>
   * Output only. Creation time of the reservation.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp creation_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the creationTime field is set.
   */
  boolean hasCreationTime();

  /**
   *
   *
   * <pre>
   * Output only. Creation time of the reservation.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp creation_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The creationTime.
   */
  com.google.protobuf.Timestamp getCreationTime();

  /**
   *
   *
   * <pre>
   * Output only. Creation time of the reservation.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp creation_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getCreationTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Last update time of the reservation.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();

  /**
   *
   *
   * <pre>
   * Output only. Last update time of the reservation.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();

  /**
   *
   *
   * <pre>
   * Output only. Last update time of the reservation.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Applicable only for reservations located within one of the BigQuery
   * multi-regions (US or EU).
   *
   * If set to true, this reservation is placed in the organization's
   * secondary region which is designated for disaster recovery purposes.
   * If false, this reservation is placed in the organization's default region.
   *
   * NOTE: this is a preview feature. Project must be allow-listed in order to
   * set this field.
   * </pre>
   *
   * <code>bool multi_region_auxiliary = 14 [deprecated = true];</code>
   *
   * @deprecated google.cloud.bigquery.reservation.v1.Reservation.multi_region_auxiliary is
   *     deprecated. See google/cloud/bigquery/reservation/v1/reservation.proto;l=677
   * @return The multiRegionAuxiliary.
   */
  @java.lang.Deprecated
  boolean getMultiRegionAuxiliary();

  /**
   *
   *
   * <pre>
   * Optional. Edition of the reservation.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Edition edition = 17 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for edition.
   */
  int getEditionValue();

  /**
   *
   *
   * <pre>
   * Optional. Edition of the reservation.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Edition edition = 17 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The edition.
   */
  com.google.cloud.bigquery.reservation.v1.Edition getEdition();

  /**
   *
   *
   * <pre>
   * Output only. The current location of the reservation's primary replica.
   * This field is only set for reservations using the managed disaster recovery
   * feature.
   * </pre>
   *
   * <code>
   * string primary_location = 18 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The primaryLocation.
   */
  java.lang.String getPrimaryLocation();

  /**
   *
   *
   * <pre>
   * Output only. The current location of the reservation's primary replica.
   * This field is only set for reservations using the managed disaster recovery
   * feature.
   * </pre>
   *
   * <code>
   * string primary_location = 18 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for primaryLocation.
   */
  com.google.protobuf.ByteString getPrimaryLocationBytes();

  /**
   *
   *
   * <pre>
   * Optional. The current location of the reservation's secondary replica. This
   * field is only set for reservations using the managed disaster recovery
   * feature. Users can set this in create reservation calls
   * to create a failover reservation or in update reservation calls to convert
   * a non-failover reservation to a failover reservation(or vice versa).
   * </pre>
   *
   * <code>
   * string secondary_location = 19 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The secondaryLocation.
   */
  java.lang.String getSecondaryLocation();

  /**
   *
   *
   * <pre>
   * Optional. The current location of the reservation's secondary replica. This
   * field is only set for reservations using the managed disaster recovery
   * feature. Users can set this in create reservation calls
   * to create a failover reservation or in update reservation calls to convert
   * a non-failover reservation to a failover reservation(or vice versa).
   * </pre>
   *
   * <code>
   * string secondary_location = 19 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for secondaryLocation.
   */
  com.google.protobuf.ByteString getSecondaryLocationBytes();

  /**
   *
   *
   * <pre>
   * Output only. The location where the reservation was originally created.
   * This is set only during the failover reservation's creation. All billing
   * charges for the failover reservation will be applied to this location.
   * </pre>
   *
   * <code>
   * string original_primary_location = 20 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The originalPrimaryLocation.
   */
  java.lang.String getOriginalPrimaryLocation();

  /**
   *
   *
   * <pre>
   * Output only. The location where the reservation was originally created.
   * This is set only during the failover reservation's creation. All billing
   * charges for the failover reservation will be applied to this location.
   * </pre>
   *
   * <code>
   * string original_primary_location = 20 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for originalPrimaryLocation.
   */
  com.google.protobuf.ByteString getOriginalPrimaryLocationBytes();

  /**
   *
   *
   * <pre>
   * Optional. The overall max slots for the reservation, covering slot_capacity
   * (baseline), idle slots (if ignore_idle_slots is false) and scaled slots.
   * If present, the reservation won't use more than the specified number of
   * slots, even if there is demand and supply (from idle slots).
   * NOTE: capping a reservation's idle slot usage is best effort and its
   * usage may exceed the max_slots value. However, in terms of
   * autoscale.current_slots (which accounts for the additional added slots), it
   * will never exceed the max_slots - baseline.
   *
   *
   * This field must be set together with the scaling_mode enum value,
   * otherwise the request will be rejected with error code
   * `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * If the max_slots and scaling_mode are set, the autoscale or
   * autoscale.max_slots field must be unset. Otherwise the request will be
   * rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. However, the
   * autoscale field may still be in the output. The autopscale.max_slots will
   * always show as 0 and the autoscaler.current_slots will represent the
   * current slots from autoscaler excluding idle slots.
   * For example, if the max_slots is 1000 and scaling_mode is AUTOSCALE_ONLY,
   * then in the output, the autoscaler.max_slots will be 0 and the
   * autoscaler.current_slots may be any value between 0 and 1000.
   *
   * If the max_slots is 1000, scaling_mode is ALL_SLOTS, the baseline is 100
   * and idle slots usage is 200, then in the output, the autoscaler.max_slots
   * will be 0 and the autoscaler.current_slots will not be higher than 700.
   *
   * If the max_slots is 1000, scaling_mode is IDLE_SLOTS_ONLY, then in the
   * output, the autoscaler field will be null.
   *
   * If the max_slots and scaling_mode are set, then the ignore_idle_slots field
   * must be aligned with the scaling_mode enum value.(See details in
   * ScalingMode comments). Otherwise the request will be rejected with
   * error code `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * Please note,  the max_slots is for user to manage the part of slots greater
   * than the baseline. Therefore, we don't allow users to set max_slots smaller
   * or equal to the baseline as it will not be meaningful. If the field is
   * present and slot_capacity&gt;=max_slots, requests will be rejected with error
   * code `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * Please note that if max_slots is set to 0, we will treat it as unset.
   * Customers can set max_slots to 0 and set scaling_mode to
   * SCALING_MODE_UNSPECIFIED to disable the max_slots feature.
   * </pre>
   *
   * <code>optional int64 max_slots = 21 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the maxSlots field is set.
   */
  boolean hasMaxSlots();

  /**
   *
   *
   * <pre>
   * Optional. The overall max slots for the reservation, covering slot_capacity
   * (baseline), idle slots (if ignore_idle_slots is false) and scaled slots.
   * If present, the reservation won't use more than the specified number of
   * slots, even if there is demand and supply (from idle slots).
   * NOTE: capping a reservation's idle slot usage is best effort and its
   * usage may exceed the max_slots value. However, in terms of
   * autoscale.current_slots (which accounts for the additional added slots), it
   * will never exceed the max_slots - baseline.
   *
   *
   * This field must be set together with the scaling_mode enum value,
   * otherwise the request will be rejected with error code
   * `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * If the max_slots and scaling_mode are set, the autoscale or
   * autoscale.max_slots field must be unset. Otherwise the request will be
   * rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. However, the
   * autoscale field may still be in the output. The autopscale.max_slots will
   * always show as 0 and the autoscaler.current_slots will represent the
   * current slots from autoscaler excluding idle slots.
   * For example, if the max_slots is 1000 and scaling_mode is AUTOSCALE_ONLY,
   * then in the output, the autoscaler.max_slots will be 0 and the
   * autoscaler.current_slots may be any value between 0 and 1000.
   *
   * If the max_slots is 1000, scaling_mode is ALL_SLOTS, the baseline is 100
   * and idle slots usage is 200, then in the output, the autoscaler.max_slots
   * will be 0 and the autoscaler.current_slots will not be higher than 700.
   *
   * If the max_slots is 1000, scaling_mode is IDLE_SLOTS_ONLY, then in the
   * output, the autoscaler field will be null.
   *
   * If the max_slots and scaling_mode are set, then the ignore_idle_slots field
   * must be aligned with the scaling_mode enum value.(See details in
   * ScalingMode comments). Otherwise the request will be rejected with
   * error code `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * Please note,  the max_slots is for user to manage the part of slots greater
   * than the baseline. Therefore, we don't allow users to set max_slots smaller
   * or equal to the baseline as it will not be meaningful. If the field is
   * present and slot_capacity&gt;=max_slots, requests will be rejected with error
   * code `google.rpc.Code.INVALID_ARGUMENT`.
   *
   * Please note that if max_slots is set to 0, we will treat it as unset.
   * Customers can set max_slots to 0 and set scaling_mode to
   * SCALING_MODE_UNSPECIFIED to disable the max_slots feature.
   * </pre>
   *
   * <code>optional int64 max_slots = 21 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxSlots.
   */
  long getMaxSlots();

  /**
   *
   *
   * <pre>
   * Optional. The scaling mode for the reservation.
   * If the field is present but max_slots is not present, requests will be
   * rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.ScalingMode scaling_mode = 22 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for scalingMode.
   */
  int getScalingModeValue();

  /**
   *
   *
   * <pre>
   * Optional. The scaling mode for the reservation.
   * If the field is present but max_slots is not present, requests will be
   * rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.ScalingMode scaling_mode = 22 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The scalingMode.
   */
  com.google.cloud.bigquery.reservation.v1.Reservation.ScalingMode getScalingMode();

  /**
   *
   *
   * <pre>
   * Optional. The labels associated with this reservation. You can use these
   * to organize and group your reservations.
   * You can set this property when you create or update a reservation.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 23 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  int getLabelsCount();

  /**
   *
   *
   * <pre>
   * Optional. The labels associated with this reservation. You can use these
   * to organize and group your reservations.
   * You can set this property when you create or update a reservation.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 23 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  boolean containsLabels(java.lang.String key);

  /** Use {@link #getLabelsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getLabels();

  /**
   *
   *
   * <pre>
   * Optional. The labels associated with this reservation. You can use these
   * to organize and group your reservations.
   * You can set this property when you create or update a reservation.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 23 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getLabelsMap();

  /**
   *
   *
   * <pre>
   * Optional. The labels associated with this reservation. You can use these
   * to organize and group your reservations.
   * You can set this property when you create or update a reservation.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 23 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  /* nullable */
  java.lang.String getLabelsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);

  /**
   *
   *
   * <pre>
   * Optional. The labels associated with this reservation. You can use these
   * to organize and group your reservations.
   * You can set this property when you create or update a reservation.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 23 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  java.lang.String getLabelsOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * Optional. The reservation group that this reservation belongs to.
   * You can set this property when you create or update a reservation.
   * Reservations do not need to belong to a reservation group.
   * Format:
   * projects/{project}/locations/{location}/reservationGroups/{reservation_group}
   * or just {reservation_group}
   * </pre>
   *
   * <code>string reservation_group = 25 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The reservationGroup.
   */
  java.lang.String getReservationGroup();

  /**
   *
   *
   * <pre>
   * Optional. The reservation group that this reservation belongs to.
   * You can set this property when you create or update a reservation.
   * Reservations do not need to belong to a reservation group.
   * Format:
   * projects/{project}/locations/{location}/reservationGroups/{reservation_group}
   * or just {reservation_group}
   * </pre>
   *
   * <code>string reservation_group = 25 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for reservationGroup.
   */
  com.google.protobuf.ByteString getReservationGroupBytes();

  /**
   *
   *
   * <pre>
   * Output only. The Disaster Recovery(DR) replication status of the
   * reservation. This is only available for the primary replicas of DR/failover
   * reservations and provides information about the both the staleness of the
   * secondary and the last error encountered while trying to replicate changes
   * from the primary to the secondary. If this field is blank, it means that
   * the reservation is either not a DR reservation or the reservation is a DR
   * secondary or that any replication operations on the reservation have
   * succeeded.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.ReplicationStatus replication_status = 24 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the replicationStatus field is set.
   */
  boolean hasReplicationStatus();

  /**
   *
   *
   * <pre>
   * Output only. The Disaster Recovery(DR) replication status of the
   * reservation. This is only available for the primary replicas of DR/failover
   * reservations and provides information about the both the staleness of the
   * secondary and the last error encountered while trying to replicate changes
   * from the primary to the secondary. If this field is blank, it means that
   * the reservation is either not a DR reservation or the reservation is a DR
   * secondary or that any replication operations on the reservation have
   * succeeded.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.ReplicationStatus replication_status = 24 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The replicationStatus.
   */
  com.google.cloud.bigquery.reservation.v1.Reservation.ReplicationStatus getReplicationStatus();

  /**
   *
   *
   * <pre>
   * Output only. The Disaster Recovery(DR) replication status of the
   * reservation. This is only available for the primary replicas of DR/failover
   * reservations and provides information about the both the staleness of the
   * secondary and the last error encountered while trying to replicate changes
   * from the primary to the secondary. If this field is blank, it means that
   * the reservation is either not a DR reservation or the reservation is a DR
   * secondary or that any replication operations on the reservation have
   * succeeded.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.Reservation.ReplicationStatus replication_status = 24 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.bigquery.reservation.v1.Reservation.ReplicationStatusOrBuilder
      getReplicationStatusOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. The scheduling policy to use for jobs and queries running under
   * this reservation. The scheduling policy controls how the reservation's
   * resources are distributed.
   *
   * This feature is not yet generally available.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.SchedulingPolicy scheduling_policy = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the schedulingPolicy field is set.
   */
  boolean hasSchedulingPolicy();

  /**
   *
   *
   * <pre>
   * Optional. The scheduling policy to use for jobs and queries running under
   * this reservation. The scheduling policy controls how the reservation's
   * resources are distributed.
   *
   * This feature is not yet generally available.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.SchedulingPolicy scheduling_policy = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The schedulingPolicy.
   */
  com.google.cloud.bigquery.reservation.v1.SchedulingPolicy getSchedulingPolicy();

  /**
   *
   *
   * <pre>
   * Optional. The scheduling policy to use for jobs and queries running under
   * this reservation. The scheduling policy controls how the reservation's
   * resources are distributed.
   *
   * This feature is not yet generally available.
   * </pre>
   *
   * <code>
   * .google.cloud.bigquery.reservation.v1.SchedulingPolicy scheduling_policy = 27 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.bigquery.reservation.v1.SchedulingPolicyOrBuilder getSchedulingPolicyOrBuilder();
}
