/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/solar/v1/solar_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.solar.v1;

public interface SizeAndSunshineStatsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.solar.v1.SizeAndSunshineStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The area of the roof or roof segment, in m^2. This is the roof area
   * (accounting for tilt), not the ground footprint area.
   * </pre>
   *
   * <code>float area_meters2 = 1;</code>
   *
   * @return The areaMeters2.
   */
  float getAreaMeters2();

  /**
   *
   *
   * <pre>
   * Quantiles of the pointwise sunniness across the area. If there
   * are N values here, this represents the (N-1)-iles. For example,
   * if there are 5 values, then they would be the quartiles (min,
   * 25%, 50%, 75%, max). Values are in annual kWh/kW like
   * [max_sunshine_hours_per_year]
   * [google.maps.solar.v1.SolarPotential.max_sunshine_hours_per_year].
   * </pre>
   *
   * <code>repeated float sunshine_quantiles = 2;</code>
   *
   * @return A list containing the sunshineQuantiles.
   */
  java.util.List<java.lang.Float> getSunshineQuantilesList();
  /**
   *
   *
   * <pre>
   * Quantiles of the pointwise sunniness across the area. If there
   * are N values here, this represents the (N-1)-iles. For example,
   * if there are 5 values, then they would be the quartiles (min,
   * 25%, 50%, 75%, max). Values are in annual kWh/kW like
   * [max_sunshine_hours_per_year]
   * [google.maps.solar.v1.SolarPotential.max_sunshine_hours_per_year].
   * </pre>
   *
   * <code>repeated float sunshine_quantiles = 2;</code>
   *
   * @return The count of sunshineQuantiles.
   */
  int getSunshineQuantilesCount();
  /**
   *
   *
   * <pre>
   * Quantiles of the pointwise sunniness across the area. If there
   * are N values here, this represents the (N-1)-iles. For example,
   * if there are 5 values, then they would be the quartiles (min,
   * 25%, 50%, 75%, max). Values are in annual kWh/kW like
   * [max_sunshine_hours_per_year]
   * [google.maps.solar.v1.SolarPotential.max_sunshine_hours_per_year].
   * </pre>
   *
   * <code>repeated float sunshine_quantiles = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The sunshineQuantiles at the given index.
   */
  float getSunshineQuantiles(int index);

  /**
   *
   *
   * <pre>
   * The ground footprint area covered by the roof or roof segment, in m^2.
   * </pre>
   *
   * <code>float ground_area_meters2 = 3;</code>
   *
   * @return The groundAreaMeters2.
   */
  float getGroundAreaMeters2();
}
