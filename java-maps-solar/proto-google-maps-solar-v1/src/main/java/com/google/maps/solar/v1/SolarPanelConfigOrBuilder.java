/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/solar/v1/solar_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.solar.v1;

public interface SolarPanelConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.solar.v1.SolarPanelConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Total number of panels. Note that this is redundant to (the sum
   * of) the corresponding fields in [roof_segment_summaries]
   * [google.maps.solar.v1.SolarPanelConfig.roof_segment_summaries].
   * </pre>
   *
   * <code>int32 panels_count = 1;</code>
   *
   * @return The panelsCount.
   */
  int getPanelsCount();

  /**
   *
   *
   * <pre>
   * How much sunlight energy this layout captures over the course of a
   * year, in DC kWh, assuming the panels described above.
   * </pre>
   *
   * <code>float yearly_energy_dc_kwh = 2;</code>
   *
   * @return The yearlyEnergyDcKwh.
   */
  float getYearlyEnergyDcKwh();

  /**
   *
   *
   * <pre>
   * Information about the production of each roof segment that is carrying
   * at least one panel in this layout. `roof_segment_summaries[i]` describes
   * the i-th roof segment, including its size, expected production and
   * orientation.
   * </pre>
   *
   * <code>repeated .google.maps.solar.v1.RoofSegmentSummary roof_segment_summaries = 4;</code>
   */
  java.util.List<com.google.maps.solar.v1.RoofSegmentSummary> getRoofSegmentSummariesList();
  /**
   *
   *
   * <pre>
   * Information about the production of each roof segment that is carrying
   * at least one panel in this layout. `roof_segment_summaries[i]` describes
   * the i-th roof segment, including its size, expected production and
   * orientation.
   * </pre>
   *
   * <code>repeated .google.maps.solar.v1.RoofSegmentSummary roof_segment_summaries = 4;</code>
   */
  com.google.maps.solar.v1.RoofSegmentSummary getRoofSegmentSummaries(int index);
  /**
   *
   *
   * <pre>
   * Information about the production of each roof segment that is carrying
   * at least one panel in this layout. `roof_segment_summaries[i]` describes
   * the i-th roof segment, including its size, expected production and
   * orientation.
   * </pre>
   *
   * <code>repeated .google.maps.solar.v1.RoofSegmentSummary roof_segment_summaries = 4;</code>
   */
  int getRoofSegmentSummariesCount();
  /**
   *
   *
   * <pre>
   * Information about the production of each roof segment that is carrying
   * at least one panel in this layout. `roof_segment_summaries[i]` describes
   * the i-th roof segment, including its size, expected production and
   * orientation.
   * </pre>
   *
   * <code>repeated .google.maps.solar.v1.RoofSegmentSummary roof_segment_summaries = 4;</code>
   */
  java.util.List<? extends com.google.maps.solar.v1.RoofSegmentSummaryOrBuilder>
      getRoofSegmentSummariesOrBuilderList();
  /**
   *
   *
   * <pre>
   * Information about the production of each roof segment that is carrying
   * at least one panel in this layout. `roof_segment_summaries[i]` describes
   * the i-th roof segment, including its size, expected production and
   * orientation.
   * </pre>
   *
   * <code>repeated .google.maps.solar.v1.RoofSegmentSummary roof_segment_summaries = 4;</code>
   */
  com.google.maps.solar.v1.RoofSegmentSummaryOrBuilder getRoofSegmentSummariesOrBuilder(int index);
}
