/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/solar/v1/solar_service.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.solar.v1;

/**
 *
 *
 * <pre>
 * Cost and benefit of an outright purchase of a particular configuration
 * of solar panels with a particular electricity usage.
 * </pre>
 *
 * Protobuf type {@code google.maps.solar.v1.CashPurchaseSavings}
 */
public final class CashPurchaseSavings extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.maps.solar.v1.CashPurchaseSavings)
    CashPurchaseSavingsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use CashPurchaseSavings.newBuilder() to construct.
  private CashPurchaseSavings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private CashPurchaseSavings() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new CashPurchaseSavings();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.solar.v1.SolarServiceProto
        .internal_static_google_maps_solar_v1_CashPurchaseSavings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.solar.v1.SolarServiceProto
        .internal_static_google_maps_solar_v1_CashPurchaseSavings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.solar.v1.CashPurchaseSavings.class,
            com.google.maps.solar.v1.CashPurchaseSavings.Builder.class);
  }

  private int bitField0_;
  public static final int OUT_OF_POCKET_COST_FIELD_NUMBER = 1;
  private com.google.type.Money outOfPocketCost_;
  /**
   *
   *
   * <pre>
   * Initial cost before tax incentives: the amount that must be paid
   * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
   * </pre>
   *
   * <code>.google.type.Money out_of_pocket_cost = 1;</code>
   *
   * @return Whether the outOfPocketCost field is set.
   */
  @java.lang.Override
  public boolean hasOutOfPocketCost() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Initial cost before tax incentives: the amount that must be paid
   * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
   * </pre>
   *
   * <code>.google.type.Money out_of_pocket_cost = 1;</code>
   *
   * @return The outOfPocketCost.
   */
  @java.lang.Override
  public com.google.type.Money getOutOfPocketCost() {
    return outOfPocketCost_ == null ? com.google.type.Money.getDefaultInstance() : outOfPocketCost_;
  }
  /**
   *
   *
   * <pre>
   * Initial cost before tax incentives: the amount that must be paid
   * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
   * </pre>
   *
   * <code>.google.type.Money out_of_pocket_cost = 1;</code>
   */
  @java.lang.Override
  public com.google.type.MoneyOrBuilder getOutOfPocketCostOrBuilder() {
    return outOfPocketCost_ == null ? com.google.type.Money.getDefaultInstance() : outOfPocketCost_;
  }

  public static final int UPFRONT_COST_FIELD_NUMBER = 2;
  private com.google.type.Money upfrontCost_;
  /**
   *
   *
   * <pre>
   * Initial cost after tax incentives: it's the amount that must be paid
   * during first year. Contrast with `out_of_pocket_cost`, which is before tax
   * incentives.
   * </pre>
   *
   * <code>.google.type.Money upfront_cost = 2;</code>
   *
   * @return Whether the upfrontCost field is set.
   */
  @java.lang.Override
  public boolean hasUpfrontCost() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Initial cost after tax incentives: it's the amount that must be paid
   * during first year. Contrast with `out_of_pocket_cost`, which is before tax
   * incentives.
   * </pre>
   *
   * <code>.google.type.Money upfront_cost = 2;</code>
   *
   * @return The upfrontCost.
   */
  @java.lang.Override
  public com.google.type.Money getUpfrontCost() {
    return upfrontCost_ == null ? com.google.type.Money.getDefaultInstance() : upfrontCost_;
  }
  /**
   *
   *
   * <pre>
   * Initial cost after tax incentives: it's the amount that must be paid
   * during first year. Contrast with `out_of_pocket_cost`, which is before tax
   * incentives.
   * </pre>
   *
   * <code>.google.type.Money upfront_cost = 2;</code>
   */
  @java.lang.Override
  public com.google.type.MoneyOrBuilder getUpfrontCostOrBuilder() {
    return upfrontCost_ == null ? com.google.type.Money.getDefaultInstance() : upfrontCost_;
  }

  public static final int REBATE_VALUE_FIELD_NUMBER = 3;
  private com.google.type.Money rebateValue_;
  /**
   *
   *
   * <pre>
   * The value of all tax rebates.
   * </pre>
   *
   * <code>.google.type.Money rebate_value = 3;</code>
   *
   * @return Whether the rebateValue field is set.
   */
  @java.lang.Override
  public boolean hasRebateValue() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * The value of all tax rebates.
   * </pre>
   *
   * <code>.google.type.Money rebate_value = 3;</code>
   *
   * @return The rebateValue.
   */
  @java.lang.Override
  public com.google.type.Money getRebateValue() {
    return rebateValue_ == null ? com.google.type.Money.getDefaultInstance() : rebateValue_;
  }
  /**
   *
   *
   * <pre>
   * The value of all tax rebates.
   * </pre>
   *
   * <code>.google.type.Money rebate_value = 3;</code>
   */
  @java.lang.Override
  public com.google.type.MoneyOrBuilder getRebateValueOrBuilder() {
    return rebateValue_ == null ? com.google.type.Money.getDefaultInstance() : rebateValue_;
  }

  public static final int PAYBACK_YEARS_FIELD_NUMBER = 4;
  private float paybackYears_ = 0F;
  /**
   *
   *
   * <pre>
   * Number of years until payback occurs. A negative value means payback
   * never occurs within the lifetime period.
   * </pre>
   *
   * <code>optional float payback_years = 4;</code>
   *
   * @return Whether the paybackYears field is set.
   */
  @java.lang.Override
  public boolean hasPaybackYears() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Number of years until payback occurs. A negative value means payback
   * never occurs within the lifetime period.
   * </pre>
   *
   * <code>optional float payback_years = 4;</code>
   *
   * @return The paybackYears.
   */
  @java.lang.Override
  public float getPaybackYears() {
    return paybackYears_;
  }

  public static final int SAVINGS_FIELD_NUMBER = 5;
  private com.google.maps.solar.v1.SavingsOverTime savings_;
  /**
   *
   *
   * <pre>
   * How much is saved (or not) over the lifetime period.
   * </pre>
   *
   * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
   *
   * @return Whether the savings field is set.
   */
  @java.lang.Override
  public boolean hasSavings() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   *
   *
   * <pre>
   * How much is saved (or not) over the lifetime period.
   * </pre>
   *
   * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
   *
   * @return The savings.
   */
  @java.lang.Override
  public com.google.maps.solar.v1.SavingsOverTime getSavings() {
    return savings_ == null
        ? com.google.maps.solar.v1.SavingsOverTime.getDefaultInstance()
        : savings_;
  }
  /**
   *
   *
   * <pre>
   * How much is saved (or not) over the lifetime period.
   * </pre>
   *
   * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
   */
  @java.lang.Override
  public com.google.maps.solar.v1.SavingsOverTimeOrBuilder getSavingsOrBuilder() {
    return savings_ == null
        ? com.google.maps.solar.v1.SavingsOverTime.getDefaultInstance()
        : savings_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getOutOfPocketCost());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getUpfrontCost());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getRebateValue());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeFloat(4, paybackYears_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getSavings());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getOutOfPocketCost());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getUpfrontCost());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getRebateValue());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, paybackYears_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getSavings());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.solar.v1.CashPurchaseSavings)) {
      return super.equals(obj);
    }
    com.google.maps.solar.v1.CashPurchaseSavings other =
        (com.google.maps.solar.v1.CashPurchaseSavings) obj;

    if (hasOutOfPocketCost() != other.hasOutOfPocketCost()) return false;
    if (hasOutOfPocketCost()) {
      if (!getOutOfPocketCost().equals(other.getOutOfPocketCost())) return false;
    }
    if (hasUpfrontCost() != other.hasUpfrontCost()) return false;
    if (hasUpfrontCost()) {
      if (!getUpfrontCost().equals(other.getUpfrontCost())) return false;
    }
    if (hasRebateValue() != other.hasRebateValue()) return false;
    if (hasRebateValue()) {
      if (!getRebateValue().equals(other.getRebateValue())) return false;
    }
    if (hasPaybackYears() != other.hasPaybackYears()) return false;
    if (hasPaybackYears()) {
      if (java.lang.Float.floatToIntBits(getPaybackYears())
          != java.lang.Float.floatToIntBits(other.getPaybackYears())) return false;
    }
    if (hasSavings() != other.hasSavings()) return false;
    if (hasSavings()) {
      if (!getSavings().equals(other.getSavings())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOutOfPocketCost()) {
      hash = (37 * hash) + OUT_OF_POCKET_COST_FIELD_NUMBER;
      hash = (53 * hash) + getOutOfPocketCost().hashCode();
    }
    if (hasUpfrontCost()) {
      hash = (37 * hash) + UPFRONT_COST_FIELD_NUMBER;
      hash = (53 * hash) + getUpfrontCost().hashCode();
    }
    if (hasRebateValue()) {
      hash = (37 * hash) + REBATE_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getRebateValue().hashCode();
    }
    if (hasPaybackYears()) {
      hash = (37 * hash) + PAYBACK_YEARS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(getPaybackYears());
    }
    if (hasSavings()) {
      hash = (37 * hash) + SAVINGS_FIELD_NUMBER;
      hash = (53 * hash) + getSavings().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.solar.v1.CashPurchaseSavings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Cost and benefit of an outright purchase of a particular configuration
   * of solar panels with a particular electricity usage.
   * </pre>
   *
   * Protobuf type {@code google.maps.solar.v1.CashPurchaseSavings}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.maps.solar.v1.CashPurchaseSavings)
      com.google.maps.solar.v1.CashPurchaseSavingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.solar.v1.SolarServiceProto
          .internal_static_google_maps_solar_v1_CashPurchaseSavings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.solar.v1.SolarServiceProto
          .internal_static_google_maps_solar_v1_CashPurchaseSavings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.solar.v1.CashPurchaseSavings.class,
              com.google.maps.solar.v1.CashPurchaseSavings.Builder.class);
    }

    // Construct using com.google.maps.solar.v1.CashPurchaseSavings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getOutOfPocketCostFieldBuilder();
        getUpfrontCostFieldBuilder();
        getRebateValueFieldBuilder();
        getSavingsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      outOfPocketCost_ = null;
      if (outOfPocketCostBuilder_ != null) {
        outOfPocketCostBuilder_.dispose();
        outOfPocketCostBuilder_ = null;
      }
      upfrontCost_ = null;
      if (upfrontCostBuilder_ != null) {
        upfrontCostBuilder_.dispose();
        upfrontCostBuilder_ = null;
      }
      rebateValue_ = null;
      if (rebateValueBuilder_ != null) {
        rebateValueBuilder_.dispose();
        rebateValueBuilder_ = null;
      }
      paybackYears_ = 0F;
      savings_ = null;
      if (savingsBuilder_ != null) {
        savingsBuilder_.dispose();
        savingsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.solar.v1.SolarServiceProto
          .internal_static_google_maps_solar_v1_CashPurchaseSavings_descriptor;
    }

    @java.lang.Override
    public com.google.maps.solar.v1.CashPurchaseSavings getDefaultInstanceForType() {
      return com.google.maps.solar.v1.CashPurchaseSavings.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.solar.v1.CashPurchaseSavings build() {
      com.google.maps.solar.v1.CashPurchaseSavings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.solar.v1.CashPurchaseSavings buildPartial() {
      com.google.maps.solar.v1.CashPurchaseSavings result =
          new com.google.maps.solar.v1.CashPurchaseSavings(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.maps.solar.v1.CashPurchaseSavings result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.outOfPocketCost_ =
            outOfPocketCostBuilder_ == null ? outOfPocketCost_ : outOfPocketCostBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.upfrontCost_ =
            upfrontCostBuilder_ == null ? upfrontCost_ : upfrontCostBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.rebateValue_ =
            rebateValueBuilder_ == null ? rebateValue_ : rebateValueBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.paybackYears_ = paybackYears_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.savings_ = savingsBuilder_ == null ? savings_ : savingsBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.solar.v1.CashPurchaseSavings) {
        return mergeFrom((com.google.maps.solar.v1.CashPurchaseSavings) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.solar.v1.CashPurchaseSavings other) {
      if (other == com.google.maps.solar.v1.CashPurchaseSavings.getDefaultInstance()) return this;
      if (other.hasOutOfPocketCost()) {
        mergeOutOfPocketCost(other.getOutOfPocketCost());
      }
      if (other.hasUpfrontCost()) {
        mergeUpfrontCost(other.getUpfrontCost());
      }
      if (other.hasRebateValue()) {
        mergeRebateValue(other.getRebateValue());
      }
      if (other.hasPaybackYears()) {
        setPaybackYears(other.getPaybackYears());
      }
      if (other.hasSavings()) {
        mergeSavings(other.getSavings());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getOutOfPocketCostFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getUpfrontCostFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getRebateValueFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 37:
              {
                paybackYears_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
            case 42:
              {
                input.readMessage(getSavingsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.type.Money outOfPocketCost_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Money, com.google.type.Money.Builder, com.google.type.MoneyOrBuilder>
        outOfPocketCostBuilder_;
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     *
     * @return Whether the outOfPocketCost field is set.
     */
    public boolean hasOutOfPocketCost() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     *
     * @return The outOfPocketCost.
     */
    public com.google.type.Money getOutOfPocketCost() {
      if (outOfPocketCostBuilder_ == null) {
        return outOfPocketCost_ == null
            ? com.google.type.Money.getDefaultInstance()
            : outOfPocketCost_;
      } else {
        return outOfPocketCostBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    public Builder setOutOfPocketCost(com.google.type.Money value) {
      if (outOfPocketCostBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outOfPocketCost_ = value;
      } else {
        outOfPocketCostBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    public Builder setOutOfPocketCost(com.google.type.Money.Builder builderForValue) {
      if (outOfPocketCostBuilder_ == null) {
        outOfPocketCost_ = builderForValue.build();
      } else {
        outOfPocketCostBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    public Builder mergeOutOfPocketCost(com.google.type.Money value) {
      if (outOfPocketCostBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && outOfPocketCost_ != null
            && outOfPocketCost_ != com.google.type.Money.getDefaultInstance()) {
          getOutOfPocketCostBuilder().mergeFrom(value);
        } else {
          outOfPocketCost_ = value;
        }
      } else {
        outOfPocketCostBuilder_.mergeFrom(value);
      }
      if (outOfPocketCost_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    public Builder clearOutOfPocketCost() {
      bitField0_ = (bitField0_ & ~0x00000001);
      outOfPocketCost_ = null;
      if (outOfPocketCostBuilder_ != null) {
        outOfPocketCostBuilder_.dispose();
        outOfPocketCostBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    public com.google.type.Money.Builder getOutOfPocketCostBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getOutOfPocketCostFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    public com.google.type.MoneyOrBuilder getOutOfPocketCostOrBuilder() {
      if (outOfPocketCostBuilder_ != null) {
        return outOfPocketCostBuilder_.getMessageOrBuilder();
      } else {
        return outOfPocketCost_ == null
            ? com.google.type.Money.getDefaultInstance()
            : outOfPocketCost_;
      }
    }
    /**
     *
     *
     * <pre>
     * Initial cost before tax incentives: the amount that must be paid
     * out-of-pocket. Contrast with `upfront_cost`, which is after tax incentives.
     * </pre>
     *
     * <code>.google.type.Money out_of_pocket_cost = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Money, com.google.type.Money.Builder, com.google.type.MoneyOrBuilder>
        getOutOfPocketCostFieldBuilder() {
      if (outOfPocketCostBuilder_ == null) {
        outOfPocketCostBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Money,
                com.google.type.Money.Builder,
                com.google.type.MoneyOrBuilder>(
                getOutOfPocketCost(), getParentForChildren(), isClean());
        outOfPocketCost_ = null;
      }
      return outOfPocketCostBuilder_;
    }

    private com.google.type.Money upfrontCost_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Money, com.google.type.Money.Builder, com.google.type.MoneyOrBuilder>
        upfrontCostBuilder_;
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     *
     * @return Whether the upfrontCost field is set.
     */
    public boolean hasUpfrontCost() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     *
     * @return The upfrontCost.
     */
    public com.google.type.Money getUpfrontCost() {
      if (upfrontCostBuilder_ == null) {
        return upfrontCost_ == null ? com.google.type.Money.getDefaultInstance() : upfrontCost_;
      } else {
        return upfrontCostBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    public Builder setUpfrontCost(com.google.type.Money value) {
      if (upfrontCostBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        upfrontCost_ = value;
      } else {
        upfrontCostBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    public Builder setUpfrontCost(com.google.type.Money.Builder builderForValue) {
      if (upfrontCostBuilder_ == null) {
        upfrontCost_ = builderForValue.build();
      } else {
        upfrontCostBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    public Builder mergeUpfrontCost(com.google.type.Money value) {
      if (upfrontCostBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && upfrontCost_ != null
            && upfrontCost_ != com.google.type.Money.getDefaultInstance()) {
          getUpfrontCostBuilder().mergeFrom(value);
        } else {
          upfrontCost_ = value;
        }
      } else {
        upfrontCostBuilder_.mergeFrom(value);
      }
      if (upfrontCost_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    public Builder clearUpfrontCost() {
      bitField0_ = (bitField0_ & ~0x00000002);
      upfrontCost_ = null;
      if (upfrontCostBuilder_ != null) {
        upfrontCostBuilder_.dispose();
        upfrontCostBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    public com.google.type.Money.Builder getUpfrontCostBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getUpfrontCostFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    public com.google.type.MoneyOrBuilder getUpfrontCostOrBuilder() {
      if (upfrontCostBuilder_ != null) {
        return upfrontCostBuilder_.getMessageOrBuilder();
      } else {
        return upfrontCost_ == null ? com.google.type.Money.getDefaultInstance() : upfrontCost_;
      }
    }
    /**
     *
     *
     * <pre>
     * Initial cost after tax incentives: it's the amount that must be paid
     * during first year. Contrast with `out_of_pocket_cost`, which is before tax
     * incentives.
     * </pre>
     *
     * <code>.google.type.Money upfront_cost = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Money, com.google.type.Money.Builder, com.google.type.MoneyOrBuilder>
        getUpfrontCostFieldBuilder() {
      if (upfrontCostBuilder_ == null) {
        upfrontCostBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Money,
                com.google.type.Money.Builder,
                com.google.type.MoneyOrBuilder>(
                getUpfrontCost(), getParentForChildren(), isClean());
        upfrontCost_ = null;
      }
      return upfrontCostBuilder_;
    }

    private com.google.type.Money rebateValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Money, com.google.type.Money.Builder, com.google.type.MoneyOrBuilder>
        rebateValueBuilder_;
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     *
     * @return Whether the rebateValue field is set.
     */
    public boolean hasRebateValue() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     *
     * @return The rebateValue.
     */
    public com.google.type.Money getRebateValue() {
      if (rebateValueBuilder_ == null) {
        return rebateValue_ == null ? com.google.type.Money.getDefaultInstance() : rebateValue_;
      } else {
        return rebateValueBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    public Builder setRebateValue(com.google.type.Money value) {
      if (rebateValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rebateValue_ = value;
      } else {
        rebateValueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    public Builder setRebateValue(com.google.type.Money.Builder builderForValue) {
      if (rebateValueBuilder_ == null) {
        rebateValue_ = builderForValue.build();
      } else {
        rebateValueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    public Builder mergeRebateValue(com.google.type.Money value) {
      if (rebateValueBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && rebateValue_ != null
            && rebateValue_ != com.google.type.Money.getDefaultInstance()) {
          getRebateValueBuilder().mergeFrom(value);
        } else {
          rebateValue_ = value;
        }
      } else {
        rebateValueBuilder_.mergeFrom(value);
      }
      if (rebateValue_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    public Builder clearRebateValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      rebateValue_ = null;
      if (rebateValueBuilder_ != null) {
        rebateValueBuilder_.dispose();
        rebateValueBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    public com.google.type.Money.Builder getRebateValueBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getRebateValueFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    public com.google.type.MoneyOrBuilder getRebateValueOrBuilder() {
      if (rebateValueBuilder_ != null) {
        return rebateValueBuilder_.getMessageOrBuilder();
      } else {
        return rebateValue_ == null ? com.google.type.Money.getDefaultInstance() : rebateValue_;
      }
    }
    /**
     *
     *
     * <pre>
     * The value of all tax rebates.
     * </pre>
     *
     * <code>.google.type.Money rebate_value = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Money, com.google.type.Money.Builder, com.google.type.MoneyOrBuilder>
        getRebateValueFieldBuilder() {
      if (rebateValueBuilder_ == null) {
        rebateValueBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Money,
                com.google.type.Money.Builder,
                com.google.type.MoneyOrBuilder>(
                getRebateValue(), getParentForChildren(), isClean());
        rebateValue_ = null;
      }
      return rebateValueBuilder_;
    }

    private float paybackYears_;
    /**
     *
     *
     * <pre>
     * Number of years until payback occurs. A negative value means payback
     * never occurs within the lifetime period.
     * </pre>
     *
     * <code>optional float payback_years = 4;</code>
     *
     * @return Whether the paybackYears field is set.
     */
    @java.lang.Override
    public boolean hasPaybackYears() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Number of years until payback occurs. A negative value means payback
     * never occurs within the lifetime period.
     * </pre>
     *
     * <code>optional float payback_years = 4;</code>
     *
     * @return The paybackYears.
     */
    @java.lang.Override
    public float getPaybackYears() {
      return paybackYears_;
    }
    /**
     *
     *
     * <pre>
     * Number of years until payback occurs. A negative value means payback
     * never occurs within the lifetime period.
     * </pre>
     *
     * <code>optional float payback_years = 4;</code>
     *
     * @param value The paybackYears to set.
     * @return This builder for chaining.
     */
    public Builder setPaybackYears(float value) {

      paybackYears_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Number of years until payback occurs. A negative value means payback
     * never occurs within the lifetime period.
     * </pre>
     *
     * <code>optional float payback_years = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPaybackYears() {
      bitField0_ = (bitField0_ & ~0x00000008);
      paybackYears_ = 0F;
      onChanged();
      return this;
    }

    private com.google.maps.solar.v1.SavingsOverTime savings_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.solar.v1.SavingsOverTime,
            com.google.maps.solar.v1.SavingsOverTime.Builder,
            com.google.maps.solar.v1.SavingsOverTimeOrBuilder>
        savingsBuilder_;
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     *
     * @return Whether the savings field is set.
     */
    public boolean hasSavings() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     *
     * @return The savings.
     */
    public com.google.maps.solar.v1.SavingsOverTime getSavings() {
      if (savingsBuilder_ == null) {
        return savings_ == null
            ? com.google.maps.solar.v1.SavingsOverTime.getDefaultInstance()
            : savings_;
      } else {
        return savingsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    public Builder setSavings(com.google.maps.solar.v1.SavingsOverTime value) {
      if (savingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        savings_ = value;
      } else {
        savingsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    public Builder setSavings(com.google.maps.solar.v1.SavingsOverTime.Builder builderForValue) {
      if (savingsBuilder_ == null) {
        savings_ = builderForValue.build();
      } else {
        savingsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    public Builder mergeSavings(com.google.maps.solar.v1.SavingsOverTime value) {
      if (savingsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && savings_ != null
            && savings_ != com.google.maps.solar.v1.SavingsOverTime.getDefaultInstance()) {
          getSavingsBuilder().mergeFrom(value);
        } else {
          savings_ = value;
        }
      } else {
        savingsBuilder_.mergeFrom(value);
      }
      if (savings_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    public Builder clearSavings() {
      bitField0_ = (bitField0_ & ~0x00000010);
      savings_ = null;
      if (savingsBuilder_ != null) {
        savingsBuilder_.dispose();
        savingsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    public com.google.maps.solar.v1.SavingsOverTime.Builder getSavingsBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSavingsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    public com.google.maps.solar.v1.SavingsOverTimeOrBuilder getSavingsOrBuilder() {
      if (savingsBuilder_ != null) {
        return savingsBuilder_.getMessageOrBuilder();
      } else {
        return savings_ == null
            ? com.google.maps.solar.v1.SavingsOverTime.getDefaultInstance()
            : savings_;
      }
    }
    /**
     *
     *
     * <pre>
     * How much is saved (or not) over the lifetime period.
     * </pre>
     *
     * <code>.google.maps.solar.v1.SavingsOverTime savings = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.solar.v1.SavingsOverTime,
            com.google.maps.solar.v1.SavingsOverTime.Builder,
            com.google.maps.solar.v1.SavingsOverTimeOrBuilder>
        getSavingsFieldBuilder() {
      if (savingsBuilder_ == null) {
        savingsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.solar.v1.SavingsOverTime,
                com.google.maps.solar.v1.SavingsOverTime.Builder,
                com.google.maps.solar.v1.SavingsOverTimeOrBuilder>(
                getSavings(), getParentForChildren(), isClean());
        savings_ = null;
      }
      return savingsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.maps.solar.v1.CashPurchaseSavings)
  }

  // @@protoc_insertion_point(class_scope:google.maps.solar.v1.CashPurchaseSavings)
  private static final com.google.maps.solar.v1.CashPurchaseSavings DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.solar.v1.CashPurchaseSavings();
  }

  public static com.google.maps.solar.v1.CashPurchaseSavings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CashPurchaseSavings> PARSER =
      new com.google.protobuf.AbstractParser<CashPurchaseSavings>() {
        @java.lang.Override
        public CashPurchaseSavings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<CashPurchaseSavings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CashPurchaseSavings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.solar.v1.CashPurchaseSavings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
