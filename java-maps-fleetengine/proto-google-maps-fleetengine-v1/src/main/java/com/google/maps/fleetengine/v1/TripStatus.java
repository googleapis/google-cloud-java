/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/trips.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.fleetengine.v1;

/**
 *
 *
 * <pre>
 * The status of a trip indicating its progression.
 * </pre>
 *
 * Protobuf enum {@code maps.fleetengine.v1.TripStatus}
 */
public enum TripStatus implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * Default, used for unspecified or unrecognized trip status.
   * </pre>
   *
   * <code>UNKNOWN_TRIP_STATUS = 0;</code>
   */
  UNKNOWN_TRIP_STATUS(0),
  /**
   *
   *
   * <pre>
   * Newly created trip.
   * </pre>
   *
   * <code>NEW = 1;</code>
   */
  NEW(1),
  /**
   *
   *
   * <pre>
   * The driver is on their way to the pickup point.
   * </pre>
   *
   * <code>ENROUTE_TO_PICKUP = 2;</code>
   */
  ENROUTE_TO_PICKUP(2),
  /**
   *
   *
   * <pre>
   * The driver has arrived at the pickup point.
   * </pre>
   *
   * <code>ARRIVED_AT_PICKUP = 3;</code>
   */
  ARRIVED_AT_PICKUP(3),
  /**
   *
   *
   * <pre>
   * The driver has arrived at an intermediate destination and is waiting for
   * the rider.
   * </pre>
   *
   * <code>ARRIVED_AT_INTERMEDIATE_DESTINATION = 7;</code>
   */
  ARRIVED_AT_INTERMEDIATE_DESTINATION(7),
  /**
   *
   *
   * <pre>
   * The driver is on their way to an intermediate destination
   * (not the dropoff point).
   * </pre>
   *
   * <code>ENROUTE_TO_INTERMEDIATE_DESTINATION = 8;</code>
   */
  ENROUTE_TO_INTERMEDIATE_DESTINATION(8),
  /**
   *
   *
   * <pre>
   * The driver has picked up the rider and is on their way to the
   * next destination.
   * </pre>
   *
   * <code>ENROUTE_TO_DROPOFF = 4;</code>
   */
  ENROUTE_TO_DROPOFF(4),
  /**
   *
   *
   * <pre>
   * The rider has been dropped off and the trip is complete.
   * </pre>
   *
   * <code>COMPLETE = 5;</code>
   */
  COMPLETE(5),
  /**
   *
   *
   * <pre>
   * The trip was canceled prior to pickup by the driver, rider, or
   * rideshare provider.
   * </pre>
   *
   * <code>CANCELED = 6;</code>
   */
  CANCELED(6),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * Default, used for unspecified or unrecognized trip status.
   * </pre>
   *
   * <code>UNKNOWN_TRIP_STATUS = 0;</code>
   */
  public static final int UNKNOWN_TRIP_STATUS_VALUE = 0;
  /**
   *
   *
   * <pre>
   * Newly created trip.
   * </pre>
   *
   * <code>NEW = 1;</code>
   */
  public static final int NEW_VALUE = 1;
  /**
   *
   *
   * <pre>
   * The driver is on their way to the pickup point.
   * </pre>
   *
   * <code>ENROUTE_TO_PICKUP = 2;</code>
   */
  public static final int ENROUTE_TO_PICKUP_VALUE = 2;
  /**
   *
   *
   * <pre>
   * The driver has arrived at the pickup point.
   * </pre>
   *
   * <code>ARRIVED_AT_PICKUP = 3;</code>
   */
  public static final int ARRIVED_AT_PICKUP_VALUE = 3;
  /**
   *
   *
   * <pre>
   * The driver has arrived at an intermediate destination and is waiting for
   * the rider.
   * </pre>
   *
   * <code>ARRIVED_AT_INTERMEDIATE_DESTINATION = 7;</code>
   */
  public static final int ARRIVED_AT_INTERMEDIATE_DESTINATION_VALUE = 7;
  /**
   *
   *
   * <pre>
   * The driver is on their way to an intermediate destination
   * (not the dropoff point).
   * </pre>
   *
   * <code>ENROUTE_TO_INTERMEDIATE_DESTINATION = 8;</code>
   */
  public static final int ENROUTE_TO_INTERMEDIATE_DESTINATION_VALUE = 8;
  /**
   *
   *
   * <pre>
   * The driver has picked up the rider and is on their way to the
   * next destination.
   * </pre>
   *
   * <code>ENROUTE_TO_DROPOFF = 4;</code>
   */
  public static final int ENROUTE_TO_DROPOFF_VALUE = 4;
  /**
   *
   *
   * <pre>
   * The rider has been dropped off and the trip is complete.
   * </pre>
   *
   * <code>COMPLETE = 5;</code>
   */
  public static final int COMPLETE_VALUE = 5;
  /**
   *
   *
   * <pre>
   * The trip was canceled prior to pickup by the driver, rider, or
   * rideshare provider.
   * </pre>
   *
   * <code>CANCELED = 6;</code>
   */
  public static final int CANCELED_VALUE = 6;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TripStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TripStatus forNumber(int value) {
    switch (value) {
      case 0:
        return UNKNOWN_TRIP_STATUS;
      case 1:
        return NEW;
      case 2:
        return ENROUTE_TO_PICKUP;
      case 3:
        return ARRIVED_AT_PICKUP;
      case 7:
        return ARRIVED_AT_INTERMEDIATE_DESTINATION;
      case 8:
        return ENROUTE_TO_INTERMEDIATE_DESTINATION;
      case 4:
        return ENROUTE_TO_DROPOFF;
      case 5:
        return COMPLETE;
      case 6:
        return CANCELED;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TripStatus> internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<TripStatus> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<TripStatus>() {
        public TripStatus findValueByNumber(int number) {
          return TripStatus.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.maps.fleetengine.v1.Trips.getDescriptor().getEnumTypes().get(0);
  }

  private static final TripStatus[] VALUES = values();

  public static TripStatus valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TripStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:maps.fleetengine.v1.TripStatus)
}
