/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.fleetengine.v1;

public interface ListVehiclesRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:maps.fleetengine.v1.ListVehiclesRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   *
   * @return Whether the header field is set.
   */
  boolean hasHeader();
  /**
   *
   *
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   *
   * @return The header.
   */
  com.google.maps.fleetengine.v1.RequestHeader getHeader();
  /**
   *
   *
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   */
  com.google.maps.fleetengine.v1.RequestHeaderOrBuilder getHeaderOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The parent.
   */
  java.lang.String getParent();
  /**
   *
   *
   * <pre>
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * The maximum number of vehicles to return.
   * Default value: 100.
   * </pre>
   *
   * <code>int32 page_size = 3;</code>
   *
   * @return The pageSize.
   */
  int getPageSize();

  /**
   *
   *
   * <pre>
   * The value of the `next_page_token` provided by a previous call to
   * `ListVehicles` so that you can paginate through groups of vehicles. The
   * value is undefined if the filter criteria of the request is not the same as
   * the filter criteria for the previous call to `ListVehicles`.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   *
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   *
   *
   * <pre>
   * The value of the `next_page_token` provided by a previous call to
   * `ListVehicles` so that you can paginate through groups of vehicles. The
   * value is undefined if the filter criteria of the request is not the same as
   * the filter criteria for the previous call to `ListVehicles`.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   *
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString getPageTokenBytes();

  /**
   *
   *
   * <pre>
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   *
   * @return Whether the minimumCapacity field is set.
   */
  boolean hasMinimumCapacity();
  /**
   *
   *
   * <pre>
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   *
   * @return The minimumCapacity.
   */
  com.google.protobuf.Int32Value getMinimumCapacity();
  /**
   *
   *
   * <pre>
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getMinimumCapacityOrBuilder();

  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   *
   * @return A list containing the tripTypes.
   */
  java.util.List<com.google.maps.fleetengine.v1.TripType> getTripTypesList();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   *
   * @return The count of tripTypes.
   */
  int getTripTypesCount();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   *
   * @param index The index of the element to return.
   * @return The tripTypes at the given index.
   */
  com.google.maps.fleetengine.v1.TripType getTripTypes(int index);
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   *
   * @return A list containing the enum numeric values on the wire for tripTypes.
   */
  java.util.List<java.lang.Integer> getTripTypesValueList();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of tripTypes at the given index.
   */
  int getTripTypesValue(int index);

  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that have sent location updates to Fleet
   * Engine within the specified duration. Stationary vehicles still
   * transmitting their locations are not considered stale. If present, must be
   * a valid positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   *
   * @return Whether the maximumStaleness field is set.
   */
  boolean hasMaximumStaleness();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that have sent location updates to Fleet
   * Engine within the specified duration. Stationary vehicles still
   * transmitting their locations are not considered stale. If present, must be
   * a valid positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   *
   * @return The maximumStaleness.
   */
  com.google.protobuf.Duration getMaximumStaleness();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that have sent location updates to Fleet
   * Engine within the specified duration. Stationary vehicles still
   * transmitting their locations are not considered stale. If present, must be
   * a valid positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   */
  com.google.protobuf.DurationOrBuilder getMaximumStalenessOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories. `UNKNOWN` is not allowed.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return A list containing the vehicleTypeCategories.
   */
  java.util.List<com.google.maps.fleetengine.v1.Vehicle.VehicleType.Category>
      getVehicleTypeCategoriesList();
  /**
   *
   *
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories. `UNKNOWN` is not allowed.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The count of vehicleTypeCategories.
   */
  int getVehicleTypeCategoriesCount();
  /**
   *
   *
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories. `UNKNOWN` is not allowed.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The vehicleTypeCategories at the given index.
   */
  com.google.maps.fleetengine.v1.Vehicle.VehicleType.Category getVehicleTypeCategories(int index);
  /**
   *
   *
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories. `UNKNOWN` is not allowed.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return A list containing the enum numeric values on the wire for vehicleTypeCategories.
   */
  java.util.List<java.lang.Integer> getVehicleTypeCategoriesValueList();
  /**
   *
   *
   * <pre>
   * Required. Restricts the response to vehicles with one of the specified type
   * categories. `UNKNOWN` is not allowed.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of vehicleTypeCategories at the given index.
   */
  int getVehicleTypeCategoriesValue(int index);

  /**
   *
   *
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   *
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   *
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. A max of 50 required_attributes is
   * allowed. This matches the maximum number of attributes allowed on a
   * vehicle. Each repeated string should be of the format "key:value".
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   *
   * @return A list containing the requiredAttributes.
   */
  java.util.List<java.lang.String> getRequiredAttributesList();
  /**
   *
   *
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   *
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   *
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. A max of 50 required_attributes is
   * allowed. This matches the maximum number of attributes allowed on a
   * vehicle. Each repeated string should be of the format "key:value".
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   *
   * @return The count of requiredAttributes.
   */
  int getRequiredAttributesCount();
  /**
   *
   *
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   *
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   *
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. A max of 50 required_attributes is
   * allowed. This matches the maximum number of attributes allowed on a
   * vehicle. Each repeated string should be of the format "key:value".
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   *
   * @param index The index of the element to return.
   * @return The requiredAttributes at the given index.
   */
  java.lang.String getRequiredAttributes(int index);
  /**
   *
   *
   * <pre>
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   *
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   *
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. A max of 50 required_attributes is
   * allowed. This matches the maximum number of attributes allowed on a
   * vehicle. Each repeated string should be of the format "key:value".
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the requiredAttributes at the given index.
   */
  com.google.protobuf.ByteString getRequiredAttributesBytes(int index);

  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Each repeated string should be of the format
   * "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   *
   * @return A list containing the requiredOneOfAttributes.
   */
  java.util.List<java.lang.String> getRequiredOneOfAttributesList();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Each repeated string should be of the format
   * "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   *
   * @return The count of requiredOneOfAttributes.
   */
  int getRequiredOneOfAttributesCount();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Each repeated string should be of the format
   * "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   *
   * @param index The index of the element to return.
   * @return The requiredOneOfAttributes at the given index.
   */
  java.lang.String getRequiredOneOfAttributes(int index);
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Each repeated string should be of the format
   * "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the requiredOneOfAttributes at the given index.
   */
  com.google.protobuf.ByteString getRequiredOneOfAttributesBytes(int index);

  /**
   *
   *
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   *
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (
   *   (required_one_of_attribute_sets[0][0] AND
   *   required_one_of_attribute_sets[0][1] AND
   *   ...)
   *   OR
   *   (required_one_of_attribute_sets[1][0] AND
   *   required_one_of_attribute_sets[1][1] AND
   *   ...)
   * )
   * ```
   *
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   *
   * @return A list containing the requiredOneOfAttributeSets.
   */
  java.util.List<java.lang.String> getRequiredOneOfAttributeSetsList();
  /**
   *
   *
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   *
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (
   *   (required_one_of_attribute_sets[0][0] AND
   *   required_one_of_attribute_sets[0][1] AND
   *   ...)
   *   OR
   *   (required_one_of_attribute_sets[1][0] AND
   *   required_one_of_attribute_sets[1][1] AND
   *   ...)
   * )
   * ```
   *
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   *
   * @return The count of requiredOneOfAttributeSets.
   */
  int getRequiredOneOfAttributeSetsCount();
  /**
   *
   *
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   *
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (
   *   (required_one_of_attribute_sets[0][0] AND
   *   required_one_of_attribute_sets[0][1] AND
   *   ...)
   *   OR
   *   (required_one_of_attribute_sets[1][0] AND
   *   required_one_of_attribute_sets[1][1] AND
   *   ...)
   * )
   * ```
   *
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   *
   * @param index The index of the element to return.
   * @return The requiredOneOfAttributeSets at the given index.
   */
  java.lang.String getRequiredOneOfAttributeSets(int index);
  /**
   *
   *
   * <pre>
   * `required_one_of_attribute_sets` provides additional functionality.
   *
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   *
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (
   *   (required_one_of_attribute_sets[0][0] AND
   *   required_one_of_attribute_sets[0][1] AND
   *   ...)
   *   OR
   *   (required_one_of_attribute_sets[1][0] AND
   *   required_one_of_attribute_sets[1][1] AND
   *   ...)
   * )
   * ```
   *
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the requiredOneOfAttributeSets at the given index.
   */
  com.google.protobuf.ByteString getRequiredOneOfAttributeSetsBytes(int index);

  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that have this vehicle state.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
   *
   * @return The enum numeric value on the wire for vehicleState.
   */
  int getVehicleStateValue();
  /**
   *
   *
   * <pre>
   * Restricts the response to vehicles that have this vehicle state.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
   *
   * @return The vehicleState.
   */
  com.google.maps.fleetengine.v1.VehicleState getVehicleState();

  /**
   *
   *
   * <pre>
   * Only return the vehicles with current trip(s).
   * </pre>
   *
   * <code>bool on_trip_only = 14;</code>
   *
   * @return The onTripOnly.
   */
  boolean getOnTripOnly();

  /**
   *
   *
   * <pre>
   * Optional. A filter query to apply when listing vehicles. See
   * http://aip.dev/160 for examples of the filter syntax.
   *
   * This field is designed to replace the `required_attributes`,
   * `required_one_of_attributes`, and `required_one_of_attributes_sets` fields.
   * If a non-empty value is specified here, the following fields must be empty:
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attributes_sets`.
   *
   * This filter functions as an AND clause with other constraints,
   * such as `vehicle_state` or `on_trip_only`.
   *
   * Note that the only queries supported are on vehicle attributes (for
   * example, `attributes.&lt;key&gt; = &lt;value&gt;` or `attributes.&lt;key1&gt; = &lt;value1&gt; AND
   * attributes.&lt;key2&gt; = &lt;value2&gt;`). The maximum number of restrictions allowed
   * in a filter query is 50.
   *
   * Also, all attributes are stored as strings, so the only supported
   * comparisons against attributes are string comparisons. In order to compare
   * against number or boolean values, the values must be explicitly quoted to
   * be treated as strings (for example, `attributes.&lt;key&gt; = "10"` or
   * `attributes.&lt;key&gt; = "true"`).
   * </pre>
   *
   * <code>string filter = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The filter.
   */
  java.lang.String getFilter();
  /**
   *
   *
   * <pre>
   * Optional. A filter query to apply when listing vehicles. See
   * http://aip.dev/160 for examples of the filter syntax.
   *
   * This field is designed to replace the `required_attributes`,
   * `required_one_of_attributes`, and `required_one_of_attributes_sets` fields.
   * If a non-empty value is specified here, the following fields must be empty:
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attributes_sets`.
   *
   * This filter functions as an AND clause with other constraints,
   * such as `vehicle_state` or `on_trip_only`.
   *
   * Note that the only queries supported are on vehicle attributes (for
   * example, `attributes.&lt;key&gt; = &lt;value&gt;` or `attributes.&lt;key1&gt; = &lt;value1&gt; AND
   * attributes.&lt;key2&gt; = &lt;value2&gt;`). The maximum number of restrictions allowed
   * in a filter query is 50.
   *
   * Also, all attributes are stored as strings, so the only supported
   * comparisons against attributes are string comparisons. In order to compare
   * against number or boolean values, the values must be explicitly quoted to
   * be treated as strings (for example, `attributes.&lt;key&gt; = "10"` or
   * `attributes.&lt;key&gt; = "true"`).
   * </pre>
   *
   * <code>string filter = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for filter.
   */
  com.google.protobuf.ByteString getFilterBytes();

  /**
   *
   *
   * <pre>
   * Optional. A filter that limits the vehicles returned to those whose last
   * known location was in the rectangular area defined by the viewport.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the viewport field is set.
   */
  boolean hasViewport();
  /**
   *
   *
   * <pre>
   * Optional. A filter that limits the vehicles returned to those whose last
   * known location was in the rectangular area defined by the viewport.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The viewport.
   */
  com.google.geo.type.Viewport getViewport();
  /**
   *
   *
   * <pre>
   * Optional. A filter that limits the vehicles returned to those whose last
   * known location was in the rectangular area defined by the viewport.
   * </pre>
   *
   * <code>.google.geo.type.Viewport viewport = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  com.google.geo.type.ViewportOrBuilder getViewportOrBuilder();
}
