/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.fleetengine.v1;

/**
 *
 *
 * <pre>
 * Contains the vehicle and related estimates for a vehicle that match the
 * points of active trips for the vehicle `SearchVehiclesRequest`.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.v1.VehicleMatch}
 */
public final class VehicleMatch extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.v1.VehicleMatch)
    VehicleMatchOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use VehicleMatch.newBuilder() to construct.
  private VehicleMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private VehicleMatch() {
    tripType_ = 0;
    vehicleTripsWaypoints_ = java.util.Collections.emptyList();
    vehicleMatchType_ = 0;
    requestedOrderedBy_ = 0;
    orderedBy_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new VehicleMatch();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.fleetengine.v1.VehicleApi
        .internal_static_maps_fleetengine_v1_VehicleMatch_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.fleetengine.v1.VehicleApi
        .internal_static_maps_fleetengine_v1_VehicleMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.fleetengine.v1.VehicleMatch.class,
            com.google.maps.fleetengine.v1.VehicleMatch.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Type of vehicle match.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.v1.VehicleMatch.VehicleMatchType}
   */
  public enum VehicleMatchType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Unknown vehicle match type
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     *
     *
     * <pre>
     * The vehicle currently has no trip assigned to it and can proceed to the
     * pickup point.
     * </pre>
     *
     * <code>EXCLUSIVE = 1;</code>
     */
    EXCLUSIVE(1),
    /**
     *
     *
     * <pre>
     * The vehicle is currently assigned to a trip, but can proceed to the
     * pickup point after completing the in-progress trip.  ETA and distance
     * calculations take the existing trip into account.
     * </pre>
     *
     * <code>BACK_TO_BACK = 2;</code>
     */
    BACK_TO_BACK(2),
    /**
     *
     *
     * <pre>
     * The vehicle has sufficient capacity for a shared ride.
     * </pre>
     *
     * <code>CARPOOL = 3;</code>
     */
    CARPOOL(3),
    /**
     *
     *
     * <pre>
     * The vehicle will finish its current, active trip before proceeding to the
     * pickup point.  ETA and distance calculations take the existing trip into
     * account.
     * </pre>
     *
     * <code>CARPOOL_BACK_TO_BACK = 4;</code>
     */
    CARPOOL_BACK_TO_BACK(4),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Unknown vehicle match type
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The vehicle currently has no trip assigned to it and can proceed to the
     * pickup point.
     * </pre>
     *
     * <code>EXCLUSIVE = 1;</code>
     */
    public static final int EXCLUSIVE_VALUE = 1;
    /**
     *
     *
     * <pre>
     * The vehicle is currently assigned to a trip, but can proceed to the
     * pickup point after completing the in-progress trip.  ETA and distance
     * calculations take the existing trip into account.
     * </pre>
     *
     * <code>BACK_TO_BACK = 2;</code>
     */
    public static final int BACK_TO_BACK_VALUE = 2;
    /**
     *
     *
     * <pre>
     * The vehicle has sufficient capacity for a shared ride.
     * </pre>
     *
     * <code>CARPOOL = 3;</code>
     */
    public static final int CARPOOL_VALUE = 3;
    /**
     *
     *
     * <pre>
     * The vehicle will finish its current, active trip before proceeding to the
     * pickup point.  ETA and distance calculations take the existing trip into
     * account.
     * </pre>
     *
     * <code>CARPOOL_BACK_TO_BACK = 4;</code>
     */
    public static final int CARPOOL_BACK_TO_BACK_VALUE = 4;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VehicleMatchType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VehicleMatchType forNumber(int value) {
      switch (value) {
        case 0:
          return UNKNOWN;
        case 1:
          return EXCLUSIVE;
        case 2:
          return BACK_TO_BACK;
        case 3:
          return CARPOOL;
        case 4:
          return CARPOOL_BACK_TO_BACK;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VehicleMatchType> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<VehicleMatchType>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VehicleMatchType>() {
              public VehicleMatchType findValueByNumber(int number) {
                return VehicleMatchType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.maps.fleetengine.v1.VehicleMatch.getDescriptor().getEnumTypes().get(0);
    }

    private static final VehicleMatchType[] VALUES = values();

    public static VehicleMatchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VehicleMatchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.v1.VehicleMatch.VehicleMatchType)
  }

  private int bitField0_;
  public static final int VEHICLE_FIELD_NUMBER = 1;
  private com.google.maps.fleetengine.v1.Vehicle vehicle_;
  /**
   *
   *
   * <pre>
   * Required. A vehicle that matches the request.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the vehicle field is set.
   */
  @java.lang.Override
  public boolean hasVehicle() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. A vehicle that matches the request.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The vehicle.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.Vehicle getVehicle() {
    return vehicle_ == null
        ? com.google.maps.fleetengine.v1.Vehicle.getDefaultInstance()
        : vehicle_;
  }
  /**
   *
   *
   * <pre>
   * Required. A vehicle that matches the request.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.VehicleOrBuilder getVehicleOrBuilder() {
    return vehicle_ == null
        ? com.google.maps.fleetengine.v1.Vehicle.getDefaultInstance()
        : vehicle_;
  }

  public static final int VEHICLE_PICKUP_ETA_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp vehiclePickupEta_;
  /**
   *
   *
   * <pre>
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
   * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
   * required to complete the current active trip.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
   *
   * @return Whether the vehiclePickupEta field is set.
   */
  @java.lang.Override
  public boolean hasVehiclePickupEta() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
   * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
   * required to complete the current active trip.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
   *
   * @return The vehiclePickupEta.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getVehiclePickupEta() {
    return vehiclePickupEta_ == null
        ? com.google.protobuf.Timestamp.getDefaultInstance()
        : vehiclePickupEta_;
  }
  /**
   *
   *
   * <pre>
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
   * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
   * required to complete the current active trip.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getVehiclePickupEtaOrBuilder() {
    return vehiclePickupEta_ == null
        ? com.google.protobuf.Timestamp.getDefaultInstance()
        : vehiclePickupEta_;
  }

  public static final int VEHICLE_PICKUP_DISTANCE_METERS_FIELD_NUMBER = 3;
  private com.google.protobuf.Int32Value vehiclePickupDistanceMeters_;
  /**
   *
   *
   * <pre>
   * The distance from the Vehicle's current location to the pickup point
   * specified in the request, including any intermediate pickup or dropoff
   * points for existing trips. This distance comprises the calculated driving
   * (route) distance, plus the straight line distance between the navigation
   * end point and the requested pickup point. (The distance between the
   * navigation end point and the requested pickup point is typically small.) An
   * empty value indicates an error in calculating the distance.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
   *
   * @return Whether the vehiclePickupDistanceMeters field is set.
   */
  @java.lang.Override
  public boolean hasVehiclePickupDistanceMeters() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * The distance from the Vehicle's current location to the pickup point
   * specified in the request, including any intermediate pickup or dropoff
   * points for existing trips. This distance comprises the calculated driving
   * (route) distance, plus the straight line distance between the navigation
   * end point and the requested pickup point. (The distance between the
   * navigation end point and the requested pickup point is typically small.) An
   * empty value indicates an error in calculating the distance.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
   *
   * @return The vehiclePickupDistanceMeters.
   */
  @java.lang.Override
  public com.google.protobuf.Int32Value getVehiclePickupDistanceMeters() {
    return vehiclePickupDistanceMeters_ == null
        ? com.google.protobuf.Int32Value.getDefaultInstance()
        : vehiclePickupDistanceMeters_;
  }
  /**
   *
   *
   * <pre>
   * The distance from the Vehicle's current location to the pickup point
   * specified in the request, including any intermediate pickup or dropoff
   * points for existing trips. This distance comprises the calculated driving
   * (route) distance, plus the straight line distance between the navigation
   * end point and the requested pickup point. (The distance between the
   * navigation end point and the requested pickup point is typically small.) An
   * empty value indicates an error in calculating the distance.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupDistanceMetersOrBuilder() {
    return vehiclePickupDistanceMeters_ == null
        ? com.google.protobuf.Int32Value.getDefaultInstance()
        : vehiclePickupDistanceMeters_;
  }

  public static final int VEHICLE_PICKUP_STRAIGHT_LINE_DISTANCE_METERS_FIELD_NUMBER = 11;
  private com.google.protobuf.Int32Value vehiclePickupStraightLineDistanceMeters_;
  /**
   *
   *
   * <pre>
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request.
   * </pre>
   *
   * <code>
   * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the vehiclePickupStraightLineDistanceMeters field is set.
   */
  @java.lang.Override
  public boolean hasVehiclePickupStraightLineDistanceMeters() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request.
   * </pre>
   *
   * <code>
   * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The vehiclePickupStraightLineDistanceMeters.
   */
  @java.lang.Override
  public com.google.protobuf.Int32Value getVehiclePickupStraightLineDistanceMeters() {
    return vehiclePickupStraightLineDistanceMeters_ == null
        ? com.google.protobuf.Int32Value.getDefaultInstance()
        : vehiclePickupStraightLineDistanceMeters_;
  }
  /**
   *
   *
   * <pre>
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request.
   * </pre>
   *
   * <code>
   * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.protobuf.Int32ValueOrBuilder
      getVehiclePickupStraightLineDistanceMetersOrBuilder() {
    return vehiclePickupStraightLineDistanceMeters_ == null
        ? com.google.protobuf.Int32Value.getDefaultInstance()
        : vehiclePickupStraightLineDistanceMeters_;
  }

  public static final int VEHICLE_DROPOFF_ETA_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp vehicleDropoffEta_;
  /**
   *
   *
   * <pre>
   * The complete vehicle's driving ETA to the drop off point specified in the
   * request. The ETA includes stopping at any waypoints before the
   * `dropoff_point` specified in the request. The value will only be populated
   * when a drop off point is specified in the request. An empty value indicates
   * an error calculating the ETA.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
   *
   * @return Whether the vehicleDropoffEta field is set.
   */
  @java.lang.Override
  public boolean hasVehicleDropoffEta() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   *
   *
   * <pre>
   * The complete vehicle's driving ETA to the drop off point specified in the
   * request. The ETA includes stopping at any waypoints before the
   * `dropoff_point` specified in the request. The value will only be populated
   * when a drop off point is specified in the request. An empty value indicates
   * an error calculating the ETA.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
   *
   * @return The vehicleDropoffEta.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getVehicleDropoffEta() {
    return vehicleDropoffEta_ == null
        ? com.google.protobuf.Timestamp.getDefaultInstance()
        : vehicleDropoffEta_;
  }
  /**
   *
   *
   * <pre>
   * The complete vehicle's driving ETA to the drop off point specified in the
   * request. The ETA includes stopping at any waypoints before the
   * `dropoff_point` specified in the request. The value will only be populated
   * when a drop off point is specified in the request. An empty value indicates
   * an error calculating the ETA.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getVehicleDropoffEtaOrBuilder() {
    return vehicleDropoffEta_ == null
        ? com.google.protobuf.Timestamp.getDefaultInstance()
        : vehicleDropoffEta_;
  }

  public static final int VEHICLE_PICKUP_TO_DROPOFF_DISTANCE_METERS_FIELD_NUMBER = 5;
  private com.google.protobuf.Int32Value vehiclePickupToDropoffDistanceMeters_;
  /**
   *
   *
   * <pre>
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * `dropoff_point` is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * drop off point specified in the request.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
   *
   * @return Whether the vehiclePickupToDropoffDistanceMeters field is set.
   */
  @java.lang.Override
  public boolean hasVehiclePickupToDropoffDistanceMeters() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   *
   *
   * <pre>
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * `dropoff_point` is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * drop off point specified in the request.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
   *
   * @return The vehiclePickupToDropoffDistanceMeters.
   */
  @java.lang.Override
  public com.google.protobuf.Int32Value getVehiclePickupToDropoffDistanceMeters() {
    return vehiclePickupToDropoffDistanceMeters_ == null
        ? com.google.protobuf.Int32Value.getDefaultInstance()
        : vehiclePickupToDropoffDistanceMeters_;
  }
  /**
   *
   *
   * <pre>
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * `dropoff_point` is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * drop off point specified in the request.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Int32ValueOrBuilder
      getVehiclePickupToDropoffDistanceMetersOrBuilder() {
    return vehiclePickupToDropoffDistanceMeters_ == null
        ? com.google.protobuf.Int32Value.getDefaultInstance()
        : vehiclePickupToDropoffDistanceMeters_;
  }

  public static final int TRIP_TYPE_FIELD_NUMBER = 6;
  private int tripType_ = 0;
  /**
   *
   *
   * <pre>
   * Required. The trip type of the request that was used to calculate the ETA
   * to the pickup point.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for tripType.
   */
  @java.lang.Override
  public int getTripTypeValue() {
    return tripType_;
  }
  /**
   *
   *
   * <pre>
   * Required. The trip type of the request that was used to calculate the ETA
   * to the pickup point.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The tripType.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.TripType getTripType() {
    com.google.maps.fleetengine.v1.TripType result =
        com.google.maps.fleetengine.v1.TripType.forNumber(tripType_);
    return result == null ? com.google.maps.fleetengine.v1.TripType.UNRECOGNIZED : result;
  }

  public static final int VEHICLE_TRIPS_WAYPOINTS_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private java.util.List<com.google.maps.fleetengine.v1.Waypoint> vehicleTripsWaypoints_;
  /**
   *
   *
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * includes vehicle location, the pickup points of active
   * trips for the vehicle, and the pickup points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.maps.fleetengine.v1.Waypoint> getVehicleTripsWaypointsList() {
    return vehicleTripsWaypoints_;
  }
  /**
   *
   *
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * includes vehicle location, the pickup points of active
   * trips for the vehicle, and the pickup points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.maps.fleetengine.v1.WaypointOrBuilder>
      getVehicleTripsWaypointsOrBuilderList() {
    return vehicleTripsWaypoints_;
  }
  /**
   *
   *
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * includes vehicle location, the pickup points of active
   * trips for the vehicle, and the pickup points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @java.lang.Override
  public int getVehicleTripsWaypointsCount() {
    return vehicleTripsWaypoints_.size();
  }
  /**
   *
   *
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * includes vehicle location, the pickup points of active
   * trips for the vehicle, and the pickup points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.Waypoint getVehicleTripsWaypoints(int index) {
    return vehicleTripsWaypoints_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * includes vehicle location, the pickup points of active
   * trips for the vehicle, and the pickup points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.WaypointOrBuilder getVehicleTripsWaypointsOrBuilder(
      int index) {
    return vehicleTripsWaypoints_.get(index);
  }

  public static final int VEHICLE_MATCH_TYPE_FIELD_NUMBER = 8;
  private int vehicleMatchType_ = 0;
  /**
   *
   *
   * <pre>
   * Type of the vehicle match.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
   *
   * @return The enum numeric value on the wire for vehicleMatchType.
   */
  @java.lang.Override
  public int getVehicleMatchTypeValue() {
    return vehicleMatchType_;
  }
  /**
   *
   *
   * <pre>
   * Type of the vehicle match.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
   *
   * @return The vehicleMatchType.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType getVehicleMatchType() {
    com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType result =
        com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType.forNumber(vehicleMatchType_);
    return result == null
        ? com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType.UNRECOGNIZED
        : result;
  }

  public static final int REQUESTED_ORDERED_BY_FIELD_NUMBER = 9;
  private int requestedOrderedBy_ = 0;
  /**
   *
   *
   * <pre>
   * The order requested for sorting vehicle matches. Equivalent to
   * `ordered_by`.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
   * </code>
   *
   * @return The enum numeric value on the wire for requestedOrderedBy.
   */
  @java.lang.Override
  public int getRequestedOrderedByValue() {
    return requestedOrderedBy_;
  }
  /**
   *
   *
   * <pre>
   * The order requested for sorting vehicle matches. Equivalent to
   * `ordered_by`.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
   * </code>
   *
   * @return The requestedOrderedBy.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
      getRequestedOrderedBy() {
    com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder result =
        com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.forNumber(
            requestedOrderedBy_);
    return result == null
        ? com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED
        : result;
  }

  public static final int ORDERED_BY_FIELD_NUMBER = 10;
  private int orderedBy_ = 0;
  /**
   *
   *
   * <pre>
   * The order requested for sorting vehicle matches. Equivalent to
   * `requested_ordered_by`.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
   *
   * @return The enum numeric value on the wire for orderedBy.
   */
  @java.lang.Override
  public int getOrderedByValue() {
    return orderedBy_;
  }
  /**
   *
   *
   * <pre>
   * The order requested for sorting vehicle matches. Equivalent to
   * `requested_ordered_by`.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
   *
   * @return The orderedBy.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder getOrderedBy() {
    com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder result =
        com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.forNumber(
            orderedBy_);
    return result == null
        ? com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getVehicle());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getVehiclePickupEta());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getVehiclePickupDistanceMeters());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(4, getVehicleDropoffEta());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(5, getVehiclePickupToDropoffDistanceMeters());
    }
    if (tripType_ != com.google.maps.fleetengine.v1.TripType.UNKNOWN_TRIP_TYPE.getNumber()) {
      output.writeEnum(6, tripType_);
    }
    for (int i = 0; i < vehicleTripsWaypoints_.size(); i++) {
      output.writeMessage(7, vehicleTripsWaypoints_.get(i));
    }
    if (vehicleMatchType_
        != com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType.UNKNOWN.getNumber()) {
      output.writeEnum(8, vehicleMatchType_);
    }
    if (requestedOrderedBy_
        != com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
            .UNKNOWN_VEHICLE_MATCH_ORDER
            .getNumber()) {
      output.writeEnum(9, requestedOrderedBy_);
    }
    if (orderedBy_
        != com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
            .UNKNOWN_VEHICLE_MATCH_ORDER
            .getNumber()) {
      output.writeEnum(10, orderedBy_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(11, getVehiclePickupStraightLineDistanceMeters());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getVehicle());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getVehiclePickupEta());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, getVehiclePickupDistanceMeters());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getVehicleDropoffEta());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              5, getVehiclePickupToDropoffDistanceMeters());
    }
    if (tripType_ != com.google.maps.fleetengine.v1.TripType.UNKNOWN_TRIP_TYPE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, tripType_);
    }
    for (int i = 0; i < vehicleTripsWaypoints_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              7, vehicleTripsWaypoints_.get(i));
    }
    if (vehicleMatchType_
        != com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(8, vehicleMatchType_);
    }
    if (requestedOrderedBy_
        != com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
            .UNKNOWN_VEHICLE_MATCH_ORDER
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(9, requestedOrderedBy_);
    }
    if (orderedBy_
        != com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
            .UNKNOWN_VEHICLE_MATCH_ORDER
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(10, orderedBy_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              11, getVehiclePickupStraightLineDistanceMeters());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.fleetengine.v1.VehicleMatch)) {
      return super.equals(obj);
    }
    com.google.maps.fleetengine.v1.VehicleMatch other =
        (com.google.maps.fleetengine.v1.VehicleMatch) obj;

    if (hasVehicle() != other.hasVehicle()) return false;
    if (hasVehicle()) {
      if (!getVehicle().equals(other.getVehicle())) return false;
    }
    if (hasVehiclePickupEta() != other.hasVehiclePickupEta()) return false;
    if (hasVehiclePickupEta()) {
      if (!getVehiclePickupEta().equals(other.getVehiclePickupEta())) return false;
    }
    if (hasVehiclePickupDistanceMeters() != other.hasVehiclePickupDistanceMeters()) return false;
    if (hasVehiclePickupDistanceMeters()) {
      if (!getVehiclePickupDistanceMeters().equals(other.getVehiclePickupDistanceMeters()))
        return false;
    }
    if (hasVehiclePickupStraightLineDistanceMeters()
        != other.hasVehiclePickupStraightLineDistanceMeters()) return false;
    if (hasVehiclePickupStraightLineDistanceMeters()) {
      if (!getVehiclePickupStraightLineDistanceMeters()
          .equals(other.getVehiclePickupStraightLineDistanceMeters())) return false;
    }
    if (hasVehicleDropoffEta() != other.hasVehicleDropoffEta()) return false;
    if (hasVehicleDropoffEta()) {
      if (!getVehicleDropoffEta().equals(other.getVehicleDropoffEta())) return false;
    }
    if (hasVehiclePickupToDropoffDistanceMeters()
        != other.hasVehiclePickupToDropoffDistanceMeters()) return false;
    if (hasVehiclePickupToDropoffDistanceMeters()) {
      if (!getVehiclePickupToDropoffDistanceMeters()
          .equals(other.getVehiclePickupToDropoffDistanceMeters())) return false;
    }
    if (tripType_ != other.tripType_) return false;
    if (!getVehicleTripsWaypointsList().equals(other.getVehicleTripsWaypointsList())) return false;
    if (vehicleMatchType_ != other.vehicleMatchType_) return false;
    if (requestedOrderedBy_ != other.requestedOrderedBy_) return false;
    if (orderedBy_ != other.orderedBy_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasVehicle()) {
      hash = (37 * hash) + VEHICLE_FIELD_NUMBER;
      hash = (53 * hash) + getVehicle().hashCode();
    }
    if (hasVehiclePickupEta()) {
      hash = (37 * hash) + VEHICLE_PICKUP_ETA_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupEta().hashCode();
    }
    if (hasVehiclePickupDistanceMeters()) {
      hash = (37 * hash) + VEHICLE_PICKUP_DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupDistanceMeters().hashCode();
    }
    if (hasVehiclePickupStraightLineDistanceMeters()) {
      hash = (37 * hash) + VEHICLE_PICKUP_STRAIGHT_LINE_DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupStraightLineDistanceMeters().hashCode();
    }
    if (hasVehicleDropoffEta()) {
      hash = (37 * hash) + VEHICLE_DROPOFF_ETA_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleDropoffEta().hashCode();
    }
    if (hasVehiclePickupToDropoffDistanceMeters()) {
      hash = (37 * hash) + VEHICLE_PICKUP_TO_DROPOFF_DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupToDropoffDistanceMeters().hashCode();
    }
    hash = (37 * hash) + TRIP_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + tripType_;
    if (getVehicleTripsWaypointsCount() > 0) {
      hash = (37 * hash) + VEHICLE_TRIPS_WAYPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleTripsWaypointsList().hashCode();
    }
    hash = (37 * hash) + VEHICLE_MATCH_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + vehicleMatchType_;
    hash = (37 * hash) + REQUESTED_ORDERED_BY_FIELD_NUMBER;
    hash = (53 * hash) + requestedOrderedBy_;
    hash = (37 * hash) + ORDERED_BY_FIELD_NUMBER;
    hash = (53 * hash) + orderedBy_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.fleetengine.v1.VehicleMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Contains the vehicle and related estimates for a vehicle that match the
   * points of active trips for the vehicle `SearchVehiclesRequest`.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.v1.VehicleMatch}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.v1.VehicleMatch)
      com.google.maps.fleetengine.v1.VehicleMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.fleetengine.v1.VehicleApi
          .internal_static_maps_fleetengine_v1_VehicleMatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.fleetengine.v1.VehicleApi
          .internal_static_maps_fleetengine_v1_VehicleMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.fleetengine.v1.VehicleMatch.class,
              com.google.maps.fleetengine.v1.VehicleMatch.Builder.class);
    }

    // Construct using com.google.maps.fleetengine.v1.VehicleMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getVehicleFieldBuilder();
        getVehiclePickupEtaFieldBuilder();
        getVehiclePickupDistanceMetersFieldBuilder();
        getVehiclePickupStraightLineDistanceMetersFieldBuilder();
        getVehicleDropoffEtaFieldBuilder();
        getVehiclePickupToDropoffDistanceMetersFieldBuilder();
        getVehicleTripsWaypointsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      vehicle_ = null;
      if (vehicleBuilder_ != null) {
        vehicleBuilder_.dispose();
        vehicleBuilder_ = null;
      }
      vehiclePickupEta_ = null;
      if (vehiclePickupEtaBuilder_ != null) {
        vehiclePickupEtaBuilder_.dispose();
        vehiclePickupEtaBuilder_ = null;
      }
      vehiclePickupDistanceMeters_ = null;
      if (vehiclePickupDistanceMetersBuilder_ != null) {
        vehiclePickupDistanceMetersBuilder_.dispose();
        vehiclePickupDistanceMetersBuilder_ = null;
      }
      vehiclePickupStraightLineDistanceMeters_ = null;
      if (vehiclePickupStraightLineDistanceMetersBuilder_ != null) {
        vehiclePickupStraightLineDistanceMetersBuilder_.dispose();
        vehiclePickupStraightLineDistanceMetersBuilder_ = null;
      }
      vehicleDropoffEta_ = null;
      if (vehicleDropoffEtaBuilder_ != null) {
        vehicleDropoffEtaBuilder_.dispose();
        vehicleDropoffEtaBuilder_ = null;
      }
      vehiclePickupToDropoffDistanceMeters_ = null;
      if (vehiclePickupToDropoffDistanceMetersBuilder_ != null) {
        vehiclePickupToDropoffDistanceMetersBuilder_.dispose();
        vehiclePickupToDropoffDistanceMetersBuilder_ = null;
      }
      tripType_ = 0;
      if (vehicleTripsWaypointsBuilder_ == null) {
        vehicleTripsWaypoints_ = java.util.Collections.emptyList();
      } else {
        vehicleTripsWaypoints_ = null;
        vehicleTripsWaypointsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      vehicleMatchType_ = 0;
      requestedOrderedBy_ = 0;
      orderedBy_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.fleetengine.v1.VehicleApi
          .internal_static_maps_fleetengine_v1_VehicleMatch_descriptor;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VehicleMatch getDefaultInstanceForType() {
      return com.google.maps.fleetengine.v1.VehicleMatch.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VehicleMatch build() {
      com.google.maps.fleetengine.v1.VehicleMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VehicleMatch buildPartial() {
      com.google.maps.fleetengine.v1.VehicleMatch result =
          new com.google.maps.fleetengine.v1.VehicleMatch(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.maps.fleetengine.v1.VehicleMatch result) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          vehicleTripsWaypoints_ = java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.vehicleTripsWaypoints_ = vehicleTripsWaypoints_;
      } else {
        result.vehicleTripsWaypoints_ = vehicleTripsWaypointsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.maps.fleetengine.v1.VehicleMatch result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.vehicle_ = vehicleBuilder_ == null ? vehicle_ : vehicleBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.vehiclePickupEta_ =
            vehiclePickupEtaBuilder_ == null ? vehiclePickupEta_ : vehiclePickupEtaBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.vehiclePickupDistanceMeters_ =
            vehiclePickupDistanceMetersBuilder_ == null
                ? vehiclePickupDistanceMeters_
                : vehiclePickupDistanceMetersBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.vehiclePickupStraightLineDistanceMeters_ =
            vehiclePickupStraightLineDistanceMetersBuilder_ == null
                ? vehiclePickupStraightLineDistanceMeters_
                : vehiclePickupStraightLineDistanceMetersBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.vehicleDropoffEta_ =
            vehicleDropoffEtaBuilder_ == null
                ? vehicleDropoffEta_
                : vehicleDropoffEtaBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.vehiclePickupToDropoffDistanceMeters_ =
            vehiclePickupToDropoffDistanceMetersBuilder_ == null
                ? vehiclePickupToDropoffDistanceMeters_
                : vehiclePickupToDropoffDistanceMetersBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.tripType_ = tripType_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.vehicleMatchType_ = vehicleMatchType_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.requestedOrderedBy_ = requestedOrderedBy_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.orderedBy_ = orderedBy_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.fleetengine.v1.VehicleMatch) {
        return mergeFrom((com.google.maps.fleetengine.v1.VehicleMatch) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.fleetengine.v1.VehicleMatch other) {
      if (other == com.google.maps.fleetengine.v1.VehicleMatch.getDefaultInstance()) return this;
      if (other.hasVehicle()) {
        mergeVehicle(other.getVehicle());
      }
      if (other.hasVehiclePickupEta()) {
        mergeVehiclePickupEta(other.getVehiclePickupEta());
      }
      if (other.hasVehiclePickupDistanceMeters()) {
        mergeVehiclePickupDistanceMeters(other.getVehiclePickupDistanceMeters());
      }
      if (other.hasVehiclePickupStraightLineDistanceMeters()) {
        mergeVehiclePickupStraightLineDistanceMeters(
            other.getVehiclePickupStraightLineDistanceMeters());
      }
      if (other.hasVehicleDropoffEta()) {
        mergeVehicleDropoffEta(other.getVehicleDropoffEta());
      }
      if (other.hasVehiclePickupToDropoffDistanceMeters()) {
        mergeVehiclePickupToDropoffDistanceMeters(other.getVehiclePickupToDropoffDistanceMeters());
      }
      if (other.tripType_ != 0) {
        setTripTypeValue(other.getTripTypeValue());
      }
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (!other.vehicleTripsWaypoints_.isEmpty()) {
          if (vehicleTripsWaypoints_.isEmpty()) {
            vehicleTripsWaypoints_ = other.vehicleTripsWaypoints_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureVehicleTripsWaypointsIsMutable();
            vehicleTripsWaypoints_.addAll(other.vehicleTripsWaypoints_);
          }
          onChanged();
        }
      } else {
        if (!other.vehicleTripsWaypoints_.isEmpty()) {
          if (vehicleTripsWaypointsBuilder_.isEmpty()) {
            vehicleTripsWaypointsBuilder_.dispose();
            vehicleTripsWaypointsBuilder_ = null;
            vehicleTripsWaypoints_ = other.vehicleTripsWaypoints_;
            bitField0_ = (bitField0_ & ~0x00000080);
            vehicleTripsWaypointsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getVehicleTripsWaypointsFieldBuilder()
                    : null;
          } else {
            vehicleTripsWaypointsBuilder_.addAllMessages(other.vehicleTripsWaypoints_);
          }
        }
      }
      if (other.vehicleMatchType_ != 0) {
        setVehicleMatchTypeValue(other.getVehicleMatchTypeValue());
      }
      if (other.requestedOrderedBy_ != 0) {
        setRequestedOrderedByValue(other.getRequestedOrderedByValue());
      }
      if (other.orderedBy_ != 0) {
        setOrderedByValue(other.getOrderedByValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getVehicleFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(
                    getVehiclePickupEtaFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(
                    getVehiclePickupDistanceMetersFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(
                    getVehicleDropoffEtaFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 34
            case 42:
              {
                input.readMessage(
                    getVehiclePickupToDropoffDistanceMetersFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 42
            case 48:
              {
                tripType_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 48
            case 58:
              {
                com.google.maps.fleetengine.v1.Waypoint m =
                    input.readMessage(
                        com.google.maps.fleetengine.v1.Waypoint.parser(), extensionRegistry);
                if (vehicleTripsWaypointsBuilder_ == null) {
                  ensureVehicleTripsWaypointsIsMutable();
                  vehicleTripsWaypoints_.add(m);
                } else {
                  vehicleTripsWaypointsBuilder_.addMessage(m);
                }
                break;
              } // case 58
            case 64:
              {
                vehicleMatchType_ = input.readEnum();
                bitField0_ |= 0x00000100;
                break;
              } // case 64
            case 72:
              {
                requestedOrderedBy_ = input.readEnum();
                bitField0_ |= 0x00000200;
                break;
              } // case 72
            case 80:
              {
                orderedBy_ = input.readEnum();
                bitField0_ |= 0x00000400;
                break;
              } // case 80
            case 90:
              {
                input.readMessage(
                    getVehiclePickupStraightLineDistanceMetersFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 90
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.maps.fleetengine.v1.Vehicle vehicle_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.v1.Vehicle,
            com.google.maps.fleetengine.v1.Vehicle.Builder,
            com.google.maps.fleetengine.v1.VehicleOrBuilder>
        vehicleBuilder_;
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the vehicle field is set.
     */
    public boolean hasVehicle() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The vehicle.
     */
    public com.google.maps.fleetengine.v1.Vehicle getVehicle() {
      if (vehicleBuilder_ == null) {
        return vehicle_ == null
            ? com.google.maps.fleetengine.v1.Vehicle.getDefaultInstance()
            : vehicle_;
      } else {
        return vehicleBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setVehicle(com.google.maps.fleetengine.v1.Vehicle value) {
      if (vehicleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehicle_ = value;
      } else {
        vehicleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setVehicle(com.google.maps.fleetengine.v1.Vehicle.Builder builderForValue) {
      if (vehicleBuilder_ == null) {
        vehicle_ = builderForValue.build();
      } else {
        vehicleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeVehicle(com.google.maps.fleetengine.v1.Vehicle value) {
      if (vehicleBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && vehicle_ != null
            && vehicle_ != com.google.maps.fleetengine.v1.Vehicle.getDefaultInstance()) {
          getVehicleBuilder().mergeFrom(value);
        } else {
          vehicle_ = value;
        }
      } else {
        vehicleBuilder_.mergeFrom(value);
      }
      if (vehicle_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearVehicle() {
      bitField0_ = (bitField0_ & ~0x00000001);
      vehicle_ = null;
      if (vehicleBuilder_ != null) {
        vehicleBuilder_.dispose();
        vehicleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.maps.fleetengine.v1.Vehicle.Builder getVehicleBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getVehicleFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.maps.fleetengine.v1.VehicleOrBuilder getVehicleOrBuilder() {
      if (vehicleBuilder_ != null) {
        return vehicleBuilder_.getMessageOrBuilder();
      } else {
        return vehicle_ == null
            ? com.google.maps.fleetengine.v1.Vehicle.getDefaultInstance()
            : vehicle_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.v1.Vehicle,
            com.google.maps.fleetengine.v1.Vehicle.Builder,
            com.google.maps.fleetengine.v1.VehicleOrBuilder>
        getVehicleFieldBuilder() {
      if (vehicleBuilder_ == null) {
        vehicleBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.fleetengine.v1.Vehicle,
                com.google.maps.fleetengine.v1.Vehicle.Builder,
                com.google.maps.fleetengine.v1.VehicleOrBuilder>(
                getVehicle(), getParentForChildren(), isClean());
        vehicle_ = null;
      }
      return vehicleBuilder_;
    }

    private com.google.protobuf.Timestamp vehiclePickupEta_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        vehiclePickupEtaBuilder_;
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     *
     * @return Whether the vehiclePickupEta field is set.
     */
    public boolean hasVehiclePickupEta() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     *
     * @return The vehiclePickupEta.
     */
    public com.google.protobuf.Timestamp getVehiclePickupEta() {
      if (vehiclePickupEtaBuilder_ == null) {
        return vehiclePickupEta_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : vehiclePickupEta_;
      } else {
        return vehiclePickupEtaBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder setVehiclePickupEta(com.google.protobuf.Timestamp value) {
      if (vehiclePickupEtaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupEta_ = value;
      } else {
        vehiclePickupEtaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder setVehiclePickupEta(com.google.protobuf.Timestamp.Builder builderForValue) {
      if (vehiclePickupEtaBuilder_ == null) {
        vehiclePickupEta_ = builderForValue.build();
      } else {
        vehiclePickupEtaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder mergeVehiclePickupEta(com.google.protobuf.Timestamp value) {
      if (vehiclePickupEtaBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && vehiclePickupEta_ != null
            && vehiclePickupEta_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getVehiclePickupEtaBuilder().mergeFrom(value);
        } else {
          vehiclePickupEta_ = value;
        }
      } else {
        vehiclePickupEtaBuilder_.mergeFrom(value);
      }
      if (vehiclePickupEta_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder clearVehiclePickupEta() {
      bitField0_ = (bitField0_ & ~0x00000002);
      vehiclePickupEta_ = null;
      if (vehiclePickupEtaBuilder_ != null) {
        vehiclePickupEtaBuilder_.dispose();
        vehiclePickupEtaBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public com.google.protobuf.Timestamp.Builder getVehiclePickupEtaBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getVehiclePickupEtaFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getVehiclePickupEtaOrBuilder() {
      if (vehiclePickupEtaBuilder_ != null) {
        return vehiclePickupEtaBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupEta_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : vehiclePickupEta_;
      }
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
     * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
     * required to complete the current active trip.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        getVehiclePickupEtaFieldBuilder() {
      if (vehiclePickupEtaBuilder_ == null) {
        vehiclePickupEtaBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp,
                com.google.protobuf.Timestamp.Builder,
                com.google.protobuf.TimestampOrBuilder>(
                getVehiclePickupEta(), getParentForChildren(), isClean());
        vehiclePickupEta_ = null;
      }
      return vehiclePickupEtaBuilder_;
    }

    private com.google.protobuf.Int32Value vehiclePickupDistanceMeters_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value,
            com.google.protobuf.Int32Value.Builder,
            com.google.protobuf.Int32ValueOrBuilder>
        vehiclePickupDistanceMetersBuilder_;
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     *
     * @return Whether the vehiclePickupDistanceMeters field is set.
     */
    public boolean hasVehiclePickupDistanceMeters() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     *
     * @return The vehiclePickupDistanceMeters.
     */
    public com.google.protobuf.Int32Value getVehiclePickupDistanceMeters() {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        return vehiclePickupDistanceMeters_ == null
            ? com.google.protobuf.Int32Value.getDefaultInstance()
            : vehiclePickupDistanceMeters_;
      } else {
        return vehiclePickupDistanceMetersBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder setVehiclePickupDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupDistanceMeters_ = value;
      } else {
        vehiclePickupDistanceMetersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder setVehiclePickupDistanceMeters(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        vehiclePickupDistanceMeters_ = builderForValue.build();
      } else {
        vehiclePickupDistanceMetersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder mergeVehiclePickupDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && vehiclePickupDistanceMeters_ != null
            && vehiclePickupDistanceMeters_
                != com.google.protobuf.Int32Value.getDefaultInstance()) {
          getVehiclePickupDistanceMetersBuilder().mergeFrom(value);
        } else {
          vehiclePickupDistanceMeters_ = value;
        }
      } else {
        vehiclePickupDistanceMetersBuilder_.mergeFrom(value);
      }
      if (vehiclePickupDistanceMeters_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder clearVehiclePickupDistanceMeters() {
      bitField0_ = (bitField0_ & ~0x00000004);
      vehiclePickupDistanceMeters_ = null;
      if (vehiclePickupDistanceMetersBuilder_ != null) {
        vehiclePickupDistanceMetersBuilder_.dispose();
        vehiclePickupDistanceMetersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public com.google.protobuf.Int32Value.Builder getVehiclePickupDistanceMetersBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getVehiclePickupDistanceMetersFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupDistanceMetersOrBuilder() {
      if (vehiclePickupDistanceMetersBuilder_ != null) {
        return vehiclePickupDistanceMetersBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupDistanceMeters_ == null
            ? com.google.protobuf.Int32Value.getDefaultInstance()
            : vehiclePickupDistanceMeters_;
      }
    }
    /**
     *
     *
     * <pre>
     * The distance from the Vehicle's current location to the pickup point
     * specified in the request, including any intermediate pickup or dropoff
     * points for existing trips. This distance comprises the calculated driving
     * (route) distance, plus the straight line distance between the navigation
     * end point and the requested pickup point. (The distance between the
     * navigation end point and the requested pickup point is typically small.) An
     * empty value indicates an error in calculating the distance.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value,
            com.google.protobuf.Int32Value.Builder,
            com.google.protobuf.Int32ValueOrBuilder>
        getVehiclePickupDistanceMetersFieldBuilder() {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        vehiclePickupDistanceMetersBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int32Value,
                com.google.protobuf.Int32Value.Builder,
                com.google.protobuf.Int32ValueOrBuilder>(
                getVehiclePickupDistanceMeters(), getParentForChildren(), isClean());
        vehiclePickupDistanceMeters_ = null;
      }
      return vehiclePickupDistanceMetersBuilder_;
    }

    private com.google.protobuf.Int32Value vehiclePickupStraightLineDistanceMeters_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value,
            com.google.protobuf.Int32Value.Builder,
            com.google.protobuf.Int32ValueOrBuilder>
        vehiclePickupStraightLineDistanceMetersBuilder_;
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the vehiclePickupStraightLineDistanceMeters field is set.
     */
    public boolean hasVehiclePickupStraightLineDistanceMeters() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The vehiclePickupStraightLineDistanceMeters.
     */
    public com.google.protobuf.Int32Value getVehiclePickupStraightLineDistanceMeters() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        return vehiclePickupStraightLineDistanceMeters_ == null
            ? com.google.protobuf.Int32Value.getDefaultInstance()
            : vehiclePickupStraightLineDistanceMeters_;
      } else {
        return vehiclePickupStraightLineDistanceMetersBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setVehiclePickupStraightLineDistanceMeters(
        com.google.protobuf.Int32Value value) {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupStraightLineDistanceMeters_ = value;
      } else {
        vehiclePickupStraightLineDistanceMetersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setVehiclePickupStraightLineDistanceMeters(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        vehiclePickupStraightLineDistanceMeters_ = builderForValue.build();
      } else {
        vehiclePickupStraightLineDistanceMetersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeVehiclePickupStraightLineDistanceMeters(
        com.google.protobuf.Int32Value value) {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && vehiclePickupStraightLineDistanceMeters_ != null
            && vehiclePickupStraightLineDistanceMeters_
                != com.google.protobuf.Int32Value.getDefaultInstance()) {
          getVehiclePickupStraightLineDistanceMetersBuilder().mergeFrom(value);
        } else {
          vehiclePickupStraightLineDistanceMeters_ = value;
        }
      } else {
        vehiclePickupStraightLineDistanceMetersBuilder_.mergeFrom(value);
      }
      if (vehiclePickupStraightLineDistanceMeters_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearVehiclePickupStraightLineDistanceMeters() {
      bitField0_ = (bitField0_ & ~0x00000008);
      vehiclePickupStraightLineDistanceMeters_ = null;
      if (vehiclePickupStraightLineDistanceMetersBuilder_ != null) {
        vehiclePickupStraightLineDistanceMetersBuilder_.dispose();
        vehiclePickupStraightLineDistanceMetersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.protobuf.Int32Value.Builder
        getVehiclePickupStraightLineDistanceMetersBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getVehiclePickupStraightLineDistanceMetersFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.protobuf.Int32ValueOrBuilder
        getVehiclePickupStraightLineDistanceMetersOrBuilder() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ != null) {
        return vehiclePickupStraightLineDistanceMetersBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupStraightLineDistanceMeters_ == null
            ? com.google.protobuf.Int32Value.getDefaultInstance()
            : vehiclePickupStraightLineDistanceMeters_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request.
     * </pre>
     *
     * <code>
     * .google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value,
            com.google.protobuf.Int32Value.Builder,
            com.google.protobuf.Int32ValueOrBuilder>
        getVehiclePickupStraightLineDistanceMetersFieldBuilder() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        vehiclePickupStraightLineDistanceMetersBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int32Value,
                com.google.protobuf.Int32Value.Builder,
                com.google.protobuf.Int32ValueOrBuilder>(
                getVehiclePickupStraightLineDistanceMeters(), getParentForChildren(), isClean());
        vehiclePickupStraightLineDistanceMeters_ = null;
      }
      return vehiclePickupStraightLineDistanceMetersBuilder_;
    }

    private com.google.protobuf.Timestamp vehicleDropoffEta_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        vehicleDropoffEtaBuilder_;
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     *
     * @return Whether the vehicleDropoffEta field is set.
     */
    public boolean hasVehicleDropoffEta() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     *
     * @return The vehicleDropoffEta.
     */
    public com.google.protobuf.Timestamp getVehicleDropoffEta() {
      if (vehicleDropoffEtaBuilder_ == null) {
        return vehicleDropoffEta_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : vehicleDropoffEta_;
      } else {
        return vehicleDropoffEtaBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder setVehicleDropoffEta(com.google.protobuf.Timestamp value) {
      if (vehicleDropoffEtaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehicleDropoffEta_ = value;
      } else {
        vehicleDropoffEtaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder setVehicleDropoffEta(com.google.protobuf.Timestamp.Builder builderForValue) {
      if (vehicleDropoffEtaBuilder_ == null) {
        vehicleDropoffEta_ = builderForValue.build();
      } else {
        vehicleDropoffEtaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder mergeVehicleDropoffEta(com.google.protobuf.Timestamp value) {
      if (vehicleDropoffEtaBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && vehicleDropoffEta_ != null
            && vehicleDropoffEta_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getVehicleDropoffEtaBuilder().mergeFrom(value);
        } else {
          vehicleDropoffEta_ = value;
        }
      } else {
        vehicleDropoffEtaBuilder_.mergeFrom(value);
      }
      if (vehicleDropoffEta_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder clearVehicleDropoffEta() {
      bitField0_ = (bitField0_ & ~0x00000010);
      vehicleDropoffEta_ = null;
      if (vehicleDropoffEtaBuilder_ != null) {
        vehicleDropoffEtaBuilder_.dispose();
        vehicleDropoffEtaBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public com.google.protobuf.Timestamp.Builder getVehicleDropoffEtaBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getVehicleDropoffEtaFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getVehicleDropoffEtaOrBuilder() {
      if (vehicleDropoffEtaBuilder_ != null) {
        return vehicleDropoffEtaBuilder_.getMessageOrBuilder();
      } else {
        return vehicleDropoffEta_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : vehicleDropoffEta_;
      }
    }
    /**
     *
     *
     * <pre>
     * The complete vehicle's driving ETA to the drop off point specified in the
     * request. The ETA includes stopping at any waypoints before the
     * `dropoff_point` specified in the request. The value will only be populated
     * when a drop off point is specified in the request. An empty value indicates
     * an error calculating the ETA.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        getVehicleDropoffEtaFieldBuilder() {
      if (vehicleDropoffEtaBuilder_ == null) {
        vehicleDropoffEtaBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp,
                com.google.protobuf.Timestamp.Builder,
                com.google.protobuf.TimestampOrBuilder>(
                getVehicleDropoffEta(), getParentForChildren(), isClean());
        vehicleDropoffEta_ = null;
      }
      return vehicleDropoffEtaBuilder_;
    }

    private com.google.protobuf.Int32Value vehiclePickupToDropoffDistanceMeters_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value,
            com.google.protobuf.Int32Value.Builder,
            com.google.protobuf.Int32ValueOrBuilder>
        vehiclePickupToDropoffDistanceMetersBuilder_;
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     *
     * @return Whether the vehiclePickupToDropoffDistanceMeters field is set.
     */
    public boolean hasVehiclePickupToDropoffDistanceMeters() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     *
     * @return The vehiclePickupToDropoffDistanceMeters.
     */
    public com.google.protobuf.Int32Value getVehiclePickupToDropoffDistanceMeters() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        return vehiclePickupToDropoffDistanceMeters_ == null
            ? com.google.protobuf.Int32Value.getDefaultInstance()
            : vehiclePickupToDropoffDistanceMeters_;
      } else {
        return vehiclePickupToDropoffDistanceMetersBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder setVehiclePickupToDropoffDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupToDropoffDistanceMeters_ = value;
      } else {
        vehiclePickupToDropoffDistanceMetersBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder setVehiclePickupToDropoffDistanceMeters(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        vehiclePickupToDropoffDistanceMeters_ = builderForValue.build();
      } else {
        vehiclePickupToDropoffDistanceMetersBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder mergeVehiclePickupToDropoffDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)
            && vehiclePickupToDropoffDistanceMeters_ != null
            && vehiclePickupToDropoffDistanceMeters_
                != com.google.protobuf.Int32Value.getDefaultInstance()) {
          getVehiclePickupToDropoffDistanceMetersBuilder().mergeFrom(value);
        } else {
          vehiclePickupToDropoffDistanceMeters_ = value;
        }
      } else {
        vehiclePickupToDropoffDistanceMetersBuilder_.mergeFrom(value);
      }
      if (vehiclePickupToDropoffDistanceMeters_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder clearVehiclePickupToDropoffDistanceMeters() {
      bitField0_ = (bitField0_ & ~0x00000020);
      vehiclePickupToDropoffDistanceMeters_ = null;
      if (vehiclePickupToDropoffDistanceMetersBuilder_ != null) {
        vehiclePickupToDropoffDistanceMetersBuilder_.dispose();
        vehiclePickupToDropoffDistanceMetersBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public com.google.protobuf.Int32Value.Builder getVehiclePickupToDropoffDistanceMetersBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getVehiclePickupToDropoffDistanceMetersFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder
        getVehiclePickupToDropoffDistanceMetersOrBuilder() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ != null) {
        return vehiclePickupToDropoffDistanceMetersBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupToDropoffDistanceMeters_ == null
            ? com.google.protobuf.Int32Value.getDefaultInstance()
            : vehiclePickupToDropoffDistanceMeters_;
      }
    }
    /**
     *
     *
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * `dropoff_point` is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * drop off point specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value,
            com.google.protobuf.Int32Value.Builder,
            com.google.protobuf.Int32ValueOrBuilder>
        getVehiclePickupToDropoffDistanceMetersFieldBuilder() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        vehiclePickupToDropoffDistanceMetersBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int32Value,
                com.google.protobuf.Int32Value.Builder,
                com.google.protobuf.Int32ValueOrBuilder>(
                getVehiclePickupToDropoffDistanceMeters(), getParentForChildren(), isClean());
        vehiclePickupToDropoffDistanceMeters_ = null;
      }
      return vehiclePickupToDropoffDistanceMetersBuilder_;
    }

    private int tripType_ = 0;
    /**
     *
     *
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for tripType.
     */
    @java.lang.Override
    public int getTripTypeValue() {
      return tripType_;
    }
    /**
     *
     *
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for tripType to set.
     * @return This builder for chaining.
     */
    public Builder setTripTypeValue(int value) {
      tripType_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The tripType.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.v1.TripType getTripType() {
      com.google.maps.fleetengine.v1.TripType result =
          com.google.maps.fleetengine.v1.TripType.forNumber(tripType_);
      return result == null ? com.google.maps.fleetengine.v1.TripType.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The tripType to set.
     * @return This builder for chaining.
     */
    public Builder setTripType(com.google.maps.fleetengine.v1.TripType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      tripType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTripType() {
      bitField0_ = (bitField0_ & ~0x00000040);
      tripType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.maps.fleetengine.v1.Waypoint> vehicleTripsWaypoints_ =
        java.util.Collections.emptyList();

    private void ensureVehicleTripsWaypointsIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        vehicleTripsWaypoints_ =
            new java.util.ArrayList<com.google.maps.fleetengine.v1.Waypoint>(
                vehicleTripsWaypoints_);
        bitField0_ |= 0x00000080;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.fleetengine.v1.Waypoint,
            com.google.maps.fleetengine.v1.Waypoint.Builder,
            com.google.maps.fleetengine.v1.WaypointOrBuilder>
        vehicleTripsWaypointsBuilder_;

    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public java.util.List<com.google.maps.fleetengine.v1.Waypoint> getVehicleTripsWaypointsList() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
      } else {
        return vehicleTripsWaypointsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public int getVehicleTripsWaypointsCount() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return vehicleTripsWaypoints_.size();
      } else {
        return vehicleTripsWaypointsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public com.google.maps.fleetengine.v1.Waypoint getVehicleTripsWaypoints(int index) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return vehicleTripsWaypoints_.get(index);
      } else {
        return vehicleTripsWaypointsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder setVehicleTripsWaypoints(
        int index, com.google.maps.fleetengine.v1.Waypoint value) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.set(index, value);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder setVehicleTripsWaypoints(
        int index, com.google.maps.fleetengine.v1.Waypoint.Builder builderForValue) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(com.google.maps.fleetengine.v1.Waypoint value) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(value);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(
        int index, com.google.maps.fleetengine.v1.Waypoint value) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(index, value);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(
        com.google.maps.fleetengine.v1.Waypoint.Builder builderForValue) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(builderForValue.build());
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(
        int index, com.google.maps.fleetengine.v1.Waypoint.Builder builderForValue) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addAllVehicleTripsWaypoints(
        java.lang.Iterable<? extends com.google.maps.fleetengine.v1.Waypoint> values) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, vehicleTripsWaypoints_);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder clearVehicleTripsWaypoints() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        vehicleTripsWaypoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder removeVehicleTripsWaypoints(int index) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.remove(index);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public com.google.maps.fleetengine.v1.Waypoint.Builder getVehicleTripsWaypointsBuilder(
        int index) {
      return getVehicleTripsWaypointsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public com.google.maps.fleetengine.v1.WaypointOrBuilder getVehicleTripsWaypointsOrBuilder(
        int index) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return vehicleTripsWaypoints_.get(index);
      } else {
        return vehicleTripsWaypointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public java.util.List<? extends com.google.maps.fleetengine.v1.WaypointOrBuilder>
        getVehicleTripsWaypointsOrBuilderList() {
      if (vehicleTripsWaypointsBuilder_ != null) {
        return vehicleTripsWaypointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
      }
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public com.google.maps.fleetengine.v1.Waypoint.Builder addVehicleTripsWaypointsBuilder() {
      return getVehicleTripsWaypointsFieldBuilder()
          .addBuilder(com.google.maps.fleetengine.v1.Waypoint.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public com.google.maps.fleetengine.v1.Waypoint.Builder addVehicleTripsWaypointsBuilder(
        int index) {
      return getVehicleTripsWaypointsFieldBuilder()
          .addBuilder(index, com.google.maps.fleetengine.v1.Waypoint.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * includes vehicle location, the pickup points of active
     * trips for the vehicle, and the pickup points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public java.util.List<com.google.maps.fleetengine.v1.Waypoint.Builder>
        getVehicleTripsWaypointsBuilderList() {
      return getVehicleTripsWaypointsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.fleetengine.v1.Waypoint,
            com.google.maps.fleetengine.v1.Waypoint.Builder,
            com.google.maps.fleetengine.v1.WaypointOrBuilder>
        getVehicleTripsWaypointsFieldBuilder() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        vehicleTripsWaypointsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.fleetengine.v1.Waypoint,
                com.google.maps.fleetengine.v1.Waypoint.Builder,
                com.google.maps.fleetengine.v1.WaypointOrBuilder>(
                vehicleTripsWaypoints_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        vehicleTripsWaypoints_ = null;
      }
      return vehicleTripsWaypointsBuilder_;
    }

    private int vehicleMatchType_ = 0;
    /**
     *
     *
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     *
     * @return The enum numeric value on the wire for vehicleMatchType.
     */
    @java.lang.Override
    public int getVehicleMatchTypeValue() {
      return vehicleMatchType_;
    }
    /**
     *
     *
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     *
     * @param value The enum numeric value on the wire for vehicleMatchType to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleMatchTypeValue(int value) {
      vehicleMatchType_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     *
     * @return The vehicleMatchType.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType getVehicleMatchType() {
      com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType result =
          com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType.forNumber(vehicleMatchType_);
      return result == null
          ? com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     *
     * @param value The vehicleMatchType to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleMatchType(
        com.google.maps.fleetengine.v1.VehicleMatch.VehicleMatchType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      vehicleMatchType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVehicleMatchType() {
      bitField0_ = (bitField0_ & ~0x00000100);
      vehicleMatchType_ = 0;
      onChanged();
      return this;
    }

    private int requestedOrderedBy_ = 0;
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
     * </code>
     *
     * @return The enum numeric value on the wire for requestedOrderedBy.
     */
    @java.lang.Override
    public int getRequestedOrderedByValue() {
      return requestedOrderedBy_;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
     * </code>
     *
     * @param value The enum numeric value on the wire for requestedOrderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedOrderedByValue(int value) {
      requestedOrderedBy_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
     * </code>
     *
     * @return The requestedOrderedBy.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder
        getRequestedOrderedBy() {
      com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder result =
          com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.forNumber(
              requestedOrderedBy_);
      return result == null
          ? com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
     * </code>
     *
     * @param value The requestedOrderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedOrderedBy(
        com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      requestedOrderedBy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRequestedOrderedBy() {
      bitField0_ = (bitField0_ & ~0x00000200);
      requestedOrderedBy_ = 0;
      onChanged();
      return this;
    }

    private int orderedBy_ = 0;
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `requested_ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     *
     * @return The enum numeric value on the wire for orderedBy.
     */
    @java.lang.Override
    public int getOrderedByValue() {
      return orderedBy_;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `requested_ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     *
     * @param value The enum numeric value on the wire for orderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setOrderedByValue(int value) {
      orderedBy_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `requested_ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     *
     * @return The orderedBy.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder getOrderedBy() {
      com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder result =
          com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.forNumber(
              orderedBy_);
      return result == null
          ? com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `requested_ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     *
     * @param value The orderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setOrderedBy(
        com.google.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000400;
      orderedBy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The order requested for sorting vehicle matches. Equivalent to
     * `requested_ordered_by`.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOrderedBy() {
      bitField0_ = (bitField0_ & ~0x00000400);
      orderedBy_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:maps.fleetengine.v1.VehicleMatch)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.v1.VehicleMatch)
  private static final com.google.maps.fleetengine.v1.VehicleMatch DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.fleetengine.v1.VehicleMatch();
  }

  public static com.google.maps.fleetengine.v1.VehicleMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VehicleMatch> PARSER =
      new com.google.protobuf.AbstractParser<VehicleMatch>() {
        @java.lang.Override
        public VehicleMatch parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<VehicleMatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VehicleMatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.fleetengine.v1.VehicleMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
