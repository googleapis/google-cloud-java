/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicles.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.fleetengine.v1;

/**
 *
 *
 * <pre>
 * Describes how clients should color one portion of the polyline along the
 * route.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.v1.VisualTrafficReportPolylineRendering}
 */
public final class VisualTrafficReportPolylineRendering
    extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.v1.VisualTrafficReportPolylineRendering)
    VisualTrafficReportPolylineRenderingOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use VisualTrafficReportPolylineRendering.newBuilder() to construct.
  private VisualTrafficReportPolylineRendering(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private VisualTrafficReportPolylineRendering() {
    roadStretch_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new VisualTrafficReportPolylineRendering();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.fleetengine.v1.Vehicles
        .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.fleetengine.v1.Vehicles
        .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.class,
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.Builder.class);
  }

  public interface RoadStretchOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The style to apply.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for style.
     */
    int getStyleValue();
    /**
     *
     *
     * <pre>
     * Required. The style to apply.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The style.
     */
    com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
        getStyle();

    /**
     *
     *
     * <pre>
     * Required. The style should be applied between `[offset_meters,
     * offset_meters + length_meters)`.
     * </pre>
     *
     * <code>int32 offset_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The offsetMeters.
     */
    int getOffsetMeters();

    /**
     *
     *
     * <pre>
     * Required. The length of the path where to apply the style.
     * </pre>
     *
     * <code>int32 length_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The lengthMeters.
     */
    int getLengthMeters();
  }
  /**
   *
   *
   * <pre>
   * One road stretch that should be rendered.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch}
   */
  public static final class RoadStretch extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
      RoadStretchOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use RoadStretch.newBuilder() to construct.
    private RoadStretch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private RoadStretch() {
      style_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new RoadStretch();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.fleetengine.v1.Vehicles
          .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_RoadStretch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.fleetengine.v1.Vehicles
          .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_RoadStretch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.class,
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                  .Builder.class);
    }

    /**
     *
     *
     * <pre>
     * The traffic style, indicating traffic speed.
     * </pre>
     *
     * Protobuf enum {@code
     * maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style}
     */
    public enum Style implements com.google.protobuf.ProtocolMessageEnum {
      /**
       *
       *
       * <pre>
       * No style selected.
       * </pre>
       *
       * <code>STYLE_UNSPECIFIED = 0;</code>
       */
      STYLE_UNSPECIFIED(0),
      /**
       *
       *
       * <pre>
       * Traffic is slowing down.
       * </pre>
       *
       * <code>SLOWER_TRAFFIC = 1;</code>
       */
      SLOWER_TRAFFIC(1),
      /**
       *
       *
       * <pre>
       * There is a traffic jam.
       * </pre>
       *
       * <code>TRAFFIC_JAM = 2;</code>
       */
      TRAFFIC_JAM(2),
      UNRECOGNIZED(-1),
      ;

      /**
       *
       *
       * <pre>
       * No style selected.
       * </pre>
       *
       * <code>STYLE_UNSPECIFIED = 0;</code>
       */
      public static final int STYLE_UNSPECIFIED_VALUE = 0;
      /**
       *
       *
       * <pre>
       * Traffic is slowing down.
       * </pre>
       *
       * <code>SLOWER_TRAFFIC = 1;</code>
       */
      public static final int SLOWER_TRAFFIC_VALUE = 1;
      /**
       *
       *
       * <pre>
       * There is a traffic jam.
       * </pre>
       *
       * <code>TRAFFIC_JAM = 2;</code>
       */
      public static final int TRAFFIC_JAM_VALUE = 2;

      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Style valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Style forNumber(int value) {
        switch (value) {
          case 0:
            return STYLE_UNSPECIFIED;
          case 1:
            return SLOWER_TRAFFIC;
          case 2:
            return TRAFFIC_JAM;
          default:
            return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Style> internalGetValueMap() {
        return internalValueMap;
      }

      private static final com.google.protobuf.Internal.EnumLiteMap<Style> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Style>() {
            public Style findValueByNumber(int number) {
              return Style.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }

      public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
      }

      public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
            .getDescriptor()
            .getEnumTypes()
            .get(0);
      }

      private static final Style[] VALUES = values();

      public static Style valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Style(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style)
    }

    public static final int STYLE_FIELD_NUMBER = 1;
    private int style_ = 0;
    /**
     *
     *
     * <pre>
     * Required. The style to apply.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for style.
     */
    @java.lang.Override
    public int getStyleValue() {
      return style_;
    }
    /**
     *
     *
     * <pre>
     * Required. The style to apply.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The style.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
        getStyle() {
      com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style result =
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
              .forNumber(style_);
      return result == null
          ? com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
              .UNRECOGNIZED
          : result;
    }

    public static final int OFFSET_METERS_FIELD_NUMBER = 2;
    private int offsetMeters_ = 0;
    /**
     *
     *
     * <pre>
     * Required. The style should be applied between `[offset_meters,
     * offset_meters + length_meters)`.
     * </pre>
     *
     * <code>int32 offset_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The offsetMeters.
     */
    @java.lang.Override
    public int getOffsetMeters() {
      return offsetMeters_;
    }

    public static final int LENGTH_METERS_FIELD_NUMBER = 3;
    private int lengthMeters_ = 0;
    /**
     *
     *
     * <pre>
     * Required. The length of the path where to apply the style.
     * </pre>
     *
     * <code>int32 length_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The lengthMeters.
     */
    @java.lang.Override
    public int getLengthMeters() {
      return lengthMeters_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (style_
          != com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
              .STYLE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(1, style_);
      }
      if (offsetMeters_ != 0) {
        output.writeInt32(2, offsetMeters_);
      }
      if (lengthMeters_ != 0) {
        output.writeInt32(3, lengthMeters_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (style_
          != com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
              .STYLE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, style_);
      }
      if (offsetMeters_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, offsetMeters_);
      }
      if (lengthMeters_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, lengthMeters_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)) {
        return super.equals(obj);
      }
      com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch other =
          (com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch) obj;

      if (style_ != other.style_) return false;
      if (getOffsetMeters() != other.getOffsetMeters()) return false;
      if (getLengthMeters() != other.getLengthMeters()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STYLE_FIELD_NUMBER;
      hash = (53 * hash) + style_;
      hash = (37 * hash) + OFFSET_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getOffsetMeters();
      hash = (37 * hash) + LENGTH_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getLengthMeters();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * One road stretch that should be rendered.
     * </pre>
     *
     * Protobuf type {@code maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.fleetengine.v1.Vehicles
            .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_RoadStretch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.fleetengine.v1.Vehicles
            .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_RoadStretch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                    .class,
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                    .Builder.class);
      }

      // Construct using
      // com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        style_ = 0;
        offsetMeters_ = 0;
        lengthMeters_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.maps.fleetengine.v1.Vehicles
            .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_RoadStretch_descriptor;
      }

      @java.lang.Override
      public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
          getDefaultInstanceForType() {
        return com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
          build() {
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
          buildPartial() {
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch result =
            new com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch(
                this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.style_ = style_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.offsetMeters_ = offsetMeters_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.lengthMeters_ = lengthMeters_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch) {
          return mergeFrom(
              (com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch other) {
        if (other
            == com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                .getDefaultInstance()) return this;
        if (other.style_ != 0) {
          setStyleValue(other.getStyleValue());
        }
        if (other.getOffsetMeters() != 0) {
          setOffsetMeters(other.getOffsetMeters());
        }
        if (other.getLengthMeters() != 0) {
          setLengthMeters(other.getLengthMeters());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  style_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  offsetMeters_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              case 24:
                {
                  lengthMeters_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int style_ = 0;
      /**
       *
       *
       * <pre>
       * Required. The style to apply.
       * </pre>
       *
       * <code>
       * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The enum numeric value on the wire for style.
       */
      @java.lang.Override
      public int getStyleValue() {
        return style_;
      }
      /**
       *
       *
       * <pre>
       * Required. The style to apply.
       * </pre>
       *
       * <code>
       * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The enum numeric value on the wire for style to set.
       * @return This builder for chaining.
       */
      public Builder setStyleValue(int value) {
        style_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The style to apply.
       * </pre>
       *
       * <code>
       * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The style.
       */
      @java.lang.Override
      public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
          getStyle() {
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
            result =
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                    .Style.forNumber(style_);
        return result == null
            ? com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
                .UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Required. The style to apply.
       * </pre>
       *
       * <code>
       * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The style to set.
       * @return This builder for chaining.
       */
      public Builder setStyle(
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style
              value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        style_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The style to apply.
       * </pre>
       *
       * <code>
       * .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Style style = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearStyle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        style_ = 0;
        onChanged();
        return this;
      }

      private int offsetMeters_;
      /**
       *
       *
       * <pre>
       * Required. The style should be applied between `[offset_meters,
       * offset_meters + length_meters)`.
       * </pre>
       *
       * <code>int32 offset_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The offsetMeters.
       */
      @java.lang.Override
      public int getOffsetMeters() {
        return offsetMeters_;
      }
      /**
       *
       *
       * <pre>
       * Required. The style should be applied between `[offset_meters,
       * offset_meters + length_meters)`.
       * </pre>
       *
       * <code>int32 offset_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The offsetMeters to set.
       * @return This builder for chaining.
       */
      public Builder setOffsetMeters(int value) {

        offsetMeters_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The style should be applied between `[offset_meters,
       * offset_meters + length_meters)`.
       * </pre>
       *
       * <code>int32 offset_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearOffsetMeters() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offsetMeters_ = 0;
        onChanged();
        return this;
      }

      private int lengthMeters_;
      /**
       *
       *
       * <pre>
       * Required. The length of the path where to apply the style.
       * </pre>
       *
       * <code>int32 length_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The lengthMeters.
       */
      @java.lang.Override
      public int getLengthMeters() {
        return lengthMeters_;
      }
      /**
       *
       *
       * <pre>
       * Required. The length of the path where to apply the style.
       * </pre>
       *
       * <code>int32 length_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The lengthMeters to set.
       * @return This builder for chaining.
       */
      public Builder setLengthMeters(int value) {

        lengthMeters_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The length of the path where to apply the style.
       * </pre>
       *
       * <code>int32 length_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLengthMeters() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lengthMeters_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
    }

    // @@protoc_insertion_point(class_scope:maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch)
    private static final com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
            .RoadStretch
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch();
    }

    public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoadStretch> PARSER =
        new com.google.protobuf.AbstractParser<RoadStretch>() {
          @java.lang.Override
          public RoadStretch parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<RoadStretch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoadStretch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int ROAD_STRETCH_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch>
      roadStretch_;
  /**
   *
   *
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline.
   * Stretches are guaranteed to not overlap, and do not necessarily span the
   * full route.
   *
   * In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch>
      getRoadStretchList() {
    return roadStretch_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline.
   * Stretches are guaranteed to not overlap, and do not necessarily span the
   * full route.
   *
   * In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                  .RoadStretchOrBuilder>
      getRoadStretchOrBuilderList() {
    return roadStretch_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline.
   * Stretches are guaranteed to not overlap, and do not necessarily span the
   * full route.
   *
   * In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getRoadStretchCount() {
    return roadStretch_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline.
   * Stretches are guaranteed to not overlap, and do not necessarily span the
   * full route.
   *
   * In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
      getRoadStretch(int index) {
    return roadStretch_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. Road stretches that should be rendered along the polyline.
   * Stretches are guaranteed to not overlap, and do not necessarily span the
   * full route.
   *
   * In the absence of a road stretch to style, the client should apply the
   * default for the route.
   * </pre>
   *
   * <code>
   * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretchOrBuilder
      getRoadStretchOrBuilder(int index) {
    return roadStretch_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < roadStretch_.size(); i++) {
      output.writeMessage(1, roadStretch_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < roadStretch_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, roadStretch_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering)) {
      return super.equals(obj);
    }
    com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering other =
        (com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering) obj;

    if (!getRoadStretchList().equals(other.getRoadStretchList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRoadStretchCount() > 0) {
      hash = (37 * hash) + ROAD_STRETCH_FIELD_NUMBER;
      hash = (53 * hash) + getRoadStretchList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Describes how clients should color one portion of the polyline along the
   * route.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.v1.VisualTrafficReportPolylineRendering}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.v1.VisualTrafficReportPolylineRendering)
      com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRenderingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.fleetengine.v1.Vehicles
          .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.fleetengine.v1.Vehicles
          .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.class,
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.Builder.class);
    }

    // Construct using
    // com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (roadStretchBuilder_ == null) {
        roadStretch_ = java.util.Collections.emptyList();
      } else {
        roadStretch_ = null;
        roadStretchBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.fleetengine.v1.Vehicles
          .internal_static_maps_fleetengine_v1_VisualTrafficReportPolylineRendering_descriptor;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
        getDefaultInstanceForType() {
      return com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering build() {
      com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering buildPartial() {
      com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering result =
          new com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering result) {
      if (roadStretchBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          roadStretch_ = java.util.Collections.unmodifiableList(roadStretch_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.roadStretch_ = roadStretch_;
      } else {
        result.roadStretch_ = roadStretchBuilder_.build();
      }
    }

    private void buildPartial0(
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering) {
        return mergeFrom(
            (com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering other) {
      if (other
          == com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
              .getDefaultInstance()) return this;
      if (roadStretchBuilder_ == null) {
        if (!other.roadStretch_.isEmpty()) {
          if (roadStretch_.isEmpty()) {
            roadStretch_ = other.roadStretch_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRoadStretchIsMutable();
            roadStretch_.addAll(other.roadStretch_);
          }
          onChanged();
        }
      } else {
        if (!other.roadStretch_.isEmpty()) {
          if (roadStretchBuilder_.isEmpty()) {
            roadStretchBuilder_.dispose();
            roadStretchBuilder_ = null;
            roadStretch_ = other.roadStretch_;
            bitField0_ = (bitField0_ & ~0x00000001);
            roadStretchBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getRoadStretchFieldBuilder()
                    : null;
          } else {
            roadStretchBuilder_.addAllMessages(other.roadStretch_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch m =
                    input.readMessage(
                        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                            .RoadStretch.parser(),
                        extensionRegistry);
                if (roadStretchBuilder_ == null) {
                  ensureRoadStretchIsMutable();
                  roadStretch_.add(m);
                } else {
                  roadStretchBuilder_.addMessage(m);
                }
                break;
              } // case 10
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch>
        roadStretch_ = java.util.Collections.emptyList();

    private void ensureRoadStretchIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        roadStretch_ =
            new java.util.ArrayList<
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch>(
                roadStretch_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch,
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder,
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                .RoadStretchOrBuilder>
        roadStretchBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch>
        getRoadStretchList() {
      if (roadStretchBuilder_ == null) {
        return java.util.Collections.unmodifiableList(roadStretch_);
      } else {
        return roadStretchBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getRoadStretchCount() {
      if (roadStretchBuilder_ == null) {
        return roadStretch_.size();
      } else {
        return roadStretchBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
        getRoadStretch(int index) {
      if (roadStretchBuilder_ == null) {
        return roadStretch_.get(index);
      } else {
        return roadStretchBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setRoadStretch(
        int index,
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch value) {
      if (roadStretchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadStretchIsMutable();
        roadStretch_.set(index, value);
        onChanged();
      } else {
        roadStretchBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setRoadStretch(
        int index,
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder
            builderForValue) {
      if (roadStretchBuilder_ == null) {
        ensureRoadStretchIsMutable();
        roadStretch_.set(index, builderForValue.build());
        onChanged();
      } else {
        roadStretchBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addRoadStretch(
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch value) {
      if (roadStretchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadStretchIsMutable();
        roadStretch_.add(value);
        onChanged();
      } else {
        roadStretchBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addRoadStretch(
        int index,
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch value) {
      if (roadStretchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoadStretchIsMutable();
        roadStretch_.add(index, value);
        onChanged();
      } else {
        roadStretchBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addRoadStretch(
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder
            builderForValue) {
      if (roadStretchBuilder_ == null) {
        ensureRoadStretchIsMutable();
        roadStretch_.add(builderForValue.build());
        onChanged();
      } else {
        roadStretchBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addRoadStretch(
        int index,
        com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder
            builderForValue) {
      if (roadStretchBuilder_ == null) {
        ensureRoadStretchIsMutable();
        roadStretch_.add(index, builderForValue.build());
        onChanged();
      } else {
        roadStretchBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllRoadStretch(
        java.lang.Iterable<
                ? extends
                    com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch>
            values) {
      if (roadStretchBuilder_ == null) {
        ensureRoadStretchIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, roadStretch_);
        onChanged();
      } else {
        roadStretchBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearRoadStretch() {
      if (roadStretchBuilder_ == null) {
        roadStretch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        roadStretchBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeRoadStretch(int index) {
      if (roadStretchBuilder_ == null) {
        ensureRoadStretchIsMutable();
        roadStretch_.remove(index);
        onChanged();
      } else {
        roadStretchBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder
        getRoadStretchBuilder(int index) {
      return getRoadStretchFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretchOrBuilder
        getRoadStretchOrBuilder(int index) {
      if (roadStretchBuilder_ == null) {
        return roadStretch_.get(index);
      } else {
        return roadStretchBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            ? extends
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                    .RoadStretchOrBuilder>
        getRoadStretchOrBuilderList() {
      if (roadStretchBuilder_ != null) {
        return roadStretchBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(roadStretch_);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder
        addRoadStretchBuilder() {
      return getRoadStretchFieldBuilder()
          .addBuilder(
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder
        addRoadStretchBuilder(int index) {
      return getRoadStretchFieldBuilder()
          .addBuilder(
              index,
              com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. Road stretches that should be rendered along the polyline.
     * Stretches are guaranteed to not overlap, and do not necessarily span the
     * full route.
     *
     * In the absence of a road stretch to style, the client should apply the
     * default for the route.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch road_stretch = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder>
        getRoadStretchBuilderList() {
      return getRoadStretchFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch,
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch.Builder,
            com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                .RoadStretchOrBuilder>
        getRoadStretchFieldBuilder() {
      if (roadStretchBuilder_ == null) {
        roadStretchBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch,
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering.RoadStretch
                    .Builder,
                com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
                    .RoadStretchOrBuilder>(
                roadStretch_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        roadStretch_ = null;
      }
      return roadStretchBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:maps.fleetengine.v1.VisualTrafficReportPolylineRendering)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.v1.VisualTrafficReportPolylineRendering)
  private static final com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering();
  }

  public static com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VisualTrafficReportPolylineRendering> PARSER =
      new com.google.protobuf.AbstractParser<VisualTrafficReportPolylineRendering>() {
        @java.lang.Override
        public VisualTrafficReportPolylineRendering parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<VisualTrafficReportPolylineRendering> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VisualTrafficReportPolylineRendering> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.fleetengine.v1.VisualTrafficReportPolylineRendering
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
