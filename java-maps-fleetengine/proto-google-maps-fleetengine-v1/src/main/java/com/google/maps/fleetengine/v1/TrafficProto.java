/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/traffic.proto

// Protobuf Java Version: 3.25.8
package com.google.maps.fleetengine.v1;

public final class TrafficProto {
  private TrafficProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_maps_fleetengine_v1_SpeedReadingInterval_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maps_fleetengine_v1_SpeedReadingInterval_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_maps_fleetengine_v1_ConsumableTrafficPolyline_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_maps_fleetengine_v1_ConsumableTrafficPolyline_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n(google/maps/fleetengine/v1/traffic.pro"
          + "to\022\023maps.fleetengine.v1\"\343\001\n\024SpeedReading"
          + "Interval\022\"\n\032start_polyline_point_index\030\001"
          + " \001(\005\022 \n\030end_polyline_point_index\030\002 \001(\005\022>"
          + "\n\005speed\030\003 \001(\0162/.maps.fleetengine.v1.Spee"
          + "dReadingInterval.Speed\"E\n\005Speed\022\025\n\021SPEED"
          + "_UNSPECIFIED\020\000\022\n\n\006NORMAL\020\001\022\010\n\004SLOW\020\002\022\017\n\013"
          + "TRAFFIC_JAM\020\003\"\210\001\n\031ConsumableTrafficPolyl"
          + "ine\022I\n\026speed_reading_interval\030\001 \003(\0132).ma"
          + "ps.fleetengine.v1.SpeedReadingInterval\022 "
          + "\n\030encoded_path_to_waypoint\030\002 \001(\tB\330\001\n\036com"
          + ".google.maps.fleetengine.v1B\014TrafficProt"
          + "oP\001ZFcloud.google.com/go/maps/fleetengin"
          + "e/apiv1/fleetenginepb;fleetenginepb\242\002\003CF"
          + "E\252\002\032Google.Maps.FleetEngine.V1\312\002\032Google\\"
          + "Maps\\FleetEngine\\V1\352\002\035Google::Maps::Flee"
          + "tEngine::V1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] {});
    internal_static_maps_fleetengine_v1_SpeedReadingInterval_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_maps_fleetengine_v1_SpeedReadingInterval_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_maps_fleetengine_v1_SpeedReadingInterval_descriptor,
            new java.lang.String[] {
              "StartPolylinePointIndex", "EndPolylinePointIndex", "Speed",
            });
    internal_static_maps_fleetengine_v1_ConsumableTrafficPolyline_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_maps_fleetengine_v1_ConsumableTrafficPolyline_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_maps_fleetengine_v1_ConsumableTrafficPolyline_descriptor,
            new java.lang.String[] {
              "SpeedReadingInterval", "EncodedPathToWaypoint",
            });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
