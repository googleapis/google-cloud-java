/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/script/type/gmail/gmail_addon_manifest.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.script.type.gmail;

/**
 *
 *
 * <pre>
 * Properties customizing the appearance and execution of a Gmail add-on.
 * </pre>
 *
 * Protobuf type {@code google.apps.script.type.gmail.GmailAddOnManifest}
 */
public final class GmailAddOnManifest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.apps.script.type.gmail.GmailAddOnManifest)
    GmailAddOnManifestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GmailAddOnManifest.newBuilder() to construct.
  private GmailAddOnManifest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GmailAddOnManifest() {
    contextualTriggers_ = java.util.Collections.emptyList();
    universalActions_ = java.util.Collections.emptyList();
    authorizationCheckFunction_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GmailAddOnManifest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.apps.script.type.gmail.GmailAddOnManifestProto
        .internal_static_google_apps_script_type_gmail_GmailAddOnManifest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.apps.script.type.gmail.GmailAddOnManifestProto
        .internal_static_google_apps_script_type_gmail_GmailAddOnManifest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.apps.script.type.gmail.GmailAddOnManifest.class,
            com.google.apps.script.type.gmail.GmailAddOnManifest.Builder.class);
  }

  private int bitField0_;
  public static final int HOMEPAGE_TRIGGER_FIELD_NUMBER = 14;
  private com.google.apps.script.type.HomepageExtensionPoint homepageTrigger_;
  /**
   *
   *
   * <pre>
   * Defines an endpoint that will be executed in contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   * </pre>
   *
   * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
   *
   * @return Whether the homepageTrigger field is set.
   */
  @java.lang.Override
  public boolean hasHomepageTrigger() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Defines an endpoint that will be executed in contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   * </pre>
   *
   * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
   *
   * @return The homepageTrigger.
   */
  @java.lang.Override
  public com.google.apps.script.type.HomepageExtensionPoint getHomepageTrigger() {
    return homepageTrigger_ == null
        ? com.google.apps.script.type.HomepageExtensionPoint.getDefaultInstance()
        : homepageTrigger_;
  }
  /**
   *
   *
   * <pre>
   * Defines an endpoint that will be executed in contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   * </pre>
   *
   * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
   */
  @java.lang.Override
  public com.google.apps.script.type.HomepageExtensionPointOrBuilder getHomepageTriggerOrBuilder() {
    return homepageTrigger_ == null
        ? com.google.apps.script.type.HomepageExtensionPoint.getDefaultInstance()
        : homepageTrigger_;
  }

  public static final int CONTEXTUAL_TRIGGERS_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<com.google.apps.script.type.gmail.ContextualTrigger> contextualTriggers_;
  /**
   *
   *
   * <pre>
   * Defines the set of conditions that trigger the add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.apps.script.type.gmail.ContextualTrigger>
      getContextualTriggersList() {
    return contextualTriggers_;
  }
  /**
   *
   *
   * <pre>
   * Defines the set of conditions that trigger the add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.apps.script.type.gmail.ContextualTriggerOrBuilder>
      getContextualTriggersOrBuilderList() {
    return contextualTriggers_;
  }
  /**
   *
   *
   * <pre>
   * Defines the set of conditions that trigger the add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;</code>
   */
  @java.lang.Override
  public int getContextualTriggersCount() {
    return contextualTriggers_.size();
  }
  /**
   *
   *
   * <pre>
   * Defines the set of conditions that trigger the add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;</code>
   */
  @java.lang.Override
  public com.google.apps.script.type.gmail.ContextualTrigger getContextualTriggers(int index) {
    return contextualTriggers_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Defines the set of conditions that trigger the add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;</code>
   */
  @java.lang.Override
  public com.google.apps.script.type.gmail.ContextualTriggerOrBuilder
      getContextualTriggersOrBuilder(int index) {
    return contextualTriggers_.get(index);
  }

  public static final int UNIVERSAL_ACTIONS_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<com.google.apps.script.type.gmail.UniversalAction> universalActions_;
  /**
   *
   *
   * <pre>
   * Defines set of [universal
   * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
   * triggers universal actions from the add-on toolbar menu.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.apps.script.type.gmail.UniversalAction>
      getUniversalActionsList() {
    return universalActions_;
  }
  /**
   *
   *
   * <pre>
   * Defines set of [universal
   * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
   * triggers universal actions from the add-on toolbar menu.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.apps.script.type.gmail.UniversalActionOrBuilder>
      getUniversalActionsOrBuilderList() {
    return universalActions_;
  }
  /**
   *
   *
   * <pre>
   * Defines set of [universal
   * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
   * triggers universal actions from the add-on toolbar menu.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
   */
  @java.lang.Override
  public int getUniversalActionsCount() {
    return universalActions_.size();
  }
  /**
   *
   *
   * <pre>
   * Defines set of [universal
   * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
   * triggers universal actions from the add-on toolbar menu.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
   */
  @java.lang.Override
  public com.google.apps.script.type.gmail.UniversalAction getUniversalActions(int index) {
    return universalActions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Defines set of [universal
   * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
   * triggers universal actions from the add-on toolbar menu.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
   */
  @java.lang.Override
  public com.google.apps.script.type.gmail.UniversalActionOrBuilder getUniversalActionsOrBuilder(
      int index) {
    return universalActions_.get(index);
  }

  public static final int COMPOSE_TRIGGER_FIELD_NUMBER = 12;
  private com.google.apps.script.type.gmail.ComposeTrigger composeTrigger_;
  /**
   *
   *
   * <pre>
   * Defines the compose time trigger for a compose time add-on. This is the
   * trigger that causes an add-on to take action when the user is composing an
   * email.
   * All compose time addons are required to have the
   * gmail.addons.current.action.compose scope even though it might not edit the
   * draft.
   * </pre>
   *
   * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
   *
   * @return Whether the composeTrigger field is set.
   */
  @java.lang.Override
  public boolean hasComposeTrigger() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Defines the compose time trigger for a compose time add-on. This is the
   * trigger that causes an add-on to take action when the user is composing an
   * email.
   * All compose time addons are required to have the
   * gmail.addons.current.action.compose scope even though it might not edit the
   * draft.
   * </pre>
   *
   * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
   *
   * @return The composeTrigger.
   */
  @java.lang.Override
  public com.google.apps.script.type.gmail.ComposeTrigger getComposeTrigger() {
    return composeTrigger_ == null
        ? com.google.apps.script.type.gmail.ComposeTrigger.getDefaultInstance()
        : composeTrigger_;
  }
  /**
   *
   *
   * <pre>
   * Defines the compose time trigger for a compose time add-on. This is the
   * trigger that causes an add-on to take action when the user is composing an
   * email.
   * All compose time addons are required to have the
   * gmail.addons.current.action.compose scope even though it might not edit the
   * draft.
   * </pre>
   *
   * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
   */
  @java.lang.Override
  public com.google.apps.script.type.gmail.ComposeTriggerOrBuilder getComposeTriggerOrBuilder() {
    return composeTrigger_ == null
        ? com.google.apps.script.type.gmail.ComposeTrigger.getDefaultInstance()
        : composeTrigger_;
  }

  public static final int AUTHORIZATION_CHECK_FUNCTION_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private volatile java.lang.Object authorizationCheckFunction_ = "";
  /**
   *
   *
   * <pre>
   * The name of an endpoint that verifies that the add-on has
   * all the required third-party authorizations, by probing the third-party
   * APIs. If the probe fails, the function should throw an exception to
   * initiate the authorization flow. This function is called before each
   * invocation of the add-on, in order to ensure a smooth user experience.
   * </pre>
   *
   * <code>string authorization_check_function = 7;</code>
   *
   * @return The authorizationCheckFunction.
   */
  @java.lang.Override
  public java.lang.String getAuthorizationCheckFunction() {
    java.lang.Object ref = authorizationCheckFunction_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authorizationCheckFunction_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The name of an endpoint that verifies that the add-on has
   * all the required third-party authorizations, by probing the third-party
   * APIs. If the probe fails, the function should throw an exception to
   * initiate the authorization flow. This function is called before each
   * invocation of the add-on, in order to ensure a smooth user experience.
   * </pre>
   *
   * <code>string authorization_check_function = 7;</code>
   *
   * @return The bytes for authorizationCheckFunction.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAuthorizationCheckFunctionBytes() {
    java.lang.Object ref = authorizationCheckFunction_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      authorizationCheckFunction_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < contextualTriggers_.size(); i++) {
      output.writeMessage(3, contextualTriggers_.get(i));
    }
    for (int i = 0; i < universalActions_.size(); i++) {
      output.writeMessage(4, universalActions_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorizationCheckFunction_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, authorizationCheckFunction_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(12, getComposeTrigger());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(14, getHomepageTrigger());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < contextualTriggers_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(3, contextualTriggers_.get(i));
    }
    for (int i = 0; i < universalActions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, universalActions_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorizationCheckFunction_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(7, authorizationCheckFunction_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, getComposeTrigger());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, getHomepageTrigger());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.apps.script.type.gmail.GmailAddOnManifest)) {
      return super.equals(obj);
    }
    com.google.apps.script.type.gmail.GmailAddOnManifest other =
        (com.google.apps.script.type.gmail.GmailAddOnManifest) obj;

    if (hasHomepageTrigger() != other.hasHomepageTrigger()) return false;
    if (hasHomepageTrigger()) {
      if (!getHomepageTrigger().equals(other.getHomepageTrigger())) return false;
    }
    if (!getContextualTriggersList().equals(other.getContextualTriggersList())) return false;
    if (!getUniversalActionsList().equals(other.getUniversalActionsList())) return false;
    if (hasComposeTrigger() != other.hasComposeTrigger()) return false;
    if (hasComposeTrigger()) {
      if (!getComposeTrigger().equals(other.getComposeTrigger())) return false;
    }
    if (!getAuthorizationCheckFunction().equals(other.getAuthorizationCheckFunction()))
      return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHomepageTrigger()) {
      hash = (37 * hash) + HOMEPAGE_TRIGGER_FIELD_NUMBER;
      hash = (53 * hash) + getHomepageTrigger().hashCode();
    }
    if (getContextualTriggersCount() > 0) {
      hash = (37 * hash) + CONTEXTUAL_TRIGGERS_FIELD_NUMBER;
      hash = (53 * hash) + getContextualTriggersList().hashCode();
    }
    if (getUniversalActionsCount() > 0) {
      hash = (37 * hash) + UNIVERSAL_ACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getUniversalActionsList().hashCode();
    }
    if (hasComposeTrigger()) {
      hash = (37 * hash) + COMPOSE_TRIGGER_FIELD_NUMBER;
      hash = (53 * hash) + getComposeTrigger().hashCode();
    }
    hash = (37 * hash) + AUTHORIZATION_CHECK_FUNCTION_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorizationCheckFunction().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.apps.script.type.gmail.GmailAddOnManifest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Properties customizing the appearance and execution of a Gmail add-on.
   * </pre>
   *
   * Protobuf type {@code google.apps.script.type.gmail.GmailAddOnManifest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.apps.script.type.gmail.GmailAddOnManifest)
      com.google.apps.script.type.gmail.GmailAddOnManifestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.apps.script.type.gmail.GmailAddOnManifestProto
          .internal_static_google_apps_script_type_gmail_GmailAddOnManifest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.apps.script.type.gmail.GmailAddOnManifestProto
          .internal_static_google_apps_script_type_gmail_GmailAddOnManifest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.apps.script.type.gmail.GmailAddOnManifest.class,
              com.google.apps.script.type.gmail.GmailAddOnManifest.Builder.class);
    }

    // Construct using com.google.apps.script.type.gmail.GmailAddOnManifest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getHomepageTriggerFieldBuilder();
        getContextualTriggersFieldBuilder();
        getUniversalActionsFieldBuilder();
        getComposeTriggerFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      homepageTrigger_ = null;
      if (homepageTriggerBuilder_ != null) {
        homepageTriggerBuilder_.dispose();
        homepageTriggerBuilder_ = null;
      }
      if (contextualTriggersBuilder_ == null) {
        contextualTriggers_ = java.util.Collections.emptyList();
      } else {
        contextualTriggers_ = null;
        contextualTriggersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (universalActionsBuilder_ == null) {
        universalActions_ = java.util.Collections.emptyList();
      } else {
        universalActions_ = null;
        universalActionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      composeTrigger_ = null;
      if (composeTriggerBuilder_ != null) {
        composeTriggerBuilder_.dispose();
        composeTriggerBuilder_ = null;
      }
      authorizationCheckFunction_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.apps.script.type.gmail.GmailAddOnManifestProto
          .internal_static_google_apps_script_type_gmail_GmailAddOnManifest_descriptor;
    }

    @java.lang.Override
    public com.google.apps.script.type.gmail.GmailAddOnManifest getDefaultInstanceForType() {
      return com.google.apps.script.type.gmail.GmailAddOnManifest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.apps.script.type.gmail.GmailAddOnManifest build() {
      com.google.apps.script.type.gmail.GmailAddOnManifest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.apps.script.type.gmail.GmailAddOnManifest buildPartial() {
      com.google.apps.script.type.gmail.GmailAddOnManifest result =
          new com.google.apps.script.type.gmail.GmailAddOnManifest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.apps.script.type.gmail.GmailAddOnManifest result) {
      if (contextualTriggersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          contextualTriggers_ = java.util.Collections.unmodifiableList(contextualTriggers_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.contextualTriggers_ = contextualTriggers_;
      } else {
        result.contextualTriggers_ = contextualTriggersBuilder_.build();
      }
      if (universalActionsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          universalActions_ = java.util.Collections.unmodifiableList(universalActions_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.universalActions_ = universalActions_;
      } else {
        result.universalActions_ = universalActionsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.apps.script.type.gmail.GmailAddOnManifest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.homepageTrigger_ =
            homepageTriggerBuilder_ == null ? homepageTrigger_ : homepageTriggerBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.composeTrigger_ =
            composeTriggerBuilder_ == null ? composeTrigger_ : composeTriggerBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.authorizationCheckFunction_ = authorizationCheckFunction_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.apps.script.type.gmail.GmailAddOnManifest) {
        return mergeFrom((com.google.apps.script.type.gmail.GmailAddOnManifest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.apps.script.type.gmail.GmailAddOnManifest other) {
      if (other == com.google.apps.script.type.gmail.GmailAddOnManifest.getDefaultInstance())
        return this;
      if (other.hasHomepageTrigger()) {
        mergeHomepageTrigger(other.getHomepageTrigger());
      }
      if (contextualTriggersBuilder_ == null) {
        if (!other.contextualTriggers_.isEmpty()) {
          if (contextualTriggers_.isEmpty()) {
            contextualTriggers_ = other.contextualTriggers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureContextualTriggersIsMutable();
            contextualTriggers_.addAll(other.contextualTriggers_);
          }
          onChanged();
        }
      } else {
        if (!other.contextualTriggers_.isEmpty()) {
          if (contextualTriggersBuilder_.isEmpty()) {
            contextualTriggersBuilder_.dispose();
            contextualTriggersBuilder_ = null;
            contextualTriggers_ = other.contextualTriggers_;
            bitField0_ = (bitField0_ & ~0x00000002);
            contextualTriggersBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getContextualTriggersFieldBuilder()
                    : null;
          } else {
            contextualTriggersBuilder_.addAllMessages(other.contextualTriggers_);
          }
        }
      }
      if (universalActionsBuilder_ == null) {
        if (!other.universalActions_.isEmpty()) {
          if (universalActions_.isEmpty()) {
            universalActions_ = other.universalActions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUniversalActionsIsMutable();
            universalActions_.addAll(other.universalActions_);
          }
          onChanged();
        }
      } else {
        if (!other.universalActions_.isEmpty()) {
          if (universalActionsBuilder_.isEmpty()) {
            universalActionsBuilder_.dispose();
            universalActionsBuilder_ = null;
            universalActions_ = other.universalActions_;
            bitField0_ = (bitField0_ & ~0x00000004);
            universalActionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getUniversalActionsFieldBuilder()
                    : null;
          } else {
            universalActionsBuilder_.addAllMessages(other.universalActions_);
          }
        }
      }
      if (other.hasComposeTrigger()) {
        mergeComposeTrigger(other.getComposeTrigger());
      }
      if (!other.getAuthorizationCheckFunction().isEmpty()) {
        authorizationCheckFunction_ = other.authorizationCheckFunction_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26:
              {
                com.google.apps.script.type.gmail.ContextualTrigger m =
                    input.readMessage(
                        com.google.apps.script.type.gmail.ContextualTrigger.parser(),
                        extensionRegistry);
                if (contextualTriggersBuilder_ == null) {
                  ensureContextualTriggersIsMutable();
                  contextualTriggers_.add(m);
                } else {
                  contextualTriggersBuilder_.addMessage(m);
                }
                break;
              } // case 26
            case 34:
              {
                com.google.apps.script.type.gmail.UniversalAction m =
                    input.readMessage(
                        com.google.apps.script.type.gmail.UniversalAction.parser(),
                        extensionRegistry);
                if (universalActionsBuilder_ == null) {
                  ensureUniversalActionsIsMutable();
                  universalActions_.add(m);
                } else {
                  universalActionsBuilder_.addMessage(m);
                }
                break;
              } // case 34
            case 58:
              {
                authorizationCheckFunction_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 58
            case 98:
              {
                input.readMessage(getComposeTriggerFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 98
            case 114:
              {
                input.readMessage(getHomepageTriggerFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 114
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.apps.script.type.HomepageExtensionPoint homepageTrigger_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.script.type.HomepageExtensionPoint,
            com.google.apps.script.type.HomepageExtensionPoint.Builder,
            com.google.apps.script.type.HomepageExtensionPointOrBuilder>
        homepageTriggerBuilder_;
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     *
     * @return Whether the homepageTrigger field is set.
     */
    public boolean hasHomepageTrigger() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     *
     * @return The homepageTrigger.
     */
    public com.google.apps.script.type.HomepageExtensionPoint getHomepageTrigger() {
      if (homepageTriggerBuilder_ == null) {
        return homepageTrigger_ == null
            ? com.google.apps.script.type.HomepageExtensionPoint.getDefaultInstance()
            : homepageTrigger_;
      } else {
        return homepageTriggerBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    public Builder setHomepageTrigger(com.google.apps.script.type.HomepageExtensionPoint value) {
      if (homepageTriggerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        homepageTrigger_ = value;
      } else {
        homepageTriggerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    public Builder setHomepageTrigger(
        com.google.apps.script.type.HomepageExtensionPoint.Builder builderForValue) {
      if (homepageTriggerBuilder_ == null) {
        homepageTrigger_ = builderForValue.build();
      } else {
        homepageTriggerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    public Builder mergeHomepageTrigger(com.google.apps.script.type.HomepageExtensionPoint value) {
      if (homepageTriggerBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && homepageTrigger_ != null
            && homepageTrigger_
                != com.google.apps.script.type.HomepageExtensionPoint.getDefaultInstance()) {
          getHomepageTriggerBuilder().mergeFrom(value);
        } else {
          homepageTrigger_ = value;
        }
      } else {
        homepageTriggerBuilder_.mergeFrom(value);
      }
      if (homepageTrigger_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    public Builder clearHomepageTrigger() {
      bitField0_ = (bitField0_ & ~0x00000001);
      homepageTrigger_ = null;
      if (homepageTriggerBuilder_ != null) {
        homepageTriggerBuilder_.dispose();
        homepageTriggerBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    public com.google.apps.script.type.HomepageExtensionPoint.Builder getHomepageTriggerBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getHomepageTriggerFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    public com.google.apps.script.type.HomepageExtensionPointOrBuilder
        getHomepageTriggerOrBuilder() {
      if (homepageTriggerBuilder_ != null) {
        return homepageTriggerBuilder_.getMessageOrBuilder();
      } else {
        return homepageTrigger_ == null
            ? com.google.apps.script.type.HomepageExtensionPoint.getDefaultInstance()
            : homepageTrigger_;
      }
    }
    /**
     *
     *
     * <pre>
     * Defines an endpoint that will be executed in contexts that don't
     * match a declared contextual trigger. Any cards generated by this function
     * will always be available to the user, but may be eclipsed by contextual
     * content when this add-on declares more targeted triggers.
     *
     * If present, this overrides the configuration from
     * `addOns.common.homepageTrigger`.
     * </pre>
     *
     * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.script.type.HomepageExtensionPoint,
            com.google.apps.script.type.HomepageExtensionPoint.Builder,
            com.google.apps.script.type.HomepageExtensionPointOrBuilder>
        getHomepageTriggerFieldBuilder() {
      if (homepageTriggerBuilder_ == null) {
        homepageTriggerBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.apps.script.type.HomepageExtensionPoint,
                com.google.apps.script.type.HomepageExtensionPoint.Builder,
                com.google.apps.script.type.HomepageExtensionPointOrBuilder>(
                getHomepageTrigger(), getParentForChildren(), isClean());
        homepageTrigger_ = null;
      }
      return homepageTriggerBuilder_;
    }

    private java.util.List<com.google.apps.script.type.gmail.ContextualTrigger>
        contextualTriggers_ = java.util.Collections.emptyList();

    private void ensureContextualTriggersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        contextualTriggers_ =
            new java.util.ArrayList<com.google.apps.script.type.gmail.ContextualTrigger>(
                contextualTriggers_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.apps.script.type.gmail.ContextualTrigger,
            com.google.apps.script.type.gmail.ContextualTrigger.Builder,
            com.google.apps.script.type.gmail.ContextualTriggerOrBuilder>
        contextualTriggersBuilder_;

    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public java.util.List<com.google.apps.script.type.gmail.ContextualTrigger>
        getContextualTriggersList() {
      if (contextualTriggersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(contextualTriggers_);
      } else {
        return contextualTriggersBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public int getContextualTriggersCount() {
      if (contextualTriggersBuilder_ == null) {
        return contextualTriggers_.size();
      } else {
        return contextualTriggersBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public com.google.apps.script.type.gmail.ContextualTrigger getContextualTriggers(int index) {
      if (contextualTriggersBuilder_ == null) {
        return contextualTriggers_.get(index);
      } else {
        return contextualTriggersBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder setContextualTriggers(
        int index, com.google.apps.script.type.gmail.ContextualTrigger value) {
      if (contextualTriggersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextualTriggersIsMutable();
        contextualTriggers_.set(index, value);
        onChanged();
      } else {
        contextualTriggersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder setContextualTriggers(
        int index, com.google.apps.script.type.gmail.ContextualTrigger.Builder builderForValue) {
      if (contextualTriggersBuilder_ == null) {
        ensureContextualTriggersIsMutable();
        contextualTriggers_.set(index, builderForValue.build());
        onChanged();
      } else {
        contextualTriggersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder addContextualTriggers(
        com.google.apps.script.type.gmail.ContextualTrigger value) {
      if (contextualTriggersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextualTriggersIsMutable();
        contextualTriggers_.add(value);
        onChanged();
      } else {
        contextualTriggersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder addContextualTriggers(
        int index, com.google.apps.script.type.gmail.ContextualTrigger value) {
      if (contextualTriggersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContextualTriggersIsMutable();
        contextualTriggers_.add(index, value);
        onChanged();
      } else {
        contextualTriggersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder addContextualTriggers(
        com.google.apps.script.type.gmail.ContextualTrigger.Builder builderForValue) {
      if (contextualTriggersBuilder_ == null) {
        ensureContextualTriggersIsMutable();
        contextualTriggers_.add(builderForValue.build());
        onChanged();
      } else {
        contextualTriggersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder addContextualTriggers(
        int index, com.google.apps.script.type.gmail.ContextualTrigger.Builder builderForValue) {
      if (contextualTriggersBuilder_ == null) {
        ensureContextualTriggersIsMutable();
        contextualTriggers_.add(index, builderForValue.build());
        onChanged();
      } else {
        contextualTriggersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder addAllContextualTriggers(
        java.lang.Iterable<? extends com.google.apps.script.type.gmail.ContextualTrigger> values) {
      if (contextualTriggersBuilder_ == null) {
        ensureContextualTriggersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, contextualTriggers_);
        onChanged();
      } else {
        contextualTriggersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder clearContextualTriggers() {
      if (contextualTriggersBuilder_ == null) {
        contextualTriggers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        contextualTriggersBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public Builder removeContextualTriggers(int index) {
      if (contextualTriggersBuilder_ == null) {
        ensureContextualTriggersIsMutable();
        contextualTriggers_.remove(index);
        onChanged();
      } else {
        contextualTriggersBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public com.google.apps.script.type.gmail.ContextualTrigger.Builder getContextualTriggersBuilder(
        int index) {
      return getContextualTriggersFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public com.google.apps.script.type.gmail.ContextualTriggerOrBuilder
        getContextualTriggersOrBuilder(int index) {
      if (contextualTriggersBuilder_ == null) {
        return contextualTriggers_.get(index);
      } else {
        return contextualTriggersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public java.util.List<? extends com.google.apps.script.type.gmail.ContextualTriggerOrBuilder>
        getContextualTriggersOrBuilderList() {
      if (contextualTriggersBuilder_ != null) {
        return contextualTriggersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(contextualTriggers_);
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public com.google.apps.script.type.gmail.ContextualTrigger.Builder
        addContextualTriggersBuilder() {
      return getContextualTriggersFieldBuilder()
          .addBuilder(com.google.apps.script.type.gmail.ContextualTrigger.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public com.google.apps.script.type.gmail.ContextualTrigger.Builder addContextualTriggersBuilder(
        int index) {
      return getContextualTriggersFieldBuilder()
          .addBuilder(
              index, com.google.apps.script.type.gmail.ContextualTrigger.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Defines the set of conditions that trigger the add-on.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.ContextualTrigger contextual_triggers = 3;
     * </code>
     */
    public java.util.List<com.google.apps.script.type.gmail.ContextualTrigger.Builder>
        getContextualTriggersBuilderList() {
      return getContextualTriggersFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.apps.script.type.gmail.ContextualTrigger,
            com.google.apps.script.type.gmail.ContextualTrigger.Builder,
            com.google.apps.script.type.gmail.ContextualTriggerOrBuilder>
        getContextualTriggersFieldBuilder() {
      if (contextualTriggersBuilder_ == null) {
        contextualTriggersBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.apps.script.type.gmail.ContextualTrigger,
                com.google.apps.script.type.gmail.ContextualTrigger.Builder,
                com.google.apps.script.type.gmail.ContextualTriggerOrBuilder>(
                contextualTriggers_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        contextualTriggers_ = null;
      }
      return contextualTriggersBuilder_;
    }

    private java.util.List<com.google.apps.script.type.gmail.UniversalAction> universalActions_ =
        java.util.Collections.emptyList();

    private void ensureUniversalActionsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        universalActions_ =
            new java.util.ArrayList<com.google.apps.script.type.gmail.UniversalAction>(
                universalActions_);
        bitField0_ |= 0x00000004;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.apps.script.type.gmail.UniversalAction,
            com.google.apps.script.type.gmail.UniversalAction.Builder,
            com.google.apps.script.type.gmail.UniversalActionOrBuilder>
        universalActionsBuilder_;

    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public java.util.List<com.google.apps.script.type.gmail.UniversalAction>
        getUniversalActionsList() {
      if (universalActionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(universalActions_);
      } else {
        return universalActionsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public int getUniversalActionsCount() {
      if (universalActionsBuilder_ == null) {
        return universalActions_.size();
      } else {
        return universalActionsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public com.google.apps.script.type.gmail.UniversalAction getUniversalActions(int index) {
      if (universalActionsBuilder_ == null) {
        return universalActions_.get(index);
      } else {
        return universalActionsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder setUniversalActions(
        int index, com.google.apps.script.type.gmail.UniversalAction value) {
      if (universalActionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniversalActionsIsMutable();
        universalActions_.set(index, value);
        onChanged();
      } else {
        universalActionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder setUniversalActions(
        int index, com.google.apps.script.type.gmail.UniversalAction.Builder builderForValue) {
      if (universalActionsBuilder_ == null) {
        ensureUniversalActionsIsMutable();
        universalActions_.set(index, builderForValue.build());
        onChanged();
      } else {
        universalActionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder addUniversalActions(com.google.apps.script.type.gmail.UniversalAction value) {
      if (universalActionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniversalActionsIsMutable();
        universalActions_.add(value);
        onChanged();
      } else {
        universalActionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder addUniversalActions(
        int index, com.google.apps.script.type.gmail.UniversalAction value) {
      if (universalActionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniversalActionsIsMutable();
        universalActions_.add(index, value);
        onChanged();
      } else {
        universalActionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder addUniversalActions(
        com.google.apps.script.type.gmail.UniversalAction.Builder builderForValue) {
      if (universalActionsBuilder_ == null) {
        ensureUniversalActionsIsMutable();
        universalActions_.add(builderForValue.build());
        onChanged();
      } else {
        universalActionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder addUniversalActions(
        int index, com.google.apps.script.type.gmail.UniversalAction.Builder builderForValue) {
      if (universalActionsBuilder_ == null) {
        ensureUniversalActionsIsMutable();
        universalActions_.add(index, builderForValue.build());
        onChanged();
      } else {
        universalActionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder addAllUniversalActions(
        java.lang.Iterable<? extends com.google.apps.script.type.gmail.UniversalAction> values) {
      if (universalActionsBuilder_ == null) {
        ensureUniversalActionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, universalActions_);
        onChanged();
      } else {
        universalActionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder clearUniversalActions() {
      if (universalActionsBuilder_ == null) {
        universalActions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        universalActionsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public Builder removeUniversalActions(int index) {
      if (universalActionsBuilder_ == null) {
        ensureUniversalActionsIsMutable();
        universalActions_.remove(index);
        onChanged();
      } else {
        universalActionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public com.google.apps.script.type.gmail.UniversalAction.Builder getUniversalActionsBuilder(
        int index) {
      return getUniversalActionsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public com.google.apps.script.type.gmail.UniversalActionOrBuilder getUniversalActionsOrBuilder(
        int index) {
      if (universalActionsBuilder_ == null) {
        return universalActions_.get(index);
      } else {
        return universalActionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public java.util.List<? extends com.google.apps.script.type.gmail.UniversalActionOrBuilder>
        getUniversalActionsOrBuilderList() {
      if (universalActionsBuilder_ != null) {
        return universalActionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(universalActions_);
      }
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public com.google.apps.script.type.gmail.UniversalAction.Builder addUniversalActionsBuilder() {
      return getUniversalActionsFieldBuilder()
          .addBuilder(com.google.apps.script.type.gmail.UniversalAction.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public com.google.apps.script.type.gmail.UniversalAction.Builder addUniversalActionsBuilder(
        int index) {
      return getUniversalActionsFieldBuilder()
          .addBuilder(
              index, com.google.apps.script.type.gmail.UniversalAction.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Defines set of [universal
     * actions](/gmail/add-ons/how-tos/universal-actions) for the add-on. The user
     * triggers universal actions from the add-on toolbar menu.
     * </pre>
     *
     * <code>repeated .google.apps.script.type.gmail.UniversalAction universal_actions = 4;</code>
     */
    public java.util.List<com.google.apps.script.type.gmail.UniversalAction.Builder>
        getUniversalActionsBuilderList() {
      return getUniversalActionsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.apps.script.type.gmail.UniversalAction,
            com.google.apps.script.type.gmail.UniversalAction.Builder,
            com.google.apps.script.type.gmail.UniversalActionOrBuilder>
        getUniversalActionsFieldBuilder() {
      if (universalActionsBuilder_ == null) {
        universalActionsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.apps.script.type.gmail.UniversalAction,
                com.google.apps.script.type.gmail.UniversalAction.Builder,
                com.google.apps.script.type.gmail.UniversalActionOrBuilder>(
                universalActions_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        universalActions_ = null;
      }
      return universalActionsBuilder_;
    }

    private com.google.apps.script.type.gmail.ComposeTrigger composeTrigger_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.script.type.gmail.ComposeTrigger,
            com.google.apps.script.type.gmail.ComposeTrigger.Builder,
            com.google.apps.script.type.gmail.ComposeTriggerOrBuilder>
        composeTriggerBuilder_;
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     *
     * @return Whether the composeTrigger field is set.
     */
    public boolean hasComposeTrigger() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     *
     * @return The composeTrigger.
     */
    public com.google.apps.script.type.gmail.ComposeTrigger getComposeTrigger() {
      if (composeTriggerBuilder_ == null) {
        return composeTrigger_ == null
            ? com.google.apps.script.type.gmail.ComposeTrigger.getDefaultInstance()
            : composeTrigger_;
      } else {
        return composeTriggerBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    public Builder setComposeTrigger(com.google.apps.script.type.gmail.ComposeTrigger value) {
      if (composeTriggerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        composeTrigger_ = value;
      } else {
        composeTriggerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    public Builder setComposeTrigger(
        com.google.apps.script.type.gmail.ComposeTrigger.Builder builderForValue) {
      if (composeTriggerBuilder_ == null) {
        composeTrigger_ = builderForValue.build();
      } else {
        composeTriggerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    public Builder mergeComposeTrigger(com.google.apps.script.type.gmail.ComposeTrigger value) {
      if (composeTriggerBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && composeTrigger_ != null
            && composeTrigger_
                != com.google.apps.script.type.gmail.ComposeTrigger.getDefaultInstance()) {
          getComposeTriggerBuilder().mergeFrom(value);
        } else {
          composeTrigger_ = value;
        }
      } else {
        composeTriggerBuilder_.mergeFrom(value);
      }
      if (composeTrigger_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    public Builder clearComposeTrigger() {
      bitField0_ = (bitField0_ & ~0x00000008);
      composeTrigger_ = null;
      if (composeTriggerBuilder_ != null) {
        composeTriggerBuilder_.dispose();
        composeTriggerBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    public com.google.apps.script.type.gmail.ComposeTrigger.Builder getComposeTriggerBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getComposeTriggerFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    public com.google.apps.script.type.gmail.ComposeTriggerOrBuilder getComposeTriggerOrBuilder() {
      if (composeTriggerBuilder_ != null) {
        return composeTriggerBuilder_.getMessageOrBuilder();
      } else {
        return composeTrigger_ == null
            ? com.google.apps.script.type.gmail.ComposeTrigger.getDefaultInstance()
            : composeTrigger_;
      }
    }
    /**
     *
     *
     * <pre>
     * Defines the compose time trigger for a compose time add-on. This is the
     * trigger that causes an add-on to take action when the user is composing an
     * email.
     * All compose time addons are required to have the
     * gmail.addons.current.action.compose scope even though it might not edit the
     * draft.
     * </pre>
     *
     * <code>.google.apps.script.type.gmail.ComposeTrigger compose_trigger = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.apps.script.type.gmail.ComposeTrigger,
            com.google.apps.script.type.gmail.ComposeTrigger.Builder,
            com.google.apps.script.type.gmail.ComposeTriggerOrBuilder>
        getComposeTriggerFieldBuilder() {
      if (composeTriggerBuilder_ == null) {
        composeTriggerBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.apps.script.type.gmail.ComposeTrigger,
                com.google.apps.script.type.gmail.ComposeTrigger.Builder,
                com.google.apps.script.type.gmail.ComposeTriggerOrBuilder>(
                getComposeTrigger(), getParentForChildren(), isClean());
        composeTrigger_ = null;
      }
      return composeTriggerBuilder_;
    }

    private java.lang.Object authorizationCheckFunction_ = "";
    /**
     *
     *
     * <pre>
     * The name of an endpoint that verifies that the add-on has
     * all the required third-party authorizations, by probing the third-party
     * APIs. If the probe fails, the function should throw an exception to
     * initiate the authorization flow. This function is called before each
     * invocation of the add-on, in order to ensure a smooth user experience.
     * </pre>
     *
     * <code>string authorization_check_function = 7;</code>
     *
     * @return The authorizationCheckFunction.
     */
    public java.lang.String getAuthorizationCheckFunction() {
      java.lang.Object ref = authorizationCheckFunction_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorizationCheckFunction_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of an endpoint that verifies that the add-on has
     * all the required third-party authorizations, by probing the third-party
     * APIs. If the probe fails, the function should throw an exception to
     * initiate the authorization flow. This function is called before each
     * invocation of the add-on, in order to ensure a smooth user experience.
     * </pre>
     *
     * <code>string authorization_check_function = 7;</code>
     *
     * @return The bytes for authorizationCheckFunction.
     */
    public com.google.protobuf.ByteString getAuthorizationCheckFunctionBytes() {
      java.lang.Object ref = authorizationCheckFunction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        authorizationCheckFunction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The name of an endpoint that verifies that the add-on has
     * all the required third-party authorizations, by probing the third-party
     * APIs. If the probe fails, the function should throw an exception to
     * initiate the authorization flow. This function is called before each
     * invocation of the add-on, in order to ensure a smooth user experience.
     * </pre>
     *
     * <code>string authorization_check_function = 7;</code>
     *
     * @param value The authorizationCheckFunction to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationCheckFunction(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      authorizationCheckFunction_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name of an endpoint that verifies that the add-on has
     * all the required third-party authorizations, by probing the third-party
     * APIs. If the probe fails, the function should throw an exception to
     * initiate the authorization flow. This function is called before each
     * invocation of the add-on, in order to ensure a smooth user experience.
     * </pre>
     *
     * <code>string authorization_check_function = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAuthorizationCheckFunction() {
      authorizationCheckFunction_ = getDefaultInstance().getAuthorizationCheckFunction();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The name of an endpoint that verifies that the add-on has
     * all the required third-party authorizations, by probing the third-party
     * APIs. If the probe fails, the function should throw an exception to
     * initiate the authorization flow. This function is called before each
     * invocation of the add-on, in order to ensure a smooth user experience.
     * </pre>
     *
     * <code>string authorization_check_function = 7;</code>
     *
     * @param value The bytes for authorizationCheckFunction to set.
     * @return This builder for chaining.
     */
    public Builder setAuthorizationCheckFunctionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      authorizationCheckFunction_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.apps.script.type.gmail.GmailAddOnManifest)
  }

  // @@protoc_insertion_point(class_scope:google.apps.script.type.gmail.GmailAddOnManifest)
  private static final com.google.apps.script.type.gmail.GmailAddOnManifest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.apps.script.type.gmail.GmailAddOnManifest();
  }

  public static com.google.apps.script.type.gmail.GmailAddOnManifest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GmailAddOnManifest> PARSER =
      new com.google.protobuf.AbstractParser<GmailAddOnManifest>() {
        @java.lang.Override
        public GmailAddOnManifest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GmailAddOnManifest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GmailAddOnManifest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.apps.script.type.gmail.GmailAddOnManifest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
