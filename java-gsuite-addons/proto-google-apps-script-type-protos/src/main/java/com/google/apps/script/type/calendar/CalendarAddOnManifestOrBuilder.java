/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/script/type/calendar/calendar_addon_manifest.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.script.type.calendar;

public interface CalendarAddOnManifestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.apps.script.type.calendar.CalendarAddOnManifest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Defines an endpoint that will be executed contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   * </pre>
   *
   * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 6;</code>
   *
   * @return Whether the homepageTrigger field is set.
   */
  boolean hasHomepageTrigger();
  /**
   *
   *
   * <pre>
   * Defines an endpoint that will be executed contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   * </pre>
   *
   * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 6;</code>
   *
   * @return The homepageTrigger.
   */
  com.google.apps.script.type.HomepageExtensionPoint getHomepageTrigger();
  /**
   *
   *
   * <pre>
   * Defines an endpoint that will be executed contexts that don't
   * match a declared contextual trigger. Any cards generated by this function
   * will always be available to the user, but may be eclipsed by contextual
   * content when this add-on declares more targeted triggers.
   *
   * If present, this overrides the configuration from
   * `addOns.common.homepageTrigger`.
   * </pre>
   *
   * <code>.google.apps.script.type.HomepageExtensionPoint homepage_trigger = 6;</code>
   */
  com.google.apps.script.type.HomepageExtensionPointOrBuilder getHomepageTriggerOrBuilder();

  /**
   *
   *
   * <pre>
   * Defines conference solutions provided by this add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.calendar.ConferenceSolution conference_solution = 3;
   * </code>
   */
  java.util.List<com.google.apps.script.type.calendar.ConferenceSolution>
      getConferenceSolutionList();
  /**
   *
   *
   * <pre>
   * Defines conference solutions provided by this add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.calendar.ConferenceSolution conference_solution = 3;
   * </code>
   */
  com.google.apps.script.type.calendar.ConferenceSolution getConferenceSolution(int index);
  /**
   *
   *
   * <pre>
   * Defines conference solutions provided by this add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.calendar.ConferenceSolution conference_solution = 3;
   * </code>
   */
  int getConferenceSolutionCount();
  /**
   *
   *
   * <pre>
   * Defines conference solutions provided by this add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.calendar.ConferenceSolution conference_solution = 3;
   * </code>
   */
  java.util.List<? extends com.google.apps.script.type.calendar.ConferenceSolutionOrBuilder>
      getConferenceSolutionOrBuilderList();
  /**
   *
   *
   * <pre>
   * Defines conference solutions provided by this add-on.
   * </pre>
   *
   * <code>repeated .google.apps.script.type.calendar.ConferenceSolution conference_solution = 3;
   * </code>
   */
  com.google.apps.script.type.calendar.ConferenceSolutionOrBuilder getConferenceSolutionOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * An endpoint to execute that creates a URL to the add-on's settings page.
   * </pre>
   *
   * <code>string create_settings_url_function = 5;</code>
   *
   * @return The createSettingsUrlFunction.
   */
  java.lang.String getCreateSettingsUrlFunction();
  /**
   *
   *
   * <pre>
   * An endpoint to execute that creates a URL to the add-on's settings page.
   * </pre>
   *
   * <code>string create_settings_url_function = 5;</code>
   *
   * @return The bytes for createSettingsUrlFunction.
   */
  com.google.protobuf.ByteString getCreateSettingsUrlFunctionBytes();

  /**
   *
   *
   * <pre>
   * An endpoint to trigger when an event is opened (viewed/edited).
   * </pre>
   *
   * <code>.google.apps.script.type.calendar.CalendarExtensionPoint event_open_trigger = 10;</code>
   *
   * @return Whether the eventOpenTrigger field is set.
   */
  boolean hasEventOpenTrigger();
  /**
   *
   *
   * <pre>
   * An endpoint to trigger when an event is opened (viewed/edited).
   * </pre>
   *
   * <code>.google.apps.script.type.calendar.CalendarExtensionPoint event_open_trigger = 10;</code>
   *
   * @return The eventOpenTrigger.
   */
  com.google.apps.script.type.calendar.CalendarExtensionPoint getEventOpenTrigger();
  /**
   *
   *
   * <pre>
   * An endpoint to trigger when an event is opened (viewed/edited).
   * </pre>
   *
   * <code>.google.apps.script.type.calendar.CalendarExtensionPoint event_open_trigger = 10;</code>
   */
  com.google.apps.script.type.calendar.CalendarExtensionPointOrBuilder
      getEventOpenTriggerOrBuilder();

  /**
   *
   *
   * <pre>
   * An endpoint to trigger when the open event is updated.
   * </pre>
   *
   * <code>.google.apps.script.type.calendar.CalendarExtensionPoint event_update_trigger = 11;
   * </code>
   *
   * @return Whether the eventUpdateTrigger field is set.
   */
  boolean hasEventUpdateTrigger();
  /**
   *
   *
   * <pre>
   * An endpoint to trigger when the open event is updated.
   * </pre>
   *
   * <code>.google.apps.script.type.calendar.CalendarExtensionPoint event_update_trigger = 11;
   * </code>
   *
   * @return The eventUpdateTrigger.
   */
  com.google.apps.script.type.calendar.CalendarExtensionPoint getEventUpdateTrigger();
  /**
   *
   *
   * <pre>
   * An endpoint to trigger when the open event is updated.
   * </pre>
   *
   * <code>.google.apps.script.type.calendar.CalendarExtensionPoint event_update_trigger = 11;
   * </code>
   */
  com.google.apps.script.type.calendar.CalendarExtensionPointOrBuilder
      getEventUpdateTriggerOrBuilder();

  /**
   *
   *
   * <pre>
   * Define the level of data access when an event addon is triggered.
   * </pre>
   *
   * <code>
   * .google.apps.script.type.calendar.CalendarAddOnManifest.EventAccess current_event_access = 12;
   * </code>
   *
   * @return The enum numeric value on the wire for currentEventAccess.
   */
  int getCurrentEventAccessValue();
  /**
   *
   *
   * <pre>
   * Define the level of data access when an event addon is triggered.
   * </pre>
   *
   * <code>
   * .google.apps.script.type.calendar.CalendarAddOnManifest.EventAccess current_event_access = 12;
   * </code>
   *
   * @return The currentEventAccess.
   */
  com.google.apps.script.type.calendar.CalendarAddOnManifest.EventAccess getCurrentEventAccess();
}
