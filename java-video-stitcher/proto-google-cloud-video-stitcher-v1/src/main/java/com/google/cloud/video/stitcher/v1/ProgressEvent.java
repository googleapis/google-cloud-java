/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/video/stitcher/v1/events.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.video.stitcher.v1;

/**
 *
 *
 * <pre>
 * Indicates a time in which a list of events should be triggered
 * during media playback.
 * </pre>
 *
 * Protobuf type {@code google.cloud.video.stitcher.v1.ProgressEvent}
 */
public final class ProgressEvent extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.video.stitcher.v1.ProgressEvent)
    ProgressEventOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ProgressEvent.newBuilder() to construct.
  private ProgressEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ProgressEvent() {
    events_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ProgressEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.video.stitcher.v1.EventsProto
        .internal_static_google_cloud_video_stitcher_v1_ProgressEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.video.stitcher.v1.EventsProto
        .internal_static_google_cloud_video_stitcher_v1_ProgressEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.video.stitcher.v1.ProgressEvent.class,
            com.google.cloud.video.stitcher.v1.ProgressEvent.Builder.class);
  }

  private int bitField0_;
  public static final int TIME_OFFSET_FIELD_NUMBER = 1;
  private com.google.protobuf.Duration timeOffset_;
  /**
   *
   *
   * <pre>
   * The time when the following tracking events occurs. The time is in
   * seconds relative to the start of the VOD asset.
   * </pre>
   *
   * <code>.google.protobuf.Duration time_offset = 1;</code>
   *
   * @return Whether the timeOffset field is set.
   */
  @java.lang.Override
  public boolean hasTimeOffset() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The time when the following tracking events occurs. The time is in
   * seconds relative to the start of the VOD asset.
   * </pre>
   *
   * <code>.google.protobuf.Duration time_offset = 1;</code>
   *
   * @return The timeOffset.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTimeOffset() {
    return timeOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeOffset_;
  }
  /**
   *
   *
   * <pre>
   * The time when the following tracking events occurs. The time is in
   * seconds relative to the start of the VOD asset.
   * </pre>
   *
   * <code>.google.protobuf.Duration time_offset = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTimeOffsetOrBuilder() {
    return timeOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeOffset_;
  }

  public static final int EVENTS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.video.stitcher.v1.Event> events_;
  /**
   *
   *
   * <pre>
   * The list of progress tracking events for the ad break. These can be of
   * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
   * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
   * `COMPLETE`, `PROGRESS`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.stitcher.v1.Event> getEventsList() {
    return events_;
  }
  /**
   *
   *
   * <pre>
   * The list of progress tracking events for the ad break. These can be of
   * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
   * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
   * `COMPLETE`, `PROGRESS`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.video.stitcher.v1.EventOrBuilder>
      getEventsOrBuilderList() {
    return events_;
  }
  /**
   *
   *
   * <pre>
   * The list of progress tracking events for the ad break. These can be of
   * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
   * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
   * `COMPLETE`, `PROGRESS`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
   */
  @java.lang.Override
  public int getEventsCount() {
    return events_.size();
  }
  /**
   *
   *
   * <pre>
   * The list of progress tracking events for the ad break. These can be of
   * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
   * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
   * `COMPLETE`, `PROGRESS`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.stitcher.v1.Event getEvents(int index) {
    return events_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The list of progress tracking events for the ad break. These can be of
   * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
   * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
   * `COMPLETE`, `PROGRESS`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.stitcher.v1.EventOrBuilder getEventsOrBuilder(int index) {
    return events_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getTimeOffset());
    }
    for (int i = 0; i < events_.size(); i++) {
      output.writeMessage(2, events_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getTimeOffset());
    }
    for (int i = 0; i < events_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, events_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.video.stitcher.v1.ProgressEvent)) {
      return super.equals(obj);
    }
    com.google.cloud.video.stitcher.v1.ProgressEvent other =
        (com.google.cloud.video.stitcher.v1.ProgressEvent) obj;

    if (hasTimeOffset() != other.hasTimeOffset()) return false;
    if (hasTimeOffset()) {
      if (!getTimeOffset().equals(other.getTimeOffset())) return false;
    }
    if (!getEventsList().equals(other.getEventsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTimeOffset()) {
      hash = (37 * hash) + TIME_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getTimeOffset().hashCode();
    }
    if (getEventsCount() > 0) {
      hash = (37 * hash) + EVENTS_FIELD_NUMBER;
      hash = (53 * hash) + getEventsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.video.stitcher.v1.ProgressEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Indicates a time in which a list of events should be triggered
   * during media playback.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.stitcher.v1.ProgressEvent}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.video.stitcher.v1.ProgressEvent)
      com.google.cloud.video.stitcher.v1.ProgressEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.stitcher.v1.EventsProto
          .internal_static_google_cloud_video_stitcher_v1_ProgressEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.stitcher.v1.EventsProto
          .internal_static_google_cloud_video_stitcher_v1_ProgressEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.stitcher.v1.ProgressEvent.class,
              com.google.cloud.video.stitcher.v1.ProgressEvent.Builder.class);
    }

    // Construct using com.google.cloud.video.stitcher.v1.ProgressEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getTimeOffsetFieldBuilder();
        getEventsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      timeOffset_ = null;
      if (timeOffsetBuilder_ != null) {
        timeOffsetBuilder_.dispose();
        timeOffsetBuilder_ = null;
      }
      if (eventsBuilder_ == null) {
        events_ = java.util.Collections.emptyList();
      } else {
        events_ = null;
        eventsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.video.stitcher.v1.EventsProto
          .internal_static_google_cloud_video_stitcher_v1_ProgressEvent_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.video.stitcher.v1.ProgressEvent getDefaultInstanceForType() {
      return com.google.cloud.video.stitcher.v1.ProgressEvent.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.video.stitcher.v1.ProgressEvent build() {
      com.google.cloud.video.stitcher.v1.ProgressEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.video.stitcher.v1.ProgressEvent buildPartial() {
      com.google.cloud.video.stitcher.v1.ProgressEvent result =
          new com.google.cloud.video.stitcher.v1.ProgressEvent(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.video.stitcher.v1.ProgressEvent result) {
      if (eventsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          events_ = java.util.Collections.unmodifiableList(events_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.events_ = events_;
      } else {
        result.events_ = eventsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.video.stitcher.v1.ProgressEvent result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.timeOffset_ = timeOffsetBuilder_ == null ? timeOffset_ : timeOffsetBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.video.stitcher.v1.ProgressEvent) {
        return mergeFrom((com.google.cloud.video.stitcher.v1.ProgressEvent) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.video.stitcher.v1.ProgressEvent other) {
      if (other == com.google.cloud.video.stitcher.v1.ProgressEvent.getDefaultInstance())
        return this;
      if (other.hasTimeOffset()) {
        mergeTimeOffset(other.getTimeOffset());
      }
      if (eventsBuilder_ == null) {
        if (!other.events_.isEmpty()) {
          if (events_.isEmpty()) {
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEventsIsMutable();
            events_.addAll(other.events_);
          }
          onChanged();
        }
      } else {
        if (!other.events_.isEmpty()) {
          if (eventsBuilder_.isEmpty()) {
            eventsBuilder_.dispose();
            eventsBuilder_ = null;
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000002);
            eventsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getEventsFieldBuilder()
                    : null;
          } else {
            eventsBuilder_.addAllMessages(other.events_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getTimeOffsetFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.cloud.video.stitcher.v1.Event m =
                    input.readMessage(
                        com.google.cloud.video.stitcher.v1.Event.parser(), extensionRegistry);
                if (eventsBuilder_ == null) {
                  ensureEventsIsMutable();
                  events_.add(m);
                } else {
                  eventsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.Duration timeOffset_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        timeOffsetBuilder_;
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     *
     * @return Whether the timeOffset field is set.
     */
    public boolean hasTimeOffset() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     *
     * @return The timeOffset.
     */
    public com.google.protobuf.Duration getTimeOffset() {
      if (timeOffsetBuilder_ == null) {
        return timeOffset_ == null
            ? com.google.protobuf.Duration.getDefaultInstance()
            : timeOffset_;
      } else {
        return timeOffsetBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    public Builder setTimeOffset(com.google.protobuf.Duration value) {
      if (timeOffsetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeOffset_ = value;
      } else {
        timeOffsetBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    public Builder setTimeOffset(com.google.protobuf.Duration.Builder builderForValue) {
      if (timeOffsetBuilder_ == null) {
        timeOffset_ = builderForValue.build();
      } else {
        timeOffsetBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    public Builder mergeTimeOffset(com.google.protobuf.Duration value) {
      if (timeOffsetBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && timeOffset_ != null
            && timeOffset_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getTimeOffsetBuilder().mergeFrom(value);
        } else {
          timeOffset_ = value;
        }
      } else {
        timeOffsetBuilder_.mergeFrom(value);
      }
      if (timeOffset_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    public Builder clearTimeOffset() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timeOffset_ = null;
      if (timeOffsetBuilder_ != null) {
        timeOffsetBuilder_.dispose();
        timeOffsetBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    public com.google.protobuf.Duration.Builder getTimeOffsetBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getTimeOffsetFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTimeOffsetOrBuilder() {
      if (timeOffsetBuilder_ != null) {
        return timeOffsetBuilder_.getMessageOrBuilder();
      } else {
        return timeOffset_ == null
            ? com.google.protobuf.Duration.getDefaultInstance()
            : timeOffset_;
      }
    }
    /**
     *
     *
     * <pre>
     * The time when the following tracking events occurs. The time is in
     * seconds relative to the start of the VOD asset.
     * </pre>
     *
     * <code>.google.protobuf.Duration time_offset = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        getTimeOffsetFieldBuilder() {
      if (timeOffsetBuilder_ == null) {
        timeOffsetBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration,
                com.google.protobuf.Duration.Builder,
                com.google.protobuf.DurationOrBuilder>(
                getTimeOffset(), getParentForChildren(), isClean());
        timeOffset_ = null;
      }
      return timeOffsetBuilder_;
    }

    private java.util.List<com.google.cloud.video.stitcher.v1.Event> events_ =
        java.util.Collections.emptyList();

    private void ensureEventsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        events_ = new java.util.ArrayList<com.google.cloud.video.stitcher.v1.Event>(events_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.stitcher.v1.Event,
            com.google.cloud.video.stitcher.v1.Event.Builder,
            com.google.cloud.video.stitcher.v1.EventOrBuilder>
        eventsBuilder_;

    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public java.util.List<com.google.cloud.video.stitcher.v1.Event> getEventsList() {
      if (eventsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(events_);
      } else {
        return eventsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public int getEventsCount() {
      if (eventsBuilder_ == null) {
        return events_.size();
      } else {
        return eventsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public com.google.cloud.video.stitcher.v1.Event getEvents(int index) {
      if (eventsBuilder_ == null) {
        return events_.get(index);
      } else {
        return eventsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder setEvents(int index, com.google.cloud.video.stitcher.v1.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.set(index, value);
        onChanged();
      } else {
        eventsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder setEvents(
        int index, com.google.cloud.video.stitcher.v1.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.set(index, builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder addEvents(com.google.cloud.video.stitcher.v1.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.add(value);
        onChanged();
      } else {
        eventsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder addEvents(int index, com.google.cloud.video.stitcher.v1.Event value) {
      if (eventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventsIsMutable();
        events_.add(index, value);
        onChanged();
      } else {
        eventsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder addEvents(com.google.cloud.video.stitcher.v1.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.add(builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder addEvents(
        int index, com.google.cloud.video.stitcher.v1.Event.Builder builderForValue) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.add(index, builderForValue.build());
        onChanged();
      } else {
        eventsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder addAllEvents(
        java.lang.Iterable<? extends com.google.cloud.video.stitcher.v1.Event> values) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, events_);
        onChanged();
      } else {
        eventsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder clearEvents() {
      if (eventsBuilder_ == null) {
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        eventsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public Builder removeEvents(int index) {
      if (eventsBuilder_ == null) {
        ensureEventsIsMutable();
        events_.remove(index);
        onChanged();
      } else {
        eventsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public com.google.cloud.video.stitcher.v1.Event.Builder getEventsBuilder(int index) {
      return getEventsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public com.google.cloud.video.stitcher.v1.EventOrBuilder getEventsOrBuilder(int index) {
      if (eventsBuilder_ == null) {
        return events_.get(index);
      } else {
        return eventsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public java.util.List<? extends com.google.cloud.video.stitcher.v1.EventOrBuilder>
        getEventsOrBuilderList() {
      if (eventsBuilder_ != null) {
        return eventsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(events_);
      }
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public com.google.cloud.video.stitcher.v1.Event.Builder addEventsBuilder() {
      return getEventsFieldBuilder()
          .addBuilder(com.google.cloud.video.stitcher.v1.Event.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public com.google.cloud.video.stitcher.v1.Event.Builder addEventsBuilder(int index) {
      return getEventsFieldBuilder()
          .addBuilder(index, com.google.cloud.video.stitcher.v1.Event.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The list of progress tracking events for the ad break. These can be of
     * the following IAB types: `BREAK_START`, `BREAK_END`, `IMPRESSION`,
     * `CREATIVE_VIEW`, `START`, `FIRST_QUARTILE`, `MIDPOINT`, `THIRD_QUARTILE`,
     * `COMPLETE`, `PROGRESS`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.stitcher.v1.Event events = 2;</code>
     */
    public java.util.List<com.google.cloud.video.stitcher.v1.Event.Builder> getEventsBuilderList() {
      return getEventsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.stitcher.v1.Event,
            com.google.cloud.video.stitcher.v1.Event.Builder,
            com.google.cloud.video.stitcher.v1.EventOrBuilder>
        getEventsFieldBuilder() {
      if (eventsBuilder_ == null) {
        eventsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.stitcher.v1.Event,
                com.google.cloud.video.stitcher.v1.Event.Builder,
                com.google.cloud.video.stitcher.v1.EventOrBuilder>(
                events_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        events_ = null;
      }
      return eventsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.video.stitcher.v1.ProgressEvent)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.video.stitcher.v1.ProgressEvent)
  private static final com.google.cloud.video.stitcher.v1.ProgressEvent DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.video.stitcher.v1.ProgressEvent();
  }

  public static com.google.cloud.video.stitcher.v1.ProgressEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProgressEvent> PARSER =
      new com.google.protobuf.AbstractParser<ProgressEvent>() {
        @java.lang.Override
        public ProgressEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ProgressEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProgressEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.video.stitcher.v1.ProgressEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
