/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/accounts/v1/accountservices.proto

// Protobuf Java Version: 3.25.8
package com.google.shopping.merchant.accounts.v1;

/**
 *
 *
 * <pre>
 * The `AccountService` message represents a specific service that a provider
 * account offers to a Merchant Center account.
 *
 * `AccountService` defines the permissions and capabilities granted to the
 * provider, allowing for operations such as product management or campaign
 * management.
 *
 * The lifecycle of an `AccountService` involves a proposal phase, where one
 * party suggests the service, and an approval phase, where the other party
 * accepts or rejects it. This handshake mechanism ensures mutual consent before
 * any access is granted. This mechanism safeguards both parties by ensuring
 * that access rights are granted appropriately and that both the business and
 * provider are aware of the services enabled. In scenarios where a user is an
 * admin of both accounts, the approval can happen automatically.
 *
 * The mutability of a service is also managed through `AccountService`. Some
 * services might be immutable, for example, if they were established through
 * other systems or APIs, and you cannot alter them through this API.
 * </pre>
 *
 * Protobuf type {@code google.shopping.merchant.accounts.v1.AccountService}
 */
public final class AccountService extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.shopping.merchant.accounts.v1.AccountService)
    AccountServiceOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use AccountService.newBuilder() to construct.
  private AccountService(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AccountService() {
    name_ = "";
    provider_ = "";
    providerDisplayName_ = "";
    mutability_ = 0;
    externalAccountId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AccountService();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.shopping.merchant.accounts.v1.AccountServicesProto
        .internal_static_google_shopping_merchant_accounts_v1_AccountService_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.shopping.merchant.accounts.v1.AccountServicesProto
        .internal_static_google_shopping_merchant_accounts_v1_AccountService_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.shopping.merchant.accounts.v1.AccountService.class,
            com.google.shopping.merchant.accounts.v1.AccountService.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The list of mutability option settings a service can have.
   * </pre>
   *
   * Protobuf enum {@code google.shopping.merchant.accounts.v1.AccountService.Mutability}
   */
  public enum Mutability implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Unused default value
     * </pre>
     *
     * <code>MUTABILITY_UNSPECIFIED = 0;</code>
     */
    MUTABILITY_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The service can be mutated without restrictions.
     * </pre>
     *
     * <code>MUTABLE = 1;</code>
     */
    MUTABLE(1),
    /**
     *
     *
     * <pre>
     * The service is read-only and must not be mutated.
     * </pre>
     *
     * <code>IMMUTABLE = 2;</code>
     */
    IMMUTABLE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Unused default value
     * </pre>
     *
     * <code>MUTABILITY_UNSPECIFIED = 0;</code>
     */
    public static final int MUTABILITY_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * The service can be mutated without restrictions.
     * </pre>
     *
     * <code>MUTABLE = 1;</code>
     */
    public static final int MUTABLE_VALUE = 1;

    /**
     *
     *
     * <pre>
     * The service is read-only and must not be mutated.
     * </pre>
     *
     * <code>IMMUTABLE = 2;</code>
     */
    public static final int IMMUTABLE_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mutability valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mutability forNumber(int value) {
      switch (value) {
        case 0:
          return MUTABILITY_UNSPECIFIED;
        case 1:
          return MUTABLE;
        case 2:
          return IMMUTABLE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mutability> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Mutability> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Mutability>() {
          public Mutability findValueByNumber(int number) {
            return Mutability.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.shopping.merchant.accounts.v1.AccountService.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final Mutability[] VALUES = values();

    public static Mutability valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mutability(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.shopping.merchant.accounts.v1.AccountService.Mutability)
  }

  private int bitField0_;
  private int serviceTypeCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object serviceType_;

  public enum ServiceTypeCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PRODUCTS_MANAGEMENT(100),
    CAMPAIGNS_MANAGEMENT(101),
    ACCOUNT_MANAGEMENT(102),
    ACCOUNT_AGGREGATION(103),
    LOCAL_LISTING_MANAGEMENT(104),
    SERVICETYPE_NOT_SET(0);
    private final int value;

    private ServiceTypeCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ServiceTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ServiceTypeCase forNumber(int value) {
      switch (value) {
        case 100:
          return PRODUCTS_MANAGEMENT;
        case 101:
          return CAMPAIGNS_MANAGEMENT;
        case 102:
          return ACCOUNT_MANAGEMENT;
        case 103:
          return ACCOUNT_AGGREGATION;
        case 104:
          return LOCAL_LISTING_MANAGEMENT;
        case 0:
          return SERVICETYPE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public ServiceTypeCase getServiceTypeCase() {
    return ServiceTypeCase.forNumber(serviceTypeCase_);
  }

  public static final int PRODUCTS_MANAGEMENT_FIELD_NUMBER = 100;

  /**
   *
   *
   * <pre>
   * Service type for managing products. This allows the provider to handle
   * product data on behalf of the business, including reading and writing
   * product listings. It's commonly used when the provider offers inventory
   * management or catalog synchronization services to keep the business's
   * product information up-to-date across platforms.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
   * </code>
   *
   * @return Whether the productsManagement field is set.
   */
  @java.lang.Override
  public boolean hasProductsManagement() {
    return serviceTypeCase_ == 100;
  }

  /**
   *
   *
   * <pre>
   * Service type for managing products. This allows the provider to handle
   * product data on behalf of the business, including reading and writing
   * product listings. It's commonly used when the provider offers inventory
   * management or catalog synchronization services to keep the business's
   * product information up-to-date across platforms.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
   * </code>
   *
   * @return The productsManagement.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.ProductsManagement getProductsManagement() {
    if (serviceTypeCase_ == 100) {
      return (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.ProductsManagement.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Service type for managing products. This allows the provider to handle
   * product data on behalf of the business, including reading and writing
   * product listings. It's commonly used when the provider offers inventory
   * management or catalog synchronization services to keep the business's
   * product information up-to-date across platforms.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.ProductsManagementOrBuilder
      getProductsManagementOrBuilder() {
    if (serviceTypeCase_ == 100) {
      return (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.ProductsManagement.getDefaultInstance();
  }

  public static final int CAMPAIGNS_MANAGEMENT_FIELD_NUMBER = 101;

  /**
   *
   *
   * <pre>
   * Service type for managing advertising campaigns. Grants the provider
   * access to create and manage the business's ad campaigns, including
   * setting up campaigns, adjusting bids, and optimizing performance.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
   * </code>
   *
   * @return Whether the campaignsManagement field is set.
   */
  @java.lang.Override
  public boolean hasCampaignsManagement() {
    return serviceTypeCase_ == 101;
  }

  /**
   *
   *
   * <pre>
   * Service type for managing advertising campaigns. Grants the provider
   * access to create and manage the business's ad campaigns, including
   * setting up campaigns, adjusting bids, and optimizing performance.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
   * </code>
   *
   * @return The campaignsManagement.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.CampaignsManagement getCampaignsManagement() {
    if (serviceTypeCase_ == 101) {
      return (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.CampaignsManagement.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Service type for managing advertising campaigns. Grants the provider
   * access to create and manage the business's ad campaigns, including
   * setting up campaigns, adjusting bids, and optimizing performance.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.CampaignsManagementOrBuilder
      getCampaignsManagementOrBuilder() {
    if (serviceTypeCase_ == 101) {
      return (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.CampaignsManagement.getDefaultInstance();
  }

  public static final int ACCOUNT_MANAGEMENT_FIELD_NUMBER = 102;

  /**
   *
   *
   * <pre>
   * Service type for account management. Enables the provider to perform
   * administrative actions on the business's account, such as
   * configuring account settings, managing users, or updating business
   * information.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;</code>
   *
   * @return Whether the accountManagement field is set.
   */
  @java.lang.Override
  public boolean hasAccountManagement() {
    return serviceTypeCase_ == 102;
  }

  /**
   *
   *
   * <pre>
   * Service type for account management. Enables the provider to perform
   * administrative actions on the business's account, such as
   * configuring account settings, managing users, or updating business
   * information.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;</code>
   *
   * @return The accountManagement.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.AccountManagement getAccountManagement() {
    if (serviceTypeCase_ == 102) {
      return (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.AccountManagement.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Service type for account management. Enables the provider to perform
   * administrative actions on the business's account, such as
   * configuring account settings, managing users, or updating business
   * information.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;</code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.AccountManagementOrBuilder
      getAccountManagementOrBuilder() {
    if (serviceTypeCase_ == 102) {
      return (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.AccountManagement.getDefaultInstance();
  }

  public static final int ACCOUNT_AGGREGATION_FIELD_NUMBER = 103;

  /**
   *
   *
   * <pre>
   * Service type for account aggregation. This enables the provider, which is
   * an advanced account, to manage multiple sub-accounts (client
   * accounts). Through this service, the advanced account provider can
   * perform administrative and operational tasks across all linked
   * sub-accounts.
   *
   * This is useful for agencies, aggregators, or large retailers that need
   * centralized control over many Merchant Center accounts.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
   * </code>
   *
   * @return Whether the accountAggregation field is set.
   */
  @java.lang.Override
  public boolean hasAccountAggregation() {
    return serviceTypeCase_ == 103;
  }

  /**
   *
   *
   * <pre>
   * Service type for account aggregation. This enables the provider, which is
   * an advanced account, to manage multiple sub-accounts (client
   * accounts). Through this service, the advanced account provider can
   * perform administrative and operational tasks across all linked
   * sub-accounts.
   *
   * This is useful for agencies, aggregators, or large retailers that need
   * centralized control over many Merchant Center accounts.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
   * </code>
   *
   * @return The accountAggregation.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.AccountAggregation getAccountAggregation() {
    if (serviceTypeCase_ == 103) {
      return (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.AccountAggregation.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Service type for account aggregation. This enables the provider, which is
   * an advanced account, to manage multiple sub-accounts (client
   * accounts). Through this service, the advanced account provider can
   * perform administrative and operational tasks across all linked
   * sub-accounts.
   *
   * This is useful for agencies, aggregators, or large retailers that need
   * centralized control over many Merchant Center accounts.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.AccountAggregationOrBuilder
      getAccountAggregationOrBuilder() {
    if (serviceTypeCase_ == 103) {
      return (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.AccountAggregation.getDefaultInstance();
  }

  public static final int LOCAL_LISTING_MANAGEMENT_FIELD_NUMBER = 104;

  /**
   *
   *
   * <pre>
   * Service type for local listings management. The business group associated
   * with the external account id will be used to provide local inventory to
   * this Merchant Center account.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
   * </code>
   *
   * @return Whether the localListingManagement field is set.
   */
  @java.lang.Override
  public boolean hasLocalListingManagement() {
    return serviceTypeCase_ == 104;
  }

  /**
   *
   *
   * <pre>
   * Service type for local listings management. The business group associated
   * with the external account id will be used to provide local inventory to
   * this Merchant Center account.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
   * </code>
   *
   * @return The localListingManagement.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.LocalListingManagement
      getLocalListingManagement() {
    if (serviceTypeCase_ == 104) {
      return (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.LocalListingManagement.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Service type for local listings management. The business group associated
   * with the external account id will be used to provide local inventory to
   * this Merchant Center account.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.LocalListingManagementOrBuilder
      getLocalListingManagementOrBuilder() {
    if (serviceTypeCase_ == 104) {
      return (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_;
    }
    return com.google.shopping.merchant.accounts.v1.LocalListingManagement.getDefaultInstance();
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the account service.
   * Format: `accounts/{account}/services/{service}`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the account service.
   * Format: `accounts/{account}/services/{service}`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROVIDER_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object provider_ = "";

  /**
   *
   *
   * <pre>
   * Output only. The provider of the service. Either the reference to an
   * account such as `providers/123` or a well-known service provider (one of
   * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
   * </pre>
   *
   * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return Whether the provider field is set.
   */
  @java.lang.Override
  public boolean hasProvider() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Output only. The provider of the service. Either the reference to an
   * account such as `providers/123` or a well-known service provider (one of
   * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
   * </pre>
   *
   * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The provider.
   */
  @java.lang.Override
  public java.lang.String getProvider() {
    java.lang.Object ref = provider_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      provider_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Output only. The provider of the service. Either the reference to an
   * account such as `providers/123` or a well-known service provider (one of
   * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
   * </pre>
   *
   * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for provider.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getProviderBytes() {
    java.lang.Object ref = provider_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      provider_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROVIDER_DISPLAY_NAME_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object providerDisplayName_ = "";

  /**
   *
   *
   * <pre>
   * Output only. The human-readable display name of the provider account.
   * </pre>
   *
   * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The providerDisplayName.
   */
  @java.lang.Override
  public java.lang.String getProviderDisplayName() {
    java.lang.Object ref = providerDisplayName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      providerDisplayName_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Output only. The human-readable display name of the provider account.
   * </pre>
   *
   * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for providerDisplayName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getProviderDisplayNameBytes() {
    java.lang.Object ref = providerDisplayName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      providerDisplayName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HANDSHAKE_FIELD_NUMBER = 4;
  private com.google.shopping.merchant.accounts.v1.Handshake handshake_;

  /**
   *
   *
   * <pre>
   * Output only. Information about the state of the service in terms of
   * establishing it (e.g. is it pending approval or approved).
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the handshake field is set.
   */
  @java.lang.Override
  public boolean hasHandshake() {
    return ((bitField0_ & 0x00000002) != 0);
  }

  /**
   *
   *
   * <pre>
   * Output only. Information about the state of the service in terms of
   * establishing it (e.g. is it pending approval or approved).
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The handshake.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.Handshake getHandshake() {
    return handshake_ == null
        ? com.google.shopping.merchant.accounts.v1.Handshake.getDefaultInstance()
        : handshake_;
  }

  /**
   *
   *
   * <pre>
   * Output only. Information about the state of the service in terms of
   * establishing it (e.g. is it pending approval or approved).
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.HandshakeOrBuilder getHandshakeOrBuilder() {
    return handshake_ == null
        ? com.google.shopping.merchant.accounts.v1.Handshake.getDefaultInstance()
        : handshake_;
  }

  public static final int MUTABILITY_FIELD_NUMBER = 5;
  private int mutability_ = 0;

  /**
   *
   *
   * <pre>
   * Output only. Whether the service is mutable (e.g. through Approve / Reject
   * RPCs). A service that was created through another system or API might be
   * immutable.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for mutability.
   */
  @java.lang.Override
  public int getMutabilityValue() {
    return mutability_;
  }

  /**
   *
   *
   * <pre>
   * Output only. Whether the service is mutable (e.g. through Approve / Reject
   * RPCs). A service that was created through another system or API might be
   * immutable.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The mutability.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.AccountService.Mutability getMutability() {
    com.google.shopping.merchant.accounts.v1.AccountService.Mutability result =
        com.google.shopping.merchant.accounts.v1.AccountService.Mutability.forNumber(mutability_);
    return result == null
        ? com.google.shopping.merchant.accounts.v1.AccountService.Mutability.UNRECOGNIZED
        : result;
  }

  public static final int EXTERNAL_ACCOUNT_ID_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private volatile java.lang.Object externalAccountId_ = "";

  /**
   *
   *
   * <pre>
   * Immutable. An optional, immutable identifier that Google uses to refer to
   * this account when communicating with the provider. This should be the
   * unique account ID within the provider's system (for example, your shop ID
   * in Shopify).
   *
   * If you have multiple accounts with the same provider - for instance,
   * different accounts for various regions — the `external_account_id`
   * differentiates between them, ensuring accurate linking and integration
   * between Google and the provider.
   * </pre>
   *
   * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The externalAccountId.
   */
  @java.lang.Override
  public java.lang.String getExternalAccountId() {
    java.lang.Object ref = externalAccountId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      externalAccountId_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Immutable. An optional, immutable identifier that Google uses to refer to
   * this account when communicating with the provider. This should be the
   * unique account ID within the provider's system (for example, your shop ID
   * in Shopify).
   *
   * If you have multiple accounts with the same provider - for instance,
   * different accounts for various regions — the `external_account_id`
   * differentiates between them, ensuring accurate linking and integration
   * between Google and the provider.
   * </pre>
   *
   * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for externalAccountId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getExternalAccountIdBytes() {
    java.lang.Object ref = externalAccountId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      externalAccountId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, provider_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(providerDisplayName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, providerDisplayName_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getHandshake());
    }
    if (mutability_
        != com.google.shopping.merchant.accounts.v1.AccountService.Mutability.MUTABILITY_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(5, mutability_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(externalAccountId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, externalAccountId_);
    }
    if (serviceTypeCase_ == 100) {
      output.writeMessage(
          100, (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_);
    }
    if (serviceTypeCase_ == 101) {
      output.writeMessage(
          101, (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_);
    }
    if (serviceTypeCase_ == 102) {
      output.writeMessage(
          102, (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_);
    }
    if (serviceTypeCase_ == 103) {
      output.writeMessage(
          103, (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_);
    }
    if (serviceTypeCase_ == 104) {
      output.writeMessage(
          104, (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, provider_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(providerDisplayName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, providerDisplayName_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getHandshake());
    }
    if (mutability_
        != com.google.shopping.merchant.accounts.v1.AccountService.Mutability.MUTABILITY_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(5, mutability_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(externalAccountId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, externalAccountId_);
    }
    if (serviceTypeCase_ == 100) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              100, (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_);
    }
    if (serviceTypeCase_ == 101) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              101, (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_);
    }
    if (serviceTypeCase_ == 102) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              102, (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_);
    }
    if (serviceTypeCase_ == 103) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              103, (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_);
    }
    if (serviceTypeCase_ == 104) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              104, (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.shopping.merchant.accounts.v1.AccountService)) {
      return super.equals(obj);
    }
    com.google.shopping.merchant.accounts.v1.AccountService other =
        (com.google.shopping.merchant.accounts.v1.AccountService) obj;

    if (!getName().equals(other.getName())) return false;
    if (hasProvider() != other.hasProvider()) return false;
    if (hasProvider()) {
      if (!getProvider().equals(other.getProvider())) return false;
    }
    if (!getProviderDisplayName().equals(other.getProviderDisplayName())) return false;
    if (hasHandshake() != other.hasHandshake()) return false;
    if (hasHandshake()) {
      if (!getHandshake().equals(other.getHandshake())) return false;
    }
    if (mutability_ != other.mutability_) return false;
    if (!getExternalAccountId().equals(other.getExternalAccountId())) return false;
    if (!getServiceTypeCase().equals(other.getServiceTypeCase())) return false;
    switch (serviceTypeCase_) {
      case 100:
        if (!getProductsManagement().equals(other.getProductsManagement())) return false;
        break;
      case 101:
        if (!getCampaignsManagement().equals(other.getCampaignsManagement())) return false;
        break;
      case 102:
        if (!getAccountManagement().equals(other.getAccountManagement())) return false;
        break;
      case 103:
        if (!getAccountAggregation().equals(other.getAccountAggregation())) return false;
        break;
      case 104:
        if (!getLocalListingManagement().equals(other.getLocalListingManagement())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasProvider()) {
      hash = (37 * hash) + PROVIDER_FIELD_NUMBER;
      hash = (53 * hash) + getProvider().hashCode();
    }
    hash = (37 * hash) + PROVIDER_DISPLAY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getProviderDisplayName().hashCode();
    if (hasHandshake()) {
      hash = (37 * hash) + HANDSHAKE_FIELD_NUMBER;
      hash = (53 * hash) + getHandshake().hashCode();
    }
    hash = (37 * hash) + MUTABILITY_FIELD_NUMBER;
    hash = (53 * hash) + mutability_;
    hash = (37 * hash) + EXTERNAL_ACCOUNT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getExternalAccountId().hashCode();
    switch (serviceTypeCase_) {
      case 100:
        hash = (37 * hash) + PRODUCTS_MANAGEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getProductsManagement().hashCode();
        break;
      case 101:
        hash = (37 * hash) + CAMPAIGNS_MANAGEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getCampaignsManagement().hashCode();
        break;
      case 102:
        hash = (37 * hash) + ACCOUNT_MANAGEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getAccountManagement().hashCode();
        break;
      case 103:
        hash = (37 * hash) + ACCOUNT_AGGREGATION_FIELD_NUMBER;
        hash = (53 * hash) + getAccountAggregation().hashCode();
        break;
      case 104:
        hash = (37 * hash) + LOCAL_LISTING_MANAGEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getLocalListingManagement().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.shopping.merchant.accounts.v1.AccountService prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The `AccountService` message represents a specific service that a provider
   * account offers to a Merchant Center account.
   *
   * `AccountService` defines the permissions and capabilities granted to the
   * provider, allowing for operations such as product management or campaign
   * management.
   *
   * The lifecycle of an `AccountService` involves a proposal phase, where one
   * party suggests the service, and an approval phase, where the other party
   * accepts or rejects it. This handshake mechanism ensures mutual consent before
   * any access is granted. This mechanism safeguards both parties by ensuring
   * that access rights are granted appropriately and that both the business and
   * provider are aware of the services enabled. In scenarios where a user is an
   * admin of both accounts, the approval can happen automatically.
   *
   * The mutability of a service is also managed through `AccountService`. Some
   * services might be immutable, for example, if they were established through
   * other systems or APIs, and you cannot alter them through this API.
   * </pre>
   *
   * Protobuf type {@code google.shopping.merchant.accounts.v1.AccountService}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.shopping.merchant.accounts.v1.AccountService)
      com.google.shopping.merchant.accounts.v1.AccountServiceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.shopping.merchant.accounts.v1.AccountServicesProto
          .internal_static_google_shopping_merchant_accounts_v1_AccountService_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.shopping.merchant.accounts.v1.AccountServicesProto
          .internal_static_google_shopping_merchant_accounts_v1_AccountService_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.shopping.merchant.accounts.v1.AccountService.class,
              com.google.shopping.merchant.accounts.v1.AccountService.Builder.class);
    }

    // Construct using com.google.shopping.merchant.accounts.v1.AccountService.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getHandshakeFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (productsManagementBuilder_ != null) {
        productsManagementBuilder_.clear();
      }
      if (campaignsManagementBuilder_ != null) {
        campaignsManagementBuilder_.clear();
      }
      if (accountManagementBuilder_ != null) {
        accountManagementBuilder_.clear();
      }
      if (accountAggregationBuilder_ != null) {
        accountAggregationBuilder_.clear();
      }
      if (localListingManagementBuilder_ != null) {
        localListingManagementBuilder_.clear();
      }
      name_ = "";
      provider_ = "";
      providerDisplayName_ = "";
      handshake_ = null;
      if (handshakeBuilder_ != null) {
        handshakeBuilder_.dispose();
        handshakeBuilder_ = null;
      }
      mutability_ = 0;
      externalAccountId_ = "";
      serviceTypeCase_ = 0;
      serviceType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.shopping.merchant.accounts.v1.AccountServicesProto
          .internal_static_google_shopping_merchant_accounts_v1_AccountService_descriptor;
    }

    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountService getDefaultInstanceForType() {
      return com.google.shopping.merchant.accounts.v1.AccountService.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountService build() {
      com.google.shopping.merchant.accounts.v1.AccountService result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountService buildPartial() {
      com.google.shopping.merchant.accounts.v1.AccountService result =
          new com.google.shopping.merchant.accounts.v1.AccountService(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.shopping.merchant.accounts.v1.AccountService result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.provider_ = provider_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.providerDisplayName_ = providerDisplayName_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.handshake_ = handshakeBuilder_ == null ? handshake_ : handshakeBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.mutability_ = mutability_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.externalAccountId_ = externalAccountId_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(
        com.google.shopping.merchant.accounts.v1.AccountService result) {
      result.serviceTypeCase_ = serviceTypeCase_;
      result.serviceType_ = this.serviceType_;
      if (serviceTypeCase_ == 100 && productsManagementBuilder_ != null) {
        result.serviceType_ = productsManagementBuilder_.build();
      }
      if (serviceTypeCase_ == 101 && campaignsManagementBuilder_ != null) {
        result.serviceType_ = campaignsManagementBuilder_.build();
      }
      if (serviceTypeCase_ == 102 && accountManagementBuilder_ != null) {
        result.serviceType_ = accountManagementBuilder_.build();
      }
      if (serviceTypeCase_ == 103 && accountAggregationBuilder_ != null) {
        result.serviceType_ = accountAggregationBuilder_.build();
      }
      if (serviceTypeCase_ == 104 && localListingManagementBuilder_ != null) {
        result.serviceType_ = localListingManagementBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.shopping.merchant.accounts.v1.AccountService) {
        return mergeFrom((com.google.shopping.merchant.accounts.v1.AccountService) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.shopping.merchant.accounts.v1.AccountService other) {
      if (other == com.google.shopping.merchant.accounts.v1.AccountService.getDefaultInstance())
        return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasProvider()) {
        provider_ = other.provider_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (!other.getProviderDisplayName().isEmpty()) {
        providerDisplayName_ = other.providerDisplayName_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (other.hasHandshake()) {
        mergeHandshake(other.getHandshake());
      }
      if (other.mutability_ != 0) {
        setMutabilityValue(other.getMutabilityValue());
      }
      if (!other.getExternalAccountId().isEmpty()) {
        externalAccountId_ = other.externalAccountId_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      switch (other.getServiceTypeCase()) {
        case PRODUCTS_MANAGEMENT:
          {
            mergeProductsManagement(other.getProductsManagement());
            break;
          }
        case CAMPAIGNS_MANAGEMENT:
          {
            mergeCampaignsManagement(other.getCampaignsManagement());
            break;
          }
        case ACCOUNT_MANAGEMENT:
          {
            mergeAccountManagement(other.getAccountManagement());
            break;
          }
        case ACCOUNT_AGGREGATION:
          {
            mergeAccountAggregation(other.getAccountAggregation());
            break;
          }
        case LOCAL_LISTING_MANAGEMENT:
          {
            mergeLocalListingManagement(other.getLocalListingManagement());
            break;
          }
        case SERVICETYPE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 10
            case 18:
              {
                provider_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 18
            case 26:
              {
                providerDisplayName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(getHandshakeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 34
            case 40:
              {
                mutability_ = input.readEnum();
                bitField0_ |= 0x00000200;
                break;
              } // case 40
            case 50:
              {
                externalAccountId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 50
            case 802:
              {
                input.readMessage(
                    getProductsManagementFieldBuilder().getBuilder(), extensionRegistry);
                serviceTypeCase_ = 100;
                break;
              } // case 802
            case 810:
              {
                input.readMessage(
                    getCampaignsManagementFieldBuilder().getBuilder(), extensionRegistry);
                serviceTypeCase_ = 101;
                break;
              } // case 810
            case 818:
              {
                input.readMessage(
                    getAccountManagementFieldBuilder().getBuilder(), extensionRegistry);
                serviceTypeCase_ = 102;
                break;
              } // case 818
            case 826:
              {
                input.readMessage(
                    getAccountAggregationFieldBuilder().getBuilder(), extensionRegistry);
                serviceTypeCase_ = 103;
                break;
              } // case 826
            case 834:
              {
                input.readMessage(
                    getLocalListingManagementFieldBuilder().getBuilder(), extensionRegistry);
                serviceTypeCase_ = 104;
                break;
              } // case 834
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int serviceTypeCase_ = 0;
    private java.lang.Object serviceType_;

    public ServiceTypeCase getServiceTypeCase() {
      return ServiceTypeCase.forNumber(serviceTypeCase_);
    }

    public Builder clearServiceType() {
      serviceTypeCase_ = 0;
      serviceType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.ProductsManagement,
            com.google.shopping.merchant.accounts.v1.ProductsManagement.Builder,
            com.google.shopping.merchant.accounts.v1.ProductsManagementOrBuilder>
        productsManagementBuilder_;

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     *
     * @return Whether the productsManagement field is set.
     */
    @java.lang.Override
    public boolean hasProductsManagement() {
      return serviceTypeCase_ == 100;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     *
     * @return The productsManagement.
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.ProductsManagement getProductsManagement() {
      if (productsManagementBuilder_ == null) {
        if (serviceTypeCase_ == 100) {
          return (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.ProductsManagement.getDefaultInstance();
      } else {
        if (serviceTypeCase_ == 100) {
          return productsManagementBuilder_.getMessage();
        }
        return com.google.shopping.merchant.accounts.v1.ProductsManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    public Builder setProductsManagement(
        com.google.shopping.merchant.accounts.v1.ProductsManagement value) {
      if (productsManagementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceType_ = value;
        onChanged();
      } else {
        productsManagementBuilder_.setMessage(value);
      }
      serviceTypeCase_ = 100;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    public Builder setProductsManagement(
        com.google.shopping.merchant.accounts.v1.ProductsManagement.Builder builderForValue) {
      if (productsManagementBuilder_ == null) {
        serviceType_ = builderForValue.build();
        onChanged();
      } else {
        productsManagementBuilder_.setMessage(builderForValue.build());
      }
      serviceTypeCase_ = 100;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    public Builder mergeProductsManagement(
        com.google.shopping.merchant.accounts.v1.ProductsManagement value) {
      if (productsManagementBuilder_ == null) {
        if (serviceTypeCase_ == 100
            && serviceType_
                != com.google.shopping.merchant.accounts.v1.ProductsManagement
                    .getDefaultInstance()) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.ProductsManagement.newBuilder(
                      (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          serviceType_ = value;
        }
        onChanged();
      } else {
        if (serviceTypeCase_ == 100) {
          productsManagementBuilder_.mergeFrom(value);
        } else {
          productsManagementBuilder_.setMessage(value);
        }
      }
      serviceTypeCase_ = 100;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    public Builder clearProductsManagement() {
      if (productsManagementBuilder_ == null) {
        if (serviceTypeCase_ == 100) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
          onChanged();
        }
      } else {
        if (serviceTypeCase_ == 100) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
        }
        productsManagementBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.ProductsManagement.Builder
        getProductsManagementBuilder() {
      return getProductsManagementFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.ProductsManagementOrBuilder
        getProductsManagementOrBuilder() {
      if ((serviceTypeCase_ == 100) && (productsManagementBuilder_ != null)) {
        return productsManagementBuilder_.getMessageOrBuilder();
      } else {
        if (serviceTypeCase_ == 100) {
          return (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.ProductsManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for managing products. This allows the provider to handle
     * product data on behalf of the business, including reading and writing
     * product listings. It's commonly used when the provider offers inventory
     * management or catalog synchronization services to keep the business's
     * product information up-to-date across platforms.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.ProductsManagement products_management = 100;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.ProductsManagement,
            com.google.shopping.merchant.accounts.v1.ProductsManagement.Builder,
            com.google.shopping.merchant.accounts.v1.ProductsManagementOrBuilder>
        getProductsManagementFieldBuilder() {
      if (productsManagementBuilder_ == null) {
        if (!(serviceTypeCase_ == 100)) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.ProductsManagement.getDefaultInstance();
        }
        productsManagementBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1.ProductsManagement,
                com.google.shopping.merchant.accounts.v1.ProductsManagement.Builder,
                com.google.shopping.merchant.accounts.v1.ProductsManagementOrBuilder>(
                (com.google.shopping.merchant.accounts.v1.ProductsManagement) serviceType_,
                getParentForChildren(),
                isClean());
        serviceType_ = null;
      }
      serviceTypeCase_ = 100;
      onChanged();
      return productsManagementBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.CampaignsManagement,
            com.google.shopping.merchant.accounts.v1.CampaignsManagement.Builder,
            com.google.shopping.merchant.accounts.v1.CampaignsManagementOrBuilder>
        campaignsManagementBuilder_;

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     *
     * @return Whether the campaignsManagement field is set.
     */
    @java.lang.Override
    public boolean hasCampaignsManagement() {
      return serviceTypeCase_ == 101;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     *
     * @return The campaignsManagement.
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.CampaignsManagement getCampaignsManagement() {
      if (campaignsManagementBuilder_ == null) {
        if (serviceTypeCase_ == 101) {
          return (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.CampaignsManagement.getDefaultInstance();
      } else {
        if (serviceTypeCase_ == 101) {
          return campaignsManagementBuilder_.getMessage();
        }
        return com.google.shopping.merchant.accounts.v1.CampaignsManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    public Builder setCampaignsManagement(
        com.google.shopping.merchant.accounts.v1.CampaignsManagement value) {
      if (campaignsManagementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceType_ = value;
        onChanged();
      } else {
        campaignsManagementBuilder_.setMessage(value);
      }
      serviceTypeCase_ = 101;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    public Builder setCampaignsManagement(
        com.google.shopping.merchant.accounts.v1.CampaignsManagement.Builder builderForValue) {
      if (campaignsManagementBuilder_ == null) {
        serviceType_ = builderForValue.build();
        onChanged();
      } else {
        campaignsManagementBuilder_.setMessage(builderForValue.build());
      }
      serviceTypeCase_ = 101;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    public Builder mergeCampaignsManagement(
        com.google.shopping.merchant.accounts.v1.CampaignsManagement value) {
      if (campaignsManagementBuilder_ == null) {
        if (serviceTypeCase_ == 101
            && serviceType_
                != com.google.shopping.merchant.accounts.v1.CampaignsManagement
                    .getDefaultInstance()) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.CampaignsManagement.newBuilder(
                      (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          serviceType_ = value;
        }
        onChanged();
      } else {
        if (serviceTypeCase_ == 101) {
          campaignsManagementBuilder_.mergeFrom(value);
        } else {
          campaignsManagementBuilder_.setMessage(value);
        }
      }
      serviceTypeCase_ = 101;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    public Builder clearCampaignsManagement() {
      if (campaignsManagementBuilder_ == null) {
        if (serviceTypeCase_ == 101) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
          onChanged();
        }
      } else {
        if (serviceTypeCase_ == 101) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
        }
        campaignsManagementBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.CampaignsManagement.Builder
        getCampaignsManagementBuilder() {
      return getCampaignsManagementFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.CampaignsManagementOrBuilder
        getCampaignsManagementOrBuilder() {
      if ((serviceTypeCase_ == 101) && (campaignsManagementBuilder_ != null)) {
        return campaignsManagementBuilder_.getMessageOrBuilder();
      } else {
        if (serviceTypeCase_ == 101) {
          return (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.CampaignsManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for managing advertising campaigns. Grants the provider
     * access to create and manage the business's ad campaigns, including
     * setting up campaigns, adjusting bids, and optimizing performance.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.CampaignsManagement campaigns_management = 101;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.CampaignsManagement,
            com.google.shopping.merchant.accounts.v1.CampaignsManagement.Builder,
            com.google.shopping.merchant.accounts.v1.CampaignsManagementOrBuilder>
        getCampaignsManagementFieldBuilder() {
      if (campaignsManagementBuilder_ == null) {
        if (!(serviceTypeCase_ == 101)) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.CampaignsManagement.getDefaultInstance();
        }
        campaignsManagementBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1.CampaignsManagement,
                com.google.shopping.merchant.accounts.v1.CampaignsManagement.Builder,
                com.google.shopping.merchant.accounts.v1.CampaignsManagementOrBuilder>(
                (com.google.shopping.merchant.accounts.v1.CampaignsManagement) serviceType_,
                getParentForChildren(),
                isClean());
        serviceType_ = null;
      }
      serviceTypeCase_ = 101;
      onChanged();
      return campaignsManagementBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.AccountManagement,
            com.google.shopping.merchant.accounts.v1.AccountManagement.Builder,
            com.google.shopping.merchant.accounts.v1.AccountManagementOrBuilder>
        accountManagementBuilder_;

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     *
     * @return Whether the accountManagement field is set.
     */
    @java.lang.Override
    public boolean hasAccountManagement() {
      return serviceTypeCase_ == 102;
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     *
     * @return The accountManagement.
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountManagement getAccountManagement() {
      if (accountManagementBuilder_ == null) {
        if (serviceTypeCase_ == 102) {
          return (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.AccountManagement.getDefaultInstance();
      } else {
        if (serviceTypeCase_ == 102) {
          return accountManagementBuilder_.getMessage();
        }
        return com.google.shopping.merchant.accounts.v1.AccountManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    public Builder setAccountManagement(
        com.google.shopping.merchant.accounts.v1.AccountManagement value) {
      if (accountManagementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceType_ = value;
        onChanged();
      } else {
        accountManagementBuilder_.setMessage(value);
      }
      serviceTypeCase_ = 102;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    public Builder setAccountManagement(
        com.google.shopping.merchant.accounts.v1.AccountManagement.Builder builderForValue) {
      if (accountManagementBuilder_ == null) {
        serviceType_ = builderForValue.build();
        onChanged();
      } else {
        accountManagementBuilder_.setMessage(builderForValue.build());
      }
      serviceTypeCase_ = 102;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    public Builder mergeAccountManagement(
        com.google.shopping.merchant.accounts.v1.AccountManagement value) {
      if (accountManagementBuilder_ == null) {
        if (serviceTypeCase_ == 102
            && serviceType_
                != com.google.shopping.merchant.accounts.v1.AccountManagement
                    .getDefaultInstance()) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.AccountManagement.newBuilder(
                      (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          serviceType_ = value;
        }
        onChanged();
      } else {
        if (serviceTypeCase_ == 102) {
          accountManagementBuilder_.mergeFrom(value);
        } else {
          accountManagementBuilder_.setMessage(value);
        }
      }
      serviceTypeCase_ = 102;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    public Builder clearAccountManagement() {
      if (accountManagementBuilder_ == null) {
        if (serviceTypeCase_ == 102) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
          onChanged();
        }
      } else {
        if (serviceTypeCase_ == 102) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
        }
        accountManagementBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.AccountManagement.Builder
        getAccountManagementBuilder() {
      return getAccountManagementFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountManagementOrBuilder
        getAccountManagementOrBuilder() {
      if ((serviceTypeCase_ == 102) && (accountManagementBuilder_ != null)) {
        return accountManagementBuilder_.getMessageOrBuilder();
      } else {
        if (serviceTypeCase_ == 102) {
          return (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.AccountManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for account management. Enables the provider to perform
     * administrative actions on the business's account, such as
     * configuring account settings, managing users, or updating business
     * information.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountManagement account_management = 102;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.AccountManagement,
            com.google.shopping.merchant.accounts.v1.AccountManagement.Builder,
            com.google.shopping.merchant.accounts.v1.AccountManagementOrBuilder>
        getAccountManagementFieldBuilder() {
      if (accountManagementBuilder_ == null) {
        if (!(serviceTypeCase_ == 102)) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.AccountManagement.getDefaultInstance();
        }
        accountManagementBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1.AccountManagement,
                com.google.shopping.merchant.accounts.v1.AccountManagement.Builder,
                com.google.shopping.merchant.accounts.v1.AccountManagementOrBuilder>(
                (com.google.shopping.merchant.accounts.v1.AccountManagement) serviceType_,
                getParentForChildren(),
                isClean());
        serviceType_ = null;
      }
      serviceTypeCase_ = 102;
      onChanged();
      return accountManagementBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.AccountAggregation,
            com.google.shopping.merchant.accounts.v1.AccountAggregation.Builder,
            com.google.shopping.merchant.accounts.v1.AccountAggregationOrBuilder>
        accountAggregationBuilder_;

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     *
     * @return Whether the accountAggregation field is set.
     */
    @java.lang.Override
    public boolean hasAccountAggregation() {
      return serviceTypeCase_ == 103;
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     *
     * @return The accountAggregation.
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountAggregation getAccountAggregation() {
      if (accountAggregationBuilder_ == null) {
        if (serviceTypeCase_ == 103) {
          return (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.AccountAggregation.getDefaultInstance();
      } else {
        if (serviceTypeCase_ == 103) {
          return accountAggregationBuilder_.getMessage();
        }
        return com.google.shopping.merchant.accounts.v1.AccountAggregation.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    public Builder setAccountAggregation(
        com.google.shopping.merchant.accounts.v1.AccountAggregation value) {
      if (accountAggregationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceType_ = value;
        onChanged();
      } else {
        accountAggregationBuilder_.setMessage(value);
      }
      serviceTypeCase_ = 103;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    public Builder setAccountAggregation(
        com.google.shopping.merchant.accounts.v1.AccountAggregation.Builder builderForValue) {
      if (accountAggregationBuilder_ == null) {
        serviceType_ = builderForValue.build();
        onChanged();
      } else {
        accountAggregationBuilder_.setMessage(builderForValue.build());
      }
      serviceTypeCase_ = 103;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    public Builder mergeAccountAggregation(
        com.google.shopping.merchant.accounts.v1.AccountAggregation value) {
      if (accountAggregationBuilder_ == null) {
        if (serviceTypeCase_ == 103
            && serviceType_
                != com.google.shopping.merchant.accounts.v1.AccountAggregation
                    .getDefaultInstance()) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.AccountAggregation.newBuilder(
                      (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          serviceType_ = value;
        }
        onChanged();
      } else {
        if (serviceTypeCase_ == 103) {
          accountAggregationBuilder_.mergeFrom(value);
        } else {
          accountAggregationBuilder_.setMessage(value);
        }
      }
      serviceTypeCase_ = 103;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    public Builder clearAccountAggregation() {
      if (accountAggregationBuilder_ == null) {
        if (serviceTypeCase_ == 103) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
          onChanged();
        }
      } else {
        if (serviceTypeCase_ == 103) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
        }
        accountAggregationBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.AccountAggregation.Builder
        getAccountAggregationBuilder() {
      return getAccountAggregationFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountAggregationOrBuilder
        getAccountAggregationOrBuilder() {
      if ((serviceTypeCase_ == 103) && (accountAggregationBuilder_ != null)) {
        return accountAggregationBuilder_.getMessageOrBuilder();
      } else {
        if (serviceTypeCase_ == 103) {
          return (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.AccountAggregation.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for account aggregation. This enables the provider, which is
     * an advanced account, to manage multiple sub-accounts (client
     * accounts). Through this service, the advanced account provider can
     * perform administrative and operational tasks across all linked
     * sub-accounts.
     *
     * This is useful for agencies, aggregators, or large retailers that need
     * centralized control over many Merchant Center accounts.
     * </pre>
     *
     * <code>.google.shopping.merchant.accounts.v1.AccountAggregation account_aggregation = 103;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.AccountAggregation,
            com.google.shopping.merchant.accounts.v1.AccountAggregation.Builder,
            com.google.shopping.merchant.accounts.v1.AccountAggregationOrBuilder>
        getAccountAggregationFieldBuilder() {
      if (accountAggregationBuilder_ == null) {
        if (!(serviceTypeCase_ == 103)) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.AccountAggregation.getDefaultInstance();
        }
        accountAggregationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1.AccountAggregation,
                com.google.shopping.merchant.accounts.v1.AccountAggregation.Builder,
                com.google.shopping.merchant.accounts.v1.AccountAggregationOrBuilder>(
                (com.google.shopping.merchant.accounts.v1.AccountAggregation) serviceType_,
                getParentForChildren(),
                isClean());
        serviceType_ = null;
      }
      serviceTypeCase_ = 103;
      onChanged();
      return accountAggregationBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.LocalListingManagement,
            com.google.shopping.merchant.accounts.v1.LocalListingManagement.Builder,
            com.google.shopping.merchant.accounts.v1.LocalListingManagementOrBuilder>
        localListingManagementBuilder_;

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     *
     * @return Whether the localListingManagement field is set.
     */
    @java.lang.Override
    public boolean hasLocalListingManagement() {
      return serviceTypeCase_ == 104;
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     *
     * @return The localListingManagement.
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.LocalListingManagement
        getLocalListingManagement() {
      if (localListingManagementBuilder_ == null) {
        if (serviceTypeCase_ == 104) {
          return (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.LocalListingManagement.getDefaultInstance();
      } else {
        if (serviceTypeCase_ == 104) {
          return localListingManagementBuilder_.getMessage();
        }
        return com.google.shopping.merchant.accounts.v1.LocalListingManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    public Builder setLocalListingManagement(
        com.google.shopping.merchant.accounts.v1.LocalListingManagement value) {
      if (localListingManagementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceType_ = value;
        onChanged();
      } else {
        localListingManagementBuilder_.setMessage(value);
      }
      serviceTypeCase_ = 104;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    public Builder setLocalListingManagement(
        com.google.shopping.merchant.accounts.v1.LocalListingManagement.Builder builderForValue) {
      if (localListingManagementBuilder_ == null) {
        serviceType_ = builderForValue.build();
        onChanged();
      } else {
        localListingManagementBuilder_.setMessage(builderForValue.build());
      }
      serviceTypeCase_ = 104;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    public Builder mergeLocalListingManagement(
        com.google.shopping.merchant.accounts.v1.LocalListingManagement value) {
      if (localListingManagementBuilder_ == null) {
        if (serviceTypeCase_ == 104
            && serviceType_
                != com.google.shopping.merchant.accounts.v1.LocalListingManagement
                    .getDefaultInstance()) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.LocalListingManagement.newBuilder(
                      (com.google.shopping.merchant.accounts.v1.LocalListingManagement)
                          serviceType_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          serviceType_ = value;
        }
        onChanged();
      } else {
        if (serviceTypeCase_ == 104) {
          localListingManagementBuilder_.mergeFrom(value);
        } else {
          localListingManagementBuilder_.setMessage(value);
        }
      }
      serviceTypeCase_ = 104;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    public Builder clearLocalListingManagement() {
      if (localListingManagementBuilder_ == null) {
        if (serviceTypeCase_ == 104) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
          onChanged();
        }
      } else {
        if (serviceTypeCase_ == 104) {
          serviceTypeCase_ = 0;
          serviceType_ = null;
        }
        localListingManagementBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.LocalListingManagement.Builder
        getLocalListingManagementBuilder() {
      return getLocalListingManagementFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.LocalListingManagementOrBuilder
        getLocalListingManagementOrBuilder() {
      if ((serviceTypeCase_ == 104) && (localListingManagementBuilder_ != null)) {
        return localListingManagementBuilder_.getMessageOrBuilder();
      } else {
        if (serviceTypeCase_ == 104) {
          return (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_;
        }
        return com.google.shopping.merchant.accounts.v1.LocalListingManagement.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Service type for local listings management. The business group associated
     * with the external account id will be used to provide local inventory to
     * this Merchant Center account.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.LocalListingManagement local_listing_management = 104;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.LocalListingManagement,
            com.google.shopping.merchant.accounts.v1.LocalListingManagement.Builder,
            com.google.shopping.merchant.accounts.v1.LocalListingManagementOrBuilder>
        getLocalListingManagementFieldBuilder() {
      if (localListingManagementBuilder_ == null) {
        if (!(serviceTypeCase_ == 104)) {
          serviceType_ =
              com.google.shopping.merchant.accounts.v1.LocalListingManagement.getDefaultInstance();
        }
        localListingManagementBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1.LocalListingManagement,
                com.google.shopping.merchant.accounts.v1.LocalListingManagement.Builder,
                com.google.shopping.merchant.accounts.v1.LocalListingManagementOrBuilder>(
                (com.google.shopping.merchant.accounts.v1.LocalListingManagement) serviceType_,
                getParentForChildren(),
                isClean());
        serviceType_ = null;
      }
      serviceTypeCase_ = 104;
      onChanged();
      return localListingManagementBuilder_;
    }

    private java.lang.Object name_ = "";

    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the account service.
     * Format: `accounts/{account}/services/{service}`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the account service.
     * Format: `accounts/{account}/services/{service}`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the account service.
     * Format: `accounts/{account}/services/{service}`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the account service.
     * Format: `accounts/{account}/services/{service}`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the account service.
     * Format: `accounts/{account}/services/{service}`
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object provider_ = "";

    /**
     *
     *
     * <pre>
     * Output only. The provider of the service. Either the reference to an
     * account such as `providers/123` or a well-known service provider (one of
     * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
     * </pre>
     *
     * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return Whether the provider field is set.
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000040) != 0);
    }

    /**
     *
     *
     * <pre>
     * Output only. The provider of the service. Either the reference to an
     * account such as `providers/123` or a well-known service provider (one of
     * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
     * </pre>
     *
     * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The provider.
     */
    public java.lang.String getProvider() {
      java.lang.Object ref = provider_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        provider_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The provider of the service. Either the reference to an
     * account such as `providers/123` or a well-known service provider (one of
     * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
     * </pre>
     *
     * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for provider.
     */
    public com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The provider of the service. Either the reference to an
     * account such as `providers/123` or a well-known service provider (one of
     * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
     * </pre>
     *
     * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The provider to set.
     * @return This builder for chaining.
     */
    public Builder setProvider(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      provider_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The provider of the service. Either the reference to an
     * account such as `providers/123` or a well-known service provider (one of
     * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
     * </pre>
     *
     * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProvider() {
      provider_ = getDefaultInstance().getProvider();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The provider of the service. Either the reference to an
     * account such as `providers/123` or a well-known service provider (one of
     * `providers/GOOGLE_ADS` or `providers/GOOGLE_BUSINESS_PROFILE`).
     * </pre>
     *
     * <code>optional string provider = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for provider to set.
     * @return This builder for chaining.
     */
    public Builder setProviderBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      provider_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private java.lang.Object providerDisplayName_ = "";

    /**
     *
     *
     * <pre>
     * Output only. The human-readable display name of the provider account.
     * </pre>
     *
     * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The providerDisplayName.
     */
    public java.lang.String getProviderDisplayName() {
      java.lang.Object ref = providerDisplayName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        providerDisplayName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The human-readable display name of the provider account.
     * </pre>
     *
     * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for providerDisplayName.
     */
    public com.google.protobuf.ByteString getProviderDisplayNameBytes() {
      java.lang.Object ref = providerDisplayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        providerDisplayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The human-readable display name of the provider account.
     * </pre>
     *
     * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The providerDisplayName to set.
     * @return This builder for chaining.
     */
    public Builder setProviderDisplayName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      providerDisplayName_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The human-readable display name of the provider account.
     * </pre>
     *
     * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProviderDisplayName() {
      providerDisplayName_ = getDefaultInstance().getProviderDisplayName();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The human-readable display name of the provider account.
     * </pre>
     *
     * <code>string provider_display_name = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for providerDisplayName to set.
     * @return This builder for chaining.
     */
    public Builder setProviderDisplayNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      providerDisplayName_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private com.google.shopping.merchant.accounts.v1.Handshake handshake_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.Handshake,
            com.google.shopping.merchant.accounts.v1.Handshake.Builder,
            com.google.shopping.merchant.accounts.v1.HandshakeOrBuilder>
        handshakeBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the handshake field is set.
     */
    public boolean hasHandshake() {
      return ((bitField0_ & 0x00000100) != 0);
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The handshake.
     */
    public com.google.shopping.merchant.accounts.v1.Handshake getHandshake() {
      if (handshakeBuilder_ == null) {
        return handshake_ == null
            ? com.google.shopping.merchant.accounts.v1.Handshake.getDefaultInstance()
            : handshake_;
      } else {
        return handshakeBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setHandshake(com.google.shopping.merchant.accounts.v1.Handshake value) {
      if (handshakeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        handshake_ = value;
      } else {
        handshakeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setHandshake(
        com.google.shopping.merchant.accounts.v1.Handshake.Builder builderForValue) {
      if (handshakeBuilder_ == null) {
        handshake_ = builderForValue.build();
      } else {
        handshakeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeHandshake(com.google.shopping.merchant.accounts.v1.Handshake value) {
      if (handshakeBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)
            && handshake_ != null
            && handshake_
                != com.google.shopping.merchant.accounts.v1.Handshake.getDefaultInstance()) {
          getHandshakeBuilder().mergeFrom(value);
        } else {
          handshake_ = value;
        }
      } else {
        handshakeBuilder_.mergeFrom(value);
      }
      if (handshake_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearHandshake() {
      bitField0_ = (bitField0_ & ~0x00000100);
      handshake_ = null;
      if (handshakeBuilder_ != null) {
        handshakeBuilder_.dispose();
        handshakeBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.Handshake.Builder getHandshakeBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getHandshakeFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1.HandshakeOrBuilder getHandshakeOrBuilder() {
      if (handshakeBuilder_ != null) {
        return handshakeBuilder_.getMessageOrBuilder();
      } else {
        return handshake_ == null
            ? com.google.shopping.merchant.accounts.v1.Handshake.getDefaultInstance()
            : handshake_;
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. Information about the state of the service in terms of
     * establishing it (e.g. is it pending approval or approved).
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.Handshake handshake = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1.Handshake,
            com.google.shopping.merchant.accounts.v1.Handshake.Builder,
            com.google.shopping.merchant.accounts.v1.HandshakeOrBuilder>
        getHandshakeFieldBuilder() {
      if (handshakeBuilder_ == null) {
        handshakeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1.Handshake,
                com.google.shopping.merchant.accounts.v1.Handshake.Builder,
                com.google.shopping.merchant.accounts.v1.HandshakeOrBuilder>(
                getHandshake(), getParentForChildren(), isClean());
        handshake_ = null;
      }
      return handshakeBuilder_;
    }

    private int mutability_ = 0;

    /**
     *
     *
     * <pre>
     * Output only. Whether the service is mutable (e.g. through Approve / Reject
     * RPCs). A service that was created through another system or API might be
     * immutable.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for mutability.
     */
    @java.lang.Override
    public int getMutabilityValue() {
      return mutability_;
    }

    /**
     *
     *
     * <pre>
     * Output only. Whether the service is mutable (e.g. through Approve / Reject
     * RPCs). A service that was created through another system or API might be
     * immutable.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for mutability to set.
     * @return This builder for chaining.
     */
    public Builder setMutabilityValue(int value) {
      mutability_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. Whether the service is mutable (e.g. through Approve / Reject
     * RPCs). A service that was created through another system or API might be
     * immutable.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The mutability.
     */
    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1.AccountService.Mutability getMutability() {
      com.google.shopping.merchant.accounts.v1.AccountService.Mutability result =
          com.google.shopping.merchant.accounts.v1.AccountService.Mutability.forNumber(mutability_);
      return result == null
          ? com.google.shopping.merchant.accounts.v1.AccountService.Mutability.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Output only. Whether the service is mutable (e.g. through Approve / Reject
     * RPCs). A service that was created through another system or API might be
     * immutable.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The mutability to set.
     * @return This builder for chaining.
     */
    public Builder setMutability(
        com.google.shopping.merchant.accounts.v1.AccountService.Mutability value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      mutability_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. Whether the service is mutable (e.g. through Approve / Reject
     * RPCs). A service that was created through another system or API might be
     * immutable.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.accounts.v1.AccountService.Mutability mutability = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMutability() {
      bitField0_ = (bitField0_ & ~0x00000200);
      mutability_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object externalAccountId_ = "";

    /**
     *
     *
     * <pre>
     * Immutable. An optional, immutable identifier that Google uses to refer to
     * this account when communicating with the provider. This should be the
     * unique account ID within the provider's system (for example, your shop ID
     * in Shopify).
     *
     * If you have multiple accounts with the same provider - for instance,
     * different accounts for various regions — the `external_account_id`
     * differentiates between them, ensuring accurate linking and integration
     * between Google and the provider.
     * </pre>
     *
     * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @return The externalAccountId.
     */
    public java.lang.String getExternalAccountId() {
      java.lang.Object ref = externalAccountId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        externalAccountId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Immutable. An optional, immutable identifier that Google uses to refer to
     * this account when communicating with the provider. This should be the
     * unique account ID within the provider's system (for example, your shop ID
     * in Shopify).
     *
     * If you have multiple accounts with the same provider - for instance,
     * different accounts for various regions — the `external_account_id`
     * differentiates between them, ensuring accurate linking and integration
     * between Google and the provider.
     * </pre>
     *
     * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @return The bytes for externalAccountId.
     */
    public com.google.protobuf.ByteString getExternalAccountIdBytes() {
      java.lang.Object ref = externalAccountId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        externalAccountId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Immutable. An optional, immutable identifier that Google uses to refer to
     * this account when communicating with the provider. This should be the
     * unique account ID within the provider's system (for example, your shop ID
     * in Shopify).
     *
     * If you have multiple accounts with the same provider - for instance,
     * different accounts for various regions — the `external_account_id`
     * differentiates between them, ensuring accurate linking and integration
     * between Google and the provider.
     * </pre>
     *
     * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @param value The externalAccountId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalAccountId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      externalAccountId_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Immutable. An optional, immutable identifier that Google uses to refer to
     * this account when communicating with the provider. This should be the
     * unique account ID within the provider's system (for example, your shop ID
     * in Shopify).
     *
     * If you have multiple accounts with the same provider - for instance,
     * different accounts for various regions — the `external_account_id`
     * differentiates between them, ensuring accurate linking and integration
     * between Google and the provider.
     * </pre>
     *
     * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearExternalAccountId() {
      externalAccountId_ = getDefaultInstance().getExternalAccountId();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Immutable. An optional, immutable identifier that Google uses to refer to
     * this account when communicating with the provider. This should be the
     * unique account ID within the provider's system (for example, your shop ID
     * in Shopify).
     *
     * If you have multiple accounts with the same provider - for instance,
     * different accounts for various regions — the `external_account_id`
     * differentiates between them, ensuring accurate linking and integration
     * between Google and the provider.
     * </pre>
     *
     * <code>string external_account_id = 6 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @param value The bytes for externalAccountId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalAccountIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      externalAccountId_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.shopping.merchant.accounts.v1.AccountService)
  }

  // @@protoc_insertion_point(class_scope:google.shopping.merchant.accounts.v1.AccountService)
  private static final com.google.shopping.merchant.accounts.v1.AccountService DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.shopping.merchant.accounts.v1.AccountService();
  }

  public static com.google.shopping.merchant.accounts.v1.AccountService getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AccountService> PARSER =
      new com.google.protobuf.AbstractParser<AccountService>() {
        @java.lang.Override
        public AccountService parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AccountService> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AccountService> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1.AccountService getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
