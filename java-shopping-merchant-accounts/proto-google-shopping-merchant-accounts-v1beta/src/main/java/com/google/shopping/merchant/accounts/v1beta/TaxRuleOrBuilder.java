/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/accounts/v1beta/tax_rule.proto

// Protobuf Java Version: 3.25.5
package com.google.shopping.merchant.accounts.v1beta;

public interface TaxRuleOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.merchant.accounts.v1beta.TaxRule)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The admin_id or criteria_id of the region in which this rule is
   * applicable.
   * </pre>
   *
   * <code>int64 location_id = 2;</code>
   *
   * @return Whether the locationId field is set.
   */
  boolean hasLocationId();
  /**
   *
   *
   * <pre>
   * The admin_id or criteria_id of the region in which this rule is
   * applicable.
   * </pre>
   *
   * <code>int64 location_id = 2;</code>
   *
   * @return The locationId.
   */
  long getLocationId();

  /**
   *
   *
   * <pre>
   * The range of postal codes in which this rule is applicable.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1beta.TaxRule.TaxPostalCodeRange post_code_range = 3;
   * </code>
   *
   * @return Whether the postCodeRange field is set.
   */
  boolean hasPostCodeRange();
  /**
   *
   *
   * <pre>
   * The range of postal codes in which this rule is applicable.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1beta.TaxRule.TaxPostalCodeRange post_code_range = 3;
   * </code>
   *
   * @return The postCodeRange.
   */
  com.google.shopping.merchant.accounts.v1beta.TaxRule.TaxPostalCodeRange getPostCodeRange();
  /**
   *
   *
   * <pre>
   * The range of postal codes in which this rule is applicable.
   * </pre>
   *
   * <code>.google.shopping.merchant.accounts.v1beta.TaxRule.TaxPostalCodeRange post_code_range = 3;
   * </code>
   */
  com.google.shopping.merchant.accounts.v1beta.TaxRule.TaxPostalCodeRangeOrBuilder
      getPostCodeRangeOrBuilder();

  /**
   *
   *
   * <pre>
   * Rate that depends on delivery location: if merchant has a nexus in
   * corresponding US state, rates from authorities with jurisdiction over
   * delivery area are added up.
   * </pre>
   *
   * <code>bool use_google_rate = 4;</code>
   *
   * @return Whether the useGoogleRate field is set.
   */
  boolean hasUseGoogleRate();
  /**
   *
   *
   * <pre>
   * Rate that depends on delivery location: if merchant has a nexus in
   * corresponding US state, rates from authorities with jurisdiction over
   * delivery area are added up.
   * </pre>
   *
   * <code>bool use_google_rate = 4;</code>
   *
   * @return The useGoogleRate.
   */
  boolean getUseGoogleRate();

  /**
   *
   *
   * <pre>
   * A fixed rate specified in micros, where 100% = 1_000_000.
   * Suitable for origin-based states.
   * </pre>
   *
   * <code>int64 self_specified_rate_micros = 5;</code>
   *
   * @return Whether the selfSpecifiedRateMicros field is set.
   */
  boolean hasSelfSpecifiedRateMicros();
  /**
   *
   *
   * <pre>
   * A fixed rate specified in micros, where 100% = 1_000_000.
   * Suitable for origin-based states.
   * </pre>
   *
   * <code>int64 self_specified_rate_micros = 5;</code>
   *
   * @return The selfSpecifiedRateMicros.
   */
  long getSelfSpecifiedRateMicros();

  /**
   *
   *
   * <pre>
   * Region code in which this rule is applicable
   * </pre>
   *
   * <code>string region_code = 1;</code>
   *
   * @return The regionCode.
   */
  java.lang.String getRegionCode();
  /**
   *
   *
   * <pre>
   * Region code in which this rule is applicable
   * </pre>
   *
   * <code>string region_code = 1;</code>
   *
   * @return The bytes for regionCode.
   */
  com.google.protobuf.ByteString getRegionCodeBytes();

  /**
   *
   *
   * <pre>
   * If set, shipping charge is taxed (at the same rate as product) when
   * delivering to this admin's area.
   * Can only be set on US states without category.
   * </pre>
   *
   * <code>bool shipping_taxed = 6;</code>
   *
   * @return The shippingTaxed.
   */
  boolean getShippingTaxed();

  /**
   *
   *
   * <pre>
   * Required. Time period when this rule is effective. If the duration is
   * missing from effective_time listed, then it is open ended to the future.
   * The start of this time period is inclusive, and the end is exclusive.
   * </pre>
   *
   * <code>
   * .google.type.Interval effective_time_period = 7 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the effectiveTimePeriod field is set.
   */
  boolean hasEffectiveTimePeriod();
  /**
   *
   *
   * <pre>
   * Required. Time period when this rule is effective. If the duration is
   * missing from effective_time listed, then it is open ended to the future.
   * The start of this time period is inclusive, and the end is exclusive.
   * </pre>
   *
   * <code>
   * .google.type.Interval effective_time_period = 7 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The effectiveTimePeriod.
   */
  com.google.type.Interval getEffectiveTimePeriod();
  /**
   *
   *
   * <pre>
   * Required. Time period when this rule is effective. If the duration is
   * missing from effective_time listed, then it is open ended to the future.
   * The start of this time period is inclusive, and the end is exclusive.
   * </pre>
   *
   * <code>
   * .google.type.Interval effective_time_period = 7 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.type.IntervalOrBuilder getEffectiveTimePeriodOrBuilder();

  com.google.shopping.merchant.accounts.v1beta.TaxRule.LocationCase getLocationCase();

  com.google.shopping.merchant.accounts.v1beta.TaxRule.RateCalculationCase getRateCalculationCase();
}
