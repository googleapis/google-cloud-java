/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/accounts/v1beta/automaticimprovements.proto

// Protobuf Java Version: 3.25.5
package com.google.shopping.merchant.accounts.v1beta;

/**
 *
 *
 * <pre>
 * Collection of information related to the [automatic
 * improvements](https://developers.google.com/shopping-content/guides/automatic-improvements)
 * of an account.
 * </pre>
 *
 * Protobuf type {@code google.shopping.merchant.accounts.v1beta.AutomaticImprovements}
 */
public final class AutomaticImprovements extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.shopping.merchant.accounts.v1beta.AutomaticImprovements)
    AutomaticImprovementsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AutomaticImprovements.newBuilder() to construct.
  private AutomaticImprovements(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AutomaticImprovements() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AutomaticImprovements();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.shopping.merchant.accounts.v1beta.AutomaticImprovementsProto
        .internal_static_google_shopping_merchant_accounts_v1beta_AutomaticImprovements_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.shopping.merchant.accounts.v1beta.AutomaticImprovementsProto
        .internal_static_google_shopping_merchant_accounts_v1beta_AutomaticImprovements_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements.class,
            com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the automatic improvements.
   * Format: `accounts/{account}/automaticImprovements`.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the automatic improvements.
   * Format: `accounts/{account}/automaticImprovements`.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ITEM_UPDATES_FIELD_NUMBER = 2;
  private com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates itemUpdates_;
  /**
   *
   *
   * <pre>
   * Turning on [item
   * updates](https://support.google.com/merchants/answer/3246284) allows
   * Google to automatically update items for you. When item updates are on,
   * Google uses the structured data markup on the website and advanced data
   * extractors to update the price and availability of the items. When the item
   * updates are off, items with mismatched data aren't shown.
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
   * </code>
   *
   * @return Whether the itemUpdates field is set.
   */
  @java.lang.Override
  public boolean hasItemUpdates() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Turning on [item
   * updates](https://support.google.com/merchants/answer/3246284) allows
   * Google to automatically update items for you. When item updates are on,
   * Google uses the structured data markup on the website and advanced data
   * extractors to update the price and availability of the items. When the item
   * updates are off, items with mismatched data aren't shown.
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
   * </code>
   *
   * @return The itemUpdates.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates getItemUpdates() {
    return itemUpdates_ == null
        ? com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.getDefaultInstance()
        : itemUpdates_;
  }
  /**
   *
   *
   * <pre>
   * Turning on [item
   * updates](https://support.google.com/merchants/answer/3246284) allows
   * Google to automatically update items for you. When item updates are on,
   * Google uses the structured data markup on the website and advanced data
   * extractors to update the price and availability of the items. When the item
   * updates are off, items with mismatched data aren't shown.
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdatesOrBuilder
      getItemUpdatesOrBuilder() {
    return itemUpdates_ == null
        ? com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.getDefaultInstance()
        : itemUpdates_;
  }

  public static final int IMAGE_IMPROVEMENTS_FIELD_NUMBER = 3;
  private com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
      imageImprovements_;
  /**
   *
   *
   * <pre>
   * This improvement will attempt to automatically correct submitted images if
   * they don't meet the [image
   * requirements](https://support.google.com/merchants/answer/6324350), for
   * example, removing overlays. If successful, the image will be replaced and
   * approved. This improvement is only applied to images of disapproved offers.
   * For more information see: [Automatic image
   * improvements](https://support.google.com/merchants/answer/9242973)
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
   * </code>
   *
   * @return Whether the imageImprovements field is set.
   */
  @java.lang.Override
  public boolean hasImageImprovements() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * This improvement will attempt to automatically correct submitted images if
   * they don't meet the [image
   * requirements](https://support.google.com/merchants/answer/6324350), for
   * example, removing overlays. If successful, the image will be replaced and
   * approved. This improvement is only applied to images of disapproved offers.
   * For more information see: [Automatic image
   * improvements](https://support.google.com/merchants/answer/9242973)
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
   * </code>
   *
   * @return The imageImprovements.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
      getImageImprovements() {
    return imageImprovements_ == null
        ? com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
            .getDefaultInstance()
        : imageImprovements_;
  }
  /**
   *
   *
   * <pre>
   * This improvement will attempt to automatically correct submitted images if
   * they don't meet the [image
   * requirements](https://support.google.com/merchants/answer/6324350), for
   * example, removing overlays. If successful, the image will be replaced and
   * approved. This improvement is only applied to images of disapproved offers.
   * For more information see: [Automatic image
   * improvements](https://support.google.com/merchants/answer/9242973)
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovementsOrBuilder
      getImageImprovementsOrBuilder() {
    return imageImprovements_ == null
        ? com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
            .getDefaultInstance()
        : imageImprovements_;
  }

  public static final int SHIPPING_IMPROVEMENTS_FIELD_NUMBER = 4;
  private com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
      shippingImprovements_;
  /**
   *
   *
   * <pre>
   * Not available for MCAs
   * [accounts](https://support.google.com/merchants/answer/188487). By turning
   * on [automatic shipping
   * improvements](https://support.google.com/merchants/answer/10027038),
   * you are allowing Google to improve the accuracy of your delivery times
   * shown to shoppers using Google. More accurate delivery times, especially
   * when faster, typically lead to better conversion rates. Google will improve
   * your estimated delivery times based on various factors:
   * * Delivery address of an order
   * * Current handling time and shipping time settings
   * * Estimated weekdays or business days
   * * Parcel tracking data
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
   * </code>
   *
   * @return Whether the shippingImprovements field is set.
   */
  @java.lang.Override
  public boolean hasShippingImprovements() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Not available for MCAs
   * [accounts](https://support.google.com/merchants/answer/188487). By turning
   * on [automatic shipping
   * improvements](https://support.google.com/merchants/answer/10027038),
   * you are allowing Google to improve the accuracy of your delivery times
   * shown to shoppers using Google. More accurate delivery times, especially
   * when faster, typically lead to better conversion rates. Google will improve
   * your estimated delivery times based on various factors:
   * * Delivery address of an order
   * * Current handling time and shipping time settings
   * * Estimated weekdays or business days
   * * Parcel tracking data
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
   * </code>
   *
   * @return The shippingImprovements.
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
      getShippingImprovements() {
    return shippingImprovements_ == null
        ? com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
            .getDefaultInstance()
        : shippingImprovements_;
  }
  /**
   *
   *
   * <pre>
   * Not available for MCAs
   * [accounts](https://support.google.com/merchants/answer/188487). By turning
   * on [automatic shipping
   * improvements](https://support.google.com/merchants/answer/10027038),
   * you are allowing Google to improve the accuracy of your delivery times
   * shown to shoppers using Google. More accurate delivery times, especially
   * when faster, typically lead to better conversion rates. Google will improve
   * your estimated delivery times based on various factors:
   * * Delivery address of an order
   * * Current handling time and shipping time settings
   * * Estimated weekdays or business days
   * * Parcel tracking data
   * This field is only updated (cleared) if provided in the update mask.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovementsOrBuilder
      getShippingImprovementsOrBuilder() {
    return shippingImprovements_ == null
        ? com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
            .getDefaultInstance()
        : shippingImprovements_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getItemUpdates());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getImageImprovements());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(4, getShippingImprovements());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getItemUpdates());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getImageImprovements());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(4, getShippingImprovements());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements)) {
      return super.equals(obj);
    }
    com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements other =
        (com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements) obj;

    if (!getName().equals(other.getName())) return false;
    if (hasItemUpdates() != other.hasItemUpdates()) return false;
    if (hasItemUpdates()) {
      if (!getItemUpdates().equals(other.getItemUpdates())) return false;
    }
    if (hasImageImprovements() != other.hasImageImprovements()) return false;
    if (hasImageImprovements()) {
      if (!getImageImprovements().equals(other.getImageImprovements())) return false;
    }
    if (hasShippingImprovements() != other.hasShippingImprovements()) return false;
    if (hasShippingImprovements()) {
      if (!getShippingImprovements().equals(other.getShippingImprovements())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasItemUpdates()) {
      hash = (37 * hash) + ITEM_UPDATES_FIELD_NUMBER;
      hash = (53 * hash) + getItemUpdates().hashCode();
    }
    if (hasImageImprovements()) {
      hash = (37 * hash) + IMAGE_IMPROVEMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getImageImprovements().hashCode();
    }
    if (hasShippingImprovements()) {
      hash = (37 * hash) + SHIPPING_IMPROVEMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getShippingImprovements().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Collection of information related to the [automatic
   * improvements](https://developers.google.com/shopping-content/guides/automatic-improvements)
   * of an account.
   * </pre>
   *
   * Protobuf type {@code google.shopping.merchant.accounts.v1beta.AutomaticImprovements}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.shopping.merchant.accounts.v1beta.AutomaticImprovements)
      com.google.shopping.merchant.accounts.v1beta.AutomaticImprovementsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.shopping.merchant.accounts.v1beta.AutomaticImprovementsProto
          .internal_static_google_shopping_merchant_accounts_v1beta_AutomaticImprovements_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.shopping.merchant.accounts.v1beta.AutomaticImprovementsProto
          .internal_static_google_shopping_merchant_accounts_v1beta_AutomaticImprovements_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements.class,
              com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements.Builder.class);
    }

    // Construct using
    // com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getItemUpdatesFieldBuilder();
        getImageImprovementsFieldBuilder();
        getShippingImprovementsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      itemUpdates_ = null;
      if (itemUpdatesBuilder_ != null) {
        itemUpdatesBuilder_.dispose();
        itemUpdatesBuilder_ = null;
      }
      imageImprovements_ = null;
      if (imageImprovementsBuilder_ != null) {
        imageImprovementsBuilder_.dispose();
        imageImprovementsBuilder_ = null;
      }
      shippingImprovements_ = null;
      if (shippingImprovementsBuilder_ != null) {
        shippingImprovementsBuilder_.dispose();
        shippingImprovementsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.shopping.merchant.accounts.v1beta.AutomaticImprovementsProto
          .internal_static_google_shopping_merchant_accounts_v1beta_AutomaticImprovements_descriptor;
    }

    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
        getDefaultInstanceForType() {
      return com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements build() {
      com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements buildPartial() {
      com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements result =
          new com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.itemUpdates_ =
            itemUpdatesBuilder_ == null ? itemUpdates_ : itemUpdatesBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.imageImprovements_ =
            imageImprovementsBuilder_ == null
                ? imageImprovements_
                : imageImprovementsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.shippingImprovements_ =
            shippingImprovementsBuilder_ == null
                ? shippingImprovements_
                : shippingImprovementsBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements) {
        return mergeFrom(
            (com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements other) {
      if (other
          == com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
              .getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasItemUpdates()) {
        mergeItemUpdates(other.getItemUpdates());
      }
      if (other.hasImageImprovements()) {
        mergeImageImprovements(other.getImageImprovements());
      }
      if (other.hasShippingImprovements()) {
        mergeShippingImprovements(other.getShippingImprovements());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getItemUpdatesFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(
                    getImageImprovementsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(
                    getShippingImprovementsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the automatic improvements.
     * Format: `accounts/{account}/automaticImprovements`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the automatic improvements.
     * Format: `accounts/{account}/automaticImprovements`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the automatic improvements.
     * Format: `accounts/{account}/automaticImprovements`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the automatic improvements.
     * Format: `accounts/{account}/automaticImprovements`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Identifier. The resource name of the automatic improvements.
     * Format: `accounts/{account}/automaticImprovements`.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates itemUpdates_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates,
            com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.Builder,
            com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdatesOrBuilder>
        itemUpdatesBuilder_;
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     *
     * @return Whether the itemUpdates field is set.
     */
    public boolean hasItemUpdates() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     *
     * @return The itemUpdates.
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates getItemUpdates() {
      if (itemUpdatesBuilder_ == null) {
        return itemUpdates_ == null
            ? com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.getDefaultInstance()
            : itemUpdates_;
      } else {
        return itemUpdatesBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    public Builder setItemUpdates(
        com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates value) {
      if (itemUpdatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        itemUpdates_ = value;
      } else {
        itemUpdatesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    public Builder setItemUpdates(
        com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.Builder builderForValue) {
      if (itemUpdatesBuilder_ == null) {
        itemUpdates_ = builderForValue.build();
      } else {
        itemUpdatesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    public Builder mergeItemUpdates(
        com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates value) {
      if (itemUpdatesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && itemUpdates_ != null
            && itemUpdates_
                != com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates
                    .getDefaultInstance()) {
          getItemUpdatesBuilder().mergeFrom(value);
        } else {
          itemUpdates_ = value;
        }
      } else {
        itemUpdatesBuilder_.mergeFrom(value);
      }
      if (itemUpdates_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    public Builder clearItemUpdates() {
      bitField0_ = (bitField0_ & ~0x00000002);
      itemUpdates_ = null;
      if (itemUpdatesBuilder_ != null) {
        itemUpdatesBuilder_.dispose();
        itemUpdatesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.Builder
        getItemUpdatesBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getItemUpdatesFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdatesOrBuilder
        getItemUpdatesOrBuilder() {
      if (itemUpdatesBuilder_ != null) {
        return itemUpdatesBuilder_.getMessageOrBuilder();
      } else {
        return itemUpdates_ == null
            ? com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.getDefaultInstance()
            : itemUpdates_;
      }
    }
    /**
     *
     *
     * <pre>
     * Turning on [item
     * updates](https://support.google.com/merchants/answer/3246284) allows
     * Google to automatically update items for you. When item updates are on,
     * Google uses the structured data markup on the website and advanced data
     * extractors to update the price and availability of the items. When the item
     * updates are off, items with mismatched data aren't shown.
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates item_updates = 2;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates,
            com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.Builder,
            com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdatesOrBuilder>
        getItemUpdatesFieldBuilder() {
      if (itemUpdatesBuilder_ == null) {
        itemUpdatesBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates,
                com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdates.Builder,
                com.google.shopping.merchant.accounts.v1beta.AutomaticItemUpdatesOrBuilder>(
                getItemUpdates(), getParentForChildren(), isClean());
        itemUpdates_ = null;
      }
      return itemUpdatesBuilder_;
    }

    private com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
        imageImprovements_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements,
            com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements.Builder,
            com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovementsOrBuilder>
        imageImprovementsBuilder_;
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     *
     * @return Whether the imageImprovements field is set.
     */
    public boolean hasImageImprovements() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     *
     * @return The imageImprovements.
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
        getImageImprovements() {
      if (imageImprovementsBuilder_ == null) {
        return imageImprovements_ == null
            ? com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
                .getDefaultInstance()
            : imageImprovements_;
      } else {
        return imageImprovementsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    public Builder setImageImprovements(
        com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements value) {
      if (imageImprovementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        imageImprovements_ = value;
      } else {
        imageImprovementsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    public Builder setImageImprovements(
        com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements.Builder
            builderForValue) {
      if (imageImprovementsBuilder_ == null) {
        imageImprovements_ = builderForValue.build();
      } else {
        imageImprovementsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    public Builder mergeImageImprovements(
        com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements value) {
      if (imageImprovementsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && imageImprovements_ != null
            && imageImprovements_
                != com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
                    .getDefaultInstance()) {
          getImageImprovementsBuilder().mergeFrom(value);
        } else {
          imageImprovements_ = value;
        }
      } else {
        imageImprovementsBuilder_.mergeFrom(value);
      }
      if (imageImprovements_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    public Builder clearImageImprovements() {
      bitField0_ = (bitField0_ & ~0x00000004);
      imageImprovements_ = null;
      if (imageImprovementsBuilder_ != null) {
        imageImprovementsBuilder_.dispose();
        imageImprovementsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements.Builder
        getImageImprovementsBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getImageImprovementsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovementsOrBuilder
        getImageImprovementsOrBuilder() {
      if (imageImprovementsBuilder_ != null) {
        return imageImprovementsBuilder_.getMessageOrBuilder();
      } else {
        return imageImprovements_ == null
            ? com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements
                .getDefaultInstance()
            : imageImprovements_;
      }
    }
    /**
     *
     *
     * <pre>
     * This improvement will attempt to automatically correct submitted images if
     * they don't meet the [image
     * requirements](https://support.google.com/merchants/answer/6324350), for
     * example, removing overlays. If successful, the image will be replaced and
     * approved. This improvement is only applied to images of disapproved offers.
     * For more information see: [Automatic image
     * improvements](https://support.google.com/merchants/answer/9242973)
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements image_improvements = 3;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements,
            com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements.Builder,
            com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovementsOrBuilder>
        getImageImprovementsFieldBuilder() {
      if (imageImprovementsBuilder_ == null) {
        imageImprovementsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements,
                com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovements.Builder,
                com.google.shopping.merchant.accounts.v1beta.AutomaticImageImprovementsOrBuilder>(
                getImageImprovements(), getParentForChildren(), isClean());
        imageImprovements_ = null;
      }
      return imageImprovementsBuilder_;
    }

    private com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
        shippingImprovements_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements,
            com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements.Builder,
            com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovementsOrBuilder>
        shippingImprovementsBuilder_;
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     *
     * @return Whether the shippingImprovements field is set.
     */
    public boolean hasShippingImprovements() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     *
     * @return The shippingImprovements.
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
        getShippingImprovements() {
      if (shippingImprovementsBuilder_ == null) {
        return shippingImprovements_ == null
            ? com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
                .getDefaultInstance()
            : shippingImprovements_;
      } else {
        return shippingImprovementsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    public Builder setShippingImprovements(
        com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements value) {
      if (shippingImprovementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        shippingImprovements_ = value;
      } else {
        shippingImprovementsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    public Builder setShippingImprovements(
        com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements.Builder
            builderForValue) {
      if (shippingImprovementsBuilder_ == null) {
        shippingImprovements_ = builderForValue.build();
      } else {
        shippingImprovementsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    public Builder mergeShippingImprovements(
        com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements value) {
      if (shippingImprovementsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && shippingImprovements_ != null
            && shippingImprovements_
                != com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
                    .getDefaultInstance()) {
          getShippingImprovementsBuilder().mergeFrom(value);
        } else {
          shippingImprovements_ = value;
        }
      } else {
        shippingImprovementsBuilder_.mergeFrom(value);
      }
      if (shippingImprovements_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    public Builder clearShippingImprovements() {
      bitField0_ = (bitField0_ & ~0x00000008);
      shippingImprovements_ = null;
      if (shippingImprovementsBuilder_ != null) {
        shippingImprovementsBuilder_.dispose();
        shippingImprovementsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements.Builder
        getShippingImprovementsBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getShippingImprovementsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    public com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovementsOrBuilder
        getShippingImprovementsOrBuilder() {
      if (shippingImprovementsBuilder_ != null) {
        return shippingImprovementsBuilder_.getMessageOrBuilder();
      } else {
        return shippingImprovements_ == null
            ? com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements
                .getDefaultInstance()
            : shippingImprovements_;
      }
    }
    /**
     *
     *
     * <pre>
     * Not available for MCAs
     * [accounts](https://support.google.com/merchants/answer/188487). By turning
     * on [automatic shipping
     * improvements](https://support.google.com/merchants/answer/10027038),
     * you are allowing Google to improve the accuracy of your delivery times
     * shown to shoppers using Google. More accurate delivery times, especially
     * when faster, typically lead to better conversion rates. Google will improve
     * your estimated delivery times based on various factors:
     * * Delivery address of an order
     * * Current handling time and shipping time settings
     * * Estimated weekdays or business days
     * * Parcel tracking data
     * This field is only updated (cleared) if provided in the update mask.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements shipping_improvements = 4;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements,
            com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements.Builder,
            com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovementsOrBuilder>
        getShippingImprovementsFieldBuilder() {
      if (shippingImprovementsBuilder_ == null) {
        shippingImprovementsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements,
                com.google.shopping.merchant.accounts.v1beta.AutomaticShippingImprovements.Builder,
                com.google.shopping.merchant.accounts.v1beta
                    .AutomaticShippingImprovementsOrBuilder>(
                getShippingImprovements(), getParentForChildren(), isClean());
        shippingImprovements_ = null;
      }
      return shippingImprovementsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.shopping.merchant.accounts.v1beta.AutomaticImprovements)
  }

  // @@protoc_insertion_point(class_scope:google.shopping.merchant.accounts.v1beta.AutomaticImprovements)
  private static final com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements();
  }

  public static com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AutomaticImprovements> PARSER =
      new com.google.protobuf.AbstractParser<AutomaticImprovements>() {
        @java.lang.Override
        public AutomaticImprovements parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AutomaticImprovements> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AutomaticImprovements> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.shopping.merchant.accounts.v1beta.AutomaticImprovements
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
