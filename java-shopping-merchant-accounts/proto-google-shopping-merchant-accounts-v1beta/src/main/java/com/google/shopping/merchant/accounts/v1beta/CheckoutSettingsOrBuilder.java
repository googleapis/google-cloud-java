/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/accounts/v1beta/checkoutsettings.proto

// Protobuf Java Version: 3.25.8
package com.google.shopping.merchant.accounts.v1beta;

public interface CheckoutSettingsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.merchant.accounts.v1beta.CheckoutSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the program configuration settings.
   * Format: `accounts/{account}/programs/{program}/checkoutSettings`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  java.lang.String getName();

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the program configuration settings.
   * Format: `accounts/{account}/programs/{program}/checkoutSettings`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * URI settings for cart or checkout URL.
   * </pre>
   *
   * <code>optional .google.shopping.merchant.accounts.v1beta.UriSettings uri_settings = 2;</code>
   *
   * @return Whether the uriSettings field is set.
   */
  boolean hasUriSettings();

  /**
   *
   *
   * <pre>
   * URI settings for cart or checkout URL.
   * </pre>
   *
   * <code>optional .google.shopping.merchant.accounts.v1beta.UriSettings uri_settings = 2;</code>
   *
   * @return The uriSettings.
   */
  com.google.shopping.merchant.accounts.v1beta.UriSettings getUriSettings();

  /**
   *
   *
   * <pre>
   * URI settings for cart or checkout URL.
   * </pre>
   *
   * <code>optional .google.shopping.merchant.accounts.v1beta.UriSettings uri_settings = 2;</code>
   */
  com.google.shopping.merchant.accounts.v1beta.UriSettingsOrBuilder getUriSettingsOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. The destinations to which the checkout program applies, valid
   * destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * </pre>
   *
   * <code>
   * repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the eligibleDestinations.
   */
  java.util.List<com.google.shopping.type.Destination.DestinationEnum>
      getEligibleDestinationsList();

  /**
   *
   *
   * <pre>
   * Optional. The destinations to which the checkout program applies, valid
   * destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * </pre>
   *
   * <code>
   * repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of eligibleDestinations.
   */
  int getEligibleDestinationsCount();

  /**
   *
   *
   * <pre>
   * Optional. The destinations to which the checkout program applies, valid
   * destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * </pre>
   *
   * <code>
   * repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The eligibleDestinations at the given index.
   */
  com.google.shopping.type.Destination.DestinationEnum getEligibleDestinations(int index);

  /**
   *
   *
   * <pre>
   * Optional. The destinations to which the checkout program applies, valid
   * destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * </pre>
   *
   * <code>
   * repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the enum numeric values on the wire for eligibleDestinations.
   */
  java.util.List<java.lang.Integer> getEligibleDestinationsValueList();

  /**
   *
   *
   * <pre>
   * Optional. The destinations to which the checkout program applies, valid
   * destination values are `SHOPPING_ADS`, `FREE_LISTINGS`
   * </pre>
   *
   * <code>
   * repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of eligibleDestinations at the given index.
   */
  int getEligibleDestinationsValue(int index);

  /**
   *
   *
   * <pre>
   * Output only. Reflects the merchant enrollment state in `Checkout` program.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState enrollment_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the enrollmentState field is set.
   */
  boolean hasEnrollmentState();

  /**
   *
   *
   * <pre>
   * Output only. Reflects the merchant enrollment state in `Checkout` program.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState enrollment_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for enrollmentState.
   */
  int getEnrollmentStateValue();

  /**
   *
   *
   * <pre>
   * Output only. Reflects the merchant enrollment state in `Checkout` program.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState enrollment_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enrollmentState.
   */
  com.google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState
      getEnrollmentState();

  /**
   *
   *
   * <pre>
   * Output only. Reflects the merchant review state in `Checkout` program.
   * This is set based on the data quality reviews of the URL provided by
   * the merchant.
   * A merchant with enrollment state
   * as `ENROLLED` can be in the following review states: `IN_REVIEW`,
   * `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
   * `ENROLLED` before a review can begin for the merchant.For more details,
   * check the help center doc.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState review_state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the reviewState field is set.
   */
  boolean hasReviewState();

  /**
   *
   *
   * <pre>
   * Output only. Reflects the merchant review state in `Checkout` program.
   * This is set based on the data quality reviews of the URL provided by
   * the merchant.
   * A merchant with enrollment state
   * as `ENROLLED` can be in the following review states: `IN_REVIEW`,
   * `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
   * `ENROLLED` before a review can begin for the merchant.For more details,
   * check the help center doc.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState review_state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for reviewState.
   */
  int getReviewStateValue();

  /**
   *
   *
   * <pre>
   * Output only. Reflects the merchant review state in `Checkout` program.
   * This is set based on the data quality reviews of the URL provided by
   * the merchant.
   * A merchant with enrollment state
   * as `ENROLLED` can be in the following review states: `IN_REVIEW`,
   * `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
   * `ENROLLED` before a review can begin for the merchant.For more details,
   * check the help center doc.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState review_state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The reviewState.
   */
  com.google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState
      getReviewState();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of `uri_settings` for a given merchant. If
   * account level settings are present then this value will be a copy of url
   * settings. Otherwise, it will have the value of the parent account (for only
   * marketplace sellers).
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1beta.UriSettings effective_uri_settings = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the effectiveUriSettings field is set.
   */
  boolean hasEffectiveUriSettings();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of `uri_settings` for a given merchant. If
   * account level settings are present then this value will be a copy of url
   * settings. Otherwise, it will have the value of the parent account (for only
   * marketplace sellers).
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1beta.UriSettings effective_uri_settings = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The effectiveUriSettings.
   */
  com.google.shopping.merchant.accounts.v1beta.UriSettings getEffectiveUriSettings();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of `uri_settings` for a given merchant. If
   * account level settings are present then this value will be a copy of url
   * settings. Otherwise, it will have the value of the parent account (for only
   * marketplace sellers).
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.accounts.v1beta.UriSettings effective_uri_settings = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.shopping.merchant.accounts.v1beta.UriSettingsOrBuilder
      getEffectiveUriSettingsOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of enrollment_state for a given merchant
   * ID. If account level settings are present then this value will be a copy of
   * the account level settings. Otherwise, it will have the value of the parent
   * account (for only marketplace sellers).
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState effective_enrollment_state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the effectiveEnrollmentState field is set.
   */
  boolean hasEffectiveEnrollmentState();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of enrollment_state for a given merchant
   * ID. If account level settings are present then this value will be a copy of
   * the account level settings. Otherwise, it will have the value of the parent
   * account (for only marketplace sellers).
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState effective_enrollment_state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for effectiveEnrollmentState.
   */
  int getEffectiveEnrollmentStateValue();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of enrollment_state for a given merchant
   * ID. If account level settings are present then this value will be a copy of
   * the account level settings. Otherwise, it will have the value of the parent
   * account (for only marketplace sellers).
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState effective_enrollment_state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The effectiveEnrollmentState.
   */
  com.google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutEnrollmentState
      getEffectiveEnrollmentState();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of `review_state` for a given merchant ID.
   * If account level settings are present then this value will be a copy of the
   * account level settings. Otherwise, it will have the value of the parent
   * account (for only marketplace sellers).
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState effective_review_state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the effectiveReviewState field is set.
   */
  boolean hasEffectiveReviewState();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of `review_state` for a given merchant ID.
   * If account level settings are present then this value will be a copy of the
   * account level settings. Otherwise, it will have the value of the parent
   * account (for only marketplace sellers).
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState effective_review_state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for effectiveReviewState.
   */
  int getEffectiveReviewStateValue();

  /**
   *
   *
   * <pre>
   * Output only. The effective value of `review_state` for a given merchant ID.
   * If account level settings are present then this value will be a copy of the
   * account level settings. Otherwise, it will have the value of the parent
   * account (for only marketplace sellers).
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState effective_review_state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The effectiveReviewState.
   */
  com.google.shopping.merchant.accounts.v1beta.CheckoutSettings.CheckoutReviewState
      getEffectiveReviewState();
}
