/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/chronicle/v1/rule.proto

// Protobuf Java Version: 3.25.5
package google.cloud.chronicle.v1;

/**
 *
 *
 * <pre>
 * Retrohunt is an execution of a Rule over a time range in the past.
 * </pre>
 *
 * Protobuf type {@code google.cloud.chronicle.v1.Retrohunt}
 */
public final class Retrohunt extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.chronicle.v1.Retrohunt)
    RetrohuntOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Retrohunt.newBuilder() to construct.
  private Retrohunt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Retrohunt() {
    name_ = "";
    state_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Retrohunt();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return google.cloud.chronicle.v1.RuleProto
        .internal_static_google_cloud_chronicle_v1_Retrohunt_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return google.cloud.chronicle.v1.RuleProto
        .internal_static_google_cloud_chronicle_v1_Retrohunt_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            google.cloud.chronicle.v1.Retrohunt.class,
            google.cloud.chronicle.v1.Retrohunt.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The possible states a retrohunt can be in.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.chronicle.v1.Retrohunt.State}
   */
  public enum State implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Unspecified or unknown retrohunt state.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Running state.
     * </pre>
     *
     * <code>RUNNING = 1;</code>
     */
    RUNNING(1),
    /**
     *
     *
     * <pre>
     * Done state.
     * </pre>
     *
     * <code>DONE = 2;</code>
     */
    DONE(2),
    /**
     *
     *
     * <pre>
     * Cancelled state.
     * </pre>
     *
     * <code>CANCELLED = 3;</code>
     */
    CANCELLED(3),
    /**
     *
     *
     * <pre>
     * Failed state.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    FAILED(4),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Unspecified or unknown retrohunt state.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Running state.
     * </pre>
     *
     * <code>RUNNING = 1;</code>
     */
    public static final int RUNNING_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Done state.
     * </pre>
     *
     * <code>DONE = 2;</code>
     */
    public static final int DONE_VALUE = 2;
    /**
     *
     *
     * <pre>
     * Cancelled state.
     * </pre>
     *
     * <code>CANCELLED = 3;</code>
     */
    public static final int CANCELLED_VALUE = 3;
    /**
     *
     *
     * <pre>
     * Failed state.
     * </pre>
     *
     * <code>FAILED = 4;</code>
     */
    public static final int FAILED_VALUE = 4;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0:
          return STATE_UNSPECIFIED;
        case 1:
          return RUNNING;
        case 2:
          return DONE;
        case 3:
          return CANCELLED;
        case 4:
          return FAILED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<State> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<State>() {
          public State findValueByNumber(int number) {
            return State.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return google.cloud.chronicle.v1.Retrohunt.getDescriptor().getEnumTypes().get(0);
    }

    private static final State[] VALUES = values();

    public static State valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.chronicle.v1.Retrohunt.State)
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * The resource name of the retrohunt.
   * Retrohunt is the child of a rule revision. {rule} in the format below is
   * structured as {rule_id&#64;revision_id}.
   * Format:
   * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The resource name of the retrohunt.
   * Retrohunt is the child of a rule revision. {rule} in the format below is
   * structured as {rule_id&#64;revision_id}.
   * Format:
   * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESS_INTERVAL_FIELD_NUMBER = 2;
  private com.google.type.Interval processInterval_;
  /**
   *
   *
   * <pre>
   * Required. The start and end time of the event time range this retrohunt
   * processes.
   * </pre>
   *
   * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the processInterval field is set.
   */
  @java.lang.Override
  public boolean hasProcessInterval() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. The start and end time of the event time range this retrohunt
   * processes.
   * </pre>
   *
   * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The processInterval.
   */
  @java.lang.Override
  public com.google.type.Interval getProcessInterval() {
    return processInterval_ == null
        ? com.google.type.Interval.getDefaultInstance()
        : processInterval_;
  }
  /**
   *
   *
   * <pre>
   * Required. The start and end time of the event time range this retrohunt
   * processes.
   * </pre>
   *
   * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.type.IntervalOrBuilder getProcessIntervalOrBuilder() {
    return processInterval_ == null
        ? com.google.type.Interval.getDefaultInstance()
        : processInterval_;
  }

  public static final int EXECUTION_INTERVAL_FIELD_NUMBER = 3;
  private com.google.type.Interval executionInterval_;
  /**
   *
   *
   * <pre>
   * Output only. The start and end time of the retrohunt execution. If the
   * retrohunt is not yet finished, the end time of the interval will not be
   * populated.
   * </pre>
   *
   * <code>
   * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the executionInterval field is set.
   */
  @java.lang.Override
  public boolean hasExecutionInterval() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. The start and end time of the retrohunt execution. If the
   * retrohunt is not yet finished, the end time of the interval will not be
   * populated.
   * </pre>
   *
   * <code>
   * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The executionInterval.
   */
  @java.lang.Override
  public com.google.type.Interval getExecutionInterval() {
    return executionInterval_ == null
        ? com.google.type.Interval.getDefaultInstance()
        : executionInterval_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The start and end time of the retrohunt execution. If the
   * retrohunt is not yet finished, the end time of the interval will not be
   * populated.
   * </pre>
   *
   * <code>
   * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.type.IntervalOrBuilder getExecutionIntervalOrBuilder() {
    return executionInterval_ == null
        ? com.google.type.Interval.getDefaultInstance()
        : executionInterval_;
  }

  public static final int STATE_FIELD_NUMBER = 4;
  private int state_ = 0;
  /**
   *
   *
   * <pre>
   * Output only. The state of the retrohunt.
   * </pre>
   *
   * <code>
   * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }
  /**
   *
   *
   * <pre>
   * Output only. The state of the retrohunt.
   * </pre>
   *
   * <code>
   * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  @java.lang.Override
  public google.cloud.chronicle.v1.Retrohunt.State getState() {
    google.cloud.chronicle.v1.Retrohunt.State result =
        google.cloud.chronicle.v1.Retrohunt.State.forNumber(state_);
    return result == null ? google.cloud.chronicle.v1.Retrohunt.State.UNRECOGNIZED : result;
  }

  public static final int PROGRESS_PERCENTAGE_FIELD_NUMBER = 5;
  private float progressPercentage_ = 0F;
  /**
   *
   *
   * <pre>
   * Output only. Percent progress of the retrohunt towards completion, from
   * 0.00 to 100.00.
   * </pre>
   *
   * <code>float progress_percentage = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The progressPercentage.
   */
  @java.lang.Override
  public float getProgressPercentage() {
    return progressPercentage_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getProcessInterval());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getExecutionInterval());
    }
    if (state_ != google.cloud.chronicle.v1.Retrohunt.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, state_);
    }
    if (java.lang.Float.floatToRawIntBits(progressPercentage_) != 0) {
      output.writeFloat(5, progressPercentage_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getProcessInterval());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getExecutionInterval());
    }
    if (state_ != google.cloud.chronicle.v1.Retrohunt.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, state_);
    }
    if (java.lang.Float.floatToRawIntBits(progressPercentage_) != 0) {
      size += com.google.protobuf.CodedOutputStream.computeFloatSize(5, progressPercentage_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof google.cloud.chronicle.v1.Retrohunt)) {
      return super.equals(obj);
    }
    google.cloud.chronicle.v1.Retrohunt other = (google.cloud.chronicle.v1.Retrohunt) obj;

    if (!getName().equals(other.getName())) return false;
    if (hasProcessInterval() != other.hasProcessInterval()) return false;
    if (hasProcessInterval()) {
      if (!getProcessInterval().equals(other.getProcessInterval())) return false;
    }
    if (hasExecutionInterval() != other.hasExecutionInterval()) return false;
    if (hasExecutionInterval()) {
      if (!getExecutionInterval().equals(other.getExecutionInterval())) return false;
    }
    if (state_ != other.state_) return false;
    if (java.lang.Float.floatToIntBits(getProgressPercentage())
        != java.lang.Float.floatToIntBits(other.getProgressPercentage())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasProcessInterval()) {
      hash = (37 * hash) + PROCESS_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getProcessInterval().hashCode();
    }
    if (hasExecutionInterval()) {
      hash = (37 * hash) + EXECUTION_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getExecutionInterval().hashCode();
    }
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (37 * hash) + PROGRESS_PERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(getProgressPercentage());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static google.cloud.chronicle.v1.Retrohunt parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(google.cloud.chronicle.v1.Retrohunt prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Retrohunt is an execution of a Rule over a time range in the past.
   * </pre>
   *
   * Protobuf type {@code google.cloud.chronicle.v1.Retrohunt}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.chronicle.v1.Retrohunt)
      google.cloud.chronicle.v1.RetrohuntOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return google.cloud.chronicle.v1.RuleProto
          .internal_static_google_cloud_chronicle_v1_Retrohunt_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.cloud.chronicle.v1.RuleProto
          .internal_static_google_cloud_chronicle_v1_Retrohunt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.cloud.chronicle.v1.Retrohunt.class,
              google.cloud.chronicle.v1.Retrohunt.Builder.class);
    }

    // Construct using google.cloud.chronicle.v1.Retrohunt.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getProcessIntervalFieldBuilder();
        getExecutionIntervalFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      processInterval_ = null;
      if (processIntervalBuilder_ != null) {
        processIntervalBuilder_.dispose();
        processIntervalBuilder_ = null;
      }
      executionInterval_ = null;
      if (executionIntervalBuilder_ != null) {
        executionIntervalBuilder_.dispose();
        executionIntervalBuilder_ = null;
      }
      state_ = 0;
      progressPercentage_ = 0F;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return google.cloud.chronicle.v1.RuleProto
          .internal_static_google_cloud_chronicle_v1_Retrohunt_descriptor;
    }

    @java.lang.Override
    public google.cloud.chronicle.v1.Retrohunt getDefaultInstanceForType() {
      return google.cloud.chronicle.v1.Retrohunt.getDefaultInstance();
    }

    @java.lang.Override
    public google.cloud.chronicle.v1.Retrohunt build() {
      google.cloud.chronicle.v1.Retrohunt result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public google.cloud.chronicle.v1.Retrohunt buildPartial() {
      google.cloud.chronicle.v1.Retrohunt result = new google.cloud.chronicle.v1.Retrohunt(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(google.cloud.chronicle.v1.Retrohunt result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.processInterval_ =
            processIntervalBuilder_ == null ? processInterval_ : processIntervalBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.executionInterval_ =
            executionIntervalBuilder_ == null
                ? executionInterval_
                : executionIntervalBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.state_ = state_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.progressPercentage_ = progressPercentage_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof google.cloud.chronicle.v1.Retrohunt) {
        return mergeFrom((google.cloud.chronicle.v1.Retrohunt) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(google.cloud.chronicle.v1.Retrohunt other) {
      if (other == google.cloud.chronicle.v1.Retrohunt.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasProcessInterval()) {
        mergeProcessInterval(other.getProcessInterval());
      }
      if (other.hasExecutionInterval()) {
        mergeExecutionInterval(other.getExecutionInterval());
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (other.getProgressPercentage() != 0F) {
        setProgressPercentage(other.getProgressPercentage());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getProcessIntervalFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(
                    getExecutionIntervalFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 32:
              {
                state_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            case 45:
              {
                progressPercentage_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * The resource name of the retrohunt.
     * Retrohunt is the child of a rule revision. {rule} in the format below is
     * structured as {rule_id&#64;revision_id}.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The resource name of the retrohunt.
     * Retrohunt is the child of a rule revision. {rule} in the format below is
     * structured as {rule_id&#64;revision_id}.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The resource name of the retrohunt.
     * Retrohunt is the child of a rule revision. {rule} in the format below is
     * structured as {rule_id&#64;revision_id}.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource name of the retrohunt.
     * Retrohunt is the child of a rule revision. {rule} in the format below is
     * structured as {rule_id&#64;revision_id}.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The resource name of the retrohunt.
     * Retrohunt is the child of a rule revision. {rule} in the format below is
     * structured as {rule_id&#64;revision_id}.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.type.Interval processInterval_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Interval,
            com.google.type.Interval.Builder,
            com.google.type.IntervalOrBuilder>
        processIntervalBuilder_;
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the processInterval field is set.
     */
    public boolean hasProcessInterval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The processInterval.
     */
    public com.google.type.Interval getProcessInterval() {
      if (processIntervalBuilder_ == null) {
        return processInterval_ == null
            ? com.google.type.Interval.getDefaultInstance()
            : processInterval_;
      } else {
        return processIntervalBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setProcessInterval(com.google.type.Interval value) {
      if (processIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        processInterval_ = value;
      } else {
        processIntervalBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setProcessInterval(com.google.type.Interval.Builder builderForValue) {
      if (processIntervalBuilder_ == null) {
        processInterval_ = builderForValue.build();
      } else {
        processIntervalBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeProcessInterval(com.google.type.Interval value) {
      if (processIntervalBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && processInterval_ != null
            && processInterval_ != com.google.type.Interval.getDefaultInstance()) {
          getProcessIntervalBuilder().mergeFrom(value);
        } else {
          processInterval_ = value;
        }
      } else {
        processIntervalBuilder_.mergeFrom(value);
      }
      if (processInterval_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearProcessInterval() {
      bitField0_ = (bitField0_ & ~0x00000002);
      processInterval_ = null;
      if (processIntervalBuilder_ != null) {
        processIntervalBuilder_.dispose();
        processIntervalBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.type.Interval.Builder getProcessIntervalBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getProcessIntervalFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.type.IntervalOrBuilder getProcessIntervalOrBuilder() {
      if (processIntervalBuilder_ != null) {
        return processIntervalBuilder_.getMessageOrBuilder();
      } else {
        return processInterval_ == null
            ? com.google.type.Interval.getDefaultInstance()
            : processInterval_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The start and end time of the event time range this retrohunt
     * processes.
     * </pre>
     *
     * <code>.google.type.Interval process_interval = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Interval,
            com.google.type.Interval.Builder,
            com.google.type.IntervalOrBuilder>
        getProcessIntervalFieldBuilder() {
      if (processIntervalBuilder_ == null) {
        processIntervalBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Interval,
                com.google.type.Interval.Builder,
                com.google.type.IntervalOrBuilder>(
                getProcessInterval(), getParentForChildren(), isClean());
        processInterval_ = null;
      }
      return processIntervalBuilder_;
    }

    private com.google.type.Interval executionInterval_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Interval,
            com.google.type.Interval.Builder,
            com.google.type.IntervalOrBuilder>
        executionIntervalBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the executionInterval field is set.
     */
    public boolean hasExecutionInterval() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The executionInterval.
     */
    public com.google.type.Interval getExecutionInterval() {
      if (executionIntervalBuilder_ == null) {
        return executionInterval_ == null
            ? com.google.type.Interval.getDefaultInstance()
            : executionInterval_;
      } else {
        return executionIntervalBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setExecutionInterval(com.google.type.Interval value) {
      if (executionIntervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        executionInterval_ = value;
      } else {
        executionIntervalBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setExecutionInterval(com.google.type.Interval.Builder builderForValue) {
      if (executionIntervalBuilder_ == null) {
        executionInterval_ = builderForValue.build();
      } else {
        executionIntervalBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeExecutionInterval(com.google.type.Interval value) {
      if (executionIntervalBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && executionInterval_ != null
            && executionInterval_ != com.google.type.Interval.getDefaultInstance()) {
          getExecutionIntervalBuilder().mergeFrom(value);
        } else {
          executionInterval_ = value;
        }
      } else {
        executionIntervalBuilder_.mergeFrom(value);
      }
      if (executionInterval_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearExecutionInterval() {
      bitField0_ = (bitField0_ & ~0x00000004);
      executionInterval_ = null;
      if (executionIntervalBuilder_ != null) {
        executionIntervalBuilder_.dispose();
        executionIntervalBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.type.Interval.Builder getExecutionIntervalBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getExecutionIntervalFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.type.IntervalOrBuilder getExecutionIntervalOrBuilder() {
      if (executionIntervalBuilder_ != null) {
        return executionIntervalBuilder_.getMessageOrBuilder();
      } else {
        return executionInterval_ == null
            ? com.google.type.Interval.getDefaultInstance()
            : executionInterval_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The start and end time of the retrohunt execution. If the
     * retrohunt is not yet finished, the end time of the interval will not be
     * populated.
     * </pre>
     *
     * <code>
     * .google.type.Interval execution_interval = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Interval,
            com.google.type.Interval.Builder,
            com.google.type.IntervalOrBuilder>
        getExecutionIntervalFieldBuilder() {
      if (executionIntervalBuilder_ == null) {
        executionIntervalBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Interval,
                com.google.type.Interval.Builder,
                com.google.type.IntervalOrBuilder>(
                getExecutionInterval(), getParentForChildren(), isClean());
        executionInterval_ = null;
      }
      return executionIntervalBuilder_;
    }

    private int state_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. The state of the retrohunt.
     * </pre>
     *
     * <code>
     * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The state of the retrohunt.
     * </pre>
     *
     * <code>
     * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      state_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The state of the retrohunt.
     * </pre>
     *
     * <code>
     * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The state.
     */
    @java.lang.Override
    public google.cloud.chronicle.v1.Retrohunt.State getState() {
      google.cloud.chronicle.v1.Retrohunt.State result =
          google.cloud.chronicle.v1.Retrohunt.State.forNumber(state_);
      return result == null ? google.cloud.chronicle.v1.Retrohunt.State.UNRECOGNIZED : result;
    }
    /**
     *
     *
     * <pre>
     * Output only. The state of the retrohunt.
     * </pre>
     *
     * <code>
     * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(google.cloud.chronicle.v1.Retrohunt.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The state of the retrohunt.
     * </pre>
     *
     * <code>
     * .google.cloud.chronicle.v1.Retrohunt.State state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000008);
      state_ = 0;
      onChanged();
      return this;
    }

    private float progressPercentage_;
    /**
     *
     *
     * <pre>
     * Output only. Percent progress of the retrohunt towards completion, from
     * 0.00 to 100.00.
     * </pre>
     *
     * <code>float progress_percentage = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The progressPercentage.
     */
    @java.lang.Override
    public float getProgressPercentage() {
      return progressPercentage_;
    }
    /**
     *
     *
     * <pre>
     * Output only. Percent progress of the retrohunt towards completion, from
     * 0.00 to 100.00.
     * </pre>
     *
     * <code>float progress_percentage = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The progressPercentage to set.
     * @return This builder for chaining.
     */
    public Builder setProgressPercentage(float value) {

      progressPercentage_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Percent progress of the retrohunt towards completion, from
     * 0.00 to 100.00.
     * </pre>
     *
     * <code>float progress_percentage = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProgressPercentage() {
      bitField0_ = (bitField0_ & ~0x00000010);
      progressPercentage_ = 0F;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.chronicle.v1.Retrohunt)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.chronicle.v1.Retrohunt)
  private static final google.cloud.chronicle.v1.Retrohunt DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new google.cloud.chronicle.v1.Retrohunt();
  }

  public static google.cloud.chronicle.v1.Retrohunt getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Retrohunt> PARSER =
      new com.google.protobuf.AbstractParser<Retrohunt>() {
        @java.lang.Override
        public Retrohunt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Retrohunt> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Retrohunt> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public google.cloud.chronicle.v1.Retrohunt getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
