/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/chronicle/v1/reference_list.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.chronicle.v1;

public interface UpdateReferenceListRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.chronicle.v1.UpdateReferenceListRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The reference list to update.
   *
   * The reference list's `name` field is used to identify the reference list to
   * update.
   * Format:
   * `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
   * </pre>
   *
   * <code>
   * .google.cloud.chronicle.v1.ReferenceList reference_list = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the referenceList field is set.
   */
  boolean hasReferenceList();

  /**
   *
   *
   * <pre>
   * Required. The reference list to update.
   *
   * The reference list's `name` field is used to identify the reference list to
   * update.
   * Format:
   * `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
   * </pre>
   *
   * <code>
   * .google.cloud.chronicle.v1.ReferenceList reference_list = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The referenceList.
   */
  com.google.cloud.chronicle.v1.ReferenceList getReferenceList();

  /**
   *
   *
   * <pre>
   * Required. The reference list to update.
   *
   * The reference list's `name` field is used to identify the reference list to
   * update.
   * Format:
   * `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
   * </pre>
   *
   * <code>
   * .google.cloud.chronicle.v1.ReferenceList reference_list = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.chronicle.v1.ReferenceListOrBuilder getReferenceListOrBuilder();

  /**
   *
   *
   * <pre>
   * The list of fields to update.
   * When no field mask is supplied, all non-empty fields will be updated.
   * A field mask of "*" will update all fields, whether empty or not.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2;</code>
   *
   * @return Whether the updateMask field is set.
   */
  boolean hasUpdateMask();

  /**
   *
   *
   * <pre>
   * The list of fields to update.
   * When no field mask is supplied, all non-empty fields will be updated.
   * A field mask of "*" will update all fields, whether empty or not.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2;</code>
   *
   * @return The updateMask.
   */
  com.google.protobuf.FieldMask getUpdateMask();

  /**
   *
   *
   * <pre>
   * The list of fields to update.
   * When no field mask is supplied, all non-empty fields will be updated.
   * A field mask of "*" will update all fields, whether empty or not.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2;</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();
}
