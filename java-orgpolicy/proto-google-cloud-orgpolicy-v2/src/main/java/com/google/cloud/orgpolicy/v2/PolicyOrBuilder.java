/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/orgpolicy/v2/orgpolicy.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.orgpolicy.v2;

public interface PolicyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.orgpolicy.v2.Policy)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Immutable. The resource name of the policy. Must be one of the following
   * forms, where `constraint_name` is the name of the constraint which this
   * policy configures:
   *
   * * `projects/{project_number}/policies/{constraint_name}`
   * * `folders/{folder_id}/policies/{constraint_name}`
   * * `organizations/{organization_id}/policies/{constraint_name}`
   *
   * For example, `projects/123/policies/compute.disableSerialPortAccess`.
   *
   * Note: `projects/{project_id}/policies/{constraint_name}` is also an
   * acceptable name for API requests, but responses will return the name using
   * the equivalent project number.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Immutable. The resource name of the policy. Must be one of the following
   * forms, where `constraint_name` is the name of the constraint which this
   * policy configures:
   *
   * * `projects/{project_number}/policies/{constraint_name}`
   * * `folders/{folder_id}/policies/{constraint_name}`
   * * `organizations/{organization_id}/policies/{constraint_name}`
   *
   * For example, `projects/123/policies/compute.disableSerialPortAccess`.
   *
   * Note: `projects/{project_id}/policies/{constraint_name}` is also an
   * acceptable name for API requests, but responses will return the name using
   * the equivalent project number.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Basic information about the Organization Policy.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.PolicySpec spec = 2;</code>
   *
   * @return Whether the spec field is set.
   */
  boolean hasSpec();
  /**
   *
   *
   * <pre>
   * Basic information about the Organization Policy.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.PolicySpec spec = 2;</code>
   *
   * @return The spec.
   */
  com.google.cloud.orgpolicy.v2.PolicySpec getSpec();
  /**
   *
   *
   * <pre>
   * Basic information about the Organization Policy.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.PolicySpec spec = 2;</code>
   */
  com.google.cloud.orgpolicy.v2.PolicySpecOrBuilder getSpecOrBuilder();

  /**
   *
   *
   * <pre>
   * Deprecated.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.AlternatePolicySpec alternate = 3 [deprecated = true];</code>
   *
   * @deprecated google.cloud.orgpolicy.v2.Policy.alternate is deprecated. See
   *     google/cloud/orgpolicy/v2/orgpolicy.proto;l=270
   * @return Whether the alternate field is set.
   */
  @java.lang.Deprecated
  boolean hasAlternate();
  /**
   *
   *
   * <pre>
   * Deprecated.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.AlternatePolicySpec alternate = 3 [deprecated = true];</code>
   *
   * @deprecated google.cloud.orgpolicy.v2.Policy.alternate is deprecated. See
   *     google/cloud/orgpolicy/v2/orgpolicy.proto;l=270
   * @return The alternate.
   */
  @java.lang.Deprecated
  com.google.cloud.orgpolicy.v2.AlternatePolicySpec getAlternate();
  /**
   *
   *
   * <pre>
   * Deprecated.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.AlternatePolicySpec alternate = 3 [deprecated = true];</code>
   */
  @java.lang.Deprecated
  com.google.cloud.orgpolicy.v2.AlternatePolicySpecOrBuilder getAlternateOrBuilder();

  /**
   *
   *
   * <pre>
   * Dry-run policy.
   * Audit-only policy, can be used to monitor how the policy would have
   * impacted the existing and future resources if it's enforced.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.PolicySpec dry_run_spec = 4;</code>
   *
   * @return Whether the dryRunSpec field is set.
   */
  boolean hasDryRunSpec();
  /**
   *
   *
   * <pre>
   * Dry-run policy.
   * Audit-only policy, can be used to monitor how the policy would have
   * impacted the existing and future resources if it's enforced.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.PolicySpec dry_run_spec = 4;</code>
   *
   * @return The dryRunSpec.
   */
  com.google.cloud.orgpolicy.v2.PolicySpec getDryRunSpec();
  /**
   *
   *
   * <pre>
   * Dry-run policy.
   * Audit-only policy, can be used to monitor how the policy would have
   * impacted the existing and future resources if it's enforced.
   * </pre>
   *
   * <code>.google.cloud.orgpolicy.v2.PolicySpec dry_run_spec = 4;</code>
   */
  com.google.cloud.orgpolicy.v2.PolicySpecOrBuilder getDryRunSpecOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. An opaque tag indicating the current state of the policy, used
   * for concurrency control. This 'etag' is computed by the server based on the
   * value of other fields, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * </pre>
   *
   * <code>string etag = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The etag.
   */
  java.lang.String getEtag();
  /**
   *
   *
   * <pre>
   * Optional. An opaque tag indicating the current state of the policy, used
   * for concurrency control. This 'etag' is computed by the server based on the
   * value of other fields, and may be sent on update and delete requests to
   * ensure the client has an up-to-date value before proceeding.
   * </pre>
   *
   * <code>string etag = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for etag.
   */
  com.google.protobuf.ByteString getEtagBytes();
}
