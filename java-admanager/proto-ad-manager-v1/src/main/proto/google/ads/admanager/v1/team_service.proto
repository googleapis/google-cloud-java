// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.ads.admanager.v1;

import "google/ads/admanager/v1/team_messages.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";

option csharp_namespace = "Google.Ads.AdManager.V1";
option go_package = "google.golang.org/genproto/googleapis/ads/admanager/v1;admanager";
option java_multiple_files = true;
option java_outer_classname = "TeamServiceProto";
option java_package = "com.google.ads.admanager.v1";
option php_namespace = "Google\\Ads\\AdManager\\V1";
option ruby_package = "Google::Ads::AdManager::V1";

// Provides methods for handling `Team` objects.
service TeamService {
  option (google.api.default_host) = "admanager.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/admanager";

  // API to retrieve a `Team` object.
  rpc GetTeam(GetTeamRequest) returns (Team) {
    option (google.api.http) = {
      get: "/v1/{name=networks/*/teams/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // API to retrieve a list of `Team` objects.
  rpc ListTeams(ListTeamsRequest) returns (ListTeamsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=networks/*}/teams"
    };
    option (google.api.method_signature) = "parent";
  }

  // API to create a `Team` object.
  rpc CreateTeam(CreateTeamRequest) returns (Team) {
    option (google.api.http) = {
      post: "/v1/{parent=networks/*}/teams"
      body: "team"
    };
    option (google.api.method_signature) = "parent,team";
  }

  // API to batch create `Team` objects.
  rpc BatchCreateTeams(BatchCreateTeamsRequest)
      returns (BatchCreateTeamsResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=networks/*}/teams:batchCreate"
      body: "*"
    };
    option (google.api.method_signature) = "parent,requests";
  }

  // API to update a `Team` object.
  rpc UpdateTeam(UpdateTeamRequest) returns (Team) {
    option (google.api.http) = {
      patch: "/v1/{team.name=networks/*/teams/*}"
      body: "team"
    };
    option (google.api.method_signature) = "team,update_mask";
  }

  // API to batch update `Team` objects.
  rpc BatchUpdateTeams(BatchUpdateTeamsRequest)
      returns (BatchUpdateTeamsResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=networks/*}/teams:batchUpdate"
      body: "*"
    };
    option (google.api.method_signature) = "parent,requests";
  }

  // API to batch activate `Team` objects.
  rpc BatchActivateTeams(BatchActivateTeamsRequest)
      returns (BatchActivateTeamsResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=networks/*}/teams:batchActivate"
      body: "*"
    };
    option (google.api.method_signature) = "parent,names";
  }

  // API to batch deactivate `Team` objects.
  rpc BatchDeactivateTeams(BatchDeactivateTeamsRequest)
      returns (BatchDeactivateTeamsResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=networks/*}/teams:batchDeactivate"
      body: "*"
    };
    option (google.api.method_signature) = "parent,names";
  }
}

// Request object for `GetTeam` method.
message GetTeamRequest {
  // Required. The resource name of the Team.
  // Format: `networks/{network_code}/teams/{team_id}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "admanager.googleapis.com/Team" }
  ];
}

// Request object for `ListTeams` method.
message ListTeamsRequest {
  // Required. The parent, which owns this collection of Teams.
  // Format: `networks/{network_code}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "admanager.googleapis.com/Network"
    }
  ];

  // Optional. The maximum number of `Teams` to return. The service may return
  // fewer than this value. If unspecified, at most 50 `Teams` will be returned.
  // The maximum value is 1000; values greater than 1000 will be coerced to
  // 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A page token, received from a previous `ListTeams` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListTeams` must match
  // the call that provided the page token.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Expression to filter the response.
  // See syntax details at
  // https://developers.google.com/ad-manager/api/beta/filters
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Expression to specify sorting order.
  // See syntax details at
  // https://developers.google.com/ad-manager/api/beta/filters#order
  string order_by = 5 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Number of individual resources to skip while paginating.
  int32 skip = 6 [(google.api.field_behavior) = OPTIONAL];
}

// Response object for `ListTeamsRequest` containing matching `Team` objects.
message ListTeamsResponse {
  // The `Team` objects from the specified network.
  repeated Team teams = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;

  // Total number of `Team` objects.
  // If a filter was included in the request, this reflects the total number
  // after the filtering is applied.
  //
  // `total_size` won't be calculated in the response unless it has been
  // included in a response field mask. The response field mask can be provided
  // to the method by using the URL parameter `$fields` or `fields`, or by using
  // the HTTP/gRPC header `X-Goog-FieldMask`.
  //
  // For more information, see
  // https://developers.google.com/ad-manager/api/beta/field-masks
  int32 total_size = 3;
}

// Request object for `CreateTeam` method.
message CreateTeamRequest {
  // Required. The parent resource where this `Team` will be created.
  // Format: `networks/{network_code}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "admanager.googleapis.com/Network"
    }
  ];

  // Required. The `Team` to create.
  Team team = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request object for `BatchCreateTeams` method.
message BatchCreateTeamsRequest {
  // Required. The parent resource where `Teams` will be created.
  // Format: `networks/{network_code}`
  // The parent field in the CreateTeamRequest must match this
  // field.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "admanager.googleapis.com/Network"
    }
  ];

  // Required. The `Team` objects to create.
  // A maximum of 100 objects can be created in a batch.
  repeated CreateTeamRequest requests = 2
      [(google.api.field_behavior) = REQUIRED];
}

// Response object for `BatchCreateTeams` method.
message BatchCreateTeamsResponse {
  // The `Team` objects created.
  repeated Team teams = 1;
}

// Request object for `UpdateTeam` method.
message UpdateTeamRequest {
  // Required. The `Team` to update.
  //
  // The `Team`'s `name` is used to identify the `Team` to update.
  Team team = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The list of fields to update.
  google.protobuf.FieldMask update_mask = 2
      [(google.api.field_behavior) = REQUIRED];
}

// Request object for `BatchUpdateTeams` method.
message BatchUpdateTeamsRequest {
  // Required. The parent resource where `Teams` will be updated.
  // Format: `networks/{network_code}`
  // The parent field in the UpdateTeamRequest must match this
  // field.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "admanager.googleapis.com/Network"
    }
  ];

  // Required. The `Team` objects to update.
  // A maximum of 100 objects can be updated in a batch.
  repeated UpdateTeamRequest requests = 2
      [(google.api.field_behavior) = REQUIRED];
}

// Response object for `BatchUpdateTeams` method.
message BatchUpdateTeamsResponse {
  // The `Team` objects updated.
  repeated Team teams = 1;
}

// Request message for `BatchActivateTeams` method.
message BatchActivateTeamsRequest {
  // Required. Format: `networks/{network_code}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "admanager.googleapis.com/Network"
    }
  ];

  // Required. The resource names of the `Team`s to activate.
  // Format: `networks/{network_code}/teams/{team_id}`
  repeated string names = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "admanager.googleapis.com/Team" }
  ];
}

// Response object for `BatchActivateTeams` method.
message BatchActivateTeamsResponse {}

// Request message for `BatchDeactivateTeams` method.
message BatchDeactivateTeamsRequest {
  // Required. Format: `networks/{network_code}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "admanager.googleapis.com/Network"
    }
  ];

  // Required. The resource names of the `Team`s to deactivate.
  // Format: `networks/{network_code}/teams/{team_id}`
  repeated string names = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "admanager.googleapis.com/Team" }
  ];
}

// Response object for `BatchDeactivateTeams` method.
message BatchDeactivateTeamsResponse {}
