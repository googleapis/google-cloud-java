// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.oracledatabase.v1;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option csharp_namespace = "Google.Cloud.OracleDatabase.V1";
option go_package = "cloud.google.com/go/oracledatabase/apiv1/oracledatabasepb;oracledatabasepb";
option java_multiple_files = true;
option java_outer_classname = "DatabaseCharacterSetProto";
option java_package = "com.google.cloud.oracledatabase.v1";
option php_namespace = "Google\\Cloud\\OracleDatabase\\V1";
option ruby_package = "Google::Cloud::OracleDatabase::V1";

// Details of the Database character set resource.
message DatabaseCharacterSet {
  option (google.api.resource) = {
    type: "oracledatabase.googleapis.com/DatabaseCharacterSet"
    pattern: "projects/{project}/locations/{location}/databaseCharacterSets/{database_character_set}"
    plural: "databaseCharacterSets"
    singular: "databaseCharacterSet"
  };

  // The type of character set a Database can have.
  enum CharacterSetType {
    // Character set type is not specified.
    CHARACTER_SET_TYPE_UNSPECIFIED = 0;

    // Character set type is set to database.
    DATABASE = 1;

    // Character set type is set to national.
    NATIONAL = 2;
  }

  // Identifier. The name of the Database Character Set resource in the
  // following format:
  // projects/{project}/locations/{region}/databaseCharacterSets/{database_character_set}
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // Output only. The character set type for the Database.
  CharacterSetType character_set_type = 2
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The character set name for the Database which is the ID in the
  // resource name.
  string character_set = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The request for `DatabaseCharacterSet.List`.
message ListDatabaseCharacterSetsRequest {
  // Required. The parent value for DatabaseCharacterSets in the following
  // format: projects/{project}/locations/{location}.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "oracledatabase.googleapis.com/DatabaseCharacterSet"
    }
  ];

  // Optional. The maximum number of DatabaseCharacterSets to return. The
  // service may return fewer than this value. If unspecified, at most 50
  // DatabaseCharacterSets will be returned. The maximum value is 1000; values
  // above 1000 will be coerced to 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A page token, received from a previous
  // `ListDatabaseCharacterSets` call. Provide this to retrieve the subsequent
  // page.
  //
  // When paginating, all other parameters provided to
  // `ListDatabaseCharacterSets` must match the call that provided the page
  // token.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. An expression for filtering the results of the request. Only the
  // **character_set_type** field is supported in the following format:
  // `character_set_type="{characterSetType}"`. Accepted values include
  // `DATABASE` and `NATIONAL`.
  string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// The response for `DatabaseCharacterSet.List`.
message ListDatabaseCharacterSetsResponse {
  // The list of DatabaseCharacterSets.
  repeated DatabaseCharacterSet database_character_sets = 1;

  // A token identifying a page of results the server should return.
  string next_page_token = 2;
}
