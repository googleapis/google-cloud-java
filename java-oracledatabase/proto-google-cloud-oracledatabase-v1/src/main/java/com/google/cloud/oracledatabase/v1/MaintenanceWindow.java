/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oracledatabase/v1/exadata_infra.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.oracledatabase.v1;

/**
 *
 *
 * <pre>
 * Maintenance window as defined by Oracle.
 * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
 * </pre>
 *
 * Protobuf type {@code google.cloud.oracledatabase.v1.MaintenanceWindow}
 */
public final class MaintenanceWindow extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.oracledatabase.v1.MaintenanceWindow)
    MaintenanceWindowOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use MaintenanceWindow.newBuilder() to construct.
  private MaintenanceWindow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private MaintenanceWindow() {
    preference_ = 0;
    months_ = java.util.Collections.emptyList();
    weeksOfMonth_ = emptyIntList();
    daysOfWeek_ = java.util.Collections.emptyList();
    hoursOfDay_ = emptyIntList();
    patchingMode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new MaintenanceWindow();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.oracledatabase.v1.CloudExadataInfrastructureProto
        .internal_static_google_cloud_oracledatabase_v1_MaintenanceWindow_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.oracledatabase.v1.CloudExadataInfrastructureProto
        .internal_static_google_cloud_oracledatabase_v1_MaintenanceWindow_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.oracledatabase.v1.MaintenanceWindow.class,
            com.google.cloud.oracledatabase.v1.MaintenanceWindow.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Maintenance window preference.
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference}
   */
  public enum MaintenanceWindowPreference implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default unspecified value.
     * </pre>
     *
     * <code>MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED = 0;</code>
     */
    MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Custom preference.
     * </pre>
     *
     * <code>CUSTOM_PREFERENCE = 1;</code>
     */
    CUSTOM_PREFERENCE(1),
    /**
     *
     *
     * <pre>
     * No preference.
     * </pre>
     *
     * <code>NO_PREFERENCE = 2;</code>
     */
    NO_PREFERENCE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default unspecified value.
     * </pre>
     *
     * <code>MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED = 0;</code>
     */
    public static final int MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Custom preference.
     * </pre>
     *
     * <code>CUSTOM_PREFERENCE = 1;</code>
     */
    public static final int CUSTOM_PREFERENCE_VALUE = 1;

    /**
     *
     *
     * <pre>
     * No preference.
     * </pre>
     *
     * <code>NO_PREFERENCE = 2;</code>
     */
    public static final int NO_PREFERENCE_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MaintenanceWindowPreference valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MaintenanceWindowPreference forNumber(int value) {
      switch (value) {
        case 0:
          return MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED;
        case 1:
          return CUSTOM_PREFERENCE;
        case 2:
          return NO_PREFERENCE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MaintenanceWindowPreference>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<MaintenanceWindowPreference>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MaintenanceWindowPreference>() {
              public MaintenanceWindowPreference findValueByNumber(int number) {
                return MaintenanceWindowPreference.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.oracledatabase.v1.MaintenanceWindow.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final MaintenanceWindowPreference[] VALUES = values();

    public static MaintenanceWindowPreference valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MaintenanceWindowPreference(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference)
  }

  /**
   *
   *
   * <pre>
   * Patching mode.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode}
   */
  public enum PatchingMode implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default unspecified value.
     * </pre>
     *
     * <code>PATCHING_MODE_UNSPECIFIED = 0;</code>
     */
    PATCHING_MODE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Updates the Cloud Exadata database server hosts in a rolling fashion.
     * </pre>
     *
     * <code>ROLLING = 1;</code>
     */
    ROLLING(1),
    /**
     *
     *
     * <pre>
     * The non-rolling maintenance method first updates your storage servers at
     * the same time, then your database servers at the same time.
     * </pre>
     *
     * <code>NON_ROLLING = 2;</code>
     */
    NON_ROLLING(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default unspecified value.
     * </pre>
     *
     * <code>PATCHING_MODE_UNSPECIFIED = 0;</code>
     */
    public static final int PATCHING_MODE_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Updates the Cloud Exadata database server hosts in a rolling fashion.
     * </pre>
     *
     * <code>ROLLING = 1;</code>
     */
    public static final int ROLLING_VALUE = 1;

    /**
     *
     *
     * <pre>
     * The non-rolling maintenance method first updates your storage servers at
     * the same time, then your database servers at the same time.
     * </pre>
     *
     * <code>NON_ROLLING = 2;</code>
     */
    public static final int NON_ROLLING_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PatchingMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PatchingMode forNumber(int value) {
      switch (value) {
        case 0:
          return PATCHING_MODE_UNSPECIFIED;
        case 1:
          return ROLLING;
        case 2:
          return NON_ROLLING;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PatchingMode> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<PatchingMode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PatchingMode>() {
          public PatchingMode findValueByNumber(int number) {
            return PatchingMode.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.oracledatabase.v1.MaintenanceWindow.getDescriptor()
          .getEnumTypes()
          .get(1);
    }

    private static final PatchingMode[] VALUES = values();

    public static PatchingMode valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PatchingMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode)
  }

  public static final int PREFERENCE_FIELD_NUMBER = 1;
  private int preference_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. The maintenance window scheduling preference.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for preference.
   */
  @java.lang.Override
  public int getPreferenceValue() {
    return preference_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The maintenance window scheduling preference.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The preference.
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
      getPreference() {
    com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference result =
        com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference.forNumber(
            preference_);
    return result == null
        ? com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
            .UNRECOGNIZED
        : result;
  }

  public static final int MONTHS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> months_;

  private static final com.google.protobuf.Internal.ListAdapter.Converter<
          java.lang.Integer, com.google.type.Month>
      months_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.type.Month>() {
            public com.google.type.Month convert(java.lang.Integer from) {
              com.google.type.Month result = com.google.type.Month.forNumber(from);
              return result == null ? com.google.type.Month.UNRECOGNIZED : result;
            }
          };

  /**
   *
   *
   * <pre>
   * Optional. Months during the year when maintenance should be performed.
   * </pre>
   *
   * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the months.
   */
  @java.lang.Override
  public java.util.List<com.google.type.Month> getMonthsList() {
    return new com.google.protobuf.Internal.ListAdapter<java.lang.Integer, com.google.type.Month>(
        months_, months_converter_);
  }

  /**
   *
   *
   * <pre>
   * Optional. Months during the year when maintenance should be performed.
   * </pre>
   *
   * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of months.
   */
  @java.lang.Override
  public int getMonthsCount() {
    return months_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Months during the year when maintenance should be performed.
   * </pre>
   *
   * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The months at the given index.
   */
  @java.lang.Override
  public com.google.type.Month getMonths(int index) {
    return months_converter_.convert(months_.get(index));
  }

  /**
   *
   *
   * <pre>
   * Optional. Months during the year when maintenance should be performed.
   * </pre>
   *
   * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the enum numeric values on the wire for months.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer> getMonthsValueList() {
    return months_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Months during the year when maintenance should be performed.
   * </pre>
   *
   * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of months at the given index.
   */
  @java.lang.Override
  public int getMonthsValue(int index) {
    return months_.get(index);
  }

  private int monthsMemoizedSerializedSize;

  public static final int WEEKS_OF_MONTH_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList weeksOfMonth_ = emptyIntList();

  /**
   *
   *
   * <pre>
   * Optional. Weeks during the month when maintenance should be performed.
   * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
   * duration of 7 days. Weeks start and end based on calendar dates, not days
   * of the week.
   * </pre>
   *
   * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the weeksOfMonth.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer> getWeeksOfMonthList() {
    return weeksOfMonth_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Weeks during the month when maintenance should be performed.
   * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
   * duration of 7 days. Weeks start and end based on calendar dates, not days
   * of the week.
   * </pre>
   *
   * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of weeksOfMonth.
   */
  public int getWeeksOfMonthCount() {
    return weeksOfMonth_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Weeks during the month when maintenance should be performed.
   * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
   * duration of 7 days. Weeks start and end based on calendar dates, not days
   * of the week.
   * </pre>
   *
   * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The weeksOfMonth at the given index.
   */
  public int getWeeksOfMonth(int index) {
    return weeksOfMonth_.getInt(index);
  }

  private int weeksOfMonthMemoizedSerializedSize = -1;

  public static final int DAYS_OF_WEEK_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> daysOfWeek_;

  private static final com.google.protobuf.Internal.ListAdapter.Converter<
          java.lang.Integer, com.google.type.DayOfWeek>
      daysOfWeek_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.google.type.DayOfWeek>() {
            public com.google.type.DayOfWeek convert(java.lang.Integer from) {
              com.google.type.DayOfWeek result = com.google.type.DayOfWeek.forNumber(from);
              return result == null ? com.google.type.DayOfWeek.UNRECOGNIZED : result;
            }
          };

  /**
   *
   *
   * <pre>
   * Optional. Days during the week when maintenance should be performed.
   * </pre>
   *
   * <code>
   * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the daysOfWeek.
   */
  @java.lang.Override
  public java.util.List<com.google.type.DayOfWeek> getDaysOfWeekList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.google.type.DayOfWeek>(daysOfWeek_, daysOfWeek_converter_);
  }

  /**
   *
   *
   * <pre>
   * Optional. Days during the week when maintenance should be performed.
   * </pre>
   *
   * <code>
   * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The count of daysOfWeek.
   */
  @java.lang.Override
  public int getDaysOfWeekCount() {
    return daysOfWeek_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. Days during the week when maintenance should be performed.
   * </pre>
   *
   * <code>
   * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the element to return.
   * @return The daysOfWeek at the given index.
   */
  @java.lang.Override
  public com.google.type.DayOfWeek getDaysOfWeek(int index) {
    return daysOfWeek_converter_.convert(daysOfWeek_.get(index));
  }

  /**
   *
   *
   * <pre>
   * Optional. Days during the week when maintenance should be performed.
   * </pre>
   *
   * <code>
   * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return A list containing the enum numeric values on the wire for daysOfWeek.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer> getDaysOfWeekValueList() {
    return daysOfWeek_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Days during the week when maintenance should be performed.
   * </pre>
   *
   * <code>
   * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of daysOfWeek at the given index.
   */
  @java.lang.Override
  public int getDaysOfWeekValue(int index) {
    return daysOfWeek_.get(index);
  }

  private int daysOfWeekMemoizedSerializedSize;

  public static final int HOURS_OF_DAY_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList hoursOfDay_ = emptyIntList();

  /**
   *
   *
   * <pre>
   * Optional. The window of hours during the day when maintenance should be
   * performed. The window is a 4 hour slot. Valid values are:
   *   0 - represents time slot 0:00 - 3:59 UTC
   *   4 - represents time slot 4:00 - 7:59 UTC
   *   8 - represents time slot 8:00 - 11:59 UTC
   *   12 - represents time slot 12:00 - 15:59 UTC
   *   16 - represents time slot 16:00 - 19:59 UTC
   *   20 - represents time slot 20:00 - 23:59 UTC
   * </pre>
   *
   * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the hoursOfDay.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer> getHoursOfDayList() {
    return hoursOfDay_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The window of hours during the day when maintenance should be
   * performed. The window is a 4 hour slot. Valid values are:
   *   0 - represents time slot 0:00 - 3:59 UTC
   *   4 - represents time slot 4:00 - 7:59 UTC
   *   8 - represents time slot 8:00 - 11:59 UTC
   *   12 - represents time slot 12:00 - 15:59 UTC
   *   16 - represents time slot 16:00 - 19:59 UTC
   *   20 - represents time slot 20:00 - 23:59 UTC
   * </pre>
   *
   * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of hoursOfDay.
   */
  public int getHoursOfDayCount() {
    return hoursOfDay_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. The window of hours during the day when maintenance should be
   * performed. The window is a 4 hour slot. Valid values are:
   *   0 - represents time slot 0:00 - 3:59 UTC
   *   4 - represents time slot 4:00 - 7:59 UTC
   *   8 - represents time slot 8:00 - 11:59 UTC
   *   12 - represents time slot 12:00 - 15:59 UTC
   *   16 - represents time slot 16:00 - 19:59 UTC
   *   20 - represents time slot 20:00 - 23:59 UTC
   * </pre>
   *
   * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The hoursOfDay at the given index.
   */
  public int getHoursOfDay(int index) {
    return hoursOfDay_.getInt(index);
  }

  private int hoursOfDayMemoizedSerializedSize = -1;

  public static final int LEAD_TIME_WEEK_FIELD_NUMBER = 6;
  private int leadTimeWeek_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Lead time window allows user to set a lead time to prepare for a
   * down time. The lead time is in weeks and valid value is between 1 to 4.
   * </pre>
   *
   * <code>int32 lead_time_week = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The leadTimeWeek.
   */
  @java.lang.Override
  public int getLeadTimeWeek() {
    return leadTimeWeek_;
  }

  public static final int PATCHING_MODE_FIELD_NUMBER = 7;
  private int patchingMode_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Cloud CloudExadataInfrastructure node patching method, either
   * "ROLLING" or "NONROLLING". Default value is ROLLING.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for patchingMode.
   */
  @java.lang.Override
  public int getPatchingModeValue() {
    return patchingMode_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Cloud CloudExadataInfrastructure node patching method, either
   * "ROLLING" or "NONROLLING". Default value is ROLLING.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The patchingMode.
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode getPatchingMode() {
    com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode result =
        com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode.forNumber(patchingMode_);
    return result == null
        ? com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode.UNRECOGNIZED
        : result;
  }

  public static final int CUSTOM_ACTION_TIMEOUT_MINS_FIELD_NUMBER = 8;
  private int customActionTimeoutMins_ = 0;

  /**
   *
   *
   * <pre>
   * Optional. Determines the amount of time the system will wait before the
   * start of each database server patching operation. Custom action timeout is
   * in minutes and valid value is between 15 to 120 (inclusive).
   * </pre>
   *
   * <code>int32 custom_action_timeout_mins = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The customActionTimeoutMins.
   */
  @java.lang.Override
  public int getCustomActionTimeoutMins() {
    return customActionTimeoutMins_;
  }

  public static final int IS_CUSTOM_ACTION_TIMEOUT_ENABLED_FIELD_NUMBER = 9;
  private boolean isCustomActionTimeoutEnabled_ = false;

  /**
   *
   *
   * <pre>
   * Optional. If true, enables the configuration of a custom action timeout
   * (waiting period) between database server patching operations.
   * </pre>
   *
   * <code>bool is_custom_action_timeout_enabled = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The isCustomActionTimeoutEnabled.
   */
  @java.lang.Override
  public boolean getIsCustomActionTimeoutEnabled() {
    return isCustomActionTimeoutEnabled_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    getSerializedSize();
    if (preference_
        != com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
            .MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, preference_);
    }
    if (getMonthsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(monthsMemoizedSerializedSize);
    }
    for (int i = 0; i < months_.size(); i++) {
      output.writeEnumNoTag(months_.get(i));
    }
    if (getWeeksOfMonthList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(weeksOfMonthMemoizedSerializedSize);
    }
    for (int i = 0; i < weeksOfMonth_.size(); i++) {
      output.writeInt32NoTag(weeksOfMonth_.getInt(i));
    }
    if (getDaysOfWeekList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(daysOfWeekMemoizedSerializedSize);
    }
    for (int i = 0; i < daysOfWeek_.size(); i++) {
      output.writeEnumNoTag(daysOfWeek_.get(i));
    }
    if (getHoursOfDayList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(hoursOfDayMemoizedSerializedSize);
    }
    for (int i = 0; i < hoursOfDay_.size(); i++) {
      output.writeInt32NoTag(hoursOfDay_.getInt(i));
    }
    if (leadTimeWeek_ != 0) {
      output.writeInt32(6, leadTimeWeek_);
    }
    if (patchingMode_
        != com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode
            .PATCHING_MODE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(7, patchingMode_);
    }
    if (customActionTimeoutMins_ != 0) {
      output.writeInt32(8, customActionTimeoutMins_);
    }
    if (isCustomActionTimeoutEnabled_ != false) {
      output.writeBool(9, isCustomActionTimeoutEnabled_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (preference_
        != com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
            .MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, preference_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < months_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(months_.get(i));
      }
      size += dataSize;
      if (!getMonthsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(dataSize);
      }
      monthsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < weeksOfMonth_.size(); i++) {
        dataSize +=
            com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(weeksOfMonth_.getInt(i));
      }
      size += dataSize;
      if (!getWeeksOfMonthList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
      }
      weeksOfMonthMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < daysOfWeek_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(daysOfWeek_.get(i));
      }
      size += dataSize;
      if (!getDaysOfWeekList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(dataSize);
      }
      daysOfWeekMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < hoursOfDay_.size(); i++) {
        dataSize +=
            com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(hoursOfDay_.getInt(i));
      }
      size += dataSize;
      if (!getHoursOfDayList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
      }
      hoursOfDayMemoizedSerializedSize = dataSize;
    }
    if (leadTimeWeek_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, leadTimeWeek_);
    }
    if (patchingMode_
        != com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode
            .PATCHING_MODE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(7, patchingMode_);
    }
    if (customActionTimeoutMins_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(8, customActionTimeoutMins_);
    }
    if (isCustomActionTimeoutEnabled_ != false) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(9, isCustomActionTimeoutEnabled_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.oracledatabase.v1.MaintenanceWindow)) {
      return super.equals(obj);
    }
    com.google.cloud.oracledatabase.v1.MaintenanceWindow other =
        (com.google.cloud.oracledatabase.v1.MaintenanceWindow) obj;

    if (preference_ != other.preference_) return false;
    if (!months_.equals(other.months_)) return false;
    if (!getWeeksOfMonthList().equals(other.getWeeksOfMonthList())) return false;
    if (!daysOfWeek_.equals(other.daysOfWeek_)) return false;
    if (!getHoursOfDayList().equals(other.getHoursOfDayList())) return false;
    if (getLeadTimeWeek() != other.getLeadTimeWeek()) return false;
    if (patchingMode_ != other.patchingMode_) return false;
    if (getCustomActionTimeoutMins() != other.getCustomActionTimeoutMins()) return false;
    if (getIsCustomActionTimeoutEnabled() != other.getIsCustomActionTimeoutEnabled()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PREFERENCE_FIELD_NUMBER;
    hash = (53 * hash) + preference_;
    if (getMonthsCount() > 0) {
      hash = (37 * hash) + MONTHS_FIELD_NUMBER;
      hash = (53 * hash) + months_.hashCode();
    }
    if (getWeeksOfMonthCount() > 0) {
      hash = (37 * hash) + WEEKS_OF_MONTH_FIELD_NUMBER;
      hash = (53 * hash) + getWeeksOfMonthList().hashCode();
    }
    if (getDaysOfWeekCount() > 0) {
      hash = (37 * hash) + DAYS_OF_WEEK_FIELD_NUMBER;
      hash = (53 * hash) + daysOfWeek_.hashCode();
    }
    if (getHoursOfDayCount() > 0) {
      hash = (37 * hash) + HOURS_OF_DAY_FIELD_NUMBER;
      hash = (53 * hash) + getHoursOfDayList().hashCode();
    }
    hash = (37 * hash) + LEAD_TIME_WEEK_FIELD_NUMBER;
    hash = (53 * hash) + getLeadTimeWeek();
    hash = (37 * hash) + PATCHING_MODE_FIELD_NUMBER;
    hash = (53 * hash) + patchingMode_;
    hash = (37 * hash) + CUSTOM_ACTION_TIMEOUT_MINS_FIELD_NUMBER;
    hash = (53 * hash) + getCustomActionTimeoutMins();
    hash = (37 * hash) + IS_CUSTOM_ACTION_TIMEOUT_ENABLED_FIELD_NUMBER;
    hash =
        (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIsCustomActionTimeoutEnabled());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.oracledatabase.v1.MaintenanceWindow prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Maintenance window as defined by Oracle.
   * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
   * </pre>
   *
   * Protobuf type {@code google.cloud.oracledatabase.v1.MaintenanceWindow}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.oracledatabase.v1.MaintenanceWindow)
      com.google.cloud.oracledatabase.v1.MaintenanceWindowOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.oracledatabase.v1.CloudExadataInfrastructureProto
          .internal_static_google_cloud_oracledatabase_v1_MaintenanceWindow_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.oracledatabase.v1.CloudExadataInfrastructureProto
          .internal_static_google_cloud_oracledatabase_v1_MaintenanceWindow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.oracledatabase.v1.MaintenanceWindow.class,
              com.google.cloud.oracledatabase.v1.MaintenanceWindow.Builder.class);
    }

    // Construct using com.google.cloud.oracledatabase.v1.MaintenanceWindow.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      preference_ = 0;
      months_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      weeksOfMonth_ = emptyIntList();
      daysOfWeek_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      hoursOfDay_ = emptyIntList();
      leadTimeWeek_ = 0;
      patchingMode_ = 0;
      customActionTimeoutMins_ = 0;
      isCustomActionTimeoutEnabled_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.oracledatabase.v1.CloudExadataInfrastructureProto
          .internal_static_google_cloud_oracledatabase_v1_MaintenanceWindow_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.MaintenanceWindow getDefaultInstanceForType() {
      return com.google.cloud.oracledatabase.v1.MaintenanceWindow.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.MaintenanceWindow build() {
      com.google.cloud.oracledatabase.v1.MaintenanceWindow result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.MaintenanceWindow buildPartial() {
      com.google.cloud.oracledatabase.v1.MaintenanceWindow result =
          new com.google.cloud.oracledatabase.v1.MaintenanceWindow(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.oracledatabase.v1.MaintenanceWindow result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        months_ = java.util.Collections.unmodifiableList(months_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.months_ = months_;
      if (((bitField0_ & 0x00000008) != 0)) {
        daysOfWeek_ = java.util.Collections.unmodifiableList(daysOfWeek_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.daysOfWeek_ = daysOfWeek_;
    }

    private void buildPartial0(com.google.cloud.oracledatabase.v1.MaintenanceWindow result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.preference_ = preference_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        weeksOfMonth_.makeImmutable();
        result.weeksOfMonth_ = weeksOfMonth_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        hoursOfDay_.makeImmutable();
        result.hoursOfDay_ = hoursOfDay_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.leadTimeWeek_ = leadTimeWeek_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.patchingMode_ = patchingMode_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.customActionTimeoutMins_ = customActionTimeoutMins_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.isCustomActionTimeoutEnabled_ = isCustomActionTimeoutEnabled_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.oracledatabase.v1.MaintenanceWindow) {
        return mergeFrom((com.google.cloud.oracledatabase.v1.MaintenanceWindow) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.oracledatabase.v1.MaintenanceWindow other) {
      if (other == com.google.cloud.oracledatabase.v1.MaintenanceWindow.getDefaultInstance())
        return this;
      if (other.preference_ != 0) {
        setPreferenceValue(other.getPreferenceValue());
      }
      if (!other.months_.isEmpty()) {
        if (months_.isEmpty()) {
          months_ = other.months_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureMonthsIsMutable();
          months_.addAll(other.months_);
        }
        onChanged();
      }
      if (!other.weeksOfMonth_.isEmpty()) {
        if (weeksOfMonth_.isEmpty()) {
          weeksOfMonth_ = other.weeksOfMonth_;
          weeksOfMonth_.makeImmutable();
          bitField0_ |= 0x00000004;
        } else {
          ensureWeeksOfMonthIsMutable();
          weeksOfMonth_.addAll(other.weeksOfMonth_);
        }
        onChanged();
      }
      if (!other.daysOfWeek_.isEmpty()) {
        if (daysOfWeek_.isEmpty()) {
          daysOfWeek_ = other.daysOfWeek_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureDaysOfWeekIsMutable();
          daysOfWeek_.addAll(other.daysOfWeek_);
        }
        onChanged();
      }
      if (!other.hoursOfDay_.isEmpty()) {
        if (hoursOfDay_.isEmpty()) {
          hoursOfDay_ = other.hoursOfDay_;
          hoursOfDay_.makeImmutable();
          bitField0_ |= 0x00000010;
        } else {
          ensureHoursOfDayIsMutable();
          hoursOfDay_.addAll(other.hoursOfDay_);
        }
        onChanged();
      }
      if (other.getLeadTimeWeek() != 0) {
        setLeadTimeWeek(other.getLeadTimeWeek());
      }
      if (other.patchingMode_ != 0) {
        setPatchingModeValue(other.getPatchingModeValue());
      }
      if (other.getCustomActionTimeoutMins() != 0) {
        setCustomActionTimeoutMins(other.getCustomActionTimeoutMins());
      }
      if (other.getIsCustomActionTimeoutEnabled() != false) {
        setIsCustomActionTimeoutEnabled(other.getIsCustomActionTimeoutEnabled());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                preference_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 16:
              {
                int tmpRaw = input.readEnum();
                ensureMonthsIsMutable();
                months_.add(tmpRaw);
                break;
              } // case 16
            case 18:
              {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureMonthsIsMutable();
                  months_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 18
            case 24:
              {
                int v = input.readInt32();
                ensureWeeksOfMonthIsMutable();
                weeksOfMonth_.addInt(v);
                break;
              } // case 24
            case 26:
              {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureWeeksOfMonthIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  weeksOfMonth_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
            case 32:
              {
                int tmpRaw = input.readEnum();
                ensureDaysOfWeekIsMutable();
                daysOfWeek_.add(tmpRaw);
                break;
              } // case 32
            case 34:
              {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureDaysOfWeekIsMutable();
                  daysOfWeek_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 34
            case 40:
              {
                int v = input.readInt32();
                ensureHoursOfDayIsMutable();
                hoursOfDay_.addInt(v);
                break;
              } // case 40
            case 42:
              {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureHoursOfDayIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  hoursOfDay_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 42
            case 48:
              {
                leadTimeWeek_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            case 56:
              {
                patchingMode_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            case 64:
              {
                customActionTimeoutMins_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
            case 72:
              {
                isCustomActionTimeoutEnabled_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int preference_ = 0;

    /**
     *
     *
     * <pre>
     * Optional. The maintenance window scheduling preference.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for preference.
     */
    @java.lang.Override
    public int getPreferenceValue() {
      return preference_;
    }

    /**
     *
     *
     * <pre>
     * Optional. The maintenance window scheduling preference.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for preference to set.
     * @return This builder for chaining.
     */
    public Builder setPreferenceValue(int value) {
      preference_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The maintenance window scheduling preference.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The preference.
     */
    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
        getPreference() {
      com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference result =
          com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
              .forNumber(preference_);
      return result == null
          ? com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference
              .UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Optional. The maintenance window scheduling preference.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The preference to set.
     * @return This builder for chaining.
     */
    public Builder setPreference(
        com.google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      preference_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The maintenance window scheduling preference.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.MaintenanceWindowPreference preference = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPreference() {
      bitField0_ = (bitField0_ & ~0x00000001);
      preference_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> months_ = java.util.Collections.emptyList();

    private void ensureMonthsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        months_ = new java.util.ArrayList<java.lang.Integer>(months_);
        bitField0_ |= 0x00000002;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the months.
     */
    public java.util.List<com.google.type.Month> getMonthsList() {
      return new com.google.protobuf.Internal.ListAdapter<java.lang.Integer, com.google.type.Month>(
          months_, months_converter_);
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The count of months.
     */
    public int getMonthsCount() {
      return months_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the element to return.
     * @return The months at the given index.
     */
    public com.google.type.Month getMonths(int index) {
      return months_converter_.convert(months_.get(index));
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The months to set.
     * @return This builder for chaining.
     */
    public Builder setMonths(int index, com.google.type.Month value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMonthsIsMutable();
      months_.set(index, value.getNumber());
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The months to add.
     * @return This builder for chaining.
     */
    public Builder addMonths(com.google.type.Month value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMonthsIsMutable();
      months_.add(value.getNumber());
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The months to add.
     * @return This builder for chaining.
     */
    public Builder addAllMonths(java.lang.Iterable<? extends com.google.type.Month> values) {
      ensureMonthsIsMutable();
      for (com.google.type.Month value : values) {
        months_.add(value.getNumber());
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMonths() {
      months_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the enum numeric values on the wire for months.
     */
    public java.util.List<java.lang.Integer> getMonthsValueList() {
      return java.util.Collections.unmodifiableList(months_);
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of months at the given index.
     */
    public int getMonthsValue(int index) {
      return months_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for months to set.
     * @return This builder for chaining.
     */
    public Builder setMonthsValue(int index, int value) {
      ensureMonthsIsMutable();
      months_.set(index, value);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for months to add.
     * @return This builder for chaining.
     */
    public Builder addMonthsValue(int value) {
      ensureMonthsIsMutable();
      months_.add(value);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Months during the year when maintenance should be performed.
     * </pre>
     *
     * <code>repeated .google.type.Month months = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The enum numeric values on the wire for months to add.
     * @return This builder for chaining.
     */
    public Builder addAllMonthsValue(java.lang.Iterable<java.lang.Integer> values) {
      ensureMonthsIsMutable();
      for (int value : values) {
        months_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList weeksOfMonth_ = emptyIntList();

    private void ensureWeeksOfMonthIsMutable() {
      if (!weeksOfMonth_.isModifiable()) {
        weeksOfMonth_ = makeMutableCopy(weeksOfMonth_);
      }
      bitField0_ |= 0x00000004;
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the weeksOfMonth.
     */
    public java.util.List<java.lang.Integer> getWeeksOfMonthList() {
      weeksOfMonth_.makeImmutable();
      return weeksOfMonth_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of weeksOfMonth.
     */
    public int getWeeksOfMonthCount() {
      return weeksOfMonth_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The weeksOfMonth at the given index.
     */
    public int getWeeksOfMonth(int index) {
      return weeksOfMonth_.getInt(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index to set the value at.
     * @param value The weeksOfMonth to set.
     * @return This builder for chaining.
     */
    public Builder setWeeksOfMonth(int index, int value) {

      ensureWeeksOfMonthIsMutable();
      weeksOfMonth_.setInt(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The weeksOfMonth to add.
     * @return This builder for chaining.
     */
    public Builder addWeeksOfMonth(int value) {

      ensureWeeksOfMonthIsMutable();
      weeksOfMonth_.addInt(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param values The weeksOfMonth to add.
     * @return This builder for chaining.
     */
    public Builder addAllWeeksOfMonth(java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureWeeksOfMonthIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, weeksOfMonth_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Weeks during the month when maintenance should be performed.
     * Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
     * duration of 7 days. Weeks start and end based on calendar dates, not days
     * of the week.
     * </pre>
     *
     * <code>repeated int32 weeks_of_month = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearWeeksOfMonth() {
      weeksOfMonth_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> daysOfWeek_ = java.util.Collections.emptyList();

    private void ensureDaysOfWeekIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        daysOfWeek_ = new java.util.ArrayList<java.lang.Integer>(daysOfWeek_);
        bitField0_ |= 0x00000008;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the daysOfWeek.
     */
    public java.util.List<com.google.type.DayOfWeek> getDaysOfWeekList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.google.type.DayOfWeek>(daysOfWeek_, daysOfWeek_converter_);
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The count of daysOfWeek.
     */
    public int getDaysOfWeekCount() {
      return daysOfWeek_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the element to return.
     * @return The daysOfWeek at the given index.
     */
    public com.google.type.DayOfWeek getDaysOfWeek(int index) {
      return daysOfWeek_converter_.convert(daysOfWeek_.get(index));
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The daysOfWeek to set.
     * @return This builder for chaining.
     */
    public Builder setDaysOfWeek(int index, com.google.type.DayOfWeek value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDaysOfWeekIsMutable();
      daysOfWeek_.set(index, value.getNumber());
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The daysOfWeek to add.
     * @return This builder for chaining.
     */
    public Builder addDaysOfWeek(com.google.type.DayOfWeek value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDaysOfWeekIsMutable();
      daysOfWeek_.add(value.getNumber());
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The daysOfWeek to add.
     * @return This builder for chaining.
     */
    public Builder addAllDaysOfWeek(
        java.lang.Iterable<? extends com.google.type.DayOfWeek> values) {
      ensureDaysOfWeekIsMutable();
      for (com.google.type.DayOfWeek value : values) {
        daysOfWeek_.add(value.getNumber());
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDaysOfWeek() {
      daysOfWeek_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return A list containing the enum numeric values on the wire for daysOfWeek.
     */
    public java.util.List<java.lang.Integer> getDaysOfWeekValueList() {
      return java.util.Collections.unmodifiableList(daysOfWeek_);
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of daysOfWeek at the given index.
     */
    public int getDaysOfWeekValue(int index) {
      return daysOfWeek_.get(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for daysOfWeek to set.
     * @return This builder for chaining.
     */
    public Builder setDaysOfWeekValue(int index, int value) {
      ensureDaysOfWeekIsMutable();
      daysOfWeek_.set(index, value);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for daysOfWeek to add.
     * @return This builder for chaining.
     */
    public Builder addDaysOfWeekValue(int value) {
      ensureDaysOfWeekIsMutable();
      daysOfWeek_.add(value);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Days during the week when maintenance should be performed.
     * </pre>
     *
     * <code>
     * repeated .google.type.DayOfWeek days_of_week = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param values The enum numeric values on the wire for daysOfWeek to add.
     * @return This builder for chaining.
     */
    public Builder addAllDaysOfWeekValue(java.lang.Iterable<java.lang.Integer> values) {
      ensureDaysOfWeekIsMutable();
      for (int value : values) {
        daysOfWeek_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList hoursOfDay_ = emptyIntList();

    private void ensureHoursOfDayIsMutable() {
      if (!hoursOfDay_.isModifiable()) {
        hoursOfDay_ = makeMutableCopy(hoursOfDay_);
      }
      bitField0_ |= 0x00000010;
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the hoursOfDay.
     */
    public java.util.List<java.lang.Integer> getHoursOfDayList() {
      hoursOfDay_.makeImmutable();
      return hoursOfDay_;
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of hoursOfDay.
     */
    public int getHoursOfDayCount() {
      return hoursOfDay_.size();
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The hoursOfDay at the given index.
     */
    public int getHoursOfDay(int index) {
      return hoursOfDay_.getInt(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index to set the value at.
     * @param value The hoursOfDay to set.
     * @return This builder for chaining.
     */
    public Builder setHoursOfDay(int index, int value) {

      ensureHoursOfDayIsMutable();
      hoursOfDay_.setInt(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The hoursOfDay to add.
     * @return This builder for chaining.
     */
    public Builder addHoursOfDay(int value) {

      ensureHoursOfDayIsMutable();
      hoursOfDay_.addInt(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param values The hoursOfDay to add.
     * @return This builder for chaining.
     */
    public Builder addAllHoursOfDay(java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureHoursOfDayIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, hoursOfDay_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The window of hours during the day when maintenance should be
     * performed. The window is a 4 hour slot. Valid values are:
     *   0 - represents time slot 0:00 - 3:59 UTC
     *   4 - represents time slot 4:00 - 7:59 UTC
     *   8 - represents time slot 8:00 - 11:59 UTC
     *   12 - represents time slot 12:00 - 15:59 UTC
     *   16 - represents time slot 16:00 - 19:59 UTC
     *   20 - represents time slot 20:00 - 23:59 UTC
     * </pre>
     *
     * <code>repeated int32 hours_of_day = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHoursOfDay() {
      hoursOfDay_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private int leadTimeWeek_;

    /**
     *
     *
     * <pre>
     * Optional. Lead time window allows user to set a lead time to prepare for a
     * down time. The lead time is in weeks and valid value is between 1 to 4.
     * </pre>
     *
     * <code>int32 lead_time_week = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The leadTimeWeek.
     */
    @java.lang.Override
    public int getLeadTimeWeek() {
      return leadTimeWeek_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Lead time window allows user to set a lead time to prepare for a
     * down time. The lead time is in weeks and valid value is between 1 to 4.
     * </pre>
     *
     * <code>int32 lead_time_week = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The leadTimeWeek to set.
     * @return This builder for chaining.
     */
    public Builder setLeadTimeWeek(int value) {

      leadTimeWeek_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Lead time window allows user to set a lead time to prepare for a
     * down time. The lead time is in weeks and valid value is between 1 to 4.
     * </pre>
     *
     * <code>int32 lead_time_week = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLeadTimeWeek() {
      bitField0_ = (bitField0_ & ~0x00000020);
      leadTimeWeek_ = 0;
      onChanged();
      return this;
    }

    private int patchingMode_ = 0;

    /**
     *
     *
     * <pre>
     * Optional. Cloud CloudExadataInfrastructure node patching method, either
     * "ROLLING" or "NONROLLING". Default value is ROLLING.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for patchingMode.
     */
    @java.lang.Override
    public int getPatchingModeValue() {
      return patchingMode_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Cloud CloudExadataInfrastructure node patching method, either
     * "ROLLING" or "NONROLLING". Default value is ROLLING.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for patchingMode to set.
     * @return This builder for chaining.
     */
    public Builder setPatchingModeValue(int value) {
      patchingMode_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Cloud CloudExadataInfrastructure node patching method, either
     * "ROLLING" or "NONROLLING". Default value is ROLLING.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The patchingMode.
     */
    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode getPatchingMode() {
      com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode result =
          com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode.forNumber(
              patchingMode_);
      return result == null
          ? com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Optional. Cloud CloudExadataInfrastructure node patching method, either
     * "ROLLING" or "NONROLLING". Default value is ROLLING.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The patchingMode to set.
     * @return This builder for chaining.
     */
    public Builder setPatchingMode(
        com.google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      patchingMode_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Cloud CloudExadataInfrastructure node patching method, either
     * "ROLLING" or "NONROLLING". Default value is ROLLING.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.MaintenanceWindow.PatchingMode patching_mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPatchingMode() {
      bitField0_ = (bitField0_ & ~0x00000040);
      patchingMode_ = 0;
      onChanged();
      return this;
    }

    private int customActionTimeoutMins_;

    /**
     *
     *
     * <pre>
     * Optional. Determines the amount of time the system will wait before the
     * start of each database server patching operation. Custom action timeout is
     * in minutes and valid value is between 15 to 120 (inclusive).
     * </pre>
     *
     * <code>int32 custom_action_timeout_mins = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The customActionTimeoutMins.
     */
    @java.lang.Override
    public int getCustomActionTimeoutMins() {
      return customActionTimeoutMins_;
    }

    /**
     *
     *
     * <pre>
     * Optional. Determines the amount of time the system will wait before the
     * start of each database server patching operation. Custom action timeout is
     * in minutes and valid value is between 15 to 120 (inclusive).
     * </pre>
     *
     * <code>int32 custom_action_timeout_mins = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The customActionTimeoutMins to set.
     * @return This builder for chaining.
     */
    public Builder setCustomActionTimeoutMins(int value) {

      customActionTimeoutMins_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Determines the amount of time the system will wait before the
     * start of each database server patching operation. Custom action timeout is
     * in minutes and valid value is between 15 to 120 (inclusive).
     * </pre>
     *
     * <code>int32 custom_action_timeout_mins = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCustomActionTimeoutMins() {
      bitField0_ = (bitField0_ & ~0x00000080);
      customActionTimeoutMins_ = 0;
      onChanged();
      return this;
    }

    private boolean isCustomActionTimeoutEnabled_;

    /**
     *
     *
     * <pre>
     * Optional. If true, enables the configuration of a custom action timeout
     * (waiting period) between database server patching operations.
     * </pre>
     *
     * <code>bool is_custom_action_timeout_enabled = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The isCustomActionTimeoutEnabled.
     */
    @java.lang.Override
    public boolean getIsCustomActionTimeoutEnabled() {
      return isCustomActionTimeoutEnabled_;
    }

    /**
     *
     *
     * <pre>
     * Optional. If true, enables the configuration of a custom action timeout
     * (waiting period) between database server patching operations.
     * </pre>
     *
     * <code>bool is_custom_action_timeout_enabled = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The isCustomActionTimeoutEnabled to set.
     * @return This builder for chaining.
     */
    public Builder setIsCustomActionTimeoutEnabled(boolean value) {

      isCustomActionTimeoutEnabled_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. If true, enables the configuration of a custom action timeout
     * (waiting period) between database server patching operations.
     * </pre>
     *
     * <code>bool is_custom_action_timeout_enabled = 9 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIsCustomActionTimeoutEnabled() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isCustomActionTimeoutEnabled_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.oracledatabase.v1.MaintenanceWindow)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.oracledatabase.v1.MaintenanceWindow)
  private static final com.google.cloud.oracledatabase.v1.MaintenanceWindow DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.oracledatabase.v1.MaintenanceWindow();
  }

  public static com.google.cloud.oracledatabase.v1.MaintenanceWindow getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MaintenanceWindow> PARSER =
      new com.google.protobuf.AbstractParser<MaintenanceWindow>() {
        @java.lang.Override
        public MaintenanceWindow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<MaintenanceWindow> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MaintenanceWindow> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.MaintenanceWindow getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
