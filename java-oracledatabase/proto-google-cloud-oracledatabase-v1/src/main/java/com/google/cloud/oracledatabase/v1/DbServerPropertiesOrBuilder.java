/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oracledatabase/v1/db_server.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.oracledatabase.v1;

public interface DbServerPropertiesOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.oracledatabase.v1.DbServerProperties)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. OCID of database server.
   * </pre>
   *
   * <code>string ocid = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The ocid.
   */
  java.lang.String getOcid();
  /**
   *
   *
   * <pre>
   * Output only. OCID of database server.
   * </pre>
   *
   * <code>string ocid = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for ocid.
   */
  com.google.protobuf.ByteString getOcidBytes();

  /**
   *
   *
   * <pre>
   * Optional. OCPU count per database.
   * </pre>
   *
   * <code>int32 ocpu_count = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The ocpuCount.
   */
  int getOcpuCount();

  /**
   *
   *
   * <pre>
   * Optional. Maximum OCPU count per database.
   * </pre>
   *
   * <code>int32 max_ocpu_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxOcpuCount.
   */
  int getMaxOcpuCount();

  /**
   *
   *
   * <pre>
   * Optional. Memory allocated in GBs.
   * </pre>
   *
   * <code>int32 memory_size_gb = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The memorySizeGb.
   */
  int getMemorySizeGb();

  /**
   *
   *
   * <pre>
   * Optional. Maximum memory allocated in GBs.
   * </pre>
   *
   * <code>int32 max_memory_size_gb = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxMemorySizeGb.
   */
  int getMaxMemorySizeGb();

  /**
   *
   *
   * <pre>
   * Optional. Local storage per VM.
   * </pre>
   *
   * <code>int32 db_node_storage_size_gb = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The dbNodeStorageSizeGb.
   */
  int getDbNodeStorageSizeGb();

  /**
   *
   *
   * <pre>
   * Optional. Maximum local storage per VM.
   * </pre>
   *
   * <code>int32 max_db_node_storage_size_gb = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxDbNodeStorageSizeGb.
   */
  int getMaxDbNodeStorageSizeGb();

  /**
   *
   *
   * <pre>
   * Optional. Vm count per database.
   * </pre>
   *
   * <code>int32 vm_count = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The vmCount.
   */
  int getVmCount();

  /**
   *
   *
   * <pre>
   * Output only. State of the database server.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DbServerProperties.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   *
   *
   * <pre>
   * Output only. State of the database server.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DbServerProperties.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  com.google.cloud.oracledatabase.v1.DbServerProperties.State getState();

  /**
   *
   *
   * <pre>
   * Output only. OCID of database nodes associated with the database server.
   * </pre>
   *
   * <code>repeated string db_node_ids = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return A list containing the dbNodeIds.
   */
  java.util.List<java.lang.String> getDbNodeIdsList();
  /**
   *
   *
   * <pre>
   * Output only. OCID of database nodes associated with the database server.
   * </pre>
   *
   * <code>repeated string db_node_ids = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The count of dbNodeIds.
   */
  int getDbNodeIdsCount();
  /**
   *
   *
   * <pre>
   * Output only. OCID of database nodes associated with the database server.
   * </pre>
   *
   * <code>repeated string db_node_ids = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @param index The index of the element to return.
   * @return The dbNodeIds at the given index.
   */
  java.lang.String getDbNodeIds(int index);
  /**
   *
   *
   * <pre>
   * Output only. OCID of database nodes associated with the database server.
   * </pre>
   *
   * <code>repeated string db_node_ids = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the dbNodeIds at the given index.
   */
  com.google.protobuf.ByteString getDbNodeIdsBytes(int index);
}
