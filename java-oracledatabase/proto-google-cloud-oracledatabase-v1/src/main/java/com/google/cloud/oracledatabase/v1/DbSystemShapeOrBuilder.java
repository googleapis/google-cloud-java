/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oracledatabase/v1/db_system_shape.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.oracledatabase.v1;

public interface DbSystemShapeOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.oracledatabase.v1.DbSystemShape)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Identifier. The name of the Database System Shape resource with the format:
   * projects/{project}/locations/{region}/dbSystemShapes/{db_system_shape}
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Identifier. The name of the Database System Shape resource with the format:
   * projects/{project}/locations/{region}/dbSystemShapes/{db_system_shape}
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. shape
   * </pre>
   *
   * <code>string shape = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The shape.
   */
  java.lang.String getShape();
  /**
   *
   *
   * <pre>
   * Optional. shape
   * </pre>
   *
   * <code>string shape = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for shape.
   */
  com.google.protobuf.ByteString getShapeBytes();

  /**
   *
   *
   * <pre>
   * Optional. Minimum number of database servers.
   * </pre>
   *
   * <code>int32 min_node_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The minNodeCount.
   */
  int getMinNodeCount();

  /**
   *
   *
   * <pre>
   * Optional. Maximum number of database servers.
   * </pre>
   *
   * <code>int32 max_node_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxNodeCount.
   */
  int getMaxNodeCount();

  /**
   *
   *
   * <pre>
   * Optional. Minimum number of storage servers.
   * </pre>
   *
   * <code>int32 min_storage_count = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The minStorageCount.
   */
  int getMinStorageCount();

  /**
   *
   *
   * <pre>
   * Optional. Maximum number of storage servers.
   * </pre>
   *
   * <code>int32 max_storage_count = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxStorageCount.
   */
  int getMaxStorageCount();

  /**
   *
   *
   * <pre>
   * Optional. Number of cores per node.
   * </pre>
   *
   * <code>int32 available_core_count_per_node = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The availableCoreCountPerNode.
   */
  int getAvailableCoreCountPerNode();

  /**
   *
   *
   * <pre>
   * Optional. Memory per database server node in gigabytes.
   * </pre>
   *
   * <code>int32 available_memory_per_node_gb = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The availableMemoryPerNodeGb.
   */
  int getAvailableMemoryPerNodeGb();

  /**
   *
   *
   * <pre>
   * Optional. Storage per storage server in terabytes.
   * </pre>
   *
   * <code>int32 available_data_storage_tb = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The availableDataStorageTb.
   */
  int getAvailableDataStorageTb();

  /**
   *
   *
   * <pre>
   * Optional. Minimum core count per node.
   * </pre>
   *
   * <code>int32 min_core_count_per_node = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The minCoreCountPerNode.
   */
  int getMinCoreCountPerNode();

  /**
   *
   *
   * <pre>
   * Optional. Minimum memory per node in gigabytes.
   * </pre>
   *
   * <code>int32 min_memory_per_node_gb = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The minMemoryPerNodeGb.
   */
  int getMinMemoryPerNodeGb();

  /**
   *
   *
   * <pre>
   * Optional. Minimum node storage per database server in gigabytes.
   * </pre>
   *
   * <code>int32 min_db_node_storage_per_node_gb = 12 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The minDbNodeStoragePerNodeGb.
   */
  int getMinDbNodeStoragePerNodeGb();
}
