/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oracledatabase/v1/vm_cluster.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.oracledatabase.v1;

public final class CloudVmClusterProto {
  private CloudVmClusterProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_LabelsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_oracledatabase_v1_CloudVmClusterProperties_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_oracledatabase_v1_CloudVmClusterProperties_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_oracledatabase_v1_DataCollectionOptions_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_oracledatabase_v1_DataCollectionOptions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n/google/cloud/oracledatabase/v1/vm_clus"
          + "ter.proto\022\036google.cloud.oracledatabase.v"
          + "1\032\037google/api/field_behavior.proto\032\031goog"
          + "le/api/resource.proto\032\037google/protobuf/t"
          + "imestamp.proto\032\032google/type/datetime.pro"
          + "to\"\326\005\n\016CloudVmCluster\022\021\n\004name\030\001 \001(\tB\003\340A\010"
          + "\022`\n\026exadata_infrastructure\030\002 \001(\tB@\340A\002\372A:"
          + "\n8oracledatabase.googleapis.com/CloudExa"
          + "dataInfrastructure\022\031\n\014display_name\030\003 \001(\t"
          + "B\003\340A\001\022\034\n\017gcp_oracle_zone\030\014 \001(\tB\003\340A\003\022Q\n\np"
          + "roperties\030\006 \001(\01328.google.cloud.oracledat"
          + "abase.v1.CloudVmClusterPropertiesB\003\340A\001\022O"
          + "\n\006labels\030\007 \003(\0132:.google.cloud.oracledata"
          + "base.v1.CloudVmCluster.LabelsEntryB\003\340A\001\022"
          + "4\n\013create_time\030\010 \001(\0132\032.google.protobuf.T"
          + "imestampB\003\340A\003\022\021\n\004cidr\030\t \001(\tB\003\340A\002\022\037\n\022back"
          + "up_subnet_cidr\030\n \001(\tB\003\340A\002\0227\n\007network\030\013 \001"
          + "(\tB&\340A\002\372A \n\036compute.googleapis.com/Netwo"
          + "rk\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
          + "\002 \001(\t:\0028\001:\237\001\352A\233\001\n,oracledatabase.googlea"
          + "pis.com/CloudVmCluster\022Jprojects/{projec"
          + "t}/locations/{location}/cloudVmClusters/"
          + "{cloud_vm_cluster}*\017cloudVmClusters2\016clo"
          + "udVmCluster\"\234\014\n\030CloudVmClusterProperties"
          + "\022\021\n\004ocid\030\001 \001(\tB\003\340A\003\022_\n\014license_type\030\002 \001("
          + "\0162D.google.cloud.oracledatabase.v1.Cloud"
          + "VmClusterProperties.LicenseTypeB\003\340A\002\022\027\n\n"
          + "gi_version\030\003 \001(\tB\003\340A\001\022-\n\ttime_zone\030\004 \001(\013"
          + "2\025.google.type.TimeZoneB\003\340A\001\022\034\n\017ssh_publ"
          + "ic_keys\030\005 \003(\tB\003\340A\001\022\027\n\nnode_count\030\006 \001(\005B\003"
          + "\340A\001\022\022\n\005shape\030\007 \001(\tB\003\340A\003\022\027\n\nocpu_count\030\010 "
          + "\001(\002B\003\340A\001\022\033\n\016memory_size_gb\030\t \001(\005B\003\340A\001\022$\n"
          + "\027db_node_storage_size_gb\030\n \001(\005B\003\340A\001\022\034\n\017s"
          + "torage_size_gb\030\013 \001(\005B\003\340A\003\022!\n\024data_storag"
          + "e_size_tb\030\014 \001(\001B\003\340A\001\022e\n\017disk_redundancy\030"
          + "\r \001(\0162G.google.cloud.oracledatabase.v1.C"
          + "loudVmClusterProperties.DiskRedundancyB\003"
          + "\340A\001\022%\n\030sparse_diskgroup_enabled\030\016 \001(\010B\003\340"
          + "A\001\022!\n\024local_backup_enabled\030\017 \001(\010B\003\340A\001\022\034\n"
          + "\017hostname_prefix\030\020 \001(\tB\003\340A\001\022g\n#diagnosti"
          + "cs_data_collection_options\030\023 \001(\01325.googl"
          + "e.cloud.oracledatabase.v1.DataCollection"
          + "OptionsB\003\340A\001\022R\n\005state\030\024 \001(\0162>.google.clo"
          + "ud.oracledatabase.v1.CloudVmClusterPrope"
          + "rties.StateB\003\340A\003\022#\n\026scan_listener_port_t"
          + "cp\030\025 \001(\005B\003\340A\003\022\'\n\032scan_listener_port_tcp_"
          + "ssl\030\026 \001(\005B\003\340A\003\022\023\n\006domain\030\027 \001(\tB\003\340A\003\022\025\n\010s"
          + "can_dns\030\030 \001(\tB\003\340A\003\022\025\n\010hostname\030\031 \001(\tB\003\340A"
          + "\003\022\033\n\016cpu_core_count\030\032 \001(\005B\003\340A\002\022\033\n\016system"
          + "_version\030\033 \001(\tB\003\340A\001\022\030\n\013scan_ip_ids\030\034 \003(\t"
          + "B\003\340A\003\022\037\n\022scan_dns_record_id\030\035 \001(\tB\003\340A\003\022\024"
          + "\n\007oci_url\030\036 \001(\tB\003\340A\003\022\034\n\017db_server_ocids\030"
          + "\037 \003(\tB\003\340A\001\022\033\n\016compartment_id\030  \001(\tB\003\340A\003\022"
          + "\034\n\017dns_listener_ip\030# \001(\tB\003\340A\003\022\031\n\014cluster"
          + "_name\030$ \001(\tB\003\340A\001\"]\n\013LicenseType\022\034\n\030LICEN"
          + "SE_TYPE_UNSPECIFIED\020\000\022\024\n\020LICENSE_INCLUDE"
          + "D\020\001\022\032\n\026BRING_YOUR_OWN_LICENSE\020\002\"G\n\016DiskR"
          + "edundancy\022\037\n\033DISK_REDUNDANCY_UNSPECIFIED"
          + "\020\000\022\010\n\004HIGH\020\001\022\n\n\006NORMAL\020\002\"\227\001\n\005State\022\025\n\021ST"
          + "ATE_UNSPECIFIED\020\000\022\020\n\014PROVISIONING\020\001\022\r\n\tA"
          + "VAILABLE\020\002\022\014\n\010UPDATING\020\003\022\017\n\013TERMINATING\020"
          + "\004\022\016\n\nTERMINATED\020\005\022\n\n\006FAILED\020\006\022\033\n\027MAINTEN"
          + "ANCE_IN_PROGRESS\020\007\"\214\001\n\025DataCollectionOpt"
          + "ions\022\'\n\032diagnostics_events_enabled\030\001 \001(\010"
          + "B\003\340A\001\022&\n\031health_monitoring_enabled\030\002 \001(\010"
          + "B\003\340A\001\022\"\n\025incident_logs_enabled\030\003 \001(\010B\003\340A"
          + "\001B\355\001\n\"com.google.cloud.oracledatabase.v1"
          + "B\023CloudVmClusterProtoP\001ZJcloud.google.co"
          + "m/go/oracledatabase/apiv1/oracledatabase"
          + "pb;oracledatabasepb\252\002\036Google.Cloud.Oracl"
          + "eDatabase.V1\312\002\036Google\\Cloud\\OracleDataba"
          + "se\\V1\352\002!Google::Cloud::OracleDatabase::V"
          + "1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.FieldBehaviorProto.getDescriptor(),
              com.google.api.ResourceProto.getDescriptor(),
              com.google.protobuf.TimestampProto.getDescriptor(),
              com.google.type.DateTimeProto.getDescriptor(),
            });
    internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_descriptor,
            new java.lang.String[] {
              "Name",
              "ExadataInfrastructure",
              "DisplayName",
              "GcpOracleZone",
              "Properties",
              "Labels",
              "CreateTime",
              "Cidr",
              "BackupSubnetCidr",
              "Network",
            });
    internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_LabelsEntry_descriptor =
        internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_descriptor
            .getNestedTypes()
            .get(0);
    internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_LabelsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_oracledatabase_v1_CloudVmCluster_LabelsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_oracledatabase_v1_CloudVmClusterProperties_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_google_cloud_oracledatabase_v1_CloudVmClusterProperties_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_oracledatabase_v1_CloudVmClusterProperties_descriptor,
            new java.lang.String[] {
              "Ocid",
              "LicenseType",
              "GiVersion",
              "TimeZone",
              "SshPublicKeys",
              "NodeCount",
              "Shape",
              "OcpuCount",
              "MemorySizeGb",
              "DbNodeStorageSizeGb",
              "StorageSizeGb",
              "DataStorageSizeTb",
              "DiskRedundancy",
              "SparseDiskgroupEnabled",
              "LocalBackupEnabled",
              "HostnamePrefix",
              "DiagnosticsDataCollectionOptions",
              "State",
              "ScanListenerPortTcp",
              "ScanListenerPortTcpSsl",
              "Domain",
              "ScanDns",
              "Hostname",
              "CpuCoreCount",
              "SystemVersion",
              "ScanIpIds",
              "ScanDnsRecordId",
              "OciUrl",
              "DbServerOcids",
              "CompartmentId",
              "DnsListenerIp",
              "ClusterName",
            });
    internal_static_google_cloud_oracledatabase_v1_DataCollectionOptions_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_google_cloud_oracledatabase_v1_DataCollectionOptions_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_oracledatabase_v1_DataCollectionOptions_descriptor,
            new java.lang.String[] {
              "DiagnosticsEventsEnabled", "HealthMonitoringEnabled", "IncidentLogsEnabled",
            });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    registry.add(com.google.api.ResourceProto.resource);
    registry.add(com.google.api.ResourceProto.resourceReference);
    com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(
        descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.api.ResourceProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.type.DateTimeProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
