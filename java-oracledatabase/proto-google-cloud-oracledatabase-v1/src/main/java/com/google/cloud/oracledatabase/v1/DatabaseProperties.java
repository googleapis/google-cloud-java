/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/oracledatabase/v1/database.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.oracledatabase.v1;

/**
 *
 *
 * <pre>
 * The properties of a Database.
 * </pre>
 *
 * Protobuf type {@code google.cloud.oracledatabase.v1.DatabaseProperties}
 */
public final class DatabaseProperties extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.oracledatabase.v1.DatabaseProperties)
    DatabasePropertiesOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use DatabaseProperties.newBuilder() to construct.
  private DatabaseProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private DatabaseProperties() {
    state_ = 0;
    dbVersion_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new DatabaseProperties();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.oracledatabase.v1.DatabaseProto
        .internal_static_google_cloud_oracledatabase_v1_DatabaseProperties_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.oracledatabase.v1.DatabaseProto
        .internal_static_google_cloud_oracledatabase_v1_DatabaseProperties_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.oracledatabase.v1.DatabaseProperties.class,
            com.google.cloud.oracledatabase.v1.DatabaseProperties.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The various lifecycle states of the Database.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState}
   */
  public enum DatabaseLifecycleState implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default unspecified value.
     * </pre>
     *
     * <code>DATABASE_LIFECYCLE_STATE_UNSPECIFIED = 0;</code>
     */
    DATABASE_LIFECYCLE_STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in provisioning state.
     * </pre>
     *
     * <code>PROVISIONING = 1;</code>
     */
    PROVISIONING(1),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in available state.
     * </pre>
     *
     * <code>AVAILABLE = 2;</code>
     */
    AVAILABLE(2),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in updating state.
     * </pre>
     *
     * <code>UPDATING = 3;</code>
     */
    UPDATING(3),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in backup in progress state.
     * </pre>
     *
     * <code>BACKUP_IN_PROGRESS = 4;</code>
     */
    BACKUP_IN_PROGRESS(4),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in upgrading state.
     * </pre>
     *
     * <code>UPGRADING = 5;</code>
     */
    UPGRADING(5),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in converting state.
     * </pre>
     *
     * <code>CONVERTING = 6;</code>
     */
    CONVERTING(6),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in terminating state.
     * </pre>
     *
     * <code>TERMINATING = 7;</code>
     */
    TERMINATING(7),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in terminated state.
     * </pre>
     *
     * <code>TERMINATED = 8;</code>
     */
    TERMINATED(8),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in restore failed state.
     * </pre>
     *
     * <code>RESTORE_FAILED = 9;</code>
     */
    RESTORE_FAILED(9),
    /**
     *
     *
     * <pre>
     * Indicates that the resource is in failed state.
     * </pre>
     *
     * <code>FAILED = 10;</code>
     */
    FAILED(10),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default unspecified value.
     * </pre>
     *
     * <code>DATABASE_LIFECYCLE_STATE_UNSPECIFIED = 0;</code>
     */
    public static final int DATABASE_LIFECYCLE_STATE_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in provisioning state.
     * </pre>
     *
     * <code>PROVISIONING = 1;</code>
     */
    public static final int PROVISIONING_VALUE = 1;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in available state.
     * </pre>
     *
     * <code>AVAILABLE = 2;</code>
     */
    public static final int AVAILABLE_VALUE = 2;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in updating state.
     * </pre>
     *
     * <code>UPDATING = 3;</code>
     */
    public static final int UPDATING_VALUE = 3;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in backup in progress state.
     * </pre>
     *
     * <code>BACKUP_IN_PROGRESS = 4;</code>
     */
    public static final int BACKUP_IN_PROGRESS_VALUE = 4;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in upgrading state.
     * </pre>
     *
     * <code>UPGRADING = 5;</code>
     */
    public static final int UPGRADING_VALUE = 5;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in converting state.
     * </pre>
     *
     * <code>CONVERTING = 6;</code>
     */
    public static final int CONVERTING_VALUE = 6;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in terminating state.
     * </pre>
     *
     * <code>TERMINATING = 7;</code>
     */
    public static final int TERMINATING_VALUE = 7;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in terminated state.
     * </pre>
     *
     * <code>TERMINATED = 8;</code>
     */
    public static final int TERMINATED_VALUE = 8;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in restore failed state.
     * </pre>
     *
     * <code>RESTORE_FAILED = 9;</code>
     */
    public static final int RESTORE_FAILED_VALUE = 9;

    /**
     *
     *
     * <pre>
     * Indicates that the resource is in failed state.
     * </pre>
     *
     * <code>FAILED = 10;</code>
     */
    public static final int FAILED_VALUE = 10;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DatabaseLifecycleState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DatabaseLifecycleState forNumber(int value) {
      switch (value) {
        case 0:
          return DATABASE_LIFECYCLE_STATE_UNSPECIFIED;
        case 1:
          return PROVISIONING;
        case 2:
          return AVAILABLE;
        case 3:
          return UPDATING;
        case 4:
          return BACKUP_IN_PROGRESS;
        case 5:
          return UPGRADING;
        case 6:
          return CONVERTING;
        case 7:
          return TERMINATING;
        case 8:
          return TERMINATED;
        case 9:
          return RESTORE_FAILED;
        case 10:
          return FAILED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DatabaseLifecycleState>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DatabaseLifecycleState>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DatabaseLifecycleState>() {
              public DatabaseLifecycleState findValueByNumber(int number) {
                return DatabaseLifecycleState.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.oracledatabase.v1.DatabaseProperties.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final DatabaseLifecycleState[] VALUES = values();

    public static DatabaseLifecycleState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DatabaseLifecycleState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState)
  }

  private int bitField0_;
  public static final int STATE_FIELD_NUMBER = 1;
  private int state_ = 0;

  /**
   *
   *
   * <pre>
   * Output only. State of the Database.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }

  /**
   *
   *
   * <pre>
   * Output only. State of the Database.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState getState() {
    com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState result =
        com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState.forNumber(
            state_);
    return result == null
        ? com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState.UNRECOGNIZED
        : result;
  }

  public static final int DB_VERSION_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object dbVersion_ = "";

  /**
   *
   *
   * <pre>
   * Required. The Oracle Database version.
   * </pre>
   *
   * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The dbVersion.
   */
  @java.lang.Override
  public java.lang.String getDbVersion() {
    java.lang.Object ref = dbVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dbVersion_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. The Oracle Database version.
   * </pre>
   *
   * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for dbVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDbVersionBytes() {
    java.lang.Object ref = dbVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      dbVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DB_BACKUP_CONFIG_FIELD_NUMBER = 3;
  private com.google.cloud.oracledatabase.v1.DbBackupConfig dbBackupConfig_;

  /**
   *
   *
   * <pre>
   * Optional. Backup options for the Database.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the dbBackupConfig field is set.
   */
  @java.lang.Override
  public boolean hasDbBackupConfig() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Optional. Backup options for the Database.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The dbBackupConfig.
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.DbBackupConfig getDbBackupConfig() {
    return dbBackupConfig_ == null
        ? com.google.cloud.oracledatabase.v1.DbBackupConfig.getDefaultInstance()
        : dbBackupConfig_;
  }

  /**
   *
   *
   * <pre>
   * Optional. Backup options for the Database.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.DbBackupConfigOrBuilder getDbBackupConfigOrBuilder() {
    return dbBackupConfig_ == null
        ? com.google.cloud.oracledatabase.v1.DbBackupConfig.getDefaultInstance()
        : dbBackupConfig_;
  }

  public static final int DATABASE_MANAGEMENT_CONFIG_FIELD_NUMBER = 4;
  private com.google.cloud.oracledatabase.v1.DatabaseManagementConfig databaseManagementConfig_;

  /**
   *
   *
   * <pre>
   * Output only. The Database Management config.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the databaseManagementConfig field is set.
   */
  @java.lang.Override
  public boolean hasDatabaseManagementConfig() {
    return ((bitField0_ & 0x00000002) != 0);
  }

  /**
   *
   *
   * <pre>
   * Output only. The Database Management config.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The databaseManagementConfig.
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.DatabaseManagementConfig getDatabaseManagementConfig() {
    return databaseManagementConfig_ == null
        ? com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.getDefaultInstance()
        : databaseManagementConfig_;
  }

  /**
   *
   *
   * <pre>
   * Output only. The Database Management config.
   * </pre>
   *
   * <code>
   * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.DatabaseManagementConfigOrBuilder
      getDatabaseManagementConfigOrBuilder() {
    return databaseManagementConfig_ == null
        ? com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.getDefaultInstance()
        : databaseManagementConfig_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (state_
        != com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState
            .DATABASE_LIFECYCLE_STATE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, state_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dbVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dbVersion_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getDbBackupConfig());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getDatabaseManagementConfig());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (state_
        != com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState
            .DATABASE_LIFECYCLE_STATE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, state_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dbVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dbVersion_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getDbBackupConfig());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              4, getDatabaseManagementConfig());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.oracledatabase.v1.DatabaseProperties)) {
      return super.equals(obj);
    }
    com.google.cloud.oracledatabase.v1.DatabaseProperties other =
        (com.google.cloud.oracledatabase.v1.DatabaseProperties) obj;

    if (state_ != other.state_) return false;
    if (!getDbVersion().equals(other.getDbVersion())) return false;
    if (hasDbBackupConfig() != other.hasDbBackupConfig()) return false;
    if (hasDbBackupConfig()) {
      if (!getDbBackupConfig().equals(other.getDbBackupConfig())) return false;
    }
    if (hasDatabaseManagementConfig() != other.hasDatabaseManagementConfig()) return false;
    if (hasDatabaseManagementConfig()) {
      if (!getDatabaseManagementConfig().equals(other.getDatabaseManagementConfig())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (37 * hash) + DB_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getDbVersion().hashCode();
    if (hasDbBackupConfig()) {
      hash = (37 * hash) + DB_BACKUP_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDbBackupConfig().hashCode();
    }
    if (hasDatabaseManagementConfig()) {
      hash = (37 * hash) + DATABASE_MANAGEMENT_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseManagementConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.oracledatabase.v1.DatabaseProperties prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The properties of a Database.
   * </pre>
   *
   * Protobuf type {@code google.cloud.oracledatabase.v1.DatabaseProperties}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.oracledatabase.v1.DatabaseProperties)
      com.google.cloud.oracledatabase.v1.DatabasePropertiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.oracledatabase.v1.DatabaseProto
          .internal_static_google_cloud_oracledatabase_v1_DatabaseProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.oracledatabase.v1.DatabaseProto
          .internal_static_google_cloud_oracledatabase_v1_DatabaseProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.oracledatabase.v1.DatabaseProperties.class,
              com.google.cloud.oracledatabase.v1.DatabaseProperties.Builder.class);
    }

    // Construct using com.google.cloud.oracledatabase.v1.DatabaseProperties.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getDbBackupConfigFieldBuilder();
        getDatabaseManagementConfigFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      state_ = 0;
      dbVersion_ = "";
      dbBackupConfig_ = null;
      if (dbBackupConfigBuilder_ != null) {
        dbBackupConfigBuilder_.dispose();
        dbBackupConfigBuilder_ = null;
      }
      databaseManagementConfig_ = null;
      if (databaseManagementConfigBuilder_ != null) {
        databaseManagementConfigBuilder_.dispose();
        databaseManagementConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.oracledatabase.v1.DatabaseProto
          .internal_static_google_cloud_oracledatabase_v1_DatabaseProperties_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.DatabaseProperties getDefaultInstanceForType() {
      return com.google.cloud.oracledatabase.v1.DatabaseProperties.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.DatabaseProperties build() {
      com.google.cloud.oracledatabase.v1.DatabaseProperties result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.DatabaseProperties buildPartial() {
      com.google.cloud.oracledatabase.v1.DatabaseProperties result =
          new com.google.cloud.oracledatabase.v1.DatabaseProperties(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.oracledatabase.v1.DatabaseProperties result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.state_ = state_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.dbVersion_ = dbVersion_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.dbBackupConfig_ =
            dbBackupConfigBuilder_ == null ? dbBackupConfig_ : dbBackupConfigBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.databaseManagementConfig_ =
            databaseManagementConfigBuilder_ == null
                ? databaseManagementConfig_
                : databaseManagementConfigBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.oracledatabase.v1.DatabaseProperties) {
        return mergeFrom((com.google.cloud.oracledatabase.v1.DatabaseProperties) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.oracledatabase.v1.DatabaseProperties other) {
      if (other == com.google.cloud.oracledatabase.v1.DatabaseProperties.getDefaultInstance())
        return this;
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (!other.getDbVersion().isEmpty()) {
        dbVersion_ = other.dbVersion_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasDbBackupConfig()) {
        mergeDbBackupConfig(other.getDbBackupConfig());
      }
      if (other.hasDatabaseManagementConfig()) {
        mergeDatabaseManagementConfig(other.getDatabaseManagementConfig());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                state_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 18:
              {
                dbVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getDbBackupConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(
                    getDatabaseManagementConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int state_ = 0;

    /**
     *
     *
     * <pre>
     * Output only. State of the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }

    /**
     *
     *
     * <pre>
     * Output only. State of the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      state_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. State of the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The state.
     */
    @java.lang.Override
    public com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState getState() {
      com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState result =
          com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState.forNumber(
              state_);
      return result == null
          ? com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState
              .UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Output only. State of the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(
        com.google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      state_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. State of the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseProperties.DatabaseLifecycleState state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      state_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object dbVersion_ = "";

    /**
     *
     *
     * <pre>
     * Required. The Oracle Database version.
     * </pre>
     *
     * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The dbVersion.
     */
    public java.lang.String getDbVersion() {
      java.lang.Object ref = dbVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dbVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The Oracle Database version.
     * </pre>
     *
     * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for dbVersion.
     */
    public com.google.protobuf.ByteString getDbVersionBytes() {
      java.lang.Object ref = dbVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        dbVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. The Oracle Database version.
     * </pre>
     *
     * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The dbVersion to set.
     * @return This builder for chaining.
     */
    public Builder setDbVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dbVersion_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The Oracle Database version.
     * </pre>
     *
     * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDbVersion() {
      dbVersion_ = getDefaultInstance().getDbVersion();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The Oracle Database version.
     * </pre>
     *
     * <code>string db_version = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for dbVersion to set.
     * @return This builder for chaining.
     */
    public Builder setDbVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      dbVersion_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.cloud.oracledatabase.v1.DbBackupConfig dbBackupConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.oracledatabase.v1.DbBackupConfig,
            com.google.cloud.oracledatabase.v1.DbBackupConfig.Builder,
            com.google.cloud.oracledatabase.v1.DbBackupConfigOrBuilder>
        dbBackupConfigBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the dbBackupConfig field is set.
     */
    public boolean hasDbBackupConfig() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The dbBackupConfig.
     */
    public com.google.cloud.oracledatabase.v1.DbBackupConfig getDbBackupConfig() {
      if (dbBackupConfigBuilder_ == null) {
        return dbBackupConfig_ == null
            ? com.google.cloud.oracledatabase.v1.DbBackupConfig.getDefaultInstance()
            : dbBackupConfig_;
      } else {
        return dbBackupConfigBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDbBackupConfig(com.google.cloud.oracledatabase.v1.DbBackupConfig value) {
      if (dbBackupConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dbBackupConfig_ = value;
      } else {
        dbBackupConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDbBackupConfig(
        com.google.cloud.oracledatabase.v1.DbBackupConfig.Builder builderForValue) {
      if (dbBackupConfigBuilder_ == null) {
        dbBackupConfig_ = builderForValue.build();
      } else {
        dbBackupConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeDbBackupConfig(com.google.cloud.oracledatabase.v1.DbBackupConfig value) {
      if (dbBackupConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)
            && dbBackupConfig_ != null
            && dbBackupConfig_
                != com.google.cloud.oracledatabase.v1.DbBackupConfig.getDefaultInstance()) {
          getDbBackupConfigBuilder().mergeFrom(value);
        } else {
          dbBackupConfig_ = value;
        }
      } else {
        dbBackupConfigBuilder_.mergeFrom(value);
      }
      if (dbBackupConfig_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearDbBackupConfig() {
      bitField0_ = (bitField0_ & ~0x00000004);
      dbBackupConfig_ = null;
      if (dbBackupConfigBuilder_ != null) {
        dbBackupConfigBuilder_.dispose();
        dbBackupConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.oracledatabase.v1.DbBackupConfig.Builder getDbBackupConfigBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDbBackupConfigFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.oracledatabase.v1.DbBackupConfigOrBuilder getDbBackupConfigOrBuilder() {
      if (dbBackupConfigBuilder_ != null) {
        return dbBackupConfigBuilder_.getMessageOrBuilder();
      } else {
        return dbBackupConfig_ == null
            ? com.google.cloud.oracledatabase.v1.DbBackupConfig.getDefaultInstance()
            : dbBackupConfig_;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Backup options for the Database.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DbBackupConfig db_backup_config = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.oracledatabase.v1.DbBackupConfig,
            com.google.cloud.oracledatabase.v1.DbBackupConfig.Builder,
            com.google.cloud.oracledatabase.v1.DbBackupConfigOrBuilder>
        getDbBackupConfigFieldBuilder() {
      if (dbBackupConfigBuilder_ == null) {
        dbBackupConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.oracledatabase.v1.DbBackupConfig,
                com.google.cloud.oracledatabase.v1.DbBackupConfig.Builder,
                com.google.cloud.oracledatabase.v1.DbBackupConfigOrBuilder>(
                getDbBackupConfig(), getParentForChildren(), isClean());
        dbBackupConfig_ = null;
      }
      return dbBackupConfigBuilder_;
    }

    private com.google.cloud.oracledatabase.v1.DatabaseManagementConfig databaseManagementConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.oracledatabase.v1.DatabaseManagementConfig,
            com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.Builder,
            com.google.cloud.oracledatabase.v1.DatabaseManagementConfigOrBuilder>
        databaseManagementConfigBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the databaseManagementConfig field is set.
     */
    public boolean hasDatabaseManagementConfig() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The databaseManagementConfig.
     */
    public com.google.cloud.oracledatabase.v1.DatabaseManagementConfig
        getDatabaseManagementConfig() {
      if (databaseManagementConfigBuilder_ == null) {
        return databaseManagementConfig_ == null
            ? com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.getDefaultInstance()
            : databaseManagementConfig_;
      } else {
        return databaseManagementConfigBuilder_.getMessage();
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setDatabaseManagementConfig(
        com.google.cloud.oracledatabase.v1.DatabaseManagementConfig value) {
      if (databaseManagementConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        databaseManagementConfig_ = value;
      } else {
        databaseManagementConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setDatabaseManagementConfig(
        com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.Builder builderForValue) {
      if (databaseManagementConfigBuilder_ == null) {
        databaseManagementConfig_ = builderForValue.build();
      } else {
        databaseManagementConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeDatabaseManagementConfig(
        com.google.cloud.oracledatabase.v1.DatabaseManagementConfig value) {
      if (databaseManagementConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && databaseManagementConfig_ != null
            && databaseManagementConfig_
                != com.google.cloud.oracledatabase.v1.DatabaseManagementConfig
                    .getDefaultInstance()) {
          getDatabaseManagementConfigBuilder().mergeFrom(value);
        } else {
          databaseManagementConfig_ = value;
        }
      } else {
        databaseManagementConfigBuilder_.mergeFrom(value);
      }
      if (databaseManagementConfig_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearDatabaseManagementConfig() {
      bitField0_ = (bitField0_ & ~0x00000008);
      databaseManagementConfig_ = null;
      if (databaseManagementConfigBuilder_ != null) {
        databaseManagementConfigBuilder_.dispose();
        databaseManagementConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.Builder
        getDatabaseManagementConfigBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getDatabaseManagementConfigFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.oracledatabase.v1.DatabaseManagementConfigOrBuilder
        getDatabaseManagementConfigOrBuilder() {
      if (databaseManagementConfigBuilder_ != null) {
        return databaseManagementConfigBuilder_.getMessageOrBuilder();
      } else {
        return databaseManagementConfig_ == null
            ? com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.getDefaultInstance()
            : databaseManagementConfig_;
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. The Database Management config.
     * </pre>
     *
     * <code>
     * .google.cloud.oracledatabase.v1.DatabaseManagementConfig database_management_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.oracledatabase.v1.DatabaseManagementConfig,
            com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.Builder,
            com.google.cloud.oracledatabase.v1.DatabaseManagementConfigOrBuilder>
        getDatabaseManagementConfigFieldBuilder() {
      if (databaseManagementConfigBuilder_ == null) {
        databaseManagementConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.oracledatabase.v1.DatabaseManagementConfig,
                com.google.cloud.oracledatabase.v1.DatabaseManagementConfig.Builder,
                com.google.cloud.oracledatabase.v1.DatabaseManagementConfigOrBuilder>(
                getDatabaseManagementConfig(), getParentForChildren(), isClean());
        databaseManagementConfig_ = null;
      }
      return databaseManagementConfigBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.oracledatabase.v1.DatabaseProperties)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.oracledatabase.v1.DatabaseProperties)
  private static final com.google.cloud.oracledatabase.v1.DatabaseProperties DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.oracledatabase.v1.DatabaseProperties();
  }

  public static com.google.cloud.oracledatabase.v1.DatabaseProperties getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DatabaseProperties> PARSER =
      new com.google.protobuf.AbstractParser<DatabaseProperties>() {
        @java.lang.Override
        public DatabaseProperties parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<DatabaseProperties> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DatabaseProperties> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.oracledatabase.v1.DatabaseProperties getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
