/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/backupdr/v1/backupvault_gce.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.backupdr.v1;

public interface NetworkInterfaceOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.backupdr.v1.NetworkInterface)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. URL of the VPC network resource for this instance.
   * </pre>
   *
   * <code>optional string network = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the network field is set.
   */
  boolean hasNetwork();
  /**
   *
   *
   * <pre>
   * Optional. URL of the VPC network resource for this instance.
   * </pre>
   *
   * <code>optional string network = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The network.
   */
  java.lang.String getNetwork();
  /**
   *
   *
   * <pre>
   * Optional. URL of the VPC network resource for this instance.
   * </pre>
   *
   * <code>optional string network = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for network.
   */
  com.google.protobuf.ByteString getNetworkBytes();

  /**
   *
   *
   * <pre>
   * Optional. The URL of the Subnetwork resource for this instance.
   * </pre>
   *
   * <code>optional string subnetwork = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the subnetwork field is set.
   */
  boolean hasSubnetwork();
  /**
   *
   *
   * <pre>
   * Optional. The URL of the Subnetwork resource for this instance.
   * </pre>
   *
   * <code>optional string subnetwork = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The subnetwork.
   */
  java.lang.String getSubnetwork();
  /**
   *
   *
   * <pre>
   * Optional. The URL of the Subnetwork resource for this instance.
   * </pre>
   *
   * <code>optional string subnetwork = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for subnetwork.
   */
  com.google.protobuf.ByteString getSubnetworkBytes();

  /**
   *
   *
   * <pre>
   * Optional. An IPv4 internal IP address to assign to the instance for this
   * network interface. If not specified by the user, an unused internal IP is
   * assigned by the system.
   * </pre>
   *
   * <code>
   * optional string ip_address = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return Whether the ipAddress field is set.
   */
  boolean hasIpAddress();
  /**
   *
   *
   * <pre>
   * Optional. An IPv4 internal IP address to assign to the instance for this
   * network interface. If not specified by the user, an unused internal IP is
   * assigned by the system.
   * </pre>
   *
   * <code>
   * optional string ip_address = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The ipAddress.
   */
  java.lang.String getIpAddress();
  /**
   *
   *
   * <pre>
   * Optional. An IPv4 internal IP address to assign to the instance for this
   * network interface. If not specified by the user, an unused internal IP is
   * assigned by the system.
   * </pre>
   *
   * <code>
   * optional string ip_address = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The bytes for ipAddress.
   */
  com.google.protobuf.ByteString getIpAddressBytes();

  /**
   *
   *
   * <pre>
   * Optional. An IPv6 internal network address for this network interface. To
   * use a static internal IP address, it must be unused and in the same region
   * as the instance's zone. If not specified, Google Cloud will automatically
   * assign an internal IPv6 address from the instance's subnetwork.
   * </pre>
   *
   * <code>
   * optional string ipv6_address = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return Whether the ipv6Address field is set.
   */
  boolean hasIpv6Address();
  /**
   *
   *
   * <pre>
   * Optional. An IPv6 internal network address for this network interface. To
   * use a static internal IP address, it must be unused and in the same region
   * as the instance's zone. If not specified, Google Cloud will automatically
   * assign an internal IPv6 address from the instance's subnetwork.
   * </pre>
   *
   * <code>
   * optional string ipv6_address = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The ipv6Address.
   */
  java.lang.String getIpv6Address();
  /**
   *
   *
   * <pre>
   * Optional. An IPv6 internal network address for this network interface. To
   * use a static internal IP address, it must be unused and in the same region
   * as the instance's zone. If not specified, Google Cloud will automatically
   * assign an internal IPv6 address from the instance's subnetwork.
   * </pre>
   *
   * <code>
   * optional string ipv6_address = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = { ... }
   * </code>
   *
   * @return The bytes for ipv6Address.
   */
  com.google.protobuf.ByteString getIpv6AddressBytes();

  /**
   *
   *
   * <pre>
   * Optional. The prefix length of the primary internal IPv6 range.
   * </pre>
   *
   * <code>optional int32 internal_ipv6_prefix_length = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the internalIpv6PrefixLength field is set.
   */
  boolean hasInternalIpv6PrefixLength();
  /**
   *
   *
   * <pre>
   * Optional. The prefix length of the primary internal IPv6 range.
   * </pre>
   *
   * <code>optional int32 internal_ipv6_prefix_length = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The internalIpv6PrefixLength.
   */
  int getInternalIpv6PrefixLength();

  /**
   *
   *
   * <pre>
   * Output only. [Output Only] The name of the network interface, which is
   * generated by the server.
   * </pre>
   *
   * <code>optional string name = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   *
   *
   * <pre>
   * Output only. [Output Only] The name of the network interface, which is
   * generated by the server.
   * </pre>
   *
   * <code>optional string name = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Output only. [Output Only] The name of the network interface, which is
   * generated by the server.
   * </pre>
   *
   * <code>optional string name = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. An array of configurations for this interface. Currently, only
   * one access config,ONE_TO_ONE_NAT is supported. If there are no
   * accessConfigs specified, then this instance will have
   * no external internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<com.google.cloud.backupdr.v1.AccessConfig> getAccessConfigsList();
  /**
   *
   *
   * <pre>
   * Optional. An array of configurations for this interface. Currently, only
   * one access config,ONE_TO_ONE_NAT is supported. If there are no
   * accessConfigs specified, then this instance will have
   * no external internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.backupdr.v1.AccessConfig getAccessConfigs(int index);
  /**
   *
   *
   * <pre>
   * Optional. An array of configurations for this interface. Currently, only
   * one access config,ONE_TO_ONE_NAT is supported. If there are no
   * accessConfigs specified, then this instance will have
   * no external internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  int getAccessConfigsCount();
  /**
   *
   *
   * <pre>
   * Optional. An array of configurations for this interface. Currently, only
   * one access config,ONE_TO_ONE_NAT is supported. If there are no
   * accessConfigs specified, then this instance will have
   * no external internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<? extends com.google.cloud.backupdr.v1.AccessConfigOrBuilder>
      getAccessConfigsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Optional. An array of configurations for this interface. Currently, only
   * one access config,ONE_TO_ONE_NAT is supported. If there are no
   * accessConfigs specified, then this instance will have
   * no external internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.backupdr.v1.AccessConfigOrBuilder getAccessConfigsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Optional. An array of IPv6 access configurations for this interface.
   * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
   * is no ipv6AccessConfig specified, then this instance will
   * have no external IPv6 Internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<com.google.cloud.backupdr.v1.AccessConfig> getIpv6AccessConfigsList();
  /**
   *
   *
   * <pre>
   * Optional. An array of IPv6 access configurations for this interface.
   * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
   * is no ipv6AccessConfig specified, then this instance will
   * have no external IPv6 Internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.backupdr.v1.AccessConfig getIpv6AccessConfigs(int index);
  /**
   *
   *
   * <pre>
   * Optional. An array of IPv6 access configurations for this interface.
   * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
   * is no ipv6AccessConfig specified, then this instance will
   * have no external IPv6 Internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  int getIpv6AccessConfigsCount();
  /**
   *
   *
   * <pre>
   * Optional. An array of IPv6 access configurations for this interface.
   * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
   * is no ipv6AccessConfig specified, then this instance will
   * have no external IPv6 Internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<? extends com.google.cloud.backupdr.v1.AccessConfigOrBuilder>
      getIpv6AccessConfigsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Optional. An array of IPv6 access configurations for this interface.
   * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
   * is no ipv6AccessConfig specified, then this instance will
   * have no external IPv6 Internet access.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.backupdr.v1.AccessConfigOrBuilder getIpv6AccessConfigsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Optional. An array of alias IP ranges for this network interface.
   * You can only specify this field for network interfaces in VPC networks.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<com.google.cloud.backupdr.v1.AliasIpRange> getAliasIpRangesList();
  /**
   *
   *
   * <pre>
   * Optional. An array of alias IP ranges for this network interface.
   * You can only specify this field for network interfaces in VPC networks.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.backupdr.v1.AliasIpRange getAliasIpRanges(int index);
  /**
   *
   *
   * <pre>
   * Optional. An array of alias IP ranges for this network interface.
   * You can only specify this field for network interfaces in VPC networks.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  int getAliasIpRangesCount();
  /**
   *
   *
   * <pre>
   * Optional. An array of alias IP ranges for this network interface.
   * You can only specify this field for network interfaces in VPC networks.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  java.util.List<? extends com.google.cloud.backupdr.v1.AliasIpRangeOrBuilder>
      getAliasIpRangesOrBuilderList();
  /**
   *
   *
   * <pre>
   * Optional. An array of alias IP ranges for this network interface.
   * You can only specify this field for network interfaces in VPC networks.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.backupdr.v1.AliasIpRangeOrBuilder getAliasIpRangesOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The stack type for this network interface.
   * </pre>
   *
   * <code>optional .google.cloud.backupdr.v1.NetworkInterface.StackType stack_type = 10;</code>
   *
   * @return Whether the stackType field is set.
   */
  boolean hasStackType();
  /**
   *
   *
   * <pre>
   * The stack type for this network interface.
   * </pre>
   *
   * <code>optional .google.cloud.backupdr.v1.NetworkInterface.StackType stack_type = 10;</code>
   *
   * @return The enum numeric value on the wire for stackType.
   */
  int getStackTypeValue();
  /**
   *
   *
   * <pre>
   * The stack type for this network interface.
   * </pre>
   *
   * <code>optional .google.cloud.backupdr.v1.NetworkInterface.StackType stack_type = 10;</code>
   *
   * @return The stackType.
   */
  com.google.cloud.backupdr.v1.NetworkInterface.StackType getStackType();

  /**
   *
   *
   * <pre>
   * Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
   * IP can be accessed from the Internet. This field is always inherited from
   * its subnetwork.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType ipv6_access_type = 11 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the ipv6AccessType field is set.
   */
  boolean hasIpv6AccessType();
  /**
   *
   *
   * <pre>
   * Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
   * IP can be accessed from the Internet. This field is always inherited from
   * its subnetwork.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType ipv6_access_type = 11 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for ipv6AccessType.
   */
  int getIpv6AccessTypeValue();
  /**
   *
   *
   * <pre>
   * Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
   * IP can be accessed from the Internet. This field is always inherited from
   * its subnetwork.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType ipv6_access_type = 11 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The ipv6AccessType.
   */
  com.google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType getIpv6AccessType();

  /**
   *
   *
   * <pre>
   * Optional. The networking queue count that's specified by users for the
   * network interface. Both Rx and Tx queues will be set to this number. It'll
   * be empty if not specified by the users.
   * </pre>
   *
   * <code>optional int32 queue_count = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the queueCount field is set.
   */
  boolean hasQueueCount();
  /**
   *
   *
   * <pre>
   * Optional. The networking queue count that's specified by users for the
   * network interface. Both Rx and Tx queues will be set to this number. It'll
   * be empty if not specified by the users.
   * </pre>
   *
   * <code>optional int32 queue_count = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The queueCount.
   */
  int getQueueCount();

  /**
   *
   *
   * <pre>
   * Optional. The type of vNIC to be used on this interface. This may be gVNIC
   * or VirtioNet.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.NetworkInterface.NicType nic_type = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the nicType field is set.
   */
  boolean hasNicType();
  /**
   *
   *
   * <pre>
   * Optional. The type of vNIC to be used on this interface. This may be gVNIC
   * or VirtioNet.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.NetworkInterface.NicType nic_type = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for nicType.
   */
  int getNicTypeValue();
  /**
   *
   *
   * <pre>
   * Optional. The type of vNIC to be used on this interface. This may be gVNIC
   * or VirtioNet.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.NetworkInterface.NicType nic_type = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The nicType.
   */
  com.google.cloud.backupdr.v1.NetworkInterface.NicType getNicType();

  /**
   *
   *
   * <pre>
   * Optional. The URL of the network attachment that this interface should
   * connect to in the following format:
   * projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
   * </pre>
   *
   * <code>optional string network_attachment = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the networkAttachment field is set.
   */
  boolean hasNetworkAttachment();
  /**
   *
   *
   * <pre>
   * Optional. The URL of the network attachment that this interface should
   * connect to in the following format:
   * projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
   * </pre>
   *
   * <code>optional string network_attachment = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The networkAttachment.
   */
  java.lang.String getNetworkAttachment();
  /**
   *
   *
   * <pre>
   * Optional. The URL of the network attachment that this interface should
   * connect to in the following format:
   * projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
   * </pre>
   *
   * <code>optional string network_attachment = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for networkAttachment.
   */
  com.google.protobuf.ByteString getNetworkAttachmentBytes();
}
