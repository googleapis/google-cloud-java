/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/backupdr/v1/backupvault_gce.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.backupdr.v1;

/**
 *
 *
 * <pre>
 * An instance-attached disk resource.
 * </pre>
 *
 * Protobuf type {@code google.cloud.backupdr.v1.AttachedDisk}
 */
public final class AttachedDisk extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.backupdr.v1.AttachedDisk)
    AttachedDiskOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AttachedDisk.newBuilder() to construct.
  private AttachedDisk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AttachedDisk() {
    deviceName_ = "";
    kind_ = "";
    diskTypeDeprecated_ = 0;
    mode_ = 0;
    source_ = "";
    license_ = com.google.protobuf.LazyStringArrayList.emptyList();
    diskInterface_ = 0;
    guestOsFeature_ = java.util.Collections.emptyList();
    savedState_ = 0;
    diskType_ = "";
    type_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AttachedDisk();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.backupdr.v1.BackupvaultGceProto
        .internal_static_google_cloud_backupdr_v1_AttachedDisk_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.backupdr.v1.BackupvaultGceProto
        .internal_static_google_cloud_backupdr_v1_AttachedDisk_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.backupdr.v1.AttachedDisk.class,
            com.google.cloud.backupdr.v1.AttachedDisk.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * List of the Disk Types.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.backupdr.v1.AttachedDisk.DiskType}
   */
  public enum DiskType implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default value, which is unused.
     * </pre>
     *
     * <code>DISK_TYPE_UNSPECIFIED = 0;</code>
     */
    DISK_TYPE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * A scratch disk type.
     * </pre>
     *
     * <code>SCRATCH = 1;</code>
     */
    SCRATCH(1),
    /**
     *
     *
     * <pre>
     * A persistent disk type.
     * </pre>
     *
     * <code>PERSISTENT = 2;</code>
     */
    PERSISTENT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default value, which is unused.
     * </pre>
     *
     * <code>DISK_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int DISK_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * A scratch disk type.
     * </pre>
     *
     * <code>SCRATCH = 1;</code>
     */
    public static final int SCRATCH_VALUE = 1;
    /**
     *
     *
     * <pre>
     * A persistent disk type.
     * </pre>
     *
     * <code>PERSISTENT = 2;</code>
     */
    public static final int PERSISTENT_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DiskType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DiskType forNumber(int value) {
      switch (value) {
        case 0:
          return DISK_TYPE_UNSPECIFIED;
        case 1:
          return SCRATCH;
        case 2:
          return PERSISTENT;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DiskType> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DiskType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DiskType>() {
          public DiskType findValueByNumber(int number) {
            return DiskType.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.backupdr.v1.AttachedDisk.getDescriptor().getEnumTypes().get(0);
    }

    private static final DiskType[] VALUES = values();

    public static DiskType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DiskType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.backupdr.v1.AttachedDisk.DiskType)
  }

  /**
   *
   *
   * <pre>
   * List of the Disk Modes.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.backupdr.v1.AttachedDisk.DiskMode}
   */
  public enum DiskMode implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default value, which is unused.
     * </pre>
     *
     * <code>DISK_MODE_UNSPECIFIED = 0;</code>
     */
    DISK_MODE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Attaches this disk in read-write mode. Only one
     * virtual machine at a time can be attached to a disk in read-write mode.
     * </pre>
     *
     * <code>READ_WRITE = 1;</code>
     */
    READ_WRITE(1),
    /**
     *
     *
     * <pre>
     * Attaches this disk in read-only mode. Multiple virtual machines can use
     * a disk in read-only mode at a time.
     * </pre>
     *
     * <code>READ_ONLY = 2;</code>
     */
    READ_ONLY(2),
    /**
     *
     *
     * <pre>
     * The disk is locked for administrative reasons. Nobody else
     * can use the disk. This mode is used (for example) when taking
     * a snapshot of a disk to prevent mounting the disk while it is
     * being snapshotted.
     * </pre>
     *
     * <code>LOCKED = 3;</code>
     */
    LOCKED(3),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default value, which is unused.
     * </pre>
     *
     * <code>DISK_MODE_UNSPECIFIED = 0;</code>
     */
    public static final int DISK_MODE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Attaches this disk in read-write mode. Only one
     * virtual machine at a time can be attached to a disk in read-write mode.
     * </pre>
     *
     * <code>READ_WRITE = 1;</code>
     */
    public static final int READ_WRITE_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Attaches this disk in read-only mode. Multiple virtual machines can use
     * a disk in read-only mode at a time.
     * </pre>
     *
     * <code>READ_ONLY = 2;</code>
     */
    public static final int READ_ONLY_VALUE = 2;
    /**
     *
     *
     * <pre>
     * The disk is locked for administrative reasons. Nobody else
     * can use the disk. This mode is used (for example) when taking
     * a snapshot of a disk to prevent mounting the disk while it is
     * being snapshotted.
     * </pre>
     *
     * <code>LOCKED = 3;</code>
     */
    public static final int LOCKED_VALUE = 3;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DiskMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DiskMode forNumber(int value) {
      switch (value) {
        case 0:
          return DISK_MODE_UNSPECIFIED;
        case 1:
          return READ_WRITE;
        case 2:
          return READ_ONLY;
        case 3:
          return LOCKED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DiskMode> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DiskMode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DiskMode>() {
          public DiskMode findValueByNumber(int number) {
            return DiskMode.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.backupdr.v1.AttachedDisk.getDescriptor().getEnumTypes().get(1);
    }

    private static final DiskMode[] VALUES = values();

    public static DiskMode valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DiskMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.backupdr.v1.AttachedDisk.DiskMode)
  }

  /**
   *
   *
   * <pre>
   * List of the Disk Interfaces.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.backupdr.v1.AttachedDisk.DiskInterface}
   */
  public enum DiskInterface implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default value, which is unused.
     * </pre>
     *
     * <code>DISK_INTERFACE_UNSPECIFIED = 0;</code>
     */
    DISK_INTERFACE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * SCSI Disk Interface.
     * </pre>
     *
     * <code>SCSI = 1;</code>
     */
    SCSI(1),
    /**
     *
     *
     * <pre>
     * NVME Disk Interface.
     * </pre>
     *
     * <code>NVME = 2;</code>
     */
    NVME(2),
    /**
     *
     *
     * <pre>
     * NVDIMM Disk Interface.
     * </pre>
     *
     * <code>NVDIMM = 3;</code>
     */
    NVDIMM(3),
    /**
     *
     *
     * <pre>
     * ISCSI Disk Interface.
     * </pre>
     *
     * <code>ISCSI = 4;</code>
     */
    ISCSI(4),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default value, which is unused.
     * </pre>
     *
     * <code>DISK_INTERFACE_UNSPECIFIED = 0;</code>
     */
    public static final int DISK_INTERFACE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * SCSI Disk Interface.
     * </pre>
     *
     * <code>SCSI = 1;</code>
     */
    public static final int SCSI_VALUE = 1;
    /**
     *
     *
     * <pre>
     * NVME Disk Interface.
     * </pre>
     *
     * <code>NVME = 2;</code>
     */
    public static final int NVME_VALUE = 2;
    /**
     *
     *
     * <pre>
     * NVDIMM Disk Interface.
     * </pre>
     *
     * <code>NVDIMM = 3;</code>
     */
    public static final int NVDIMM_VALUE = 3;
    /**
     *
     *
     * <pre>
     * ISCSI Disk Interface.
     * </pre>
     *
     * <code>ISCSI = 4;</code>
     */
    public static final int ISCSI_VALUE = 4;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DiskInterface valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DiskInterface forNumber(int value) {
      switch (value) {
        case 0:
          return DISK_INTERFACE_UNSPECIFIED;
        case 1:
          return SCSI;
        case 2:
          return NVME;
        case 3:
          return NVDIMM;
        case 4:
          return ISCSI;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DiskInterface> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DiskInterface> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DiskInterface>() {
          public DiskInterface findValueByNumber(int number) {
            return DiskInterface.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.backupdr.v1.AttachedDisk.getDescriptor().getEnumTypes().get(2);
    }

    private static final DiskInterface[] VALUES = values();

    public static DiskInterface valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DiskInterface(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.backupdr.v1.AttachedDisk.DiskInterface)
  }

  /**
   *
   *
   * <pre>
   * List of the states of the Disk.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.backupdr.v1.AttachedDisk.DiskSavedState}
   */
  public enum DiskSavedState implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default Disk state has not been preserved.
     * </pre>
     *
     * <code>DISK_SAVED_STATE_UNSPECIFIED = 0;</code>
     */
    DISK_SAVED_STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Disk state has been preserved.
     * </pre>
     *
     * <code>PRESERVED = 1;</code>
     */
    PRESERVED(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default Disk state has not been preserved.
     * </pre>
     *
     * <code>DISK_SAVED_STATE_UNSPECIFIED = 0;</code>
     */
    public static final int DISK_SAVED_STATE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Disk state has been preserved.
     * </pre>
     *
     * <code>PRESERVED = 1;</code>
     */
    public static final int PRESERVED_VALUE = 1;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DiskSavedState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DiskSavedState forNumber(int value) {
      switch (value) {
        case 0:
          return DISK_SAVED_STATE_UNSPECIFIED;
        case 1:
          return PRESERVED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DiskSavedState> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<DiskSavedState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DiskSavedState>() {
          public DiskSavedState findValueByNumber(int number) {
            return DiskSavedState.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.backupdr.v1.AttachedDisk.getDescriptor().getEnumTypes().get(3);
    }

    private static final DiskSavedState[] VALUES = values();

    public static DiskSavedState valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DiskSavedState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.backupdr.v1.AttachedDisk.DiskSavedState)
  }

  public interface InitializeParamsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.backupdr.v1.AttachedDisk.InitializeParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk name. If not specified, the default is to
     * use the name of the instance.
     * </pre>
     *
     * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the diskName field is set.
     */
    boolean hasDiskName();
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk name. If not specified, the default is to
     * use the name of the instance.
     * </pre>
     *
     * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The diskName.
     */
    java.lang.String getDiskName();
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk name. If not specified, the default is to
     * use the name of the instance.
     * </pre>
     *
     * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for diskName.
     */
    com.google.protobuf.ByteString getDiskNameBytes();

    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the replicaZones.
     */
    java.util.List<java.lang.String> getReplicaZonesList();
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of replicaZones.
     */
    int getReplicaZonesCount();
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The replicaZones at the given index.
     */
    java.lang.String getReplicaZones(int index);
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the replicaZones at the given index.
     */
    com.google.protobuf.ByteString getReplicaZonesBytes(int index);
  }
  /**
   *
   *
   * <pre>
   * Specifies the parameters to initialize this disk.
   * </pre>
   *
   * Protobuf type {@code google.cloud.backupdr.v1.AttachedDisk.InitializeParams}
   */
  public static final class InitializeParams extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.backupdr.v1.AttachedDisk.InitializeParams)
      InitializeParamsOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use InitializeParams.newBuilder() to construct.
    private InitializeParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private InitializeParams() {
      diskName_ = "";
      replicaZones_ = com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new InitializeParams();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.backupdr.v1.BackupvaultGceProto
          .internal_static_google_cloud_backupdr_v1_AttachedDisk_InitializeParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.backupdr.v1.BackupvaultGceProto
          .internal_static_google_cloud_backupdr_v1_AttachedDisk_InitializeParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.class,
              com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder.class);
    }

    private int bitField0_;
    public static final int DISK_NAME_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object diskName_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk name. If not specified, the default is to
     * use the name of the instance.
     * </pre>
     *
     * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the diskName field is set.
     */
    @java.lang.Override
    public boolean hasDiskName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk name. If not specified, the default is to
     * use the name of the instance.
     * </pre>
     *
     * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The diskName.
     */
    @java.lang.Override
    public java.lang.String getDiskName() {
      java.lang.Object ref = diskName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diskName_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk name. If not specified, the default is to
     * use the name of the instance.
     * </pre>
     *
     * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for diskName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDiskNameBytes() {
      java.lang.Object ref = diskName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        diskName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPLICA_ZONES_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList replicaZones_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the replicaZones.
     */
    public com.google.protobuf.ProtocolStringList getReplicaZonesList() {
      return replicaZones_;
    }
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of replicaZones.
     */
    public int getReplicaZonesCount() {
      return replicaZones_.size();
    }
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The replicaZones at the given index.
     */
    public java.lang.String getReplicaZones(int index) {
      return replicaZones_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. URL of the zone where the disk should be created.
     * Required for each regional disk associated with the instance.
     * </pre>
     *
     * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the replicaZones at the given index.
     */
    public com.google.protobuf.ByteString getReplicaZonesBytes(int index) {
      return replicaZones_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, diskName_);
      }
      for (int i = 0; i < replicaZones_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, replicaZones_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, diskName_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < replicaZones_.size(); i++) {
          dataSize += computeStringSizeNoTag(replicaZones_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getReplicaZonesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams)) {
        return super.equals(obj);
      }
      com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams other =
          (com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams) obj;

      if (hasDiskName() != other.hasDiskName()) return false;
      if (hasDiskName()) {
        if (!getDiskName().equals(other.getDiskName())) return false;
      }
      if (!getReplicaZonesList().equals(other.getReplicaZonesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDiskName()) {
        hash = (37 * hash) + DISK_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getDiskName().hashCode();
      }
      if (getReplicaZonesCount() > 0) {
        hash = (37 * hash) + REPLICA_ZONES_FIELD_NUMBER;
        hash = (53 * hash) + getReplicaZonesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Specifies the parameters to initialize this disk.
     * </pre>
     *
     * Protobuf type {@code google.cloud.backupdr.v1.AttachedDisk.InitializeParams}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.backupdr.v1.AttachedDisk.InitializeParams)
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.backupdr.v1.BackupvaultGceProto
            .internal_static_google_cloud_backupdr_v1_AttachedDisk_InitializeParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.backupdr.v1.BackupvaultGceProto
            .internal_static_google_cloud_backupdr_v1_AttachedDisk_InitializeParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.class,
                com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder.class);
      }

      // Construct using com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        diskName_ = "";
        replicaZones_ = com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.backupdr.v1.BackupvaultGceProto
            .internal_static_google_cloud_backupdr_v1_AttachedDisk_InitializeParams_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams
          getDefaultInstanceForType() {
        return com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams build() {
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams buildPartial() {
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams result =
            new com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.diskName_ = diskName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          replicaZones_.makeImmutable();
          result.replicaZones_ = replicaZones_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams) {
          return mergeFrom((com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams other) {
        if (other
            == com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.getDefaultInstance())
          return this;
        if (other.hasDiskName()) {
          diskName_ = other.diskName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.replicaZones_.isEmpty()) {
          if (replicaZones_.isEmpty()) {
            replicaZones_ = other.replicaZones_;
            bitField0_ |= 0x00000002;
          } else {
            ensureReplicaZonesIsMutable();
            replicaZones_.addAll(other.replicaZones_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  diskName_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureReplicaZonesIsMutable();
                  replicaZones_.add(s);
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object diskName_ = "";
      /**
       *
       *
       * <pre>
       * Optional. Specifies the disk name. If not specified, the default is to
       * use the name of the instance.
       * </pre>
       *
       * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return Whether the diskName field is set.
       */
      public boolean hasDiskName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Optional. Specifies the disk name. If not specified, the default is to
       * use the name of the instance.
       * </pre>
       *
       * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The diskName.
       */
      public java.lang.String getDiskName() {
        java.lang.Object ref = diskName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          diskName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Optional. Specifies the disk name. If not specified, the default is to
       * use the name of the instance.
       * </pre>
       *
       * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The bytes for diskName.
       */
      public com.google.protobuf.ByteString getDiskNameBytes() {
        java.lang.Object ref = diskName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          diskName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Optional. Specifies the disk name. If not specified, the default is to
       * use the name of the instance.
       * </pre>
       *
       * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The diskName to set.
       * @return This builder for chaining.
       */
      public Builder setDiskName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        diskName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. Specifies the disk name. If not specified, the default is to
       * use the name of the instance.
       * </pre>
       *
       * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDiskName() {
        diskName_ = getDefaultInstance().getDiskName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. Specifies the disk name. If not specified, the default is to
       * use the name of the instance.
       * </pre>
       *
       * <code>optional string disk_name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The bytes for diskName to set.
       * @return This builder for chaining.
       */
      public Builder setDiskNameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        diskName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList replicaZones_ =
          com.google.protobuf.LazyStringArrayList.emptyList();

      private void ensureReplicaZonesIsMutable() {
        if (!replicaZones_.isModifiable()) {
          replicaZones_ = new com.google.protobuf.LazyStringArrayList(replicaZones_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return A list containing the replicaZones.
       */
      public com.google.protobuf.ProtocolStringList getReplicaZonesList() {
        replicaZones_.makeImmutable();
        return replicaZones_;
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The count of replicaZones.
       */
      public int getReplicaZonesCount() {
        return replicaZones_.size();
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param index The index of the element to return.
       * @return The replicaZones at the given index.
       */
      public java.lang.String getReplicaZones(int index) {
        return replicaZones_.get(index);
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param index The index of the value to return.
       * @return The bytes of the replicaZones at the given index.
       */
      public com.google.protobuf.ByteString getReplicaZonesBytes(int index) {
        return replicaZones_.getByteString(index);
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param index The index to set the value at.
       * @param value The replicaZones to set.
       * @return This builder for chaining.
       */
      public Builder setReplicaZones(int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReplicaZonesIsMutable();
        replicaZones_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The replicaZones to add.
       * @return This builder for chaining.
       */
      public Builder addReplicaZones(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReplicaZonesIsMutable();
        replicaZones_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param values The replicaZones to add.
       * @return This builder for chaining.
       */
      public Builder addAllReplicaZones(java.lang.Iterable<java.lang.String> values) {
        ensureReplicaZonesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, replicaZones_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearReplicaZones() {
        replicaZones_ = com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        ;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. URL of the zone where the disk should be created.
       * Required for each regional disk associated with the instance.
       * </pre>
       *
       * <code>repeated string replica_zones = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The bytes of the replicaZones to add.
       * @return This builder for chaining.
       */
      public Builder addReplicaZonesBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        ensureReplicaZonesIsMutable();
        replicaZones_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.backupdr.v1.AttachedDisk.InitializeParams)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.backupdr.v1.AttachedDisk.InitializeParams)
    private static final com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams();
    }

    public static com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InitializeParams> PARSER =
        new com.google.protobuf.AbstractParser<InitializeParams>() {
          @java.lang.Override
          public InitializeParams parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<InitializeParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InitializeParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int INITIALIZE_PARAMS_FIELD_NUMBER = 1;
  private com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams initializeParams_;
  /**
   *
   *
   * <pre>
   * Optional. Specifies the parameters to initialize this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the initializeParams field is set.
   */
  @java.lang.Override
  public boolean hasInitializeParams() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies the parameters to initialize this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The initializeParams.
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams getInitializeParams() {
    return initializeParams_ == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.getDefaultInstance()
        : initializeParams_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies the parameters to initialize this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParamsOrBuilder
      getInitializeParamsOrBuilder() {
    return initializeParams_ == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.getDefaultInstance()
        : initializeParams_;
  }

  public static final int DEVICE_NAME_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object deviceName_ = "";
  /**
   *
   *
   * <pre>
   * Optional. This is used as an identifier for the disks. This is the unique
   * name has to provided to modify disk parameters like disk_name and
   * replica_zones (in case of RePDs)
   * </pre>
   *
   * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the deviceName field is set.
   */
  @java.lang.Override
  public boolean hasDeviceName() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. This is used as an identifier for the disks. This is the unique
   * name has to provided to modify disk parameters like disk_name and
   * replica_zones (in case of RePDs)
   * </pre>
   *
   * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The deviceName.
   */
  @java.lang.Override
  public java.lang.String getDeviceName() {
    java.lang.Object ref = deviceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deviceName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. This is used as an identifier for the disks. This is the unique
   * name has to provided to modify disk parameters like disk_name and
   * replica_zones (in case of RePDs)
   * </pre>
   *
   * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for deviceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDeviceNameBytes() {
    java.lang.Object ref = deviceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      deviceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KIND_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object kind_ = "";
  /**
   *
   *
   * <pre>
   * Optional. Type of the resource.
   * </pre>
   *
   * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the kind field is set.
   */
  @java.lang.Override
  public boolean hasKind() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Type of the resource.
   * </pre>
   *
   * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The kind.
   */
  @java.lang.Override
  public java.lang.String getKind() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kind_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. Type of the resource.
   * </pre>
   *
   * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for kind.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKindBytes() {
    java.lang.Object ref = kind_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      kind_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DISK_TYPE_DEPRECATED_FIELD_NUMBER = 6;
  private int diskTypeDeprecated_ = 0;
  /**
   *
   *
   * <pre>
   * Specifies the type of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
   * </code>
   *
   * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
   *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
   * @return Whether the diskTypeDeprecated field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public boolean hasDiskTypeDeprecated() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Specifies the type of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
   * </code>
   *
   * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
   *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
   * @return The enum numeric value on the wire for diskTypeDeprecated.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public int getDiskTypeDeprecatedValue() {
    return diskTypeDeprecated_;
  }
  /**
   *
   *
   * <pre>
   * Specifies the type of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
   * </code>
   *
   * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
   *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
   * @return The diskTypeDeprecated.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public com.google.cloud.backupdr.v1.AttachedDisk.DiskType getDiskTypeDeprecated() {
    com.google.cloud.backupdr.v1.AttachedDisk.DiskType result =
        com.google.cloud.backupdr.v1.AttachedDisk.DiskType.forNumber(diskTypeDeprecated_);
    return result == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.DiskType.UNRECOGNIZED
        : result;
  }

  public static final int MODE_FIELD_NUMBER = 7;
  private int mode_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. The mode in which to attach this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the mode field is set.
   */
  @java.lang.Override
  public boolean hasMode() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. The mode in which to attach this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for mode.
   */
  @java.lang.Override
  public int getModeValue() {
    return mode_;
  }
  /**
   *
   *
   * <pre>
   * Optional. The mode in which to attach this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The mode.
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk.DiskMode getMode() {
    com.google.cloud.backupdr.v1.AttachedDisk.DiskMode result =
        com.google.cloud.backupdr.v1.AttachedDisk.DiskMode.forNumber(mode_);
    return result == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.DiskMode.UNRECOGNIZED
        : result;
  }

  public static final int SOURCE_FIELD_NUMBER = 8;

  @SuppressWarnings("serial")
  private volatile java.lang.Object source_ = "";
  /**
   *
   *
   * <pre>
   * Optional. Specifies a valid partial or full URL to an existing Persistent
   * Disk resource.
   * </pre>
   *
   * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the source field is set.
   */
  @java.lang.Override
  public boolean hasSource() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies a valid partial or full URL to an existing Persistent
   * Disk resource.
   * </pre>
   *
   * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The source.
   */
  @java.lang.Override
  public java.lang.String getSource() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      source_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies a valid partial or full URL to an existing Persistent
   * Disk resource.
   * </pre>
   *
   * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for source.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSourceBytes() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      source_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INDEX_FIELD_NUMBER = 9;
  private long index_ = 0L;
  /**
   *
   *
   * <pre>
   * Optional. A zero-based index to this disk, where 0 is reserved for the
   * boot disk.
   * </pre>
   *
   * <code>optional int64 index = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the index field is set.
   */
  @java.lang.Override
  public boolean hasIndex() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. A zero-based index to this disk, where 0 is reserved for the
   * boot disk.
   * </pre>
   *
   * <code>optional int64 index = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The index.
   */
  @java.lang.Override
  public long getIndex() {
    return index_;
  }

  public static final int BOOT_FIELD_NUMBER = 10;
  private boolean boot_ = false;
  /**
   *
   *
   * <pre>
   * Optional. Indicates that this is a boot disk. The virtual machine will use
   * the first partition of the disk for its root filesystem.
   * </pre>
   *
   * <code>optional bool boot = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the boot field is set.
   */
  @java.lang.Override
  public boolean hasBoot() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Indicates that this is a boot disk. The virtual machine will use
   * the first partition of the disk for its root filesystem.
   * </pre>
   *
   * <code>optional bool boot = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The boot.
   */
  @java.lang.Override
  public boolean getBoot() {
    return boot_;
  }

  public static final int AUTO_DELETE_FIELD_NUMBER = 11;
  private boolean autoDelete_ = false;
  /**
   *
   *
   * <pre>
   * Optional. Specifies whether the disk will be auto-deleted when the instance
   * is deleted (but not when the disk is detached from the instance).
   * </pre>
   *
   * <code>optional bool auto_delete = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the autoDelete field is set.
   */
  @java.lang.Override
  public boolean hasAutoDelete() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies whether the disk will be auto-deleted when the instance
   * is deleted (but not when the disk is detached from the instance).
   * </pre>
   *
   * <code>optional bool auto_delete = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The autoDelete.
   */
  @java.lang.Override
  public boolean getAutoDelete() {
    return autoDelete_;
  }

  public static final int LICENSE_FIELD_NUMBER = 12;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList license_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * Optional. Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return A list containing the license.
   */
  public com.google.protobuf.ProtocolStringList getLicenseList() {
    return license_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The count of license.
   */
  public int getLicenseCount() {
    return license_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the element to return.
   * @return The license at the given index.
   */
  public java.lang.String getLicense(int index) {
    return license_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. Any valid publicly visible licenses.
   * </pre>
   *
   * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the license at the given index.
   */
  public com.google.protobuf.ByteString getLicenseBytes(int index) {
    return license_.getByteString(index);
  }

  public static final int DISK_INTERFACE_FIELD_NUMBER = 13;
  private int diskInterface_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. Specifies the disk interface to use for attaching this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the diskInterface field is set.
   */
  @java.lang.Override
  public boolean hasDiskInterface() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies the disk interface to use for attaching this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for diskInterface.
   */
  @java.lang.Override
  public int getDiskInterfaceValue() {
    return diskInterface_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies the disk interface to use for attaching this disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The diskInterface.
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface getDiskInterface() {
    com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface result =
        com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface.forNumber(diskInterface_);
    return result == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface.UNRECOGNIZED
        : result;
  }

  public static final int GUEST_OS_FEATURE_FIELD_NUMBER = 14;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.backupdr.v1.GuestOsFeature> guestOsFeature_;
  /**
   *
   *
   * <pre>
   * Optional. A list of features to enable on the guest operating system.
   * Applicable only for bootable images.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.backupdr.v1.GuestOsFeature> getGuestOsFeatureList() {
    return guestOsFeature_;
  }
  /**
   *
   *
   * <pre>
   * Optional. A list of features to enable on the guest operating system.
   * Applicable only for bootable images.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder>
      getGuestOsFeatureOrBuilderList() {
    return guestOsFeature_;
  }
  /**
   *
   *
   * <pre>
   * Optional. A list of features to enable on the guest operating system.
   * Applicable only for bootable images.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getGuestOsFeatureCount() {
    return guestOsFeature_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. A list of features to enable on the guest operating system.
   * Applicable only for bootable images.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.GuestOsFeature getGuestOsFeature(int index) {
    return guestOsFeature_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. A list of features to enable on the guest operating system.
   * Applicable only for bootable images.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder getGuestOsFeatureOrBuilder(
      int index) {
    return guestOsFeature_.get(index);
  }

  public static final int DISK_ENCRYPTION_KEY_FIELD_NUMBER = 15;
  private com.google.cloud.backupdr.v1.CustomerEncryptionKey diskEncryptionKey_;
  /**
   *
   *
   * <pre>
   * Optional. Encrypts or decrypts a disk using a customer-supplied
   * encryption key.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the diskEncryptionKey field is set.
   */
  @java.lang.Override
  public boolean hasDiskEncryptionKey() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Encrypts or decrypts a disk using a customer-supplied
   * encryption key.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The diskEncryptionKey.
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.CustomerEncryptionKey getDiskEncryptionKey() {
    return diskEncryptionKey_ == null
        ? com.google.cloud.backupdr.v1.CustomerEncryptionKey.getDefaultInstance()
        : diskEncryptionKey_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Encrypts or decrypts a disk using a customer-supplied
   * encryption key.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.CustomerEncryptionKeyOrBuilder
      getDiskEncryptionKeyOrBuilder() {
    return diskEncryptionKey_ == null
        ? com.google.cloud.backupdr.v1.CustomerEncryptionKey.getDefaultInstance()
        : diskEncryptionKey_;
  }

  public static final int DISK_SIZE_GB_FIELD_NUMBER = 16;
  private long diskSizeGb_ = 0L;
  /**
   *
   *
   * <pre>
   * Optional. The size of the disk in GB.
   * </pre>
   *
   * <code>optional int64 disk_size_gb = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the diskSizeGb field is set.
   */
  @java.lang.Override
  public boolean hasDiskSizeGb() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. The size of the disk in GB.
   * </pre>
   *
   * <code>optional int64 disk_size_gb = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The diskSizeGb.
   */
  @java.lang.Override
  public long getDiskSizeGb() {
    return diskSizeGb_;
  }

  public static final int SAVED_STATE_FIELD_NUMBER = 17;
  private int savedState_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. Output only. The state of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the savedState field is set.
   */
  @java.lang.Override
  public boolean hasSavedState() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Output only. The state of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for savedState.
   */
  @java.lang.Override
  public int getSavedStateValue() {
    return savedState_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Output only. The state of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The savedState.
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState getSavedState() {
    com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState result =
        com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState.forNumber(savedState_);
    return result == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState.UNRECOGNIZED
        : result;
  }

  public static final int DISK_TYPE_FIELD_NUMBER = 18;

  @SuppressWarnings("serial")
  private volatile java.lang.Object diskType_ = "";
  /**
   *
   *
   * <pre>
   * Optional. Output only. The URI of the disk type resource. For example:
   * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
   * </pre>
   *
   * <code>
   * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the diskType field is set.
   */
  @java.lang.Override
  public boolean hasDiskType() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Output only. The URI of the disk type resource. For example:
   * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
   * </pre>
   *
   * <code>
   * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The diskType.
   */
  @java.lang.Override
  public java.lang.String getDiskType() {
    java.lang.Object ref = diskType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      diskType_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. Output only. The URI of the disk type resource. For example:
   * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
   * </pre>
   *
   * <code>
   * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The bytes for diskType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDiskTypeBytes() {
    java.lang.Object ref = diskType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      diskType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 19;
  private int type_ = 0;
  /**
   *
   *
   * <pre>
   * Optional. Specifies the type of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies the type of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override
  public int getTypeValue() {
    return type_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Specifies the type of the disk.
   * </pre>
   *
   * <code>
   * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The type.
   */
  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk.DiskType getType() {
    com.google.cloud.backupdr.v1.AttachedDisk.DiskType result =
        com.google.cloud.backupdr.v1.AttachedDisk.DiskType.forNumber(type_);
    return result == null
        ? com.google.cloud.backupdr.v1.AttachedDisk.DiskType.UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getInitializeParams());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, deviceName_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, kind_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeEnum(6, diskTypeDeprecated_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeEnum(7, mode_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, source_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeInt64(9, index_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(10, boot_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeBool(11, autoDelete_);
    }
    for (int i = 0; i < license_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, license_.getRaw(i));
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeEnum(13, diskInterface_);
    }
    for (int i = 0; i < guestOsFeature_.size(); i++) {
      output.writeMessage(14, guestOsFeature_.get(i));
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeMessage(15, getDiskEncryptionKey());
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeInt64(16, diskSizeGb_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      output.writeEnum(17, savedState_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 18, diskType_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      output.writeEnum(19, type_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getInitializeParams());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, deviceName_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, kind_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, diskTypeDeprecated_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(7, mode_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, source_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(9, index_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(10, boot_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(11, autoDelete_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < license_.size(); i++) {
        dataSize += computeStringSizeNoTag(license_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLicenseList().size();
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(13, diskInterface_);
    }
    for (int i = 0; i < guestOsFeature_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, guestOsFeature_.get(i));
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(15, getDiskEncryptionKey());
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(16, diskSizeGb_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(17, savedState_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, diskType_);
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(19, type_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.backupdr.v1.AttachedDisk)) {
      return super.equals(obj);
    }
    com.google.cloud.backupdr.v1.AttachedDisk other =
        (com.google.cloud.backupdr.v1.AttachedDisk) obj;

    if (hasInitializeParams() != other.hasInitializeParams()) return false;
    if (hasInitializeParams()) {
      if (!getInitializeParams().equals(other.getInitializeParams())) return false;
    }
    if (hasDeviceName() != other.hasDeviceName()) return false;
    if (hasDeviceName()) {
      if (!getDeviceName().equals(other.getDeviceName())) return false;
    }
    if (hasKind() != other.hasKind()) return false;
    if (hasKind()) {
      if (!getKind().equals(other.getKind())) return false;
    }
    if (hasDiskTypeDeprecated() != other.hasDiskTypeDeprecated()) return false;
    if (hasDiskTypeDeprecated()) {
      if (diskTypeDeprecated_ != other.diskTypeDeprecated_) return false;
    }
    if (hasMode() != other.hasMode()) return false;
    if (hasMode()) {
      if (mode_ != other.mode_) return false;
    }
    if (hasSource() != other.hasSource()) return false;
    if (hasSource()) {
      if (!getSource().equals(other.getSource())) return false;
    }
    if (hasIndex() != other.hasIndex()) return false;
    if (hasIndex()) {
      if (getIndex() != other.getIndex()) return false;
    }
    if (hasBoot() != other.hasBoot()) return false;
    if (hasBoot()) {
      if (getBoot() != other.getBoot()) return false;
    }
    if (hasAutoDelete() != other.hasAutoDelete()) return false;
    if (hasAutoDelete()) {
      if (getAutoDelete() != other.getAutoDelete()) return false;
    }
    if (!getLicenseList().equals(other.getLicenseList())) return false;
    if (hasDiskInterface() != other.hasDiskInterface()) return false;
    if (hasDiskInterface()) {
      if (diskInterface_ != other.diskInterface_) return false;
    }
    if (!getGuestOsFeatureList().equals(other.getGuestOsFeatureList())) return false;
    if (hasDiskEncryptionKey() != other.hasDiskEncryptionKey()) return false;
    if (hasDiskEncryptionKey()) {
      if (!getDiskEncryptionKey().equals(other.getDiskEncryptionKey())) return false;
    }
    if (hasDiskSizeGb() != other.hasDiskSizeGb()) return false;
    if (hasDiskSizeGb()) {
      if (getDiskSizeGb() != other.getDiskSizeGb()) return false;
    }
    if (hasSavedState() != other.hasSavedState()) return false;
    if (hasSavedState()) {
      if (savedState_ != other.savedState_) return false;
    }
    if (hasDiskType() != other.hasDiskType()) return false;
    if (hasDiskType()) {
      if (!getDiskType().equals(other.getDiskType())) return false;
    }
    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInitializeParams()) {
      hash = (37 * hash) + INITIALIZE_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getInitializeParams().hashCode();
    }
    if (hasDeviceName()) {
      hash = (37 * hash) + DEVICE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceName().hashCode();
    }
    if (hasKind()) {
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + getKind().hashCode();
    }
    if (hasDiskTypeDeprecated()) {
      hash = (37 * hash) + DISK_TYPE_DEPRECATED_FIELD_NUMBER;
      hash = (53 * hash) + diskTypeDeprecated_;
    }
    if (hasMode()) {
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
    }
    if (hasSource()) {
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
    }
    if (hasIndex()) {
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getIndex());
    }
    if (hasBoot()) {
      hash = (37 * hash) + BOOT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getBoot());
    }
    if (hasAutoDelete()) {
      hash = (37 * hash) + AUTO_DELETE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getAutoDelete());
    }
    if (getLicenseCount() > 0) {
      hash = (37 * hash) + LICENSE_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseList().hashCode();
    }
    if (hasDiskInterface()) {
      hash = (37 * hash) + DISK_INTERFACE_FIELD_NUMBER;
      hash = (53 * hash) + diskInterface_;
    }
    if (getGuestOsFeatureCount() > 0) {
      hash = (37 * hash) + GUEST_OS_FEATURE_FIELD_NUMBER;
      hash = (53 * hash) + getGuestOsFeatureList().hashCode();
    }
    if (hasDiskEncryptionKey()) {
      hash = (37 * hash) + DISK_ENCRYPTION_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getDiskEncryptionKey().hashCode();
    }
    if (hasDiskSizeGb()) {
      hash = (37 * hash) + DISK_SIZE_GB_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDiskSizeGb());
    }
    if (hasSavedState()) {
      hash = (37 * hash) + SAVED_STATE_FIELD_NUMBER;
      hash = (53 * hash) + savedState_;
    }
    if (hasDiskType()) {
      hash = (37 * hash) + DISK_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDiskType().hashCode();
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.backupdr.v1.AttachedDisk prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * An instance-attached disk resource.
   * </pre>
   *
   * Protobuf type {@code google.cloud.backupdr.v1.AttachedDisk}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.backupdr.v1.AttachedDisk)
      com.google.cloud.backupdr.v1.AttachedDiskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.backupdr.v1.BackupvaultGceProto
          .internal_static_google_cloud_backupdr_v1_AttachedDisk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.backupdr.v1.BackupvaultGceProto
          .internal_static_google_cloud_backupdr_v1_AttachedDisk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.backupdr.v1.AttachedDisk.class,
              com.google.cloud.backupdr.v1.AttachedDisk.Builder.class);
    }

    // Construct using com.google.cloud.backupdr.v1.AttachedDisk.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getInitializeParamsFieldBuilder();
        getGuestOsFeatureFieldBuilder();
        getDiskEncryptionKeyFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      initializeParams_ = null;
      if (initializeParamsBuilder_ != null) {
        initializeParamsBuilder_.dispose();
        initializeParamsBuilder_ = null;
      }
      deviceName_ = "";
      kind_ = "";
      diskTypeDeprecated_ = 0;
      mode_ = 0;
      source_ = "";
      index_ = 0L;
      boot_ = false;
      autoDelete_ = false;
      license_ = com.google.protobuf.LazyStringArrayList.emptyList();
      diskInterface_ = 0;
      if (guestOsFeatureBuilder_ == null) {
        guestOsFeature_ = java.util.Collections.emptyList();
      } else {
        guestOsFeature_ = null;
        guestOsFeatureBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      diskEncryptionKey_ = null;
      if (diskEncryptionKeyBuilder_ != null) {
        diskEncryptionKeyBuilder_.dispose();
        diskEncryptionKeyBuilder_ = null;
      }
      diskSizeGb_ = 0L;
      savedState_ = 0;
      diskType_ = "";
      type_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.backupdr.v1.BackupvaultGceProto
          .internal_static_google_cloud_backupdr_v1_AttachedDisk_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk getDefaultInstanceForType() {
      return com.google.cloud.backupdr.v1.AttachedDisk.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk build() {
      com.google.cloud.backupdr.v1.AttachedDisk result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk buildPartial() {
      com.google.cloud.backupdr.v1.AttachedDisk result =
          new com.google.cloud.backupdr.v1.AttachedDisk(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.cloud.backupdr.v1.AttachedDisk result) {
      if (guestOsFeatureBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          guestOsFeature_ = java.util.Collections.unmodifiableList(guestOsFeature_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.guestOsFeature_ = guestOsFeature_;
      } else {
        result.guestOsFeature_ = guestOsFeatureBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.backupdr.v1.AttachedDisk result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.initializeParams_ =
            initializeParamsBuilder_ == null ? initializeParams_ : initializeParamsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.deviceName_ = deviceName_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.kind_ = kind_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.diskTypeDeprecated_ = diskTypeDeprecated_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.mode_ = mode_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.source_ = source_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.index_ = index_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.boot_ = boot_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.autoDelete_ = autoDelete_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        license_.makeImmutable();
        result.license_ = license_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.diskInterface_ = diskInterface_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.diskEncryptionKey_ =
            diskEncryptionKeyBuilder_ == null
                ? diskEncryptionKey_
                : diskEncryptionKeyBuilder_.build();
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.diskSizeGb_ = diskSizeGb_;
        to_bitField0_ |= 0x00000800;
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.savedState_ = savedState_;
        to_bitField0_ |= 0x00001000;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.diskType_ = diskType_;
        to_bitField0_ |= 0x00002000;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.type_ = type_;
        to_bitField0_ |= 0x00004000;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.backupdr.v1.AttachedDisk) {
        return mergeFrom((com.google.cloud.backupdr.v1.AttachedDisk) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.backupdr.v1.AttachedDisk other) {
      if (other == com.google.cloud.backupdr.v1.AttachedDisk.getDefaultInstance()) return this;
      if (other.hasInitializeParams()) {
        mergeInitializeParams(other.getInitializeParams());
      }
      if (other.hasDeviceName()) {
        deviceName_ = other.deviceName_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasKind()) {
        kind_ = other.kind_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasDiskTypeDeprecated()) {
        setDiskTypeDeprecated(other.getDiskTypeDeprecated());
      }
      if (other.hasMode()) {
        setMode(other.getMode());
      }
      if (other.hasSource()) {
        source_ = other.source_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasIndex()) {
        setIndex(other.getIndex());
      }
      if (other.hasBoot()) {
        setBoot(other.getBoot());
      }
      if (other.hasAutoDelete()) {
        setAutoDelete(other.getAutoDelete());
      }
      if (!other.license_.isEmpty()) {
        if (license_.isEmpty()) {
          license_ = other.license_;
          bitField0_ |= 0x00000200;
        } else {
          ensureLicenseIsMutable();
          license_.addAll(other.license_);
        }
        onChanged();
      }
      if (other.hasDiskInterface()) {
        setDiskInterface(other.getDiskInterface());
      }
      if (guestOsFeatureBuilder_ == null) {
        if (!other.guestOsFeature_.isEmpty()) {
          if (guestOsFeature_.isEmpty()) {
            guestOsFeature_ = other.guestOsFeature_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureGuestOsFeatureIsMutable();
            guestOsFeature_.addAll(other.guestOsFeature_);
          }
          onChanged();
        }
      } else {
        if (!other.guestOsFeature_.isEmpty()) {
          if (guestOsFeatureBuilder_.isEmpty()) {
            guestOsFeatureBuilder_.dispose();
            guestOsFeatureBuilder_ = null;
            guestOsFeature_ = other.guestOsFeature_;
            bitField0_ = (bitField0_ & ~0x00000800);
            guestOsFeatureBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getGuestOsFeatureFieldBuilder()
                    : null;
          } else {
            guestOsFeatureBuilder_.addAllMessages(other.guestOsFeature_);
          }
        }
      }
      if (other.hasDiskEncryptionKey()) {
        mergeDiskEncryptionKey(other.getDiskEncryptionKey());
      }
      if (other.hasDiskSizeGb()) {
        setDiskSizeGb(other.getDiskSizeGb());
      }
      if (other.hasSavedState()) {
        setSavedState(other.getSavedState());
      }
      if (other.hasDiskType()) {
        diskType_ = other.diskType_;
        bitField0_ |= 0x00008000;
        onChanged();
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(
                    getInitializeParamsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 34:
              {
                deviceName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 34
            case 42:
              {
                kind_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 42
            case 48:
              {
                diskTypeDeprecated_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 48
            case 56:
              {
                mode_ = input.readEnum();
                bitField0_ |= 0x00000010;
                break;
              } // case 56
            case 66:
              {
                source_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000020;
                break;
              } // case 66
            case 72:
              {
                index_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 72
            case 80:
              {
                boot_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 80
            case 88:
              {
                autoDelete_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 88
            case 98:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureLicenseIsMutable();
                license_.add(s);
                break;
              } // case 98
            case 104:
              {
                diskInterface_ = input.readEnum();
                bitField0_ |= 0x00000400;
                break;
              } // case 104
            case 114:
              {
                com.google.cloud.backupdr.v1.GuestOsFeature m =
                    input.readMessage(
                        com.google.cloud.backupdr.v1.GuestOsFeature.parser(), extensionRegistry);
                if (guestOsFeatureBuilder_ == null) {
                  ensureGuestOsFeatureIsMutable();
                  guestOsFeature_.add(m);
                } else {
                  guestOsFeatureBuilder_.addMessage(m);
                }
                break;
              } // case 114
            case 122:
              {
                input.readMessage(
                    getDiskEncryptionKeyFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 122
            case 128:
              {
                diskSizeGb_ = input.readInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 128
            case 136:
              {
                savedState_ = input.readEnum();
                bitField0_ |= 0x00004000;
                break;
              } // case 136
            case 146:
              {
                diskType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00008000;
                break;
              } // case 146
            case 152:
              {
                type_ = input.readEnum();
                bitField0_ |= 0x00010000;
                break;
              } // case 152
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams initializeParams_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams,
            com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder,
            com.google.cloud.backupdr.v1.AttachedDisk.InitializeParamsOrBuilder>
        initializeParamsBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the initializeParams field is set.
     */
    public boolean hasInitializeParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The initializeParams.
     */
    public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams getInitializeParams() {
      if (initializeParamsBuilder_ == null) {
        return initializeParams_ == null
            ? com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.getDefaultInstance()
            : initializeParams_;
      } else {
        return initializeParamsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setInitializeParams(
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams value) {
      if (initializeParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        initializeParams_ = value;
      } else {
        initializeParamsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setInitializeParams(
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder builderForValue) {
      if (initializeParamsBuilder_ == null) {
        initializeParams_ = builderForValue.build();
      } else {
        initializeParamsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeInitializeParams(
        com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams value) {
      if (initializeParamsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && initializeParams_ != null
            && initializeParams_
                != com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams
                    .getDefaultInstance()) {
          getInitializeParamsBuilder().mergeFrom(value);
        } else {
          initializeParams_ = value;
        }
      } else {
        initializeParamsBuilder_.mergeFrom(value);
      }
      if (initializeParams_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearInitializeParams() {
      bitField0_ = (bitField0_ & ~0x00000001);
      initializeParams_ = null;
      if (initializeParamsBuilder_ != null) {
        initializeParamsBuilder_.dispose();
        initializeParamsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder
        getInitializeParamsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getInitializeParamsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.AttachedDisk.InitializeParamsOrBuilder
        getInitializeParamsOrBuilder() {
      if (initializeParamsBuilder_ != null) {
        return initializeParamsBuilder_.getMessageOrBuilder();
      } else {
        return initializeParams_ == null
            ? com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.getDefaultInstance()
            : initializeParams_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the parameters to initialize this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.InitializeParams initialize_params = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams,
            com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder,
            com.google.cloud.backupdr.v1.AttachedDisk.InitializeParamsOrBuilder>
        getInitializeParamsFieldBuilder() {
      if (initializeParamsBuilder_ == null) {
        initializeParamsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams,
                com.google.cloud.backupdr.v1.AttachedDisk.InitializeParams.Builder,
                com.google.cloud.backupdr.v1.AttachedDisk.InitializeParamsOrBuilder>(
                getInitializeParams(), getParentForChildren(), isClean());
        initializeParams_ = null;
      }
      return initializeParamsBuilder_;
    }

    private java.lang.Object deviceName_ = "";
    /**
     *
     *
     * <pre>
     * Optional. This is used as an identifier for the disks. This is the unique
     * name has to provided to modify disk parameters like disk_name and
     * replica_zones (in case of RePDs)
     * </pre>
     *
     * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the deviceName field is set.
     */
    public boolean hasDeviceName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. This is used as an identifier for the disks. This is the unique
     * name has to provided to modify disk parameters like disk_name and
     * replica_zones (in case of RePDs)
     * </pre>
     *
     * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The deviceName.
     */
    public java.lang.String getDeviceName() {
      java.lang.Object ref = deviceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. This is used as an identifier for the disks. This is the unique
     * name has to provided to modify disk parameters like disk_name and
     * replica_zones (in case of RePDs)
     * </pre>
     *
     * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for deviceName.
     */
    public com.google.protobuf.ByteString getDeviceNameBytes() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. This is used as an identifier for the disks. This is the unique
     * name has to provided to modify disk parameters like disk_name and
     * replica_zones (in case of RePDs)
     * </pre>
     *
     * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The deviceName to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      deviceName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. This is used as an identifier for the disks. This is the unique
     * name has to provided to modify disk parameters like disk_name and
     * replica_zones (in case of RePDs)
     * </pre>
     *
     * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDeviceName() {
      deviceName_ = getDefaultInstance().getDeviceName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. This is used as an identifier for the disks. This is the unique
     * name has to provided to modify disk parameters like disk_name and
     * replica_zones (in case of RePDs)
     * </pre>
     *
     * <code>optional string device_name = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for deviceName to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      deviceName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object kind_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Type of the resource.
     * </pre>
     *
     * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the kind field is set.
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Type of the resource.
     * </pre>
     *
     * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The kind.
     */
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kind_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Type of the resource.
     * </pre>
     *
     * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for kind.
     */
    public com.google.protobuf.ByteString getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Type of the resource.
     * </pre>
     *
     * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      kind_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Type of the resource.
     * </pre>
     *
     * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      kind_ = getDefaultInstance().getKind();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Type of the resource.
     * </pre>
     *
     * <code>optional string kind = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      kind_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private int diskTypeDeprecated_ = 0;
    /**
     *
     *
     * <pre>
     * Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
     * </code>
     *
     * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
     *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
     * @return Whether the diskTypeDeprecated field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public boolean hasDiskTypeDeprecated() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
     * </code>
     *
     * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
     *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
     * @return The enum numeric value on the wire for diskTypeDeprecated.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public int getDiskTypeDeprecatedValue() {
      return diskTypeDeprecated_;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
     * </code>
     *
     * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
     *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
     * @param value The enum numeric value on the wire for diskTypeDeprecated to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setDiskTypeDeprecatedValue(int value) {
      diskTypeDeprecated_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
     * </code>
     *
     * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
     *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
     * @return The diskTypeDeprecated.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public com.google.cloud.backupdr.v1.AttachedDisk.DiskType getDiskTypeDeprecated() {
      com.google.cloud.backupdr.v1.AttachedDisk.DiskType result =
          com.google.cloud.backupdr.v1.AttachedDisk.DiskType.forNumber(diskTypeDeprecated_);
      return result == null
          ? com.google.cloud.backupdr.v1.AttachedDisk.DiskType.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
     * </code>
     *
     * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
     *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
     * @param value The diskTypeDeprecated to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder setDiskTypeDeprecated(com.google.cloud.backupdr.v1.AttachedDisk.DiskType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      diskTypeDeprecated_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType disk_type_deprecated = 6 [deprecated = true];
     * </code>
     *
     * @deprecated google.cloud.backupdr.v1.AttachedDisk.disk_type_deprecated is deprecated. See
     *     google/cloud/backupdr/v1/backupvault_gce.proto;l=824
     * @return This builder for chaining.
     */
    @java.lang.Deprecated
    public Builder clearDiskTypeDeprecated() {
      bitField0_ = (bitField0_ & ~0x00000008);
      diskTypeDeprecated_ = 0;
      onChanged();
      return this;
    }

    private int mode_ = 0;
    /**
     *
     *
     * <pre>
     * Optional. The mode in which to attach this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the mode field is set.
     */
    @java.lang.Override
    public boolean hasMode() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. The mode in which to attach this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override
    public int getModeValue() {
      return mode_;
    }
    /**
     *
     *
     * <pre>
     * Optional. The mode in which to attach this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(int value) {
      mode_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The mode in which to attach this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The mode.
     */
    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk.DiskMode getMode() {
      com.google.cloud.backupdr.v1.AttachedDisk.DiskMode result =
          com.google.cloud.backupdr.v1.AttachedDisk.DiskMode.forNumber(mode_);
      return result == null
          ? com.google.cloud.backupdr.v1.AttachedDisk.DiskMode.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Optional. The mode in which to attach this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(com.google.cloud.backupdr.v1.AttachedDisk.DiskMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The mode in which to attach this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskMode mode = 7 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      bitField0_ = (bitField0_ & ~0x00000010);
      mode_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object source_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Specifies a valid partial or full URL to an existing Persistent
     * Disk resource.
     * </pre>
     *
     * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the source field is set.
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies a valid partial or full URL to an existing Persistent
     * Disk resource.
     * </pre>
     *
     * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The source.
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies a valid partial or full URL to an existing Persistent
     * Disk resource.
     * </pre>
     *
     * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for source.
     */
    public com.google.protobuf.ByteString getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies a valid partial or full URL to an existing Persistent
     * Disk resource.
     * </pre>
     *
     * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      source_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies a valid partial or full URL to an existing Persistent
     * Disk resource.
     * </pre>
     *
     * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSource() {
      source_ = getDefaultInstance().getSource();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies a valid partial or full URL to an existing Persistent
     * Disk resource.
     * </pre>
     *
     * <code>optional string source = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      source_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private long index_;
    /**
     *
     *
     * <pre>
     * Optional. A zero-based index to this disk, where 0 is reserved for the
     * boot disk.
     * </pre>
     *
     * <code>optional int64 index = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the index field is set.
     */
    @java.lang.Override
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. A zero-based index to this disk, where 0 is reserved for the
     * boot disk.
     * </pre>
     *
     * <code>optional int64 index = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The index.
     */
    @java.lang.Override
    public long getIndex() {
      return index_;
    }
    /**
     *
     *
     * <pre>
     * Optional. A zero-based index to this disk, where 0 is reserved for the
     * boot disk.
     * </pre>
     *
     * <code>optional int64 index = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The index to set.
     * @return This builder for chaining.
     */
    public Builder setIndex(long value) {

      index_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A zero-based index to this disk, where 0 is reserved for the
     * boot disk.
     * </pre>
     *
     * <code>optional int64 index = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIndex() {
      bitField0_ = (bitField0_ & ~0x00000040);
      index_ = 0L;
      onChanged();
      return this;
    }

    private boolean boot_;
    /**
     *
     *
     * <pre>
     * Optional. Indicates that this is a boot disk. The virtual machine will use
     * the first partition of the disk for its root filesystem.
     * </pre>
     *
     * <code>optional bool boot = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the boot field is set.
     */
    @java.lang.Override
    public boolean hasBoot() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Indicates that this is a boot disk. The virtual machine will use
     * the first partition of the disk for its root filesystem.
     * </pre>
     *
     * <code>optional bool boot = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The boot.
     */
    @java.lang.Override
    public boolean getBoot() {
      return boot_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Indicates that this is a boot disk. The virtual machine will use
     * the first partition of the disk for its root filesystem.
     * </pre>
     *
     * <code>optional bool boot = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The boot to set.
     * @return This builder for chaining.
     */
    public Builder setBoot(boolean value) {

      boot_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Indicates that this is a boot disk. The virtual machine will use
     * the first partition of the disk for its root filesystem.
     * </pre>
     *
     * <code>optional bool boot = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBoot() {
      bitField0_ = (bitField0_ & ~0x00000080);
      boot_ = false;
      onChanged();
      return this;
    }

    private boolean autoDelete_;
    /**
     *
     *
     * <pre>
     * Optional. Specifies whether the disk will be auto-deleted when the instance
     * is deleted (but not when the disk is detached from the instance).
     * </pre>
     *
     * <code>optional bool auto_delete = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the autoDelete field is set.
     */
    @java.lang.Override
    public boolean hasAutoDelete() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies whether the disk will be auto-deleted when the instance
     * is deleted (but not when the disk is detached from the instance).
     * </pre>
     *
     * <code>optional bool auto_delete = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The autoDelete.
     */
    @java.lang.Override
    public boolean getAutoDelete() {
      return autoDelete_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies whether the disk will be auto-deleted when the instance
     * is deleted (but not when the disk is detached from the instance).
     * </pre>
     *
     * <code>optional bool auto_delete = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The autoDelete to set.
     * @return This builder for chaining.
     */
    public Builder setAutoDelete(boolean value) {

      autoDelete_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies whether the disk will be auto-deleted when the instance
     * is deleted (but not when the disk is detached from the instance).
     * </pre>
     *
     * <code>optional bool auto_delete = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAutoDelete() {
      bitField0_ = (bitField0_ & ~0x00000100);
      autoDelete_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList license_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureLicenseIsMutable() {
      if (!license_.isModifiable()) {
        license_ = new com.google.protobuf.LazyStringArrayList(license_);
      }
      bitField0_ |= 0x00000200;
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return A list containing the license.
     */
    public com.google.protobuf.ProtocolStringList getLicenseList() {
      license_.makeImmutable();
      return license_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The count of license.
     */
    public int getLicenseCount() {
      return license_.size();
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the element to return.
     * @return The license at the given index.
     */
    public java.lang.String getLicense(int index) {
      return license_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the license at the given index.
     */
    public com.google.protobuf.ByteString getLicenseBytes(int index) {
      return license_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param index The index to set the value at.
     * @param value The license to set.
     * @return This builder for chaining.
     */
    public Builder setLicense(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLicenseIsMutable();
      license_.set(index, value);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The license to add.
     * @return This builder for chaining.
     */
    public Builder addLicense(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureLicenseIsMutable();
      license_.add(value);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param values The license to add.
     * @return This builder for chaining.
     */
    public Builder addAllLicense(java.lang.Iterable<java.lang.String> values) {
      ensureLicenseIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, license_);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLicense() {
      license_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000200);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Any valid publicly visible licenses.
     * </pre>
     *
     * <code>repeated string license = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes of the license to add.
     * @return This builder for chaining.
     */
    public Builder addLicenseBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureLicenseIsMutable();
      license_.add(value);
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    private int diskInterface_ = 0;
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk interface to use for attaching this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the diskInterface field is set.
     */
    @java.lang.Override
    public boolean hasDiskInterface() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk interface to use for attaching this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for diskInterface.
     */
    @java.lang.Override
    public int getDiskInterfaceValue() {
      return diskInterface_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk interface to use for attaching this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for diskInterface to set.
     * @return This builder for chaining.
     */
    public Builder setDiskInterfaceValue(int value) {
      diskInterface_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk interface to use for attaching this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The diskInterface.
     */
    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface getDiskInterface() {
      com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface result =
          com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface.forNumber(diskInterface_);
      return result == null
          ? com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk interface to use for attaching this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The diskInterface to set.
     * @return This builder for chaining.
     */
    public Builder setDiskInterface(com.google.cloud.backupdr.v1.AttachedDisk.DiskInterface value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000400;
      diskInterface_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the disk interface to use for attaching this disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskInterface disk_interface = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDiskInterface() {
      bitField0_ = (bitField0_ & ~0x00000400);
      diskInterface_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.backupdr.v1.GuestOsFeature> guestOsFeature_ =
        java.util.Collections.emptyList();

    private void ensureGuestOsFeatureIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        guestOsFeature_ =
            new java.util.ArrayList<com.google.cloud.backupdr.v1.GuestOsFeature>(guestOsFeature_);
        bitField0_ |= 0x00000800;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.backupdr.v1.GuestOsFeature,
            com.google.cloud.backupdr.v1.GuestOsFeature.Builder,
            com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder>
        guestOsFeatureBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.backupdr.v1.GuestOsFeature> getGuestOsFeatureList() {
      if (guestOsFeatureBuilder_ == null) {
        return java.util.Collections.unmodifiableList(guestOsFeature_);
      } else {
        return guestOsFeatureBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getGuestOsFeatureCount() {
      if (guestOsFeatureBuilder_ == null) {
        return guestOsFeature_.size();
      } else {
        return guestOsFeatureBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.GuestOsFeature getGuestOsFeature(int index) {
      if (guestOsFeatureBuilder_ == null) {
        return guestOsFeature_.get(index);
      } else {
        return guestOsFeatureBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setGuestOsFeature(int index, com.google.cloud.backupdr.v1.GuestOsFeature value) {
      if (guestOsFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.set(index, value);
        onChanged();
      } else {
        guestOsFeatureBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setGuestOsFeature(
        int index, com.google.cloud.backupdr.v1.GuestOsFeature.Builder builderForValue) {
      if (guestOsFeatureBuilder_ == null) {
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.set(index, builderForValue.build());
        onChanged();
      } else {
        guestOsFeatureBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addGuestOsFeature(com.google.cloud.backupdr.v1.GuestOsFeature value) {
      if (guestOsFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.add(value);
        onChanged();
      } else {
        guestOsFeatureBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addGuestOsFeature(int index, com.google.cloud.backupdr.v1.GuestOsFeature value) {
      if (guestOsFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.add(index, value);
        onChanged();
      } else {
        guestOsFeatureBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addGuestOsFeature(
        com.google.cloud.backupdr.v1.GuestOsFeature.Builder builderForValue) {
      if (guestOsFeatureBuilder_ == null) {
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.add(builderForValue.build());
        onChanged();
      } else {
        guestOsFeatureBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addGuestOsFeature(
        int index, com.google.cloud.backupdr.v1.GuestOsFeature.Builder builderForValue) {
      if (guestOsFeatureBuilder_ == null) {
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.add(index, builderForValue.build());
        onChanged();
      } else {
        guestOsFeatureBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllGuestOsFeature(
        java.lang.Iterable<? extends com.google.cloud.backupdr.v1.GuestOsFeature> values) {
      if (guestOsFeatureBuilder_ == null) {
        ensureGuestOsFeatureIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, guestOsFeature_);
        onChanged();
      } else {
        guestOsFeatureBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearGuestOsFeature() {
      if (guestOsFeatureBuilder_ == null) {
        guestOsFeature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        guestOsFeatureBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeGuestOsFeature(int index) {
      if (guestOsFeatureBuilder_ == null) {
        ensureGuestOsFeatureIsMutable();
        guestOsFeature_.remove(index);
        onChanged();
      } else {
        guestOsFeatureBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.GuestOsFeature.Builder getGuestOsFeatureBuilder(int index) {
      return getGuestOsFeatureFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder getGuestOsFeatureOrBuilder(
        int index) {
      if (guestOsFeatureBuilder_ == null) {
        return guestOsFeature_.get(index);
      } else {
        return guestOsFeatureBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder>
        getGuestOsFeatureOrBuilderList() {
      if (guestOsFeatureBuilder_ != null) {
        return guestOsFeatureBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(guestOsFeature_);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.GuestOsFeature.Builder addGuestOsFeatureBuilder() {
      return getGuestOsFeatureFieldBuilder()
          .addBuilder(com.google.cloud.backupdr.v1.GuestOsFeature.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.GuestOsFeature.Builder addGuestOsFeatureBuilder(int index) {
      return getGuestOsFeatureFieldBuilder()
          .addBuilder(index, com.google.cloud.backupdr.v1.GuestOsFeature.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. A list of features to enable on the guest operating system.
     * Applicable only for bootable images.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.backupdr.v1.GuestOsFeature.Builder>
        getGuestOsFeatureBuilderList() {
      return getGuestOsFeatureFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.backupdr.v1.GuestOsFeature,
            com.google.cloud.backupdr.v1.GuestOsFeature.Builder,
            com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder>
        getGuestOsFeatureFieldBuilder() {
      if (guestOsFeatureBuilder_ == null) {
        guestOsFeatureBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.backupdr.v1.GuestOsFeature,
                com.google.cloud.backupdr.v1.GuestOsFeature.Builder,
                com.google.cloud.backupdr.v1.GuestOsFeatureOrBuilder>(
                guestOsFeature_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        guestOsFeature_ = null;
      }
      return guestOsFeatureBuilder_;
    }

    private com.google.cloud.backupdr.v1.CustomerEncryptionKey diskEncryptionKey_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.backupdr.v1.CustomerEncryptionKey,
            com.google.cloud.backupdr.v1.CustomerEncryptionKey.Builder,
            com.google.cloud.backupdr.v1.CustomerEncryptionKeyOrBuilder>
        diskEncryptionKeyBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the diskEncryptionKey field is set.
     */
    public boolean hasDiskEncryptionKey() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The diskEncryptionKey.
     */
    public com.google.cloud.backupdr.v1.CustomerEncryptionKey getDiskEncryptionKey() {
      if (diskEncryptionKeyBuilder_ == null) {
        return diskEncryptionKey_ == null
            ? com.google.cloud.backupdr.v1.CustomerEncryptionKey.getDefaultInstance()
            : diskEncryptionKey_;
      } else {
        return diskEncryptionKeyBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDiskEncryptionKey(com.google.cloud.backupdr.v1.CustomerEncryptionKey value) {
      if (diskEncryptionKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        diskEncryptionKey_ = value;
      } else {
        diskEncryptionKeyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDiskEncryptionKey(
        com.google.cloud.backupdr.v1.CustomerEncryptionKey.Builder builderForValue) {
      if (diskEncryptionKeyBuilder_ == null) {
        diskEncryptionKey_ = builderForValue.build();
      } else {
        diskEncryptionKeyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeDiskEncryptionKey(
        com.google.cloud.backupdr.v1.CustomerEncryptionKey value) {
      if (diskEncryptionKeyBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)
            && diskEncryptionKey_ != null
            && diskEncryptionKey_
                != com.google.cloud.backupdr.v1.CustomerEncryptionKey.getDefaultInstance()) {
          getDiskEncryptionKeyBuilder().mergeFrom(value);
        } else {
          diskEncryptionKey_ = value;
        }
      } else {
        diskEncryptionKeyBuilder_.mergeFrom(value);
      }
      if (diskEncryptionKey_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearDiskEncryptionKey() {
      bitField0_ = (bitField0_ & ~0x00001000);
      diskEncryptionKey_ = null;
      if (diskEncryptionKeyBuilder_ != null) {
        diskEncryptionKeyBuilder_.dispose();
        diskEncryptionKeyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.CustomerEncryptionKey.Builder
        getDiskEncryptionKeyBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getDiskEncryptionKeyFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.backupdr.v1.CustomerEncryptionKeyOrBuilder
        getDiskEncryptionKeyOrBuilder() {
      if (diskEncryptionKeyBuilder_ != null) {
        return diskEncryptionKeyBuilder_.getMessageOrBuilder();
      } else {
        return diskEncryptionKey_ == null
            ? com.google.cloud.backupdr.v1.CustomerEncryptionKey.getDefaultInstance()
            : diskEncryptionKey_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Encrypts or decrypts a disk using a customer-supplied
     * encryption key.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 15 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.backupdr.v1.CustomerEncryptionKey,
            com.google.cloud.backupdr.v1.CustomerEncryptionKey.Builder,
            com.google.cloud.backupdr.v1.CustomerEncryptionKeyOrBuilder>
        getDiskEncryptionKeyFieldBuilder() {
      if (diskEncryptionKeyBuilder_ == null) {
        diskEncryptionKeyBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.backupdr.v1.CustomerEncryptionKey,
                com.google.cloud.backupdr.v1.CustomerEncryptionKey.Builder,
                com.google.cloud.backupdr.v1.CustomerEncryptionKeyOrBuilder>(
                getDiskEncryptionKey(), getParentForChildren(), isClean());
        diskEncryptionKey_ = null;
      }
      return diskEncryptionKeyBuilder_;
    }

    private long diskSizeGb_;
    /**
     *
     *
     * <pre>
     * Optional. The size of the disk in GB.
     * </pre>
     *
     * <code>optional int64 disk_size_gb = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the diskSizeGb field is set.
     */
    @java.lang.Override
    public boolean hasDiskSizeGb() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. The size of the disk in GB.
     * </pre>
     *
     * <code>optional int64 disk_size_gb = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The diskSizeGb.
     */
    @java.lang.Override
    public long getDiskSizeGb() {
      return diskSizeGb_;
    }
    /**
     *
     *
     * <pre>
     * Optional. The size of the disk in GB.
     * </pre>
     *
     * <code>optional int64 disk_size_gb = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The diskSizeGb to set.
     * @return This builder for chaining.
     */
    public Builder setDiskSizeGb(long value) {

      diskSizeGb_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The size of the disk in GB.
     * </pre>
     *
     * <code>optional int64 disk_size_gb = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDiskSizeGb() {
      bitField0_ = (bitField0_ & ~0x00002000);
      diskSizeGb_ = 0L;
      onChanged();
      return this;
    }

    private int savedState_ = 0;
    /**
     *
     *
     * <pre>
     * Optional. Output only. The state of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the savedState field is set.
     */
    @java.lang.Override
    public boolean hasSavedState() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The state of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for savedState.
     */
    @java.lang.Override
    public int getSavedStateValue() {
      return savedState_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The state of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The enum numeric value on the wire for savedState to set.
     * @return This builder for chaining.
     */
    public Builder setSavedStateValue(int value) {
      savedState_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The state of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The savedState.
     */
    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState getSavedState() {
      com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState result =
          com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState.forNumber(savedState_);
      return result == null
          ? com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The state of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The savedState to set.
     * @return This builder for chaining.
     */
    public Builder setSavedState(com.google.cloud.backupdr.v1.AttachedDisk.DiskSavedState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00004000;
      savedState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The state of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskSavedState saved_state = 17 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSavedState() {
      bitField0_ = (bitField0_ & ~0x00004000);
      savedState_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object diskType_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Output only. The URI of the disk type resource. For example:
     * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
     * </pre>
     *
     * <code>
     * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the diskType field is set.
     */
    public boolean hasDiskType() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The URI of the disk type resource. For example:
     * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
     * </pre>
     *
     * <code>
     * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The diskType.
     */
    public java.lang.String getDiskType() {
      java.lang.Object ref = diskType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diskType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The URI of the disk type resource. For example:
     * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
     * </pre>
     *
     * <code>
     * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The bytes for diskType.
     */
    public com.google.protobuf.ByteString getDiskTypeBytes() {
      java.lang.Object ref = diskType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        diskType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The URI of the disk type resource. For example:
     * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
     * </pre>
     *
     * <code>
     * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The diskType to set.
     * @return This builder for chaining.
     */
    public Builder setDiskType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      diskType_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The URI of the disk type resource. For example:
     * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
     * </pre>
     *
     * <code>
     * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDiskType() {
      diskType_ = getDefaultInstance().getDiskType();
      bitField0_ = (bitField0_ & ~0x00008000);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Output only. The URI of the disk type resource. For example:
     * projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
     * </pre>
     *
     * <code>
     * optional string disk_type = 18 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @param value The bytes for diskType to set.
     * @return This builder for chaining.
     */
    public Builder setDiskTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      diskType_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     *
     *
     * <pre>
     * Optional. Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The type.
     */
    @java.lang.Override
    public com.google.cloud.backupdr.v1.AttachedDisk.DiskType getType() {
      com.google.cloud.backupdr.v1.AttachedDisk.DiskType result =
          com.google.cloud.backupdr.v1.AttachedDisk.DiskType.forNumber(type_);
      return result == null
          ? com.google.cloud.backupdr.v1.AttachedDisk.DiskType.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.cloud.backupdr.v1.AttachedDisk.DiskType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00010000;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Specifies the type of the disk.
     * </pre>
     *
     * <code>
     * optional .google.cloud.backupdr.v1.AttachedDisk.DiskType type = 19 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00010000);
      type_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.backupdr.v1.AttachedDisk)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.backupdr.v1.AttachedDisk)
  private static final com.google.cloud.backupdr.v1.AttachedDisk DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.backupdr.v1.AttachedDisk();
  }

  public static com.google.cloud.backupdr.v1.AttachedDisk getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AttachedDisk> PARSER =
      new com.google.protobuf.AbstractParser<AttachedDisk>() {
        @java.lang.Override
        public AttachedDisk parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AttachedDisk> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AttachedDisk> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.backupdr.v1.AttachedDisk getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
