/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/backupdr/v1/backupvault_gce.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.backupdr.v1;

public interface SchedulingDurationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.backupdr.v1.SchedulingDuration)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Span of time at a resolution of a second.
   * </pre>
   *
   * <code>optional int64 seconds = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the seconds field is set.
   */
  boolean hasSeconds();
  /**
   *
   *
   * <pre>
   * Optional. Span of time at a resolution of a second.
   * </pre>
   *
   * <code>optional int64 seconds = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The seconds.
   */
  long getSeconds();

  /**
   *
   *
   * <pre>
   * Optional. Span of time that's a fraction of a second at nanosecond
   * resolution.
   * </pre>
   *
   * <code>optional int32 nanos = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the nanos field is set.
   */
  boolean hasNanos();
  /**
   *
   *
   * <pre>
   * Optional. Span of time that's a fraction of a second at nanosecond
   * resolution.
   * </pre>
   *
   * <code>optional int32 nanos = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The nanos.
   */
  int getNanos();
}
