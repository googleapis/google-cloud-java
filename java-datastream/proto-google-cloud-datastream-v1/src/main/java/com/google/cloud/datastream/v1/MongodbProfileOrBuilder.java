/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datastream/v1/datastream_resources.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.datastream.v1;

public interface MongodbProfileOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.datastream.v1.MongodbProfile)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. List of host addresses for a MongoDB cluster.
   * For SRV connection format, this list must contain exactly one DNS host
   * without a port. For Standard connection format, this list must contain all
   * the required hosts in the cluster with their respective ports.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.datastream.v1.HostAddress host_addresses = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<com.google.cloud.datastream.v1.HostAddress> getHostAddressesList();

  /**
   *
   *
   * <pre>
   * Required. List of host addresses for a MongoDB cluster.
   * For SRV connection format, this list must contain exactly one DNS host
   * without a port. For Standard connection format, this list must contain all
   * the required hosts in the cluster with their respective ports.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.datastream.v1.HostAddress host_addresses = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.datastream.v1.HostAddress getHostAddresses(int index);

  /**
   *
   *
   * <pre>
   * Required. List of host addresses for a MongoDB cluster.
   * For SRV connection format, this list must contain exactly one DNS host
   * without a port. For Standard connection format, this list must contain all
   * the required hosts in the cluster with their respective ports.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.datastream.v1.HostAddress host_addresses = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  int getHostAddressesCount();

  /**
   *
   *
   * <pre>
   * Required. List of host addresses for a MongoDB cluster.
   * For SRV connection format, this list must contain exactly one DNS host
   * without a port. For Standard connection format, this list must contain all
   * the required hosts in the cluster with their respective ports.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.datastream.v1.HostAddress host_addresses = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<? extends com.google.cloud.datastream.v1.HostAddressOrBuilder>
      getHostAddressesOrBuilderList();

  /**
   *
   *
   * <pre>
   * Required. List of host addresses for a MongoDB cluster.
   * For SRV connection format, this list must contain exactly one DNS host
   * without a port. For Standard connection format, this list must contain all
   * the required hosts in the cluster with their respective ports.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.datastream.v1.HostAddress host_addresses = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.datastream.v1.HostAddressOrBuilder getHostAddressesOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Optional. Name of the replica set. Only needed for self hosted replica set
   * type MongoDB cluster. For SRV connection format, this field must be empty.
   * For Standard connection format, this field must be specified.
   * </pre>
   *
   * <code>string replica_set = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The replicaSet.
   */
  java.lang.String getReplicaSet();

  /**
   *
   *
   * <pre>
   * Optional. Name of the replica set. Only needed for self hosted replica set
   * type MongoDB cluster. For SRV connection format, this field must be empty.
   * For Standard connection format, this field must be specified.
   * </pre>
   *
   * <code>string replica_set = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for replicaSet.
   */
  com.google.protobuf.ByteString getReplicaSetBytes();

  /**
   *
   *
   * <pre>
   * Required. Username for the MongoDB connection.
   * </pre>
   *
   * <code>string username = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The username.
   */
  java.lang.String getUsername();

  /**
   *
   *
   * <pre>
   * Required. Username for the MongoDB connection.
   * </pre>
   *
   * <code>string username = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for username.
   */
  com.google.protobuf.ByteString getUsernameBytes();

  /**
   *
   *
   * <pre>
   * Optional. Password for the MongoDB connection. Mutually exclusive with the
   * `secret_manager_stored_password` field.
   * </pre>
   *
   * <code>string password = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The password.
   */
  java.lang.String getPassword();

  /**
   *
   *
   * <pre>
   * Optional. Password for the MongoDB connection. Mutually exclusive with the
   * `secret_manager_stored_password` field.
   * </pre>
   *
   * <code>string password = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for password.
   */
  com.google.protobuf.ByteString getPasswordBytes();

  /**
   *
   *
   * <pre>
   * Optional. A reference to a Secret Manager resource name storing the
   * SQLServer connection password. Mutually exclusive with the `password`
   * field.
   * </pre>
   *
   * <code>string secret_manager_stored_password = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The secretManagerStoredPassword.
   */
  java.lang.String getSecretManagerStoredPassword();

  /**
   *
   *
   * <pre>
   * Optional. A reference to a Secret Manager resource name storing the
   * SQLServer connection password. Mutually exclusive with the `password`
   * field.
   * </pre>
   *
   * <code>string secret_manager_stored_password = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The bytes for secretManagerStoredPassword.
   */
  com.google.protobuf.ByteString getSecretManagerStoredPasswordBytes();

  /**
   *
   *
   * <pre>
   * Optional. SSL configuration for the MongoDB connection.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.MongodbSslConfig ssl_config = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the sslConfig field is set.
   */
  boolean hasSslConfig();

  /**
   *
   *
   * <pre>
   * Optional. SSL configuration for the MongoDB connection.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.MongodbSslConfig ssl_config = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The sslConfig.
   */
  com.google.cloud.datastream.v1.MongodbSslConfig getSslConfig();

  /**
   *
   *
   * <pre>
   * Optional. SSL configuration for the MongoDB connection.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.MongodbSslConfig ssl_config = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.datastream.v1.MongodbSslConfigOrBuilder getSslConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Srv connection format.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SrvConnectionFormat srv_connection_format = 101;</code>
   *
   * @return Whether the srvConnectionFormat field is set.
   */
  boolean hasSrvConnectionFormat();

  /**
   *
   *
   * <pre>
   * Srv connection format.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SrvConnectionFormat srv_connection_format = 101;</code>
   *
   * @return The srvConnectionFormat.
   */
  com.google.cloud.datastream.v1.SrvConnectionFormat getSrvConnectionFormat();

  /**
   *
   *
   * <pre>
   * Srv connection format.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SrvConnectionFormat srv_connection_format = 101;</code>
   */
  com.google.cloud.datastream.v1.SrvConnectionFormatOrBuilder getSrvConnectionFormatOrBuilder();

  /**
   *
   *
   * <pre>
   * Standard connection format.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.StandardConnectionFormat standard_connection_format = 102;
   * </code>
   *
   * @return Whether the standardConnectionFormat field is set.
   */
  boolean hasStandardConnectionFormat();

  /**
   *
   *
   * <pre>
   * Standard connection format.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.StandardConnectionFormat standard_connection_format = 102;
   * </code>
   *
   * @return The standardConnectionFormat.
   */
  com.google.cloud.datastream.v1.StandardConnectionFormat getStandardConnectionFormat();

  /**
   *
   *
   * <pre>
   * Standard connection format.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.StandardConnectionFormat standard_connection_format = 102;
   * </code>
   */
  com.google.cloud.datastream.v1.StandardConnectionFormatOrBuilder
      getStandardConnectionFormatOrBuilder();

  com.google.cloud.datastream.v1.MongodbProfile.MongodbConnectionFormatCase
      getMongodbConnectionFormatCase();
}
