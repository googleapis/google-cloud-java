/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datastream/v1/datastream_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.datastream.v1;

public interface MysqlSourceConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.datastream.v1.MysqlSourceConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * MySQL objects to retrieve from the source.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlRdbms include_objects = 1;</code>
   *
   * @return Whether the includeObjects field is set.
   */
  boolean hasIncludeObjects();
  /**
   *
   *
   * <pre>
   * MySQL objects to retrieve from the source.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlRdbms include_objects = 1;</code>
   *
   * @return The includeObjects.
   */
  com.google.cloud.datastream.v1.MysqlRdbms getIncludeObjects();
  /**
   *
   *
   * <pre>
   * MySQL objects to retrieve from the source.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlRdbms include_objects = 1;</code>
   */
  com.google.cloud.datastream.v1.MysqlRdbmsOrBuilder getIncludeObjectsOrBuilder();

  /**
   *
   *
   * <pre>
   * MySQL objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlRdbms exclude_objects = 2;</code>
   *
   * @return Whether the excludeObjects field is set.
   */
  boolean hasExcludeObjects();
  /**
   *
   *
   * <pre>
   * MySQL objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlRdbms exclude_objects = 2;</code>
   *
   * @return The excludeObjects.
   */
  com.google.cloud.datastream.v1.MysqlRdbms getExcludeObjects();
  /**
   *
   *
   * <pre>
   * MySQL objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlRdbms exclude_objects = 2;</code>
   */
  com.google.cloud.datastream.v1.MysqlRdbmsOrBuilder getExcludeObjectsOrBuilder();

  /**
   *
   *
   * <pre>
   * Maximum number of concurrent CDC tasks. The number should be non negative.
   * If not set (or set to 0), the system's default value will be used.
   * </pre>
   *
   * <code>int32 max_concurrent_cdc_tasks = 3;</code>
   *
   * @return The maxConcurrentCdcTasks.
   */
  int getMaxConcurrentCdcTasks();

  /**
   *
   *
   * <pre>
   * Maximum number of concurrent backfill tasks. The number should be non
   * negative. If not set (or set to 0), the system's default value will be
   * used.
   * </pre>
   *
   * <code>int32 max_concurrent_backfill_tasks = 4;</code>
   *
   * @return The maxConcurrentBackfillTasks.
   */
  int getMaxConcurrentBackfillTasks();

  /**
   *
   *
   * <pre>
   * Use Binary log position based replication.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.MysqlSourceConfig.BinaryLogPosition binary_log_position = 101;
   * </code>
   *
   * @return Whether the binaryLogPosition field is set.
   */
  boolean hasBinaryLogPosition();
  /**
   *
   *
   * <pre>
   * Use Binary log position based replication.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.MysqlSourceConfig.BinaryLogPosition binary_log_position = 101;
   * </code>
   *
   * @return The binaryLogPosition.
   */
  com.google.cloud.datastream.v1.MysqlSourceConfig.BinaryLogPosition getBinaryLogPosition();
  /**
   *
   *
   * <pre>
   * Use Binary log position based replication.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.MysqlSourceConfig.BinaryLogPosition binary_log_position = 101;
   * </code>
   */
  com.google.cloud.datastream.v1.MysqlSourceConfig.BinaryLogPositionOrBuilder
      getBinaryLogPositionOrBuilder();

  /**
   *
   *
   * <pre>
   * Use GTID based replication.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlSourceConfig.Gtid gtid = 102;</code>
   *
   * @return Whether the gtid field is set.
   */
  boolean hasGtid();
  /**
   *
   *
   * <pre>
   * Use GTID based replication.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlSourceConfig.Gtid gtid = 102;</code>
   *
   * @return The gtid.
   */
  com.google.cloud.datastream.v1.MysqlSourceConfig.Gtid getGtid();
  /**
   *
   *
   * <pre>
   * Use GTID based replication.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.MysqlSourceConfig.Gtid gtid = 102;</code>
   */
  com.google.cloud.datastream.v1.MysqlSourceConfig.GtidOrBuilder getGtidOrBuilder();

  com.google.cloud.datastream.v1.MysqlSourceConfig.CdcMethodCase getCdcMethodCase();
}
