/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datastream/v1/datastream_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.datastream.v1;

/**
 *
 *
 * <pre>
 * SQLServer data source configuration
 * </pre>
 *
 * Protobuf type {@code google.cloud.datastream.v1.SqlServerSourceConfig}
 */
public final class SqlServerSourceConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.datastream.v1.SqlServerSourceConfig)
    SqlServerSourceConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SqlServerSourceConfig.newBuilder() to construct.
  private SqlServerSourceConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SqlServerSourceConfig() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SqlServerSourceConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.datastream.v1.DatastreamResourcesProto
        .internal_static_google_cloud_datastream_v1_SqlServerSourceConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.datastream.v1.DatastreamResourcesProto
        .internal_static_google_cloud_datastream_v1_SqlServerSourceConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.datastream.v1.SqlServerSourceConfig.class,
            com.google.cloud.datastream.v1.SqlServerSourceConfig.Builder.class);
  }

  private int bitField0_;
  private int cdcMethodCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object cdcMethod_;

  public enum CdcMethodCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TRANSACTION_LOGS(101),
    CHANGE_TABLES(102),
    CDCMETHOD_NOT_SET(0);
    private final int value;

    private CdcMethodCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CdcMethodCase valueOf(int value) {
      return forNumber(value);
    }

    public static CdcMethodCase forNumber(int value) {
      switch (value) {
        case 101:
          return TRANSACTION_LOGS;
        case 102:
          return CHANGE_TABLES;
        case 0:
          return CDCMETHOD_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public CdcMethodCase getCdcMethodCase() {
    return CdcMethodCase.forNumber(cdcMethodCase_);
  }

  public static final int INCLUDE_OBJECTS_FIELD_NUMBER = 1;
  private com.google.cloud.datastream.v1.SqlServerRdbms includeObjects_;
  /**
   *
   *
   * <pre>
   * SQLServer objects to include in the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
   *
   * @return Whether the includeObjects field is set.
   */
  @java.lang.Override
  public boolean hasIncludeObjects() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * SQLServer objects to include in the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
   *
   * @return The includeObjects.
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerRdbms getIncludeObjects() {
    return includeObjects_ == null
        ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
        : includeObjects_;
  }
  /**
   *
   *
   * <pre>
   * SQLServer objects to include in the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder getIncludeObjectsOrBuilder() {
    return includeObjects_ == null
        ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
        : includeObjects_;
  }

  public static final int EXCLUDE_OBJECTS_FIELD_NUMBER = 2;
  private com.google.cloud.datastream.v1.SqlServerRdbms excludeObjects_;
  /**
   *
   *
   * <pre>
   * SQLServer objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
   *
   * @return Whether the excludeObjects field is set.
   */
  @java.lang.Override
  public boolean hasExcludeObjects() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * SQLServer objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
   *
   * @return The excludeObjects.
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerRdbms getExcludeObjects() {
    return excludeObjects_ == null
        ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
        : excludeObjects_;
  }
  /**
   *
   *
   * <pre>
   * SQLServer objects to exclude from the stream.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder getExcludeObjectsOrBuilder() {
    return excludeObjects_ == null
        ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
        : excludeObjects_;
  }

  public static final int MAX_CONCURRENT_CDC_TASKS_FIELD_NUMBER = 3;
  private int maxConcurrentCdcTasks_ = 0;
  /**
   *
   *
   * <pre>
   * Max concurrent CDC tasks.
   * </pre>
   *
   * <code>int32 max_concurrent_cdc_tasks = 3;</code>
   *
   * @return The maxConcurrentCdcTasks.
   */
  @java.lang.Override
  public int getMaxConcurrentCdcTasks() {
    return maxConcurrentCdcTasks_;
  }

  public static final int MAX_CONCURRENT_BACKFILL_TASKS_FIELD_NUMBER = 4;
  private int maxConcurrentBackfillTasks_ = 0;
  /**
   *
   *
   * <pre>
   * Max concurrent backfill tasks.
   * </pre>
   *
   * <code>int32 max_concurrent_backfill_tasks = 4;</code>
   *
   * @return The maxConcurrentBackfillTasks.
   */
  @java.lang.Override
  public int getMaxConcurrentBackfillTasks() {
    return maxConcurrentBackfillTasks_;
  }

  public static final int TRANSACTION_LOGS_FIELD_NUMBER = 101;
  /**
   *
   *
   * <pre>
   * CDC reader reads from transaction logs.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
   *
   * @return Whether the transactionLogs field is set.
   */
  @java.lang.Override
  public boolean hasTransactionLogs() {
    return cdcMethodCase_ == 101;
  }
  /**
   *
   *
   * <pre>
   * CDC reader reads from transaction logs.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
   *
   * @return The transactionLogs.
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerTransactionLogs getTransactionLogs() {
    if (cdcMethodCase_ == 101) {
      return (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_;
    }
    return com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * CDC reader reads from transaction logs.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerTransactionLogsOrBuilder
      getTransactionLogsOrBuilder() {
    if (cdcMethodCase_ == 101) {
      return (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_;
    }
    return com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance();
  }

  public static final int CHANGE_TABLES_FIELD_NUMBER = 102;
  /**
   *
   *
   * <pre>
   * CDC reader reads from change tables.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
   *
   * @return Whether the changeTables field is set.
   */
  @java.lang.Override
  public boolean hasChangeTables() {
    return cdcMethodCase_ == 102;
  }
  /**
   *
   *
   * <pre>
   * CDC reader reads from change tables.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
   *
   * @return The changeTables.
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerChangeTables getChangeTables() {
    if (cdcMethodCase_ == 102) {
      return (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_;
    }
    return com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * CDC reader reads from change tables.
   * </pre>
   *
   * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerChangeTablesOrBuilder getChangeTablesOrBuilder() {
    if (cdcMethodCase_ == 102) {
      return (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_;
    }
    return com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getIncludeObjects());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getExcludeObjects());
    }
    if (maxConcurrentCdcTasks_ != 0) {
      output.writeInt32(3, maxConcurrentCdcTasks_);
    }
    if (maxConcurrentBackfillTasks_ != 0) {
      output.writeInt32(4, maxConcurrentBackfillTasks_);
    }
    if (cdcMethodCase_ == 101) {
      output.writeMessage(
          101, (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_);
    }
    if (cdcMethodCase_ == 102) {
      output.writeMessage(102, (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getIncludeObjects());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getExcludeObjects());
    }
    if (maxConcurrentCdcTasks_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, maxConcurrentCdcTasks_);
    }
    if (maxConcurrentBackfillTasks_ != 0) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(4, maxConcurrentBackfillTasks_);
    }
    if (cdcMethodCase_ == 101) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              101, (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_);
    }
    if (cdcMethodCase_ == 102) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              102, (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.datastream.v1.SqlServerSourceConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.datastream.v1.SqlServerSourceConfig other =
        (com.google.cloud.datastream.v1.SqlServerSourceConfig) obj;

    if (hasIncludeObjects() != other.hasIncludeObjects()) return false;
    if (hasIncludeObjects()) {
      if (!getIncludeObjects().equals(other.getIncludeObjects())) return false;
    }
    if (hasExcludeObjects() != other.hasExcludeObjects()) return false;
    if (hasExcludeObjects()) {
      if (!getExcludeObjects().equals(other.getExcludeObjects())) return false;
    }
    if (getMaxConcurrentCdcTasks() != other.getMaxConcurrentCdcTasks()) return false;
    if (getMaxConcurrentBackfillTasks() != other.getMaxConcurrentBackfillTasks()) return false;
    if (!getCdcMethodCase().equals(other.getCdcMethodCase())) return false;
    switch (cdcMethodCase_) {
      case 101:
        if (!getTransactionLogs().equals(other.getTransactionLogs())) return false;
        break;
      case 102:
        if (!getChangeTables().equals(other.getChangeTables())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasIncludeObjects()) {
      hash = (37 * hash) + INCLUDE_OBJECTS_FIELD_NUMBER;
      hash = (53 * hash) + getIncludeObjects().hashCode();
    }
    if (hasExcludeObjects()) {
      hash = (37 * hash) + EXCLUDE_OBJECTS_FIELD_NUMBER;
      hash = (53 * hash) + getExcludeObjects().hashCode();
    }
    hash = (37 * hash) + MAX_CONCURRENT_CDC_TASKS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxConcurrentCdcTasks();
    hash = (37 * hash) + MAX_CONCURRENT_BACKFILL_TASKS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxConcurrentBackfillTasks();
    switch (cdcMethodCase_) {
      case 101:
        hash = (37 * hash) + TRANSACTION_LOGS_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionLogs().hashCode();
        break;
      case 102:
        hash = (37 * hash) + CHANGE_TABLES_FIELD_NUMBER;
        hash = (53 * hash) + getChangeTables().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.datastream.v1.SqlServerSourceConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * SQLServer data source configuration
   * </pre>
   *
   * Protobuf type {@code google.cloud.datastream.v1.SqlServerSourceConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.datastream.v1.SqlServerSourceConfig)
      com.google.cloud.datastream.v1.SqlServerSourceConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_SqlServerSourceConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_SqlServerSourceConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.datastream.v1.SqlServerSourceConfig.class,
              com.google.cloud.datastream.v1.SqlServerSourceConfig.Builder.class);
    }

    // Construct using com.google.cloud.datastream.v1.SqlServerSourceConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getIncludeObjectsFieldBuilder();
        getExcludeObjectsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      includeObjects_ = null;
      if (includeObjectsBuilder_ != null) {
        includeObjectsBuilder_.dispose();
        includeObjectsBuilder_ = null;
      }
      excludeObjects_ = null;
      if (excludeObjectsBuilder_ != null) {
        excludeObjectsBuilder_.dispose();
        excludeObjectsBuilder_ = null;
      }
      maxConcurrentCdcTasks_ = 0;
      maxConcurrentBackfillTasks_ = 0;
      if (transactionLogsBuilder_ != null) {
        transactionLogsBuilder_.clear();
      }
      if (changeTablesBuilder_ != null) {
        changeTablesBuilder_.clear();
      }
      cdcMethodCase_ = 0;
      cdcMethod_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_SqlServerSourceConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerSourceConfig getDefaultInstanceForType() {
      return com.google.cloud.datastream.v1.SqlServerSourceConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerSourceConfig build() {
      com.google.cloud.datastream.v1.SqlServerSourceConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerSourceConfig buildPartial() {
      com.google.cloud.datastream.v1.SqlServerSourceConfig result =
          new com.google.cloud.datastream.v1.SqlServerSourceConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.datastream.v1.SqlServerSourceConfig result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.includeObjects_ =
            includeObjectsBuilder_ == null ? includeObjects_ : includeObjectsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.excludeObjects_ =
            excludeObjectsBuilder_ == null ? excludeObjects_ : excludeObjectsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.maxConcurrentCdcTasks_ = maxConcurrentCdcTasks_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maxConcurrentBackfillTasks_ = maxConcurrentBackfillTasks_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.google.cloud.datastream.v1.SqlServerSourceConfig result) {
      result.cdcMethodCase_ = cdcMethodCase_;
      result.cdcMethod_ = this.cdcMethod_;
      if (cdcMethodCase_ == 101 && transactionLogsBuilder_ != null) {
        result.cdcMethod_ = transactionLogsBuilder_.build();
      }
      if (cdcMethodCase_ == 102 && changeTablesBuilder_ != null) {
        result.cdcMethod_ = changeTablesBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.datastream.v1.SqlServerSourceConfig) {
        return mergeFrom((com.google.cloud.datastream.v1.SqlServerSourceConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.datastream.v1.SqlServerSourceConfig other) {
      if (other == com.google.cloud.datastream.v1.SqlServerSourceConfig.getDefaultInstance())
        return this;
      if (other.hasIncludeObjects()) {
        mergeIncludeObjects(other.getIncludeObjects());
      }
      if (other.hasExcludeObjects()) {
        mergeExcludeObjects(other.getExcludeObjects());
      }
      if (other.getMaxConcurrentCdcTasks() != 0) {
        setMaxConcurrentCdcTasks(other.getMaxConcurrentCdcTasks());
      }
      if (other.getMaxConcurrentBackfillTasks() != 0) {
        setMaxConcurrentBackfillTasks(other.getMaxConcurrentBackfillTasks());
      }
      switch (other.getCdcMethodCase()) {
        case TRANSACTION_LOGS:
          {
            mergeTransactionLogs(other.getTransactionLogs());
            break;
          }
        case CHANGE_TABLES:
          {
            mergeChangeTables(other.getChangeTables());
            break;
          }
        case CDCMETHOD_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(getIncludeObjectsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(getExcludeObjectsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 24:
              {
                maxConcurrentCdcTasks_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 32:
              {
                maxConcurrentBackfillTasks_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            case 810:
              {
                input.readMessage(getTransactionLogsFieldBuilder().getBuilder(), extensionRegistry);
                cdcMethodCase_ = 101;
                break;
              } // case 810
            case 818:
              {
                input.readMessage(getChangeTablesFieldBuilder().getBuilder(), extensionRegistry);
                cdcMethodCase_ = 102;
                break;
              } // case 818
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int cdcMethodCase_ = 0;
    private java.lang.Object cdcMethod_;

    public CdcMethodCase getCdcMethodCase() {
      return CdcMethodCase.forNumber(cdcMethodCase_);
    }

    public Builder clearCdcMethod() {
      cdcMethodCase_ = 0;
      cdcMethod_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.cloud.datastream.v1.SqlServerRdbms includeObjects_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerRdbms,
            com.google.cloud.datastream.v1.SqlServerRdbms.Builder,
            com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder>
        includeObjectsBuilder_;
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     *
     * @return Whether the includeObjects field is set.
     */
    public boolean hasIncludeObjects() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     *
     * @return The includeObjects.
     */
    public com.google.cloud.datastream.v1.SqlServerRdbms getIncludeObjects() {
      if (includeObjectsBuilder_ == null) {
        return includeObjects_ == null
            ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
            : includeObjects_;
      } else {
        return includeObjectsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    public Builder setIncludeObjects(com.google.cloud.datastream.v1.SqlServerRdbms value) {
      if (includeObjectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        includeObjects_ = value;
      } else {
        includeObjectsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    public Builder setIncludeObjects(
        com.google.cloud.datastream.v1.SqlServerRdbms.Builder builderForValue) {
      if (includeObjectsBuilder_ == null) {
        includeObjects_ = builderForValue.build();
      } else {
        includeObjectsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    public Builder mergeIncludeObjects(com.google.cloud.datastream.v1.SqlServerRdbms value) {
      if (includeObjectsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)
            && includeObjects_ != null
            && includeObjects_
                != com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()) {
          getIncludeObjectsBuilder().mergeFrom(value);
        } else {
          includeObjects_ = value;
        }
      } else {
        includeObjectsBuilder_.mergeFrom(value);
      }
      if (includeObjects_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    public Builder clearIncludeObjects() {
      bitField0_ = (bitField0_ & ~0x00000001);
      includeObjects_ = null;
      if (includeObjectsBuilder_ != null) {
        includeObjectsBuilder_.dispose();
        includeObjectsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    public com.google.cloud.datastream.v1.SqlServerRdbms.Builder getIncludeObjectsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getIncludeObjectsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    public com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder getIncludeObjectsOrBuilder() {
      if (includeObjectsBuilder_ != null) {
        return includeObjectsBuilder_.getMessageOrBuilder();
      } else {
        return includeObjects_ == null
            ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
            : includeObjects_;
      }
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to include in the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms include_objects = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerRdbms,
            com.google.cloud.datastream.v1.SqlServerRdbms.Builder,
            com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder>
        getIncludeObjectsFieldBuilder() {
      if (includeObjectsBuilder_ == null) {
        includeObjectsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.datastream.v1.SqlServerRdbms,
                com.google.cloud.datastream.v1.SqlServerRdbms.Builder,
                com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder>(
                getIncludeObjects(), getParentForChildren(), isClean());
        includeObjects_ = null;
      }
      return includeObjectsBuilder_;
    }

    private com.google.cloud.datastream.v1.SqlServerRdbms excludeObjects_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerRdbms,
            com.google.cloud.datastream.v1.SqlServerRdbms.Builder,
            com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder>
        excludeObjectsBuilder_;
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     *
     * @return Whether the excludeObjects field is set.
     */
    public boolean hasExcludeObjects() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     *
     * @return The excludeObjects.
     */
    public com.google.cloud.datastream.v1.SqlServerRdbms getExcludeObjects() {
      if (excludeObjectsBuilder_ == null) {
        return excludeObjects_ == null
            ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
            : excludeObjects_;
      } else {
        return excludeObjectsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    public Builder setExcludeObjects(com.google.cloud.datastream.v1.SqlServerRdbms value) {
      if (excludeObjectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        excludeObjects_ = value;
      } else {
        excludeObjectsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    public Builder setExcludeObjects(
        com.google.cloud.datastream.v1.SqlServerRdbms.Builder builderForValue) {
      if (excludeObjectsBuilder_ == null) {
        excludeObjects_ = builderForValue.build();
      } else {
        excludeObjectsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    public Builder mergeExcludeObjects(com.google.cloud.datastream.v1.SqlServerRdbms value) {
      if (excludeObjectsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && excludeObjects_ != null
            && excludeObjects_
                != com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()) {
          getExcludeObjectsBuilder().mergeFrom(value);
        } else {
          excludeObjects_ = value;
        }
      } else {
        excludeObjectsBuilder_.mergeFrom(value);
      }
      if (excludeObjects_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    public Builder clearExcludeObjects() {
      bitField0_ = (bitField0_ & ~0x00000002);
      excludeObjects_ = null;
      if (excludeObjectsBuilder_ != null) {
        excludeObjectsBuilder_.dispose();
        excludeObjectsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    public com.google.cloud.datastream.v1.SqlServerRdbms.Builder getExcludeObjectsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getExcludeObjectsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    public com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder getExcludeObjectsOrBuilder() {
      if (excludeObjectsBuilder_ != null) {
        return excludeObjectsBuilder_.getMessageOrBuilder();
      } else {
        return excludeObjects_ == null
            ? com.google.cloud.datastream.v1.SqlServerRdbms.getDefaultInstance()
            : excludeObjects_;
      }
    }
    /**
     *
     *
     * <pre>
     * SQLServer objects to exclude from the stream.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerRdbms exclude_objects = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerRdbms,
            com.google.cloud.datastream.v1.SqlServerRdbms.Builder,
            com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder>
        getExcludeObjectsFieldBuilder() {
      if (excludeObjectsBuilder_ == null) {
        excludeObjectsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.datastream.v1.SqlServerRdbms,
                com.google.cloud.datastream.v1.SqlServerRdbms.Builder,
                com.google.cloud.datastream.v1.SqlServerRdbmsOrBuilder>(
                getExcludeObjects(), getParentForChildren(), isClean());
        excludeObjects_ = null;
      }
      return excludeObjectsBuilder_;
    }

    private int maxConcurrentCdcTasks_;
    /**
     *
     *
     * <pre>
     * Max concurrent CDC tasks.
     * </pre>
     *
     * <code>int32 max_concurrent_cdc_tasks = 3;</code>
     *
     * @return The maxConcurrentCdcTasks.
     */
    @java.lang.Override
    public int getMaxConcurrentCdcTasks() {
      return maxConcurrentCdcTasks_;
    }
    /**
     *
     *
     * <pre>
     * Max concurrent CDC tasks.
     * </pre>
     *
     * <code>int32 max_concurrent_cdc_tasks = 3;</code>
     *
     * @param value The maxConcurrentCdcTasks to set.
     * @return This builder for chaining.
     */
    public Builder setMaxConcurrentCdcTasks(int value) {

      maxConcurrentCdcTasks_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Max concurrent CDC tasks.
     * </pre>
     *
     * <code>int32 max_concurrent_cdc_tasks = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxConcurrentCdcTasks() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxConcurrentCdcTasks_ = 0;
      onChanged();
      return this;
    }

    private int maxConcurrentBackfillTasks_;
    /**
     *
     *
     * <pre>
     * Max concurrent backfill tasks.
     * </pre>
     *
     * <code>int32 max_concurrent_backfill_tasks = 4;</code>
     *
     * @return The maxConcurrentBackfillTasks.
     */
    @java.lang.Override
    public int getMaxConcurrentBackfillTasks() {
      return maxConcurrentBackfillTasks_;
    }
    /**
     *
     *
     * <pre>
     * Max concurrent backfill tasks.
     * </pre>
     *
     * <code>int32 max_concurrent_backfill_tasks = 4;</code>
     *
     * @param value The maxConcurrentBackfillTasks to set.
     * @return This builder for chaining.
     */
    public Builder setMaxConcurrentBackfillTasks(int value) {

      maxConcurrentBackfillTasks_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Max concurrent backfill tasks.
     * </pre>
     *
     * <code>int32 max_concurrent_backfill_tasks = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxConcurrentBackfillTasks() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxConcurrentBackfillTasks_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerTransactionLogs,
            com.google.cloud.datastream.v1.SqlServerTransactionLogs.Builder,
            com.google.cloud.datastream.v1.SqlServerTransactionLogsOrBuilder>
        transactionLogsBuilder_;
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     *
     * @return Whether the transactionLogs field is set.
     */
    @java.lang.Override
    public boolean hasTransactionLogs() {
      return cdcMethodCase_ == 101;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     *
     * @return The transactionLogs.
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerTransactionLogs getTransactionLogs() {
      if (transactionLogsBuilder_ == null) {
        if (cdcMethodCase_ == 101) {
          return (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_;
        }
        return com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance();
      } else {
        if (cdcMethodCase_ == 101) {
          return transactionLogsBuilder_.getMessage();
        }
        return com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    public Builder setTransactionLogs(
        com.google.cloud.datastream.v1.SqlServerTransactionLogs value) {
      if (transactionLogsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cdcMethod_ = value;
        onChanged();
      } else {
        transactionLogsBuilder_.setMessage(value);
      }
      cdcMethodCase_ = 101;
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    public Builder setTransactionLogs(
        com.google.cloud.datastream.v1.SqlServerTransactionLogs.Builder builderForValue) {
      if (transactionLogsBuilder_ == null) {
        cdcMethod_ = builderForValue.build();
        onChanged();
      } else {
        transactionLogsBuilder_.setMessage(builderForValue.build());
      }
      cdcMethodCase_ = 101;
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    public Builder mergeTransactionLogs(
        com.google.cloud.datastream.v1.SqlServerTransactionLogs value) {
      if (transactionLogsBuilder_ == null) {
        if (cdcMethodCase_ == 101
            && cdcMethod_
                != com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance()) {
          cdcMethod_ =
              com.google.cloud.datastream.v1.SqlServerTransactionLogs.newBuilder(
                      (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          cdcMethod_ = value;
        }
        onChanged();
      } else {
        if (cdcMethodCase_ == 101) {
          transactionLogsBuilder_.mergeFrom(value);
        } else {
          transactionLogsBuilder_.setMessage(value);
        }
      }
      cdcMethodCase_ = 101;
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    public Builder clearTransactionLogs() {
      if (transactionLogsBuilder_ == null) {
        if (cdcMethodCase_ == 101) {
          cdcMethodCase_ = 0;
          cdcMethod_ = null;
          onChanged();
        }
      } else {
        if (cdcMethodCase_ == 101) {
          cdcMethodCase_ = 0;
          cdcMethod_ = null;
        }
        transactionLogsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    public com.google.cloud.datastream.v1.SqlServerTransactionLogs.Builder
        getTransactionLogsBuilder() {
      return getTransactionLogsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerTransactionLogsOrBuilder
        getTransactionLogsOrBuilder() {
      if ((cdcMethodCase_ == 101) && (transactionLogsBuilder_ != null)) {
        return transactionLogsBuilder_.getMessageOrBuilder();
      } else {
        if (cdcMethodCase_ == 101) {
          return (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_;
        }
        return com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from transaction logs.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerTransactionLogs transaction_logs = 101;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerTransactionLogs,
            com.google.cloud.datastream.v1.SqlServerTransactionLogs.Builder,
            com.google.cloud.datastream.v1.SqlServerTransactionLogsOrBuilder>
        getTransactionLogsFieldBuilder() {
      if (transactionLogsBuilder_ == null) {
        if (!(cdcMethodCase_ == 101)) {
          cdcMethod_ = com.google.cloud.datastream.v1.SqlServerTransactionLogs.getDefaultInstance();
        }
        transactionLogsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.datastream.v1.SqlServerTransactionLogs,
                com.google.cloud.datastream.v1.SqlServerTransactionLogs.Builder,
                com.google.cloud.datastream.v1.SqlServerTransactionLogsOrBuilder>(
                (com.google.cloud.datastream.v1.SqlServerTransactionLogs) cdcMethod_,
                getParentForChildren(),
                isClean());
        cdcMethod_ = null;
      }
      cdcMethodCase_ = 101;
      onChanged();
      return transactionLogsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerChangeTables,
            com.google.cloud.datastream.v1.SqlServerChangeTables.Builder,
            com.google.cloud.datastream.v1.SqlServerChangeTablesOrBuilder>
        changeTablesBuilder_;
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     *
     * @return Whether the changeTables field is set.
     */
    @java.lang.Override
    public boolean hasChangeTables() {
      return cdcMethodCase_ == 102;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     *
     * @return The changeTables.
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerChangeTables getChangeTables() {
      if (changeTablesBuilder_ == null) {
        if (cdcMethodCase_ == 102) {
          return (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_;
        }
        return com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance();
      } else {
        if (cdcMethodCase_ == 102) {
          return changeTablesBuilder_.getMessage();
        }
        return com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    public Builder setChangeTables(com.google.cloud.datastream.v1.SqlServerChangeTables value) {
      if (changeTablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cdcMethod_ = value;
        onChanged();
      } else {
        changeTablesBuilder_.setMessage(value);
      }
      cdcMethodCase_ = 102;
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    public Builder setChangeTables(
        com.google.cloud.datastream.v1.SqlServerChangeTables.Builder builderForValue) {
      if (changeTablesBuilder_ == null) {
        cdcMethod_ = builderForValue.build();
        onChanged();
      } else {
        changeTablesBuilder_.setMessage(builderForValue.build());
      }
      cdcMethodCase_ = 102;
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    public Builder mergeChangeTables(com.google.cloud.datastream.v1.SqlServerChangeTables value) {
      if (changeTablesBuilder_ == null) {
        if (cdcMethodCase_ == 102
            && cdcMethod_
                != com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance()) {
          cdcMethod_ =
              com.google.cloud.datastream.v1.SqlServerChangeTables.newBuilder(
                      (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          cdcMethod_ = value;
        }
        onChanged();
      } else {
        if (cdcMethodCase_ == 102) {
          changeTablesBuilder_.mergeFrom(value);
        } else {
          changeTablesBuilder_.setMessage(value);
        }
      }
      cdcMethodCase_ = 102;
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    public Builder clearChangeTables() {
      if (changeTablesBuilder_ == null) {
        if (cdcMethodCase_ == 102) {
          cdcMethodCase_ = 0;
          cdcMethod_ = null;
          onChanged();
        }
      } else {
        if (cdcMethodCase_ == 102) {
          cdcMethodCase_ = 0;
          cdcMethod_ = null;
        }
        changeTablesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    public com.google.cloud.datastream.v1.SqlServerChangeTables.Builder getChangeTablesBuilder() {
      return getChangeTablesFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.SqlServerChangeTablesOrBuilder
        getChangeTablesOrBuilder() {
      if ((cdcMethodCase_ == 102) && (changeTablesBuilder_ != null)) {
        return changeTablesBuilder_.getMessageOrBuilder();
      } else {
        if (cdcMethodCase_ == 102) {
          return (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_;
        }
        return com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * CDC reader reads from change tables.
     * </pre>
     *
     * <code>.google.cloud.datastream.v1.SqlServerChangeTables change_tables = 102;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.SqlServerChangeTables,
            com.google.cloud.datastream.v1.SqlServerChangeTables.Builder,
            com.google.cloud.datastream.v1.SqlServerChangeTablesOrBuilder>
        getChangeTablesFieldBuilder() {
      if (changeTablesBuilder_ == null) {
        if (!(cdcMethodCase_ == 102)) {
          cdcMethod_ = com.google.cloud.datastream.v1.SqlServerChangeTables.getDefaultInstance();
        }
        changeTablesBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.datastream.v1.SqlServerChangeTables,
                com.google.cloud.datastream.v1.SqlServerChangeTables.Builder,
                com.google.cloud.datastream.v1.SqlServerChangeTablesOrBuilder>(
                (com.google.cloud.datastream.v1.SqlServerChangeTables) cdcMethod_,
                getParentForChildren(),
                isClean());
        cdcMethod_ = null;
      }
      cdcMethodCase_ = 102;
      onChanged();
      return changeTablesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.datastream.v1.SqlServerSourceConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.datastream.v1.SqlServerSourceConfig)
  private static final com.google.cloud.datastream.v1.SqlServerSourceConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.datastream.v1.SqlServerSourceConfig();
  }

  public static com.google.cloud.datastream.v1.SqlServerSourceConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SqlServerSourceConfig> PARSER =
      new com.google.protobuf.AbstractParser<SqlServerSourceConfig>() {
        @java.lang.Override
        public SqlServerSourceConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<SqlServerSourceConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SqlServerSourceConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.datastream.v1.SqlServerSourceConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
