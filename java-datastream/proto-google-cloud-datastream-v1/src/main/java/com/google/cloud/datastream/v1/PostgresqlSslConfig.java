/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datastream/v1/datastream_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.datastream.v1;

/**
 *
 *
 * <pre>
 * PostgreSQL SSL configuration information.
 * </pre>
 *
 * Protobuf type {@code google.cloud.datastream.v1.PostgresqlSslConfig}
 */
public final class PostgresqlSslConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.datastream.v1.PostgresqlSslConfig)
    PostgresqlSslConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use PostgresqlSslConfig.newBuilder() to construct.
  private PostgresqlSslConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private PostgresqlSslConfig() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new PostgresqlSslConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.datastream.v1.DatastreamResourcesProto
        .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.datastream.v1.DatastreamResourcesProto
        .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.datastream.v1.PostgresqlSslConfig.class,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.Builder.class);
  }

  public interface ServerVerificationOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The caCertificate.
     */
    java.lang.String getCaCertificate();
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for caCertificate.
     */
    com.google.protobuf.ByteString getCaCertificateBytes();
  }
  /**
   *
   *
   * <pre>
   * Message represents the option where Datastream will enforce the encryption
   * and authenticate the server identity. ca_certificate must be set if user
   * selects this option.
   * </pre>
   *
   * Protobuf type {@code google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification}
   */
  public static final class ServerVerification extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
      ServerVerificationOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ServerVerification.newBuilder() to construct.
    private ServerVerification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ServerVerification() {
      caCertificate_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ServerVerification();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerVerification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerVerification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.class,
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder.class);
    }

    public static final int CA_CERTIFICATE_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object caCertificate_ = "";
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The caCertificate.
     */
    @java.lang.Override
    public java.lang.String getCaCertificate() {
      java.lang.Object ref = caCertificate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        caCertificate_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for caCertificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCaCertificateBytes() {
      java.lang.Object ref = caCertificate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        caCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, caCertificate_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, caCertificate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)) {
        return super.equals(obj);
      }
      com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification other =
          (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification) obj;

      if (!getCaCertificate().equals(other.getCaCertificate())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CA_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCaCertificate().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Message represents the option where Datastream will enforce the encryption
     * and authenticate the server identity. ca_certificate must be set if user
     * selects this option.
     * </pre>
     *
     * Protobuf type {@code google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.datastream.v1.DatastreamResourcesProto
            .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerVerification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.datastream.v1.DatastreamResourcesProto
            .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerVerification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.class,
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder
                    .class);
      }

      // Construct using
      // com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        caCertificate_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.datastream.v1.DatastreamResourcesProto
            .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerVerification_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
          getDefaultInstanceForType() {
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification build() {
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification buildPartial() {
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification result =
            new com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.caCertificate_ = caCertificate_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification) {
          return mergeFrom(
              (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification other) {
        if (other
            == com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
                .getDefaultInstance()) return this;
        if (!other.getCaCertificate().isEmpty()) {
          caCertificate_ = other.caCertificate_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  caCertificate_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object caCertificate_ = "";
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The caCertificate.
       */
      public java.lang.String getCaCertificate() {
        java.lang.Object ref = caCertificate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          caCertificate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The bytes for caCertificate.
       */
      public com.google.protobuf.ByteString getCaCertificateBytes() {
        java.lang.Object ref = caCertificate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          caCertificate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The caCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificate(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        caCertificate_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCaCertificate() {
        caCertificate_ = getDefaultInstance().getCaCertificate();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The bytes for caCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificateBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        caCertificate_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
    private static final com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification();
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerVerification> PARSER =
        new com.google.protobuf.AbstractParser<ServerVerification>() {
          @java.lang.Override
          public ServerVerification parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ServerVerification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerVerification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ServerAndClientVerificationOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded certificate used by the source database
     * to authenticate the client identity (i.e., the Datastream's identity).
     * This certificate is signed by either a root certificate trusted by the
     * server or one or more intermediate certificates (which is stored with the
     * leaf certificate) to link the this certificate to the trusted root
     * certificate.
     * </pre>
     *
     * <code>
     * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The clientCertificate.
     */
    java.lang.String getClientCertificate();
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded certificate used by the source database
     * to authenticate the client identity (i.e., the Datastream's identity).
     * This certificate is signed by either a root certificate trusted by the
     * server or one or more intermediate certificates (which is stored with the
     * leaf certificate) to link the this certificate to the trusted root
     * certificate.
     * </pre>
     *
     * <code>
     * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for clientCertificate.
     */
    com.google.protobuf.ByteString getClientCertificateBytes();

    /**
     *
     *
     * <pre>
     * Optional. Input only. PEM-encoded private key associated with the client
     * certificate. This value will be used during the SSL/TLS handshake,
     * allowing the PostgreSQL server to authenticate the client's identity,
     * i.e. identity of the Datastream.
     * </pre>
     *
     * <code>
     * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The clientKey.
     */
    java.lang.String getClientKey();
    /**
     *
     *
     * <pre>
     * Optional. Input only. PEM-encoded private key associated with the client
     * certificate. This value will be used during the SSL/TLS handshake,
     * allowing the PostgreSQL server to authenticate the client's identity,
     * i.e. identity of the Datastream.
     * </pre>
     *
     * <code>
     * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The bytes for clientKey.
     */
    com.google.protobuf.ByteString getClientKeyBytes();

    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The caCertificate.
     */
    java.lang.String getCaCertificate();
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for caCertificate.
     */
    com.google.protobuf.ByteString getCaCertificateBytes();
  }
  /**
   *
   *
   * <pre>
   * Message represents the option where Datastream will enforce the encryption
   * and authenticate the server identity as well as the client identity.
   * ca_certificate, client_certificate and client_key must be set if user
   * selects this option.
   * </pre>
   *
   * Protobuf type {@code
   * google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification}
   */
  public static final class ServerAndClientVerification
      extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
      ServerAndClientVerificationOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ServerAndClientVerification.newBuilder() to construct.
    private ServerAndClientVerification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ServerAndClientVerification() {
      clientCertificate_ = "";
      clientKey_ = "";
      caCertificate_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ServerAndClientVerification();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerAndClientVerification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerAndClientVerification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.class,
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.Builder
                  .class);
    }

    public static final int CLIENT_CERTIFICATE_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object clientCertificate_ = "";
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded certificate used by the source database
     * to authenticate the client identity (i.e., the Datastream's identity).
     * This certificate is signed by either a root certificate trusted by the
     * server or one or more intermediate certificates (which is stored with the
     * leaf certificate) to link the this certificate to the trusted root
     * certificate.
     * </pre>
     *
     * <code>
     * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The clientCertificate.
     */
    @java.lang.Override
    public java.lang.String getClientCertificate() {
      java.lang.Object ref = clientCertificate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientCertificate_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded certificate used by the source database
     * to authenticate the client identity (i.e., the Datastream's identity).
     * This certificate is signed by either a root certificate trusted by the
     * server or one or more intermediate certificates (which is stored with the
     * leaf certificate) to link the this certificate to the trusted root
     * certificate.
     * </pre>
     *
     * <code>
     * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for clientCertificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getClientCertificateBytes() {
      java.lang.Object ref = clientCertificate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_KEY_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private volatile java.lang.Object clientKey_ = "";
    /**
     *
     *
     * <pre>
     * Optional. Input only. PEM-encoded private key associated with the client
     * certificate. This value will be used during the SSL/TLS handshake,
     * allowing the PostgreSQL server to authenticate the client's identity,
     * i.e. identity of the Datastream.
     * </pre>
     *
     * <code>
     * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The clientKey.
     */
    @java.lang.Override
    public java.lang.String getClientKey() {
      java.lang.Object ref = clientKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientKey_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Input only. PEM-encoded private key associated with the client
     * certificate. This value will be used during the SSL/TLS handshake,
     * allowing the PostgreSQL server to authenticate the client's identity,
     * i.e. identity of the Datastream.
     * </pre>
     *
     * <code>
     * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The bytes for clientKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getClientKeyBytes() {
      java.lang.Object ref = clientKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        clientKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CA_CERTIFICATE_FIELD_NUMBER = 3;

    @SuppressWarnings("serial")
    private volatile java.lang.Object caCertificate_ = "";
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The caCertificate.
     */
    @java.lang.Override
    public java.lang.String getCaCertificate() {
      java.lang.Object ref = caCertificate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        caCertificate_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Input only. PEM-encoded server root CA certificate.
     * </pre>
     *
     * <code>
     * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for caCertificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCaCertificateBytes() {
      java.lang.Object ref = caCertificate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        caCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientCertificate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clientCertificate_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientKey_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, clientKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificate_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, caCertificate_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientCertificate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clientCertificate_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientKey_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, clientKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(caCertificate_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, caCertificate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)) {
        return super.equals(obj);
      }
      com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification other =
          (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification) obj;

      if (!getClientCertificate().equals(other.getClientCertificate())) return false;
      if (!getClientKey().equals(other.getClientKey())) return false;
      if (!getCaCertificate().equals(other.getCaCertificate())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLIENT_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getClientCertificate().hashCode();
      hash = (37 * hash) + CLIENT_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getClientKey().hashCode();
      hash = (37 * hash) + CA_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCaCertificate().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Message represents the option where Datastream will enforce the encryption
     * and authenticate the server identity as well as the client identity.
     * ca_certificate, client_certificate and client_key must be set if user
     * selects this option.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.datastream.v1.DatastreamResourcesProto
            .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerAndClientVerification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.datastream.v1.DatastreamResourcesProto
            .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerAndClientVerification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                    .class,
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                    .Builder.class);
      }

      // Construct using
      // com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        clientCertificate_ = "";
        clientKey_ = "";
        caCertificate_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.datastream.v1.DatastreamResourcesProto
            .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_ServerAndClientVerification_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
          getDefaultInstanceForType() {
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
          build() {
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
          buildPartial() {
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification result =
            new com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification(
                this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.clientCertificate_ = clientCertificate_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.clientKey_ = clientKey_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.caCertificate_ = caCertificate_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification) {
          return mergeFrom(
              (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification other) {
        if (other
            == com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                .getDefaultInstance()) return this;
        if (!other.getClientCertificate().isEmpty()) {
          clientCertificate_ = other.clientCertificate_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getClientKey().isEmpty()) {
          clientKey_ = other.clientKey_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getCaCertificate().isEmpty()) {
          caCertificate_ = other.caCertificate_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  clientCertificate_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  clientKey_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              case 26:
                {
                  caCertificate_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object clientCertificate_ = "";
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded certificate used by the source database
       * to authenticate the client identity (i.e., the Datastream's identity).
       * This certificate is signed by either a root certificate trusted by the
       * server or one or more intermediate certificates (which is stored with the
       * leaf certificate) to link the this certificate to the trusted root
       * certificate.
       * </pre>
       *
       * <code>
       * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The clientCertificate.
       */
      public java.lang.String getClientCertificate() {
        java.lang.Object ref = clientCertificate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clientCertificate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded certificate used by the source database
       * to authenticate the client identity (i.e., the Datastream's identity).
       * This certificate is signed by either a root certificate trusted by the
       * server or one or more intermediate certificates (which is stored with the
       * leaf certificate) to link the this certificate to the trusted root
       * certificate.
       * </pre>
       *
       * <code>
       * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The bytes for clientCertificate.
       */
      public com.google.protobuf.ByteString getClientCertificateBytes() {
        java.lang.Object ref = clientCertificate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          clientCertificate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded certificate used by the source database
       * to authenticate the client identity (i.e., the Datastream's identity).
       * This certificate is signed by either a root certificate trusted by the
       * server or one or more intermediate certificates (which is stored with the
       * leaf certificate) to link the this certificate to the trusted root
       * certificate.
       * </pre>
       *
       * <code>
       * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The clientCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setClientCertificate(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        clientCertificate_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded certificate used by the source database
       * to authenticate the client identity (i.e., the Datastream's identity).
       * This certificate is signed by either a root certificate trusted by the
       * server or one or more intermediate certificates (which is stored with the
       * leaf certificate) to link the this certificate to the trusted root
       * certificate.
       * </pre>
       *
       * <code>
       * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearClientCertificate() {
        clientCertificate_ = getDefaultInstance().getClientCertificate();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded certificate used by the source database
       * to authenticate the client identity (i.e., the Datastream's identity).
       * This certificate is signed by either a root certificate trusted by the
       * server or one or more intermediate certificates (which is stored with the
       * leaf certificate) to link the this certificate to the trusted root
       * certificate.
       * </pre>
       *
       * <code>
       * string client_certificate = 1 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The bytes for clientCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setClientCertificateBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        clientCertificate_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object clientKey_ = "";
      /**
       *
       *
       * <pre>
       * Optional. Input only. PEM-encoded private key associated with the client
       * certificate. This value will be used during the SSL/TLS handshake,
       * allowing the PostgreSQL server to authenticate the client's identity,
       * i.e. identity of the Datastream.
       * </pre>
       *
       * <code>
       * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return The clientKey.
       */
      public java.lang.String getClientKey() {
        java.lang.Object ref = clientKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clientKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Optional. Input only. PEM-encoded private key associated with the client
       * certificate. This value will be used during the SSL/TLS handshake,
       * allowing the PostgreSQL server to authenticate the client's identity,
       * i.e. identity of the Datastream.
       * </pre>
       *
       * <code>
       * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return The bytes for clientKey.
       */
      public com.google.protobuf.ByteString getClientKeyBytes() {
        java.lang.Object ref = clientKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          clientKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Optional. Input only. PEM-encoded private key associated with the client
       * certificate. This value will be used during the SSL/TLS handshake,
       * allowing the PostgreSQL server to authenticate the client's identity,
       * i.e. identity of the Datastream.
       * </pre>
       *
       * <code>
       * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @param value The clientKey to set.
       * @return This builder for chaining.
       */
      public Builder setClientKey(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        clientKey_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. Input only. PEM-encoded private key associated with the client
       * certificate. This value will be used during the SSL/TLS handshake,
       * allowing the PostgreSQL server to authenticate the client's identity,
       * i.e. identity of the Datastream.
       * </pre>
       *
       * <code>
       * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearClientKey() {
        clientKey_ = getDefaultInstance().getClientKey();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. Input only. PEM-encoded private key associated with the client
       * certificate. This value will be used during the SSL/TLS handshake,
       * allowing the PostgreSQL server to authenticate the client's identity,
       * i.e. identity of the Datastream.
       * </pre>
       *
       * <code>
       * string client_key = 2 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @param value The bytes for clientKey to set.
       * @return This builder for chaining.
       */
      public Builder setClientKeyBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        clientKey_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object caCertificate_ = "";
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The caCertificate.
       */
      public java.lang.String getCaCertificate() {
        java.lang.Object ref = caCertificate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          caCertificate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The bytes for caCertificate.
       */
      public com.google.protobuf.ByteString getCaCertificateBytes() {
        java.lang.Object ref = caCertificate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          caCertificate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The caCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificate(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        caCertificate_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCaCertificate() {
        caCertificate_ = getDefaultInstance().getCaCertificate();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Input only. PEM-encoded server root CA certificate.
       * </pre>
       *
       * <code>
       * string ca_certificate = 3 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @param value The bytes for caCertificate to set.
       * @return This builder for chaining.
       */
      public Builder setCaCertificateBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        caCertificate_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
    private static final com.google.cloud.datastream.v1.PostgresqlSslConfig
            .ServerAndClientVerification
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification();
    }

    public static com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerAndClientVerification> PARSER =
        new com.google.protobuf.AbstractParser<ServerAndClientVerification>() {
          @java.lang.Override
          public ServerAndClientVerification parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ServerAndClientVerification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerAndClientVerification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int encryptionSettingCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object encryptionSetting_;

  public enum EncryptionSettingCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SERVER_VERIFICATION(1),
    SERVER_AND_CLIENT_VERIFICATION(2),
    ENCRYPTIONSETTING_NOT_SET(0);
    private final int value;

    private EncryptionSettingCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EncryptionSettingCase valueOf(int value) {
      return forNumber(value);
    }

    public static EncryptionSettingCase forNumber(int value) {
      switch (value) {
        case 1:
          return SERVER_VERIFICATION;
        case 2:
          return SERVER_AND_CLIENT_VERIFICATION;
        case 0:
          return ENCRYPTIONSETTING_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public EncryptionSettingCase getEncryptionSettingCase() {
    return EncryptionSettingCase.forNumber(encryptionSettingCase_);
  }

  public static final int SERVER_VERIFICATION_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   *  If this field is set, the communication will be encrypted with TLS
   *  encryption and the server identity will be authenticated.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
   * </code>
   *
   * @return Whether the serverVerification field is set.
   */
  @java.lang.Override
  public boolean hasServerVerification() {
    return encryptionSettingCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   *  If this field is set, the communication will be encrypted with TLS
   *  encryption and the server identity will be authenticated.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
   * </code>
   *
   * @return The serverVerification.
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
      getServerVerification() {
    if (encryptionSettingCase_ == 1) {
      return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
          encryptionSetting_;
    }
    return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        .getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   *  If this field is set, the communication will be encrypted with TLS
   *  encryption and the server identity will be authenticated.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerificationOrBuilder
      getServerVerificationOrBuilder() {
    if (encryptionSettingCase_ == 1) {
      return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
          encryptionSetting_;
    }
    return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        .getDefaultInstance();
  }

  public static final int SERVER_AND_CLIENT_VERIFICATION_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * If this field is set, the communication will be encrypted with TLS
   * encryption and both the server identity and the client identity will be
   * authenticated.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
   * </code>
   *
   * @return Whether the serverAndClientVerification field is set.
   */
  @java.lang.Override
  public boolean hasServerAndClientVerification() {
    return encryptionSettingCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * If this field is set, the communication will be encrypted with TLS
   * encryption and both the server identity and the client identity will be
   * authenticated.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
   * </code>
   *
   * @return The serverAndClientVerification.
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
      getServerAndClientVerification() {
    if (encryptionSettingCase_ == 2) {
      return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
          encryptionSetting_;
    }
    return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        .getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * If this field is set, the communication will be encrypted with TLS
   * encryption and both the server identity and the client identity will be
   * authenticated.
   * </pre>
   *
   * <code>
   * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerificationOrBuilder
      getServerAndClientVerificationOrBuilder() {
    if (encryptionSettingCase_ == 2) {
      return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
          encryptionSetting_;
    }
    return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        .getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (encryptionSettingCase_ == 1) {
      output.writeMessage(
          1,
          (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
              encryptionSetting_);
    }
    if (encryptionSettingCase_ == 2) {
      output.writeMessage(
          2,
          (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
              encryptionSetting_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (encryptionSettingCase_ == 1) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              1,
              (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
                  encryptionSetting_);
    }
    if (encryptionSettingCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2,
              (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
                  encryptionSetting_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.datastream.v1.PostgresqlSslConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.datastream.v1.PostgresqlSslConfig other =
        (com.google.cloud.datastream.v1.PostgresqlSslConfig) obj;

    if (!getEncryptionSettingCase().equals(other.getEncryptionSettingCase())) return false;
    switch (encryptionSettingCase_) {
      case 1:
        if (!getServerVerification().equals(other.getServerVerification())) return false;
        break;
      case 2:
        if (!getServerAndClientVerification().equals(other.getServerAndClientVerification()))
          return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (encryptionSettingCase_) {
      case 1:
        hash = (37 * hash) + SERVER_VERIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getServerVerification().hashCode();
        break;
      case 2:
        hash = (37 * hash) + SERVER_AND_CLIENT_VERIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getServerAndClientVerification().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.datastream.v1.PostgresqlSslConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * PostgreSQL SSL configuration information.
   * </pre>
   *
   * Protobuf type {@code google.cloud.datastream.v1.PostgresqlSslConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.datastream.v1.PostgresqlSslConfig)
      com.google.cloud.datastream.v1.PostgresqlSslConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.datastream.v1.PostgresqlSslConfig.class,
              com.google.cloud.datastream.v1.PostgresqlSslConfig.Builder.class);
    }

    // Construct using com.google.cloud.datastream.v1.PostgresqlSslConfig.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (serverVerificationBuilder_ != null) {
        serverVerificationBuilder_.clear();
      }
      if (serverAndClientVerificationBuilder_ != null) {
        serverAndClientVerificationBuilder_.clear();
      }
      encryptionSettingCase_ = 0;
      encryptionSetting_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.datastream.v1.DatastreamResourcesProto
          .internal_static_google_cloud_datastream_v1_PostgresqlSslConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig getDefaultInstanceForType() {
      return com.google.cloud.datastream.v1.PostgresqlSslConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig build() {
      com.google.cloud.datastream.v1.PostgresqlSslConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig buildPartial() {
      com.google.cloud.datastream.v1.PostgresqlSslConfig result =
          new com.google.cloud.datastream.v1.PostgresqlSslConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.datastream.v1.PostgresqlSslConfig result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.google.cloud.datastream.v1.PostgresqlSslConfig result) {
      result.encryptionSettingCase_ = encryptionSettingCase_;
      result.encryptionSetting_ = this.encryptionSetting_;
      if (encryptionSettingCase_ == 1 && serverVerificationBuilder_ != null) {
        result.encryptionSetting_ = serverVerificationBuilder_.build();
      }
      if (encryptionSettingCase_ == 2 && serverAndClientVerificationBuilder_ != null) {
        result.encryptionSetting_ = serverAndClientVerificationBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.datastream.v1.PostgresqlSslConfig) {
        return mergeFrom((com.google.cloud.datastream.v1.PostgresqlSslConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.datastream.v1.PostgresqlSslConfig other) {
      if (other == com.google.cloud.datastream.v1.PostgresqlSslConfig.getDefaultInstance())
        return this;
      switch (other.getEncryptionSettingCase()) {
        case SERVER_VERIFICATION:
          {
            mergeServerVerification(other.getServerVerification());
            break;
          }
        case SERVER_AND_CLIENT_VERIFICATION:
          {
            mergeServerAndClientVerification(other.getServerAndClientVerification());
            break;
          }
        case ENCRYPTIONSETTING_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                input.readMessage(
                    getServerVerificationFieldBuilder().getBuilder(), extensionRegistry);
                encryptionSettingCase_ = 1;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(
                    getServerAndClientVerificationFieldBuilder().getBuilder(), extensionRegistry);
                encryptionSettingCase_ = 2;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int encryptionSettingCase_ = 0;
    private java.lang.Object encryptionSetting_;

    public EncryptionSettingCase getEncryptionSettingCase() {
      return EncryptionSettingCase.forNumber(encryptionSettingCase_);
    }

    public Builder clearEncryptionSetting() {
      encryptionSettingCase_ = 0;
      encryptionSetting_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerificationOrBuilder>
        serverVerificationBuilder_;
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     *
     * @return Whether the serverVerification field is set.
     */
    @java.lang.Override
    public boolean hasServerVerification() {
      return encryptionSettingCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     *
     * @return The serverVerification.
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
        getServerVerification() {
      if (serverVerificationBuilder_ == null) {
        if (encryptionSettingCase_ == 1) {
          return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
              encryptionSetting_;
        }
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
            .getDefaultInstance();
      } else {
        if (encryptionSettingCase_ == 1) {
          return serverVerificationBuilder_.getMessage();
        }
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    public Builder setServerVerification(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification value) {
      if (serverVerificationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encryptionSetting_ = value;
        onChanged();
      } else {
        serverVerificationBuilder_.setMessage(value);
      }
      encryptionSettingCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    public Builder setServerVerification(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder
            builderForValue) {
      if (serverVerificationBuilder_ == null) {
        encryptionSetting_ = builderForValue.build();
        onChanged();
      } else {
        serverVerificationBuilder_.setMessage(builderForValue.build());
      }
      encryptionSettingCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    public Builder mergeServerVerification(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification value) {
      if (serverVerificationBuilder_ == null) {
        if (encryptionSettingCase_ == 1
            && encryptionSetting_
                != com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
                    .getDefaultInstance()) {
          encryptionSetting_ =
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.newBuilder(
                      (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
                          encryptionSetting_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          encryptionSetting_ = value;
        }
        onChanged();
      } else {
        if (encryptionSettingCase_ == 1) {
          serverVerificationBuilder_.mergeFrom(value);
        } else {
          serverVerificationBuilder_.setMessage(value);
        }
      }
      encryptionSettingCase_ = 1;
      return this;
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    public Builder clearServerVerification() {
      if (serverVerificationBuilder_ == null) {
        if (encryptionSettingCase_ == 1) {
          encryptionSettingCase_ = 0;
          encryptionSetting_ = null;
          onChanged();
        }
      } else {
        if (encryptionSettingCase_ == 1) {
          encryptionSettingCase_ = 0;
          encryptionSetting_ = null;
        }
        serverVerificationBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder
        getServerVerificationBuilder() {
      return getServerVerificationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerificationOrBuilder
        getServerVerificationOrBuilder() {
      if ((encryptionSettingCase_ == 1) && (serverVerificationBuilder_ != null)) {
        return serverVerificationBuilder_.getMessageOrBuilder();
      } else {
        if (encryptionSettingCase_ == 1) {
          return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
              encryptionSetting_;
        }
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerificationOrBuilder>
        getServerVerificationFieldBuilder() {
      if (serverVerificationBuilder_ == null) {
        if (!(encryptionSettingCase_ == 1)) {
          encryptionSetting_ =
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification
                  .getDefaultInstance();
        }
        serverVerificationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification,
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification.Builder,
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerificationOrBuilder>(
                (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification)
                    encryptionSetting_,
                getParentForChildren(),
                isClean());
        encryptionSetting_ = null;
      }
      encryptionSettingCase_ = 1;
      onChanged();
      return serverVerificationBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.Builder,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerificationOrBuilder>
        serverAndClientVerificationBuilder_;
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     *
     * @return Whether the serverAndClientVerification field is set.
     */
    @java.lang.Override
    public boolean hasServerAndClientVerification() {
      return encryptionSettingCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     *
     * @return The serverAndClientVerification.
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
        getServerAndClientVerification() {
      if (serverAndClientVerificationBuilder_ == null) {
        if (encryptionSettingCase_ == 2) {
          return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
              encryptionSetting_;
        }
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
            .getDefaultInstance();
      } else {
        if (encryptionSettingCase_ == 2) {
          return serverAndClientVerificationBuilder_.getMessage();
        }
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    public Builder setServerAndClientVerification(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification value) {
      if (serverAndClientVerificationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encryptionSetting_ = value;
        onChanged();
      } else {
        serverAndClientVerificationBuilder_.setMessage(value);
      }
      encryptionSettingCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    public Builder setServerAndClientVerification(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.Builder
            builderForValue) {
      if (serverAndClientVerificationBuilder_ == null) {
        encryptionSetting_ = builderForValue.build();
        onChanged();
      } else {
        serverAndClientVerificationBuilder_.setMessage(builderForValue.build());
      }
      encryptionSettingCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    public Builder mergeServerAndClientVerification(
        com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification value) {
      if (serverAndClientVerificationBuilder_ == null) {
        if (encryptionSettingCase_ == 2
            && encryptionSetting_
                != com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                    .getDefaultInstance()) {
          encryptionSetting_ =
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                  .newBuilder(
                      (com.google.cloud.datastream.v1.PostgresqlSslConfig
                              .ServerAndClientVerification)
                          encryptionSetting_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          encryptionSetting_ = value;
        }
        onChanged();
      } else {
        if (encryptionSettingCase_ == 2) {
          serverAndClientVerificationBuilder_.mergeFrom(value);
        } else {
          serverAndClientVerificationBuilder_.setMessage(value);
        }
      }
      encryptionSettingCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    public Builder clearServerAndClientVerification() {
      if (serverAndClientVerificationBuilder_ == null) {
        if (encryptionSettingCase_ == 2) {
          encryptionSettingCase_ = 0;
          encryptionSetting_ = null;
          onChanged();
        }
      } else {
        if (encryptionSettingCase_ == 2) {
          encryptionSettingCase_ = 0;
          encryptionSetting_ = null;
        }
        serverAndClientVerificationBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.Builder
        getServerAndClientVerificationBuilder() {
      return getServerAndClientVerificationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerificationOrBuilder
        getServerAndClientVerificationOrBuilder() {
      if ((encryptionSettingCase_ == 2) && (serverAndClientVerificationBuilder_ != null)) {
        return serverAndClientVerificationBuilder_.getMessageOrBuilder();
      } else {
        if (encryptionSettingCase_ == 2) {
          return (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
              encryptionSetting_;
        }
        return com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     * </pre>
     *
     * <code>
     * .google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification.Builder,
            com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerificationOrBuilder>
        getServerAndClientVerificationFieldBuilder() {
      if (serverAndClientVerificationBuilder_ == null) {
        if (!(encryptionSettingCase_ == 2)) {
          encryptionSetting_ =
              com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                  .getDefaultInstance();
        }
        serverAndClientVerificationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification,
                com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification
                    .Builder,
                com.google.cloud.datastream.v1.PostgresqlSslConfig
                    .ServerAndClientVerificationOrBuilder>(
                (com.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification)
                    encryptionSetting_,
                getParentForChildren(),
                isClean());
        encryptionSetting_ = null;
      }
      encryptionSettingCase_ = 2;
      onChanged();
      return serverAndClientVerificationBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.datastream.v1.PostgresqlSslConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.datastream.v1.PostgresqlSslConfig)
  private static final com.google.cloud.datastream.v1.PostgresqlSslConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.datastream.v1.PostgresqlSslConfig();
  }

  public static com.google.cloud.datastream.v1.PostgresqlSslConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PostgresqlSslConfig> PARSER =
      new com.google.protobuf.AbstractParser<PostgresqlSslConfig>() {
        @java.lang.Override
        public PostgresqlSslConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<PostgresqlSslConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PostgresqlSslConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.datastream.v1.PostgresqlSslConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
