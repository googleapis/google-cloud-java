/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/apphub/v1/service.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.apphub.v1;

public interface DiscoveredServiceOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.apphub.v1.DiscoveredService)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the discovered service. Format:
   * `"projects/{host-project-id}/locations/{location}/discoveredServices/{uuid}"`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The name.
   */
  java.lang.String getName();

  /**
   *
   *
   * <pre>
   * Identifier. The resource name of the discovered service. Format:
   * `"projects/{host-project-id}/locations/{location}/discoveredServices/{uuid}"`
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Output only. Reference to an underlying networking resource that can
   * comprise a Service. These are immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.apphub.v1.ServiceReference service_reference = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the serviceReference field is set.
   */
  boolean hasServiceReference();

  /**
   *
   *
   * <pre>
   * Output only. Reference to an underlying networking resource that can
   * comprise a Service. These are immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.apphub.v1.ServiceReference service_reference = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The serviceReference.
   */
  com.google.cloud.apphub.v1.ServiceReference getServiceReference();

  /**
   *
   *
   * <pre>
   * Output only. Reference to an underlying networking resource that can
   * comprise a Service. These are immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.apphub.v1.ServiceReference service_reference = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.apphub.v1.ServiceReferenceOrBuilder getServiceReferenceOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Properties of an underlying compute resource that can comprise
   * a Service. These are immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.apphub.v1.ServiceProperties service_properties = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the serviceProperties field is set.
   */
  boolean hasServiceProperties();

  /**
   *
   *
   * <pre>
   * Output only. Properties of an underlying compute resource that can comprise
   * a Service. These are immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.apphub.v1.ServiceProperties service_properties = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The serviceProperties.
   */
  com.google.cloud.apphub.v1.ServiceProperties getServiceProperties();

  /**
   *
   *
   * <pre>
   * Output only. Properties of an underlying compute resource that can comprise
   * a Service. These are immutable.
   * </pre>
   *
   * <code>
   * .google.cloud.apphub.v1.ServiceProperties service_properties = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.apphub.v1.ServicePropertiesOrBuilder getServicePropertiesOrBuilder();
}
