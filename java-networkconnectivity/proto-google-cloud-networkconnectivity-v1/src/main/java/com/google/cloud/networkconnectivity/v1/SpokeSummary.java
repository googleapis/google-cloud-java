/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/networkconnectivity/v1/hub.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.networkconnectivity.v1;

/**
 *
 *
 * <pre>
 * Summarizes information about the spokes associated with a hub.
 * The summary includes a count of spokes according to type
 * and according to state. If any spokes are inactive,
 * the summary also lists the reasons they are inactive,
 * including a count for each reason.
 * </pre>
 *
 * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary}
 */
public final class SpokeSummary extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.networkconnectivity.v1.SpokeSummary)
    SpokeSummaryOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SpokeSummary.newBuilder() to construct.
  private SpokeSummary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SpokeSummary() {
    spokeTypeCounts_ = java.util.Collections.emptyList();
    spokeStateCounts_ = java.util.Collections.emptyList();
    spokeStateReasonCounts_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SpokeSummary();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.networkconnectivity.v1.HubProto
        .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.networkconnectivity.v1.HubProto
        .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.networkconnectivity.v1.SpokeSummary.class,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.Builder.class);
  }

  public interface SpokeTypeCountOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Output only. The type of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for spokeType.
     */
    int getSpokeTypeValue();
    /**
     *
     *
     * <pre>
     * Output only. The type of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The spokeType.
     */
    com.google.cloud.networkconnectivity.v1.SpokeType getSpokeType();

    /**
     *
     *
     * <pre>
     * Output only. The total number of spokes of this type that are
     * associated with the hub.
     * </pre>
     *
     * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The count.
     */
    long getCount();
  }
  /**
   *
   *
   * <pre>
   * The number of spokes of a given type that are associated
   * with a specific hub. The type indicates what kind of
   * resource is associated with the spoke.
   * </pre>
   *
   * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount}
   */
  public static final class SpokeTypeCount extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount)
      SpokeTypeCountOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpokeTypeCount.newBuilder() to construct.
    private SpokeTypeCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SpokeTypeCount() {
      spokeType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new SpokeTypeCount();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeTypeCount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeTypeCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.class,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder.class);
    }

    public static final int SPOKE_TYPE_FIELD_NUMBER = 1;
    private int spokeType_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. The type of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for spokeType.
     */
    @java.lang.Override
    public int getSpokeTypeValue() {
      return spokeType_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The type of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The spokeType.
     */
    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeType getSpokeType() {
      com.google.cloud.networkconnectivity.v1.SpokeType result =
          com.google.cloud.networkconnectivity.v1.SpokeType.forNumber(spokeType_);
      return result == null
          ? com.google.cloud.networkconnectivity.v1.SpokeType.UNRECOGNIZED
          : result;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private long count_ = 0L;
    /**
     *
     *
     * <pre>
     * Output only. The total number of spokes of this type that are
     * associated with the hub.
     * </pre>
     *
     * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The count.
     */
    @java.lang.Override
    public long getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (spokeType_
          != com.google.cloud.networkconnectivity.v1.SpokeType.SPOKE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, spokeType_);
      }
      if (count_ != 0L) {
        output.writeInt64(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (spokeType_
          != com.google.cloud.networkconnectivity.v1.SpokeType.SPOKE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, spokeType_);
      }
      if (count_ != 0L) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount)) {
        return super.equals(obj);
      }
      com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount other =
          (com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount) obj;

      if (spokeType_ != other.spokeType_) return false;
      if (getCount() != other.getCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPOKE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + spokeType_;
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The number of spokes of a given type that are associated
     * with a specific hub. The type indicates what kind of
     * resource is associated with the spoke.
     * </pre>
     *
     * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount)
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeTypeCount_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeTypeCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.class,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder.class);
      }

      // Construct using
      // com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        spokeType_ = 0;
        count_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeTypeCount_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
          getDefaultInstanceForType() {
        return com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount build() {
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount buildPartial() {
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount result =
            new com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.spokeType_ = spokeType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.count_ = count_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount) {
          return mergeFrom(
              (com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount other) {
        if (other
            == com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
                .getDefaultInstance()) return this;
        if (other.spokeType_ != 0) {
          setSpokeTypeValue(other.getSpokeTypeValue());
        }
        if (other.getCount() != 0L) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  spokeType_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  count_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int spokeType_ = 0;
      /**
       *
       *
       * <pre>
       * Output only. The type of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The enum numeric value on the wire for spokeType.
       */
      @java.lang.Override
      public int getSpokeTypeValue() {
        return spokeType_;
      }
      /**
       *
       *
       * <pre>
       * Output only. The type of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The enum numeric value on the wire for spokeType to set.
       * @return This builder for chaining.
       */
      public Builder setSpokeTypeValue(int value) {
        spokeType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The type of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The spokeType.
       */
      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeType getSpokeType() {
        com.google.cloud.networkconnectivity.v1.SpokeType result =
            com.google.cloud.networkconnectivity.v1.SpokeType.forNumber(spokeType_);
        return result == null
            ? com.google.cloud.networkconnectivity.v1.SpokeType.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Output only. The type of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The spokeType to set.
       * @return This builder for chaining.
       */
      public Builder setSpokeType(com.google.cloud.networkconnectivity.v1.SpokeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        spokeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The type of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.SpokeType spoke_type = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearSpokeType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        spokeType_ = 0;
        onChanged();
        return this;
      }

      private long count_;
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes of this type that are
       * associated with the hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @return The count.
       */
      @java.lang.Override
      public long getCount() {
        return count_;
      }
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes of this type that are
       * associated with the hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(long value) {

        count_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes of this type that are
       * associated with the hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0L;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount)
    private static final com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount();
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpokeTypeCount> PARSER =
        new com.google.protobuf.AbstractParser<SpokeTypeCount>() {
          @java.lang.Override
          public SpokeTypeCount parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<SpokeTypeCount> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpokeTypeCount> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface SpokeStateCountOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Output only. The state of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    int getStateValue();
    /**
     *
     *
     * <pre>
     * Output only. The state of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The state.
     */
    com.google.cloud.networkconnectivity.v1.State getState();

    /**
     *
     *
     * <pre>
     * Output only. The total number of spokes that are in this state
     * and associated with a given hub.
     * </pre>
     *
     * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The count.
     */
    long getCount();
  }
  /**
   *
   *
   * <pre>
   * The number of spokes that are in a particular state
   * and associated with a given hub.
   * </pre>
   *
   * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount}
   */
  public static final class SpokeStateCount extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount)
      SpokeStateCountOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpokeStateCount.newBuilder() to construct.
    private SpokeStateCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SpokeStateCount() {
      state_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new SpokeStateCount();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateCount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.class,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder.class);
    }

    public static final int STATE_FIELD_NUMBER = 1;
    private int state_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. The state of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The state of the spokes.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The state.
     */
    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.State getState() {
      com.google.cloud.networkconnectivity.v1.State result =
          com.google.cloud.networkconnectivity.v1.State.forNumber(state_);
      return result == null ? com.google.cloud.networkconnectivity.v1.State.UNRECOGNIZED : result;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private long count_ = 0L;
    /**
     *
     *
     * <pre>
     * Output only. The total number of spokes that are in this state
     * and associated with a given hub.
     * </pre>
     *
     * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The count.
     */
    @java.lang.Override
    public long getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (state_ != com.google.cloud.networkconnectivity.v1.State.STATE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, state_);
      }
      if (count_ != 0L) {
        output.writeInt64(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (state_ != com.google.cloud.networkconnectivity.v1.State.STATE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, state_);
      }
      if (count_ != 0L) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount)) {
        return super.equals(obj);
      }
      com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount other =
          (com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount) obj;

      if (state_ != other.state_) return false;
      if (getCount() != other.getCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The number of spokes that are in a particular state
     * and associated with a given hub.
     * </pre>
     *
     * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount)
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateCount_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.class,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder.class);
      }

      // Construct using
      // com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        state_ = 0;
        count_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateCount_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
          getDefaultInstanceForType() {
        return com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount build() {
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount buildPartial() {
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount result =
            new com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.state_ = state_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.count_ = count_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount) {
          return mergeFrom(
              (com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount other) {
        if (other
            == com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
                .getDefaultInstance()) return this;
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        if (other.getCount() != 0L) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  state_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  count_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int state_ = 0;
      /**
       *
       *
       * <pre>
       * Output only. The state of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The enum numeric value on the wire for state.
       */
      @java.lang.Override
      public int getStateValue() {
        return state_;
      }
      /**
       *
       *
       * <pre>
       * Output only. The state of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The enum numeric value on the wire for state to set.
       * @return This builder for chaining.
       */
      public Builder setStateValue(int value) {
        state_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The state of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The state.
       */
      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.State getState() {
        com.google.cloud.networkconnectivity.v1.State result =
            com.google.cloud.networkconnectivity.v1.State.forNumber(state_);
        return result == null ? com.google.cloud.networkconnectivity.v1.State.UNRECOGNIZED : result;
      }
      /**
       *
       *
       * <pre>
       * Output only. The state of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(com.google.cloud.networkconnectivity.v1.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The state of the spokes.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }

      private long count_;
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes that are in this state
       * and associated with a given hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @return The count.
       */
      @java.lang.Override
      public long getCount() {
        return count_;
      }
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes that are in this state
       * and associated with a given hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(long value) {

        count_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes that are in this state
       * and associated with a given hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0L;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount)
    private static final com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount();
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpokeStateCount> PARSER =
        new com.google.protobuf.AbstractParser<SpokeStateCount>() {
          @java.lang.Override
          public SpokeStateCount parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<SpokeStateCount> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpokeStateCount> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface SpokeStateReasonCountOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Output only. The reason that a spoke is inactive.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for stateReasonCode.
     */
    int getStateReasonCodeValue();
    /**
     *
     *
     * <pre>
     * Output only. The reason that a spoke is inactive.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The stateReasonCode.
     */
    com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code getStateReasonCode();

    /**
     *
     *
     * <pre>
     * Output only. The total number of spokes that are inactive for a
     * particular reason and associated with a given hub.
     * </pre>
     *
     * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The count.
     */
    long getCount();
  }
  /**
   *
   *
   * <pre>
   * The number of spokes in the hub that are inactive for this reason.
   * </pre>
   *
   * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount}
   */
  public static final class SpokeStateReasonCount extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount)
      SpokeStateReasonCountOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use SpokeStateReasonCount.newBuilder() to construct.
    private SpokeStateReasonCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private SpokeStateReasonCount() {
      stateReasonCode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new SpokeStateReasonCount();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateReasonCount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateReasonCount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.class,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
                  .class);
    }

    public static final int STATE_REASON_CODE_FIELD_NUMBER = 1;
    private int stateReasonCode_ = 0;
    /**
     *
     *
     * <pre>
     * Output only. The reason that a spoke is inactive.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The enum numeric value on the wire for stateReasonCode.
     */
    @java.lang.Override
    public int getStateReasonCodeValue() {
      return stateReasonCode_;
    }
    /**
     *
     *
     * <pre>
     * Output only. The reason that a spoke is inactive.
     * </pre>
     *
     * <code>
     * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The stateReasonCode.
     */
    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code getStateReasonCode() {
      com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code result =
          com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.forNumber(
              stateReasonCode_);
      return result == null
          ? com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.UNRECOGNIZED
          : result;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private long count_ = 0L;
    /**
     *
     *
     * <pre>
     * Output only. The total number of spokes that are inactive for a
     * particular reason and associated with a given hub.
     * </pre>
     *
     * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The count.
     */
    @java.lang.Override
    public long getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (stateReasonCode_
          != com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.CODE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(1, stateReasonCode_);
      }
      if (count_ != 0L) {
        output.writeInt64(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (stateReasonCode_
          != com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.CODE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, stateReasonCode_);
      }
      if (count_ != 0L) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount)) {
        return super.equals(obj);
      }
      com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount other =
          (com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount) obj;

      if (stateReasonCode_ != other.stateReasonCode_) return false;
      if (getCount() != other.getCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATE_REASON_CODE_FIELD_NUMBER;
      hash = (53 * hash) + stateReasonCode_;
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The number of spokes in the hub that are inactive for this reason.
     * </pre>
     *
     * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount)
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateReasonCount_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateReasonCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.class,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
                    .class);
      }

      // Construct using
      // com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        stateReasonCode_ = 0;
        count_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.networkconnectivity.v1.HubProto
            .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_SpokeStateReasonCount_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
          getDefaultInstanceForType() {
        return com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount build() {
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
          buildPartial() {
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount result =
            new com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.stateReasonCode_ = stateReasonCode_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.count_ = count_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount) {
          return mergeFrom(
              (com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount other) {
        if (other
            == com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
                .getDefaultInstance()) return this;
        if (other.stateReasonCode_ != 0) {
          setStateReasonCodeValue(other.getStateReasonCodeValue());
        }
        if (other.getCount() != 0L) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  stateReasonCode_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  count_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int stateReasonCode_ = 0;
      /**
       *
       *
       * <pre>
       * Output only. The reason that a spoke is inactive.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The enum numeric value on the wire for stateReasonCode.
       */
      @java.lang.Override
      public int getStateReasonCodeValue() {
        return stateReasonCode_;
      }
      /**
       *
       *
       * <pre>
       * Output only. The reason that a spoke is inactive.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The enum numeric value on the wire for stateReasonCode to set.
       * @return This builder for chaining.
       */
      public Builder setStateReasonCodeValue(int value) {
        stateReasonCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The reason that a spoke is inactive.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return The stateReasonCode.
       */
      @java.lang.Override
      public com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code getStateReasonCode() {
        com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code result =
            com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.forNumber(
                stateReasonCode_);
        return result == null
            ? com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Output only. The reason that a spoke is inactive.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @param value The stateReasonCode to set.
       * @return This builder for chaining.
       */
      public Builder setStateReasonCode(
          com.google.cloud.networkconnectivity.v1.Spoke.StateReason.Code value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        stateReasonCode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The reason that a spoke is inactive.
       * </pre>
       *
       * <code>
       * .google.cloud.networkconnectivity.v1.Spoke.StateReason.Code state_reason_code = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearStateReasonCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stateReasonCode_ = 0;
        onChanged();
        return this;
      }

      private long count_;
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes that are inactive for a
       * particular reason and associated with a given hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @return The count.
       */
      @java.lang.Override
      public long getCount() {
        return count_;
      }
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes that are inactive for a
       * particular reason and associated with a given hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(long value) {

        count_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Output only. The total number of spokes that are inactive for a
       * particular reason and associated with a given hub.
       * </pre>
       *
       * <code>int64 count = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0L;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount)
    private static final com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount();
    }

    public static com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpokeStateReasonCount> PARSER =
        new com.google.protobuf.AbstractParser<SpokeStateReasonCount>() {
          @java.lang.Override
          public SpokeStateReasonCount parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<SpokeStateReasonCount> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpokeStateReasonCount> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int SPOKE_TYPE_COUNTS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount>
      spokeTypeCounts_;
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes of each type that are
   * associated with a specific hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount>
      getSpokeTypeCountsList() {
    return spokeTypeCounts_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes of each type that are
   * associated with a specific hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder>
      getSpokeTypeCountsOrBuilderList() {
    return spokeTypeCounts_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes of each type that are
   * associated with a specific hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public int getSpokeTypeCountsCount() {
    return spokeTypeCounts_.size();
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes of each type that are
   * associated with a specific hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount getSpokeTypeCounts(
      int index) {
    return spokeTypeCounts_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes of each type that are
   * associated with a specific hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder
      getSpokeTypeCountsOrBuilder(int index) {
    return spokeTypeCounts_.get(index);
  }

  public static final int SPOKE_STATE_COUNTS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount>
      spokeStateCounts_;
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are in each state
   * and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount>
      getSpokeStateCountsList() {
    return spokeStateCounts_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are in each state
   * and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder>
      getSpokeStateCountsOrBuilderList() {
    return spokeStateCounts_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are in each state
   * and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public int getSpokeStateCountsCount() {
    return spokeStateCounts_.size();
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are in each state
   * and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount getSpokeStateCounts(
      int index) {
    return spokeStateCounts_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are in each state
   * and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder
      getSpokeStateCountsOrBuilder(int index) {
    return spokeStateCounts_.get(index);
  }

  public static final int SPOKE_STATE_REASON_COUNTS_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount>
      spokeStateReasonCounts_;
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are inactive for each
   * possible reason and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount>
      getSpokeStateReasonCountsList() {
    return spokeStateReasonCounts_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are inactive for each
   * possible reason and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder>
      getSpokeStateReasonCountsOrBuilderList() {
    return spokeStateReasonCounts_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are inactive for each
   * possible reason and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public int getSpokeStateReasonCountsCount() {
    return spokeStateReasonCounts_.size();
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are inactive for each
   * possible reason and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
      getSpokeStateReasonCounts(int index) {
    return spokeStateReasonCounts_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Output only. Counts the number of spokes that are inactive for each
   * possible reason and associated with a given hub.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder
      getSpokeStateReasonCountsOrBuilder(int index) {
    return spokeStateReasonCounts_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < spokeTypeCounts_.size(); i++) {
      output.writeMessage(1, spokeTypeCounts_.get(i));
    }
    for (int i = 0; i < spokeStateCounts_.size(); i++) {
      output.writeMessage(2, spokeStateCounts_.get(i));
    }
    for (int i = 0; i < spokeStateReasonCounts_.size(); i++) {
      output.writeMessage(3, spokeStateReasonCounts_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < spokeTypeCounts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, spokeTypeCounts_.get(i));
    }
    for (int i = 0; i < spokeStateCounts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, spokeStateCounts_.get(i));
    }
    for (int i = 0; i < spokeStateReasonCounts_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, spokeStateReasonCounts_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary)) {
      return super.equals(obj);
    }
    com.google.cloud.networkconnectivity.v1.SpokeSummary other =
        (com.google.cloud.networkconnectivity.v1.SpokeSummary) obj;

    if (!getSpokeTypeCountsList().equals(other.getSpokeTypeCountsList())) return false;
    if (!getSpokeStateCountsList().equals(other.getSpokeStateCountsList())) return false;
    if (!getSpokeStateReasonCountsList().equals(other.getSpokeStateReasonCountsList()))
      return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSpokeTypeCountsCount() > 0) {
      hash = (37 * hash) + SPOKE_TYPE_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getSpokeTypeCountsList().hashCode();
    }
    if (getSpokeStateCountsCount() > 0) {
      hash = (37 * hash) + SPOKE_STATE_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getSpokeStateCountsList().hashCode();
    }
    if (getSpokeStateReasonCountsCount() > 0) {
      hash = (37 * hash) + SPOKE_STATE_REASON_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getSpokeStateReasonCountsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.networkconnectivity.v1.SpokeSummary prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Summarizes information about the spokes associated with a hub.
   * The summary includes a count of spokes according to type
   * and according to state. If any spokes are inactive,
   * the summary also lists the reasons they are inactive,
   * including a count for each reason.
   * </pre>
   *
   * Protobuf type {@code google.cloud.networkconnectivity.v1.SpokeSummary}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.networkconnectivity.v1.SpokeSummary)
      com.google.cloud.networkconnectivity.v1.SpokeSummaryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.class,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.Builder.class);
    }

    // Construct using com.google.cloud.networkconnectivity.v1.SpokeSummary.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (spokeTypeCountsBuilder_ == null) {
        spokeTypeCounts_ = java.util.Collections.emptyList();
      } else {
        spokeTypeCounts_ = null;
        spokeTypeCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (spokeStateCountsBuilder_ == null) {
        spokeStateCounts_ = java.util.Collections.emptyList();
      } else {
        spokeStateCounts_ = null;
        spokeStateCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (spokeStateReasonCountsBuilder_ == null) {
        spokeStateReasonCounts_ = java.util.Collections.emptyList();
      } else {
        spokeStateReasonCounts_ = null;
        spokeStateReasonCountsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.networkconnectivity.v1.HubProto
          .internal_static_google_cloud_networkconnectivity_v1_SpokeSummary_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeSummary getDefaultInstanceForType() {
      return com.google.cloud.networkconnectivity.v1.SpokeSummary.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeSummary build() {
      com.google.cloud.networkconnectivity.v1.SpokeSummary result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.networkconnectivity.v1.SpokeSummary buildPartial() {
      com.google.cloud.networkconnectivity.v1.SpokeSummary result =
          new com.google.cloud.networkconnectivity.v1.SpokeSummary(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.networkconnectivity.v1.SpokeSummary result) {
      if (spokeTypeCountsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          spokeTypeCounts_ = java.util.Collections.unmodifiableList(spokeTypeCounts_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.spokeTypeCounts_ = spokeTypeCounts_;
      } else {
        result.spokeTypeCounts_ = spokeTypeCountsBuilder_.build();
      }
      if (spokeStateCountsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          spokeStateCounts_ = java.util.Collections.unmodifiableList(spokeStateCounts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.spokeStateCounts_ = spokeStateCounts_;
      } else {
        result.spokeStateCounts_ = spokeStateCountsBuilder_.build();
      }
      if (spokeStateReasonCountsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          spokeStateReasonCounts_ = java.util.Collections.unmodifiableList(spokeStateReasonCounts_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.spokeStateReasonCounts_ = spokeStateReasonCounts_;
      } else {
        result.spokeStateReasonCounts_ = spokeStateReasonCountsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.networkconnectivity.v1.SpokeSummary result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.networkconnectivity.v1.SpokeSummary) {
        return mergeFrom((com.google.cloud.networkconnectivity.v1.SpokeSummary) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.networkconnectivity.v1.SpokeSummary other) {
      if (other == com.google.cloud.networkconnectivity.v1.SpokeSummary.getDefaultInstance())
        return this;
      if (spokeTypeCountsBuilder_ == null) {
        if (!other.spokeTypeCounts_.isEmpty()) {
          if (spokeTypeCounts_.isEmpty()) {
            spokeTypeCounts_ = other.spokeTypeCounts_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSpokeTypeCountsIsMutable();
            spokeTypeCounts_.addAll(other.spokeTypeCounts_);
          }
          onChanged();
        }
      } else {
        if (!other.spokeTypeCounts_.isEmpty()) {
          if (spokeTypeCountsBuilder_.isEmpty()) {
            spokeTypeCountsBuilder_.dispose();
            spokeTypeCountsBuilder_ = null;
            spokeTypeCounts_ = other.spokeTypeCounts_;
            bitField0_ = (bitField0_ & ~0x00000001);
            spokeTypeCountsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getSpokeTypeCountsFieldBuilder()
                    : null;
          } else {
            spokeTypeCountsBuilder_.addAllMessages(other.spokeTypeCounts_);
          }
        }
      }
      if (spokeStateCountsBuilder_ == null) {
        if (!other.spokeStateCounts_.isEmpty()) {
          if (spokeStateCounts_.isEmpty()) {
            spokeStateCounts_ = other.spokeStateCounts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSpokeStateCountsIsMutable();
            spokeStateCounts_.addAll(other.spokeStateCounts_);
          }
          onChanged();
        }
      } else {
        if (!other.spokeStateCounts_.isEmpty()) {
          if (spokeStateCountsBuilder_.isEmpty()) {
            spokeStateCountsBuilder_.dispose();
            spokeStateCountsBuilder_ = null;
            spokeStateCounts_ = other.spokeStateCounts_;
            bitField0_ = (bitField0_ & ~0x00000002);
            spokeStateCountsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getSpokeStateCountsFieldBuilder()
                    : null;
          } else {
            spokeStateCountsBuilder_.addAllMessages(other.spokeStateCounts_);
          }
        }
      }
      if (spokeStateReasonCountsBuilder_ == null) {
        if (!other.spokeStateReasonCounts_.isEmpty()) {
          if (spokeStateReasonCounts_.isEmpty()) {
            spokeStateReasonCounts_ = other.spokeStateReasonCounts_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSpokeStateReasonCountsIsMutable();
            spokeStateReasonCounts_.addAll(other.spokeStateReasonCounts_);
          }
          onChanged();
        }
      } else {
        if (!other.spokeStateReasonCounts_.isEmpty()) {
          if (spokeStateReasonCountsBuilder_.isEmpty()) {
            spokeStateReasonCountsBuilder_.dispose();
            spokeStateReasonCountsBuilder_ = null;
            spokeStateReasonCounts_ = other.spokeStateReasonCounts_;
            bitField0_ = (bitField0_ & ~0x00000004);
            spokeStateReasonCountsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getSpokeStateReasonCountsFieldBuilder()
                    : null;
          } else {
            spokeStateReasonCountsBuilder_.addAllMessages(other.spokeStateReasonCounts_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount m =
                    input.readMessage(
                        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
                            .parser(),
                        extensionRegistry);
                if (spokeTypeCountsBuilder_ == null) {
                  ensureSpokeTypeCountsIsMutable();
                  spokeTypeCounts_.add(m);
                } else {
                  spokeTypeCountsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount m =
                    input.readMessage(
                        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
                            .parser(),
                        extensionRegistry);
                if (spokeStateCountsBuilder_ == null) {
                  ensureSpokeStateCountsIsMutable();
                  spokeStateCounts_.add(m);
                } else {
                  spokeStateCountsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            case 26:
              {
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount m =
                    input.readMessage(
                        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
                            .parser(),
                        extensionRegistry);
                if (spokeStateReasonCountsBuilder_ == null) {
                  ensureSpokeStateReasonCountsIsMutable();
                  spokeStateReasonCounts_.add(m);
                } else {
                  spokeStateReasonCountsBuilder_.addMessage(m);
                }
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount>
        spokeTypeCounts_ = java.util.Collections.emptyList();

    private void ensureSpokeTypeCountsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        spokeTypeCounts_ =
            new java.util.ArrayList<
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount>(
                spokeTypeCounts_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder>
        spokeTypeCountsBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount>
        getSpokeTypeCountsList() {
      if (spokeTypeCountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(spokeTypeCounts_);
      } else {
        return spokeTypeCountsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public int getSpokeTypeCountsCount() {
      if (spokeTypeCountsBuilder_ == null) {
        return spokeTypeCounts_.size();
      } else {
        return spokeTypeCountsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount getSpokeTypeCounts(
        int index) {
      if (spokeTypeCountsBuilder_ == null) {
        return spokeTypeCounts_.get(index);
      } else {
        return spokeTypeCountsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSpokeTypeCounts(
        int index, com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount value) {
      if (spokeTypeCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.set(index, value);
        onChanged();
      } else {
        spokeTypeCountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSpokeTypeCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder
            builderForValue) {
      if (spokeTypeCountsBuilder_ == null) {
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        spokeTypeCountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeTypeCounts(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount value) {
      if (spokeTypeCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.add(value);
        onChanged();
      } else {
        spokeTypeCountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeTypeCounts(
        int index, com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount value) {
      if (spokeTypeCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.add(index, value);
        onChanged();
      } else {
        spokeTypeCountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeTypeCounts(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder
            builderForValue) {
      if (spokeTypeCountsBuilder_ == null) {
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.add(builderForValue.build());
        onChanged();
      } else {
        spokeTypeCountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeTypeCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder
            builderForValue) {
      if (spokeTypeCountsBuilder_ == null) {
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        spokeTypeCountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addAllSpokeTypeCounts(
        java.lang.Iterable<
                ? extends com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount>
            values) {
      if (spokeTypeCountsBuilder_ == null) {
        ensureSpokeTypeCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, spokeTypeCounts_);
        onChanged();
      } else {
        spokeTypeCountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearSpokeTypeCounts() {
      if (spokeTypeCountsBuilder_ == null) {
        spokeTypeCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        spokeTypeCountsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder removeSpokeTypeCounts(int index) {
      if (spokeTypeCountsBuilder_ == null) {
        ensureSpokeTypeCountsIsMutable();
        spokeTypeCounts_.remove(index);
        onChanged();
      } else {
        spokeTypeCountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder
        getSpokeTypeCountsBuilder(int index) {
      return getSpokeTypeCountsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder
        getSpokeTypeCountsOrBuilder(int index) {
      if (spokeTypeCountsBuilder_ == null) {
        return spokeTypeCounts_.get(index);
      } else {
        return spokeTypeCountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder>
        getSpokeTypeCountsOrBuilderList() {
      if (spokeTypeCountsBuilder_ != null) {
        return spokeTypeCountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(spokeTypeCounts_);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder
        addSpokeTypeCountsBuilder() {
      return getSpokeTypeCountsFieldBuilder()
          .addBuilder(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder
        addSpokeTypeCountsBuilder(int index) {
      return getSpokeTypeCountsFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes of each type that are
     * associated with a specific hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount spoke_type_counts = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder>
        getSpokeTypeCountsBuilderList() {
      return getSpokeTypeCountsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder>
        getSpokeTypeCountsFieldBuilder() {
      if (spokeTypeCountsBuilder_ == null) {
        spokeTypeCountsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCount.Builder,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeTypeCountOrBuilder>(
                spokeTypeCounts_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        spokeTypeCounts_ = null;
      }
      return spokeTypeCountsBuilder_;
    }

    private java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount>
        spokeStateCounts_ = java.util.Collections.emptyList();

    private void ensureSpokeStateCountsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        spokeStateCounts_ =
            new java.util.ArrayList<
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount>(
                spokeStateCounts_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder>
        spokeStateCountsBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount>
        getSpokeStateCountsList() {
      if (spokeStateCountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(spokeStateCounts_);
      } else {
        return spokeStateCountsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public int getSpokeStateCountsCount() {
      if (spokeStateCountsBuilder_ == null) {
        return spokeStateCounts_.size();
      } else {
        return spokeStateCountsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount getSpokeStateCounts(
        int index) {
      if (spokeStateCountsBuilder_ == null) {
        return spokeStateCounts_.get(index);
      } else {
        return spokeStateCountsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSpokeStateCounts(
        int index, com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount value) {
      if (spokeStateCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.set(index, value);
        onChanged();
      } else {
        spokeStateCountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSpokeStateCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder
            builderForValue) {
      if (spokeStateCountsBuilder_ == null) {
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        spokeStateCountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateCounts(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount value) {
      if (spokeStateCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.add(value);
        onChanged();
      } else {
        spokeStateCountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateCounts(
        int index, com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount value) {
      if (spokeStateCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.add(index, value);
        onChanged();
      } else {
        spokeStateCountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateCounts(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder
            builderForValue) {
      if (spokeStateCountsBuilder_ == null) {
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.add(builderForValue.build());
        onChanged();
      } else {
        spokeStateCountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder
            builderForValue) {
      if (spokeStateCountsBuilder_ == null) {
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        spokeStateCountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addAllSpokeStateCounts(
        java.lang.Iterable<
                ? extends com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount>
            values) {
      if (spokeStateCountsBuilder_ == null) {
        ensureSpokeStateCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, spokeStateCounts_);
        onChanged();
      } else {
        spokeStateCountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearSpokeStateCounts() {
      if (spokeStateCountsBuilder_ == null) {
        spokeStateCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        spokeStateCountsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder removeSpokeStateCounts(int index) {
      if (spokeStateCountsBuilder_ == null) {
        ensureSpokeStateCountsIsMutable();
        spokeStateCounts_.remove(index);
        onChanged();
      } else {
        spokeStateCountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder
        getSpokeStateCountsBuilder(int index) {
      return getSpokeStateCountsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder
        getSpokeStateCountsOrBuilder(int index) {
      if (spokeStateCountsBuilder_ == null) {
        return spokeStateCounts_.get(index);
      } else {
        return spokeStateCountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder>
        getSpokeStateCountsOrBuilderList() {
      if (spokeStateCountsBuilder_ != null) {
        return spokeStateCountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(spokeStateCounts_);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder
        addSpokeStateCountsBuilder() {
      return getSpokeStateCountsFieldBuilder()
          .addBuilder(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder
        addSpokeStateCountsBuilder(int index) {
      return getSpokeStateCountsFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are in each state
     * and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount spoke_state_counts = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder>
        getSpokeStateCountsBuilderList() {
      return getSpokeStateCountsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder>
        getSpokeStateCountsFieldBuilder() {
      if (spokeStateCountsBuilder_ == null) {
        spokeStateCountsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCount.Builder,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateCountOrBuilder>(
                spokeStateCounts_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        spokeStateCounts_ = null;
      }
      return spokeStateCountsBuilder_;
    }

    private java.util.List<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount>
        spokeStateReasonCounts_ = java.util.Collections.emptyList();

    private void ensureSpokeStateReasonCountsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        spokeStateReasonCounts_ =
            new java.util.ArrayList<
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount>(
                spokeStateReasonCounts_);
        bitField0_ |= 0x00000004;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder>
        spokeStateReasonCountsBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount>
        getSpokeStateReasonCountsList() {
      if (spokeStateReasonCountsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(spokeStateReasonCounts_);
      } else {
        return spokeStateReasonCountsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public int getSpokeStateReasonCountsCount() {
      if (spokeStateReasonCountsBuilder_ == null) {
        return spokeStateReasonCounts_.size();
      } else {
        return spokeStateReasonCountsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
        getSpokeStateReasonCounts(int index) {
      if (spokeStateReasonCountsBuilder_ == null) {
        return spokeStateReasonCounts_.get(index);
      } else {
        return spokeStateReasonCountsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSpokeStateReasonCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount value) {
      if (spokeStateReasonCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.set(index, value);
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setSpokeStateReasonCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
            builderForValue) {
      if (spokeStateReasonCountsBuilder_ == null) {
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.set(index, builderForValue.build());
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateReasonCounts(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount value) {
      if (spokeStateReasonCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.add(value);
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateReasonCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount value) {
      if (spokeStateReasonCountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.add(index, value);
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateReasonCounts(
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
            builderForValue) {
      if (spokeStateReasonCountsBuilder_ == null) {
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.add(builderForValue.build());
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addSpokeStateReasonCounts(
        int index,
        com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
            builderForValue) {
      if (spokeStateReasonCountsBuilder_ == null) {
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.add(index, builderForValue.build());
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addAllSpokeStateReasonCounts(
        java.lang.Iterable<
                ? extends
                    com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount>
            values) {
      if (spokeStateReasonCountsBuilder_ == null) {
        ensureSpokeStateReasonCountsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, spokeStateReasonCounts_);
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearSpokeStateReasonCounts() {
      if (spokeStateReasonCountsBuilder_ == null) {
        spokeStateReasonCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder removeSpokeStateReasonCounts(int index) {
      if (spokeStateReasonCountsBuilder_ == null) {
        ensureSpokeStateReasonCountsIsMutable();
        spokeStateReasonCounts_.remove(index);
        onChanged();
      } else {
        spokeStateReasonCountsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
        getSpokeStateReasonCountsBuilder(int index) {
      return getSpokeStateReasonCountsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder
        getSpokeStateReasonCountsOrBuilder(int index) {
      if (spokeStateReasonCountsBuilder_ == null) {
        return spokeStateReasonCounts_.get(index);
      } else {
        return spokeStateReasonCountsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            ? extends
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder>
        getSpokeStateReasonCountsOrBuilderList() {
      if (spokeStateReasonCountsBuilder_ != null) {
        return spokeStateReasonCountsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(spokeStateReasonCounts_);
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
        addSpokeStateReasonCountsBuilder() {
      return getSpokeStateReasonCountsFieldBuilder()
          .addBuilder(
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder
        addSpokeStateReasonCountsBuilder(int index) {
      return getSpokeStateReasonCountsFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount
                  .getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Output only. Counts the number of spokes that are inactive for each
     * possible reason and associated with a given hub.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount spoke_state_reason_counts = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder>
        getSpokeStateReasonCountsBuilderList() {
      return getSpokeStateReasonCountsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder,
            com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCountOrBuilder>
        getSpokeStateReasonCountsFieldBuilder() {
      if (spokeStateReasonCountsBuilder_ == null) {
        spokeStateReasonCountsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount,
                com.google.cloud.networkconnectivity.v1.SpokeSummary.SpokeStateReasonCount.Builder,
                com.google.cloud.networkconnectivity.v1.SpokeSummary
                    .SpokeStateReasonCountOrBuilder>(
                spokeStateReasonCounts_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        spokeStateReasonCounts_ = null;
      }
      return spokeStateReasonCountsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.networkconnectivity.v1.SpokeSummary)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.networkconnectivity.v1.SpokeSummary)
  private static final com.google.cloud.networkconnectivity.v1.SpokeSummary DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.networkconnectivity.v1.SpokeSummary();
  }

  public static com.google.cloud.networkconnectivity.v1.SpokeSummary getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SpokeSummary> PARSER =
      new com.google.protobuf.AbstractParser<SpokeSummary>() {
        @java.lang.Override
        public SpokeSummary parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<SpokeSummary> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SpokeSummary> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.networkconnectivity.v1.SpokeSummary getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
