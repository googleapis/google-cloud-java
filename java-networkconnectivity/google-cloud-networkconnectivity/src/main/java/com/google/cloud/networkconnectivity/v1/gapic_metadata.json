{
  "schema": "1.0",
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "java",
  "protoPackage": "google.cloud.networkconnectivity.v1",
  "libraryPackage": "com.google.cloud.networkconnectivity.v1",
  "services": {
    "CrossNetworkAutomationService": {
      "clients": {
        "grpc": {
          "libraryClient": "CrossNetworkAutomationServiceClient",
          "rpcs": {
            "CreateServiceConnectionMap": {
              "methods": ["createServiceConnectionMapAsync", "createServiceConnectionMapAsync", "createServiceConnectionMapAsync", "createServiceConnectionMapOperationCallable", "createServiceConnectionMapCallable"]
            },
            "CreateServiceConnectionPolicy": {
              "methods": ["createServiceConnectionPolicyAsync", "createServiceConnectionPolicyAsync", "createServiceConnectionPolicyAsync", "createServiceConnectionPolicyOperationCallable", "createServiceConnectionPolicyCallable"]
            },
            "CreateServiceConnectionToken": {
              "methods": ["createServiceConnectionTokenAsync", "createServiceConnectionTokenAsync", "createServiceConnectionTokenAsync", "createServiceConnectionTokenOperationCallable", "createServiceConnectionTokenCallable"]
            },
            "DeleteServiceClass": {
              "methods": ["deleteServiceClassAsync", "deleteServiceClassAsync", "deleteServiceClassAsync", "deleteServiceClassOperationCallable", "deleteServiceClassCallable"]
            },
            "DeleteServiceConnectionMap": {
              "methods": ["deleteServiceConnectionMapAsync", "deleteServiceConnectionMapAsync", "deleteServiceConnectionMapAsync", "deleteServiceConnectionMapOperationCallable", "deleteServiceConnectionMapCallable"]
            },
            "DeleteServiceConnectionPolicy": {
              "methods": ["deleteServiceConnectionPolicyAsync", "deleteServiceConnectionPolicyAsync", "deleteServiceConnectionPolicyAsync", "deleteServiceConnectionPolicyOperationCallable", "deleteServiceConnectionPolicyCallable"]
            },
            "DeleteServiceConnectionToken": {
              "methods": ["deleteServiceConnectionTokenAsync", "deleteServiceConnectionTokenAsync", "deleteServiceConnectionTokenAsync", "deleteServiceConnectionTokenOperationCallable", "deleteServiceConnectionTokenCallable"]
            },
            "GetIamPolicy": {
              "methods": ["getIamPolicy", "getIamPolicyCallable"]
            },
            "GetLocation": {
              "methods": ["getLocation", "getLocationCallable"]
            },
            "GetServiceClass": {
              "methods": ["getServiceClass", "getServiceClass", "getServiceClass", "getServiceClassCallable"]
            },
            "GetServiceConnectionMap": {
              "methods": ["getServiceConnectionMap", "getServiceConnectionMap", "getServiceConnectionMap", "getServiceConnectionMapCallable"]
            },
            "GetServiceConnectionPolicy": {
              "methods": ["getServiceConnectionPolicy", "getServiceConnectionPolicy", "getServiceConnectionPolicy", "getServiceConnectionPolicyCallable"]
            },
            "GetServiceConnectionToken": {
              "methods": ["getServiceConnectionToken", "getServiceConnectionToken", "getServiceConnectionToken", "getServiceConnectionTokenCallable"]
            },
            "ListLocations": {
              "methods": ["listLocations", "listLocationsPagedCallable", "listLocationsCallable"]
            },
            "ListServiceClasses": {
              "methods": ["listServiceClasses", "listServiceClasses", "listServiceClasses", "listServiceClassesPagedCallable", "listServiceClassesCallable"]
            },
            "ListServiceConnectionMaps": {
              "methods": ["listServiceConnectionMaps", "listServiceConnectionMaps", "listServiceConnectionMaps", "listServiceConnectionMapsPagedCallable", "listServiceConnectionMapsCallable"]
            },
            "ListServiceConnectionPolicies": {
              "methods": ["listServiceConnectionPolicies", "listServiceConnectionPolicies", "listServiceConnectionPolicies", "listServiceConnectionPoliciesPagedCallable", "listServiceConnectionPoliciesCallable"]
            },
            "ListServiceConnectionTokens": {
              "methods": ["listServiceConnectionTokens", "listServiceConnectionTokens", "listServiceConnectionTokens", "listServiceConnectionTokensPagedCallable", "listServiceConnectionTokensCallable"]
            },
            "SetIamPolicy": {
              "methods": ["setIamPolicy", "setIamPolicyCallable"]
            },
            "TestIamPermissions": {
              "methods": ["testIamPermissions", "testIamPermissionsCallable"]
            },
            "UpdateServiceClass": {
              "methods": ["updateServiceClassAsync", "updateServiceClassAsync", "updateServiceClassOperationCallable", "updateServiceClassCallable"]
            },
            "UpdateServiceConnectionMap": {
              "methods": ["updateServiceConnectionMapAsync", "updateServiceConnectionMapAsync", "updateServiceConnectionMapOperationCallable", "updateServiceConnectionMapCallable"]
            },
            "UpdateServiceConnectionPolicy": {
              "methods": ["updateServiceConnectionPolicyAsync", "updateServiceConnectionPolicyAsync", "updateServiceConnectionPolicyOperationCallable", "updateServiceConnectionPolicyCallable"]
            }
          }
        }
      }
    },
    "DataTransferService": {
      "clients": {
        "grpc": {
          "libraryClient": "DataTransferServiceClient",
          "rpcs": {
            "CreateDestination": {
              "methods": ["createDestinationAsync", "createDestinationAsync", "createDestinationAsync", "createDestinationOperationCallable", "createDestinationCallable"]
            },
            "CreateMulticloudDataTransferConfig": {
              "methods": ["createMulticloudDataTransferConfigAsync", "createMulticloudDataTransferConfigAsync", "createMulticloudDataTransferConfigAsync", "createMulticloudDataTransferConfigOperationCallable", "createMulticloudDataTransferConfigCallable"]
            },
            "DeleteDestination": {
              "methods": ["deleteDestinationAsync", "deleteDestinationAsync", "deleteDestinationAsync", "deleteDestinationOperationCallable", "deleteDestinationCallable"]
            },
            "DeleteMulticloudDataTransferConfig": {
              "methods": ["deleteMulticloudDataTransferConfigAsync", "deleteMulticloudDataTransferConfigAsync", "deleteMulticloudDataTransferConfigAsync", "deleteMulticloudDataTransferConfigOperationCallable", "deleteMulticloudDataTransferConfigCallable"]
            },
            "GetDestination": {
              "methods": ["getDestination", "getDestination", "getDestination", "getDestinationCallable"]
            },
            "GetIamPolicy": {
              "methods": ["getIamPolicy", "getIamPolicyCallable"]
            },
            "GetLocation": {
              "methods": ["getLocation", "getLocationCallable"]
            },
            "GetMulticloudDataTransferConfig": {
              "methods": ["getMulticloudDataTransferConfig", "getMulticloudDataTransferConfig", "getMulticloudDataTransferConfig", "getMulticloudDataTransferConfigCallable"]
            },
            "GetMulticloudDataTransferSupportedService": {
              "methods": ["getMulticloudDataTransferSupportedService", "getMulticloudDataTransferSupportedService", "getMulticloudDataTransferSupportedService", "getMulticloudDataTransferSupportedServiceCallable"]
            },
            "ListDestinations": {
              "methods": ["listDestinations", "listDestinations", "listDestinations", "listDestinationsPagedCallable", "listDestinationsCallable"]
            },
            "ListLocations": {
              "methods": ["listLocations", "listLocationsPagedCallable", "listLocationsCallable"]
            },
            "ListMulticloudDataTransferConfigs": {
              "methods": ["listMulticloudDataTransferConfigs", "listMulticloudDataTransferConfigs", "listMulticloudDataTransferConfigs", "listMulticloudDataTransferConfigsPagedCallable", "listMulticloudDataTransferConfigsCallable"]
            },
            "ListMulticloudDataTransferSupportedServices": {
              "methods": ["listMulticloudDataTransferSupportedServices", "listMulticloudDataTransferSupportedServices", "listMulticloudDataTransferSupportedServices", "listMulticloudDataTransferSupportedServicesPagedCallable", "listMulticloudDataTransferSupportedServicesCallable"]
            },
            "SetIamPolicy": {
              "methods": ["setIamPolicy", "setIamPolicyCallable"]
            },
            "TestIamPermissions": {
              "methods": ["testIamPermissions", "testIamPermissionsCallable"]
            },
            "UpdateDestination": {
              "methods": ["updateDestinationAsync", "updateDestinationAsync", "updateDestinationOperationCallable", "updateDestinationCallable"]
            },
            "UpdateMulticloudDataTransferConfig": {
              "methods": ["updateMulticloudDataTransferConfigAsync", "updateMulticloudDataTransferConfigAsync", "updateMulticloudDataTransferConfigOperationCallable", "updateMulticloudDataTransferConfigCallable"]
            }
          }
        }
      }
    },
    "HubService": {
      "clients": {
        "grpc": {
          "libraryClient": "HubServiceClient",
          "rpcs": {
            "AcceptHubSpoke": {
              "methods": ["acceptHubSpokeAsync", "acceptHubSpokeAsync", "acceptHubSpokeAsync", "acceptHubSpokeAsync", "acceptHubSpokeAsync", "acceptHubSpokeOperationCallable", "acceptHubSpokeCallable"]
            },
            "AcceptSpokeUpdate": {
              "methods": ["acceptSpokeUpdateAsync", "acceptSpokeUpdateAsync", "acceptSpokeUpdateAsync", "acceptSpokeUpdateAsync", "acceptSpokeUpdateAsync", "acceptSpokeUpdateOperationCallable", "acceptSpokeUpdateCallable"]
            },
            "CreateHub": {
              "methods": ["createHubAsync", "createHubAsync", "createHubAsync", "createHubOperationCallable", "createHubCallable"]
            },
            "CreateSpoke": {
              "methods": ["createSpokeAsync", "createSpokeAsync", "createSpokeAsync", "createSpokeOperationCallable", "createSpokeCallable"]
            },
            "DeleteHub": {
              "methods": ["deleteHubAsync", "deleteHubAsync", "deleteHubAsync", "deleteHubOperationCallable", "deleteHubCallable"]
            },
            "DeleteSpoke": {
              "methods": ["deleteSpokeAsync", "deleteSpokeAsync", "deleteSpokeAsync", "deleteSpokeOperationCallable", "deleteSpokeCallable"]
            },
            "GetGroup": {
              "methods": ["getGroup", "getGroup", "getGroup", "getGroupCallable"]
            },
            "GetHub": {
              "methods": ["getHub", "getHub", "getHub", "getHubCallable"]
            },
            "GetIamPolicy": {
              "methods": ["getIamPolicy", "getIamPolicyCallable"]
            },
            "GetLocation": {
              "methods": ["getLocation", "getLocationCallable"]
            },
            "GetRoute": {
              "methods": ["getRoute", "getRoute", "getRoute", "getRouteCallable"]
            },
            "GetRouteTable": {
              "methods": ["getRouteTable", "getRouteTable", "getRouteTable", "getRouteTableCallable"]
            },
            "GetSpoke": {
              "methods": ["getSpoke", "getSpoke", "getSpoke", "getSpokeCallable"]
            },
            "ListGroups": {
              "methods": ["listGroups", "listGroups", "listGroups", "listGroupsPagedCallable", "listGroupsCallable"]
            },
            "ListHubSpokes": {
              "methods": ["listHubSpokes", "listHubSpokes", "listHubSpokes", "listHubSpokesPagedCallable", "listHubSpokesCallable"]
            },
            "ListHubs": {
              "methods": ["listHubs", "listHubs", "listHubs", "listHubsPagedCallable", "listHubsCallable"]
            },
            "ListLocations": {
              "methods": ["listLocations", "listLocationsPagedCallable", "listLocationsCallable"]
            },
            "ListRouteTables": {
              "methods": ["listRouteTables", "listRouteTables", "listRouteTables", "listRouteTablesPagedCallable", "listRouteTablesCallable"]
            },
            "ListRoutes": {
              "methods": ["listRoutes", "listRoutes", "listRoutes", "listRoutesPagedCallable", "listRoutesCallable"]
            },
            "ListSpokes": {
              "methods": ["listSpokes", "listSpokes", "listSpokes", "listSpokesPagedCallable", "listSpokesCallable"]
            },
            "QueryHubStatus": {
              "methods": ["queryHubStatus", "queryHubStatus", "queryHubStatus", "queryHubStatusPagedCallable", "queryHubStatusCallable"]
            },
            "RejectHubSpoke": {
              "methods": ["rejectHubSpokeAsync", "rejectHubSpokeAsync", "rejectHubSpokeAsync", "rejectHubSpokeAsync", "rejectHubSpokeAsync", "rejectHubSpokeOperationCallable", "rejectHubSpokeCallable"]
            },
            "RejectSpokeUpdate": {
              "methods": ["rejectSpokeUpdateAsync", "rejectSpokeUpdateAsync", "rejectSpokeUpdateAsync", "rejectSpokeUpdateAsync", "rejectSpokeUpdateAsync", "rejectSpokeUpdateOperationCallable", "rejectSpokeUpdateCallable"]
            },
            "SetIamPolicy": {
              "methods": ["setIamPolicy", "setIamPolicyCallable"]
            },
            "TestIamPermissions": {
              "methods": ["testIamPermissions", "testIamPermissionsCallable"]
            },
            "UpdateGroup": {
              "methods": ["updateGroupAsync", "updateGroupAsync", "updateGroupOperationCallable", "updateGroupCallable"]
            },
            "UpdateHub": {
              "methods": ["updateHubAsync", "updateHubAsync", "updateHubOperationCallable", "updateHubCallable"]
            },
            "UpdateSpoke": {
              "methods": ["updateSpokeAsync", "updateSpokeAsync", "updateSpokeOperationCallable", "updateSpokeCallable"]
            }
          }
        }
      }
    },
    "InternalRangeService": {
      "clients": {
        "grpc": {
          "libraryClient": "InternalRangeServiceClient",
          "rpcs": {
            "CreateInternalRange": {
              "methods": ["createInternalRangeAsync", "createInternalRangeAsync", "createInternalRangeAsync", "createInternalRangeOperationCallable", "createInternalRangeCallable"]
            },
            "DeleteInternalRange": {
              "methods": ["deleteInternalRangeAsync", "deleteInternalRangeAsync", "deleteInternalRangeAsync", "deleteInternalRangeOperationCallable", "deleteInternalRangeCallable"]
            },
            "GetIamPolicy": {
              "methods": ["getIamPolicy", "getIamPolicyCallable"]
            },
            "GetInternalRange": {
              "methods": ["getInternalRange", "getInternalRange", "getInternalRange", "getInternalRangeCallable"]
            },
            "GetLocation": {
              "methods": ["getLocation", "getLocationCallable"]
            },
            "ListInternalRanges": {
              "methods": ["listInternalRanges", "listInternalRanges", "listInternalRanges", "listInternalRangesPagedCallable", "listInternalRangesCallable"]
            },
            "ListLocations": {
              "methods": ["listLocations", "listLocationsPagedCallable", "listLocationsCallable"]
            },
            "SetIamPolicy": {
              "methods": ["setIamPolicy", "setIamPolicyCallable"]
            },
            "TestIamPermissions": {
              "methods": ["testIamPermissions", "testIamPermissionsCallable"]
            },
            "UpdateInternalRange": {
              "methods": ["updateInternalRangeAsync", "updateInternalRangeAsync", "updateInternalRangeOperationCallable", "updateInternalRangeCallable"]
            }
          }
        }
      }
    },
    "PolicyBasedRoutingService": {
      "clients": {
        "grpc": {
          "libraryClient": "PolicyBasedRoutingServiceClient",
          "rpcs": {
            "CreatePolicyBasedRoute": {
              "methods": ["createPolicyBasedRouteAsync", "createPolicyBasedRouteAsync", "createPolicyBasedRouteAsync", "createPolicyBasedRouteOperationCallable", "createPolicyBasedRouteCallable"]
            },
            "DeletePolicyBasedRoute": {
              "methods": ["deletePolicyBasedRouteAsync", "deletePolicyBasedRouteAsync", "deletePolicyBasedRouteAsync", "deletePolicyBasedRouteOperationCallable", "deletePolicyBasedRouteCallable"]
            },
            "GetIamPolicy": {
              "methods": ["getIamPolicy", "getIamPolicyCallable"]
            },
            "GetLocation": {
              "methods": ["getLocation", "getLocationCallable"]
            },
            "GetPolicyBasedRoute": {
              "methods": ["getPolicyBasedRoute", "getPolicyBasedRoute", "getPolicyBasedRoute", "getPolicyBasedRouteCallable"]
            },
            "ListLocations": {
              "methods": ["listLocations", "listLocationsPagedCallable", "listLocationsCallable"]
            },
            "ListPolicyBasedRoutes": {
              "methods": ["listPolicyBasedRoutes", "listPolicyBasedRoutes", "listPolicyBasedRoutes", "listPolicyBasedRoutesPagedCallable", "listPolicyBasedRoutesCallable"]
            },
            "SetIamPolicy": {
              "methods": ["setIamPolicy", "setIamPolicyCallable"]
            },
            "TestIamPermissions": {
              "methods": ["testIamPermissions", "testIamPermissionsCallable"]
            }
          }
        }
      }
    }
  }
}