/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/privatecatalog/v1beta1/private_catalog.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.privatecatalog.v1beta1;

/**
 *
 *
 * <pre>
 * Defines how to access a Git Source.
 * </pre>
 *
 * Protobuf type {@code google.cloud.privatecatalog.v1beta1.GitSource}
 */
public final class GitSource extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.privatecatalog.v1beta1.GitSource)
    GitSourceOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GitSource.newBuilder() to construct.
  private GitSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GitSource() {
    repo_ = "";
    dir_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GitSource();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.privatecatalog.v1beta1.PrivateCatalogProto
        .internal_static_google_cloud_privatecatalog_v1beta1_GitSource_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.privatecatalog.v1beta1.PrivateCatalogProto
        .internal_static_google_cloud_privatecatalog_v1beta1_GitSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.privatecatalog.v1beta1.GitSource.class,
            com.google.cloud.privatecatalog.v1beta1.GitSource.Builder.class);
  }

  private int refCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object ref_;

  public enum RefCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    COMMIT(3),
    BRANCH(4),
    TAG(5),
    REF_NOT_SET(0);
    private final int value;

    private RefCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RefCase valueOf(int value) {
      return forNumber(value);
    }

    public static RefCase forNumber(int value) {
      switch (value) {
        case 3:
          return COMMIT;
        case 4:
          return BRANCH;
        case 5:
          return TAG;
        case 0:
          return REF_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public RefCase getRefCase() {
    return RefCase.forNumber(refCase_);
  }

  public static final int REPO_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object repo_ = "";
  /**
   *
   *
   * <pre>
   * Location of the Git repo to build.
   * </pre>
   *
   * <code>string repo = 1;</code>
   *
   * @return The repo.
   */
  @java.lang.Override
  public java.lang.String getRepo() {
    java.lang.Object ref = repo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      repo_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Location of the Git repo to build.
   * </pre>
   *
   * <code>string repo = 1;</code>
   *
   * @return The bytes for repo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRepoBytes() {
    java.lang.Object ref = repo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      repo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIR_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object dir_ = "";
  /**
   *
   *
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   *
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 2;</code>
   *
   * @return The dir.
   */
  @java.lang.Override
  public java.lang.String getDir() {
    java.lang.Object ref = dir_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dir_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   *
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 2;</code>
   *
   * @return The bytes for dir.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDirBytes() {
    java.lang.Object ref = dir_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      dir_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMMIT_FIELD_NUMBER = 3;
  /**
   *
   *
   * <pre>
   * The revision commit to use.
   * </pre>
   *
   * <code>string commit = 3;</code>
   *
   * @return Whether the commit field is set.
   */
  public boolean hasCommit() {
    return refCase_ == 3;
  }
  /**
   *
   *
   * <pre>
   * The revision commit to use.
   * </pre>
   *
   * <code>string commit = 3;</code>
   *
   * @return The commit.
   */
  public java.lang.String getCommit() {
    java.lang.Object ref = "";
    if (refCase_ == 3) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (refCase_ == 3) {
        ref_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The revision commit to use.
   * </pre>
   *
   * <code>string commit = 3;</code>
   *
   * @return The bytes for commit.
   */
  public com.google.protobuf.ByteString getCommitBytes() {
    java.lang.Object ref = "";
    if (refCase_ == 3) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (refCase_ == 3) {
        ref_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BRANCH_FIELD_NUMBER = 4;
  /**
   *
   *
   * <pre>
   * The revision branch to use.
   * </pre>
   *
   * <code>string branch = 4;</code>
   *
   * @return Whether the branch field is set.
   */
  public boolean hasBranch() {
    return refCase_ == 4;
  }
  /**
   *
   *
   * <pre>
   * The revision branch to use.
   * </pre>
   *
   * <code>string branch = 4;</code>
   *
   * @return The branch.
   */
  public java.lang.String getBranch() {
    java.lang.Object ref = "";
    if (refCase_ == 4) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (refCase_ == 4) {
        ref_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The revision branch to use.
   * </pre>
   *
   * <code>string branch = 4;</code>
   *
   * @return The bytes for branch.
   */
  public com.google.protobuf.ByteString getBranchBytes() {
    java.lang.Object ref = "";
    if (refCase_ == 4) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (refCase_ == 4) {
        ref_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TAG_FIELD_NUMBER = 5;
  /**
   *
   *
   * <pre>
   * The revision tag to use.
   * </pre>
   *
   * <code>string tag = 5;</code>
   *
   * @return Whether the tag field is set.
   */
  public boolean hasTag() {
    return refCase_ == 5;
  }
  /**
   *
   *
   * <pre>
   * The revision tag to use.
   * </pre>
   *
   * <code>string tag = 5;</code>
   *
   * @return The tag.
   */
  public java.lang.String getTag() {
    java.lang.Object ref = "";
    if (refCase_ == 5) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (refCase_ == 5) {
        ref_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The revision tag to use.
   * </pre>
   *
   * <code>string tag = 5;</code>
   *
   * @return The bytes for tag.
   */
  public com.google.protobuf.ByteString getTagBytes() {
    java.lang.Object ref = "";
    if (refCase_ == 5) {
      ref = ref_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (refCase_ == 5) {
        ref_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(repo_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, repo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dir_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dir_);
    }
    if (refCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ref_);
    }
    if (refCase_ == 4) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ref_);
    }
    if (refCase_ == 5) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ref_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(repo_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, repo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dir_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dir_);
    }
    if (refCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ref_);
    }
    if (refCase_ == 4) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ref_);
    }
    if (refCase_ == 5) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ref_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.privatecatalog.v1beta1.GitSource)) {
      return super.equals(obj);
    }
    com.google.cloud.privatecatalog.v1beta1.GitSource other =
        (com.google.cloud.privatecatalog.v1beta1.GitSource) obj;

    if (!getRepo().equals(other.getRepo())) return false;
    if (!getDir().equals(other.getDir())) return false;
    if (!getRefCase().equals(other.getRefCase())) return false;
    switch (refCase_) {
      case 3:
        if (!getCommit().equals(other.getCommit())) return false;
        break;
      case 4:
        if (!getBranch().equals(other.getBranch())) return false;
        break;
      case 5:
        if (!getTag().equals(other.getTag())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REPO_FIELD_NUMBER;
    hash = (53 * hash) + getRepo().hashCode();
    hash = (37 * hash) + DIR_FIELD_NUMBER;
    hash = (53 * hash) + getDir().hashCode();
    switch (refCase_) {
      case 3:
        hash = (37 * hash) + COMMIT_FIELD_NUMBER;
        hash = (53 * hash) + getCommit().hashCode();
        break;
      case 4:
        hash = (37 * hash) + BRANCH_FIELD_NUMBER;
        hash = (53 * hash) + getBranch().hashCode();
        break;
      case 5:
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.privatecatalog.v1beta1.GitSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Defines how to access a Git Source.
   * </pre>
   *
   * Protobuf type {@code google.cloud.privatecatalog.v1beta1.GitSource}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.privatecatalog.v1beta1.GitSource)
      com.google.cloud.privatecatalog.v1beta1.GitSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.privatecatalog.v1beta1.PrivateCatalogProto
          .internal_static_google_cloud_privatecatalog_v1beta1_GitSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.privatecatalog.v1beta1.PrivateCatalogProto
          .internal_static_google_cloud_privatecatalog_v1beta1_GitSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.privatecatalog.v1beta1.GitSource.class,
              com.google.cloud.privatecatalog.v1beta1.GitSource.Builder.class);
    }

    // Construct using com.google.cloud.privatecatalog.v1beta1.GitSource.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      repo_ = "";
      dir_ = "";
      refCase_ = 0;
      ref_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.privatecatalog.v1beta1.PrivateCatalogProto
          .internal_static_google_cloud_privatecatalog_v1beta1_GitSource_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.privatecatalog.v1beta1.GitSource getDefaultInstanceForType() {
      return com.google.cloud.privatecatalog.v1beta1.GitSource.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.privatecatalog.v1beta1.GitSource build() {
      com.google.cloud.privatecatalog.v1beta1.GitSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.privatecatalog.v1beta1.GitSource buildPartial() {
      com.google.cloud.privatecatalog.v1beta1.GitSource result =
          new com.google.cloud.privatecatalog.v1beta1.GitSource(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.privatecatalog.v1beta1.GitSource result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.repo_ = repo_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.dir_ = dir_;
      }
    }

    private void buildPartialOneofs(com.google.cloud.privatecatalog.v1beta1.GitSource result) {
      result.refCase_ = refCase_;
      result.ref_ = this.ref_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.privatecatalog.v1beta1.GitSource) {
        return mergeFrom((com.google.cloud.privatecatalog.v1beta1.GitSource) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.privatecatalog.v1beta1.GitSource other) {
      if (other == com.google.cloud.privatecatalog.v1beta1.GitSource.getDefaultInstance())
        return this;
      if (!other.getRepo().isEmpty()) {
        repo_ = other.repo_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getDir().isEmpty()) {
        dir_ = other.dir_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      switch (other.getRefCase()) {
        case COMMIT:
          {
            refCase_ = 3;
            ref_ = other.ref_;
            onChanged();
            break;
          }
        case BRANCH:
          {
            refCase_ = 4;
            ref_ = other.ref_;
            onChanged();
            break;
          }
        case TAG:
          {
            refCase_ = 5;
            ref_ = other.ref_;
            onChanged();
            break;
          }
        case REF_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                repo_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                dir_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                refCase_ = 3;
                ref_ = s;
                break;
              } // case 26
            case 34:
              {
                java.lang.String s = input.readStringRequireUtf8();
                refCase_ = 4;
                ref_ = s;
                break;
              } // case 34
            case 42:
              {
                java.lang.String s = input.readStringRequireUtf8();
                refCase_ = 5;
                ref_ = s;
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int refCase_ = 0;
    private java.lang.Object ref_;

    public RefCase getRefCase() {
      return RefCase.forNumber(refCase_);
    }

    public Builder clearRef() {
      refCase_ = 0;
      ref_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object repo_ = "";
    /**
     *
     *
     * <pre>
     * Location of the Git repo to build.
     * </pre>
     *
     * <code>string repo = 1;</code>
     *
     * @return The repo.
     */
    public java.lang.String getRepo() {
      java.lang.Object ref = repo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        repo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Location of the Git repo to build.
     * </pre>
     *
     * <code>string repo = 1;</code>
     *
     * @return The bytes for repo.
     */
    public com.google.protobuf.ByteString getRepoBytes() {
      java.lang.Object ref = repo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        repo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Location of the Git repo to build.
     * </pre>
     *
     * <code>string repo = 1;</code>
     *
     * @param value The repo to set.
     * @return This builder for chaining.
     */
    public Builder setRepo(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      repo_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Location of the Git repo to build.
     * </pre>
     *
     * <code>string repo = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRepo() {
      repo_ = getDefaultInstance().getRepo();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Location of the Git repo to build.
     * </pre>
     *
     * <code>string repo = 1;</code>
     *
     * @param value The bytes for repo to set.
     * @return This builder for chaining.
     */
    public Builder setRepoBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      repo_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object dir_ = "";
    /**
     *
     *
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     *
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 2;</code>
     *
     * @return The dir.
     */
    public java.lang.String getDir() {
      java.lang.Object ref = dir_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dir_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     *
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 2;</code>
     *
     * @return The bytes for dir.
     */
    public com.google.protobuf.ByteString getDirBytes() {
      java.lang.Object ref = dir_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        dir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     *
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 2;</code>
     *
     * @param value The dir to set.
     * @return This builder for chaining.
     */
    public Builder setDir(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      dir_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     *
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDir() {
      dir_ = getDefaultInstance().getDir();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     *
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 2;</code>
     *
     * @param value The bytes for dir to set.
     * @return This builder for chaining.
     */
    public Builder setDirBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      dir_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The revision commit to use.
     * </pre>
     *
     * <code>string commit = 3;</code>
     *
     * @return Whether the commit field is set.
     */
    @java.lang.Override
    public boolean hasCommit() {
      return refCase_ == 3;
    }
    /**
     *
     *
     * <pre>
     * The revision commit to use.
     * </pre>
     *
     * <code>string commit = 3;</code>
     *
     * @return The commit.
     */
    @java.lang.Override
    public java.lang.String getCommit() {
      java.lang.Object ref = "";
      if (refCase_ == 3) {
        ref = ref_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (refCase_ == 3) {
          ref_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The revision commit to use.
     * </pre>
     *
     * <code>string commit = 3;</code>
     *
     * @return The bytes for commit.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCommitBytes() {
      java.lang.Object ref = "";
      if (refCase_ == 3) {
        ref = ref_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (refCase_ == 3) {
          ref_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The revision commit to use.
     * </pre>
     *
     * <code>string commit = 3;</code>
     *
     * @param value The commit to set.
     * @return This builder for chaining.
     */
    public Builder setCommit(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      refCase_ = 3;
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The revision commit to use.
     * </pre>
     *
     * <code>string commit = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCommit() {
      if (refCase_ == 3) {
        refCase_ = 0;
        ref_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The revision commit to use.
     * </pre>
     *
     * <code>string commit = 3;</code>
     *
     * @param value The bytes for commit to set.
     * @return This builder for chaining.
     */
    public Builder setCommitBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      refCase_ = 3;
      ref_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The revision branch to use.
     * </pre>
     *
     * <code>string branch = 4;</code>
     *
     * @return Whether the branch field is set.
     */
    @java.lang.Override
    public boolean hasBranch() {
      return refCase_ == 4;
    }
    /**
     *
     *
     * <pre>
     * The revision branch to use.
     * </pre>
     *
     * <code>string branch = 4;</code>
     *
     * @return The branch.
     */
    @java.lang.Override
    public java.lang.String getBranch() {
      java.lang.Object ref = "";
      if (refCase_ == 4) {
        ref = ref_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (refCase_ == 4) {
          ref_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The revision branch to use.
     * </pre>
     *
     * <code>string branch = 4;</code>
     *
     * @return The bytes for branch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBranchBytes() {
      java.lang.Object ref = "";
      if (refCase_ == 4) {
        ref = ref_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (refCase_ == 4) {
          ref_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The revision branch to use.
     * </pre>
     *
     * <code>string branch = 4;</code>
     *
     * @param value The branch to set.
     * @return This builder for chaining.
     */
    public Builder setBranch(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      refCase_ = 4;
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The revision branch to use.
     * </pre>
     *
     * <code>string branch = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBranch() {
      if (refCase_ == 4) {
        refCase_ = 0;
        ref_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The revision branch to use.
     * </pre>
     *
     * <code>string branch = 4;</code>
     *
     * @param value The bytes for branch to set.
     * @return This builder for chaining.
     */
    public Builder setBranchBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      refCase_ = 4;
      ref_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The revision tag to use.
     * </pre>
     *
     * <code>string tag = 5;</code>
     *
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return refCase_ == 5;
    }
    /**
     *
     *
     * <pre>
     * The revision tag to use.
     * </pre>
     *
     * <code>string tag = 5;</code>
     *
     * @return The tag.
     */
    @java.lang.Override
    public java.lang.String getTag() {
      java.lang.Object ref = "";
      if (refCase_ == 5) {
        ref = ref_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (refCase_ == 5) {
          ref_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The revision tag to use.
     * </pre>
     *
     * <code>string tag = 5;</code>
     *
     * @return The bytes for tag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTagBytes() {
      java.lang.Object ref = "";
      if (refCase_ == 5) {
        ref = ref_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (refCase_ == 5) {
          ref_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The revision tag to use.
     * </pre>
     *
     * <code>string tag = 5;</code>
     *
     * @param value The tag to set.
     * @return This builder for chaining.
     */
    public Builder setTag(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      refCase_ = 5;
      ref_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The revision tag to use.
     * </pre>
     *
     * <code>string tag = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTag() {
      if (refCase_ == 5) {
        refCase_ = 0;
        ref_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The revision tag to use.
     * </pre>
     *
     * <code>string tag = 5;</code>
     *
     * @param value The bytes for tag to set.
     * @return This builder for chaining.
     */
    public Builder setTagBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      refCase_ = 5;
      ref_ = value;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.privatecatalog.v1beta1.GitSource)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.privatecatalog.v1beta1.GitSource)
  private static final com.google.cloud.privatecatalog.v1beta1.GitSource DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.privatecatalog.v1beta1.GitSource();
  }

  public static com.google.cloud.privatecatalog.v1beta1.GitSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GitSource> PARSER =
      new com.google.protobuf.AbstractParser<GitSource>() {
        @java.lang.Override
        public GitSource parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GitSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GitSource> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.privatecatalog.v1beta1.GitSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
