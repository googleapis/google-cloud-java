/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/security/privateca/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.security.privateca.v1;

public interface CertificateConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.security.privateca.v1.CertificateConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Specifies some of the values in a certificate that are related to
   * the subject.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig subject_config = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the subjectConfig field is set.
   */
  boolean hasSubjectConfig();
  /**
   *
   *
   * <pre>
   * Required. Specifies some of the values in a certificate that are related to
   * the subject.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig subject_config = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The subjectConfig.
   */
  com.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig getSubjectConfig();
  /**
   *
   *
   * <pre>
   * Required. Specifies some of the values in a certificate that are related to
   * the subject.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig subject_config = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfigOrBuilder
      getSubjectConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. Describes how some of the technical X.509 fields in a certificate
   * should be populated.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.X509Parameters x509_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the x509Config field is set.
   */
  boolean hasX509Config();
  /**
   *
   *
   * <pre>
   * Required. Describes how some of the technical X.509 fields in a certificate
   * should be populated.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.X509Parameters x509_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The x509Config.
   */
  com.google.cloud.security.privateca.v1.X509Parameters getX509Config();
  /**
   *
   *
   * <pre>
   * Required. Describes how some of the technical X.509 fields in a certificate
   * should be populated.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.X509Parameters x509_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.security.privateca.v1.X509ParametersOrBuilder getX509ConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. The public key that corresponds to this config. This is, for
   * example, used when issuing
   * [Certificates][google.cloud.security.privateca.v1.Certificate], but not
   * when creating a self-signed
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * or
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * CSR.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.PublicKey public_key = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the publicKey field is set.
   */
  boolean hasPublicKey();
  /**
   *
   *
   * <pre>
   * Optional. The public key that corresponds to this config. This is, for
   * example, used when issuing
   * [Certificates][google.cloud.security.privateca.v1.Certificate], but not
   * when creating a self-signed
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * or
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * CSR.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.PublicKey public_key = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The publicKey.
   */
  com.google.cloud.security.privateca.v1.PublicKey getPublicKey();
  /**
   *
   *
   * <pre>
   * Optional. The public key that corresponds to this config. This is, for
   * example, used when issuing
   * [Certificates][google.cloud.security.privateca.v1.Certificate], but not
   * when creating a self-signed
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * or
   * [CertificateAuthority][google.cloud.security.privateca.v1.CertificateAuthority]
   * CSR.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.PublicKey public_key = 3 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.security.privateca.v1.PublicKeyOrBuilder getPublicKeyOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. When specified this provides a custom SKI to be used in the
   * certificate. This should only be used to maintain a SKI of an existing CA
   * originally created outside CA service, which was not generated using method
   * (1) described in RFC 5280 section 4.2.1.2.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.CertificateConfig.KeyId subject_key_id = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the subjectKeyId field is set.
   */
  boolean hasSubjectKeyId();
  /**
   *
   *
   * <pre>
   * Optional. When specified this provides a custom SKI to be used in the
   * certificate. This should only be used to maintain a SKI of an existing CA
   * originally created outside CA service, which was not generated using method
   * (1) described in RFC 5280 section 4.2.1.2.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.CertificateConfig.KeyId subject_key_id = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The subjectKeyId.
   */
  com.google.cloud.security.privateca.v1.CertificateConfig.KeyId getSubjectKeyId();
  /**
   *
   *
   * <pre>
   * Optional. When specified this provides a custom SKI to be used in the
   * certificate. This should only be used to maintain a SKI of an existing CA
   * originally created outside CA service, which was not generated using method
   * (1) described in RFC 5280 section 4.2.1.2.
   * </pre>
   *
   * <code>
   * .google.cloud.security.privateca.v1.CertificateConfig.KeyId subject_key_id = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.security.privateca.v1.CertificateConfig.KeyIdOrBuilder
      getSubjectKeyIdOrBuilder();
}
