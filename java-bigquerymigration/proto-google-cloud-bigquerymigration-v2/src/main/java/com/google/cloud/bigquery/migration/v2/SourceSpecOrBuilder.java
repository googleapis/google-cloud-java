/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/bigquery/migration/v2/translation_details.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.bigquery.migration.v2;

public interface SourceSpecOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.bigquery.migration.v2.SourceSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The base URI for all files to be read in as sources for translation.
   * </pre>
   *
   * <code>string base_uri = 1;</code>
   *
   * @return Whether the baseUri field is set.
   */
  boolean hasBaseUri();
  /**
   *
   *
   * <pre>
   * The base URI for all files to be read in as sources for translation.
   * </pre>
   *
   * <code>string base_uri = 1;</code>
   *
   * @return The baseUri.
   */
  java.lang.String getBaseUri();
  /**
   *
   *
   * <pre>
   * The base URI for all files to be read in as sources for translation.
   * </pre>
   *
   * <code>string base_uri = 1;</code>
   *
   * @return The bytes for baseUri.
   */
  com.google.protobuf.ByteString getBaseUriBytes();

  /**
   *
   *
   * <pre>
   * Source literal.
   * </pre>
   *
   * <code>.google.cloud.bigquery.migration.v2.Literal literal = 2;</code>
   *
   * @return Whether the literal field is set.
   */
  boolean hasLiteral();
  /**
   *
   *
   * <pre>
   * Source literal.
   * </pre>
   *
   * <code>.google.cloud.bigquery.migration.v2.Literal literal = 2;</code>
   *
   * @return The literal.
   */
  com.google.cloud.bigquery.migration.v2.Literal getLiteral();
  /**
   *
   *
   * <pre>
   * Source literal.
   * </pre>
   *
   * <code>.google.cloud.bigquery.migration.v2.Literal literal = 2;</code>
   */
  com.google.cloud.bigquery.migration.v2.LiteralOrBuilder getLiteralOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. The optional field to specify the encoding of the sql bytes.
   * </pre>
   *
   * <code>string encoding = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The encoding.
   */
  java.lang.String getEncoding();
  /**
   *
   *
   * <pre>
   * Optional. The optional field to specify the encoding of the sql bytes.
   * </pre>
   *
   * <code>string encoding = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for encoding.
   */
  com.google.protobuf.ByteString getEncodingBytes();

  com.google.cloud.bigquery.migration.v2.SourceSpec.SourceCase getSourceCase();
}
