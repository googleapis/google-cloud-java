/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/developerconnect/v1/developer_connect.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.developerconnect.v1;

public interface FetchAccessTokenResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.developerconnect.v1.FetchAccessTokenResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The token content.
   * </pre>
   *
   * <code>string token = 1;</code>
   *
   * @return The token.
   */
  java.lang.String getToken();

  /**
   *
   *
   * <pre>
   * The token content.
   * </pre>
   *
   * <code>string token = 1;</code>
   *
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString getTokenBytes();

  /**
   *
   *
   * <pre>
   * Expiration timestamp. Can be empty if unknown or non-expiring.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_time = 2;</code>
   *
   * @return Whether the expirationTime field is set.
   */
  boolean hasExpirationTime();

  /**
   *
   *
   * <pre>
   * Expiration timestamp. Can be empty if unknown or non-expiring.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_time = 2;</code>
   *
   * @return The expirationTime.
   */
  com.google.protobuf.Timestamp getExpirationTime();

  /**
   *
   *
   * <pre>
   * Expiration timestamp. Can be empty if unknown or non-expiring.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpirationTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * The scopes of the access token.
   * </pre>
   *
   * <code>repeated string scopes = 3;</code>
   *
   * @return A list containing the scopes.
   */
  java.util.List<java.lang.String> getScopesList();

  /**
   *
   *
   * <pre>
   * The scopes of the access token.
   * </pre>
   *
   * <code>repeated string scopes = 3;</code>
   *
   * @return The count of scopes.
   */
  int getScopesCount();

  /**
   *
   *
   * <pre>
   * The scopes of the access token.
   * </pre>
   *
   * <code>repeated string scopes = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The scopes at the given index.
   */
  java.lang.String getScopes(int index);

  /**
   *
   *
   * <pre>
   * The scopes of the access token.
   * </pre>
   *
   * <code>repeated string scopes = 3;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the scopes at the given index.
   */
  com.google.protobuf.ByteString getScopesBytes(int index);

  /**
   *
   *
   * <pre>
   * The error resulted from exchanging OAuth tokens from the service provider.
   * </pre>
   *
   * <code>.google.cloud.developerconnect.v1.ExchangeError exchange_error = 4;</code>
   *
   * @return Whether the exchangeError field is set.
   */
  boolean hasExchangeError();

  /**
   *
   *
   * <pre>
   * The error resulted from exchanging OAuth tokens from the service provider.
   * </pre>
   *
   * <code>.google.cloud.developerconnect.v1.ExchangeError exchange_error = 4;</code>
   *
   * @return The exchangeError.
   */
  com.google.cloud.developerconnect.v1.ExchangeError getExchangeError();

  /**
   *
   *
   * <pre>
   * The error resulted from exchanging OAuth tokens from the service provider.
   * </pre>
   *
   * <code>.google.cloud.developerconnect.v1.ExchangeError exchange_error = 4;</code>
   */
  com.google.cloud.developerconnect.v1.ExchangeErrorOrBuilder getExchangeErrorOrBuilder();
}
