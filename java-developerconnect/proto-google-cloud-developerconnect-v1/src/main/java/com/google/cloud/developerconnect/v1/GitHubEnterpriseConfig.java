/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/developerconnect/v1/developer_connect.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.developerconnect.v1;

/**
 *
 *
 * <pre>
 * Configuration for connections to an instance of GitHub Enterprise.
 * </pre>
 *
 * Protobuf type {@code google.cloud.developerconnect.v1.GitHubEnterpriseConfig}
 */
public final class GitHubEnterpriseConfig extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.developerconnect.v1.GitHubEnterpriseConfig)
    GitHubEnterpriseConfigOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GitHubEnterpriseConfig.newBuilder() to construct.
  private GitHubEnterpriseConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GitHubEnterpriseConfig() {
    hostUri_ = "";
    appSlug_ = "";
    privateKeySecretVersion_ = "";
    webhookSecretSecretVersion_ = "";
    installationUri_ = "";
    serverVersion_ = "";
    sslCaCertificate_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GitHubEnterpriseConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.developerconnect.v1.DeveloperConnectProto
        .internal_static_google_cloud_developerconnect_v1_GitHubEnterpriseConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.developerconnect.v1.DeveloperConnectProto
        .internal_static_google_cloud_developerconnect_v1_GitHubEnterpriseConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.class,
            com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.Builder.class);
  }

  private int bitField0_;
  public static final int HOST_URI_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object hostUri_ = "";
  /**
   *
   *
   * <pre>
   * Required. The URI of the GitHub Enterprise host this connection is for.
   * </pre>
   *
   * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The hostUri.
   */
  @java.lang.Override
  public java.lang.String getHostUri() {
    java.lang.Object ref = hostUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hostUri_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The URI of the GitHub Enterprise host this connection is for.
   * </pre>
   *
   * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for hostUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getHostUriBytes() {
    java.lang.Object ref = hostUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      hostUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APP_ID_FIELD_NUMBER = 2;
  private long appId_ = 0L;
  /**
   *
   *
   * <pre>
   * Optional. ID of the GitHub App created from the manifest.
   * </pre>
   *
   * <code>int64 app_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The appId.
   */
  @java.lang.Override
  public long getAppId() {
    return appId_;
  }

  public static final int APP_SLUG_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object appSlug_ = "";
  /**
   *
   *
   * <pre>
   * Output only. The URL-friendly name of the GitHub App.
   * </pre>
   *
   * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The appSlug.
   */
  @java.lang.Override
  public java.lang.String getAppSlug() {
    java.lang.Object ref = appSlug_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      appSlug_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. The URL-friendly name of the GitHub App.
   * </pre>
   *
   * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for appSlug.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAppSlugBytes() {
    java.lang.Object ref = appSlug_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      appSlug_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRIVATE_KEY_SECRET_VERSION_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object privateKeySecretVersion_ = "";
  /**
   *
   *
   * <pre>
   * Optional. SecretManager resource containing the private key of the GitHub
   * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
   * </pre>
   *
   * <code>
   * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The privateKeySecretVersion.
   */
  @java.lang.Override
  public java.lang.String getPrivateKeySecretVersion() {
    java.lang.Object ref = privateKeySecretVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      privateKeySecretVersion_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. SecretManager resource containing the private key of the GitHub
   * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
   * </pre>
   *
   * <code>
   * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for privateKeySecretVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPrivateKeySecretVersionBytes() {
    java.lang.Object ref = privateKeySecretVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      privateKeySecretVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WEBHOOK_SECRET_SECRET_VERSION_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object webhookSecretSecretVersion_ = "";
  /**
   *
   *
   * <pre>
   * Optional. SecretManager resource containing the webhook secret of the
   * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
   * </pre>
   *
   * <code>
   * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The webhookSecretSecretVersion.
   */
  @java.lang.Override
  public java.lang.String getWebhookSecretSecretVersion() {
    java.lang.Object ref = webhookSecretSecretVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      webhookSecretSecretVersion_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. SecretManager resource containing the webhook secret of the
   * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
   * </pre>
   *
   * <code>
   * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for webhookSecretSecretVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getWebhookSecretSecretVersionBytes() {
    java.lang.Object ref = webhookSecretSecretVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      webhookSecretSecretVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APP_INSTALLATION_ID_FIELD_NUMBER = 8;
  private long appInstallationId_ = 0L;
  /**
   *
   *
   * <pre>
   * Optional. ID of the installation of the GitHub App.
   * </pre>
   *
   * <code>int64 app_installation_id = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The appInstallationId.
   */
  @java.lang.Override
  public long getAppInstallationId() {
    return appInstallationId_;
  }

  public static final int INSTALLATION_URI_FIELD_NUMBER = 9;

  @SuppressWarnings("serial")
  private volatile java.lang.Object installationUri_ = "";
  /**
   *
   *
   * <pre>
   * Output only. The URI to navigate to in order to manage the installation
   * associated with this GitHubEnterpriseConfig.
   * </pre>
   *
   * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The installationUri.
   */
  @java.lang.Override
  public java.lang.String getInstallationUri() {
    java.lang.Object ref = installationUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      installationUri_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. The URI to navigate to in order to manage the installation
   * associated with this GitHubEnterpriseConfig.
   * </pre>
   *
   * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for installationUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getInstallationUriBytes() {
    java.lang.Object ref = installationUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      installationUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICE_DIRECTORY_CONFIG_FIELD_NUMBER = 10;
  private com.google.cloud.developerconnect.v1.ServiceDirectoryConfig serviceDirectoryConfig_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration for using Service Directory to privately connect to
   * a GitHub Enterprise server. This should only be set if the GitHub
   * Enterprise server is hosted on-premises and not reachable by public
   * internet. If this field is left empty, calls to the GitHub Enterprise
   * server will be made over the public internet.
   * </pre>
   *
   * <code>
   * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the serviceDirectoryConfig field is set.
   */
  @java.lang.Override
  public boolean hasServiceDirectoryConfig() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for using Service Directory to privately connect to
   * a GitHub Enterprise server. This should only be set if the GitHub
   * Enterprise server is hosted on-premises and not reachable by public
   * internet. If this field is left empty, calls to the GitHub Enterprise
   * server will be made over the public internet.
   * </pre>
   *
   * <code>
   * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The serviceDirectoryConfig.
   */
  @java.lang.Override
  public com.google.cloud.developerconnect.v1.ServiceDirectoryConfig getServiceDirectoryConfig() {
    return serviceDirectoryConfig_ == null
        ? com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.getDefaultInstance()
        : serviceDirectoryConfig_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for using Service Directory to privately connect to
   * a GitHub Enterprise server. This should only be set if the GitHub
   * Enterprise server is hosted on-premises and not reachable by public
   * internet. If this field is left empty, calls to the GitHub Enterprise
   * server will be made over the public internet.
   * </pre>
   *
   * <code>
   * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.developerconnect.v1.ServiceDirectoryConfigOrBuilder
      getServiceDirectoryConfigOrBuilder() {
    return serviceDirectoryConfig_ == null
        ? com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.getDefaultInstance()
        : serviceDirectoryConfig_;
  }

  public static final int SERVER_VERSION_FIELD_NUMBER = 12;

  @SuppressWarnings("serial")
  private volatile java.lang.Object serverVersion_ = "";
  /**
   *
   *
   * <pre>
   * Output only. GitHub Enterprise version installed at the host_uri.
   * </pre>
   *
   * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The serverVersion.
   */
  @java.lang.Override
  public java.lang.String getServerVersion() {
    java.lang.Object ref = serverVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serverVersion_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. GitHub Enterprise version installed at the host_uri.
   * </pre>
   *
   * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for serverVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServerVersionBytes() {
    java.lang.Object ref = serverVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      serverVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SSL_CA_CERTIFICATE_FIELD_NUMBER = 14;

  @SuppressWarnings("serial")
  private volatile java.lang.Object sslCaCertificate_ = "";
  /**
   *
   *
   * <pre>
   * Optional. SSL certificate to use for requests to GitHub Enterprise.
   * </pre>
   *
   * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The sslCaCertificate.
   */
  @java.lang.Override
  public java.lang.String getSslCaCertificate() {
    java.lang.Object ref = sslCaCertificate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sslCaCertificate_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. SSL certificate to use for requests to GitHub Enterprise.
   * </pre>
   *
   * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for sslCaCertificate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSslCaCertificateBytes() {
    java.lang.Object ref = sslCaCertificate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      sslCaCertificate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostUri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hostUri_);
    }
    if (appId_ != 0L) {
      output.writeInt64(2, appId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appSlug_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, appSlug_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKeySecretVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, privateKeySecretVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(webhookSecretSecretVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, webhookSecretSecretVersion_);
    }
    if (appInstallationId_ != 0L) {
      output.writeInt64(8, appInstallationId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(installationUri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, installationUri_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(10, getServiceDirectoryConfig());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, serverVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sslCaCertificate_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, sslCaCertificate_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostUri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hostUri_);
    }
    if (appId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, appId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(appSlug_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, appSlug_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKeySecretVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, privateKeySecretVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(webhookSecretSecretVersion_)) {
      size +=
          com.google.protobuf.GeneratedMessageV3.computeStringSize(5, webhookSecretSecretVersion_);
    }
    if (appInstallationId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(8, appInstallationId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(installationUri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, installationUri_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(10, getServiceDirectoryConfig());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, serverVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sslCaCertificate_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, sslCaCertificate_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig other =
        (com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig) obj;

    if (!getHostUri().equals(other.getHostUri())) return false;
    if (getAppId() != other.getAppId()) return false;
    if (!getAppSlug().equals(other.getAppSlug())) return false;
    if (!getPrivateKeySecretVersion().equals(other.getPrivateKeySecretVersion())) return false;
    if (!getWebhookSecretSecretVersion().equals(other.getWebhookSecretSecretVersion()))
      return false;
    if (getAppInstallationId() != other.getAppInstallationId()) return false;
    if (!getInstallationUri().equals(other.getInstallationUri())) return false;
    if (hasServiceDirectoryConfig() != other.hasServiceDirectoryConfig()) return false;
    if (hasServiceDirectoryConfig()) {
      if (!getServiceDirectoryConfig().equals(other.getServiceDirectoryConfig())) return false;
    }
    if (!getServerVersion().equals(other.getServerVersion())) return false;
    if (!getSslCaCertificate().equals(other.getSslCaCertificate())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HOST_URI_FIELD_NUMBER;
    hash = (53 * hash) + getHostUri().hashCode();
    hash = (37 * hash) + APP_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getAppId());
    hash = (37 * hash) + APP_SLUG_FIELD_NUMBER;
    hash = (53 * hash) + getAppSlug().hashCode();
    hash = (37 * hash) + PRIVATE_KEY_SECRET_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getPrivateKeySecretVersion().hashCode();
    hash = (37 * hash) + WEBHOOK_SECRET_SECRET_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getWebhookSecretSecretVersion().hashCode();
    hash = (37 * hash) + APP_INSTALLATION_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getAppInstallationId());
    hash = (37 * hash) + INSTALLATION_URI_FIELD_NUMBER;
    hash = (53 * hash) + getInstallationUri().hashCode();
    if (hasServiceDirectoryConfig()) {
      hash = (37 * hash) + SERVICE_DIRECTORY_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getServiceDirectoryConfig().hashCode();
    }
    hash = (37 * hash) + SERVER_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getServerVersion().hashCode();
    hash = (37 * hash) + SSL_CA_CERTIFICATE_FIELD_NUMBER;
    hash = (53 * hash) + getSslCaCertificate().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Configuration for connections to an instance of GitHub Enterprise.
   * </pre>
   *
   * Protobuf type {@code google.cloud.developerconnect.v1.GitHubEnterpriseConfig}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.developerconnect.v1.GitHubEnterpriseConfig)
      com.google.cloud.developerconnect.v1.GitHubEnterpriseConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.developerconnect.v1.DeveloperConnectProto
          .internal_static_google_cloud_developerconnect_v1_GitHubEnterpriseConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.developerconnect.v1.DeveloperConnectProto
          .internal_static_google_cloud_developerconnect_v1_GitHubEnterpriseConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.class,
              com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.Builder.class);
    }

    // Construct using com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getServiceDirectoryConfigFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hostUri_ = "";
      appId_ = 0L;
      appSlug_ = "";
      privateKeySecretVersion_ = "";
      webhookSecretSecretVersion_ = "";
      appInstallationId_ = 0L;
      installationUri_ = "";
      serviceDirectoryConfig_ = null;
      if (serviceDirectoryConfigBuilder_ != null) {
        serviceDirectoryConfigBuilder_.dispose();
        serviceDirectoryConfigBuilder_ = null;
      }
      serverVersion_ = "";
      sslCaCertificate_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.developerconnect.v1.DeveloperConnectProto
          .internal_static_google_cloud_developerconnect_v1_GitHubEnterpriseConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig getDefaultInstanceForType() {
      return com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig build() {
      com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig buildPartial() {
      com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig result =
          new com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hostUri_ = hostUri_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.appId_ = appId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.appSlug_ = appSlug_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.privateKeySecretVersion_ = privateKeySecretVersion_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.webhookSecretSecretVersion_ = webhookSecretSecretVersion_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.appInstallationId_ = appInstallationId_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.installationUri_ = installationUri_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.serviceDirectoryConfig_ =
            serviceDirectoryConfigBuilder_ == null
                ? serviceDirectoryConfig_
                : serviceDirectoryConfigBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.serverVersion_ = serverVersion_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.sslCaCertificate_ = sslCaCertificate_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig) {
        return mergeFrom((com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig other) {
      if (other == com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig.getDefaultInstance())
        return this;
      if (!other.getHostUri().isEmpty()) {
        hostUri_ = other.hostUri_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getAppId() != 0L) {
        setAppId(other.getAppId());
      }
      if (!other.getAppSlug().isEmpty()) {
        appSlug_ = other.appSlug_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getPrivateKeySecretVersion().isEmpty()) {
        privateKeySecretVersion_ = other.privateKeySecretVersion_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getWebhookSecretSecretVersion().isEmpty()) {
        webhookSecretSecretVersion_ = other.webhookSecretSecretVersion_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getAppInstallationId() != 0L) {
        setAppInstallationId(other.getAppInstallationId());
      }
      if (!other.getInstallationUri().isEmpty()) {
        installationUri_ = other.installationUri_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.hasServiceDirectoryConfig()) {
        mergeServiceDirectoryConfig(other.getServiceDirectoryConfig());
      }
      if (!other.getServerVersion().isEmpty()) {
        serverVersion_ = other.serverVersion_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (!other.getSslCaCertificate().isEmpty()) {
        sslCaCertificate_ = other.sslCaCertificate_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                hostUri_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                appId_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 26:
              {
                appSlug_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                privateKeySecretVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 42:
              {
                webhookSecretSecretVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 64:
              {
                appInstallationId_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 64
            case 74:
              {
                installationUri_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 74
            case 82:
              {
                input.readMessage(
                    getServiceDirectoryConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 82
            case 98:
              {
                serverVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 98
            case 114:
              {
                sslCaCertificate_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000200;
                break;
              } // case 114
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object hostUri_ = "";
    /**
     *
     *
     * <pre>
     * Required. The URI of the GitHub Enterprise host this connection is for.
     * </pre>
     *
     * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The hostUri.
     */
    public java.lang.String getHostUri() {
      java.lang.Object ref = hostUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostUri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The URI of the GitHub Enterprise host this connection is for.
     * </pre>
     *
     * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for hostUri.
     */
    public com.google.protobuf.ByteString getHostUriBytes() {
      java.lang.Object ref = hostUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        hostUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The URI of the GitHub Enterprise host this connection is for.
     * </pre>
     *
     * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The hostUri to set.
     * @return This builder for chaining.
     */
    public Builder setHostUri(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hostUri_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The URI of the GitHub Enterprise host this connection is for.
     * </pre>
     *
     * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHostUri() {
      hostUri_ = getDefaultInstance().getHostUri();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The URI of the GitHub Enterprise host this connection is for.
     * </pre>
     *
     * <code>string host_uri = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for hostUri to set.
     * @return This builder for chaining.
     */
    public Builder setHostUriBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      hostUri_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long appId_;
    /**
     *
     *
     * <pre>
     * Optional. ID of the GitHub App created from the manifest.
     * </pre>
     *
     * <code>int64 app_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The appId.
     */
    @java.lang.Override
    public long getAppId() {
      return appId_;
    }
    /**
     *
     *
     * <pre>
     * Optional. ID of the GitHub App created from the manifest.
     * </pre>
     *
     * <code>int64 app_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The appId to set.
     * @return This builder for chaining.
     */
    public Builder setAppId(long value) {

      appId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. ID of the GitHub App created from the manifest.
     * </pre>
     *
     * <code>int64 app_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAppId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      appId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object appSlug_ = "";
    /**
     *
     *
     * <pre>
     * Output only. The URL-friendly name of the GitHub App.
     * </pre>
     *
     * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The appSlug.
     */
    public java.lang.String getAppSlug() {
      java.lang.Object ref = appSlug_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        appSlug_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The URL-friendly name of the GitHub App.
     * </pre>
     *
     * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for appSlug.
     */
    public com.google.protobuf.ByteString getAppSlugBytes() {
      java.lang.Object ref = appSlug_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        appSlug_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The URL-friendly name of the GitHub App.
     * </pre>
     *
     * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The appSlug to set.
     * @return This builder for chaining.
     */
    public Builder setAppSlug(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      appSlug_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The URL-friendly name of the GitHub App.
     * </pre>
     *
     * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAppSlug() {
      appSlug_ = getDefaultInstance().getAppSlug();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The URL-friendly name of the GitHub App.
     * </pre>
     *
     * <code>string app_slug = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for appSlug to set.
     * @return This builder for chaining.
     */
    public Builder setAppSlugBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      appSlug_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object privateKeySecretVersion_ = "";
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the private key of the GitHub
     * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The privateKeySecretVersion.
     */
    public java.lang.String getPrivateKeySecretVersion() {
      java.lang.Object ref = privateKeySecretVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        privateKeySecretVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the private key of the GitHub
     * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for privateKeySecretVersion.
     */
    public com.google.protobuf.ByteString getPrivateKeySecretVersionBytes() {
      java.lang.Object ref = privateKeySecretVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        privateKeySecretVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the private key of the GitHub
     * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The privateKeySecretVersion to set.
     * @return This builder for chaining.
     */
    public Builder setPrivateKeySecretVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      privateKeySecretVersion_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the private key of the GitHub
     * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPrivateKeySecretVersion() {
      privateKeySecretVersion_ = getDefaultInstance().getPrivateKeySecretVersion();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the private key of the GitHub
     * App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string private_key_secret_version = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for privateKeySecretVersion to set.
     * @return This builder for chaining.
     */
    public Builder setPrivateKeySecretVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      privateKeySecretVersion_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object webhookSecretSecretVersion_ = "";
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the webhook secret of the
     * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The webhookSecretSecretVersion.
     */
    public java.lang.String getWebhookSecretSecretVersion() {
      java.lang.Object ref = webhookSecretSecretVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        webhookSecretSecretVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the webhook secret of the
     * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for webhookSecretSecretVersion.
     */
    public com.google.protobuf.ByteString getWebhookSecretSecretVersionBytes() {
      java.lang.Object ref = webhookSecretSecretVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        webhookSecretSecretVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the webhook secret of the
     * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The webhookSecretSecretVersion to set.
     * @return This builder for chaining.
     */
    public Builder setWebhookSecretSecretVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      webhookSecretSecretVersion_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the webhook secret of the
     * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearWebhookSecretSecretVersion() {
      webhookSecretSecretVersion_ = getDefaultInstance().getWebhookSecretSecretVersion();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. SecretManager resource containing the webhook secret of the
     * GitHub App, formatted as `projects/&#42;&#47;secrets/&#42;&#47;versions/&#42;`.
     * </pre>
     *
     * <code>
     * string webhook_secret_secret_version = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for webhookSecretSecretVersion to set.
     * @return This builder for chaining.
     */
    public Builder setWebhookSecretSecretVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      webhookSecretSecretVersion_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private long appInstallationId_;
    /**
     *
     *
     * <pre>
     * Optional. ID of the installation of the GitHub App.
     * </pre>
     *
     * <code>int64 app_installation_id = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The appInstallationId.
     */
    @java.lang.Override
    public long getAppInstallationId() {
      return appInstallationId_;
    }
    /**
     *
     *
     * <pre>
     * Optional. ID of the installation of the GitHub App.
     * </pre>
     *
     * <code>int64 app_installation_id = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The appInstallationId to set.
     * @return This builder for chaining.
     */
    public Builder setAppInstallationId(long value) {

      appInstallationId_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. ID of the installation of the GitHub App.
     * </pre>
     *
     * <code>int64 app_installation_id = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAppInstallationId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      appInstallationId_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object installationUri_ = "";
    /**
     *
     *
     * <pre>
     * Output only. The URI to navigate to in order to manage the installation
     * associated with this GitHubEnterpriseConfig.
     * </pre>
     *
     * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The installationUri.
     */
    public java.lang.String getInstallationUri() {
      java.lang.Object ref = installationUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        installationUri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The URI to navigate to in order to manage the installation
     * associated with this GitHubEnterpriseConfig.
     * </pre>
     *
     * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for installationUri.
     */
    public com.google.protobuf.ByteString getInstallationUriBytes() {
      java.lang.Object ref = installationUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        installationUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The URI to navigate to in order to manage the installation
     * associated with this GitHubEnterpriseConfig.
     * </pre>
     *
     * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The installationUri to set.
     * @return This builder for chaining.
     */
    public Builder setInstallationUri(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      installationUri_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The URI to navigate to in order to manage the installation
     * associated with this GitHubEnterpriseConfig.
     * </pre>
     *
     * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInstallationUri() {
      installationUri_ = getDefaultInstance().getInstallationUri();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The URI to navigate to in order to manage the installation
     * associated with this GitHubEnterpriseConfig.
     * </pre>
     *
     * <code>string installation_uri = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for installationUri to set.
     * @return This builder for chaining.
     */
    public Builder setInstallationUriBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      installationUri_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private com.google.cloud.developerconnect.v1.ServiceDirectoryConfig serviceDirectoryConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.developerconnect.v1.ServiceDirectoryConfig,
            com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.Builder,
            com.google.cloud.developerconnect.v1.ServiceDirectoryConfigOrBuilder>
        serviceDirectoryConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the serviceDirectoryConfig field is set.
     */
    public boolean hasServiceDirectoryConfig() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The serviceDirectoryConfig.
     */
    public com.google.cloud.developerconnect.v1.ServiceDirectoryConfig getServiceDirectoryConfig() {
      if (serviceDirectoryConfigBuilder_ == null) {
        return serviceDirectoryConfig_ == null
            ? com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.getDefaultInstance()
            : serviceDirectoryConfig_;
      } else {
        return serviceDirectoryConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setServiceDirectoryConfig(
        com.google.cloud.developerconnect.v1.ServiceDirectoryConfig value) {
      if (serviceDirectoryConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        serviceDirectoryConfig_ = value;
      } else {
        serviceDirectoryConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setServiceDirectoryConfig(
        com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.Builder builderForValue) {
      if (serviceDirectoryConfigBuilder_ == null) {
        serviceDirectoryConfig_ = builderForValue.build();
      } else {
        serviceDirectoryConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeServiceDirectoryConfig(
        com.google.cloud.developerconnect.v1.ServiceDirectoryConfig value) {
      if (serviceDirectoryConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)
            && serviceDirectoryConfig_ != null
            && serviceDirectoryConfig_
                != com.google.cloud.developerconnect.v1.ServiceDirectoryConfig
                    .getDefaultInstance()) {
          getServiceDirectoryConfigBuilder().mergeFrom(value);
        } else {
          serviceDirectoryConfig_ = value;
        }
      } else {
        serviceDirectoryConfigBuilder_.mergeFrom(value);
      }
      if (serviceDirectoryConfig_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearServiceDirectoryConfig() {
      bitField0_ = (bitField0_ & ~0x00000080);
      serviceDirectoryConfig_ = null;
      if (serviceDirectoryConfigBuilder_ != null) {
        serviceDirectoryConfigBuilder_.dispose();
        serviceDirectoryConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.Builder
        getServiceDirectoryConfigBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getServiceDirectoryConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.developerconnect.v1.ServiceDirectoryConfigOrBuilder
        getServiceDirectoryConfigOrBuilder() {
      if (serviceDirectoryConfigBuilder_ != null) {
        return serviceDirectoryConfigBuilder_.getMessageOrBuilder();
      } else {
        return serviceDirectoryConfig_ == null
            ? com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.getDefaultInstance()
            : serviceDirectoryConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for using Service Directory to privately connect to
     * a GitHub Enterprise server. This should only be set if the GitHub
     * Enterprise server is hosted on-premises and not reachable by public
     * internet. If this field is left empty, calls to the GitHub Enterprise
     * server will be made over the public internet.
     * </pre>
     *
     * <code>
     * .google.cloud.developerconnect.v1.ServiceDirectoryConfig service_directory_config = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.developerconnect.v1.ServiceDirectoryConfig,
            com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.Builder,
            com.google.cloud.developerconnect.v1.ServiceDirectoryConfigOrBuilder>
        getServiceDirectoryConfigFieldBuilder() {
      if (serviceDirectoryConfigBuilder_ == null) {
        serviceDirectoryConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.developerconnect.v1.ServiceDirectoryConfig,
                com.google.cloud.developerconnect.v1.ServiceDirectoryConfig.Builder,
                com.google.cloud.developerconnect.v1.ServiceDirectoryConfigOrBuilder>(
                getServiceDirectoryConfig(), getParentForChildren(), isClean());
        serviceDirectoryConfig_ = null;
      }
      return serviceDirectoryConfigBuilder_;
    }

    private java.lang.Object serverVersion_ = "";
    /**
     *
     *
     * <pre>
     * Output only. GitHub Enterprise version installed at the host_uri.
     * </pre>
     *
     * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The serverVersion.
     */
    public java.lang.String getServerVersion() {
      java.lang.Object ref = serverVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. GitHub Enterprise version installed at the host_uri.
     * </pre>
     *
     * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for serverVersion.
     */
    public com.google.protobuf.ByteString getServerVersionBytes() {
      java.lang.Object ref = serverVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serverVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. GitHub Enterprise version installed at the host_uri.
     * </pre>
     *
     * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The serverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServerVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      serverVersion_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. GitHub Enterprise version installed at the host_uri.
     * </pre>
     *
     * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServerVersion() {
      serverVersion_ = getDefaultInstance().getServerVersion();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. GitHub Enterprise version installed at the host_uri.
     * </pre>
     *
     * <code>string server_version = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for serverVersion to set.
     * @return This builder for chaining.
     */
    public Builder setServerVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      serverVersion_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private java.lang.Object sslCaCertificate_ = "";
    /**
     *
     *
     * <pre>
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     * </pre>
     *
     * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The sslCaCertificate.
     */
    public java.lang.String getSslCaCertificate() {
      java.lang.Object ref = sslCaCertificate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sslCaCertificate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     * </pre>
     *
     * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for sslCaCertificate.
     */
    public com.google.protobuf.ByteString getSslCaCertificateBytes() {
      java.lang.Object ref = sslCaCertificate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        sslCaCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     * </pre>
     *
     * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The sslCaCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setSslCaCertificate(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      sslCaCertificate_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     * </pre>
     *
     * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSslCaCertificate() {
      sslCaCertificate_ = getDefaultInstance().getSslCaCertificate();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     * </pre>
     *
     * <code>string ssl_ca_certificate = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for sslCaCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setSslCaCertificateBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      sslCaCertificate_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.developerconnect.v1.GitHubEnterpriseConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.developerconnect.v1.GitHubEnterpriseConfig)
  private static final com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig();
  }

  public static com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GitHubEnterpriseConfig> PARSER =
      new com.google.protobuf.AbstractParser<GitHubEnterpriseConfig>() {
        @java.lang.Override
        public GitHubEnterpriseConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GitHubEnterpriseConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GitHubEnterpriseConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.developerconnect.v1.GitHubEnterpriseConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
