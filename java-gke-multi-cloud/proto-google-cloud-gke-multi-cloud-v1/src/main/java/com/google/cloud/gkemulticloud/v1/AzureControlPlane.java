/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gkemulticloud/v1/azure_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.gkemulticloud.v1;

/**
 *
 *
 * <pre>
 * AzureControlPlane represents the control plane configurations.
 * </pre>
 *
 * Protobuf type {@code google.cloud.gkemulticloud.v1.AzureControlPlane}
 */
public final class AzureControlPlane extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.gkemulticloud.v1.AzureControlPlane)
    AzureControlPlaneOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AzureControlPlane.newBuilder() to construct.
  private AzureControlPlane(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AzureControlPlane() {
    version_ = "";
    subnetId_ = "";
    vmSize_ = "";
    replicaPlacements_ = java.util.Collections.emptyList();
    endpointSubnetId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AzureControlPlane();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.gkemulticloud.v1.AzureResourcesProto
        .internal_static_google_cloud_gkemulticloud_v1_AzureControlPlane_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 7:
        return internalGetTags();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.gkemulticloud.v1.AzureResourcesProto
        .internal_static_google_cloud_gkemulticloud_v1_AzureControlPlane_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.gkemulticloud.v1.AzureControlPlane.class,
            com.google.cloud.gkemulticloud.v1.AzureControlPlane.Builder.class);
  }

  private int bitField0_;
  public static final int VERSION_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object version_ = "";
  /**
   *
   *
   * <pre>
   * Required. The Kubernetes version to run on control plane replicas
   * (e.g. `1.19.10-gke.1000`).
   *
   * You can list all supported versions on a given Google Cloud region by
   * calling
   * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
   * </pre>
   *
   * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The version.
   */
  @java.lang.Override
  public java.lang.String getVersion() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      version_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The Kubernetes version to run on control plane replicas
   * (e.g. `1.19.10-gke.1000`).
   *
   * You can list all supported versions on a given Google Cloud region by
   * calling
   * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
   * </pre>
   *
   * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for version.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getVersionBytes() {
    java.lang.Object ref = version_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      version_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUBNET_ID_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object subnetId_ = "";
  /**
   *
   *
   * <pre>
   * Optional. The ARM ID of the default subnet for the control plane. The
   * control plane VMs are deployed in this subnet, unless
   * `AzureControlPlane.replica_placements` is specified. This subnet will also
   * be used as default for `AzureControlPlane.endpoint_subnet_id` if
   * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
   * be used as default for
   * `AzureClusterNetworking.service_load_balancer_subnet_id`.
   *
   * Example:
   * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
   * </pre>
   *
   * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The subnetId.
   */
  @java.lang.Override
  public java.lang.String getSubnetId() {
    java.lang.Object ref = subnetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subnetId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The ARM ID of the default subnet for the control plane. The
   * control plane VMs are deployed in this subnet, unless
   * `AzureControlPlane.replica_placements` is specified. This subnet will also
   * be used as default for `AzureControlPlane.endpoint_subnet_id` if
   * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
   * be used as default for
   * `AzureClusterNetworking.service_load_balancer_subnet_id`.
   *
   * Example:
   * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
   * </pre>
   *
   * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for subnetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSubnetIdBytes() {
    java.lang.Object ref = subnetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      subnetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VM_SIZE_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object vmSize_ = "";
  /**
   *
   *
   * <pre>
   * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
   *
   * For available VM sizes, see
   * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
   *
   * When unspecified, it defaults to `Standard_DS2_v2`.
   * </pre>
   *
   * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The vmSize.
   */
  @java.lang.Override
  public java.lang.String getVmSize() {
    java.lang.Object ref = vmSize_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vmSize_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
   *
   * For available VM sizes, see
   * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
   *
   * When unspecified, it defaults to `Standard_DS2_v2`.
   * </pre>
   *
   * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for vmSize.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getVmSizeBytes() {
    java.lang.Object ref = vmSize_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      vmSize_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SSH_CONFIG_FIELD_NUMBER = 11;
  private com.google.cloud.gkemulticloud.v1.AzureSshConfig sshConfig_;
  /**
   *
   *
   * <pre>
   * Required. SSH configuration for how to access the underlying control plane
   * machines.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the sshConfig field is set.
   */
  @java.lang.Override
  public boolean hasSshConfig() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. SSH configuration for how to access the underlying control plane
   * machines.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The sshConfig.
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureSshConfig getSshConfig() {
    return sshConfig_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureSshConfig.getDefaultInstance()
        : sshConfig_;
  }
  /**
   *
   *
   * <pre>
   * Required. SSH configuration for how to access the underlying control plane
   * machines.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureSshConfigOrBuilder getSshConfigOrBuilder() {
    return sshConfig_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureSshConfig.getDefaultInstance()
        : sshConfig_;
  }

  public static final int ROOT_VOLUME_FIELD_NUMBER = 4;
  private com.google.cloud.gkemulticloud.v1.AzureDiskTemplate rootVolume_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to the root volume provisioned for each
   * control plane replica.
   *
   * When unspecified, it defaults to 32-GiB Azure Disk.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the rootVolume field is set.
   */
  @java.lang.Override
  public boolean hasRootVolume() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to the root volume provisioned for each
   * control plane replica.
   *
   * When unspecified, it defaults to 32-GiB Azure Disk.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The rootVolume.
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureDiskTemplate getRootVolume() {
    return rootVolume_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
        : rootVolume_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to the root volume provisioned for each
   * control plane replica.
   *
   * When unspecified, it defaults to 32-GiB Azure Disk.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder getRootVolumeOrBuilder() {
    return rootVolume_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
        : rootVolume_;
  }

  public static final int MAIN_VOLUME_FIELD_NUMBER = 5;
  private com.google.cloud.gkemulticloud.v1.AzureDiskTemplate mainVolume_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to the main volume provisioned for each
   * control plane replica.
   * The main volume is in charge of storing all of the cluster's etcd state.
   *
   * When unspecified, it defaults to a 8-GiB Azure Disk.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the mainVolume field is set.
   */
  @java.lang.Override
  public boolean hasMainVolume() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to the main volume provisioned for each
   * control plane replica.
   * The main volume is in charge of storing all of the cluster's etcd state.
   *
   * When unspecified, it defaults to a 8-GiB Azure Disk.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The mainVolume.
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureDiskTemplate getMainVolume() {
    return mainVolume_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
        : mainVolume_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to the main volume provisioned for each
   * control plane replica.
   * The main volume is in charge of storing all of the cluster's etcd state.
   *
   * When unspecified, it defaults to a 8-GiB Azure Disk.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder getMainVolumeOrBuilder() {
    return mainVolume_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
        : mainVolume_;
  }

  public static final int DATABASE_ENCRYPTION_FIELD_NUMBER = 10;
  private com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption databaseEncryption_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to application-layer secrets encryption.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the databaseEncryption field is set.
   */
  @java.lang.Override
  public boolean hasDatabaseEncryption() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to application-layer secrets encryption.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The databaseEncryption.
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption getDatabaseEncryption() {
    return databaseEncryption_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.getDefaultInstance()
        : databaseEncryption_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to application-layer secrets encryption.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryptionOrBuilder
      getDatabaseEncryptionOrBuilder() {
    return databaseEncryption_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.getDefaultInstance()
        : databaseEncryption_;
  }

  public static final int PROXY_CONFIG_FIELD_NUMBER = 12;
  private com.google.cloud.gkemulticloud.v1.AzureProxyConfig proxyConfig_;
  /**
   *
   *
   * <pre>
   * Optional. Proxy configuration for outbound HTTP(S) traffic.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the proxyConfig field is set.
   */
  @java.lang.Override
  public boolean hasProxyConfig() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Proxy configuration for outbound HTTP(S) traffic.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The proxyConfig.
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureProxyConfig getProxyConfig() {
    return proxyConfig_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureProxyConfig.getDefaultInstance()
        : proxyConfig_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Proxy configuration for outbound HTTP(S) traffic.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureProxyConfigOrBuilder getProxyConfigOrBuilder() {
    return proxyConfig_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureProxyConfig.getDefaultInstance()
        : proxyConfig_;
  }

  public static final int CONFIG_ENCRYPTION_FIELD_NUMBER = 14;
  private com.google.cloud.gkemulticloud.v1.AzureConfigEncryption configEncryption_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to vm config encryption.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the configEncryption field is set.
   */
  @java.lang.Override
  public boolean hasConfigEncryption() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to vm config encryption.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The configEncryption.
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureConfigEncryption getConfigEncryption() {
    return configEncryption_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.getDefaultInstance()
        : configEncryption_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration related to vm config encryption.
   * </pre>
   *
   * <code>
   * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureConfigEncryptionOrBuilder
      getConfigEncryptionOrBuilder() {
    return configEncryption_ == null
        ? com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.getDefaultInstance()
        : configEncryption_;
  }

  public static final int TAGS_FIELD_NUMBER = 7;

  private static final class TagsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            com.google.cloud.gkemulticloud.v1.AzureResourcesProto
                .internal_static_google_cloud_gkemulticloud_v1_AzureControlPlane_TagsEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING,
            "",
            com.google.protobuf.WireFormat.FieldType.STRING,
            "");
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<java.lang.String, java.lang.String> tags_;

  private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetTags() {
    if (tags_ == null) {
      return com.google.protobuf.MapField.emptyMapField(TagsDefaultEntryHolder.defaultEntry);
    }
    return tags_;
  }

  public int getTagsCount() {
    return internalGetTags().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * Optional. A set of tags to apply to all underlying control plane Azure
   * resources.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public boolean containsTags(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetTags().getMap().containsKey(key);
  }
  /** Use {@link #getTagsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getTags() {
    return getTagsMap();
  }
  /**
   *
   *
   * <pre>
   * Optional. A set of tags to apply to all underlying control plane Azure
   * resources.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
    return internalGetTags().getMap();
  }
  /**
   *
   *
   * <pre>
   * Optional. A set of tags to apply to all underlying control plane Azure
   * resources.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public /* nullable */ java.lang.String getTagsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetTags().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * Optional. A set of tags to apply to all underlying control plane Azure
   * resources.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  @java.lang.Override
  public java.lang.String getTagsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetTags().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int REPLICA_PLACEMENTS_FIELD_NUMBER = 13;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.gkemulticloud.v1.ReplicaPlacement> replicaPlacements_;
  /**
   *
   *
   * <pre>
   * Optional. Configuration for where to place the control plane replicas.
   *
   * Up to three replica placement instances can be specified. If
   * replica_placements is set, the replica placement instances will be applied
   * to the three control plane replicas as evenly as possible.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.gkemulticloud.v1.ReplicaPlacement>
      getReplicaPlacementsList() {
    return replicaPlacements_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for where to place the control plane replicas.
   *
   * Up to three replica placement instances can be specified. If
   * replica_placements is set, the replica placement instances will be applied
   * to the three control plane replicas as evenly as possible.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder>
      getReplicaPlacementsOrBuilderList() {
    return replicaPlacements_;
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for where to place the control plane replicas.
   *
   * Up to three replica placement instances can be specified. If
   * replica_placements is set, the replica placement instances will be applied
   * to the three control plane replicas as evenly as possible.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getReplicaPlacementsCount() {
    return replicaPlacements_.size();
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for where to place the control plane replicas.
   *
   * Up to three replica placement instances can be specified. If
   * replica_placements is set, the replica placement instances will be applied
   * to the three control plane replicas as evenly as possible.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.ReplicaPlacement getReplicaPlacements(int index) {
    return replicaPlacements_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Optional. Configuration for where to place the control plane replicas.
   *
   * Up to three replica placement instances can be specified. If
   * replica_placements is set, the replica placement instances will be applied
   * to the three control plane replicas as evenly as possible.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder getReplicaPlacementsOrBuilder(
      int index) {
    return replicaPlacements_.get(index);
  }

  public static final int ENDPOINT_SUBNET_ID_FIELD_NUMBER = 15;

  @SuppressWarnings("serial")
  private volatile java.lang.Object endpointSubnetId_ = "";
  /**
   *
   *
   * <pre>
   * Optional. The ARM ID of the subnet where the control plane load balancer is
   * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
   *
   * Example:
   * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
   * </pre>
   *
   * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The endpointSubnetId.
   */
  @java.lang.Override
  public java.lang.String getEndpointSubnetId() {
    java.lang.Object ref = endpointSubnetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      endpointSubnetId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The ARM ID of the subnet where the control plane load balancer is
   * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
   *
   * Example:
   * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
   * </pre>
   *
   * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for endpointSubnetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getEndpointSubnetIdBytes() {
    java.lang.Object ref = endpointSubnetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      endpointSubnetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subnetId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vmSize_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, vmSize_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getRootVolume());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(5, getMainVolume());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetTags(), TagsDefaultEntryHolder.defaultEntry, 7);
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(10, getDatabaseEncryption());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(11, getSshConfig());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(12, getProxyConfig());
    }
    for (int i = 0; i < replicaPlacements_.size(); i++) {
      output.writeMessage(13, replicaPlacements_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(14, getConfigEncryption());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(endpointSubnetId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, endpointSubnetId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, subnetId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vmSize_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, vmSize_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getRootVolume());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getMainVolume());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry :
        internalGetTags().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> tags__ =
          TagsDefaultEntryHolder.defaultEntry
              .newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, tags__);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, getDatabaseEncryption());
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, getSshConfig());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, getProxyConfig());
    }
    for (int i = 0; i < replicaPlacements_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(13, replicaPlacements_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, getConfigEncryption());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(endpointSubnetId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, endpointSubnetId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.gkemulticloud.v1.AzureControlPlane)) {
      return super.equals(obj);
    }
    com.google.cloud.gkemulticloud.v1.AzureControlPlane other =
        (com.google.cloud.gkemulticloud.v1.AzureControlPlane) obj;

    if (!getVersion().equals(other.getVersion())) return false;
    if (!getSubnetId().equals(other.getSubnetId())) return false;
    if (!getVmSize().equals(other.getVmSize())) return false;
    if (hasSshConfig() != other.hasSshConfig()) return false;
    if (hasSshConfig()) {
      if (!getSshConfig().equals(other.getSshConfig())) return false;
    }
    if (hasRootVolume() != other.hasRootVolume()) return false;
    if (hasRootVolume()) {
      if (!getRootVolume().equals(other.getRootVolume())) return false;
    }
    if (hasMainVolume() != other.hasMainVolume()) return false;
    if (hasMainVolume()) {
      if (!getMainVolume().equals(other.getMainVolume())) return false;
    }
    if (hasDatabaseEncryption() != other.hasDatabaseEncryption()) return false;
    if (hasDatabaseEncryption()) {
      if (!getDatabaseEncryption().equals(other.getDatabaseEncryption())) return false;
    }
    if (hasProxyConfig() != other.hasProxyConfig()) return false;
    if (hasProxyConfig()) {
      if (!getProxyConfig().equals(other.getProxyConfig())) return false;
    }
    if (hasConfigEncryption() != other.hasConfigEncryption()) return false;
    if (hasConfigEncryption()) {
      if (!getConfigEncryption().equals(other.getConfigEncryption())) return false;
    }
    if (!internalGetTags().equals(other.internalGetTags())) return false;
    if (!getReplicaPlacementsList().equals(other.getReplicaPlacementsList())) return false;
    if (!getEndpointSubnetId().equals(other.getEndpointSubnetId())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion().hashCode();
    hash = (37 * hash) + SUBNET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSubnetId().hashCode();
    hash = (37 * hash) + VM_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getVmSize().hashCode();
    if (hasSshConfig()) {
      hash = (37 * hash) + SSH_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getSshConfig().hashCode();
    }
    if (hasRootVolume()) {
      hash = (37 * hash) + ROOT_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + getRootVolume().hashCode();
    }
    if (hasMainVolume()) {
      hash = (37 * hash) + MAIN_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + getMainVolume().hashCode();
    }
    if (hasDatabaseEncryption()) {
      hash = (37 * hash) + DATABASE_ENCRYPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseEncryption().hashCode();
    }
    if (hasProxyConfig()) {
      hash = (37 * hash) + PROXY_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getProxyConfig().hashCode();
    }
    if (hasConfigEncryption()) {
      hash = (37 * hash) + CONFIG_ENCRYPTION_FIELD_NUMBER;
      hash = (53 * hash) + getConfigEncryption().hashCode();
    }
    if (!internalGetTags().getMap().isEmpty()) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTags().hashCode();
    }
    if (getReplicaPlacementsCount() > 0) {
      hash = (37 * hash) + REPLICA_PLACEMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getReplicaPlacementsList().hashCode();
    }
    hash = (37 * hash) + ENDPOINT_SUBNET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getEndpointSubnetId().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.gkemulticloud.v1.AzureControlPlane prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * AzureControlPlane represents the control plane configurations.
   * </pre>
   *
   * Protobuf type {@code google.cloud.gkemulticloud.v1.AzureControlPlane}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.gkemulticloud.v1.AzureControlPlane)
      com.google.cloud.gkemulticloud.v1.AzureControlPlaneOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.gkemulticloud.v1.AzureResourcesProto
          .internal_static_google_cloud_gkemulticloud_v1_AzureControlPlane_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 7:
          return internalGetTags();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 7:
          return internalGetMutableTags();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.gkemulticloud.v1.AzureResourcesProto
          .internal_static_google_cloud_gkemulticloud_v1_AzureControlPlane_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.gkemulticloud.v1.AzureControlPlane.class,
              com.google.cloud.gkemulticloud.v1.AzureControlPlane.Builder.class);
    }

    // Construct using com.google.cloud.gkemulticloud.v1.AzureControlPlane.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getSshConfigFieldBuilder();
        getRootVolumeFieldBuilder();
        getMainVolumeFieldBuilder();
        getDatabaseEncryptionFieldBuilder();
        getProxyConfigFieldBuilder();
        getConfigEncryptionFieldBuilder();
        getReplicaPlacementsFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      version_ = "";
      subnetId_ = "";
      vmSize_ = "";
      sshConfig_ = null;
      if (sshConfigBuilder_ != null) {
        sshConfigBuilder_.dispose();
        sshConfigBuilder_ = null;
      }
      rootVolume_ = null;
      if (rootVolumeBuilder_ != null) {
        rootVolumeBuilder_.dispose();
        rootVolumeBuilder_ = null;
      }
      mainVolume_ = null;
      if (mainVolumeBuilder_ != null) {
        mainVolumeBuilder_.dispose();
        mainVolumeBuilder_ = null;
      }
      databaseEncryption_ = null;
      if (databaseEncryptionBuilder_ != null) {
        databaseEncryptionBuilder_.dispose();
        databaseEncryptionBuilder_ = null;
      }
      proxyConfig_ = null;
      if (proxyConfigBuilder_ != null) {
        proxyConfigBuilder_.dispose();
        proxyConfigBuilder_ = null;
      }
      configEncryption_ = null;
      if (configEncryptionBuilder_ != null) {
        configEncryptionBuilder_.dispose();
        configEncryptionBuilder_ = null;
      }
      internalGetMutableTags().clear();
      if (replicaPlacementsBuilder_ == null) {
        replicaPlacements_ = java.util.Collections.emptyList();
      } else {
        replicaPlacements_ = null;
        replicaPlacementsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      endpointSubnetId_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.gkemulticloud.v1.AzureResourcesProto
          .internal_static_google_cloud_gkemulticloud_v1_AzureControlPlane_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.gkemulticloud.v1.AzureControlPlane getDefaultInstanceForType() {
      return com.google.cloud.gkemulticloud.v1.AzureControlPlane.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.gkemulticloud.v1.AzureControlPlane build() {
      com.google.cloud.gkemulticloud.v1.AzureControlPlane result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.gkemulticloud.v1.AzureControlPlane buildPartial() {
      com.google.cloud.gkemulticloud.v1.AzureControlPlane result =
          new com.google.cloud.gkemulticloud.v1.AzureControlPlane(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.gkemulticloud.v1.AzureControlPlane result) {
      if (replicaPlacementsBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          replicaPlacements_ = java.util.Collections.unmodifiableList(replicaPlacements_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.replicaPlacements_ = replicaPlacements_;
      } else {
        result.replicaPlacements_ = replicaPlacementsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.gkemulticloud.v1.AzureControlPlane result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.version_ = version_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.subnetId_ = subnetId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.vmSize_ = vmSize_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.sshConfig_ = sshConfigBuilder_ == null ? sshConfig_ : sshConfigBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.rootVolume_ = rootVolumeBuilder_ == null ? rootVolume_ : rootVolumeBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.mainVolume_ = mainVolumeBuilder_ == null ? mainVolume_ : mainVolumeBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.databaseEncryption_ =
            databaseEncryptionBuilder_ == null
                ? databaseEncryption_
                : databaseEncryptionBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.proxyConfig_ =
            proxyConfigBuilder_ == null ? proxyConfig_ : proxyConfigBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.configEncryption_ =
            configEncryptionBuilder_ == null ? configEncryption_ : configEncryptionBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.tags_ = internalGetTags();
        result.tags_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.endpointSubnetId_ = endpointSubnetId_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.gkemulticloud.v1.AzureControlPlane) {
        return mergeFrom((com.google.cloud.gkemulticloud.v1.AzureControlPlane) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.gkemulticloud.v1.AzureControlPlane other) {
      if (other == com.google.cloud.gkemulticloud.v1.AzureControlPlane.getDefaultInstance())
        return this;
      if (!other.getVersion().isEmpty()) {
        version_ = other.version_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getSubnetId().isEmpty()) {
        subnetId_ = other.subnetId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getVmSize().isEmpty()) {
        vmSize_ = other.vmSize_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasSshConfig()) {
        mergeSshConfig(other.getSshConfig());
      }
      if (other.hasRootVolume()) {
        mergeRootVolume(other.getRootVolume());
      }
      if (other.hasMainVolume()) {
        mergeMainVolume(other.getMainVolume());
      }
      if (other.hasDatabaseEncryption()) {
        mergeDatabaseEncryption(other.getDatabaseEncryption());
      }
      if (other.hasProxyConfig()) {
        mergeProxyConfig(other.getProxyConfig());
      }
      if (other.hasConfigEncryption()) {
        mergeConfigEncryption(other.getConfigEncryption());
      }
      internalGetMutableTags().mergeFrom(other.internalGetTags());
      bitField0_ |= 0x00000200;
      if (replicaPlacementsBuilder_ == null) {
        if (!other.replicaPlacements_.isEmpty()) {
          if (replicaPlacements_.isEmpty()) {
            replicaPlacements_ = other.replicaPlacements_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureReplicaPlacementsIsMutable();
            replicaPlacements_.addAll(other.replicaPlacements_);
          }
          onChanged();
        }
      } else {
        if (!other.replicaPlacements_.isEmpty()) {
          if (replicaPlacementsBuilder_.isEmpty()) {
            replicaPlacementsBuilder_.dispose();
            replicaPlacementsBuilder_ = null;
            replicaPlacements_ = other.replicaPlacements_;
            bitField0_ = (bitField0_ & ~0x00000400);
            replicaPlacementsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getReplicaPlacementsFieldBuilder()
                    : null;
          } else {
            replicaPlacementsBuilder_.addAllMessages(other.replicaPlacements_);
          }
        }
      }
      if (!other.getEndpointSubnetId().isEmpty()) {
        endpointSubnetId_ = other.endpointSubnetId_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                version_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                subnetId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                vmSize_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(getRootVolumeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 34
            case 42:
              {
                input.readMessage(getMainVolumeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 42
            case 58:
              {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String> tags__ =
                    input.readMessage(
                        TagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableTags().getMutableMap().put(tags__.getKey(), tags__.getValue());
                bitField0_ |= 0x00000200;
                break;
              } // case 58
            case 82:
              {
                input.readMessage(
                    getDatabaseEncryptionFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 82
            case 90:
              {
                input.readMessage(getSshConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 90
            case 98:
              {
                input.readMessage(getProxyConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 98
            case 106:
              {
                com.google.cloud.gkemulticloud.v1.ReplicaPlacement m =
                    input.readMessage(
                        com.google.cloud.gkemulticloud.v1.ReplicaPlacement.parser(),
                        extensionRegistry);
                if (replicaPlacementsBuilder_ == null) {
                  ensureReplicaPlacementsIsMutable();
                  replicaPlacements_.add(m);
                } else {
                  replicaPlacementsBuilder_.addMessage(m);
                }
                break;
              } // case 106
            case 114:
              {
                input.readMessage(
                    getConfigEncryptionFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 114
            case 122:
              {
                endpointSubnetId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000800;
                break;
              } // case 122
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object version_ = "";
    /**
     *
     *
     * <pre>
     * Required. The Kubernetes version to run on control plane replicas
     * (e.g. `1.19.10-gke.1000`).
     *
     * You can list all supported versions on a given Google Cloud region by
     * calling
     * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
     * </pre>
     *
     * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The version.
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The Kubernetes version to run on control plane replicas
     * (e.g. `1.19.10-gke.1000`).
     *
     * You can list all supported versions on a given Google Cloud region by
     * calling
     * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
     * </pre>
     *
     * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for version.
     */
    public com.google.protobuf.ByteString getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The Kubernetes version to run on control plane replicas
     * (e.g. `1.19.10-gke.1000`).
     *
     * You can list all supported versions on a given Google Cloud region by
     * calling
     * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
     * </pre>
     *
     * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      version_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The Kubernetes version to run on control plane replicas
     * (e.g. `1.19.10-gke.1000`).
     *
     * You can list all supported versions on a given Google Cloud region by
     * calling
     * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
     * </pre>
     *
     * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      version_ = getDefaultInstance().getVersion();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The Kubernetes version to run on control plane replicas
     * (e.g. `1.19.10-gke.1000`).
     *
     * You can list all supported versions on a given Google Cloud region by
     * calling
     * [GetAzureServerConfig][google.cloud.gkemulticloud.v1.AzureClusters.GetAzureServerConfig].
     * </pre>
     *
     * <code>string version = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      version_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object subnetId_ = "";
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the default subnet for the control plane. The
     * control plane VMs are deployed in this subnet, unless
     * `AzureControlPlane.replica_placements` is specified. This subnet will also
     * be used as default for `AzureControlPlane.endpoint_subnet_id` if
     * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
     * be used as default for
     * `AzureClusterNetworking.service_load_balancer_subnet_id`.
     *
     * Example:
     * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
     * </pre>
     *
     * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The subnetId.
     */
    public java.lang.String getSubnetId() {
      java.lang.Object ref = subnetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the default subnet for the control plane. The
     * control plane VMs are deployed in this subnet, unless
     * `AzureControlPlane.replica_placements` is specified. This subnet will also
     * be used as default for `AzureControlPlane.endpoint_subnet_id` if
     * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
     * be used as default for
     * `AzureClusterNetworking.service_load_balancer_subnet_id`.
     *
     * Example:
     * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
     * </pre>
     *
     * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for subnetId.
     */
    public com.google.protobuf.ByteString getSubnetIdBytes() {
      java.lang.Object ref = subnetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        subnetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the default subnet for the control plane. The
     * control plane VMs are deployed in this subnet, unless
     * `AzureControlPlane.replica_placements` is specified. This subnet will also
     * be used as default for `AzureControlPlane.endpoint_subnet_id` if
     * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
     * be used as default for
     * `AzureClusterNetworking.service_load_balancer_subnet_id`.
     *
     * Example:
     * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
     * </pre>
     *
     * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The subnetId to set.
     * @return This builder for chaining.
     */
    public Builder setSubnetId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      subnetId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the default subnet for the control plane. The
     * control plane VMs are deployed in this subnet, unless
     * `AzureControlPlane.replica_placements` is specified. This subnet will also
     * be used as default for `AzureControlPlane.endpoint_subnet_id` if
     * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
     * be used as default for
     * `AzureClusterNetworking.service_load_balancer_subnet_id`.
     *
     * Example:
     * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
     * </pre>
     *
     * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSubnetId() {
      subnetId_ = getDefaultInstance().getSubnetId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the default subnet for the control plane. The
     * control plane VMs are deployed in this subnet, unless
     * `AzureControlPlane.replica_placements` is specified. This subnet will also
     * be used as default for `AzureControlPlane.endpoint_subnet_id` if
     * `AzureControlPlane.endpoint_subnet_id` is not specified. Similarly it will
     * be used as default for
     * `AzureClusterNetworking.service_load_balancer_subnet_id`.
     *
     * Example:
     * `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-id&gt;/providers/Microsoft.Network/virtualNetworks/&lt;vnet-id&gt;/subnets/default`.
     * </pre>
     *
     * <code>string subnet_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for subnetId to set.
     * @return This builder for chaining.
     */
    public Builder setSubnetIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      subnetId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object vmSize_ = "";
    /**
     *
     *
     * <pre>
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
     *
     * For available VM sizes, see
     * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
     *
     * When unspecified, it defaults to `Standard_DS2_v2`.
     * </pre>
     *
     * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The vmSize.
     */
    public java.lang.String getVmSize() {
      java.lang.Object ref = vmSize_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vmSize_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
     *
     * For available VM sizes, see
     * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
     *
     * When unspecified, it defaults to `Standard_DS2_v2`.
     * </pre>
     *
     * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for vmSize.
     */
    public com.google.protobuf.ByteString getVmSizeBytes() {
      java.lang.Object ref = vmSize_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        vmSize_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
     *
     * For available VM sizes, see
     * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
     *
     * When unspecified, it defaults to `Standard_DS2_v2`.
     * </pre>
     *
     * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The vmSize to set.
     * @return This builder for chaining.
     */
    public Builder setVmSize(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      vmSize_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
     *
     * For available VM sizes, see
     * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
     *
     * When unspecified, it defaults to `Standard_DS2_v2`.
     * </pre>
     *
     * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVmSize() {
      vmSize_ = getDefaultInstance().getVmSize();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The Azure VM size name. Example: `Standard_DS2_v2`.
     *
     * For available VM sizes, see
     * https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
     *
     * When unspecified, it defaults to `Standard_DS2_v2`.
     * </pre>
     *
     * <code>string vm_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for vmSize to set.
     * @return This builder for chaining.
     */
    public Builder setVmSizeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      vmSize_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.cloud.gkemulticloud.v1.AzureSshConfig sshConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureSshConfig,
            com.google.cloud.gkemulticloud.v1.AzureSshConfig.Builder,
            com.google.cloud.gkemulticloud.v1.AzureSshConfigOrBuilder>
        sshConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the sshConfig field is set.
     */
    public boolean hasSshConfig() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The sshConfig.
     */
    public com.google.cloud.gkemulticloud.v1.AzureSshConfig getSshConfig() {
      if (sshConfigBuilder_ == null) {
        return sshConfig_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureSshConfig.getDefaultInstance()
            : sshConfig_;
      } else {
        return sshConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setSshConfig(com.google.cloud.gkemulticloud.v1.AzureSshConfig value) {
      if (sshConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sshConfig_ = value;
      } else {
        sshConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setSshConfig(
        com.google.cloud.gkemulticloud.v1.AzureSshConfig.Builder builderForValue) {
      if (sshConfigBuilder_ == null) {
        sshConfig_ = builderForValue.build();
      } else {
        sshConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeSshConfig(com.google.cloud.gkemulticloud.v1.AzureSshConfig value) {
      if (sshConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)
            && sshConfig_ != null
            && sshConfig_
                != com.google.cloud.gkemulticloud.v1.AzureSshConfig.getDefaultInstance()) {
          getSshConfigBuilder().mergeFrom(value);
        } else {
          sshConfig_ = value;
        }
      } else {
        sshConfigBuilder_.mergeFrom(value);
      }
      if (sshConfig_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearSshConfig() {
      bitField0_ = (bitField0_ & ~0x00000008);
      sshConfig_ = null;
      if (sshConfigBuilder_ != null) {
        sshConfigBuilder_.dispose();
        sshConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureSshConfig.Builder getSshConfigBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getSshConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureSshConfigOrBuilder getSshConfigOrBuilder() {
      if (sshConfigBuilder_ != null) {
        return sshConfigBuilder_.getMessageOrBuilder();
      } else {
        return sshConfig_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureSshConfig.getDefaultInstance()
            : sshConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. SSH configuration for how to access the underlying control plane
     * machines.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureSshConfig ssh_config = 11 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureSshConfig,
            com.google.cloud.gkemulticloud.v1.AzureSshConfig.Builder,
            com.google.cloud.gkemulticloud.v1.AzureSshConfigOrBuilder>
        getSshConfigFieldBuilder() {
      if (sshConfigBuilder_ == null) {
        sshConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.AzureSshConfig,
                com.google.cloud.gkemulticloud.v1.AzureSshConfig.Builder,
                com.google.cloud.gkemulticloud.v1.AzureSshConfigOrBuilder>(
                getSshConfig(), getParentForChildren(), isClean());
        sshConfig_ = null;
      }
      return sshConfigBuilder_;
    }

    private com.google.cloud.gkemulticloud.v1.AzureDiskTemplate rootVolume_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder>
        rootVolumeBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the rootVolume field is set.
     */
    public boolean hasRootVolume() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The rootVolume.
     */
    public com.google.cloud.gkemulticloud.v1.AzureDiskTemplate getRootVolume() {
      if (rootVolumeBuilder_ == null) {
        return rootVolume_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
            : rootVolume_;
      } else {
        return rootVolumeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setRootVolume(com.google.cloud.gkemulticloud.v1.AzureDiskTemplate value) {
      if (rootVolumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rootVolume_ = value;
      } else {
        rootVolumeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setRootVolume(
        com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder builderForValue) {
      if (rootVolumeBuilder_ == null) {
        rootVolume_ = builderForValue.build();
      } else {
        rootVolumeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeRootVolume(com.google.cloud.gkemulticloud.v1.AzureDiskTemplate value) {
      if (rootVolumeBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && rootVolume_ != null
            && rootVolume_
                != com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()) {
          getRootVolumeBuilder().mergeFrom(value);
        } else {
          rootVolume_ = value;
        }
      } else {
        rootVolumeBuilder_.mergeFrom(value);
      }
      if (rootVolume_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearRootVolume() {
      bitField0_ = (bitField0_ & ~0x00000010);
      rootVolume_ = null;
      if (rootVolumeBuilder_ != null) {
        rootVolumeBuilder_.dispose();
        rootVolumeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder getRootVolumeBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getRootVolumeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder getRootVolumeOrBuilder() {
      if (rootVolumeBuilder_ != null) {
        return rootVolumeBuilder_.getMessageOrBuilder();
      } else {
        return rootVolume_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
            : rootVolume_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the root volume provisioned for each
     * control plane replica.
     *
     * When unspecified, it defaults to 32-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate root_volume = 4 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder>
        getRootVolumeFieldBuilder() {
      if (rootVolumeBuilder_ == null) {
        rootVolumeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.AzureDiskTemplate,
                com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder,
                com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder>(
                getRootVolume(), getParentForChildren(), isClean());
        rootVolume_ = null;
      }
      return rootVolumeBuilder_;
    }

    private com.google.cloud.gkemulticloud.v1.AzureDiskTemplate mainVolume_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder>
        mainVolumeBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the mainVolume field is set.
     */
    public boolean hasMainVolume() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The mainVolume.
     */
    public com.google.cloud.gkemulticloud.v1.AzureDiskTemplate getMainVolume() {
      if (mainVolumeBuilder_ == null) {
        return mainVolume_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
            : mainVolume_;
      } else {
        return mainVolumeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setMainVolume(com.google.cloud.gkemulticloud.v1.AzureDiskTemplate value) {
      if (mainVolumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mainVolume_ = value;
      } else {
        mainVolumeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setMainVolume(
        com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder builderForValue) {
      if (mainVolumeBuilder_ == null) {
        mainVolume_ = builderForValue.build();
      } else {
        mainVolumeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeMainVolume(com.google.cloud.gkemulticloud.v1.AzureDiskTemplate value) {
      if (mainVolumeBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)
            && mainVolume_ != null
            && mainVolume_
                != com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()) {
          getMainVolumeBuilder().mergeFrom(value);
        } else {
          mainVolume_ = value;
        }
      } else {
        mainVolumeBuilder_.mergeFrom(value);
      }
      if (mainVolume_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearMainVolume() {
      bitField0_ = (bitField0_ & ~0x00000020);
      mainVolume_ = null;
      if (mainVolumeBuilder_ != null) {
        mainVolumeBuilder_.dispose();
        mainVolumeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder getMainVolumeBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getMainVolumeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder getMainVolumeOrBuilder() {
      if (mainVolumeBuilder_ != null) {
        return mainVolumeBuilder_.getMessageOrBuilder();
      } else {
        return mainVolume_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.getDefaultInstance()
            : mainVolume_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to the main volume provisioned for each
     * control plane replica.
     * The main volume is in charge of storing all of the cluster's etcd state.
     *
     * When unspecified, it defaults to a 8-GiB Azure Disk.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDiskTemplate main_volume = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder,
            com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder>
        getMainVolumeFieldBuilder() {
      if (mainVolumeBuilder_ == null) {
        mainVolumeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.AzureDiskTemplate,
                com.google.cloud.gkemulticloud.v1.AzureDiskTemplate.Builder,
                com.google.cloud.gkemulticloud.v1.AzureDiskTemplateOrBuilder>(
                getMainVolume(), getParentForChildren(), isClean());
        mainVolume_ = null;
      }
      return mainVolumeBuilder_;
    }

    private com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption databaseEncryption_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption,
            com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.Builder,
            com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryptionOrBuilder>
        databaseEncryptionBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the databaseEncryption field is set.
     */
    public boolean hasDatabaseEncryption() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The databaseEncryption.
     */
    public com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption getDatabaseEncryption() {
      if (databaseEncryptionBuilder_ == null) {
        return databaseEncryption_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.getDefaultInstance()
            : databaseEncryption_;
      } else {
        return databaseEncryptionBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDatabaseEncryption(
        com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption value) {
      if (databaseEncryptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        databaseEncryption_ = value;
      } else {
        databaseEncryptionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setDatabaseEncryption(
        com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.Builder builderForValue) {
      if (databaseEncryptionBuilder_ == null) {
        databaseEncryption_ = builderForValue.build();
      } else {
        databaseEncryptionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeDatabaseEncryption(
        com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption value) {
      if (databaseEncryptionBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)
            && databaseEncryption_ != null
            && databaseEncryption_
                != com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.getDefaultInstance()) {
          getDatabaseEncryptionBuilder().mergeFrom(value);
        } else {
          databaseEncryption_ = value;
        }
      } else {
        databaseEncryptionBuilder_.mergeFrom(value);
      }
      if (databaseEncryption_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearDatabaseEncryption() {
      bitField0_ = (bitField0_ & ~0x00000040);
      databaseEncryption_ = null;
      if (databaseEncryptionBuilder_ != null) {
        databaseEncryptionBuilder_.dispose();
        databaseEncryptionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.Builder
        getDatabaseEncryptionBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getDatabaseEncryptionFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryptionOrBuilder
        getDatabaseEncryptionOrBuilder() {
      if (databaseEncryptionBuilder_ != null) {
        return databaseEncryptionBuilder_.getMessageOrBuilder();
      } else {
        return databaseEncryption_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.getDefaultInstance()
            : databaseEncryption_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to application-layer secrets encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureDatabaseEncryption database_encryption = 10 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption,
            com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.Builder,
            com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryptionOrBuilder>
        getDatabaseEncryptionFieldBuilder() {
      if (databaseEncryptionBuilder_ == null) {
        databaseEncryptionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption,
                com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryption.Builder,
                com.google.cloud.gkemulticloud.v1.AzureDatabaseEncryptionOrBuilder>(
                getDatabaseEncryption(), getParentForChildren(), isClean());
        databaseEncryption_ = null;
      }
      return databaseEncryptionBuilder_;
    }

    private com.google.cloud.gkemulticloud.v1.AzureProxyConfig proxyConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureProxyConfig,
            com.google.cloud.gkemulticloud.v1.AzureProxyConfig.Builder,
            com.google.cloud.gkemulticloud.v1.AzureProxyConfigOrBuilder>
        proxyConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the proxyConfig field is set.
     */
    public boolean hasProxyConfig() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The proxyConfig.
     */
    public com.google.cloud.gkemulticloud.v1.AzureProxyConfig getProxyConfig() {
      if (proxyConfigBuilder_ == null) {
        return proxyConfig_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureProxyConfig.getDefaultInstance()
            : proxyConfig_;
      } else {
        return proxyConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setProxyConfig(com.google.cloud.gkemulticloud.v1.AzureProxyConfig value) {
      if (proxyConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        proxyConfig_ = value;
      } else {
        proxyConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setProxyConfig(
        com.google.cloud.gkemulticloud.v1.AzureProxyConfig.Builder builderForValue) {
      if (proxyConfigBuilder_ == null) {
        proxyConfig_ = builderForValue.build();
      } else {
        proxyConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeProxyConfig(com.google.cloud.gkemulticloud.v1.AzureProxyConfig value) {
      if (proxyConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)
            && proxyConfig_ != null
            && proxyConfig_
                != com.google.cloud.gkemulticloud.v1.AzureProxyConfig.getDefaultInstance()) {
          getProxyConfigBuilder().mergeFrom(value);
        } else {
          proxyConfig_ = value;
        }
      } else {
        proxyConfigBuilder_.mergeFrom(value);
      }
      if (proxyConfig_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearProxyConfig() {
      bitField0_ = (bitField0_ & ~0x00000080);
      proxyConfig_ = null;
      if (proxyConfigBuilder_ != null) {
        proxyConfigBuilder_.dispose();
        proxyConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureProxyConfig.Builder getProxyConfigBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getProxyConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureProxyConfigOrBuilder getProxyConfigOrBuilder() {
      if (proxyConfigBuilder_ != null) {
        return proxyConfigBuilder_.getMessageOrBuilder();
      } else {
        return proxyConfig_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureProxyConfig.getDefaultInstance()
            : proxyConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Proxy configuration for outbound HTTP(S) traffic.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureProxyConfig proxy_config = 12 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureProxyConfig,
            com.google.cloud.gkemulticloud.v1.AzureProxyConfig.Builder,
            com.google.cloud.gkemulticloud.v1.AzureProxyConfigOrBuilder>
        getProxyConfigFieldBuilder() {
      if (proxyConfigBuilder_ == null) {
        proxyConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.AzureProxyConfig,
                com.google.cloud.gkemulticloud.v1.AzureProxyConfig.Builder,
                com.google.cloud.gkemulticloud.v1.AzureProxyConfigOrBuilder>(
                getProxyConfig(), getParentForChildren(), isClean());
        proxyConfig_ = null;
      }
      return proxyConfigBuilder_;
    }

    private com.google.cloud.gkemulticloud.v1.AzureConfigEncryption configEncryption_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureConfigEncryption,
            com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.Builder,
            com.google.cloud.gkemulticloud.v1.AzureConfigEncryptionOrBuilder>
        configEncryptionBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the configEncryption field is set.
     */
    public boolean hasConfigEncryption() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The configEncryption.
     */
    public com.google.cloud.gkemulticloud.v1.AzureConfigEncryption getConfigEncryption() {
      if (configEncryptionBuilder_ == null) {
        return configEncryption_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.getDefaultInstance()
            : configEncryption_;
      } else {
        return configEncryptionBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setConfigEncryption(
        com.google.cloud.gkemulticloud.v1.AzureConfigEncryption value) {
      if (configEncryptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configEncryption_ = value;
      } else {
        configEncryptionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setConfigEncryption(
        com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.Builder builderForValue) {
      if (configEncryptionBuilder_ == null) {
        configEncryption_ = builderForValue.build();
      } else {
        configEncryptionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergeConfigEncryption(
        com.google.cloud.gkemulticloud.v1.AzureConfigEncryption value) {
      if (configEncryptionBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)
            && configEncryption_ != null
            && configEncryption_
                != com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.getDefaultInstance()) {
          getConfigEncryptionBuilder().mergeFrom(value);
        } else {
          configEncryption_ = value;
        }
      } else {
        configEncryptionBuilder_.mergeFrom(value);
      }
      if (configEncryption_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearConfigEncryption() {
      bitField0_ = (bitField0_ & ~0x00000100);
      configEncryption_ = null;
      if (configEncryptionBuilder_ != null) {
        configEncryptionBuilder_.dispose();
        configEncryptionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.Builder
        getConfigEncryptionBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getConfigEncryptionFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.AzureConfigEncryptionOrBuilder
        getConfigEncryptionOrBuilder() {
      if (configEncryptionBuilder_ != null) {
        return configEncryptionBuilder_.getMessageOrBuilder();
      } else {
        return configEncryption_ == null
            ? com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.getDefaultInstance()
            : configEncryption_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration related to vm config encryption.
     * </pre>
     *
     * <code>
     * .google.cloud.gkemulticloud.v1.AzureConfigEncryption config_encryption = 14 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.AzureConfigEncryption,
            com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.Builder,
            com.google.cloud.gkemulticloud.v1.AzureConfigEncryptionOrBuilder>
        getConfigEncryptionFieldBuilder() {
      if (configEncryptionBuilder_ == null) {
        configEncryptionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.AzureConfigEncryption,
                com.google.cloud.gkemulticloud.v1.AzureConfigEncryption.Builder,
                com.google.cloud.gkemulticloud.v1.AzureConfigEncryptionOrBuilder>(
                getConfigEncryption(), getParentForChildren(), isClean());
        configEncryption_ = null;
      }
      return configEncryptionBuilder_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> tags_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetTags() {
      if (tags_ == null) {
        return com.google.protobuf.MapField.emptyMapField(TagsDefaultEntryHolder.defaultEntry);
      }
      return tags_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableTags() {
      if (tags_ == null) {
        tags_ = com.google.protobuf.MapField.newMapField(TagsDefaultEntryHolder.defaultEntry);
      }
      if (!tags_.isMutable()) {
        tags_ = tags_.copy();
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return tags_;
    }

    public int getTagsCount() {
      return internalGetTags().getMap().size();
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public boolean containsTags(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetTags().getMap().containsKey(key);
    }
    /** Use {@link #getTagsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTags() {
      return getTagsMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
      return internalGetTags().getMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public /* nullable */ java.lang.String getTagsOrDefault(
        java.lang.String key,
        /* nullable */
        java.lang.String defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    @java.lang.Override
    public java.lang.String getTagsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetTags().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTags() {
      bitField0_ = (bitField0_ & ~0x00000200);
      internalGetMutableTags().getMutableMap().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder removeTags(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableTags().getMutableMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableTags() {
      bitField0_ |= 0x00000200;
      return internalGetMutableTags().getMutableMap();
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder putTags(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableTags().getMutableMap().put(key, value);
      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. A set of tags to apply to all underlying control plane Azure
     * resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    public Builder putAllTags(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableTags().getMutableMap().putAll(values);
      bitField0_ |= 0x00000200;
      return this;
    }

    private java.util.List<com.google.cloud.gkemulticloud.v1.ReplicaPlacement> replicaPlacements_ =
        java.util.Collections.emptyList();

    private void ensureReplicaPlacementsIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        replicaPlacements_ =
            new java.util.ArrayList<com.google.cloud.gkemulticloud.v1.ReplicaPlacement>(
                replicaPlacements_);
        bitField0_ |= 0x00000400;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.ReplicaPlacement,
            com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder,
            com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder>
        replicaPlacementsBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.gkemulticloud.v1.ReplicaPlacement>
        getReplicaPlacementsList() {
      if (replicaPlacementsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(replicaPlacements_);
      } else {
        return replicaPlacementsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getReplicaPlacementsCount() {
      if (replicaPlacementsBuilder_ == null) {
        return replicaPlacements_.size();
      } else {
        return replicaPlacementsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.ReplicaPlacement getReplicaPlacements(int index) {
      if (replicaPlacementsBuilder_ == null) {
        return replicaPlacements_.get(index);
      } else {
        return replicaPlacementsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setReplicaPlacements(
        int index, com.google.cloud.gkemulticloud.v1.ReplicaPlacement value) {
      if (replicaPlacementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.set(index, value);
        onChanged();
      } else {
        replicaPlacementsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setReplicaPlacements(
        int index, com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder builderForValue) {
      if (replicaPlacementsBuilder_ == null) {
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.set(index, builderForValue.build());
        onChanged();
      } else {
        replicaPlacementsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addReplicaPlacements(com.google.cloud.gkemulticloud.v1.ReplicaPlacement value) {
      if (replicaPlacementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.add(value);
        onChanged();
      } else {
        replicaPlacementsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addReplicaPlacements(
        int index, com.google.cloud.gkemulticloud.v1.ReplicaPlacement value) {
      if (replicaPlacementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.add(index, value);
        onChanged();
      } else {
        replicaPlacementsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addReplicaPlacements(
        com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder builderForValue) {
      if (replicaPlacementsBuilder_ == null) {
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.add(builderForValue.build());
        onChanged();
      } else {
        replicaPlacementsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addReplicaPlacements(
        int index, com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder builderForValue) {
      if (replicaPlacementsBuilder_ == null) {
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.add(index, builderForValue.build());
        onChanged();
      } else {
        replicaPlacementsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllReplicaPlacements(
        java.lang.Iterable<? extends com.google.cloud.gkemulticloud.v1.ReplicaPlacement> values) {
      if (replicaPlacementsBuilder_ == null) {
        ensureReplicaPlacementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, replicaPlacements_);
        onChanged();
      } else {
        replicaPlacementsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearReplicaPlacements() {
      if (replicaPlacementsBuilder_ == null) {
        replicaPlacements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        replicaPlacementsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeReplicaPlacements(int index) {
      if (replicaPlacementsBuilder_ == null) {
        ensureReplicaPlacementsIsMutable();
        replicaPlacements_.remove(index);
        onChanged();
      } else {
        replicaPlacementsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder getReplicaPlacementsBuilder(
        int index) {
      return getReplicaPlacementsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder
        getReplicaPlacementsOrBuilder(int index) {
      if (replicaPlacementsBuilder_ == null) {
        return replicaPlacements_.get(index);
      } else {
        return replicaPlacementsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<? extends com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder>
        getReplicaPlacementsOrBuilderList() {
      if (replicaPlacementsBuilder_ != null) {
        return replicaPlacementsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(replicaPlacements_);
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder
        addReplicaPlacementsBuilder() {
      return getReplicaPlacementsFieldBuilder()
          .addBuilder(com.google.cloud.gkemulticloud.v1.ReplicaPlacement.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder addReplicaPlacementsBuilder(
        int index) {
      return getReplicaPlacementsFieldBuilder()
          .addBuilder(
              index, com.google.cloud.gkemulticloud.v1.ReplicaPlacement.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Optional. Configuration for where to place the control plane replicas.
     *
     * Up to three replica placement instances can be specified. If
     * replica_placements is set, the replica placement instances will be applied
     * to the three control plane replicas as evenly as possible.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.gkemulticloud.v1.ReplicaPlacement replica_placements = 13 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder>
        getReplicaPlacementsBuilderList() {
      return getReplicaPlacementsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.gkemulticloud.v1.ReplicaPlacement,
            com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder,
            com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder>
        getReplicaPlacementsFieldBuilder() {
      if (replicaPlacementsBuilder_ == null) {
        replicaPlacementsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.gkemulticloud.v1.ReplicaPlacement,
                com.google.cloud.gkemulticloud.v1.ReplicaPlacement.Builder,
                com.google.cloud.gkemulticloud.v1.ReplicaPlacementOrBuilder>(
                replicaPlacements_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        replicaPlacements_ = null;
      }
      return replicaPlacementsBuilder_;
    }

    private java.lang.Object endpointSubnetId_ = "";
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the subnet where the control plane load balancer is
     * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
     *
     * Example:
     * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
     * </pre>
     *
     * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The endpointSubnetId.
     */
    public java.lang.String getEndpointSubnetId() {
      java.lang.Object ref = endpointSubnetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        endpointSubnetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the subnet where the control plane load balancer is
     * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
     *
     * Example:
     * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
     * </pre>
     *
     * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for endpointSubnetId.
     */
    public com.google.protobuf.ByteString getEndpointSubnetIdBytes() {
      java.lang.Object ref = endpointSubnetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        endpointSubnetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the subnet where the control plane load balancer is
     * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
     *
     * Example:
     * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
     * </pre>
     *
     * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The endpointSubnetId to set.
     * @return This builder for chaining.
     */
    public Builder setEndpointSubnetId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      endpointSubnetId_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the subnet where the control plane load balancer is
     * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
     *
     * Example:
     * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
     * </pre>
     *
     * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEndpointSubnetId() {
      endpointSubnetId_ = getDefaultInstance().getEndpointSubnetId();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The ARM ID of the subnet where the control plane load balancer is
     * deployed. When unspecified, it defaults to AzureControlPlane.subnet_id.
     *
     * Example:
     * "/subscriptions/d00494d6-6f3c-4280-bbb2-899e163d1d30/resourceGroups/anthos_cluster_gkeust4/providers/Microsoft.Network/virtualNetworks/gke-vnet-gkeust4/subnets/subnetid123"
     * </pre>
     *
     * <code>string endpoint_subnet_id = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for endpointSubnetId to set.
     * @return This builder for chaining.
     */
    public Builder setEndpointSubnetIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      endpointSubnetId_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.gkemulticloud.v1.AzureControlPlane)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.gkemulticloud.v1.AzureControlPlane)
  private static final com.google.cloud.gkemulticloud.v1.AzureControlPlane DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.gkemulticloud.v1.AzureControlPlane();
  }

  public static com.google.cloud.gkemulticloud.v1.AzureControlPlane getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AzureControlPlane> PARSER =
      new com.google.protobuf.AbstractParser<AzureControlPlane>() {
        @java.lang.Override
        public AzureControlPlane parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AzureControlPlane> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AzureControlPlane> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.gkemulticloud.v1.AzureControlPlane getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
