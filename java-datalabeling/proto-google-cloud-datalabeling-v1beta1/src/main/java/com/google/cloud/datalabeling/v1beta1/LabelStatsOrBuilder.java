/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/datalabeling/v1beta1/dataset.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.datalabeling.v1beta1;

public interface LabelStatsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.datalabeling.v1beta1.LabelStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Map of each annotation spec's example count. Key is the annotation spec
   * name and value is the number of examples for that annotation spec.
   * If the annotated dataset does not have annotation spec, the map will return
   * a pair where the key is empty string and value is the total number of
   * annotations.
   * </pre>
   *
   * <code>map&lt;string, int64&gt; example_count = 1;</code>
   */
  int getExampleCountCount();
  /**
   *
   *
   * <pre>
   * Map of each annotation spec's example count. Key is the annotation spec
   * name and value is the number of examples for that annotation spec.
   * If the annotated dataset does not have annotation spec, the map will return
   * a pair where the key is empty string and value is the total number of
   * annotations.
   * </pre>
   *
   * <code>map&lt;string, int64&gt; example_count = 1;</code>
   */
  boolean containsExampleCount(java.lang.String key);
  /** Use {@link #getExampleCountMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Long> getExampleCount();
  /**
   *
   *
   * <pre>
   * Map of each annotation spec's example count. Key is the annotation spec
   * name and value is the number of examples for that annotation spec.
   * If the annotated dataset does not have annotation spec, the map will return
   * a pair where the key is empty string and value is the total number of
   * annotations.
   * </pre>
   *
   * <code>map&lt;string, int64&gt; example_count = 1;</code>
   */
  java.util.Map<java.lang.String, java.lang.Long> getExampleCountMap();
  /**
   *
   *
   * <pre>
   * Map of each annotation spec's example count. Key is the annotation spec
   * name and value is the number of examples for that annotation spec.
   * If the annotated dataset does not have annotation spec, the map will return
   * a pair where the key is empty string and value is the total number of
   * annotations.
   * </pre>
   *
   * <code>map&lt;string, int64&gt; example_count = 1;</code>
   */
  long getExampleCountOrDefault(java.lang.String key, long defaultValue);
  /**
   *
   *
   * <pre>
   * Map of each annotation spec's example count. Key is the annotation spec
   * name and value is the number of examples for that annotation spec.
   * If the annotated dataset does not have annotation spec, the map will return
   * a pair where the key is empty string and value is the total number of
   * annotations.
   * </pre>
   *
   * <code>map&lt;string, int64&gt; example_count = 1;</code>
   */
  long getExampleCountOrThrow(java.lang.String key);
}
