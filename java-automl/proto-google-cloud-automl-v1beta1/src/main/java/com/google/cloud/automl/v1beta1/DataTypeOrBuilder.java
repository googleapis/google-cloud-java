/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1beta1/data_types.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.automl.v1beta1;

public interface DataTypeOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.automl.v1beta1.DataType)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [ARRAY][google.cloud.automl.v1beta1.TypeCode.ARRAY],
   * then `list_element_type` is the type of the elements.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.DataType list_element_type = 2;</code>
   *
   * @return Whether the listElementType field is set.
   */
  boolean hasListElementType();
  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [ARRAY][google.cloud.automl.v1beta1.TypeCode.ARRAY],
   * then `list_element_type` is the type of the elements.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.DataType list_element_type = 2;</code>
   *
   * @return The listElementType.
   */
  com.google.cloud.automl.v1beta1.DataType getListElementType();
  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [ARRAY][google.cloud.automl.v1beta1.TypeCode.ARRAY],
   * then `list_element_type` is the type of the elements.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.DataType list_element_type = 2;</code>
   */
  com.google.cloud.automl.v1beta1.DataTypeOrBuilder getListElementTypeOrBuilder();

  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [STRUCT][google.cloud.automl.v1beta1.TypeCode.STRUCT], then `struct_type`
   * provides type information for the struct's fields.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.StructType struct_type = 3;</code>
   *
   * @return Whether the structType field is set.
   */
  boolean hasStructType();
  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [STRUCT][google.cloud.automl.v1beta1.TypeCode.STRUCT], then `struct_type`
   * provides type information for the struct's fields.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.StructType struct_type = 3;</code>
   *
   * @return The structType.
   */
  com.google.cloud.automl.v1beta1.StructType getStructType();
  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [STRUCT][google.cloud.automl.v1beta1.TypeCode.STRUCT], then `struct_type`
   * provides type information for the struct's fields.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.StructType struct_type = 3;</code>
   */
  com.google.cloud.automl.v1beta1.StructTypeOrBuilder getStructTypeOrBuilder();

  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [TIMESTAMP][google.cloud.automl.v1beta1.TypeCode.TIMESTAMP]
   * then `time_format` provides the format in which that time field is
   * expressed. The time_format must either be one of:
   * * `UNIX_SECONDS`
   * * `UNIX_MILLISECONDS`
   * * `UNIX_MICROSECONDS`
   * * `UNIX_NANOSECONDS`
   * (for respectively number of seconds, milliseconds, microseconds and
   * nanoseconds since start of the Unix epoch);
   * or be written in `strftime` syntax. If time_format is not set, then the
   * default format as described on the type_code is used.
   * </pre>
   *
   * <code>string time_format = 5;</code>
   *
   * @return Whether the timeFormat field is set.
   */
  boolean hasTimeFormat();
  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [TIMESTAMP][google.cloud.automl.v1beta1.TypeCode.TIMESTAMP]
   * then `time_format` provides the format in which that time field is
   * expressed. The time_format must either be one of:
   * * `UNIX_SECONDS`
   * * `UNIX_MILLISECONDS`
   * * `UNIX_MICROSECONDS`
   * * `UNIX_NANOSECONDS`
   * (for respectively number of seconds, milliseconds, microseconds and
   * nanoseconds since start of the Unix epoch);
   * or be written in `strftime` syntax. If time_format is not set, then the
   * default format as described on the type_code is used.
   * </pre>
   *
   * <code>string time_format = 5;</code>
   *
   * @return The timeFormat.
   */
  java.lang.String getTimeFormat();
  /**
   *
   *
   * <pre>
   * If [type_code][google.cloud.automl.v1beta1.DataType.type_code] == [TIMESTAMP][google.cloud.automl.v1beta1.TypeCode.TIMESTAMP]
   * then `time_format` provides the format in which that time field is
   * expressed. The time_format must either be one of:
   * * `UNIX_SECONDS`
   * * `UNIX_MILLISECONDS`
   * * `UNIX_MICROSECONDS`
   * * `UNIX_NANOSECONDS`
   * (for respectively number of seconds, milliseconds, microseconds and
   * nanoseconds since start of the Unix epoch);
   * or be written in `strftime` syntax. If time_format is not set, then the
   * default format as described on the type_code is used.
   * </pre>
   *
   * <code>string time_format = 5;</code>
   *
   * @return The bytes for timeFormat.
   */
  com.google.protobuf.ByteString getTimeFormatBytes();

  /**
   *
   *
   * <pre>
   * Required. The [TypeCode][google.cloud.automl.v1beta1.TypeCode] for this type.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.TypeCode type_code = 1;</code>
   *
   * @return The enum numeric value on the wire for typeCode.
   */
  int getTypeCodeValue();
  /**
   *
   *
   * <pre>
   * Required. The [TypeCode][google.cloud.automl.v1beta1.TypeCode] for this type.
   * </pre>
   *
   * <code>.google.cloud.automl.v1beta1.TypeCode type_code = 1;</code>
   *
   * @return The typeCode.
   */
  com.google.cloud.automl.v1beta1.TypeCode getTypeCode();

  /**
   *
   *
   * <pre>
   * If true, this DataType can also be `NULL`. In .CSV files `NULL` value is
   * expressed as an empty string.
   * </pre>
   *
   * <code>bool nullable = 4;</code>
   *
   * @return The nullable.
   */
  boolean getNullable();

  com.google.cloud.automl.v1beta1.DataType.DetailsCase getDetailsCase();
}
