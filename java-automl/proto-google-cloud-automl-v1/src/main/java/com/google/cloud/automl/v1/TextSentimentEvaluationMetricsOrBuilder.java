/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/automl/v1/text_sentiment.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.automl.v1;

public interface TextSentimentEvaluationMetricsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.automl.v1.TextSentimentEvaluationMetrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. Precision.
   * </pre>
   *
   * <code>float precision = 1;</code>
   *
   * @return The precision.
   */
  float getPrecision();

  /**
   *
   *
   * <pre>
   * Output only. Recall.
   * </pre>
   *
   * <code>float recall = 2;</code>
   *
   * @return The recall.
   */
  float getRecall();

  /**
   *
   *
   * <pre>
   * Output only. The harmonic mean of recall and precision.
   * </pre>
   *
   * <code>float f1_score = 3;</code>
   *
   * @return The f1Score.
   */
  float getF1Score();

  /**
   *
   *
   * <pre>
   * Output only. Mean absolute error. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   * </pre>
   *
   * <code>float mean_absolute_error = 4;</code>
   *
   * @return The meanAbsoluteError.
   */
  float getMeanAbsoluteError();

  /**
   *
   *
   * <pre>
   * Output only. Mean squared error. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   * </pre>
   *
   * <code>float mean_squared_error = 5;</code>
   *
   * @return The meanSquaredError.
   */
  float getMeanSquaredError();

  /**
   *
   *
   * <pre>
   * Output only. Linear weighted kappa. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   * </pre>
   *
   * <code>float linear_kappa = 6;</code>
   *
   * @return The linearKappa.
   */
  float getLinearKappa();

  /**
   *
   *
   * <pre>
   * Output only. Quadratic weighted kappa. Only set for the overall model
   * evaluation, not for evaluation of a single annotation spec.
   * </pre>
   *
   * <code>float quadratic_kappa = 7;</code>
   *
   * @return The quadraticKappa.
   */
  float getQuadraticKappa();

  /**
   *
   *
   * <pre>
   * Output only. Confusion matrix of the evaluation.
   * Only set for the overall model evaluation, not for evaluation of a single
   * annotation spec.
   * </pre>
   *
   * <code>
   * .google.cloud.automl.v1.ClassificationEvaluationMetrics.ConfusionMatrix confusion_matrix = 8;
   * </code>
   *
   * @return Whether the confusionMatrix field is set.
   */
  boolean hasConfusionMatrix();
  /**
   *
   *
   * <pre>
   * Output only. Confusion matrix of the evaluation.
   * Only set for the overall model evaluation, not for evaluation of a single
   * annotation spec.
   * </pre>
   *
   * <code>
   * .google.cloud.automl.v1.ClassificationEvaluationMetrics.ConfusionMatrix confusion_matrix = 8;
   * </code>
   *
   * @return The confusionMatrix.
   */
  com.google.cloud.automl.v1.ClassificationEvaluationMetrics.ConfusionMatrix getConfusionMatrix();
  /**
   *
   *
   * <pre>
   * Output only. Confusion matrix of the evaluation.
   * Only set for the overall model evaluation, not for evaluation of a single
   * annotation spec.
   * </pre>
   *
   * <code>
   * .google.cloud.automl.v1.ClassificationEvaluationMetrics.ConfusionMatrix confusion_matrix = 8;
   * </code>
   */
  com.google.cloud.automl.v1.ClassificationEvaluationMetrics.ConfusionMatrixOrBuilder
      getConfusionMatrixOrBuilder();
}
