/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/tpu/v2alpha1/cloud_tpu.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.tpu.v2alpha1;

public interface CustomerEncryptionKeyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.tpu.v2alpha1.CustomerEncryptionKey)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The name of the encryption key that is stored in Google Cloud KMS.
   * For example:
   * &lt;pre class="lang-html"&gt;"kmsKeyName": "projects/
   * &lt;var class="apiparam"&gt;kms_project_id&lt;/var&gt;/locations/
   * &lt;var class="apiparam"&gt;region&lt;/var&gt;/keyRings/&lt;var class="apiparam"&gt;
   * key_region&lt;/var&gt;/cryptoKeys/&lt;var class="apiparam"&gt;key&lt;/var&gt;
   * &lt;/pre&gt;
   * The fully-qualifed key name may be returned for resource GET requests.
   * For example:
   * &lt;pre class="lang-html"&gt;"kmsKeyName": "projects/
   * &lt;var class="apiparam"&gt;kms_project_id&lt;/var&gt;/locations/
   * &lt;var class="apiparam"&gt;region&lt;/var&gt;/keyRings/&lt;var class="apiparam"&gt;
   * key_region&lt;/var&gt;/cryptoKeys/&lt;var class="apiparam"&gt;key&lt;/var&gt;
   * /cryptoKeyVersions/1&lt;/pre&gt;
   * </pre>
   *
   * <code>string kms_key_name = 7;</code>
   *
   * @return Whether the kmsKeyName field is set.
   */
  boolean hasKmsKeyName();
  /**
   *
   *
   * <pre>
   * The name of the encryption key that is stored in Google Cloud KMS.
   * For example:
   * &lt;pre class="lang-html"&gt;"kmsKeyName": "projects/
   * &lt;var class="apiparam"&gt;kms_project_id&lt;/var&gt;/locations/
   * &lt;var class="apiparam"&gt;region&lt;/var&gt;/keyRings/&lt;var class="apiparam"&gt;
   * key_region&lt;/var&gt;/cryptoKeys/&lt;var class="apiparam"&gt;key&lt;/var&gt;
   * &lt;/pre&gt;
   * The fully-qualifed key name may be returned for resource GET requests.
   * For example:
   * &lt;pre class="lang-html"&gt;"kmsKeyName": "projects/
   * &lt;var class="apiparam"&gt;kms_project_id&lt;/var&gt;/locations/
   * &lt;var class="apiparam"&gt;region&lt;/var&gt;/keyRings/&lt;var class="apiparam"&gt;
   * key_region&lt;/var&gt;/cryptoKeys/&lt;var class="apiparam"&gt;key&lt;/var&gt;
   * /cryptoKeyVersions/1&lt;/pre&gt;
   * </pre>
   *
   * <code>string kms_key_name = 7;</code>
   *
   * @return The kmsKeyName.
   */
  java.lang.String getKmsKeyName();
  /**
   *
   *
   * <pre>
   * The name of the encryption key that is stored in Google Cloud KMS.
   * For example:
   * &lt;pre class="lang-html"&gt;"kmsKeyName": "projects/
   * &lt;var class="apiparam"&gt;kms_project_id&lt;/var&gt;/locations/
   * &lt;var class="apiparam"&gt;region&lt;/var&gt;/keyRings/&lt;var class="apiparam"&gt;
   * key_region&lt;/var&gt;/cryptoKeys/&lt;var class="apiparam"&gt;key&lt;/var&gt;
   * &lt;/pre&gt;
   * The fully-qualifed key name may be returned for resource GET requests.
   * For example:
   * &lt;pre class="lang-html"&gt;"kmsKeyName": "projects/
   * &lt;var class="apiparam"&gt;kms_project_id&lt;/var&gt;/locations/
   * &lt;var class="apiparam"&gt;region&lt;/var&gt;/keyRings/&lt;var class="apiparam"&gt;
   * key_region&lt;/var&gt;/cryptoKeys/&lt;var class="apiparam"&gt;key&lt;/var&gt;
   * /cryptoKeyVersions/1&lt;/pre&gt;
   * </pre>
   *
   * <code>string kms_key_name = 7;</code>
   *
   * @return The bytes for kmsKeyName.
   */
  com.google.protobuf.ByteString getKmsKeyNameBytes();

  com.google.cloud.tpu.v2alpha1.CustomerEncryptionKey.KeyCase getKeyCase();
}
