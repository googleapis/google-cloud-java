/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/service_controller.proto

// Protobuf Java Version: 3.25.5
package com.google.api.servicecontrol.v1;

/**
 *
 *
 * <pre>
 * Response message for the Report method.
 * </pre>
 *
 * Protobuf type {@code google.api.servicecontrol.v1.ReportResponse}
 */
public final class ReportResponse extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.ReportResponse)
    ReportResponseOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ReportResponse.newBuilder() to construct.
  private ReportResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ReportResponse() {
    reportErrors_ = java.util.Collections.emptyList();
    serviceConfigId_ = "";
    serviceRolloutId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ReportResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.api.servicecontrol.v1.ServiceControllerProto
        .internal_static_google_api_servicecontrol_v1_ReportResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.api.servicecontrol.v1.ServiceControllerProto
        .internal_static_google_api_servicecontrol_v1_ReportResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.api.servicecontrol.v1.ReportResponse.class,
            com.google.api.servicecontrol.v1.ReportResponse.Builder.class);
  }

  public interface ReportErrorOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.api.servicecontrol.v1.ReportResponse.ReportError)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The
     * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
     * value from the request.
     * </pre>
     *
     * <code>string operation_id = 1;</code>
     *
     * @return The operationId.
     */
    java.lang.String getOperationId();
    /**
     *
     *
     * <pre>
     * The
     * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
     * value from the request.
     * </pre>
     *
     * <code>string operation_id = 1;</code>
     *
     * @return The bytes for operationId.
     */
    com.google.protobuf.ByteString getOperationIdBytes();

    /**
     *
     *
     * <pre>
     * Details of the error when processing the
     * [Operation][google.api.servicecontrol.v1.Operation].
     * </pre>
     *
     * <code>.google.rpc.Status status = 2;</code>
     *
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     *
     *
     * <pre>
     * Details of the error when processing the
     * [Operation][google.api.servicecontrol.v1.Operation].
     * </pre>
     *
     * <code>.google.rpc.Status status = 2;</code>
     *
     * @return The status.
     */
    com.google.rpc.Status getStatus();
    /**
     *
     *
     * <pre>
     * Details of the error when processing the
     * [Operation][google.api.servicecontrol.v1.Operation].
     * </pre>
     *
     * <code>.google.rpc.Status status = 2;</code>
     */
    com.google.rpc.StatusOrBuilder getStatusOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * Represents the processing error of one
   * [Operation][google.api.servicecontrol.v1.Operation] in the request.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.ReportResponse.ReportError}
   */
  public static final class ReportError extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.ReportResponse.ReportError)
      ReportErrorOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ReportError.newBuilder() to construct.
    private ReportError(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ReportError() {
      operationId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ReportError();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.api.servicecontrol.v1.ServiceControllerProto
          .internal_static_google_api_servicecontrol_v1_ReportResponse_ReportError_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.ServiceControllerProto
          .internal_static_google_api_servicecontrol_v1_ReportResponse_ReportError_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.ReportResponse.ReportError.class,
              com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder.class);
    }

    private int bitField0_;
    public static final int OPERATION_ID_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object operationId_ = "";
    /**
     *
     *
     * <pre>
     * The
     * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
     * value from the request.
     * </pre>
     *
     * <code>string operation_id = 1;</code>
     *
     * @return The operationId.
     */
    @java.lang.Override
    public java.lang.String getOperationId() {
      java.lang.Object ref = operationId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationId_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The
     * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
     * value from the request.
     * </pre>
     *
     * <code>string operation_id = 1;</code>
     *
     * @return The bytes for operationId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOperationIdBytes() {
      java.lang.Object ref = operationId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        operationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private com.google.rpc.Status status_;
    /**
     *
     *
     * <pre>
     * Details of the error when processing the
     * [Operation][google.api.servicecontrol.v1.Operation].
     * </pre>
     *
     * <code>.google.rpc.Status status = 2;</code>
     *
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Details of the error when processing the
     * [Operation][google.api.servicecontrol.v1.Operation].
     * </pre>
     *
     * <code>.google.rpc.Status status = 2;</code>
     *
     * @return The status.
     */
    @java.lang.Override
    public com.google.rpc.Status getStatus() {
      return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
    }
    /**
     *
     *
     * <pre>
     * Details of the error when processing the
     * [Operation][google.api.servicecontrol.v1.Operation].
     * </pre>
     *
     * <code>.google.rpc.Status status = 2;</code>
     */
    @java.lang.Override
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
      return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operationId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, operationId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getStatus());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operationId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, operationId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.api.servicecontrol.v1.ReportResponse.ReportError)) {
        return super.equals(obj);
      }
      com.google.api.servicecontrol.v1.ReportResponse.ReportError other =
          (com.google.api.servicecontrol.v1.ReportResponse.ReportError) obj;

      if (!getOperationId().equals(other.getOperationId())) return false;
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus().equals(other.getStatus())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPERATION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOperationId().hashCode();
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.api.servicecontrol.v1.ReportResponse.ReportError prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Represents the processing error of one
     * [Operation][google.api.servicecontrol.v1.Operation] in the request.
     * </pre>
     *
     * Protobuf type {@code google.api.servicecontrol.v1.ReportResponse.ReportError}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.ReportResponse.ReportError)
        com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.api.servicecontrol.v1.ServiceControllerProto
            .internal_static_google_api_servicecontrol_v1_ReportResponse_ReportError_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.api.servicecontrol.v1.ServiceControllerProto
            .internal_static_google_api_servicecontrol_v1_ReportResponse_ReportError_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.api.servicecontrol.v1.ReportResponse.ReportError.class,
                com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder.class);
      }

      // Construct using com.google.api.servicecontrol.v1.ReportResponse.ReportError.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        operationId_ = "";
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.api.servicecontrol.v1.ServiceControllerProto
            .internal_static_google_api_servicecontrol_v1_ReportResponse_ReportError_descriptor;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.ReportResponse.ReportError
          getDefaultInstanceForType() {
        return com.google.api.servicecontrol.v1.ReportResponse.ReportError.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.ReportResponse.ReportError build() {
        com.google.api.servicecontrol.v1.ReportResponse.ReportError result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.ReportResponse.ReportError buildPartial() {
        com.google.api.servicecontrol.v1.ReportResponse.ReportError result =
            new com.google.api.servicecontrol.v1.ReportResponse.ReportError(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.api.servicecontrol.v1.ReportResponse.ReportError result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.operationId_ = operationId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.status_ = statusBuilder_ == null ? status_ : statusBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.api.servicecontrol.v1.ReportResponse.ReportError) {
          return mergeFrom((com.google.api.servicecontrol.v1.ReportResponse.ReportError) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.api.servicecontrol.v1.ReportResponse.ReportError other) {
        if (other
            == com.google.api.servicecontrol.v1.ReportResponse.ReportError.getDefaultInstance())
          return this;
        if (!other.getOperationId().isEmpty()) {
          operationId_ = other.operationId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  operationId_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getStatusFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object operationId_ = "";
      /**
       *
       *
       * <pre>
       * The
       * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
       * value from the request.
       * </pre>
       *
       * <code>string operation_id = 1;</code>
       *
       * @return The operationId.
       */
      public java.lang.String getOperationId() {
        java.lang.Object ref = operationId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operationId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The
       * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
       * value from the request.
       * </pre>
       *
       * <code>string operation_id = 1;</code>
       *
       * @return The bytes for operationId.
       */
      public com.google.protobuf.ByteString getOperationIdBytes() {
        java.lang.Object ref = operationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          operationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The
       * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
       * value from the request.
       * </pre>
       *
       * <code>string operation_id = 1;</code>
       *
       * @param value The operationId to set.
       * @return This builder for chaining.
       */
      public Builder setOperationId(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        operationId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The
       * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
       * value from the request.
       * </pre>
       *
       * <code>string operation_id = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearOperationId() {
        operationId_ = getDefaultInstance().getOperationId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The
       * [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
       * value from the request.
       * </pre>
       *
       * <code>string operation_id = 1;</code>
       *
       * @param value The bytes for operationId to set.
       * @return This builder for chaining.
       */
      public Builder setOperationIdBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        operationId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.rpc.Status status_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>
          statusBuilder_;
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       *
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       *
       * @return The status.
       */
      public com.google.rpc.Status getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      public Builder setStatus(com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      public Builder setStatus(com.google.rpc.Status.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      public Builder mergeStatus(com.google.rpc.Status value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && status_ != null
              && status_ != com.google.rpc.Status.getDefaultInstance()) {
            getStatusBuilder().mergeFrom(value);
          } else {
            status_ = value;
          }
        } else {
          statusBuilder_.mergeFrom(value);
        }
        if (status_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      public com.google.rpc.Status.Builder getStatusBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
        }
      }
      /**
       *
       *
       * <pre>
       * Details of the error when processing the
       * [Operation][google.api.servicecontrol.v1.Operation].
       * </pre>
       *
       * <code>.google.rpc.Status status = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.rpc.Status,
                  com.google.rpc.Status.Builder,
                  com.google.rpc.StatusOrBuilder>(getStatus(), getParentForChildren(), isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.ReportResponse.ReportError)
    }

    // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.ReportResponse.ReportError)
    private static final com.google.api.servicecontrol.v1.ReportResponse.ReportError
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.ReportResponse.ReportError();
    }

    public static com.google.api.servicecontrol.v1.ReportResponse.ReportError getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportError> PARSER =
        new com.google.protobuf.AbstractParser<ReportError>() {
          @java.lang.Override
          public ReportError parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ReportError> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReportError> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.ReportResponse.ReportError getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int REPORT_ERRORS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.api.servicecontrol.v1.ReportResponse.ReportError> reportErrors_;
  /**
   *
   *
   * <pre>
   * Partial failures, one for each `Operation` in the request that failed
   * processing. There are three possible combinations of the RPC status:
   *
   * 1. The combination of a successful RPC status and an empty `report_errors`
   *    list indicates a complete success where all `Operations` in the
   *    request are processed successfully.
   * 2. The combination of a successful RPC status and a non-empty
   *    `report_errors` list indicates a partial success where some
   *    `Operations` in the request succeeded. Each
   *    `Operation` that failed processing has a corresponding item
   *    in this list.
   * 3. A failed RPC status indicates a general non-deterministic failure.
   *    When this happens, it's impossible to know which of the
   *    'Operations' in the request succeeded or failed.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.api.servicecontrol.v1.ReportResponse.ReportError>
      getReportErrorsList() {
    return reportErrors_;
  }
  /**
   *
   *
   * <pre>
   * Partial failures, one for each `Operation` in the request that failed
   * processing. There are three possible combinations of the RPC status:
   *
   * 1. The combination of a successful RPC status and an empty `report_errors`
   *    list indicates a complete success where all `Operations` in the
   *    request are processed successfully.
   * 2. The combination of a successful RPC status and a non-empty
   *    `report_errors` list indicates a partial success where some
   *    `Operations` in the request succeeded. Each
   *    `Operation` that failed processing has a corresponding item
   *    in this list.
   * 3. A failed RPC status indicates a general non-deterministic failure.
   *    When this happens, it's impossible to know which of the
   *    'Operations' in the request succeeded or failed.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder>
      getReportErrorsOrBuilderList() {
    return reportErrors_;
  }
  /**
   *
   *
   * <pre>
   * Partial failures, one for each `Operation` in the request that failed
   * processing. There are three possible combinations of the RPC status:
   *
   * 1. The combination of a successful RPC status and an empty `report_errors`
   *    list indicates a complete success where all `Operations` in the
   *    request are processed successfully.
   * 2. The combination of a successful RPC status and a non-empty
   *    `report_errors` list indicates a partial success where some
   *    `Operations` in the request succeeded. Each
   *    `Operation` that failed processing has a corresponding item
   *    in this list.
   * 3. A failed RPC status indicates a general non-deterministic failure.
   *    When this happens, it's impossible to know which of the
   *    'Operations' in the request succeeded or failed.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
   * </code>
   */
  @java.lang.Override
  public int getReportErrorsCount() {
    return reportErrors_.size();
  }
  /**
   *
   *
   * <pre>
   * Partial failures, one for each `Operation` in the request that failed
   * processing. There are three possible combinations of the RPC status:
   *
   * 1. The combination of a successful RPC status and an empty `report_errors`
   *    list indicates a complete success where all `Operations` in the
   *    request are processed successfully.
   * 2. The combination of a successful RPC status and a non-empty
   *    `report_errors` list indicates a partial success where some
   *    `Operations` in the request succeeded. Each
   *    `Operation` that failed processing has a corresponding item
   *    in this list.
   * 3. A failed RPC status indicates a general non-deterministic failure.
   *    When this happens, it's impossible to know which of the
   *    'Operations' in the request succeeded or failed.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.ReportResponse.ReportError getReportErrors(int index) {
    return reportErrors_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Partial failures, one for each `Operation` in the request that failed
   * processing. There are three possible combinations of the RPC status:
   *
   * 1. The combination of a successful RPC status and an empty `report_errors`
   *    list indicates a complete success where all `Operations` in the
   *    request are processed successfully.
   * 2. The combination of a successful RPC status and a non-empty
   *    `report_errors` list indicates a partial success where some
   *    `Operations` in the request succeeded. Each
   *    `Operation` that failed processing has a corresponding item
   *    in this list.
   * 3. A failed RPC status indicates a general non-deterministic failure.
   *    When this happens, it's impossible to know which of the
   *    'Operations' in the request succeeded or failed.
   * </pre>
   *
   * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
   * </code>
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder
      getReportErrorsOrBuilder(int index) {
    return reportErrors_.get(index);
  }

  public static final int SERVICE_CONFIG_ID_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object serviceConfigId_ = "";
  /**
   *
   *
   * <pre>
   * The actual config id used to process the request.
   * </pre>
   *
   * <code>string service_config_id = 2;</code>
   *
   * @return The serviceConfigId.
   */
  @java.lang.Override
  public java.lang.String getServiceConfigId() {
    java.lang.Object ref = serviceConfigId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceConfigId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The actual config id used to process the request.
   * </pre>
   *
   * <code>string service_config_id = 2;</code>
   *
   * @return The bytes for serviceConfigId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServiceConfigIdBytes() {
    java.lang.Object ref = serviceConfigId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      serviceConfigId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICE_ROLLOUT_ID_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object serviceRolloutId_ = "";
  /**
   *
   *
   * <pre>
   * The current service rollout id used to process the request.
   * </pre>
   *
   * <code>string service_rollout_id = 4;</code>
   *
   * @return The serviceRolloutId.
   */
  @java.lang.Override
  public java.lang.String getServiceRolloutId() {
    java.lang.Object ref = serviceRolloutId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceRolloutId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The current service rollout id used to process the request.
   * </pre>
   *
   * <code>string service_rollout_id = 4;</code>
   *
   * @return The bytes for serviceRolloutId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getServiceRolloutIdBytes() {
    java.lang.Object ref = serviceRolloutId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      serviceRolloutId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < reportErrors_.size(); i++) {
      output.writeMessage(1, reportErrors_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceConfigId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, serviceConfigId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceRolloutId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serviceRolloutId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < reportErrors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, reportErrors_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceConfigId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, serviceConfigId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceRolloutId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serviceRolloutId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.api.servicecontrol.v1.ReportResponse)) {
      return super.equals(obj);
    }
    com.google.api.servicecontrol.v1.ReportResponse other =
        (com.google.api.servicecontrol.v1.ReportResponse) obj;

    if (!getReportErrorsList().equals(other.getReportErrorsList())) return false;
    if (!getServiceConfigId().equals(other.getServiceConfigId())) return false;
    if (!getServiceRolloutId().equals(other.getServiceRolloutId())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getReportErrorsCount() > 0) {
      hash = (37 * hash) + REPORT_ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getReportErrorsList().hashCode();
    }
    hash = (37 * hash) + SERVICE_CONFIG_ID_FIELD_NUMBER;
    hash = (53 * hash) + getServiceConfigId().hashCode();
    hash = (37 * hash) + SERVICE_ROLLOUT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getServiceRolloutId().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.api.servicecontrol.v1.ReportResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.api.servicecontrol.v1.ReportResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Response message for the Report method.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.ReportResponse}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.ReportResponse)
      com.google.api.servicecontrol.v1.ReportResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.api.servicecontrol.v1.ServiceControllerProto
          .internal_static_google_api_servicecontrol_v1_ReportResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.ServiceControllerProto
          .internal_static_google_api_servicecontrol_v1_ReportResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.ReportResponse.class,
              com.google.api.servicecontrol.v1.ReportResponse.Builder.class);
    }

    // Construct using com.google.api.servicecontrol.v1.ReportResponse.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (reportErrorsBuilder_ == null) {
        reportErrors_ = java.util.Collections.emptyList();
      } else {
        reportErrors_ = null;
        reportErrorsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      serviceConfigId_ = "";
      serviceRolloutId_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.api.servicecontrol.v1.ServiceControllerProto
          .internal_static_google_api_servicecontrol_v1_ReportResponse_descriptor;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.ReportResponse getDefaultInstanceForType() {
      return com.google.api.servicecontrol.v1.ReportResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.ReportResponse build() {
      com.google.api.servicecontrol.v1.ReportResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.ReportResponse buildPartial() {
      com.google.api.servicecontrol.v1.ReportResponse result =
          new com.google.api.servicecontrol.v1.ReportResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.api.servicecontrol.v1.ReportResponse result) {
      if (reportErrorsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          reportErrors_ = java.util.Collections.unmodifiableList(reportErrors_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.reportErrors_ = reportErrors_;
      } else {
        result.reportErrors_ = reportErrorsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.api.servicecontrol.v1.ReportResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.serviceConfigId_ = serviceConfigId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.serviceRolloutId_ = serviceRolloutId_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.api.servicecontrol.v1.ReportResponse) {
        return mergeFrom((com.google.api.servicecontrol.v1.ReportResponse) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.api.servicecontrol.v1.ReportResponse other) {
      if (other == com.google.api.servicecontrol.v1.ReportResponse.getDefaultInstance())
        return this;
      if (reportErrorsBuilder_ == null) {
        if (!other.reportErrors_.isEmpty()) {
          if (reportErrors_.isEmpty()) {
            reportErrors_ = other.reportErrors_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReportErrorsIsMutable();
            reportErrors_.addAll(other.reportErrors_);
          }
          onChanged();
        }
      } else {
        if (!other.reportErrors_.isEmpty()) {
          if (reportErrorsBuilder_.isEmpty()) {
            reportErrorsBuilder_.dispose();
            reportErrorsBuilder_ = null;
            reportErrors_ = other.reportErrors_;
            bitField0_ = (bitField0_ & ~0x00000001);
            reportErrorsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getReportErrorsFieldBuilder()
                    : null;
          } else {
            reportErrorsBuilder_.addAllMessages(other.reportErrors_);
          }
        }
      }
      if (!other.getServiceConfigId().isEmpty()) {
        serviceConfigId_ = other.serviceConfigId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getServiceRolloutId().isEmpty()) {
        serviceRolloutId_ = other.serviceRolloutId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.api.servicecontrol.v1.ReportResponse.ReportError m =
                    input.readMessage(
                        com.google.api.servicecontrol.v1.ReportResponse.ReportError.parser(),
                        extensionRegistry);
                if (reportErrorsBuilder_ == null) {
                  ensureReportErrorsIsMutable();
                  reportErrors_.add(m);
                } else {
                  reportErrorsBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                serviceConfigId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 34:
              {
                serviceRolloutId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 34
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.api.servicecontrol.v1.ReportResponse.ReportError>
        reportErrors_ = java.util.Collections.emptyList();

    private void ensureReportErrorsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        reportErrors_ =
            new java.util.ArrayList<com.google.api.servicecontrol.v1.ReportResponse.ReportError>(
                reportErrors_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.api.servicecontrol.v1.ReportResponse.ReportError,
            com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder,
            com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder>
        reportErrorsBuilder_;

    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.ReportResponse.ReportError>
        getReportErrorsList() {
      if (reportErrorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(reportErrors_);
      } else {
        return reportErrorsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public int getReportErrorsCount() {
      if (reportErrorsBuilder_ == null) {
        return reportErrors_.size();
      } else {
        return reportErrorsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public com.google.api.servicecontrol.v1.ReportResponse.ReportError getReportErrors(int index) {
      if (reportErrorsBuilder_ == null) {
        return reportErrors_.get(index);
      } else {
        return reportErrorsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder setReportErrors(
        int index, com.google.api.servicecontrol.v1.ReportResponse.ReportError value) {
      if (reportErrorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReportErrorsIsMutable();
        reportErrors_.set(index, value);
        onChanged();
      } else {
        reportErrorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder setReportErrors(
        int index,
        com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder builderForValue) {
      if (reportErrorsBuilder_ == null) {
        ensureReportErrorsIsMutable();
        reportErrors_.set(index, builderForValue.build());
        onChanged();
      } else {
        reportErrorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder addReportErrors(
        com.google.api.servicecontrol.v1.ReportResponse.ReportError value) {
      if (reportErrorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReportErrorsIsMutable();
        reportErrors_.add(value);
        onChanged();
      } else {
        reportErrorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder addReportErrors(
        int index, com.google.api.servicecontrol.v1.ReportResponse.ReportError value) {
      if (reportErrorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReportErrorsIsMutable();
        reportErrors_.add(index, value);
        onChanged();
      } else {
        reportErrorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder addReportErrors(
        com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder builderForValue) {
      if (reportErrorsBuilder_ == null) {
        ensureReportErrorsIsMutable();
        reportErrors_.add(builderForValue.build());
        onChanged();
      } else {
        reportErrorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder addReportErrors(
        int index,
        com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder builderForValue) {
      if (reportErrorsBuilder_ == null) {
        ensureReportErrorsIsMutable();
        reportErrors_.add(index, builderForValue.build());
        onChanged();
      } else {
        reportErrorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder addAllReportErrors(
        java.lang.Iterable<? extends com.google.api.servicecontrol.v1.ReportResponse.ReportError>
            values) {
      if (reportErrorsBuilder_ == null) {
        ensureReportErrorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, reportErrors_);
        onChanged();
      } else {
        reportErrorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder clearReportErrors() {
      if (reportErrorsBuilder_ == null) {
        reportErrors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        reportErrorsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public Builder removeReportErrors(int index) {
      if (reportErrorsBuilder_ == null) {
        ensureReportErrorsIsMutable();
        reportErrors_.remove(index);
        onChanged();
      } else {
        reportErrorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder
        getReportErrorsBuilder(int index) {
      return getReportErrorsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder
        getReportErrorsOrBuilder(int index) {
      if (reportErrorsBuilder_ == null) {
        return reportErrors_.get(index);
      } else {
        return reportErrorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public java.util.List<
            ? extends com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder>
        getReportErrorsOrBuilderList() {
      if (reportErrorsBuilder_ != null) {
        return reportErrorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(reportErrors_);
      }
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder
        addReportErrorsBuilder() {
      return getReportErrorsFieldBuilder()
          .addBuilder(
              com.google.api.servicecontrol.v1.ReportResponse.ReportError.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder
        addReportErrorsBuilder(int index) {
      return getReportErrorsFieldBuilder()
          .addBuilder(
              index,
              com.google.api.servicecontrol.v1.ReportResponse.ReportError.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Partial failures, one for each `Operation` in the request that failed
     * processing. There are three possible combinations of the RPC status:
     *
     * 1. The combination of a successful RPC status and an empty `report_errors`
     *    list indicates a complete success where all `Operations` in the
     *    request are processed successfully.
     * 2. The combination of a successful RPC status and a non-empty
     *    `report_errors` list indicates a partial success where some
     *    `Operations` in the request succeeded. Each
     *    `Operation` that failed processing has a corresponding item
     *    in this list.
     * 3. A failed RPC status indicates a general non-deterministic failure.
     *    When this happens, it's impossible to know which of the
     *    'Operations' in the request succeeded or failed.
     * </pre>
     *
     * <code>repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
     * </code>
     */
    public java.util.List<com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder>
        getReportErrorsBuilderList() {
      return getReportErrorsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.api.servicecontrol.v1.ReportResponse.ReportError,
            com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder,
            com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder>
        getReportErrorsFieldBuilder() {
      if (reportErrorsBuilder_ == null) {
        reportErrorsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.api.servicecontrol.v1.ReportResponse.ReportError,
                com.google.api.servicecontrol.v1.ReportResponse.ReportError.Builder,
                com.google.api.servicecontrol.v1.ReportResponse.ReportErrorOrBuilder>(
                reportErrors_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        reportErrors_ = null;
      }
      return reportErrorsBuilder_;
    }

    private java.lang.Object serviceConfigId_ = "";
    /**
     *
     *
     * <pre>
     * The actual config id used to process the request.
     * </pre>
     *
     * <code>string service_config_id = 2;</code>
     *
     * @return The serviceConfigId.
     */
    public java.lang.String getServiceConfigId() {
      java.lang.Object ref = serviceConfigId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceConfigId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The actual config id used to process the request.
     * </pre>
     *
     * <code>string service_config_id = 2;</code>
     *
     * @return The bytes for serviceConfigId.
     */
    public com.google.protobuf.ByteString getServiceConfigIdBytes() {
      java.lang.Object ref = serviceConfigId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serviceConfigId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The actual config id used to process the request.
     * </pre>
     *
     * <code>string service_config_id = 2;</code>
     *
     * @param value The serviceConfigId to set.
     * @return This builder for chaining.
     */
    public Builder setServiceConfigId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      serviceConfigId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The actual config id used to process the request.
     * </pre>
     *
     * <code>string service_config_id = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServiceConfigId() {
      serviceConfigId_ = getDefaultInstance().getServiceConfigId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The actual config id used to process the request.
     * </pre>
     *
     * <code>string service_config_id = 2;</code>
     *
     * @param value The bytes for serviceConfigId to set.
     * @return This builder for chaining.
     */
    public Builder setServiceConfigIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      serviceConfigId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object serviceRolloutId_ = "";
    /**
     *
     *
     * <pre>
     * The current service rollout id used to process the request.
     * </pre>
     *
     * <code>string service_rollout_id = 4;</code>
     *
     * @return The serviceRolloutId.
     */
    public java.lang.String getServiceRolloutId() {
      java.lang.Object ref = serviceRolloutId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceRolloutId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The current service rollout id used to process the request.
     * </pre>
     *
     * <code>string service_rollout_id = 4;</code>
     *
     * @return The bytes for serviceRolloutId.
     */
    public com.google.protobuf.ByteString getServiceRolloutIdBytes() {
      java.lang.Object ref = serviceRolloutId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        serviceRolloutId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The current service rollout id used to process the request.
     * </pre>
     *
     * <code>string service_rollout_id = 4;</code>
     *
     * @param value The serviceRolloutId to set.
     * @return This builder for chaining.
     */
    public Builder setServiceRolloutId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      serviceRolloutId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The current service rollout id used to process the request.
     * </pre>
     *
     * <code>string service_rollout_id = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearServiceRolloutId() {
      serviceRolloutId_ = getDefaultInstance().getServiceRolloutId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The current service rollout id used to process the request.
     * </pre>
     *
     * <code>string service_rollout_id = 4;</code>
     *
     * @param value The bytes for serviceRolloutId to set.
     * @return This builder for chaining.
     */
    public Builder setServiceRolloutIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      serviceRolloutId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.ReportResponse)
  }

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.ReportResponse)
  private static final com.google.api.servicecontrol.v1.ReportResponse DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.ReportResponse();
  }

  public static com.google.api.servicecontrol.v1.ReportResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReportResponse> PARSER =
      new com.google.protobuf.AbstractParser<ReportResponse>() {
        @java.lang.Override
        public ReportResponse parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ReportResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReportResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.api.servicecontrol.v1.ReportResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
