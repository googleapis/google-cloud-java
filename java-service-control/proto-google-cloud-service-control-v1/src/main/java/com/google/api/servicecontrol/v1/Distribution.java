/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/distribution.proto

// Protobuf Java Version: 3.25.5
package com.google.api.servicecontrol.v1;

/**
 *
 *
 * <pre>
 * Distribution represents a frequency distribution of double-valued sample
 * points. It contains the size of the population of sample points plus
 * additional optional information:
 *
 * * the arithmetic mean of the samples
 * * the minimum and maximum of the samples
 * * the sum-squared-deviation of the samples, used to compute variance
 * * a histogram of the values of the sample points
 * </pre>
 *
 * Protobuf type {@code google.api.servicecontrol.v1.Distribution}
 */
public final class Distribution extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.Distribution)
    DistributionOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Distribution.newBuilder() to construct.
  private Distribution(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Distribution() {
    bucketCounts_ = emptyLongList();
    exemplars_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Distribution();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.api.servicecontrol.v1.DistributionProto
        .internal_static_google_api_servicecontrol_v1_Distribution_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.api.servicecontrol.v1.DistributionProto
        .internal_static_google_api_servicecontrol_v1_Distribution_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.api.servicecontrol.v1.Distribution.class,
            com.google.api.servicecontrol.v1.Distribution.Builder.class);
  }

  public interface LinearBucketsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.api.servicecontrol.v1.Distribution.LinearBuckets)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The number of finite buckets. With the underflow and overflow buckets,
     * the total number of buckets is `num_finite_buckets` + 2.
     * See comments on `bucket_options` for details.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     *
     * @return The numFiniteBuckets.
     */
    int getNumFiniteBuckets();

    /**
     *
     *
     * <pre>
     * The i'th linear bucket covers the interval
     *   [offset + (i-1) * width, offset + i * width)
     * where i ranges from 1 to num_finite_buckets, inclusive.
     * Must be strictly positive.
     * </pre>
     *
     * <code>double width = 2;</code>
     *
     * @return The width.
     */
    double getWidth();

    /**
     *
     *
     * <pre>
     * The i'th linear bucket covers the interval
     *   [offset + (i-1) * width, offset + i * width)
     * where i ranges from 1 to num_finite_buckets, inclusive.
     * </pre>
     *
     * <code>double offset = 3;</code>
     *
     * @return The offset.
     */
    double getOffset();
  }
  /**
   *
   *
   * <pre>
   * Describing buckets with constant width.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.Distribution.LinearBuckets}
   */
  public static final class LinearBuckets extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.Distribution.LinearBuckets)
      LinearBucketsOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use LinearBuckets.newBuilder() to construct.
    private LinearBuckets(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private LinearBuckets() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new LinearBuckets();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_LinearBuckets_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_LinearBuckets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.Distribution.LinearBuckets.class,
              com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder.class);
    }

    public static final int NUM_FINITE_BUCKETS_FIELD_NUMBER = 1;
    private int numFiniteBuckets_ = 0;
    /**
     *
     *
     * <pre>
     * The number of finite buckets. With the underflow and overflow buckets,
     * the total number of buckets is `num_finite_buckets` + 2.
     * See comments on `bucket_options` for details.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     *
     * @return The numFiniteBuckets.
     */
    @java.lang.Override
    public int getNumFiniteBuckets() {
      return numFiniteBuckets_;
    }

    public static final int WIDTH_FIELD_NUMBER = 2;
    private double width_ = 0D;
    /**
     *
     *
     * <pre>
     * The i'th linear bucket covers the interval
     *   [offset + (i-1) * width, offset + i * width)
     * where i ranges from 1 to num_finite_buckets, inclusive.
     * Must be strictly positive.
     * </pre>
     *
     * <code>double width = 2;</code>
     *
     * @return The width.
     */
    @java.lang.Override
    public double getWidth() {
      return width_;
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private double offset_ = 0D;
    /**
     *
     *
     * <pre>
     * The i'th linear bucket covers the interval
     *   [offset + (i-1) * width, offset + i * width)
     * where i ranges from 1 to num_finite_buckets, inclusive.
     * </pre>
     *
     * <code>double offset = 3;</code>
     *
     * @return The offset.
     */
    @java.lang.Override
    public double getOffset() {
      return offset_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (numFiniteBuckets_ != 0) {
        output.writeInt32(1, numFiniteBuckets_);
      }
      if (java.lang.Double.doubleToRawLongBits(width_) != 0) {
        output.writeDouble(2, width_);
      }
      if (java.lang.Double.doubleToRawLongBits(offset_) != 0) {
        output.writeDouble(3, offset_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numFiniteBuckets_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, numFiniteBuckets_);
      }
      if (java.lang.Double.doubleToRawLongBits(width_) != 0) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, width_);
      }
      if (java.lang.Double.doubleToRawLongBits(offset_) != 0) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, offset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.api.servicecontrol.v1.Distribution.LinearBuckets)) {
        return super.equals(obj);
      }
      com.google.api.servicecontrol.v1.Distribution.LinearBuckets other =
          (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) obj;

      if (getNumFiniteBuckets() != other.getNumFiniteBuckets()) return false;
      if (java.lang.Double.doubleToLongBits(getWidth())
          != java.lang.Double.doubleToLongBits(other.getWidth())) return false;
      if (java.lang.Double.doubleToLongBits(getOffset())
          != java.lang.Double.doubleToLongBits(other.getOffset())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_FINITE_BUCKETS_FIELD_NUMBER;
      hash = (53 * hash) + getNumFiniteBuckets();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getWidth()));
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getOffset()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.api.servicecontrol.v1.Distribution.LinearBuckets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Describing buckets with constant width.
     * </pre>
     *
     * Protobuf type {@code google.api.servicecontrol.v1.Distribution.LinearBuckets}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.Distribution.LinearBuckets)
        com.google.api.servicecontrol.v1.Distribution.LinearBucketsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_LinearBuckets_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_LinearBuckets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.api.servicecontrol.v1.Distribution.LinearBuckets.class,
                com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder.class);
      }

      // Construct using com.google.api.servicecontrol.v1.Distribution.LinearBuckets.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        numFiniteBuckets_ = 0;
        width_ = 0D;
        offset_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_LinearBuckets_descriptor;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.LinearBuckets
          getDefaultInstanceForType() {
        return com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.LinearBuckets build() {
        com.google.api.servicecontrol.v1.Distribution.LinearBuckets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.LinearBuckets buildPartial() {
        com.google.api.servicecontrol.v1.Distribution.LinearBuckets result =
            new com.google.api.servicecontrol.v1.Distribution.LinearBuckets(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.api.servicecontrol.v1.Distribution.LinearBuckets result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.numFiniteBuckets_ = numFiniteBuckets_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.width_ = width_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.offset_ = offset_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.api.servicecontrol.v1.Distribution.LinearBuckets) {
          return mergeFrom((com.google.api.servicecontrol.v1.Distribution.LinearBuckets) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.api.servicecontrol.v1.Distribution.LinearBuckets other) {
        if (other
            == com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance())
          return this;
        if (other.getNumFiniteBuckets() != 0) {
          setNumFiniteBuckets(other.getNumFiniteBuckets());
        }
        if (other.getWidth() != 0D) {
          setWidth(other.getWidth());
        }
        if (other.getOffset() != 0D) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  numFiniteBuckets_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 17:
                {
                  width_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
              case 25:
                {
                  offset_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int numFiniteBuckets_;
      /**
       *
       *
       * <pre>
       * The number of finite buckets. With the underflow and overflow buckets,
       * the total number of buckets is `num_finite_buckets` + 2.
       * See comments on `bucket_options` for details.
       * </pre>
       *
       * <code>int32 num_finite_buckets = 1;</code>
       *
       * @return The numFiniteBuckets.
       */
      @java.lang.Override
      public int getNumFiniteBuckets() {
        return numFiniteBuckets_;
      }
      /**
       *
       *
       * <pre>
       * The number of finite buckets. With the underflow and overflow buckets,
       * the total number of buckets is `num_finite_buckets` + 2.
       * See comments on `bucket_options` for details.
       * </pre>
       *
       * <code>int32 num_finite_buckets = 1;</code>
       *
       * @param value The numFiniteBuckets to set.
       * @return This builder for chaining.
       */
      public Builder setNumFiniteBuckets(int value) {

        numFiniteBuckets_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The number of finite buckets. With the underflow and overflow buckets,
       * the total number of buckets is `num_finite_buckets` + 2.
       * See comments on `bucket_options` for details.
       * </pre>
       *
       * <code>int32 num_finite_buckets = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNumFiniteBuckets() {
        bitField0_ = (bitField0_ & ~0x00000001);
        numFiniteBuckets_ = 0;
        onChanged();
        return this;
      }

      private double width_;
      /**
       *
       *
       * <pre>
       * The i'th linear bucket covers the interval
       *   [offset + (i-1) * width, offset + i * width)
       * where i ranges from 1 to num_finite_buckets, inclusive.
       * Must be strictly positive.
       * </pre>
       *
       * <code>double width = 2;</code>
       *
       * @return The width.
       */
      @java.lang.Override
      public double getWidth() {
        return width_;
      }
      /**
       *
       *
       * <pre>
       * The i'th linear bucket covers the interval
       *   [offset + (i-1) * width, offset + i * width)
       * where i ranges from 1 to num_finite_buckets, inclusive.
       * Must be strictly positive.
       * </pre>
       *
       * <code>double width = 2;</code>
       *
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(double value) {

        width_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The i'th linear bucket covers the interval
       *   [offset + (i-1) * width, offset + i * width)
       * where i ranges from 1 to num_finite_buckets, inclusive.
       * Must be strictly positive.
       * </pre>
       *
       * <code>double width = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0D;
        onChanged();
        return this;
      }

      private double offset_;
      /**
       *
       *
       * <pre>
       * The i'th linear bucket covers the interval
       *   [offset + (i-1) * width, offset + i * width)
       * where i ranges from 1 to num_finite_buckets, inclusive.
       * </pre>
       *
       * <code>double offset = 3;</code>
       *
       * @return The offset.
       */
      @java.lang.Override
      public double getOffset() {
        return offset_;
      }
      /**
       *
       *
       * <pre>
       * The i'th linear bucket covers the interval
       *   [offset + (i-1) * width, offset + i * width)
       * where i ranges from 1 to num_finite_buckets, inclusive.
       * </pre>
       *
       * <code>double offset = 3;</code>
       *
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(double value) {

        offset_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The i'th linear bucket covers the interval
       *   [offset + (i-1) * width, offset + i * width)
       * where i ranges from 1 to num_finite_buckets, inclusive.
       * </pre>
       *
       * <code>double offset = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0D;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    }

    // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    private static final com.google.api.servicecontrol.v1.Distribution.LinearBuckets
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.Distribution.LinearBuckets();
    }

    public static com.google.api.servicecontrol.v1.Distribution.LinearBuckets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LinearBuckets> PARSER =
        new com.google.protobuf.AbstractParser<LinearBuckets>() {
          @java.lang.Override
          public LinearBuckets parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<LinearBuckets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LinearBuckets> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.LinearBuckets getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ExponentialBucketsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The number of finite buckets. With the underflow and overflow buckets,
     * the total number of buckets is `num_finite_buckets` + 2.
     * See comments on `bucket_options` for details.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     *
     * @return The numFiniteBuckets.
     */
    int getNumFiniteBuckets();

    /**
     *
     *
     * <pre>
     * The i'th exponential bucket covers the interval
     *   [scale * growth_factor^(i-1), scale * growth_factor^i)
     * where i ranges from 1 to num_finite_buckets inclusive.
     * Must be larger than 1.0.
     * </pre>
     *
     * <code>double growth_factor = 2;</code>
     *
     * @return The growthFactor.
     */
    double getGrowthFactor();

    /**
     *
     *
     * <pre>
     * The i'th exponential bucket covers the interval
     *   [scale * growth_factor^(i-1), scale * growth_factor^i)
     * where i ranges from 1 to num_finite_buckets inclusive.
     * Must be &gt; 0.
     * </pre>
     *
     * <code>double scale = 3;</code>
     *
     * @return The scale.
     */
    double getScale();
  }
  /**
   *
   *
   * <pre>
   * Describing buckets with exponentially growing width.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.Distribution.ExponentialBuckets}
   */
  public static final class ExponentialBuckets extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
      ExponentialBucketsOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ExponentialBuckets.newBuilder() to construct.
    private ExponentialBuckets(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ExponentialBuckets() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ExponentialBuckets();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_ExponentialBuckets_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_ExponentialBuckets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.class,
              com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder.class);
    }

    public static final int NUM_FINITE_BUCKETS_FIELD_NUMBER = 1;
    private int numFiniteBuckets_ = 0;
    /**
     *
     *
     * <pre>
     * The number of finite buckets. With the underflow and overflow buckets,
     * the total number of buckets is `num_finite_buckets` + 2.
     * See comments on `bucket_options` for details.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     *
     * @return The numFiniteBuckets.
     */
    @java.lang.Override
    public int getNumFiniteBuckets() {
      return numFiniteBuckets_;
    }

    public static final int GROWTH_FACTOR_FIELD_NUMBER = 2;
    private double growthFactor_ = 0D;
    /**
     *
     *
     * <pre>
     * The i'th exponential bucket covers the interval
     *   [scale * growth_factor^(i-1), scale * growth_factor^i)
     * where i ranges from 1 to num_finite_buckets inclusive.
     * Must be larger than 1.0.
     * </pre>
     *
     * <code>double growth_factor = 2;</code>
     *
     * @return The growthFactor.
     */
    @java.lang.Override
    public double getGrowthFactor() {
      return growthFactor_;
    }

    public static final int SCALE_FIELD_NUMBER = 3;
    private double scale_ = 0D;
    /**
     *
     *
     * <pre>
     * The i'th exponential bucket covers the interval
     *   [scale * growth_factor^(i-1), scale * growth_factor^i)
     * where i ranges from 1 to num_finite_buckets inclusive.
     * Must be &gt; 0.
     * </pre>
     *
     * <code>double scale = 3;</code>
     *
     * @return The scale.
     */
    @java.lang.Override
    public double getScale() {
      return scale_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (numFiniteBuckets_ != 0) {
        output.writeInt32(1, numFiniteBuckets_);
      }
      if (java.lang.Double.doubleToRawLongBits(growthFactor_) != 0) {
        output.writeDouble(2, growthFactor_);
      }
      if (java.lang.Double.doubleToRawLongBits(scale_) != 0) {
        output.writeDouble(3, scale_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numFiniteBuckets_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, numFiniteBuckets_);
      }
      if (java.lang.Double.doubleToRawLongBits(growthFactor_) != 0) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, growthFactor_);
      }
      if (java.lang.Double.doubleToRawLongBits(scale_) != 0) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, scale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets)) {
        return super.equals(obj);
      }
      com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets other =
          (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) obj;

      if (getNumFiniteBuckets() != other.getNumFiniteBuckets()) return false;
      if (java.lang.Double.doubleToLongBits(getGrowthFactor())
          != java.lang.Double.doubleToLongBits(other.getGrowthFactor())) return false;
      if (java.lang.Double.doubleToLongBits(getScale())
          != java.lang.Double.doubleToLongBits(other.getScale())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_FINITE_BUCKETS_FIELD_NUMBER;
      hash = (53 * hash) + getNumFiniteBuckets();
      hash = (37 * hash) + GROWTH_FACTOR_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getGrowthFactor()));
      hash = (37 * hash) + SCALE_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getScale()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Describing buckets with exponentially growing width.
     * </pre>
     *
     * Protobuf type {@code google.api.servicecontrol.v1.Distribution.ExponentialBuckets}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
        com.google.api.servicecontrol.v1.Distribution.ExponentialBucketsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_ExponentialBuckets_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_ExponentialBuckets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.class,
                com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder.class);
      }

      // Construct using
      // com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        numFiniteBuckets_ = 0;
        growthFactor_ = 0D;
        scale_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_ExponentialBuckets_descriptor;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
          getDefaultInstanceForType() {
        return com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets build() {
        com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets buildPartial() {
        com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets result =
            new com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.numFiniteBuckets_ = numFiniteBuckets_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.growthFactor_ = growthFactor_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.scale_ = scale_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) {
          return mergeFrom(
              (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets other) {
        if (other
            == com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
                .getDefaultInstance()) return this;
        if (other.getNumFiniteBuckets() != 0) {
          setNumFiniteBuckets(other.getNumFiniteBuckets());
        }
        if (other.getGrowthFactor() != 0D) {
          setGrowthFactor(other.getGrowthFactor());
        }
        if (other.getScale() != 0D) {
          setScale(other.getScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  numFiniteBuckets_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 17:
                {
                  growthFactor_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
              case 25:
                {
                  scale_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int numFiniteBuckets_;
      /**
       *
       *
       * <pre>
       * The number of finite buckets. With the underflow and overflow buckets,
       * the total number of buckets is `num_finite_buckets` + 2.
       * See comments on `bucket_options` for details.
       * </pre>
       *
       * <code>int32 num_finite_buckets = 1;</code>
       *
       * @return The numFiniteBuckets.
       */
      @java.lang.Override
      public int getNumFiniteBuckets() {
        return numFiniteBuckets_;
      }
      /**
       *
       *
       * <pre>
       * The number of finite buckets. With the underflow and overflow buckets,
       * the total number of buckets is `num_finite_buckets` + 2.
       * See comments on `bucket_options` for details.
       * </pre>
       *
       * <code>int32 num_finite_buckets = 1;</code>
       *
       * @param value The numFiniteBuckets to set.
       * @return This builder for chaining.
       */
      public Builder setNumFiniteBuckets(int value) {

        numFiniteBuckets_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The number of finite buckets. With the underflow and overflow buckets,
       * the total number of buckets is `num_finite_buckets` + 2.
       * See comments on `bucket_options` for details.
       * </pre>
       *
       * <code>int32 num_finite_buckets = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearNumFiniteBuckets() {
        bitField0_ = (bitField0_ & ~0x00000001);
        numFiniteBuckets_ = 0;
        onChanged();
        return this;
      }

      private double growthFactor_;
      /**
       *
       *
       * <pre>
       * The i'th exponential bucket covers the interval
       *   [scale * growth_factor^(i-1), scale * growth_factor^i)
       * where i ranges from 1 to num_finite_buckets inclusive.
       * Must be larger than 1.0.
       * </pre>
       *
       * <code>double growth_factor = 2;</code>
       *
       * @return The growthFactor.
       */
      @java.lang.Override
      public double getGrowthFactor() {
        return growthFactor_;
      }
      /**
       *
       *
       * <pre>
       * The i'th exponential bucket covers the interval
       *   [scale * growth_factor^(i-1), scale * growth_factor^i)
       * where i ranges from 1 to num_finite_buckets inclusive.
       * Must be larger than 1.0.
       * </pre>
       *
       * <code>double growth_factor = 2;</code>
       *
       * @param value The growthFactor to set.
       * @return This builder for chaining.
       */
      public Builder setGrowthFactor(double value) {

        growthFactor_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The i'th exponential bucket covers the interval
       *   [scale * growth_factor^(i-1), scale * growth_factor^i)
       * where i ranges from 1 to num_finite_buckets inclusive.
       * Must be larger than 1.0.
       * </pre>
       *
       * <code>double growth_factor = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearGrowthFactor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        growthFactor_ = 0D;
        onChanged();
        return this;
      }

      private double scale_;
      /**
       *
       *
       * <pre>
       * The i'th exponential bucket covers the interval
       *   [scale * growth_factor^(i-1), scale * growth_factor^i)
       * where i ranges from 1 to num_finite_buckets inclusive.
       * Must be &gt; 0.
       * </pre>
       *
       * <code>double scale = 3;</code>
       *
       * @return The scale.
       */
      @java.lang.Override
      public double getScale() {
        return scale_;
      }
      /**
       *
       *
       * <pre>
       * The i'th exponential bucket covers the interval
       *   [scale * growth_factor^(i-1), scale * growth_factor^i)
       * where i ranges from 1 to num_finite_buckets inclusive.
       * Must be &gt; 0.
       * </pre>
       *
       * <code>double scale = 3;</code>
       *
       * @param value The scale to set.
       * @return This builder for chaining.
       */
      public Builder setScale(double value) {

        scale_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The i'th exponential bucket covers the interval
       *   [scale * growth_factor^(i-1), scale * growth_factor^i)
       * where i ranges from 1 to num_finite_buckets inclusive.
       * Must be &gt; 0.
       * </pre>
       *
       * <code>double scale = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scale_ = 0D;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    }

    // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    private static final com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets();
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExponentialBuckets> PARSER =
        new com.google.protobuf.AbstractParser<ExponentialBuckets>() {
          @java.lang.Override
          public ExponentialBuckets parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ExponentialBuckets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExponentialBuckets> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface ExplicitBucketsOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * 'bound' is a list of strictly increasing boundaries between
     * buckets. Note that a list of length N-1 defines N buckets because
     * of fenceposting. See comments on `bucket_options` for details.
     *
     * The i'th finite bucket covers the interval
     *   [bound[i-1], bound[i])
     * where i ranges from 1 to bound_size() - 1. Note that there are no
     * finite buckets at all if 'bound' only contains a single element; in
     * that special case the single bound defines the boundary between the
     * underflow and overflow buckets.
     *
     * bucket number                   lower bound    upper bound
     *  i == 0 (underflow)              -inf           bound[i]
     *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
     *  i == bound_size() (overflow)    bound[i-1]     +inf
     * </pre>
     *
     * <code>repeated double bounds = 1;</code>
     *
     * @return A list containing the bounds.
     */
    java.util.List<java.lang.Double> getBoundsList();
    /**
     *
     *
     * <pre>
     * 'bound' is a list of strictly increasing boundaries between
     * buckets. Note that a list of length N-1 defines N buckets because
     * of fenceposting. See comments on `bucket_options` for details.
     *
     * The i'th finite bucket covers the interval
     *   [bound[i-1], bound[i])
     * where i ranges from 1 to bound_size() - 1. Note that there are no
     * finite buckets at all if 'bound' only contains a single element; in
     * that special case the single bound defines the boundary between the
     * underflow and overflow buckets.
     *
     * bucket number                   lower bound    upper bound
     *  i == 0 (underflow)              -inf           bound[i]
     *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
     *  i == bound_size() (overflow)    bound[i-1]     +inf
     * </pre>
     *
     * <code>repeated double bounds = 1;</code>
     *
     * @return The count of bounds.
     */
    int getBoundsCount();
    /**
     *
     *
     * <pre>
     * 'bound' is a list of strictly increasing boundaries between
     * buckets. Note that a list of length N-1 defines N buckets because
     * of fenceposting. See comments on `bucket_options` for details.
     *
     * The i'th finite bucket covers the interval
     *   [bound[i-1], bound[i])
     * where i ranges from 1 to bound_size() - 1. Note that there are no
     * finite buckets at all if 'bound' only contains a single element; in
     * that special case the single bound defines the boundary between the
     * underflow and overflow buckets.
     *
     * bucket number                   lower bound    upper bound
     *  i == 0 (underflow)              -inf           bound[i]
     *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
     *  i == bound_size() (overflow)    bound[i-1]     +inf
     * </pre>
     *
     * <code>repeated double bounds = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The bounds at the given index.
     */
    double getBounds(int index);
  }
  /**
   *
   *
   * <pre>
   * Describing buckets with arbitrary user-provided width.
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.Distribution.ExplicitBuckets}
   */
  public static final class ExplicitBuckets extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
      ExplicitBucketsOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use ExplicitBuckets.newBuilder() to construct.
    private ExplicitBuckets(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private ExplicitBuckets() {
      bounds_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new ExplicitBuckets();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_ExplicitBuckets_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_ExplicitBuckets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.class,
              com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder.class);
    }

    public static final int BOUNDS_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList bounds_ = emptyDoubleList();
    /**
     *
     *
     * <pre>
     * 'bound' is a list of strictly increasing boundaries between
     * buckets. Note that a list of length N-1 defines N buckets because
     * of fenceposting. See comments on `bucket_options` for details.
     *
     * The i'th finite bucket covers the interval
     *   [bound[i-1], bound[i])
     * where i ranges from 1 to bound_size() - 1. Note that there are no
     * finite buckets at all if 'bound' only contains a single element; in
     * that special case the single bound defines the boundary between the
     * underflow and overflow buckets.
     *
     * bucket number                   lower bound    upper bound
     *  i == 0 (underflow)              -inf           bound[i]
     *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
     *  i == bound_size() (overflow)    bound[i-1]     +inf
     * </pre>
     *
     * <code>repeated double bounds = 1;</code>
     *
     * @return A list containing the bounds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double> getBoundsList() {
      return bounds_;
    }
    /**
     *
     *
     * <pre>
     * 'bound' is a list of strictly increasing boundaries between
     * buckets. Note that a list of length N-1 defines N buckets because
     * of fenceposting. See comments on `bucket_options` for details.
     *
     * The i'th finite bucket covers the interval
     *   [bound[i-1], bound[i])
     * where i ranges from 1 to bound_size() - 1. Note that there are no
     * finite buckets at all if 'bound' only contains a single element; in
     * that special case the single bound defines the boundary between the
     * underflow and overflow buckets.
     *
     * bucket number                   lower bound    upper bound
     *  i == 0 (underflow)              -inf           bound[i]
     *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
     *  i == bound_size() (overflow)    bound[i-1]     +inf
     * </pre>
     *
     * <code>repeated double bounds = 1;</code>
     *
     * @return The count of bounds.
     */
    public int getBoundsCount() {
      return bounds_.size();
    }
    /**
     *
     *
     * <pre>
     * 'bound' is a list of strictly increasing boundaries between
     * buckets. Note that a list of length N-1 defines N buckets because
     * of fenceposting. See comments on `bucket_options` for details.
     *
     * The i'th finite bucket covers the interval
     *   [bound[i-1], bound[i])
     * where i ranges from 1 to bound_size() - 1. Note that there are no
     * finite buckets at all if 'bound' only contains a single element; in
     * that special case the single bound defines the boundary between the
     * underflow and overflow buckets.
     *
     * bucket number                   lower bound    upper bound
     *  i == 0 (underflow)              -inf           bound[i]
     *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
     *  i == bound_size() (overflow)    bound[i-1]     +inf
     * </pre>
     *
     * <code>repeated double bounds = 1;</code>
     *
     * @param index The index of the element to return.
     * @return The bounds at the given index.
     */
    public double getBounds(int index) {
      return bounds_.getDouble(index);
    }

    private int boundsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      getSerializedSize();
      if (getBoundsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(boundsMemoizedSerializedSize);
      }
      for (int i = 0; i < bounds_.size(); i++) {
        output.writeDoubleNoTag(bounds_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getBoundsList().size();
        size += dataSize;
        if (!getBoundsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
        }
        boundsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets)) {
        return super.equals(obj);
      }
      com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets other =
          (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) obj;

      if (!getBoundsList().equals(other.getBoundsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getBoundsCount() > 0) {
        hash = (37 * hash) + BOUNDS_FIELD_NUMBER;
        hash = (53 * hash) + getBoundsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Describing buckets with arbitrary user-provided width.
     * </pre>
     *
     * Protobuf type {@code google.api.servicecontrol.v1.Distribution.ExplicitBuckets}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
        com.google.api.servicecontrol.v1.Distribution.ExplicitBucketsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_ExplicitBuckets_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_ExplicitBuckets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.class,
                com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder.class);
      }

      // Construct using com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bounds_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.api.servicecontrol.v1.DistributionProto
            .internal_static_google_api_servicecontrol_v1_Distribution_ExplicitBuckets_descriptor;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets
          getDefaultInstanceForType() {
        return com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets build() {
        com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets buildPartial() {
        com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets result =
            new com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          bounds_.makeImmutable();
          result.bounds_ = bounds_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) {
          return mergeFrom((com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets other) {
        if (other
            == com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance())
          return this;
        if (!other.bounds_.isEmpty()) {
          if (bounds_.isEmpty()) {
            bounds_ = other.bounds_;
            bounds_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureBoundsIsMutable();
            bounds_.addAll(other.bounds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9:
                {
                  double v = input.readDouble();
                  ensureBoundsIsMutable();
                  bounds_.addDouble(v);
                  break;
                } // case 9
              case 10:
                {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureBoundsIsMutable(alloc / 8);
                  while (input.getBytesUntilLimit() > 0) {
                    bounds_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.Internal.DoubleList bounds_ = emptyDoubleList();

      private void ensureBoundsIsMutable() {
        if (!bounds_.isModifiable()) {
          bounds_ = makeMutableCopy(bounds_);
        }
        bitField0_ |= 0x00000001;
      }

      private void ensureBoundsIsMutable(int capacity) {
        if (!bounds_.isModifiable()) {
          bounds_ = makeMutableCopy(bounds_, capacity);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @return A list containing the bounds.
       */
      public java.util.List<java.lang.Double> getBoundsList() {
        bounds_.makeImmutable();
        return bounds_;
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @return The count of bounds.
       */
      public int getBoundsCount() {
        return bounds_.size();
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @param index The index of the element to return.
       * @return The bounds at the given index.
       */
      public double getBounds(int index) {
        return bounds_.getDouble(index);
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @param index The index to set the value at.
       * @param value The bounds to set.
       * @return This builder for chaining.
       */
      public Builder setBounds(int index, double value) {

        ensureBoundsIsMutable();
        bounds_.setDouble(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @param value The bounds to add.
       * @return This builder for chaining.
       */
      public Builder addBounds(double value) {

        ensureBoundsIsMutable();
        bounds_.addDouble(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @param values The bounds to add.
       * @return This builder for chaining.
       */
      public Builder addAllBounds(java.lang.Iterable<? extends java.lang.Double> values) {
        ensureBoundsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, bounds_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * 'bound' is a list of strictly increasing boundaries between
       * buckets. Note that a list of length N-1 defines N buckets because
       * of fenceposting. See comments on `bucket_options` for details.
       *
       * The i'th finite bucket covers the interval
       *   [bound[i-1], bound[i])
       * where i ranges from 1 to bound_size() - 1. Note that there are no
       * finite buckets at all if 'bound' only contains a single element; in
       * that special case the single bound defines the boundary between the
       * underflow and overflow buckets.
       *
       * bucket number                   lower bound    upper bound
       *  i == 0 (underflow)              -inf           bound[i]
       *  0 &lt; i &lt; bound_size()            bound[i-1]     bound[i]
       *  i == bound_size() (overflow)    bound[i-1]     +inf
       * </pre>
       *
       * <code>repeated double bounds = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearBounds() {
        bounds_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    }

    // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    private static final com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets();
    }

    public static com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExplicitBuckets> PARSER =
        new com.google.protobuf.AbstractParser<ExplicitBuckets>() {
          @java.lang.Override
          public ExplicitBuckets parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<ExplicitBuckets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExplicitBuckets> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bucketOptionCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object bucketOption_;

  public enum BucketOptionCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    LINEAR_BUCKETS(7),
    EXPONENTIAL_BUCKETS(8),
    EXPLICIT_BUCKETS(9),
    BUCKETOPTION_NOT_SET(0);
    private final int value;

    private BucketOptionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BucketOptionCase valueOf(int value) {
      return forNumber(value);
    }

    public static BucketOptionCase forNumber(int value) {
      switch (value) {
        case 7:
          return LINEAR_BUCKETS;
        case 8:
          return EXPONENTIAL_BUCKETS;
        case 9:
          return EXPLICIT_BUCKETS;
        case 0:
          return BUCKETOPTION_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public BucketOptionCase getBucketOptionCase() {
    return BucketOptionCase.forNumber(bucketOptionCase_);
  }

  public static final int COUNT_FIELD_NUMBER = 1;
  private long count_ = 0L;
  /**
   *
   *
   * <pre>
   * The total number of samples in the distribution. Must be &gt;= 0.
   * </pre>
   *
   * <code>int64 count = 1;</code>
   *
   * @return The count.
   */
  @java.lang.Override
  public long getCount() {
    return count_;
  }

  public static final int MEAN_FIELD_NUMBER = 2;
  private double mean_ = 0D;
  /**
   *
   *
   * <pre>
   * The arithmetic mean of the samples in the distribution. If `count` is
   * zero then this field must be zero.
   * </pre>
   *
   * <code>double mean = 2;</code>
   *
   * @return The mean.
   */
  @java.lang.Override
  public double getMean() {
    return mean_;
  }

  public static final int MINIMUM_FIELD_NUMBER = 3;
  private double minimum_ = 0D;
  /**
   *
   *
   * <pre>
   * The minimum of the population of values. Ignored if `count` is zero.
   * </pre>
   *
   * <code>double minimum = 3;</code>
   *
   * @return The minimum.
   */
  @java.lang.Override
  public double getMinimum() {
    return minimum_;
  }

  public static final int MAXIMUM_FIELD_NUMBER = 4;
  private double maximum_ = 0D;
  /**
   *
   *
   * <pre>
   * The maximum of the population of values. Ignored if `count` is zero.
   * </pre>
   *
   * <code>double maximum = 4;</code>
   *
   * @return The maximum.
   */
  @java.lang.Override
  public double getMaximum() {
    return maximum_;
  }

  public static final int SUM_OF_SQUARED_DEVIATION_FIELD_NUMBER = 5;
  private double sumOfSquaredDeviation_ = 0D;
  /**
   *
   *
   * <pre>
   * The sum of squared deviations from the mean:
   *   Sum[i=1..count]((x_i - mean)^2)
   * where each x_i is a sample values. If `count` is zero then this field
   * must be zero, otherwise validation of the request fails.
   * </pre>
   *
   * <code>double sum_of_squared_deviation = 5;</code>
   *
   * @return The sumOfSquaredDeviation.
   */
  @java.lang.Override
  public double getSumOfSquaredDeviation() {
    return sumOfSquaredDeviation_;
  }

  public static final int BUCKET_COUNTS_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.LongList bucketCounts_ = emptyLongList();
  /**
   *
   *
   * <pre>
   * The number of samples in each histogram bucket. `bucket_counts` are
   * optional. If present, they must sum to the `count` value.
   *
   * The buckets are defined below in `bucket_option`. There are N buckets.
   * `bucket_counts[0]` is the number of samples in the underflow bucket.
   * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
   * in each of the finite buckets. And `bucket_counts[N] is the number
   * of samples in the overflow bucket. See the comments of `bucket_option`
   * below for more details.
   *
   * Any suffix of trailing zeros may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 6;</code>
   *
   * @return A list containing the bucketCounts.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long> getBucketCountsList() {
    return bucketCounts_;
  }
  /**
   *
   *
   * <pre>
   * The number of samples in each histogram bucket. `bucket_counts` are
   * optional. If present, they must sum to the `count` value.
   *
   * The buckets are defined below in `bucket_option`. There are N buckets.
   * `bucket_counts[0]` is the number of samples in the underflow bucket.
   * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
   * in each of the finite buckets. And `bucket_counts[N] is the number
   * of samples in the overflow bucket. See the comments of `bucket_option`
   * below for more details.
   *
   * Any suffix of trailing zeros may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 6;</code>
   *
   * @return The count of bucketCounts.
   */
  public int getBucketCountsCount() {
    return bucketCounts_.size();
  }
  /**
   *
   *
   * <pre>
   * The number of samples in each histogram bucket. `bucket_counts` are
   * optional. If present, they must sum to the `count` value.
   *
   * The buckets are defined below in `bucket_option`. There are N buckets.
   * `bucket_counts[0]` is the number of samples in the underflow bucket.
   * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
   * in each of the finite buckets. And `bucket_counts[N] is the number
   * of samples in the overflow bucket. See the comments of `bucket_option`
   * below for more details.
   *
   * Any suffix of trailing zeros may be omitted.
   * </pre>
   *
   * <code>repeated int64 bucket_counts = 6;</code>
   *
   * @param index The index of the element to return.
   * @return The bucketCounts at the given index.
   */
  public long getBucketCounts(int index) {
    return bucketCounts_.getLong(index);
  }

  private int bucketCountsMemoizedSerializedSize = -1;

  public static final int LINEAR_BUCKETS_FIELD_NUMBER = 7;
  /**
   *
   *
   * <pre>
   * Buckets with constant width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
   *
   * @return Whether the linearBuckets field is set.
   */
  @java.lang.Override
  public boolean hasLinearBuckets() {
    return bucketOptionCase_ == 7;
  }
  /**
   *
   *
   * <pre>
   * Buckets with constant width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
   *
   * @return The linearBuckets.
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution.LinearBuckets getLinearBuckets() {
    if (bucketOptionCase_ == 7) {
      return (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_;
    }
    return com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Buckets with constant width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution.LinearBucketsOrBuilder
      getLinearBucketsOrBuilder() {
    if (bucketOptionCase_ == 7) {
      return (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_;
    }
    return com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
  }

  public static final int EXPONENTIAL_BUCKETS_FIELD_NUMBER = 8;
  /**
   *
   *
   * <pre>
   * Buckets with exponentially growing width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
   * </code>
   *
   * @return Whether the exponentialBuckets field is set.
   */
  @java.lang.Override
  public boolean hasExponentialBuckets() {
    return bucketOptionCase_ == 8;
  }
  /**
   *
   *
   * <pre>
   * Buckets with exponentially growing width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
   * </code>
   *
   * @return The exponentialBuckets.
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets getExponentialBuckets() {
    if (bucketOptionCase_ == 8) {
      return (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_;
    }
    return com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Buckets with exponentially growing width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
   * </code>
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution.ExponentialBucketsOrBuilder
      getExponentialBucketsOrBuilder() {
    if (bucketOptionCase_ == 8) {
      return (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_;
    }
    return com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.getDefaultInstance();
  }

  public static final int EXPLICIT_BUCKETS_FIELD_NUMBER = 9;
  /**
   *
   *
   * <pre>
   * Buckets with arbitrary user-provided width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
   *
   * @return Whether the explicitBuckets field is set.
   */
  @java.lang.Override
  public boolean hasExplicitBuckets() {
    return bucketOptionCase_ == 9;
  }
  /**
   *
   *
   * <pre>
   * Buckets with arbitrary user-provided width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
   *
   * @return The explicitBuckets.
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets getExplicitBuckets() {
    if (bucketOptionCase_ == 9) {
      return (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_;
    }
    return com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Buckets with arbitrary user-provided width.
   * </pre>
   *
   * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
   */
  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution.ExplicitBucketsOrBuilder
      getExplicitBucketsOrBuilder() {
    if (bucketOptionCase_ == 9) {
      return (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_;
    }
    return com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
  }

  public static final int EXEMPLARS_FIELD_NUMBER = 10;

  @SuppressWarnings("serial")
  private java.util.List<com.google.api.Distribution.Exemplar> exemplars_;
  /**
   *
   *
   * <pre>
   * Example points. Must be in increasing order of `value` field.
   * </pre>
   *
   * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.api.Distribution.Exemplar> getExemplarsList() {
    return exemplars_;
  }
  /**
   *
   *
   * <pre>
   * Example points. Must be in increasing order of `value` field.
   * </pre>
   *
   * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.api.Distribution.ExemplarOrBuilder>
      getExemplarsOrBuilderList() {
    return exemplars_;
  }
  /**
   *
   *
   * <pre>
   * Example points. Must be in increasing order of `value` field.
   * </pre>
   *
   * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
   */
  @java.lang.Override
  public int getExemplarsCount() {
    return exemplars_.size();
  }
  /**
   *
   *
   * <pre>
   * Example points. Must be in increasing order of `value` field.
   * </pre>
   *
   * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
   */
  @java.lang.Override
  public com.google.api.Distribution.Exemplar getExemplars(int index) {
    return exemplars_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Example points. Must be in increasing order of `value` field.
   * </pre>
   *
   * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
   */
  @java.lang.Override
  public com.google.api.Distribution.ExemplarOrBuilder getExemplarsOrBuilder(int index) {
    return exemplars_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    getSerializedSize();
    if (count_ != 0L) {
      output.writeInt64(1, count_);
    }
    if (java.lang.Double.doubleToRawLongBits(mean_) != 0) {
      output.writeDouble(2, mean_);
    }
    if (java.lang.Double.doubleToRawLongBits(minimum_) != 0) {
      output.writeDouble(3, minimum_);
    }
    if (java.lang.Double.doubleToRawLongBits(maximum_) != 0) {
      output.writeDouble(4, maximum_);
    }
    if (java.lang.Double.doubleToRawLongBits(sumOfSquaredDeviation_) != 0) {
      output.writeDouble(5, sumOfSquaredDeviation_);
    }
    if (getBucketCountsList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(bucketCountsMemoizedSerializedSize);
    }
    for (int i = 0; i < bucketCounts_.size(); i++) {
      output.writeInt64NoTag(bucketCounts_.getLong(i));
    }
    if (bucketOptionCase_ == 7) {
      output.writeMessage(
          7, (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_);
    }
    if (bucketOptionCase_ == 8) {
      output.writeMessage(
          8, (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_);
    }
    if (bucketOptionCase_ == 9) {
      output.writeMessage(
          9, (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_);
    }
    for (int i = 0; i < exemplars_.size(); i++) {
      output.writeMessage(10, exemplars_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (count_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(1, count_);
    }
    if (java.lang.Double.doubleToRawLongBits(mean_) != 0) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, mean_);
    }
    if (java.lang.Double.doubleToRawLongBits(minimum_) != 0) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, minimum_);
    }
    if (java.lang.Double.doubleToRawLongBits(maximum_) != 0) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(4, maximum_);
    }
    if (java.lang.Double.doubleToRawLongBits(sumOfSquaredDeviation_) != 0) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(5, sumOfSquaredDeviation_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < bucketCounts_.size(); i++) {
        dataSize +=
            com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(bucketCounts_.getLong(i));
      }
      size += dataSize;
      if (!getBucketCountsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
      }
      bucketCountsMemoizedSerializedSize = dataSize;
    }
    if (bucketOptionCase_ == 7) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              7, (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_);
    }
    if (bucketOptionCase_ == 8) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              8, (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_);
    }
    if (bucketOptionCase_ == 9) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              9, (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_);
    }
    for (int i = 0; i < exemplars_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, exemplars_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.api.servicecontrol.v1.Distribution)) {
      return super.equals(obj);
    }
    com.google.api.servicecontrol.v1.Distribution other =
        (com.google.api.servicecontrol.v1.Distribution) obj;

    if (getCount() != other.getCount()) return false;
    if (java.lang.Double.doubleToLongBits(getMean())
        != java.lang.Double.doubleToLongBits(other.getMean())) return false;
    if (java.lang.Double.doubleToLongBits(getMinimum())
        != java.lang.Double.doubleToLongBits(other.getMinimum())) return false;
    if (java.lang.Double.doubleToLongBits(getMaximum())
        != java.lang.Double.doubleToLongBits(other.getMaximum())) return false;
    if (java.lang.Double.doubleToLongBits(getSumOfSquaredDeviation())
        != java.lang.Double.doubleToLongBits(other.getSumOfSquaredDeviation())) return false;
    if (!getBucketCountsList().equals(other.getBucketCountsList())) return false;
    if (!getExemplarsList().equals(other.getExemplarsList())) return false;
    if (!getBucketOptionCase().equals(other.getBucketOptionCase())) return false;
    switch (bucketOptionCase_) {
      case 7:
        if (!getLinearBuckets().equals(other.getLinearBuckets())) return false;
        break;
      case 8:
        if (!getExponentialBuckets().equals(other.getExponentialBuckets())) return false;
        break;
      case 9:
        if (!getExplicitBuckets().equals(other.getExplicitBuckets())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCount());
    hash = (37 * hash) + MEAN_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getMean()));
    hash = (37 * hash) + MINIMUM_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getMinimum()));
    hash = (37 * hash) + MAXIMUM_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getMaximum()));
    hash = (37 * hash) + SUM_OF_SQUARED_DEVIATION_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getSumOfSquaredDeviation()));
    if (getBucketCountsCount() > 0) {
      hash = (37 * hash) + BUCKET_COUNTS_FIELD_NUMBER;
      hash = (53 * hash) + getBucketCountsList().hashCode();
    }
    if (getExemplarsCount() > 0) {
      hash = (37 * hash) + EXEMPLARS_FIELD_NUMBER;
      hash = (53 * hash) + getExemplarsList().hashCode();
    }
    switch (bucketOptionCase_) {
      case 7:
        hash = (37 * hash) + LINEAR_BUCKETS_FIELD_NUMBER;
        hash = (53 * hash) + getLinearBuckets().hashCode();
        break;
      case 8:
        hash = (37 * hash) + EXPONENTIAL_BUCKETS_FIELD_NUMBER;
        hash = (53 * hash) + getExponentialBuckets().hashCode();
        break;
      case 9:
        hash = (37 * hash) + EXPLICIT_BUCKETS_FIELD_NUMBER;
        hash = (53 * hash) + getExplicitBuckets().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.api.servicecontrol.v1.Distribution parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.api.servicecontrol.v1.Distribution prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Distribution represents a frequency distribution of double-valued sample
   * points. It contains the size of the population of sample points plus
   * additional optional information:
   *
   * * the arithmetic mean of the samples
   * * the minimum and maximum of the samples
   * * the sum-squared-deviation of the samples, used to compute variance
   * * a histogram of the values of the sample points
   * </pre>
   *
   * Protobuf type {@code google.api.servicecontrol.v1.Distribution}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.api.servicecontrol.v1.Distribution)
      com.google.api.servicecontrol.v1.DistributionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.api.servicecontrol.v1.Distribution.class,
              com.google.api.servicecontrol.v1.Distribution.Builder.class);
    }

    // Construct using com.google.api.servicecontrol.v1.Distribution.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      count_ = 0L;
      mean_ = 0D;
      minimum_ = 0D;
      maximum_ = 0D;
      sumOfSquaredDeviation_ = 0D;
      bucketCounts_ = emptyLongList();
      if (linearBucketsBuilder_ != null) {
        linearBucketsBuilder_.clear();
      }
      if (exponentialBucketsBuilder_ != null) {
        exponentialBucketsBuilder_.clear();
      }
      if (explicitBucketsBuilder_ != null) {
        explicitBucketsBuilder_.clear();
      }
      if (exemplarsBuilder_ == null) {
        exemplars_ = java.util.Collections.emptyList();
      } else {
        exemplars_ = null;
        exemplarsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      bucketOptionCase_ = 0;
      bucketOption_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.api.servicecontrol.v1.DistributionProto
          .internal_static_google_api_servicecontrol_v1_Distribution_descriptor;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution getDefaultInstanceForType() {
      return com.google.api.servicecontrol.v1.Distribution.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution build() {
      com.google.api.servicecontrol.v1.Distribution result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution buildPartial() {
      com.google.api.servicecontrol.v1.Distribution result =
          new com.google.api.servicecontrol.v1.Distribution(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.api.servicecontrol.v1.Distribution result) {
      if (exemplarsBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          exemplars_ = java.util.Collections.unmodifiableList(exemplars_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.exemplars_ = exemplars_;
      } else {
        result.exemplars_ = exemplarsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.api.servicecontrol.v1.Distribution result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.count_ = count_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mean_ = mean_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.minimum_ = minimum_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maximum_ = maximum_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.sumOfSquaredDeviation_ = sumOfSquaredDeviation_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        bucketCounts_.makeImmutable();
        result.bucketCounts_ = bucketCounts_;
      }
    }

    private void buildPartialOneofs(com.google.api.servicecontrol.v1.Distribution result) {
      result.bucketOptionCase_ = bucketOptionCase_;
      result.bucketOption_ = this.bucketOption_;
      if (bucketOptionCase_ == 7 && linearBucketsBuilder_ != null) {
        result.bucketOption_ = linearBucketsBuilder_.build();
      }
      if (bucketOptionCase_ == 8 && exponentialBucketsBuilder_ != null) {
        result.bucketOption_ = exponentialBucketsBuilder_.build();
      }
      if (bucketOptionCase_ == 9 && explicitBucketsBuilder_ != null) {
        result.bucketOption_ = explicitBucketsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.api.servicecontrol.v1.Distribution) {
        return mergeFrom((com.google.api.servicecontrol.v1.Distribution) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.api.servicecontrol.v1.Distribution other) {
      if (other == com.google.api.servicecontrol.v1.Distribution.getDefaultInstance()) return this;
      if (other.getCount() != 0L) {
        setCount(other.getCount());
      }
      if (other.getMean() != 0D) {
        setMean(other.getMean());
      }
      if (other.getMinimum() != 0D) {
        setMinimum(other.getMinimum());
      }
      if (other.getMaximum() != 0D) {
        setMaximum(other.getMaximum());
      }
      if (other.getSumOfSquaredDeviation() != 0D) {
        setSumOfSquaredDeviation(other.getSumOfSquaredDeviation());
      }
      if (!other.bucketCounts_.isEmpty()) {
        if (bucketCounts_.isEmpty()) {
          bucketCounts_ = other.bucketCounts_;
          bucketCounts_.makeImmutable();
          bitField0_ |= 0x00000020;
        } else {
          ensureBucketCountsIsMutable();
          bucketCounts_.addAll(other.bucketCounts_);
        }
        onChanged();
      }
      if (exemplarsBuilder_ == null) {
        if (!other.exemplars_.isEmpty()) {
          if (exemplars_.isEmpty()) {
            exemplars_ = other.exemplars_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureExemplarsIsMutable();
            exemplars_.addAll(other.exemplars_);
          }
          onChanged();
        }
      } else {
        if (!other.exemplars_.isEmpty()) {
          if (exemplarsBuilder_.isEmpty()) {
            exemplarsBuilder_.dispose();
            exemplarsBuilder_ = null;
            exemplars_ = other.exemplars_;
            bitField0_ = (bitField0_ & ~0x00000200);
            exemplarsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getExemplarsFieldBuilder()
                    : null;
          } else {
            exemplarsBuilder_.addAllMessages(other.exemplars_);
          }
        }
      }
      switch (other.getBucketOptionCase()) {
        case LINEAR_BUCKETS:
          {
            mergeLinearBuckets(other.getLinearBuckets());
            break;
          }
        case EXPONENTIAL_BUCKETS:
          {
            mergeExponentialBuckets(other.getExponentialBuckets());
            break;
          }
        case EXPLICIT_BUCKETS:
          {
            mergeExplicitBuckets(other.getExplicitBuckets());
            break;
          }
        case BUCKETOPTION_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                count_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 17:
              {
                mean_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
            case 25:
              {
                minimum_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
            case 33:
              {
                maximum_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
            case 41:
              {
                sumOfSquaredDeviation_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
            case 48:
              {
                long v = input.readInt64();
                ensureBucketCountsIsMutable();
                bucketCounts_.addLong(v);
                break;
              } // case 48
            case 50:
              {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureBucketCountsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  bucketCounts_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 50
            case 58:
              {
                input.readMessage(getLinearBucketsFieldBuilder().getBuilder(), extensionRegistry);
                bucketOptionCase_ = 7;
                break;
              } // case 58
            case 66:
              {
                input.readMessage(
                    getExponentialBucketsFieldBuilder().getBuilder(), extensionRegistry);
                bucketOptionCase_ = 8;
                break;
              } // case 66
            case 74:
              {
                input.readMessage(getExplicitBucketsFieldBuilder().getBuilder(), extensionRegistry);
                bucketOptionCase_ = 9;
                break;
              } // case 74
            case 82:
              {
                com.google.api.Distribution.Exemplar m =
                    input.readMessage(
                        com.google.api.Distribution.Exemplar.parser(), extensionRegistry);
                if (exemplarsBuilder_ == null) {
                  ensureExemplarsIsMutable();
                  exemplars_.add(m);
                } else {
                  exemplarsBuilder_.addMessage(m);
                }
                break;
              } // case 82
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bucketOptionCase_ = 0;
    private java.lang.Object bucketOption_;

    public BucketOptionCase getBucketOptionCase() {
      return BucketOptionCase.forNumber(bucketOptionCase_);
    }

    public Builder clearBucketOption() {
      bucketOptionCase_ = 0;
      bucketOption_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private long count_;
    /**
     *
     *
     * <pre>
     * The total number of samples in the distribution. Must be &gt;= 0.
     * </pre>
     *
     * <code>int64 count = 1;</code>
     *
     * @return The count.
     */
    @java.lang.Override
    public long getCount() {
      return count_;
    }
    /**
     *
     *
     * <pre>
     * The total number of samples in the distribution. Must be &gt;= 0.
     * </pre>
     *
     * <code>int64 count = 1;</code>
     *
     * @param value The count to set.
     * @return This builder for chaining.
     */
    public Builder setCount(long value) {

      count_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The total number of samples in the distribution. Must be &gt;= 0.
     * </pre>
     *
     * <code>int64 count = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCount() {
      bitField0_ = (bitField0_ & ~0x00000001);
      count_ = 0L;
      onChanged();
      return this;
    }

    private double mean_;
    /**
     *
     *
     * <pre>
     * The arithmetic mean of the samples in the distribution. If `count` is
     * zero then this field must be zero.
     * </pre>
     *
     * <code>double mean = 2;</code>
     *
     * @return The mean.
     */
    @java.lang.Override
    public double getMean() {
      return mean_;
    }
    /**
     *
     *
     * <pre>
     * The arithmetic mean of the samples in the distribution. If `count` is
     * zero then this field must be zero.
     * </pre>
     *
     * <code>double mean = 2;</code>
     *
     * @param value The mean to set.
     * @return This builder for chaining.
     */
    public Builder setMean(double value) {

      mean_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The arithmetic mean of the samples in the distribution. If `count` is
     * zero then this field must be zero.
     * </pre>
     *
     * <code>double mean = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMean() {
      bitField0_ = (bitField0_ & ~0x00000002);
      mean_ = 0D;
      onChanged();
      return this;
    }

    private double minimum_;
    /**
     *
     *
     * <pre>
     * The minimum of the population of values. Ignored if `count` is zero.
     * </pre>
     *
     * <code>double minimum = 3;</code>
     *
     * @return The minimum.
     */
    @java.lang.Override
    public double getMinimum() {
      return minimum_;
    }
    /**
     *
     *
     * <pre>
     * The minimum of the population of values. Ignored if `count` is zero.
     * </pre>
     *
     * <code>double minimum = 3;</code>
     *
     * @param value The minimum to set.
     * @return This builder for chaining.
     */
    public Builder setMinimum(double value) {

      minimum_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The minimum of the population of values. Ignored if `count` is zero.
     * </pre>
     *
     * <code>double minimum = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMinimum() {
      bitField0_ = (bitField0_ & ~0x00000004);
      minimum_ = 0D;
      onChanged();
      return this;
    }

    private double maximum_;
    /**
     *
     *
     * <pre>
     * The maximum of the population of values. Ignored if `count` is zero.
     * </pre>
     *
     * <code>double maximum = 4;</code>
     *
     * @return The maximum.
     */
    @java.lang.Override
    public double getMaximum() {
      return maximum_;
    }
    /**
     *
     *
     * <pre>
     * The maximum of the population of values. Ignored if `count` is zero.
     * </pre>
     *
     * <code>double maximum = 4;</code>
     *
     * @param value The maximum to set.
     * @return This builder for chaining.
     */
    public Builder setMaximum(double value) {

      maximum_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The maximum of the population of values. Ignored if `count` is zero.
     * </pre>
     *
     * <code>double maximum = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaximum() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maximum_ = 0D;
      onChanged();
      return this;
    }

    private double sumOfSquaredDeviation_;
    /**
     *
     *
     * <pre>
     * The sum of squared deviations from the mean:
     *   Sum[i=1..count]((x_i - mean)^2)
     * where each x_i is a sample values. If `count` is zero then this field
     * must be zero, otherwise validation of the request fails.
     * </pre>
     *
     * <code>double sum_of_squared_deviation = 5;</code>
     *
     * @return The sumOfSquaredDeviation.
     */
    @java.lang.Override
    public double getSumOfSquaredDeviation() {
      return sumOfSquaredDeviation_;
    }
    /**
     *
     *
     * <pre>
     * The sum of squared deviations from the mean:
     *   Sum[i=1..count]((x_i - mean)^2)
     * where each x_i is a sample values. If `count` is zero then this field
     * must be zero, otherwise validation of the request fails.
     * </pre>
     *
     * <code>double sum_of_squared_deviation = 5;</code>
     *
     * @param value The sumOfSquaredDeviation to set.
     * @return This builder for chaining.
     */
    public Builder setSumOfSquaredDeviation(double value) {

      sumOfSquaredDeviation_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The sum of squared deviations from the mean:
     *   Sum[i=1..count]((x_i - mean)^2)
     * where each x_i is a sample values. If `count` is zero then this field
     * must be zero, otherwise validation of the request fails.
     * </pre>
     *
     * <code>double sum_of_squared_deviation = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSumOfSquaredDeviation() {
      bitField0_ = (bitField0_ & ~0x00000010);
      sumOfSquaredDeviation_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList bucketCounts_ = emptyLongList();

    private void ensureBucketCountsIsMutable() {
      if (!bucketCounts_.isModifiable()) {
        bucketCounts_ = makeMutableCopy(bucketCounts_);
      }
      bitField0_ |= 0x00000020;
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @return A list containing the bucketCounts.
     */
    public java.util.List<java.lang.Long> getBucketCountsList() {
      bucketCounts_.makeImmutable();
      return bucketCounts_;
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @return The count of bucketCounts.
     */
    public int getBucketCountsCount() {
      return bucketCounts_.size();
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @param index The index of the element to return.
     * @return The bucketCounts at the given index.
     */
    public long getBucketCounts(int index) {
      return bucketCounts_.getLong(index);
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @param index The index to set the value at.
     * @param value The bucketCounts to set.
     * @return This builder for chaining.
     */
    public Builder setBucketCounts(int index, long value) {

      ensureBucketCountsIsMutable();
      bucketCounts_.setLong(index, value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @param value The bucketCounts to add.
     * @return This builder for chaining.
     */
    public Builder addBucketCounts(long value) {

      ensureBucketCountsIsMutable();
      bucketCounts_.addLong(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @param values The bucketCounts to add.
     * @return This builder for chaining.
     */
    public Builder addAllBucketCounts(java.lang.Iterable<? extends java.lang.Long> values) {
      ensureBucketCountsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, bucketCounts_);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of samples in each histogram bucket. `bucket_counts` are
     * optional. If present, they must sum to the `count` value.
     *
     * The buckets are defined below in `bucket_option`. There are N buckets.
     * `bucket_counts[0]` is the number of samples in the underflow bucket.
     * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
     * in each of the finite buckets. And `bucket_counts[N] is the number
     * of samples in the overflow bucket. See the comments of `bucket_option`
     * below for more details.
     *
     * Any suffix of trailing zeros may be omitted.
     * </pre>
     *
     * <code>repeated int64 bucket_counts = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBucketCounts() {
      bucketCounts_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.servicecontrol.v1.Distribution.LinearBuckets,
            com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder,
            com.google.api.servicecontrol.v1.Distribution.LinearBucketsOrBuilder>
        linearBucketsBuilder_;
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     *
     * @return Whether the linearBuckets field is set.
     */
    @java.lang.Override
    public boolean hasLinearBuckets() {
      return bucketOptionCase_ == 7;
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     *
     * @return The linearBuckets.
     */
    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.LinearBuckets getLinearBuckets() {
      if (linearBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 7) {
          return (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_;
        }
        return com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
      } else {
        if (bucketOptionCase_ == 7) {
          return linearBucketsBuilder_.getMessage();
        }
        return com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    public Builder setLinearBuckets(
        com.google.api.servicecontrol.v1.Distribution.LinearBuckets value) {
      if (linearBucketsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bucketOption_ = value;
        onChanged();
      } else {
        linearBucketsBuilder_.setMessage(value);
      }
      bucketOptionCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    public Builder setLinearBuckets(
        com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder builderForValue) {
      if (linearBucketsBuilder_ == null) {
        bucketOption_ = builderForValue.build();
        onChanged();
      } else {
        linearBucketsBuilder_.setMessage(builderForValue.build());
      }
      bucketOptionCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    public Builder mergeLinearBuckets(
        com.google.api.servicecontrol.v1.Distribution.LinearBuckets value) {
      if (linearBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 7
            && bucketOption_
                != com.google.api.servicecontrol.v1.Distribution.LinearBuckets
                    .getDefaultInstance()) {
          bucketOption_ =
              com.google.api.servicecontrol.v1.Distribution.LinearBuckets.newBuilder(
                      (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          bucketOption_ = value;
        }
        onChanged();
      } else {
        if (bucketOptionCase_ == 7) {
          linearBucketsBuilder_.mergeFrom(value);
        } else {
          linearBucketsBuilder_.setMessage(value);
        }
      }
      bucketOptionCase_ = 7;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    public Builder clearLinearBuckets() {
      if (linearBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 7) {
          bucketOptionCase_ = 0;
          bucketOption_ = null;
          onChanged();
        }
      } else {
        if (bucketOptionCase_ == 7) {
          bucketOptionCase_ = 0;
          bucketOption_ = null;
        }
        linearBucketsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    public com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder
        getLinearBucketsBuilder() {
      return getLinearBucketsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.LinearBucketsOrBuilder
        getLinearBucketsOrBuilder() {
      if ((bucketOptionCase_ == 7) && (linearBucketsBuilder_ != null)) {
        return linearBucketsBuilder_.getMessageOrBuilder();
      } else {
        if (bucketOptionCase_ == 7) {
          return (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_;
        }
        return com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Buckets with constant width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.servicecontrol.v1.Distribution.LinearBuckets,
            com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder,
            com.google.api.servicecontrol.v1.Distribution.LinearBucketsOrBuilder>
        getLinearBucketsFieldBuilder() {
      if (linearBucketsBuilder_ == null) {
        if (!(bucketOptionCase_ == 7)) {
          bucketOption_ =
              com.google.api.servicecontrol.v1.Distribution.LinearBuckets.getDefaultInstance();
        }
        linearBucketsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.api.servicecontrol.v1.Distribution.LinearBuckets,
                com.google.api.servicecontrol.v1.Distribution.LinearBuckets.Builder,
                com.google.api.servicecontrol.v1.Distribution.LinearBucketsOrBuilder>(
                (com.google.api.servicecontrol.v1.Distribution.LinearBuckets) bucketOption_,
                getParentForChildren(),
                isClean());
        bucketOption_ = null;
      }
      bucketOptionCase_ = 7;
      onChanged();
      return linearBucketsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets,
            com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder,
            com.google.api.servicecontrol.v1.Distribution.ExponentialBucketsOrBuilder>
        exponentialBucketsBuilder_;
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     *
     * @return Whether the exponentialBuckets field is set.
     */
    @java.lang.Override
    public boolean hasExponentialBuckets() {
      return bucketOptionCase_ == 8;
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     *
     * @return The exponentialBuckets.
     */
    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
        getExponentialBuckets() {
      if (exponentialBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 8) {
          return (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_;
        }
        return com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
            .getDefaultInstance();
      } else {
        if (bucketOptionCase_ == 8) {
          return exponentialBucketsBuilder_.getMessage();
        }
        return com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    public Builder setExponentialBuckets(
        com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets value) {
      if (exponentialBucketsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bucketOption_ = value;
        onChanged();
      } else {
        exponentialBucketsBuilder_.setMessage(value);
      }
      bucketOptionCase_ = 8;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    public Builder setExponentialBuckets(
        com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder builderForValue) {
      if (exponentialBucketsBuilder_ == null) {
        bucketOption_ = builderForValue.build();
        onChanged();
      } else {
        exponentialBucketsBuilder_.setMessage(builderForValue.build());
      }
      bucketOptionCase_ = 8;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    public Builder mergeExponentialBuckets(
        com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets value) {
      if (exponentialBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 8
            && bucketOption_
                != com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
                    .getDefaultInstance()) {
          bucketOption_ =
              com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.newBuilder(
                      (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
                          bucketOption_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          bucketOption_ = value;
        }
        onChanged();
      } else {
        if (bucketOptionCase_ == 8) {
          exponentialBucketsBuilder_.mergeFrom(value);
        } else {
          exponentialBucketsBuilder_.setMessage(value);
        }
      }
      bucketOptionCase_ = 8;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    public Builder clearExponentialBuckets() {
      if (exponentialBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 8) {
          bucketOptionCase_ = 0;
          bucketOption_ = null;
          onChanged();
        }
      } else {
        if (bucketOptionCase_ == 8) {
          bucketOptionCase_ = 0;
          bucketOption_ = null;
        }
        exponentialBucketsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    public com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder
        getExponentialBucketsBuilder() {
      return getExponentialBucketsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.ExponentialBucketsOrBuilder
        getExponentialBucketsOrBuilder() {
      if ((bucketOptionCase_ == 8) && (exponentialBucketsBuilder_ != null)) {
        return exponentialBucketsBuilder_.getMessageOrBuilder();
      } else {
        if (bucketOptionCase_ == 8) {
          return (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_;
        }
        return com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets
            .getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Buckets with exponentially growing width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets,
            com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder,
            com.google.api.servicecontrol.v1.Distribution.ExponentialBucketsOrBuilder>
        getExponentialBucketsFieldBuilder() {
      if (exponentialBucketsBuilder_ == null) {
        if (!(bucketOptionCase_ == 8)) {
          bucketOption_ =
              com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.getDefaultInstance();
        }
        exponentialBucketsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets,
                com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets.Builder,
                com.google.api.servicecontrol.v1.Distribution.ExponentialBucketsOrBuilder>(
                (com.google.api.servicecontrol.v1.Distribution.ExponentialBuckets) bucketOption_,
                getParentForChildren(),
                isClean());
        bucketOption_ = null;
      }
      bucketOptionCase_ = 8;
      onChanged();
      return exponentialBucketsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets,
            com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder,
            com.google.api.servicecontrol.v1.Distribution.ExplicitBucketsOrBuilder>
        explicitBucketsBuilder_;
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     *
     * @return Whether the explicitBuckets field is set.
     */
    @java.lang.Override
    public boolean hasExplicitBuckets() {
      return bucketOptionCase_ == 9;
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     *
     * @return The explicitBuckets.
     */
    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets getExplicitBuckets() {
      if (explicitBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 9) {
          return (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_;
        }
        return com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
      } else {
        if (bucketOptionCase_ == 9) {
          return explicitBucketsBuilder_.getMessage();
        }
        return com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    public Builder setExplicitBuckets(
        com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets value) {
      if (explicitBucketsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bucketOption_ = value;
        onChanged();
      } else {
        explicitBucketsBuilder_.setMessage(value);
      }
      bucketOptionCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    public Builder setExplicitBuckets(
        com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder builderForValue) {
      if (explicitBucketsBuilder_ == null) {
        bucketOption_ = builderForValue.build();
        onChanged();
      } else {
        explicitBucketsBuilder_.setMessage(builderForValue.build());
      }
      bucketOptionCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    public Builder mergeExplicitBuckets(
        com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets value) {
      if (explicitBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 9
            && bucketOption_
                != com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets
                    .getDefaultInstance()) {
          bucketOption_ =
              com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.newBuilder(
                      (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          bucketOption_ = value;
        }
        onChanged();
      } else {
        if (bucketOptionCase_ == 9) {
          explicitBucketsBuilder_.mergeFrom(value);
        } else {
          explicitBucketsBuilder_.setMessage(value);
        }
      }
      bucketOptionCase_ = 9;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    public Builder clearExplicitBuckets() {
      if (explicitBucketsBuilder_ == null) {
        if (bucketOptionCase_ == 9) {
          bucketOptionCase_ = 0;
          bucketOption_ = null;
          onChanged();
        }
      } else {
        if (bucketOptionCase_ == 9) {
          bucketOptionCase_ = 0;
          bucketOption_ = null;
        }
        explicitBucketsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    public com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder
        getExplicitBucketsBuilder() {
      return getExplicitBucketsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    @java.lang.Override
    public com.google.api.servicecontrol.v1.Distribution.ExplicitBucketsOrBuilder
        getExplicitBucketsOrBuilder() {
      if ((bucketOptionCase_ == 9) && (explicitBucketsBuilder_ != null)) {
        return explicitBucketsBuilder_.getMessageOrBuilder();
      } else {
        if (bucketOptionCase_ == 9) {
          return (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_;
        }
        return com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Buckets with arbitrary user-provided width.
     * </pre>
     *
     * <code>.google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets,
            com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder,
            com.google.api.servicecontrol.v1.Distribution.ExplicitBucketsOrBuilder>
        getExplicitBucketsFieldBuilder() {
      if (explicitBucketsBuilder_ == null) {
        if (!(bucketOptionCase_ == 9)) {
          bucketOption_ =
              com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.getDefaultInstance();
        }
        explicitBucketsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets,
                com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets.Builder,
                com.google.api.servicecontrol.v1.Distribution.ExplicitBucketsOrBuilder>(
                (com.google.api.servicecontrol.v1.Distribution.ExplicitBuckets) bucketOption_,
                getParentForChildren(),
                isClean());
        bucketOption_ = null;
      }
      bucketOptionCase_ = 9;
      onChanged();
      return explicitBucketsBuilder_;
    }

    private java.util.List<com.google.api.Distribution.Exemplar> exemplars_ =
        java.util.Collections.emptyList();

    private void ensureExemplarsIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        exemplars_ = new java.util.ArrayList<com.google.api.Distribution.Exemplar>(exemplars_);
        bitField0_ |= 0x00000200;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.api.Distribution.Exemplar,
            com.google.api.Distribution.Exemplar.Builder,
            com.google.api.Distribution.ExemplarOrBuilder>
        exemplarsBuilder_;

    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public java.util.List<com.google.api.Distribution.Exemplar> getExemplarsList() {
      if (exemplarsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(exemplars_);
      } else {
        return exemplarsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public int getExemplarsCount() {
      if (exemplarsBuilder_ == null) {
        return exemplars_.size();
      } else {
        return exemplarsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public com.google.api.Distribution.Exemplar getExemplars(int index) {
      if (exemplarsBuilder_ == null) {
        return exemplars_.get(index);
      } else {
        return exemplarsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder setExemplars(int index, com.google.api.Distribution.Exemplar value) {
      if (exemplarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExemplarsIsMutable();
        exemplars_.set(index, value);
        onChanged();
      } else {
        exemplarsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder setExemplars(
        int index, com.google.api.Distribution.Exemplar.Builder builderForValue) {
      if (exemplarsBuilder_ == null) {
        ensureExemplarsIsMutable();
        exemplars_.set(index, builderForValue.build());
        onChanged();
      } else {
        exemplarsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder addExemplars(com.google.api.Distribution.Exemplar value) {
      if (exemplarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExemplarsIsMutable();
        exemplars_.add(value);
        onChanged();
      } else {
        exemplarsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder addExemplars(int index, com.google.api.Distribution.Exemplar value) {
      if (exemplarsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExemplarsIsMutable();
        exemplars_.add(index, value);
        onChanged();
      } else {
        exemplarsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder addExemplars(com.google.api.Distribution.Exemplar.Builder builderForValue) {
      if (exemplarsBuilder_ == null) {
        ensureExemplarsIsMutable();
        exemplars_.add(builderForValue.build());
        onChanged();
      } else {
        exemplarsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder addExemplars(
        int index, com.google.api.Distribution.Exemplar.Builder builderForValue) {
      if (exemplarsBuilder_ == null) {
        ensureExemplarsIsMutable();
        exemplars_.add(index, builderForValue.build());
        onChanged();
      } else {
        exemplarsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder addAllExemplars(
        java.lang.Iterable<? extends com.google.api.Distribution.Exemplar> values) {
      if (exemplarsBuilder_ == null) {
        ensureExemplarsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, exemplars_);
        onChanged();
      } else {
        exemplarsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder clearExemplars() {
      if (exemplarsBuilder_ == null) {
        exemplars_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        exemplarsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public Builder removeExemplars(int index) {
      if (exemplarsBuilder_ == null) {
        ensureExemplarsIsMutable();
        exemplars_.remove(index);
        onChanged();
      } else {
        exemplarsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public com.google.api.Distribution.Exemplar.Builder getExemplarsBuilder(int index) {
      return getExemplarsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public com.google.api.Distribution.ExemplarOrBuilder getExemplarsOrBuilder(int index) {
      if (exemplarsBuilder_ == null) {
        return exemplars_.get(index);
      } else {
        return exemplarsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public java.util.List<? extends com.google.api.Distribution.ExemplarOrBuilder>
        getExemplarsOrBuilderList() {
      if (exemplarsBuilder_ != null) {
        return exemplarsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(exemplars_);
      }
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public com.google.api.Distribution.Exemplar.Builder addExemplarsBuilder() {
      return getExemplarsFieldBuilder()
          .addBuilder(com.google.api.Distribution.Exemplar.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public com.google.api.Distribution.Exemplar.Builder addExemplarsBuilder(int index) {
      return getExemplarsFieldBuilder()
          .addBuilder(index, com.google.api.Distribution.Exemplar.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Example points. Must be in increasing order of `value` field.
     * </pre>
     *
     * <code>repeated .google.api.Distribution.Exemplar exemplars = 10;</code>
     */
    public java.util.List<com.google.api.Distribution.Exemplar.Builder> getExemplarsBuilderList() {
      return getExemplarsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.api.Distribution.Exemplar,
            com.google.api.Distribution.Exemplar.Builder,
            com.google.api.Distribution.ExemplarOrBuilder>
        getExemplarsFieldBuilder() {
      if (exemplarsBuilder_ == null) {
        exemplarsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.api.Distribution.Exemplar,
                com.google.api.Distribution.Exemplar.Builder,
                com.google.api.Distribution.ExemplarOrBuilder>(
                exemplars_, ((bitField0_ & 0x00000200) != 0), getParentForChildren(), isClean());
        exemplars_ = null;
      }
      return exemplarsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.api.servicecontrol.v1.Distribution)
  }

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution)
  private static final com.google.api.servicecontrol.v1.Distribution DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.api.servicecontrol.v1.Distribution();
  }

  public static com.google.api.servicecontrol.v1.Distribution getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Distribution> PARSER =
      new com.google.protobuf.AbstractParser<Distribution>() {
        @java.lang.Override
        public Distribution parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Distribution> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Distribution> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.api.servicecontrol.v1.Distribution getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
