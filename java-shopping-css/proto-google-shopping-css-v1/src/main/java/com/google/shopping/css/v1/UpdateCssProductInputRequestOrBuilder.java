/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/css/v1/css_product_inputs.proto

// Protobuf Java Version: 3.25.5
package com.google.shopping.css.v1;

public interface UpdateCssProductInputRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.css.v1.UpdateCssProductInputRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The CSS product input resource to update. Information you submit
   * will be applied to the processed CSS product as well.
   * </pre>
   *
   * <code>
   * .google.shopping.css.v1.CssProductInput css_product_input = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the cssProductInput field is set.
   */
  boolean hasCssProductInput();
  /**
   *
   *
   * <pre>
   * Required. The CSS product input resource to update. Information you submit
   * will be applied to the processed CSS product as well.
   * </pre>
   *
   * <code>
   * .google.shopping.css.v1.CssProductInput css_product_input = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The cssProductInput.
   */
  com.google.shopping.css.v1.CssProductInput getCssProductInput();
  /**
   *
   *
   * <pre>
   * Required. The CSS product input resource to update. Information you submit
   * will be applied to the processed CSS product as well.
   * </pre>
   *
   * <code>
   * .google.shopping.css.v1.CssProductInput css_product_input = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.shopping.css.v1.CssProductInputOrBuilder getCssProductInputOrBuilder();

  /**
   *
   *
   * <pre>
   * The list of CSS product attributes to be updated.
   *
   * If the update mask is omitted, then it is treated as implied field mask
   * equivalent to all fields that are populated (have a non-empty value).
   *
   * Attributes specified in the update mask without a value specified in the
   * body will be deleted from the CSS product.
   *
   * Update mask can only be specified for top level fields in
   * attributes and custom attributes.
   *
   * To specify the update mask for custom attributes you need to add the
   * `custom_attribute.` prefix.
   *
   * Providing special "*" value for full CSS product replacement is not
   * supported.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2;</code>
   *
   * @return Whether the updateMask field is set.
   */
  boolean hasUpdateMask();
  /**
   *
   *
   * <pre>
   * The list of CSS product attributes to be updated.
   *
   * If the update mask is omitted, then it is treated as implied field mask
   * equivalent to all fields that are populated (have a non-empty value).
   *
   * Attributes specified in the update mask without a value specified in the
   * body will be deleted from the CSS product.
   *
   * Update mask can only be specified for top level fields in
   * attributes and custom attributes.
   *
   * To specify the update mask for custom attributes you need to add the
   * `custom_attribute.` prefix.
   *
   * Providing special "*" value for full CSS product replacement is not
   * supported.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2;</code>
   *
   * @return The updateMask.
   */
  com.google.protobuf.FieldMask getUpdateMask();
  /**
   *
   *
   * <pre>
   * The list of CSS product attributes to be updated.
   *
   * If the update mask is omitted, then it is treated as implied field mask
   * equivalent to all fields that are populated (have a non-empty value).
   *
   * Attributes specified in the update mask without a value specified in the
   * body will be deleted from the CSS product.
   *
   * Update mask can only be specified for top level fields in
   * attributes and custom attributes.
   *
   * To specify the update mask for custom attributes you need to add the
   * `custom_attribute.` prefix.
   *
   * Providing special "*" value for full CSS product replacement is not
   * supported.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask update_mask = 2;</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getUpdateMaskOrBuilder();
}
