/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/devicestreaming/v1/service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.devicestreaming.v1;

public interface DeviceSessionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.devicestreaming.v1.DeviceSession)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Name of the DeviceSession, e.g.
   * "projects/{project_id}/deviceSessions/{session_id}"
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The name.
   */
  java.lang.String getName();

  /**
   *
   *
   * <pre>
   * Optional. Name of the DeviceSession, e.g.
   * "projects/{project_id}/deviceSessions/{session_id}"
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Output only. The title of the DeviceSession to be presented in the UI.
   * </pre>
   *
   * <code>string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The displayName.
   */
  java.lang.String getDisplayName();

  /**
   *
   *
   * <pre>
   * Output only. The title of the DeviceSession to be presented in the UI.
   * </pre>
   *
   * <code>string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString getDisplayNameBytes();

  /**
   *
   *
   * <pre>
   * Output only. Current state of the DeviceSession.
   * </pre>
   *
   * <code>
   * .google.cloud.devicestreaming.v1.DeviceSession.SessionState state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();

  /**
   *
   *
   * <pre>
   * Output only. Current state of the DeviceSession.
   * </pre>
   *
   * <code>
   * .google.cloud.devicestreaming.v1.DeviceSession.SessionState state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The state.
   */
  com.google.cloud.devicestreaming.v1.DeviceSession.SessionState getState();

  /**
   *
   *
   * <pre>
   * Output only. The historical state transitions of the session_state message
   * including the current session state.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent state_histories = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.List<com.google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent>
      getStateHistoriesList();

  /**
   *
   *
   * <pre>
   * Output only. The historical state transitions of the session_state message
   * including the current session state.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent state_histories = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent getStateHistories(int index);

  /**
   *
   *
   * <pre>
   * Output only. The historical state transitions of the session_state message
   * including the current session state.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent state_histories = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  int getStateHistoriesCount();

  /**
   *
   *
   * <pre>
   * Output only. The historical state transitions of the session_state message
   * including the current session state.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent state_histories = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.List<
          ? extends com.google.cloud.devicestreaming.v1.DeviceSession.SessionStateEventOrBuilder>
      getStateHistoriesOrBuilderList();

  /**
   *
   *
   * <pre>
   * Output only. The historical state transitions of the session_state message
   * including the current session state.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.devicestreaming.v1.DeviceSession.SessionStateEvent state_histories = 14 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.devicestreaming.v1.DeviceSession.SessionStateEventOrBuilder
      getStateHistoriesOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Optional. The amount of time that a device will be initially allocated
   * for. This can eventually be extended with the UpdateDeviceSession RPC.
   * Default: 15 minutes.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the ttl field is set.
   */
  boolean hasTtl();

  /**
   *
   *
   * <pre>
   * Optional. The amount of time that a device will be initially allocated
   * for. This can eventually be extended with the UpdateDeviceSession RPC.
   * Default: 15 minutes.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The ttl.
   */
  com.google.protobuf.Duration getTtl();

  /**
   *
   *
   * <pre>
   * Optional. The amount of time that a device will be initially allocated
   * for. This can eventually be extended with the UpdateDeviceSession RPC.
   * Default: 15 minutes.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   */
  com.google.protobuf.DurationOrBuilder getTtlOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. If the device is still in use at this time, any connections
   * will be ended and the SessionState will transition from ACTIVE to
   * FINISHED.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the expireTime field is set.
   */
  boolean hasExpireTime();

  /**
   *
   *
   * <pre>
   * Optional. If the device is still in use at this time, any connections
   * will be ended and the SessionState will transition from ACTIVE to
   * FINISHED.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The expireTime.
   */
  com.google.protobuf.Timestamp getExpireTime();

  /**
   *
   *
   * <pre>
   * Optional. If the device is still in use at this time, any connections
   * will be ended and the SessionState will transition from ACTIVE to
   * FINISHED.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getExpireTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The interval of time that this device must be interacted with
   * before it transitions from ACTIVE to TIMEOUT_INACTIVITY.
   * </pre>
   *
   * <code>
   * .google.protobuf.Duration inactivity_timeout = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the inactivityTimeout field is set.
   */
  boolean hasInactivityTimeout();

  /**
   *
   *
   * <pre>
   * Output only. The interval of time that this device must be interacted with
   * before it transitions from ACTIVE to TIMEOUT_INACTIVITY.
   * </pre>
   *
   * <code>
   * .google.protobuf.Duration inactivity_timeout = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The inactivityTimeout.
   */
  com.google.protobuf.Duration getInactivityTimeout();

  /**
   *
   *
   * <pre>
   * Output only. The interval of time that this device must be interacted with
   * before it transitions from ACTIVE to TIMEOUT_INACTIVITY.
   * </pre>
   *
   * <code>
   * .google.protobuf.Duration inactivity_timeout = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.DurationOrBuilder getInactivityTimeoutOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The time that the Session was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();

  /**
   *
   *
   * <pre>
   * Output only. The time that the Session was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();

  /**
   *
   *
   * <pre>
   * Output only. The time that the Session was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The timestamp that the session first became ACTIVE.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp active_start_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the activeStartTime field is set.
   */
  boolean hasActiveStartTime();

  /**
   *
   *
   * <pre>
   * Output only. The timestamp that the session first became ACTIVE.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp active_start_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The activeStartTime.
   */
  com.google.protobuf.Timestamp getActiveStartTime();

  /**
   *
   *
   * <pre>
   * Output only. The timestamp that the session first became ACTIVE.
   * </pre>
   *
   * <code>
   * .google.protobuf.Timestamp active_start_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getActiveStartTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Required. The requested device
   * </pre>
   *
   * <code>
   * .google.cloud.devicestreaming.v1.AndroidDevice android_device = 15 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the androidDevice field is set.
   */
  boolean hasAndroidDevice();

  /**
   *
   *
   * <pre>
   * Required. The requested device
   * </pre>
   *
   * <code>
   * .google.cloud.devicestreaming.v1.AndroidDevice android_device = 15 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The androidDevice.
   */
  com.google.cloud.devicestreaming.v1.AndroidDevice getAndroidDevice();

  /**
   *
   *
   * <pre>
   * Required. The requested device
   * </pre>
   *
   * <code>
   * .google.cloud.devicestreaming.v1.AndroidDevice android_device = 15 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.cloud.devicestreaming.v1.AndroidDeviceOrBuilder getAndroidDeviceOrBuilder();

  com.google.cloud.devicestreaming.v1.DeviceSession.ExpirationCase getExpirationCase();
}
