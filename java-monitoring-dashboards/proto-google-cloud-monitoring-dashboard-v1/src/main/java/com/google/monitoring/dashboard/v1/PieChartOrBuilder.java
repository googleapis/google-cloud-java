/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/dashboard/v1/piechart.proto

// Protobuf Java Version: 3.25.5
package com.google.monitoring.dashboard.v1;

public interface PieChartOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.monitoring.dashboard.v1.PieChart)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The queries for the chart's data.
   * </pre>
   *
   * <code>
   * repeated .google.monitoring.dashboard.v1.PieChart.PieChartDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<com.google.monitoring.dashboard.v1.PieChart.PieChartDataSet> getDataSetsList();
  /**
   *
   *
   * <pre>
   * Required. The queries for the chart's data.
   * </pre>
   *
   * <code>
   * repeated .google.monitoring.dashboard.v1.PieChart.PieChartDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.monitoring.dashboard.v1.PieChart.PieChartDataSet getDataSets(int index);
  /**
   *
   *
   * <pre>
   * Required. The queries for the chart's data.
   * </pre>
   *
   * <code>
   * repeated .google.monitoring.dashboard.v1.PieChart.PieChartDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  int getDataSetsCount();
  /**
   *
   *
   * <pre>
   * Required. The queries for the chart's data.
   * </pre>
   *
   * <code>
   * repeated .google.monitoring.dashboard.v1.PieChart.PieChartDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  java.util.List<? extends com.google.monitoring.dashboard.v1.PieChart.PieChartDataSetOrBuilder>
      getDataSetsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Required. The queries for the chart's data.
   * </pre>
   *
   * <code>
   * repeated .google.monitoring.dashboard.v1.PieChart.PieChartDataSet data_sets = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  com.google.monitoring.dashboard.v1.PieChart.PieChartDataSetOrBuilder getDataSetsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * Required. Indicates the visualization type for the PieChart.
   * </pre>
   *
   * <code>
   * .google.monitoring.dashboard.v1.PieChart.PieChartType chart_type = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for chartType.
   */
  int getChartTypeValue();
  /**
   *
   *
   * <pre>
   * Required. Indicates the visualization type for the PieChart.
   * </pre>
   *
   * <code>
   * .google.monitoring.dashboard.v1.PieChart.PieChartType chart_type = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The chartType.
   */
  com.google.monitoring.dashboard.v1.PieChart.PieChartType getChartType();

  /**
   *
   *
   * <pre>
   * Optional. Indicates whether or not the pie chart should show slices' labels
   * </pre>
   *
   * <code>bool show_labels = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The showLabels.
   */
  boolean getShowLabels();
}
