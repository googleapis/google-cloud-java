/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/dashboard/v1/layouts.proto

// Protobuf Java Version: 3.25.5
package com.google.monitoring.dashboard.v1;

/**
 *
 *
 * <pre>
 * A mosaic layout divides the available space into a grid of blocks, and
 * overlays the grid with tiles. Unlike `GridLayout`, tiles may span multiple
 * grid blocks and can be placed at arbitrary locations in the grid.
 * </pre>
 *
 * Protobuf type {@code google.monitoring.dashboard.v1.MosaicLayout}
 */
public final class MosaicLayout extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.monitoring.dashboard.v1.MosaicLayout)
    MosaicLayoutOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use MosaicLayout.newBuilder() to construct.
  private MosaicLayout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private MosaicLayout() {
    tiles_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new MosaicLayout();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.monitoring.dashboard.v1.LayoutsProto
        .internal_static_google_monitoring_dashboard_v1_MosaicLayout_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.monitoring.dashboard.v1.LayoutsProto
        .internal_static_google_monitoring_dashboard_v1_MosaicLayout_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.monitoring.dashboard.v1.MosaicLayout.class,
            com.google.monitoring.dashboard.v1.MosaicLayout.Builder.class);
  }

  public interface TileOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.monitoring.dashboard.v1.MosaicLayout.Tile)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * The zero-indexed position of the tile in grid blocks relative to the
     * left edge of the grid. Tiles must be contained within the specified
     * number of columns. `x_pos` cannot be negative.
     * </pre>
     *
     * <code>int32 x_pos = 1;</code>
     *
     * @return The xPos.
     */
    int getXPos();

    /**
     *
     *
     * <pre>
     * The zero-indexed position of the tile in grid blocks relative to the
     * top edge of the grid. `y_pos` cannot be negative.
     * </pre>
     *
     * <code>int32 y_pos = 2;</code>
     *
     * @return The yPos.
     */
    int getYPos();

    /**
     *
     *
     * <pre>
     * The width of the tile, measured in grid blocks. Tiles must have a
     * minimum width of 1.
     * </pre>
     *
     * <code>int32 width = 3;</code>
     *
     * @return The width.
     */
    int getWidth();

    /**
     *
     *
     * <pre>
     * The height of the tile, measured in grid blocks. Tiles must have a
     * minimum height of 1.
     * </pre>
     *
     * <code>int32 height = 4;</code>
     *
     * @return The height.
     */
    int getHeight();

    /**
     *
     *
     * <pre>
     * The informational widget contained in the tile. For example an `XyChart`.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
     *
     * @return Whether the widget field is set.
     */
    boolean hasWidget();
    /**
     *
     *
     * <pre>
     * The informational widget contained in the tile. For example an `XyChart`.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
     *
     * @return The widget.
     */
    com.google.monitoring.dashboard.v1.Widget getWidget();
    /**
     *
     *
     * <pre>
     * The informational widget contained in the tile. For example an `XyChart`.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
     */
    com.google.monitoring.dashboard.v1.WidgetOrBuilder getWidgetOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * A single tile in the mosaic. The placement and size of the tile are
   * configurable.
   * </pre>
   *
   * Protobuf type {@code google.monitoring.dashboard.v1.MosaicLayout.Tile}
   */
  public static final class Tile extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.monitoring.dashboard.v1.MosaicLayout.Tile)
      TileOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use Tile.newBuilder() to construct.
    private Tile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Tile() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Tile();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.monitoring.dashboard.v1.LayoutsProto
          .internal_static_google_monitoring_dashboard_v1_MosaicLayout_Tile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.monitoring.dashboard.v1.LayoutsProto
          .internal_static_google_monitoring_dashboard_v1_MosaicLayout_Tile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.monitoring.dashboard.v1.MosaicLayout.Tile.class,
              com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder.class);
    }

    private int bitField0_;
    public static final int X_POS_FIELD_NUMBER = 1;
    private int xPos_ = 0;
    /**
     *
     *
     * <pre>
     * The zero-indexed position of the tile in grid blocks relative to the
     * left edge of the grid. Tiles must be contained within the specified
     * number of columns. `x_pos` cannot be negative.
     * </pre>
     *
     * <code>int32 x_pos = 1;</code>
     *
     * @return The xPos.
     */
    @java.lang.Override
    public int getXPos() {
      return xPos_;
    }

    public static final int Y_POS_FIELD_NUMBER = 2;
    private int yPos_ = 0;
    /**
     *
     *
     * <pre>
     * The zero-indexed position of the tile in grid blocks relative to the
     * top edge of the grid. `y_pos` cannot be negative.
     * </pre>
     *
     * <code>int32 y_pos = 2;</code>
     *
     * @return The yPos.
     */
    @java.lang.Override
    public int getYPos() {
      return yPos_;
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private int width_ = 0;
    /**
     *
     *
     * <pre>
     * The width of the tile, measured in grid blocks. Tiles must have a
     * minimum width of 1.
     * </pre>
     *
     * <code>int32 width = 3;</code>
     *
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_ = 0;
    /**
     *
     *
     * <pre>
     * The height of the tile, measured in grid blocks. Tiles must have a
     * minimum height of 1.
     * </pre>
     *
     * <code>int32 height = 4;</code>
     *
     * @return The height.
     */
    @java.lang.Override
    public int getHeight() {
      return height_;
    }

    public static final int WIDGET_FIELD_NUMBER = 5;
    private com.google.monitoring.dashboard.v1.Widget widget_;
    /**
     *
     *
     * <pre>
     * The informational widget contained in the tile. For example an `XyChart`.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
     *
     * @return Whether the widget field is set.
     */
    @java.lang.Override
    public boolean hasWidget() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * The informational widget contained in the tile. For example an `XyChart`.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
     *
     * @return The widget.
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.Widget getWidget() {
      return widget_ == null
          ? com.google.monitoring.dashboard.v1.Widget.getDefaultInstance()
          : widget_;
    }
    /**
     *
     *
     * <pre>
     * The informational widget contained in the tile. For example an `XyChart`.
     * </pre>
     *
     * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
     */
    @java.lang.Override
    public com.google.monitoring.dashboard.v1.WidgetOrBuilder getWidgetOrBuilder() {
      return widget_ == null
          ? com.google.monitoring.dashboard.v1.Widget.getDefaultInstance()
          : widget_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (xPos_ != 0) {
        output.writeInt32(1, xPos_);
      }
      if (yPos_ != 0) {
        output.writeInt32(2, yPos_);
      }
      if (width_ != 0) {
        output.writeInt32(3, width_);
      }
      if (height_ != 0) {
        output.writeInt32(4, height_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(5, getWidget());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (xPos_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, xPos_);
      }
      if (yPos_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, yPos_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(4, height_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getWidget());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.monitoring.dashboard.v1.MosaicLayout.Tile)) {
        return super.equals(obj);
      }
      com.google.monitoring.dashboard.v1.MosaicLayout.Tile other =
          (com.google.monitoring.dashboard.v1.MosaicLayout.Tile) obj;

      if (getXPos() != other.getXPos()) return false;
      if (getYPos() != other.getYPos()) return false;
      if (getWidth() != other.getWidth()) return false;
      if (getHeight() != other.getHeight()) return false;
      if (hasWidget() != other.hasWidget()) return false;
      if (hasWidget()) {
        if (!getWidget().equals(other.getWidget())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_POS_FIELD_NUMBER;
      hash = (53 * hash) + getXPos();
      hash = (37 * hash) + Y_POS_FIELD_NUMBER;
      hash = (53 * hash) + getYPos();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      if (hasWidget()) {
        hash = (37 * hash) + WIDGET_FIELD_NUMBER;
        hash = (53 * hash) + getWidget().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.monitoring.dashboard.v1.MosaicLayout.Tile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * A single tile in the mosaic. The placement and size of the tile are
     * configurable.
     * </pre>
     *
     * Protobuf type {@code google.monitoring.dashboard.v1.MosaicLayout.Tile}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.monitoring.dashboard.v1.MosaicLayout.Tile)
        com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.monitoring.dashboard.v1.LayoutsProto
            .internal_static_google_monitoring_dashboard_v1_MosaicLayout_Tile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.monitoring.dashboard.v1.LayoutsProto
            .internal_static_google_monitoring_dashboard_v1_MosaicLayout_Tile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.monitoring.dashboard.v1.MosaicLayout.Tile.class,
                com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder.class);
      }

      // Construct using com.google.monitoring.dashboard.v1.MosaicLayout.Tile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getWidgetFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        xPos_ = 0;
        yPos_ = 0;
        width_ = 0;
        height_ = 0;
        widget_ = null;
        if (widgetBuilder_ != null) {
          widgetBuilder_.dispose();
          widgetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.monitoring.dashboard.v1.LayoutsProto
            .internal_static_google_monitoring_dashboard_v1_MosaicLayout_Tile_descriptor;
      }

      @java.lang.Override
      public com.google.monitoring.dashboard.v1.MosaicLayout.Tile getDefaultInstanceForType() {
        return com.google.monitoring.dashboard.v1.MosaicLayout.Tile.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.monitoring.dashboard.v1.MosaicLayout.Tile build() {
        com.google.monitoring.dashboard.v1.MosaicLayout.Tile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.monitoring.dashboard.v1.MosaicLayout.Tile buildPartial() {
        com.google.monitoring.dashboard.v1.MosaicLayout.Tile result =
            new com.google.monitoring.dashboard.v1.MosaicLayout.Tile(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.monitoring.dashboard.v1.MosaicLayout.Tile result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.xPos_ = xPos_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.yPos_ = yPos_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.width_ = width_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.height_ = height_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.widget_ = widgetBuilder_ == null ? widget_ : widgetBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.monitoring.dashboard.v1.MosaicLayout.Tile) {
          return mergeFrom((com.google.monitoring.dashboard.v1.MosaicLayout.Tile) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.monitoring.dashboard.v1.MosaicLayout.Tile other) {
        if (other == com.google.monitoring.dashboard.v1.MosaicLayout.Tile.getDefaultInstance())
          return this;
        if (other.getXPos() != 0) {
          setXPos(other.getXPos());
        }
        if (other.getYPos() != 0) {
          setYPos(other.getYPos());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (other.hasWidget()) {
          mergeWidget(other.getWidget());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  xPos_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  yPos_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              case 24:
                {
                  width_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              case 32:
                {
                  height_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
              case 42:
                {
                  input.readMessage(getWidgetFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int xPos_;
      /**
       *
       *
       * <pre>
       * The zero-indexed position of the tile in grid blocks relative to the
       * left edge of the grid. Tiles must be contained within the specified
       * number of columns. `x_pos` cannot be negative.
       * </pre>
       *
       * <code>int32 x_pos = 1;</code>
       *
       * @return The xPos.
       */
      @java.lang.Override
      public int getXPos() {
        return xPos_;
      }
      /**
       *
       *
       * <pre>
       * The zero-indexed position of the tile in grid blocks relative to the
       * left edge of the grid. Tiles must be contained within the specified
       * number of columns. `x_pos` cannot be negative.
       * </pre>
       *
       * <code>int32 x_pos = 1;</code>
       *
       * @param value The xPos to set.
       * @return This builder for chaining.
       */
      public Builder setXPos(int value) {

        xPos_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The zero-indexed position of the tile in grid blocks relative to the
       * left edge of the grid. Tiles must be contained within the specified
       * number of columns. `x_pos` cannot be negative.
       * </pre>
       *
       * <code>int32 x_pos = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearXPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xPos_ = 0;
        onChanged();
        return this;
      }

      private int yPos_;
      /**
       *
       *
       * <pre>
       * The zero-indexed position of the tile in grid blocks relative to the
       * top edge of the grid. `y_pos` cannot be negative.
       * </pre>
       *
       * <code>int32 y_pos = 2;</code>
       *
       * @return The yPos.
       */
      @java.lang.Override
      public int getYPos() {
        return yPos_;
      }
      /**
       *
       *
       * <pre>
       * The zero-indexed position of the tile in grid blocks relative to the
       * top edge of the grid. `y_pos` cannot be negative.
       * </pre>
       *
       * <code>int32 y_pos = 2;</code>
       *
       * @param value The yPos to set.
       * @return This builder for chaining.
       */
      public Builder setYPos(int value) {

        yPos_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The zero-indexed position of the tile in grid blocks relative to the
       * top edge of the grid. `y_pos` cannot be negative.
       * </pre>
       *
       * <code>int32 y_pos = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearYPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        yPos_ = 0;
        onChanged();
        return this;
      }

      private int width_;
      /**
       *
       *
       * <pre>
       * The width of the tile, measured in grid blocks. Tiles must have a
       * minimum width of 1.
       * </pre>
       *
       * <code>int32 width = 3;</code>
       *
       * @return The width.
       */
      @java.lang.Override
      public int getWidth() {
        return width_;
      }
      /**
       *
       *
       * <pre>
       * The width of the tile, measured in grid blocks. Tiles must have a
       * minimum width of 1.
       * </pre>
       *
       * <code>int32 width = 3;</code>
       *
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {

        width_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The width of the tile, measured in grid blocks. Tiles must have a
       * minimum width of 1.
       * </pre>
       *
       * <code>int32 width = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_;
      /**
       *
       *
       * <pre>
       * The height of the tile, measured in grid blocks. Tiles must have a
       * minimum height of 1.
       * </pre>
       *
       * <code>int32 height = 4;</code>
       *
       * @return The height.
       */
      @java.lang.Override
      public int getHeight() {
        return height_;
      }
      /**
       *
       *
       * <pre>
       * The height of the tile, measured in grid blocks. Tiles must have a
       * minimum height of 1.
       * </pre>
       *
       * <code>int32 height = 4;</code>
       *
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {

        height_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The height of the tile, measured in grid blocks. Tiles must have a
       * minimum height of 1.
       * </pre>
       *
       * <code>int32 height = 4;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        onChanged();
        return this;
      }

      private com.google.monitoring.dashboard.v1.Widget widget_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.monitoring.dashboard.v1.Widget,
              com.google.monitoring.dashboard.v1.Widget.Builder,
              com.google.monitoring.dashboard.v1.WidgetOrBuilder>
          widgetBuilder_;
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       *
       * @return Whether the widget field is set.
       */
      public boolean hasWidget() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       *
       * @return The widget.
       */
      public com.google.monitoring.dashboard.v1.Widget getWidget() {
        if (widgetBuilder_ == null) {
          return widget_ == null
              ? com.google.monitoring.dashboard.v1.Widget.getDefaultInstance()
              : widget_;
        } else {
          return widgetBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      public Builder setWidget(com.google.monitoring.dashboard.v1.Widget value) {
        if (widgetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          widget_ = value;
        } else {
          widgetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      public Builder setWidget(com.google.monitoring.dashboard.v1.Widget.Builder builderForValue) {
        if (widgetBuilder_ == null) {
          widget_ = builderForValue.build();
        } else {
          widgetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      public Builder mergeWidget(com.google.monitoring.dashboard.v1.Widget value) {
        if (widgetBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)
              && widget_ != null
              && widget_ != com.google.monitoring.dashboard.v1.Widget.getDefaultInstance()) {
            getWidgetBuilder().mergeFrom(value);
          } else {
            widget_ = value;
          }
        } else {
          widgetBuilder_.mergeFrom(value);
        }
        if (widget_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      public Builder clearWidget() {
        bitField0_ = (bitField0_ & ~0x00000010);
        widget_ = null;
        if (widgetBuilder_ != null) {
          widgetBuilder_.dispose();
          widgetBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      public com.google.monitoring.dashboard.v1.Widget.Builder getWidgetBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getWidgetFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      public com.google.monitoring.dashboard.v1.WidgetOrBuilder getWidgetOrBuilder() {
        if (widgetBuilder_ != null) {
          return widgetBuilder_.getMessageOrBuilder();
        } else {
          return widget_ == null
              ? com.google.monitoring.dashboard.v1.Widget.getDefaultInstance()
              : widget_;
        }
      }
      /**
       *
       *
       * <pre>
       * The informational widget contained in the tile. For example an `XyChart`.
       * </pre>
       *
       * <code>.google.monitoring.dashboard.v1.Widget widget = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.monitoring.dashboard.v1.Widget,
              com.google.monitoring.dashboard.v1.Widget.Builder,
              com.google.monitoring.dashboard.v1.WidgetOrBuilder>
          getWidgetFieldBuilder() {
        if (widgetBuilder_ == null) {
          widgetBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.monitoring.dashboard.v1.Widget,
                  com.google.monitoring.dashboard.v1.Widget.Builder,
                  com.google.monitoring.dashboard.v1.WidgetOrBuilder>(
                  getWidget(), getParentForChildren(), isClean());
          widget_ = null;
        }
        return widgetBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.monitoring.dashboard.v1.MosaicLayout.Tile)
    }

    // @@protoc_insertion_point(class_scope:google.monitoring.dashboard.v1.MosaicLayout.Tile)
    private static final com.google.monitoring.dashboard.v1.MosaicLayout.Tile DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.monitoring.dashboard.v1.MosaicLayout.Tile();
    }

    public static com.google.monitoring.dashboard.v1.MosaicLayout.Tile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Tile> PARSER =
        new com.google.protobuf.AbstractParser<Tile>() {
          @java.lang.Override
          public Tile parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Tile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tile> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.MosaicLayout.Tile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int COLUMNS_FIELD_NUMBER = 1;
  private int columns_ = 0;
  /**
   *
   *
   * <pre>
   * The number of columns in the mosaic grid. The number of columns must be
   * between 1 and 12, inclusive.
   * </pre>
   *
   * <code>int32 columns = 1;</code>
   *
   * @return The columns.
   */
  @java.lang.Override
  public int getColumns() {
    return columns_;
  }

  public static final int TILES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<com.google.monitoring.dashboard.v1.MosaicLayout.Tile> tiles_;
  /**
   *
   *
   * <pre>
   * The tiles to display.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.monitoring.dashboard.v1.MosaicLayout.Tile> getTilesList() {
    return tiles_;
  }
  /**
   *
   *
   * <pre>
   * The tiles to display.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder>
      getTilesOrBuilderList() {
    return tiles_;
  }
  /**
   *
   *
   * <pre>
   * The tiles to display.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
   */
  @java.lang.Override
  public int getTilesCount() {
    return tiles_.size();
  }
  /**
   *
   *
   * <pre>
   * The tiles to display.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
   */
  @java.lang.Override
  public com.google.monitoring.dashboard.v1.MosaicLayout.Tile getTiles(int index) {
    return tiles_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The tiles to display.
   * </pre>
   *
   * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
   */
  @java.lang.Override
  public com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder getTilesOrBuilder(
      int index) {
    return tiles_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (columns_ != 0) {
      output.writeInt32(1, columns_);
    }
    for (int i = 0; i < tiles_.size(); i++) {
      output.writeMessage(3, tiles_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (columns_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, columns_);
    }
    for (int i = 0; i < tiles_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, tiles_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.monitoring.dashboard.v1.MosaicLayout)) {
      return super.equals(obj);
    }
    com.google.monitoring.dashboard.v1.MosaicLayout other =
        (com.google.monitoring.dashboard.v1.MosaicLayout) obj;

    if (getColumns() != other.getColumns()) return false;
    if (!getTilesList().equals(other.getTilesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
    hash = (53 * hash) + getColumns();
    if (getTilesCount() > 0) {
      hash = (37 * hash) + TILES_FIELD_NUMBER;
      hash = (53 * hash) + getTilesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.monitoring.dashboard.v1.MosaicLayout prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A mosaic layout divides the available space into a grid of blocks, and
   * overlays the grid with tiles. Unlike `GridLayout`, tiles may span multiple
   * grid blocks and can be placed at arbitrary locations in the grid.
   * </pre>
   *
   * Protobuf type {@code google.monitoring.dashboard.v1.MosaicLayout}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.monitoring.dashboard.v1.MosaicLayout)
      com.google.monitoring.dashboard.v1.MosaicLayoutOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.monitoring.dashboard.v1.LayoutsProto
          .internal_static_google_monitoring_dashboard_v1_MosaicLayout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.monitoring.dashboard.v1.LayoutsProto
          .internal_static_google_monitoring_dashboard_v1_MosaicLayout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.monitoring.dashboard.v1.MosaicLayout.class,
              com.google.monitoring.dashboard.v1.MosaicLayout.Builder.class);
    }

    // Construct using com.google.monitoring.dashboard.v1.MosaicLayout.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      columns_ = 0;
      if (tilesBuilder_ == null) {
        tiles_ = java.util.Collections.emptyList();
      } else {
        tiles_ = null;
        tilesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.monitoring.dashboard.v1.LayoutsProto
          .internal_static_google_monitoring_dashboard_v1_MosaicLayout_descriptor;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.MosaicLayout getDefaultInstanceForType() {
      return com.google.monitoring.dashboard.v1.MosaicLayout.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.MosaicLayout build() {
      com.google.monitoring.dashboard.v1.MosaicLayout result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.monitoring.dashboard.v1.MosaicLayout buildPartial() {
      com.google.monitoring.dashboard.v1.MosaicLayout result =
          new com.google.monitoring.dashboard.v1.MosaicLayout(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.monitoring.dashboard.v1.MosaicLayout result) {
      if (tilesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          tiles_ = java.util.Collections.unmodifiableList(tiles_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.tiles_ = tiles_;
      } else {
        result.tiles_ = tilesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.monitoring.dashboard.v1.MosaicLayout result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.columns_ = columns_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.monitoring.dashboard.v1.MosaicLayout) {
        return mergeFrom((com.google.monitoring.dashboard.v1.MosaicLayout) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.monitoring.dashboard.v1.MosaicLayout other) {
      if (other == com.google.monitoring.dashboard.v1.MosaicLayout.getDefaultInstance())
        return this;
      if (other.getColumns() != 0) {
        setColumns(other.getColumns());
      }
      if (tilesBuilder_ == null) {
        if (!other.tiles_.isEmpty()) {
          if (tiles_.isEmpty()) {
            tiles_ = other.tiles_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTilesIsMutable();
            tiles_.addAll(other.tiles_);
          }
          onChanged();
        }
      } else {
        if (!other.tiles_.isEmpty()) {
          if (tilesBuilder_.isEmpty()) {
            tilesBuilder_.dispose();
            tilesBuilder_ = null;
            tiles_ = other.tiles_;
            bitField0_ = (bitField0_ & ~0x00000002);
            tilesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getTilesFieldBuilder()
                    : null;
          } else {
            tilesBuilder_.addAllMessages(other.tiles_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                columns_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 26:
              {
                com.google.monitoring.dashboard.v1.MosaicLayout.Tile m =
                    input.readMessage(
                        com.google.monitoring.dashboard.v1.MosaicLayout.Tile.parser(),
                        extensionRegistry);
                if (tilesBuilder_ == null) {
                  ensureTilesIsMutable();
                  tiles_.add(m);
                } else {
                  tilesBuilder_.addMessage(m);
                }
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int columns_;
    /**
     *
     *
     * <pre>
     * The number of columns in the mosaic grid. The number of columns must be
     * between 1 and 12, inclusive.
     * </pre>
     *
     * <code>int32 columns = 1;</code>
     *
     * @return The columns.
     */
    @java.lang.Override
    public int getColumns() {
      return columns_;
    }
    /**
     *
     *
     * <pre>
     * The number of columns in the mosaic grid. The number of columns must be
     * between 1 and 12, inclusive.
     * </pre>
     *
     * <code>int32 columns = 1;</code>
     *
     * @param value The columns to set.
     * @return This builder for chaining.
     */
    public Builder setColumns(int value) {

      columns_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of columns in the mosaic grid. The number of columns must be
     * between 1 and 12, inclusive.
     * </pre>
     *
     * <code>int32 columns = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearColumns() {
      bitField0_ = (bitField0_ & ~0x00000001);
      columns_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.monitoring.dashboard.v1.MosaicLayout.Tile> tiles_ =
        java.util.Collections.emptyList();

    private void ensureTilesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        tiles_ =
            new java.util.ArrayList<com.google.monitoring.dashboard.v1.MosaicLayout.Tile>(tiles_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.monitoring.dashboard.v1.MosaicLayout.Tile,
            com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder,
            com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder>
        tilesBuilder_;

    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public java.util.List<com.google.monitoring.dashboard.v1.MosaicLayout.Tile> getTilesList() {
      if (tilesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tiles_);
      } else {
        return tilesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public int getTilesCount() {
      if (tilesBuilder_ == null) {
        return tiles_.size();
      } else {
        return tilesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public com.google.monitoring.dashboard.v1.MosaicLayout.Tile getTiles(int index) {
      if (tilesBuilder_ == null) {
        return tiles_.get(index);
      } else {
        return tilesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder setTiles(int index, com.google.monitoring.dashboard.v1.MosaicLayout.Tile value) {
      if (tilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTilesIsMutable();
        tiles_.set(index, value);
        onChanged();
      } else {
        tilesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder setTiles(
        int index, com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder builderForValue) {
      if (tilesBuilder_ == null) {
        ensureTilesIsMutable();
        tiles_.set(index, builderForValue.build());
        onChanged();
      } else {
        tilesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder addTiles(com.google.monitoring.dashboard.v1.MosaicLayout.Tile value) {
      if (tilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTilesIsMutable();
        tiles_.add(value);
        onChanged();
      } else {
        tilesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder addTiles(int index, com.google.monitoring.dashboard.v1.MosaicLayout.Tile value) {
      if (tilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTilesIsMutable();
        tiles_.add(index, value);
        onChanged();
      } else {
        tilesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder addTiles(
        com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder builderForValue) {
      if (tilesBuilder_ == null) {
        ensureTilesIsMutable();
        tiles_.add(builderForValue.build());
        onChanged();
      } else {
        tilesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder addTiles(
        int index, com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder builderForValue) {
      if (tilesBuilder_ == null) {
        ensureTilesIsMutable();
        tiles_.add(index, builderForValue.build());
        onChanged();
      } else {
        tilesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder addAllTiles(
        java.lang.Iterable<? extends com.google.monitoring.dashboard.v1.MosaicLayout.Tile> values) {
      if (tilesBuilder_ == null) {
        ensureTilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, tiles_);
        onChanged();
      } else {
        tilesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder clearTiles() {
      if (tilesBuilder_ == null) {
        tiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        tilesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public Builder removeTiles(int index) {
      if (tilesBuilder_ == null) {
        ensureTilesIsMutable();
        tiles_.remove(index);
        onChanged();
      } else {
        tilesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder getTilesBuilder(int index) {
      return getTilesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder getTilesOrBuilder(
        int index) {
      if (tilesBuilder_ == null) {
        return tiles_.get(index);
      } else {
        return tilesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public java.util.List<? extends com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder>
        getTilesOrBuilderList() {
      if (tilesBuilder_ != null) {
        return tilesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tiles_);
      }
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder addTilesBuilder() {
      return getTilesFieldBuilder()
          .addBuilder(com.google.monitoring.dashboard.v1.MosaicLayout.Tile.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder addTilesBuilder(int index) {
      return getTilesFieldBuilder()
          .addBuilder(
              index, com.google.monitoring.dashboard.v1.MosaicLayout.Tile.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The tiles to display.
     * </pre>
     *
     * <code>repeated .google.monitoring.dashboard.v1.MosaicLayout.Tile tiles = 3;</code>
     */
    public java.util.List<com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder>
        getTilesBuilderList() {
      return getTilesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.monitoring.dashboard.v1.MosaicLayout.Tile,
            com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder,
            com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder>
        getTilesFieldBuilder() {
      if (tilesBuilder_ == null) {
        tilesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.monitoring.dashboard.v1.MosaicLayout.Tile,
                com.google.monitoring.dashboard.v1.MosaicLayout.Tile.Builder,
                com.google.monitoring.dashboard.v1.MosaicLayout.TileOrBuilder>(
                tiles_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        tiles_ = null;
      }
      return tilesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.monitoring.dashboard.v1.MosaicLayout)
  }

  // @@protoc_insertion_point(class_scope:google.monitoring.dashboard.v1.MosaicLayout)
  private static final com.google.monitoring.dashboard.v1.MosaicLayout DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.monitoring.dashboard.v1.MosaicLayout();
  }

  public static com.google.monitoring.dashboard.v1.MosaicLayout getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MosaicLayout> PARSER =
      new com.google.protobuf.AbstractParser<MosaicLayout>() {
        @java.lang.Override
        public MosaicLayout parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<MosaicLayout> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MosaicLayout> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.monitoring.dashboard.v1.MosaicLayout getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
