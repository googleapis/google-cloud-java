/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/clouddms/v1/conversionworkspace_resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.clouddms.v1;

public interface EntityMappingOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.clouddms.v1.EntityMapping)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Source entity full name.
   * The source entity can also be a column, index or constraint using the
   * same naming notation schema.table.column.
   * </pre>
   *
   * <code>string source_entity = 1;</code>
   *
   * @return The sourceEntity.
   */
  java.lang.String getSourceEntity();
  /**
   *
   *
   * <pre>
   * Source entity full name.
   * The source entity can also be a column, index or constraint using the
   * same naming notation schema.table.column.
   * </pre>
   *
   * <code>string source_entity = 1;</code>
   *
   * @return The bytes for sourceEntity.
   */
  com.google.protobuf.ByteString getSourceEntityBytes();

  /**
   *
   *
   * <pre>
   * Target entity full name.
   * The draft entity can also include a column, index or constraint using the
   * same naming notation schema.table.column.
   * </pre>
   *
   * <code>string draft_entity = 2;</code>
   *
   * @return The draftEntity.
   */
  java.lang.String getDraftEntity();
  /**
   *
   *
   * <pre>
   * Target entity full name.
   * The draft entity can also include a column, index or constraint using the
   * same naming notation schema.table.column.
   * </pre>
   *
   * <code>string draft_entity = 2;</code>
   *
   * @return The bytes for draftEntity.
   */
  com.google.protobuf.ByteString getDraftEntityBytes();

  /**
   *
   *
   * <pre>
   * Type of source entity.
   * </pre>
   *
   * <code>.google.cloud.clouddms.v1.DatabaseEntityType source_type = 4;</code>
   *
   * @return The enum numeric value on the wire for sourceType.
   */
  int getSourceTypeValue();
  /**
   *
   *
   * <pre>
   * Type of source entity.
   * </pre>
   *
   * <code>.google.cloud.clouddms.v1.DatabaseEntityType source_type = 4;</code>
   *
   * @return The sourceType.
   */
  com.google.cloud.clouddms.v1.DatabaseEntityType getSourceType();

  /**
   *
   *
   * <pre>
   * Type of draft entity.
   * </pre>
   *
   * <code>.google.cloud.clouddms.v1.DatabaseEntityType draft_type = 5;</code>
   *
   * @return The enum numeric value on the wire for draftType.
   */
  int getDraftTypeValue();
  /**
   *
   *
   * <pre>
   * Type of draft entity.
   * </pre>
   *
   * <code>.google.cloud.clouddms.v1.DatabaseEntityType draft_type = 5;</code>
   *
   * @return The draftType.
   */
  com.google.cloud.clouddms.v1.DatabaseEntityType getDraftType();

  /**
   *
   *
   * <pre>
   * Entity mapping log entries.
   * Multiple rules can be effective and contribute changes to a converted
   * entity, such as a rule can handle the entity name, another rule can handle
   * an entity type. In addition, rules which did not change the entity are also
   * logged along with the reason preventing them to do so.
   * </pre>
   *
   * <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
   */
  java.util.List<com.google.cloud.clouddms.v1.EntityMappingLogEntry> getMappingLogList();
  /**
   *
   *
   * <pre>
   * Entity mapping log entries.
   * Multiple rules can be effective and contribute changes to a converted
   * entity, such as a rule can handle the entity name, another rule can handle
   * an entity type. In addition, rules which did not change the entity are also
   * logged along with the reason preventing them to do so.
   * </pre>
   *
   * <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
   */
  com.google.cloud.clouddms.v1.EntityMappingLogEntry getMappingLog(int index);
  /**
   *
   *
   * <pre>
   * Entity mapping log entries.
   * Multiple rules can be effective and contribute changes to a converted
   * entity, such as a rule can handle the entity name, another rule can handle
   * an entity type. In addition, rules which did not change the entity are also
   * logged along with the reason preventing them to do so.
   * </pre>
   *
   * <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
   */
  int getMappingLogCount();
  /**
   *
   *
   * <pre>
   * Entity mapping log entries.
   * Multiple rules can be effective and contribute changes to a converted
   * entity, such as a rule can handle the entity name, another rule can handle
   * an entity type. In addition, rules which did not change the entity are also
   * logged along with the reason preventing them to do so.
   * </pre>
   *
   * <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
   */
  java.util.List<? extends com.google.cloud.clouddms.v1.EntityMappingLogEntryOrBuilder>
      getMappingLogOrBuilderList();
  /**
   *
   *
   * <pre>
   * Entity mapping log entries.
   * Multiple rules can be effective and contribute changes to a converted
   * entity, such as a rule can handle the entity name, another rule can handle
   * an entity type. In addition, rules which did not change the entity are also
   * logged along with the reason preventing them to do so.
   * </pre>
   *
   * <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
   */
  com.google.cloud.clouddms.v1.EntityMappingLogEntryOrBuilder getMappingLogOrBuilder(int index);
}
