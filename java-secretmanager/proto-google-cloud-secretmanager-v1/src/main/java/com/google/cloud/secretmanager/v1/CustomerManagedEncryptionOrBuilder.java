/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/secretmanager/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.secretmanager.v1;

public interface CustomerManagedEncryptionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.secretmanager.v1.CustomerManagedEncryption)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The resource name of the Cloud KMS CryptoKey used to encrypt
   * secret payloads.
   *
   * For secrets using the
   * [UserManaged][google.cloud.secretmanager.v1.Replication.UserManaged]
   * replication policy type, Cloud KMS CryptoKeys must reside in the same
   * location as the [replica location][Secret.UserManaged.Replica.location].
   *
   * For secrets using the
   * [Automatic][google.cloud.secretmanager.v1.Replication.Automatic]
   * replication policy type, Cloud KMS CryptoKeys must reside in `global`.
   *
   * The expected format is `projects/&#42;&#47;locations/&#42;&#47;keyRings/&#42;&#47;cryptoKeys/&#42;`.
   * </pre>
   *
   * <code>string kms_key_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The kmsKeyName.
   */
  java.lang.String getKmsKeyName();
  /**
   *
   *
   * <pre>
   * Required. The resource name of the Cloud KMS CryptoKey used to encrypt
   * secret payloads.
   *
   * For secrets using the
   * [UserManaged][google.cloud.secretmanager.v1.Replication.UserManaged]
   * replication policy type, Cloud KMS CryptoKeys must reside in the same
   * location as the [replica location][Secret.UserManaged.Replica.location].
   *
   * For secrets using the
   * [Automatic][google.cloud.secretmanager.v1.Replication.Automatic]
   * replication policy type, Cloud KMS CryptoKeys must reside in `global`.
   *
   * The expected format is `projects/&#42;&#47;locations/&#42;&#47;keyRings/&#42;&#47;cryptoKeys/&#42;`.
   * </pre>
   *
   * <code>string kms_key_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for kmsKeyName.
   */
  com.google.protobuf.ByteString getKmsKeyNameBytes();
}
