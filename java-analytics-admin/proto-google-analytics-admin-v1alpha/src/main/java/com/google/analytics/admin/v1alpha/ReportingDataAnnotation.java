/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/admin/v1alpha/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.analytics.admin.v1alpha;

/**
 *
 *
 * <pre>
 * A Reporting Data Annotation is a comment connected to certain dates for
 * reporting data.
 * </pre>
 *
 * Protobuf type {@code google.analytics.admin.v1alpha.ReportingDataAnnotation}
 */
public final class ReportingDataAnnotation extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.analytics.admin.v1alpha.ReportingDataAnnotation)
    ReportingDataAnnotationOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use ReportingDataAnnotation.newBuilder() to construct.
  private ReportingDataAnnotation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ReportingDataAnnotation() {
    name_ = "";
    title_ = "";
    description_ = "";
    color_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ReportingDataAnnotation();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.analytics.admin.v1alpha.ResourcesProto
        .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.analytics.admin.v1alpha.ResourcesProto
        .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.class,
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Colors that may be used for this Reporting Data Annotation
   * </pre>
   *
   * Protobuf enum {@code google.analytics.admin.v1alpha.ReportingDataAnnotation.Color}
   */
  public enum Color implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Color unknown or not specified.
     * </pre>
     *
     * <code>COLOR_UNSPECIFIED = 0;</code>
     */
    COLOR_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Purple color.
     * </pre>
     *
     * <code>PURPLE = 1;</code>
     */
    PURPLE(1),
    /**
     *
     *
     * <pre>
     * Brown color.
     * </pre>
     *
     * <code>BROWN = 2;</code>
     */
    BROWN(2),
    /**
     *
     *
     * <pre>
     * Blue color.
     * </pre>
     *
     * <code>BLUE = 3;</code>
     */
    BLUE(3),
    /**
     *
     *
     * <pre>
     * Green color.
     * </pre>
     *
     * <code>GREEN = 4;</code>
     */
    GREEN(4),
    /**
     *
     *
     * <pre>
     * Red color.
     * </pre>
     *
     * <code>RED = 5;</code>
     */
    RED(5),
    /**
     *
     *
     * <pre>
     * Cyan color.
     * </pre>
     *
     * <code>CYAN = 6;</code>
     */
    CYAN(6),
    /**
     *
     *
     * <pre>
     * Orange color. (Only used for system-generated annotations)
     * </pre>
     *
     * <code>ORANGE = 7;</code>
     */
    ORANGE(7),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Color unknown or not specified.
     * </pre>
     *
     * <code>COLOR_UNSPECIFIED = 0;</code>
     */
    public static final int COLOR_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Purple color.
     * </pre>
     *
     * <code>PURPLE = 1;</code>
     */
    public static final int PURPLE_VALUE = 1;

    /**
     *
     *
     * <pre>
     * Brown color.
     * </pre>
     *
     * <code>BROWN = 2;</code>
     */
    public static final int BROWN_VALUE = 2;

    /**
     *
     *
     * <pre>
     * Blue color.
     * </pre>
     *
     * <code>BLUE = 3;</code>
     */
    public static final int BLUE_VALUE = 3;

    /**
     *
     *
     * <pre>
     * Green color.
     * </pre>
     *
     * <code>GREEN = 4;</code>
     */
    public static final int GREEN_VALUE = 4;

    /**
     *
     *
     * <pre>
     * Red color.
     * </pre>
     *
     * <code>RED = 5;</code>
     */
    public static final int RED_VALUE = 5;

    /**
     *
     *
     * <pre>
     * Cyan color.
     * </pre>
     *
     * <code>CYAN = 6;</code>
     */
    public static final int CYAN_VALUE = 6;

    /**
     *
     *
     * <pre>
     * Orange color. (Only used for system-generated annotations)
     * </pre>
     *
     * <code>ORANGE = 7;</code>
     */
    public static final int ORANGE_VALUE = 7;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Color valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Color forNumber(int value) {
      switch (value) {
        case 0:
          return COLOR_UNSPECIFIED;
        case 1:
          return PURPLE;
        case 2:
          return BROWN;
        case 3:
          return BLUE;
        case 4:
          return GREEN;
        case 5:
          return RED;
        case 6:
          return CYAN;
        case 7:
          return ORANGE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Color> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Color> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Color>() {
          public Color findValueByNumber(int number) {
            return Color.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final Color[] VALUES = values();

    public static Color valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Color(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.analytics.admin.v1alpha.ReportingDataAnnotation.Color)
  }

  public interface DateRangeOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The start date for this range. Must be a valid date with
     * year, month, and day set. The date may be in the past, present, or
     * future.
     * </pre>
     *
     * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return Whether the startDate field is set.
     */
    boolean hasStartDate();

    /**
     *
     *
     * <pre>
     * Required. The start date for this range. Must be a valid date with
     * year, month, and day set. The date may be in the past, present, or
     * future.
     * </pre>
     *
     * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The startDate.
     */
    com.google.type.Date getStartDate();

    /**
     *
     *
     * <pre>
     * Required. The start date for this range. Must be a valid date with
     * year, month, and day set. The date may be in the past, present, or
     * future.
     * </pre>
     *
     * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.type.DateOrBuilder getStartDateOrBuilder();

    /**
     *
     *
     * <pre>
     * Required. The end date for this range. Must be a valid date with
     * year, month, and day set. This date must be greater than or equal to
     * the start date.
     * </pre>
     *
     * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return Whether the endDate field is set.
     */
    boolean hasEndDate();

    /**
     *
     *
     * <pre>
     * Required. The end date for this range. Must be a valid date with
     * year, month, and day set. This date must be greater than or equal to
     * the start date.
     * </pre>
     *
     * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The endDate.
     */
    com.google.type.Date getEndDate();

    /**
     *
     *
     * <pre>
     * Required. The end date for this range. Must be a valid date with
     * year, month, and day set. This date must be greater than or equal to
     * the start date.
     * </pre>
     *
     * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    com.google.type.DateOrBuilder getEndDateOrBuilder();
  }

  /**
   *
   *
   * <pre>
   * Represents a Reporting Data Annotation's date range, both start and end
   * dates are inclusive. Time zones are based on the parent property.
   * </pre>
   *
   * Protobuf type {@code google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange}
   */
  public static final class DateRange extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)
      DateRangeOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use DateRange.newBuilder() to construct.
    private DateRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private DateRange() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new DateRange();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.analytics.admin.v1alpha.ResourcesProto
          .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_DateRange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.admin.v1alpha.ResourcesProto
          .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_DateRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.class,
              com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder.class);
    }

    private int bitField0_;
    public static final int START_DATE_FIELD_NUMBER = 1;
    private com.google.type.Date startDate_;

    /**
     *
     *
     * <pre>
     * Required. The start date for this range. Must be a valid date with
     * year, month, and day set. The date may be in the past, present, or
     * future.
     * </pre>
     *
     * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return Whether the startDate field is set.
     */
    @java.lang.Override
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Required. The start date for this range. Must be a valid date with
     * year, month, and day set. The date may be in the past, present, or
     * future.
     * </pre>
     *
     * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The startDate.
     */
    @java.lang.Override
    public com.google.type.Date getStartDate() {
      return startDate_ == null ? com.google.type.Date.getDefaultInstance() : startDate_;
    }

    /**
     *
     *
     * <pre>
     * Required. The start date for this range. Must be a valid date with
     * year, month, and day set. The date may be in the past, present, or
     * future.
     * </pre>
     *
     * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.type.DateOrBuilder getStartDateOrBuilder() {
      return startDate_ == null ? com.google.type.Date.getDefaultInstance() : startDate_;
    }

    public static final int END_DATE_FIELD_NUMBER = 2;
    private com.google.type.Date endDate_;

    /**
     *
     *
     * <pre>
     * Required. The end date for this range. Must be a valid date with
     * year, month, and day set. This date must be greater than or equal to
     * the start date.
     * </pre>
     *
     * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return Whether the endDate field is set.
     */
    @java.lang.Override
    public boolean hasEndDate() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Required. The end date for this range. Must be a valid date with
     * year, month, and day set. This date must be greater than or equal to
     * the start date.
     * </pre>
     *
     * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The endDate.
     */
    @java.lang.Override
    public com.google.type.Date getEndDate() {
      return endDate_ == null ? com.google.type.Date.getDefaultInstance() : endDate_;
    }

    /**
     *
     *
     * <pre>
     * Required. The end date for this range. Must be a valid date with
     * year, month, and day set. This date must be greater than or equal to
     * the start date.
     * </pre>
     *
     * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    @java.lang.Override
    public com.google.type.DateOrBuilder getEndDateOrBuilder() {
      return endDate_ == null ? com.google.type.Date.getDefaultInstance() : endDate_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getStartDate());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getEndDate());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getStartDate());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getEndDate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)) {
        return super.equals(obj);
      }
      com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange other =
          (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) obj;

      if (hasStartDate() != other.hasStartDate()) return false;
      if (hasStartDate()) {
        if (!getStartDate().equals(other.getStartDate())) return false;
      }
      if (hasEndDate() != other.hasEndDate()) return false;
      if (hasEndDate()) {
        if (!getEndDate().equals(other.getEndDate())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartDate()) {
        hash = (37 * hash) + START_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getStartDate().hashCode();
      }
      if (hasEndDate()) {
        hash = (37 * hash) + END_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getEndDate().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * Represents a Reporting Data Annotation's date range, both start and end
     * dates are inclusive. Time zones are based on the parent property.
     * </pre>
     *
     * Protobuf type {@code google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.analytics.admin.v1alpha.ResourcesProto
            .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_DateRange_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.analytics.admin.v1alpha.ResourcesProto
            .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_DateRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.class,
                com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder.class);
      }

      // Construct using
      // com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getStartDateFieldBuilder();
          getEndDateFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        startDate_ = null;
        if (startDateBuilder_ != null) {
          startDateBuilder_.dispose();
          startDateBuilder_ = null;
        }
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.analytics.admin.v1alpha.ResourcesProto
            .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_DateRange_descriptor;
      }

      @java.lang.Override
      public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
          getDefaultInstanceForType() {
        return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange build() {
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange buildPartial() {
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange result =
            new com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.startDate_ = startDateBuilder_ == null ? startDate_ : startDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.endDate_ = endDateBuilder_ == null ? endDate_ : endDateBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) {
          return mergeFrom(
              (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange other) {
        if (other
            == com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
                .getDefaultInstance()) return this;
        if (other.hasStartDate()) {
          mergeStartDate(other.getStartDate());
        }
        if (other.hasEndDate()) {
          mergeEndDate(other.getEndDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getStartDateFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getEndDateFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.type.Date startDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
          startDateBuilder_;

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return Whether the startDate field is set.
       */
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000001) != 0);
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The startDate.
       */
      public com.google.type.Date getStartDate() {
        if (startDateBuilder_ == null) {
          return startDate_ == null ? com.google.type.Date.getDefaultInstance() : startDate_;
        } else {
          return startDateBuilder_.getMessage();
        }
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setStartDate(com.google.type.Date value) {
        if (startDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startDate_ = value;
        } else {
          startDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setStartDate(com.google.type.Date.Builder builderForValue) {
        if (startDateBuilder_ == null) {
          startDate_ = builderForValue.build();
        } else {
          startDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergeStartDate(com.google.type.Date value) {
        if (startDateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)
              && startDate_ != null
              && startDate_ != com.google.type.Date.getDefaultInstance()) {
            getStartDateBuilder().mergeFrom(value);
          } else {
            startDate_ = value;
          }
        } else {
          startDateBuilder_.mergeFrom(value);
        }
        if (startDate_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startDate_ = null;
        if (startDateBuilder_ != null) {
          startDateBuilder_.dispose();
          startDateBuilder_ = null;
        }
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.type.Date.Builder getStartDateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStartDateFieldBuilder().getBuilder();
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.type.DateOrBuilder getStartDateOrBuilder() {
        if (startDateBuilder_ != null) {
          return startDateBuilder_.getMessageOrBuilder();
        } else {
          return startDate_ == null ? com.google.type.Date.getDefaultInstance() : startDate_;
        }
      }

      /**
       *
       *
       * <pre>
       * Required. The start date for this range. Must be a valid date with
       * year, month, and day set. The date may be in the past, present, or
       * future.
       * </pre>
       *
       * <code>.google.type.Date start_date = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
          getStartDateFieldBuilder() {
        if (startDateBuilder_ == null) {
          startDateBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.type.Date,
                  com.google.type.Date.Builder,
                  com.google.type.DateOrBuilder>(getStartDate(), getParentForChildren(), isClean());
          startDate_ = null;
        }
        return startDateBuilder_;
      }

      private com.google.type.Date endDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
          endDateBuilder_;

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return Whether the endDate field is set.
       */
      public boolean hasEndDate() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The endDate.
       */
      public com.google.type.Date getEndDate() {
        if (endDateBuilder_ == null) {
          return endDate_ == null ? com.google.type.Date.getDefaultInstance() : endDate_;
        } else {
          return endDateBuilder_.getMessage();
        }
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setEndDate(com.google.type.Date value) {
        if (endDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endDate_ = value;
        } else {
          endDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder setEndDate(com.google.type.Date.Builder builderForValue) {
        if (endDateBuilder_ == null) {
          endDate_ = builderForValue.build();
        } else {
          endDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder mergeEndDate(com.google.type.Date value) {
        if (endDateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && endDate_ != null
              && endDate_ != com.google.type.Date.getDefaultInstance()) {
            getEndDateBuilder().mergeFrom(value);
          } else {
            endDate_ = value;
          }
        } else {
          endDateBuilder_.mergeFrom(value);
        }
        if (endDate_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public Builder clearEndDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endDate_ = null;
        if (endDateBuilder_ != null) {
          endDateBuilder_.dispose();
          endDateBuilder_ = null;
        }
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.type.Date.Builder getEndDateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEndDateFieldBuilder().getBuilder();
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      public com.google.type.DateOrBuilder getEndDateOrBuilder() {
        if (endDateBuilder_ != null) {
          return endDateBuilder_.getMessageOrBuilder();
        } else {
          return endDate_ == null ? com.google.type.Date.getDefaultInstance() : endDate_;
        }
      }

      /**
       *
       *
       * <pre>
       * Required. The end date for this range. Must be a valid date with
       * year, month, and day set. This date must be greater than or equal to
       * the start date.
       * </pre>
       *
       * <code>.google.type.Date end_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
          getEndDateFieldBuilder() {
        if (endDateBuilder_ == null) {
          endDateBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.type.Date,
                  com.google.type.Date.Builder,
                  com.google.type.DateOrBuilder>(getEndDate(), getParentForChildren(), isClean());
          endDate_ = null;
        }
        return endDateBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)
    }

    // @@protoc_insertion_point(class_scope:google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)
    private static final com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange();
    }

    public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DateRange> PARSER =
        new com.google.protobuf.AbstractParser<DateRange>() {
          @java.lang.Override
          public DateRange parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<DateRange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DateRange> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int targetCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object target_;

  public enum TargetCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ANNOTATION_DATE(4),
    ANNOTATION_DATE_RANGE(5),
    TARGET_NOT_SET(0);
    private final int value;

    private TargetCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TargetCase valueOf(int value) {
      return forNumber(value);
    }

    public static TargetCase forNumber(int value) {
      switch (value) {
        case 4:
          return ANNOTATION_DATE;
        case 5:
          return ANNOTATION_DATE_RANGE;
        case 0:
          return TARGET_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public TargetCase getTargetCase() {
    return TargetCase.forNumber(targetCase_);
  }

  public static final int ANNOTATION_DATE_FIELD_NUMBER = 4;

  /**
   *
   *
   * <pre>
   * If set, the Reporting Data Annotation is for a specific date represented
   * by this field. The date must be a valid date with year, month and day
   * set. The date may be in the past, present, or future.
   * </pre>
   *
   * <code>.google.type.Date annotation_date = 4;</code>
   *
   * @return Whether the annotationDate field is set.
   */
  @java.lang.Override
  public boolean hasAnnotationDate() {
    return targetCase_ == 4;
  }

  /**
   *
   *
   * <pre>
   * If set, the Reporting Data Annotation is for a specific date represented
   * by this field. The date must be a valid date with year, month and day
   * set. The date may be in the past, present, or future.
   * </pre>
   *
   * <code>.google.type.Date annotation_date = 4;</code>
   *
   * @return The annotationDate.
   */
  @java.lang.Override
  public com.google.type.Date getAnnotationDate() {
    if (targetCase_ == 4) {
      return (com.google.type.Date) target_;
    }
    return com.google.type.Date.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * If set, the Reporting Data Annotation is for a specific date represented
   * by this field. The date must be a valid date with year, month and day
   * set. The date may be in the past, present, or future.
   * </pre>
   *
   * <code>.google.type.Date annotation_date = 4;</code>
   */
  @java.lang.Override
  public com.google.type.DateOrBuilder getAnnotationDateOrBuilder() {
    if (targetCase_ == 4) {
      return (com.google.type.Date) target_;
    }
    return com.google.type.Date.getDefaultInstance();
  }

  public static final int ANNOTATION_DATE_RANGE_FIELD_NUMBER = 5;

  /**
   *
   *
   * <pre>
   * If set, the Reporting Data Annotation is for a range of dates represented
   * by this field.
   * </pre>
   *
   * <code>
   * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
   * </code>
   *
   * @return Whether the annotationDateRange field is set.
   */
  @java.lang.Override
  public boolean hasAnnotationDateRange() {
    return targetCase_ == 5;
  }

  /**
   *
   *
   * <pre>
   * If set, the Reporting Data Annotation is for a range of dates represented
   * by this field.
   * </pre>
   *
   * <code>
   * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
   * </code>
   *
   * @return The annotationDateRange.
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
      getAnnotationDateRange() {
    if (targetCase_ == 5) {
      return (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_;
    }
    return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        .getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * If set, the Reporting Data Annotation is for a range of dates represented
   * by this field.
   * </pre>
   *
   * <code>
   * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
   * </code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRangeOrBuilder
      getAnnotationDateRangeOrBuilder() {
    if (targetCase_ == 5) {
      return (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_;
    }
    return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        .getDefaultInstance();
  }

  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";

  /**
   *
   *
   * <pre>
   * Required. Identifier. Resource name of this Reporting Data Annotation.
   * Format:
   * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
   * Format: 'properties/123/reportingDataAnnotations/456'
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. Identifier. Resource name of this Reporting Data Annotation.
   * Format:
   * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
   * Format: 'properties/123/reportingDataAnnotations/456'
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TITLE_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object title_ = "";

  /**
   *
   *
   * <pre>
   * Required. Human-readable title for this Reporting Data Annotation.
   * </pre>
   *
   * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The title.
   */
  @java.lang.Override
  public java.lang.String getTitle() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      title_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Required. Human-readable title for this Reporting Data Annotation.
   * </pre>
   *
   * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for title.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTitleBytes() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      title_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";

  /**
   *
   *
   * <pre>
   * Optional. Description for this Reporting Data Annotation.
   * </pre>
   *
   * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Optional. Description for this Reporting Data Annotation.
   * </pre>
   *
   * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLOR_FIELD_NUMBER = 6;
  private int color_ = 0;

  /**
   *
   *
   * <pre>
   * Required. The color used for display of this Reporting Data Annotation.
   * </pre>
   *
   * <code>
   * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for color.
   */
  @java.lang.Override
  public int getColorValue() {
    return color_;
  }

  /**
   *
   *
   * <pre>
   * Required. The color used for display of this Reporting Data Annotation.
   * </pre>
   *
   * <code>
   * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The color.
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color getColor() {
    com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color result =
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color.forNumber(color_);
    return result == null
        ? com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color.UNRECOGNIZED
        : result;
  }

  public static final int SYSTEM_GENERATED_FIELD_NUMBER = 7;
  private boolean systemGenerated_ = false;

  /**
   *
   *
   * <pre>
   * Output only. If true, this annotation was generated by the Google Analytics
   * system. System-generated annotations cannot be updated or deleted.
   * </pre>
   *
   * <code>bool system_generated = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The systemGenerated.
   */
  @java.lang.Override
  public boolean getSystemGenerated() {
    return systemGenerated_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, title_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
    }
    if (targetCase_ == 4) {
      output.writeMessage(4, (com.google.type.Date) target_);
    }
    if (targetCase_ == 5) {
      output.writeMessage(
          5, (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_);
    }
    if (color_
        != com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color.COLOR_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(6, color_);
    }
    if (systemGenerated_ != false) {
      output.writeBool(7, systemGenerated_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, title_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
    }
    if (targetCase_ == 4) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              4, (com.google.type.Date) target_);
    }
    if (targetCase_ == 5) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              5, (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_);
    }
    if (color_
        != com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color.COLOR_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, color_);
    }
    if (systemGenerated_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, systemGenerated_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.analytics.admin.v1alpha.ReportingDataAnnotation)) {
      return super.equals(obj);
    }
    com.google.analytics.admin.v1alpha.ReportingDataAnnotation other =
        (com.google.analytics.admin.v1alpha.ReportingDataAnnotation) obj;

    if (!getName().equals(other.getName())) return false;
    if (!getTitle().equals(other.getTitle())) return false;
    if (!getDescription().equals(other.getDescription())) return false;
    if (color_ != other.color_) return false;
    if (getSystemGenerated() != other.getSystemGenerated()) return false;
    if (!getTargetCase().equals(other.getTargetCase())) return false;
    switch (targetCase_) {
      case 4:
        if (!getAnnotationDate().equals(other.getAnnotationDate())) return false;
        break;
      case 5:
        if (!getAnnotationDateRange().equals(other.getAnnotationDateRange())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + TITLE_FIELD_NUMBER;
    hash = (53 * hash) + getTitle().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + COLOR_FIELD_NUMBER;
    hash = (53 * hash) + color_;
    hash = (37 * hash) + SYSTEM_GENERATED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getSystemGenerated());
    switch (targetCase_) {
      case 4:
        hash = (37 * hash) + ANNOTATION_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getAnnotationDate().hashCode();
        break;
      case 5:
        hash = (37 * hash) + ANNOTATION_DATE_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getAnnotationDateRange().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.analytics.admin.v1alpha.ReportingDataAnnotation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * A Reporting Data Annotation is a comment connected to certain dates for
   * reporting data.
   * </pre>
   *
   * Protobuf type {@code google.analytics.admin.v1alpha.ReportingDataAnnotation}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.analytics.admin.v1alpha.ReportingDataAnnotation)
      com.google.analytics.admin.v1alpha.ReportingDataAnnotationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.analytics.admin.v1alpha.ResourcesProto
          .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.admin.v1alpha.ResourcesProto
          .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.admin.v1alpha.ReportingDataAnnotation.class,
              com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Builder.class);
    }

    // Construct using com.google.analytics.admin.v1alpha.ReportingDataAnnotation.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (annotationDateBuilder_ != null) {
        annotationDateBuilder_.clear();
      }
      if (annotationDateRangeBuilder_ != null) {
        annotationDateRangeBuilder_.clear();
      }
      name_ = "";
      title_ = "";
      description_ = "";
      color_ = 0;
      systemGenerated_ = false;
      targetCase_ = 0;
      target_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.analytics.admin.v1alpha.ResourcesProto
          .internal_static_google_analytics_admin_v1alpha_ReportingDataAnnotation_descriptor;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation getDefaultInstanceForType() {
      return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation build() {
      com.google.analytics.admin.v1alpha.ReportingDataAnnotation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation buildPartial() {
      com.google.analytics.admin.v1alpha.ReportingDataAnnotation result =
          new com.google.analytics.admin.v1alpha.ReportingDataAnnotation(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.analytics.admin.v1alpha.ReportingDataAnnotation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.title_ = title_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.color_ = color_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.systemGenerated_ = systemGenerated_;
      }
    }

    private void buildPartialOneofs(
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation result) {
      result.targetCase_ = targetCase_;
      result.target_ = this.target_;
      if (targetCase_ == 4 && annotationDateBuilder_ != null) {
        result.target_ = annotationDateBuilder_.build();
      }
      if (targetCase_ == 5 && annotationDateRangeBuilder_ != null) {
        result.target_ = annotationDateRangeBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.analytics.admin.v1alpha.ReportingDataAnnotation) {
        return mergeFrom((com.google.analytics.admin.v1alpha.ReportingDataAnnotation) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.analytics.admin.v1alpha.ReportingDataAnnotation other) {
      if (other == com.google.analytics.admin.v1alpha.ReportingDataAnnotation.getDefaultInstance())
        return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getTitle().isEmpty()) {
        title_ = other.title_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.color_ != 0) {
        setColorValue(other.getColorValue());
      }
      if (other.getSystemGenerated() != false) {
        setSystemGenerated(other.getSystemGenerated());
      }
      switch (other.getTargetCase()) {
        case ANNOTATION_DATE:
          {
            mergeAnnotationDate(other.getAnnotationDate());
            break;
          }
        case ANNOTATION_DATE_RANGE:
          {
            mergeAnnotationDateRange(other.getAnnotationDateRange());
            break;
          }
        case TARGET_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 10
            case 18:
              {
                title_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 18
            case 26:
              {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 26
            case 34:
              {
                input.readMessage(getAnnotationDateFieldBuilder().getBuilder(), extensionRegistry);
                targetCase_ = 4;
                break;
              } // case 34
            case 42:
              {
                input.readMessage(
                    getAnnotationDateRangeFieldBuilder().getBuilder(), extensionRegistry);
                targetCase_ = 5;
                break;
              } // case 42
            case 48:
              {
                color_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
            case 56:
              {
                systemGenerated_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int targetCase_ = 0;
    private java.lang.Object target_;

    public TargetCase getTargetCase() {
      return TargetCase.forNumber(targetCase_);
    }

    public Builder clearTarget() {
      targetCase_ = 0;
      target_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
        annotationDateBuilder_;

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     *
     * @return Whether the annotationDate field is set.
     */
    @java.lang.Override
    public boolean hasAnnotationDate() {
      return targetCase_ == 4;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     *
     * @return The annotationDate.
     */
    @java.lang.Override
    public com.google.type.Date getAnnotationDate() {
      if (annotationDateBuilder_ == null) {
        if (targetCase_ == 4) {
          return (com.google.type.Date) target_;
        }
        return com.google.type.Date.getDefaultInstance();
      } else {
        if (targetCase_ == 4) {
          return annotationDateBuilder_.getMessage();
        }
        return com.google.type.Date.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    public Builder setAnnotationDate(com.google.type.Date value) {
      if (annotationDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        target_ = value;
        onChanged();
      } else {
        annotationDateBuilder_.setMessage(value);
      }
      targetCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    public Builder setAnnotationDate(com.google.type.Date.Builder builderForValue) {
      if (annotationDateBuilder_ == null) {
        target_ = builderForValue.build();
        onChanged();
      } else {
        annotationDateBuilder_.setMessage(builderForValue.build());
      }
      targetCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    public Builder mergeAnnotationDate(com.google.type.Date value) {
      if (annotationDateBuilder_ == null) {
        if (targetCase_ == 4 && target_ != com.google.type.Date.getDefaultInstance()) {
          target_ =
              com.google.type.Date.newBuilder((com.google.type.Date) target_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          target_ = value;
        }
        onChanged();
      } else {
        if (targetCase_ == 4) {
          annotationDateBuilder_.mergeFrom(value);
        } else {
          annotationDateBuilder_.setMessage(value);
        }
      }
      targetCase_ = 4;
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    public Builder clearAnnotationDate() {
      if (annotationDateBuilder_ == null) {
        if (targetCase_ == 4) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
      } else {
        if (targetCase_ == 4) {
          targetCase_ = 0;
          target_ = null;
        }
        annotationDateBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    public com.google.type.Date.Builder getAnnotationDateBuilder() {
      return getAnnotationDateFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    @java.lang.Override
    public com.google.type.DateOrBuilder getAnnotationDateOrBuilder() {
      if ((targetCase_ == 4) && (annotationDateBuilder_ != null)) {
        return annotationDateBuilder_.getMessageOrBuilder();
      } else {
        if (targetCase_ == 4) {
          return (com.google.type.Date) target_;
        }
        return com.google.type.Date.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a specific date represented
     * by this field. The date must be a valid date with year, month and day
     * set. The date may be in the past, present, or future.
     * </pre>
     *
     * <code>.google.type.Date annotation_date = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
        getAnnotationDateFieldBuilder() {
      if (annotationDateBuilder_ == null) {
        if (!(targetCase_ == 4)) {
          target_ = com.google.type.Date.getDefaultInstance();
        }
        annotationDateBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>(
                (com.google.type.Date) target_, getParentForChildren(), isClean());
        target_ = null;
      }
      targetCase_ = 4;
      onChanged();
      return annotationDateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange,
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder,
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRangeOrBuilder>
        annotationDateRangeBuilder_;

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     *
     * @return Whether the annotationDateRange field is set.
     */
    @java.lang.Override
    public boolean hasAnnotationDateRange() {
      return targetCase_ == 5;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     *
     * @return The annotationDateRange.
     */
    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
        getAnnotationDateRange() {
      if (annotationDateRangeBuilder_ == null) {
        if (targetCase_ == 5) {
          return (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_;
        }
        return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
            .getDefaultInstance();
      } else {
        if (targetCase_ == 5) {
          return annotationDateRangeBuilder_.getMessage();
        }
        return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    public Builder setAnnotationDateRange(
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange value) {
      if (annotationDateRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        target_ = value;
        onChanged();
      } else {
        annotationDateRangeBuilder_.setMessage(value);
      }
      targetCase_ = 5;
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    public Builder setAnnotationDateRange(
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder
            builderForValue) {
      if (annotationDateRangeBuilder_ == null) {
        target_ = builderForValue.build();
        onChanged();
      } else {
        annotationDateRangeBuilder_.setMessage(builderForValue.build());
      }
      targetCase_ = 5;
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    public Builder mergeAnnotationDateRange(
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange value) {
      if (annotationDateRangeBuilder_ == null) {
        if (targetCase_ == 5
            && target_
                != com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
                    .getDefaultInstance()) {
          target_ =
              com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.newBuilder(
                      (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange)
                          target_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          target_ = value;
        }
        onChanged();
      } else {
        if (targetCase_ == 5) {
          annotationDateRangeBuilder_.mergeFrom(value);
        } else {
          annotationDateRangeBuilder_.setMessage(value);
        }
      }
      targetCase_ = 5;
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    public Builder clearAnnotationDateRange() {
      if (annotationDateRangeBuilder_ == null) {
        if (targetCase_ == 5) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
      } else {
        if (targetCase_ == 5) {
          targetCase_ = 0;
          target_ = null;
        }
        annotationDateRangeBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder
        getAnnotationDateRangeBuilder() {
      return getAnnotationDateRangeFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRangeOrBuilder
        getAnnotationDateRangeOrBuilder() {
      if ((targetCase_ == 5) && (annotationDateRangeBuilder_ != null)) {
        return annotationDateRangeBuilder_.getMessageOrBuilder();
      } else {
        if (targetCase_ == 5) {
          return (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_;
        }
        return com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * If set, the Reporting Data Annotation is for a range of dates represented
     * by this field.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange annotation_date_range = 5;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange,
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder,
            com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRangeOrBuilder>
        getAnnotationDateRangeFieldBuilder() {
      if (annotationDateRangeBuilder_ == null) {
        if (!(targetCase_ == 5)) {
          target_ =
              com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange
                  .getDefaultInstance();
        }
        annotationDateRangeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange,
                com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange.Builder,
                com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRangeOrBuilder>(
                (com.google.analytics.admin.v1alpha.ReportingDataAnnotation.DateRange) target_,
                getParentForChildren(),
                isClean());
        target_ = null;
      }
      targetCase_ = 5;
      onChanged();
      return annotationDateRangeBuilder_;
    }

    private java.lang.Object name_ = "";

    /**
     *
     *
     * <pre>
     * Required. Identifier. Resource name of this Reporting Data Annotation.
     * Format:
     * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
     * Format: 'properties/123/reportingDataAnnotations/456'
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Identifier. Resource name of this Reporting Data Annotation.
     * Format:
     * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
     * Format: 'properties/123/reportingDataAnnotations/456'
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Identifier. Resource name of this Reporting Data Annotation.
     * Format:
     * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
     * Format: 'properties/123/reportingDataAnnotations/456'
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Identifier. Resource name of this Reporting Data Annotation.
     * Format:
     * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
     * Format: 'properties/123/reportingDataAnnotations/456'
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Identifier. Resource name of this Reporting Data Annotation.
     * Format:
     * 'properties/{property_id}/reportingDataAnnotations/{reporting_data_annotation}'
     * Format: 'properties/123/reportingDataAnnotations/456'
     * </pre>
     *
     * <code>
     * string name = 1 [(.google.api.field_behavior) = IDENTIFIER, (.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object title_ = "";

    /**
     *
     *
     * <pre>
     * Required. Human-readable title for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The title.
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Human-readable title for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for title.
     */
    public com.google.protobuf.ByteString getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Required. Human-readable title for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The title to set.
     * @return This builder for chaining.
     */
    public Builder setTitle(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      title_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Human-readable title for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTitle() {
      title_ = getDefaultInstance().getTitle();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. Human-readable title for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string title = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for title to set.
     * @return This builder for chaining.
     */
    public Builder setTitleBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      title_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Description for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Description for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Description for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      description_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Description for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. Description for this Reporting Data Annotation.
     * </pre>
     *
     * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private int color_ = 0;

    /**
     *
     *
     * <pre>
     * Required. The color used for display of this Reporting Data Annotation.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for color.
     */
    @java.lang.Override
    public int getColorValue() {
      return color_;
    }

    /**
     *
     *
     * <pre>
     * Required. The color used for display of this Reporting Data Annotation.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for color to set.
     * @return This builder for chaining.
     */
    public Builder setColorValue(int value) {
      color_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The color used for display of this Reporting Data Annotation.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The color.
     */
    @java.lang.Override
    public com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color getColor() {
      com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color result =
          com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color.forNumber(color_);
      return result == null
          ? com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color.UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * Required. The color used for display of this Reporting Data Annotation.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The color to set.
     * @return This builder for chaining.
     */
    public Builder setColor(
        com.google.analytics.admin.v1alpha.ReportingDataAnnotation.Color value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      color_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Required. The color used for display of this Reporting Data Annotation.
     * </pre>
     *
     * <code>
     * .google.analytics.admin.v1alpha.ReportingDataAnnotation.Color color = 6 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearColor() {
      bitField0_ = (bitField0_ & ~0x00000020);
      color_ = 0;
      onChanged();
      return this;
    }

    private boolean systemGenerated_;

    /**
     *
     *
     * <pre>
     * Output only. If true, this annotation was generated by the Google Analytics
     * system. System-generated annotations cannot be updated or deleted.
     * </pre>
     *
     * <code>bool system_generated = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The systemGenerated.
     */
    @java.lang.Override
    public boolean getSystemGenerated() {
      return systemGenerated_;
    }

    /**
     *
     *
     * <pre>
     * Output only. If true, this annotation was generated by the Google Analytics
     * system. System-generated annotations cannot be updated or deleted.
     * </pre>
     *
     * <code>bool system_generated = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The systemGenerated to set.
     * @return This builder for chaining.
     */
    public Builder setSystemGenerated(boolean value) {

      systemGenerated_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. If true, this annotation was generated by the Google Analytics
     * system. System-generated annotations cannot be updated or deleted.
     * </pre>
     *
     * <code>bool system_generated = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSystemGenerated() {
      bitField0_ = (bitField0_ & ~0x00000040);
      systemGenerated_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.analytics.admin.v1alpha.ReportingDataAnnotation)
  }

  // @@protoc_insertion_point(class_scope:google.analytics.admin.v1alpha.ReportingDataAnnotation)
  private static final com.google.analytics.admin.v1alpha.ReportingDataAnnotation DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.analytics.admin.v1alpha.ReportingDataAnnotation();
  }

  public static com.google.analytics.admin.v1alpha.ReportingDataAnnotation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReportingDataAnnotation> PARSER =
      new com.google.protobuf.AbstractParser<ReportingDataAnnotation>() {
        @java.lang.Override
        public ReportingDataAnnotation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ReportingDataAnnotation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReportingDataAnnotation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.analytics.admin.v1alpha.ReportingDataAnnotation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
