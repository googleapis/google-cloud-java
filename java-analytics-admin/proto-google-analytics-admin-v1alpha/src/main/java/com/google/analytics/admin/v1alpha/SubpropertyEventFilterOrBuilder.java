/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/admin/v1alpha/subproperty_event_filter.proto

// Protobuf Java Version: 3.25.5
package com.google.analytics.admin.v1alpha;

public interface SubpropertyEventFilterOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.analytics.admin.v1alpha.SubpropertyEventFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. Format:
   * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
   * Example: properties/1234/subpropertyEventFilters/5678
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Output only. Format:
   * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
   * Example: properties/1234/subpropertyEventFilters/5678
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Immutable. Resource name of the Subproperty that uses this filter.
   * </pre>
   *
   * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return Whether the applyToProperty field is set.
   */
  boolean hasApplyToProperty();
  /**
   *
   *
   * <pre>
   * Immutable. Resource name of the Subproperty that uses this filter.
   * </pre>
   *
   * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The applyToProperty.
   */
  java.lang.String getApplyToProperty();
  /**
   *
   *
   * <pre>
   * Immutable. Resource name of the Subproperty that uses this filter.
   * </pre>
   *
   * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for applyToProperty.
   */
  com.google.protobuf.ByteString getApplyToPropertyBytes();

  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  java.util.List<com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>
      getFilterClausesList();
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause getFilterClauses(int index);
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  int getFilterClausesCount();
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  java.util.List<? extends com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder>
      getFilterClausesOrBuilderList();
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder
      getFilterClausesOrBuilder(int index);
}
