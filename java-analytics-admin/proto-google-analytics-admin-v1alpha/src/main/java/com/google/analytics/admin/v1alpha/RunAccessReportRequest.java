/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/admin/v1alpha/analytics_admin.proto

// Protobuf Java Version: 3.25.5
package com.google.analytics.admin.v1alpha;

/**
 *
 *
 * <pre>
 * The request for a Data Access Record Report.
 * </pre>
 *
 * Protobuf type {@code google.analytics.admin.v1alpha.RunAccessReportRequest}
 */
public final class RunAccessReportRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.analytics.admin.v1alpha.RunAccessReportRequest)
    RunAccessReportRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use RunAccessReportRequest.newBuilder() to construct.
  private RunAccessReportRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private RunAccessReportRequest() {
    entity_ = "";
    dimensions_ = java.util.Collections.emptyList();
    metrics_ = java.util.Collections.emptyList();
    dateRanges_ = java.util.Collections.emptyList();
    timeZone_ = "";
    orderBys_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new RunAccessReportRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.analytics.admin.v1alpha.AnalyticsAdminProto
        .internal_static_google_analytics_admin_v1alpha_RunAccessReportRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.analytics.admin.v1alpha.AnalyticsAdminProto
        .internal_static_google_analytics_admin_v1alpha_RunAccessReportRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.analytics.admin.v1alpha.RunAccessReportRequest.class,
            com.google.analytics.admin.v1alpha.RunAccessReportRequest.Builder.class);
  }

  private int bitField0_;
  public static final int ENTITY_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object entity_ = "";
  /**
   *
   *
   * <pre>
   * The Data Access Report supports requesting at the property level or account
   * level. If requested at the account level, Data Access Reports include all
   * access for all properties under that account.
   *
   * To request at the property level, entity should be for example
   * 'properties/123' if "123" is your Google Analytics property ID. To request
   * at the account level, entity should be for example 'accounts/1234' if
   * "1234" is your Google Analytics Account ID.
   * </pre>
   *
   * <code>string entity = 1;</code>
   *
   * @return The entity.
   */
  @java.lang.Override
  public java.lang.String getEntity() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entity_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The Data Access Report supports requesting at the property level or account
   * level. If requested at the account level, Data Access Reports include all
   * access for all properties under that account.
   *
   * To request at the property level, entity should be for example
   * 'properties/123' if "123" is your Google Analytics property ID. To request
   * at the account level, entity should be for example 'accounts/1234' if
   * "1234" is your Google Analytics Account ID.
   * </pre>
   *
   * <code>string entity = 1;</code>
   *
   * @return The bytes for entity.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getEntityBytes() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      entity_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIMENSIONS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.analytics.admin.v1alpha.AccessDimension> dimensions_;
  /**
   *
   *
   * <pre>
   * The dimensions requested and displayed in the response. Requests are
   * allowed up to 9 dimensions.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.analytics.admin.v1alpha.AccessDimension> getDimensionsList() {
    return dimensions_;
  }
  /**
   *
   *
   * <pre>
   * The dimensions requested and displayed in the response. Requests are
   * allowed up to 9 dimensions.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder>
      getDimensionsOrBuilderList() {
    return dimensions_;
  }
  /**
   *
   *
   * <pre>
   * The dimensions requested and displayed in the response. Requests are
   * allowed up to 9 dimensions.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
   */
  @java.lang.Override
  public int getDimensionsCount() {
    return dimensions_.size();
  }
  /**
   *
   *
   * <pre>
   * The dimensions requested and displayed in the response. Requests are
   * allowed up to 9 dimensions.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessDimension getDimensions(int index) {
    return dimensions_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The dimensions requested and displayed in the response. Requests are
   * allowed up to 9 dimensions.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder getDimensionsOrBuilder(
      int index) {
    return dimensions_.get(index);
  }

  public static final int METRICS_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<com.google.analytics.admin.v1alpha.AccessMetric> metrics_;
  /**
   *
   *
   * <pre>
   * The metrics requested and displayed in the response. Requests are allowed
   * up to 10 metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.analytics.admin.v1alpha.AccessMetric> getMetricsList() {
    return metrics_;
  }
  /**
   *
   *
   * <pre>
   * The metrics requested and displayed in the response. Requests are allowed
   * up to 10 metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessMetricOrBuilder>
      getMetricsOrBuilderList() {
    return metrics_;
  }
  /**
   *
   *
   * <pre>
   * The metrics requested and displayed in the response. Requests are allowed
   * up to 10 metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
   */
  @java.lang.Override
  public int getMetricsCount() {
    return metrics_.size();
  }
  /**
   *
   *
   * <pre>
   * The metrics requested and displayed in the response. Requests are allowed
   * up to 10 metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessMetric getMetrics(int index) {
    return metrics_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The metrics requested and displayed in the response. Requests are allowed
   * up to 10 metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessMetricOrBuilder getMetricsOrBuilder(int index) {
    return metrics_.get(index);
  }

  public static final int DATE_RANGES_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private java.util.List<com.google.analytics.admin.v1alpha.AccessDateRange> dateRanges_;
  /**
   *
   *
   * <pre>
   * Date ranges of access records to read. If multiple date ranges are
   * requested, each response row will contain a zero based date range index. If
   * two date ranges overlap, the access records for the overlapping days is
   * included in the response rows for both date ranges. Requests are allowed up
   * to 2 date ranges.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.analytics.admin.v1alpha.AccessDateRange> getDateRangesList() {
    return dateRanges_;
  }
  /**
   *
   *
   * <pre>
   * Date ranges of access records to read. If multiple date ranges are
   * requested, each response row will contain a zero based date range index. If
   * two date ranges overlap, the access records for the overlapping days is
   * included in the response rows for both date ranges. Requests are allowed up
   * to 2 date ranges.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder>
      getDateRangesOrBuilderList() {
    return dateRanges_;
  }
  /**
   *
   *
   * <pre>
   * Date ranges of access records to read. If multiple date ranges are
   * requested, each response row will contain a zero based date range index. If
   * two date ranges overlap, the access records for the overlapping days is
   * included in the response rows for both date ranges. Requests are allowed up
   * to 2 date ranges.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
   */
  @java.lang.Override
  public int getDateRangesCount() {
    return dateRanges_.size();
  }
  /**
   *
   *
   * <pre>
   * Date ranges of access records to read. If multiple date ranges are
   * requested, each response row will contain a zero based date range index. If
   * two date ranges overlap, the access records for the overlapping days is
   * included in the response rows for both date ranges. Requests are allowed up
   * to 2 date ranges.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessDateRange getDateRanges(int index) {
    return dateRanges_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Date ranges of access records to read. If multiple date ranges are
   * requested, each response row will contain a zero based date range index. If
   * two date ranges overlap, the access records for the overlapping days is
   * included in the response rows for both date ranges. Requests are allowed up
   * to 2 date ranges.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder getDateRangesOrBuilder(
      int index) {
    return dateRanges_.get(index);
  }

  public static final int DIMENSION_FILTER_FIELD_NUMBER = 5;
  private com.google.analytics.admin.v1alpha.AccessFilterExpression dimensionFilter_;
  /**
   *
   *
   * <pre>
   * Dimension filters let you restrict report response to specific
   * dimension values which match the filter. For example, filtering on access
   * records of a single user. To learn more, see [Fundamentals of Dimension
   * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
   * for examples. Metrics cannot be used in this filter.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
   *
   * @return Whether the dimensionFilter field is set.
   */
  @java.lang.Override
  public boolean hasDimensionFilter() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Dimension filters let you restrict report response to specific
   * dimension values which match the filter. For example, filtering on access
   * records of a single user. To learn more, see [Fundamentals of Dimension
   * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
   * for examples. Metrics cannot be used in this filter.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
   *
   * @return The dimensionFilter.
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessFilterExpression getDimensionFilter() {
    return dimensionFilter_ == null
        ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
        : dimensionFilter_;
  }
  /**
   *
   *
   * <pre>
   * Dimension filters let you restrict report response to specific
   * dimension values which match the filter. For example, filtering on access
   * records of a single user. To learn more, see [Fundamentals of Dimension
   * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
   * for examples. Metrics cannot be used in this filter.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder
      getDimensionFilterOrBuilder() {
    return dimensionFilter_ == null
        ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
        : dimensionFilter_;
  }

  public static final int METRIC_FILTER_FIELD_NUMBER = 6;
  private com.google.analytics.admin.v1alpha.AccessFilterExpression metricFilter_;
  /**
   *
   *
   * <pre>
   * Metric filters allow you to restrict report response to specific metric
   * values which match the filter. Metric filters are applied after aggregating
   * the report's rows, similar to SQL having-clause. Dimensions cannot be used
   * in this filter.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
   *
   * @return Whether the metricFilter field is set.
   */
  @java.lang.Override
  public boolean hasMetricFilter() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * Metric filters allow you to restrict report response to specific metric
   * values which match the filter. Metric filters are applied after aggregating
   * the report's rows, similar to SQL having-clause. Dimensions cannot be used
   * in this filter.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
   *
   * @return The metricFilter.
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessFilterExpression getMetricFilter() {
    return metricFilter_ == null
        ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
        : metricFilter_;
  }
  /**
   *
   *
   * <pre>
   * Metric filters allow you to restrict report response to specific metric
   * values which match the filter. Metric filters are applied after aggregating
   * the report's rows, similar to SQL having-clause. Dimensions cannot be used
   * in this filter.
   * </pre>
   *
   * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder
      getMetricFilterOrBuilder() {
    return metricFilter_ == null
        ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
        : metricFilter_;
  }

  public static final int OFFSET_FIELD_NUMBER = 7;
  private long offset_ = 0L;
  /**
   *
   *
   * <pre>
   * The row count of the start row. The first row is counted as row 0. If
   * offset is unspecified, it is treated as 0. If offset is zero, then this
   * method will return the first page of results with `limit` entries.
   *
   * To learn more about this pagination parameter, see
   * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
   * </pre>
   *
   * <code>int64 offset = 7;</code>
   *
   * @return The offset.
   */
  @java.lang.Override
  public long getOffset() {
    return offset_;
  }

  public static final int LIMIT_FIELD_NUMBER = 8;
  private long limit_ = 0L;
  /**
   *
   *
   * <pre>
   * The number of rows to return. If unspecified, 10,000 rows are returned. The
   * API returns a maximum of 100,000 rows per request, no matter how many you
   * ask for. `limit` must be positive.
   *
   * The API may return fewer rows than the requested `limit`, if there aren't
   * as many remaining rows as the `limit`. For instance, there are fewer than
   * 300 possible values for the dimension `country`, so when reporting on only
   * `country`, you can't get more than 300 rows, even if you set `limit` to a
   * higher value.
   *
   * To learn more about this pagination parameter, see
   * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
   * </pre>
   *
   * <code>int64 limit = 8;</code>
   *
   * @return The limit.
   */
  @java.lang.Override
  public long getLimit() {
    return limit_;
  }

  public static final int TIME_ZONE_FIELD_NUMBER = 9;

  @SuppressWarnings("serial")
  private volatile java.lang.Object timeZone_ = "";
  /**
   *
   *
   * <pre>
   * This request's time zone if specified. If unspecified, the property's time
   * zone is used. The request's time zone is used to interpret the start &amp; end
   * dates of the report.
   *
   * Formatted as strings from the IANA Time Zone database
   * (https://www.iana.org/time-zones); for example "America/New_York" or
   * "Asia/Tokyo".
   * </pre>
   *
   * <code>string time_zone = 9;</code>
   *
   * @return The timeZone.
   */
  @java.lang.Override
  public java.lang.String getTimeZone() {
    java.lang.Object ref = timeZone_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      timeZone_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * This request's time zone if specified. If unspecified, the property's time
   * zone is used. The request's time zone is used to interpret the start &amp; end
   * dates of the report.
   *
   * Formatted as strings from the IANA Time Zone database
   * (https://www.iana.org/time-zones); for example "America/New_York" or
   * "Asia/Tokyo".
   * </pre>
   *
   * <code>string time_zone = 9;</code>
   *
   * @return The bytes for timeZone.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTimeZoneBytes() {
    java.lang.Object ref = timeZone_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      timeZone_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORDER_BYS_FIELD_NUMBER = 10;

  @SuppressWarnings("serial")
  private java.util.List<com.google.analytics.admin.v1alpha.AccessOrderBy> orderBys_;
  /**
   *
   *
   * <pre>
   * Specifies how rows are ordered in the response.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.analytics.admin.v1alpha.AccessOrderBy> getOrderBysList() {
    return orderBys_;
  }
  /**
   *
   *
   * <pre>
   * Specifies how rows are ordered in the response.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder>
      getOrderBysOrBuilderList() {
    return orderBys_;
  }
  /**
   *
   *
   * <pre>
   * Specifies how rows are ordered in the response.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
   */
  @java.lang.Override
  public int getOrderBysCount() {
    return orderBys_.size();
  }
  /**
   *
   *
   * <pre>
   * Specifies how rows are ordered in the response.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessOrderBy getOrderBys(int index) {
    return orderBys_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Specifies how rows are ordered in the response.
   * </pre>
   *
   * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder getOrderBysOrBuilder(int index) {
    return orderBys_.get(index);
  }

  public static final int RETURN_ENTITY_QUOTA_FIELD_NUMBER = 11;
  private boolean returnEntityQuota_ = false;
  /**
   *
   *
   * <pre>
   * Toggles whether to return the current state of this Analytics Property's
   * quota. Quota is returned in [AccessQuota](#AccessQuota). For account-level
   * requests, this field must be false.
   * </pre>
   *
   * <code>bool return_entity_quota = 11;</code>
   *
   * @return The returnEntityQuota.
   */
  @java.lang.Override
  public boolean getReturnEntityQuota() {
    return returnEntityQuota_;
  }

  public static final int INCLUDE_ALL_USERS_FIELD_NUMBER = 12;
  private boolean includeAllUsers_ = false;
  /**
   *
   *
   * <pre>
   * Optional. Determines whether to include users who have never made an API
   * call in the response. If true, all users with access to the specified
   * property or account are included in the response, regardless of whether
   * they have made an API call or not. If false, only the users who have made
   * an API call will be included.
   * </pre>
   *
   * <code>bool include_all_users = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The includeAllUsers.
   */
  @java.lang.Override
  public boolean getIncludeAllUsers() {
    return includeAllUsers_;
  }

  public static final int EXPAND_GROUPS_FIELD_NUMBER = 13;
  private boolean expandGroups_ = false;
  /**
   *
   *
   * <pre>
   * Optional. Decides whether to return the users within user groups. This
   * field works only when include_all_users is set to true. If true, it will
   * return all users with access to the specified property or account.
   * If false, only the users with direct access will be returned.
   * </pre>
   *
   * <code>bool expand_groups = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The expandGroups.
   */
  @java.lang.Override
  public boolean getExpandGroups() {
    return expandGroups_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, entity_);
    }
    for (int i = 0; i < dimensions_.size(); i++) {
      output.writeMessage(2, dimensions_.get(i));
    }
    for (int i = 0; i < metrics_.size(); i++) {
      output.writeMessage(3, metrics_.get(i));
    }
    for (int i = 0; i < dateRanges_.size(); i++) {
      output.writeMessage(4, dateRanges_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(5, getDimensionFilter());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(6, getMetricFilter());
    }
    if (offset_ != 0L) {
      output.writeInt64(7, offset_);
    }
    if (limit_ != 0L) {
      output.writeInt64(8, limit_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timeZone_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, timeZone_);
    }
    for (int i = 0; i < orderBys_.size(); i++) {
      output.writeMessage(10, orderBys_.get(i));
    }
    if (returnEntityQuota_ != false) {
      output.writeBool(11, returnEntityQuota_);
    }
    if (includeAllUsers_ != false) {
      output.writeBool(12, includeAllUsers_);
    }
    if (expandGroups_ != false) {
      output.writeBool(13, expandGroups_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, entity_);
    }
    for (int i = 0; i < dimensions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, dimensions_.get(i));
    }
    for (int i = 0; i < metrics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, metrics_.get(i));
    }
    for (int i = 0; i < dateRanges_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, dateRanges_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getDimensionFilter());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getMetricFilter());
    }
    if (offset_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(7, offset_);
    }
    if (limit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(8, limit_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timeZone_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, timeZone_);
    }
    for (int i = 0; i < orderBys_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, orderBys_.get(i));
    }
    if (returnEntityQuota_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(11, returnEntityQuota_);
    }
    if (includeAllUsers_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(12, includeAllUsers_);
    }
    if (expandGroups_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(13, expandGroups_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.analytics.admin.v1alpha.RunAccessReportRequest)) {
      return super.equals(obj);
    }
    com.google.analytics.admin.v1alpha.RunAccessReportRequest other =
        (com.google.analytics.admin.v1alpha.RunAccessReportRequest) obj;

    if (!getEntity().equals(other.getEntity())) return false;
    if (!getDimensionsList().equals(other.getDimensionsList())) return false;
    if (!getMetricsList().equals(other.getMetricsList())) return false;
    if (!getDateRangesList().equals(other.getDateRangesList())) return false;
    if (hasDimensionFilter() != other.hasDimensionFilter()) return false;
    if (hasDimensionFilter()) {
      if (!getDimensionFilter().equals(other.getDimensionFilter())) return false;
    }
    if (hasMetricFilter() != other.hasMetricFilter()) return false;
    if (hasMetricFilter()) {
      if (!getMetricFilter().equals(other.getMetricFilter())) return false;
    }
    if (getOffset() != other.getOffset()) return false;
    if (getLimit() != other.getLimit()) return false;
    if (!getTimeZone().equals(other.getTimeZone())) return false;
    if (!getOrderBysList().equals(other.getOrderBysList())) return false;
    if (getReturnEntityQuota() != other.getReturnEntityQuota()) return false;
    if (getIncludeAllUsers() != other.getIncludeAllUsers()) return false;
    if (getExpandGroups() != other.getExpandGroups()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENTITY_FIELD_NUMBER;
    hash = (53 * hash) + getEntity().hashCode();
    if (getDimensionsCount() > 0) {
      hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getDimensionsList().hashCode();
    }
    if (getMetricsCount() > 0) {
      hash = (37 * hash) + METRICS_FIELD_NUMBER;
      hash = (53 * hash) + getMetricsList().hashCode();
    }
    if (getDateRangesCount() > 0) {
      hash = (37 * hash) + DATE_RANGES_FIELD_NUMBER;
      hash = (53 * hash) + getDateRangesList().hashCode();
    }
    if (hasDimensionFilter()) {
      hash = (37 * hash) + DIMENSION_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getDimensionFilter().hashCode();
    }
    if (hasMetricFilter()) {
      hash = (37 * hash) + METRIC_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getMetricFilter().hashCode();
    }
    hash = (37 * hash) + OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getOffset());
    hash = (37 * hash) + LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getLimit());
    hash = (37 * hash) + TIME_ZONE_FIELD_NUMBER;
    hash = (53 * hash) + getTimeZone().hashCode();
    if (getOrderBysCount() > 0) {
      hash = (37 * hash) + ORDER_BYS_FIELD_NUMBER;
      hash = (53 * hash) + getOrderBysList().hashCode();
    }
    hash = (37 * hash) + RETURN_ENTITY_QUOTA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getReturnEntityQuota());
    hash = (37 * hash) + INCLUDE_ALL_USERS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIncludeAllUsers());
    hash = (37 * hash) + EXPAND_GROUPS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getExpandGroups());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.analytics.admin.v1alpha.RunAccessReportRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The request for a Data Access Record Report.
   * </pre>
   *
   * Protobuf type {@code google.analytics.admin.v1alpha.RunAccessReportRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.analytics.admin.v1alpha.RunAccessReportRequest)
      com.google.analytics.admin.v1alpha.RunAccessReportRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.analytics.admin.v1alpha.AnalyticsAdminProto
          .internal_static_google_analytics_admin_v1alpha_RunAccessReportRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.admin.v1alpha.AnalyticsAdminProto
          .internal_static_google_analytics_admin_v1alpha_RunAccessReportRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.admin.v1alpha.RunAccessReportRequest.class,
              com.google.analytics.admin.v1alpha.RunAccessReportRequest.Builder.class);
    }

    // Construct using com.google.analytics.admin.v1alpha.RunAccessReportRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getDimensionsFieldBuilder();
        getMetricsFieldBuilder();
        getDateRangesFieldBuilder();
        getDimensionFilterFieldBuilder();
        getMetricFilterFieldBuilder();
        getOrderBysFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      entity_ = "";
      if (dimensionsBuilder_ == null) {
        dimensions_ = java.util.Collections.emptyList();
      } else {
        dimensions_ = null;
        dimensionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (metricsBuilder_ == null) {
        metrics_ = java.util.Collections.emptyList();
      } else {
        metrics_ = null;
        metricsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (dateRangesBuilder_ == null) {
        dateRanges_ = java.util.Collections.emptyList();
      } else {
        dateRanges_ = null;
        dateRangesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      dimensionFilter_ = null;
      if (dimensionFilterBuilder_ != null) {
        dimensionFilterBuilder_.dispose();
        dimensionFilterBuilder_ = null;
      }
      metricFilter_ = null;
      if (metricFilterBuilder_ != null) {
        metricFilterBuilder_.dispose();
        metricFilterBuilder_ = null;
      }
      offset_ = 0L;
      limit_ = 0L;
      timeZone_ = "";
      if (orderBysBuilder_ == null) {
        orderBys_ = java.util.Collections.emptyList();
      } else {
        orderBys_ = null;
        orderBysBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      returnEntityQuota_ = false;
      includeAllUsers_ = false;
      expandGroups_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.analytics.admin.v1alpha.AnalyticsAdminProto
          .internal_static_google_analytics_admin_v1alpha_RunAccessReportRequest_descriptor;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.RunAccessReportRequest getDefaultInstanceForType() {
      return com.google.analytics.admin.v1alpha.RunAccessReportRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.RunAccessReportRequest build() {
      com.google.analytics.admin.v1alpha.RunAccessReportRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.RunAccessReportRequest buildPartial() {
      com.google.analytics.admin.v1alpha.RunAccessReportRequest result =
          new com.google.analytics.admin.v1alpha.RunAccessReportRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.analytics.admin.v1alpha.RunAccessReportRequest result) {
      if (dimensionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          dimensions_ = java.util.Collections.unmodifiableList(dimensions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dimensions_ = dimensions_;
      } else {
        result.dimensions_ = dimensionsBuilder_.build();
      }
      if (metricsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          metrics_ = java.util.Collections.unmodifiableList(metrics_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.metrics_ = metrics_;
      } else {
        result.metrics_ = metricsBuilder_.build();
      }
      if (dateRangesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          dateRanges_ = java.util.Collections.unmodifiableList(dateRanges_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.dateRanges_ = dateRanges_;
      } else {
        result.dateRanges_ = dateRangesBuilder_.build();
      }
      if (orderBysBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          orderBys_ = java.util.Collections.unmodifiableList(orderBys_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.orderBys_ = orderBys_;
      } else {
        result.orderBys_ = orderBysBuilder_.build();
      }
    }

    private void buildPartial0(com.google.analytics.admin.v1alpha.RunAccessReportRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.entity_ = entity_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.dimensionFilter_ =
            dimensionFilterBuilder_ == null ? dimensionFilter_ : dimensionFilterBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.metricFilter_ =
            metricFilterBuilder_ == null ? metricFilter_ : metricFilterBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.offset_ = offset_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.limit_ = limit_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.timeZone_ = timeZone_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.returnEntityQuota_ = returnEntityQuota_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.includeAllUsers_ = includeAllUsers_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.expandGroups_ = expandGroups_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.analytics.admin.v1alpha.RunAccessReportRequest) {
        return mergeFrom((com.google.analytics.admin.v1alpha.RunAccessReportRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.analytics.admin.v1alpha.RunAccessReportRequest other) {
      if (other == com.google.analytics.admin.v1alpha.RunAccessReportRequest.getDefaultInstance())
        return this;
      if (!other.getEntity().isEmpty()) {
        entity_ = other.entity_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (dimensionsBuilder_ == null) {
        if (!other.dimensions_.isEmpty()) {
          if (dimensions_.isEmpty()) {
            dimensions_ = other.dimensions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDimensionsIsMutable();
            dimensions_.addAll(other.dimensions_);
          }
          onChanged();
        }
      } else {
        if (!other.dimensions_.isEmpty()) {
          if (dimensionsBuilder_.isEmpty()) {
            dimensionsBuilder_.dispose();
            dimensionsBuilder_ = null;
            dimensions_ = other.dimensions_;
            bitField0_ = (bitField0_ & ~0x00000002);
            dimensionsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getDimensionsFieldBuilder()
                    : null;
          } else {
            dimensionsBuilder_.addAllMessages(other.dimensions_);
          }
        }
      }
      if (metricsBuilder_ == null) {
        if (!other.metrics_.isEmpty()) {
          if (metrics_.isEmpty()) {
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMetricsIsMutable();
            metrics_.addAll(other.metrics_);
          }
          onChanged();
        }
      } else {
        if (!other.metrics_.isEmpty()) {
          if (metricsBuilder_.isEmpty()) {
            metricsBuilder_.dispose();
            metricsBuilder_ = null;
            metrics_ = other.metrics_;
            bitField0_ = (bitField0_ & ~0x00000004);
            metricsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getMetricsFieldBuilder()
                    : null;
          } else {
            metricsBuilder_.addAllMessages(other.metrics_);
          }
        }
      }
      if (dateRangesBuilder_ == null) {
        if (!other.dateRanges_.isEmpty()) {
          if (dateRanges_.isEmpty()) {
            dateRanges_ = other.dateRanges_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDateRangesIsMutable();
            dateRanges_.addAll(other.dateRanges_);
          }
          onChanged();
        }
      } else {
        if (!other.dateRanges_.isEmpty()) {
          if (dateRangesBuilder_.isEmpty()) {
            dateRangesBuilder_.dispose();
            dateRangesBuilder_ = null;
            dateRanges_ = other.dateRanges_;
            bitField0_ = (bitField0_ & ~0x00000008);
            dateRangesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getDateRangesFieldBuilder()
                    : null;
          } else {
            dateRangesBuilder_.addAllMessages(other.dateRanges_);
          }
        }
      }
      if (other.hasDimensionFilter()) {
        mergeDimensionFilter(other.getDimensionFilter());
      }
      if (other.hasMetricFilter()) {
        mergeMetricFilter(other.getMetricFilter());
      }
      if (other.getOffset() != 0L) {
        setOffset(other.getOffset());
      }
      if (other.getLimit() != 0L) {
        setLimit(other.getLimit());
      }
      if (!other.getTimeZone().isEmpty()) {
        timeZone_ = other.timeZone_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (orderBysBuilder_ == null) {
        if (!other.orderBys_.isEmpty()) {
          if (orderBys_.isEmpty()) {
            orderBys_ = other.orderBys_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureOrderBysIsMutable();
            orderBys_.addAll(other.orderBys_);
          }
          onChanged();
        }
      } else {
        if (!other.orderBys_.isEmpty()) {
          if (orderBysBuilder_.isEmpty()) {
            orderBysBuilder_.dispose();
            orderBysBuilder_ = null;
            orderBys_ = other.orderBys_;
            bitField0_ = (bitField0_ & ~0x00000200);
            orderBysBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getOrderBysFieldBuilder()
                    : null;
          } else {
            orderBysBuilder_.addAllMessages(other.orderBys_);
          }
        }
      }
      if (other.getReturnEntityQuota() != false) {
        setReturnEntityQuota(other.getReturnEntityQuota());
      }
      if (other.getIncludeAllUsers() != false) {
        setIncludeAllUsers(other.getIncludeAllUsers());
      }
      if (other.getExpandGroups() != false) {
        setExpandGroups(other.getExpandGroups());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                entity_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                com.google.analytics.admin.v1alpha.AccessDimension m =
                    input.readMessage(
                        com.google.analytics.admin.v1alpha.AccessDimension.parser(),
                        extensionRegistry);
                if (dimensionsBuilder_ == null) {
                  ensureDimensionsIsMutable();
                  dimensions_.add(m);
                } else {
                  dimensionsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            case 26:
              {
                com.google.analytics.admin.v1alpha.AccessMetric m =
                    input.readMessage(
                        com.google.analytics.admin.v1alpha.AccessMetric.parser(),
                        extensionRegistry);
                if (metricsBuilder_ == null) {
                  ensureMetricsIsMutable();
                  metrics_.add(m);
                } else {
                  metricsBuilder_.addMessage(m);
                }
                break;
              } // case 26
            case 34:
              {
                com.google.analytics.admin.v1alpha.AccessDateRange m =
                    input.readMessage(
                        com.google.analytics.admin.v1alpha.AccessDateRange.parser(),
                        extensionRegistry);
                if (dateRangesBuilder_ == null) {
                  ensureDateRangesIsMutable();
                  dateRanges_.add(m);
                } else {
                  dateRangesBuilder_.addMessage(m);
                }
                break;
              } // case 34
            case 42:
              {
                input.readMessage(getDimensionFilterFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 50:
              {
                input.readMessage(getMetricFilterFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
            case 56:
              {
                offset_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            case 64:
              {
                limit_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
            case 74:
              {
                timeZone_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 74
            case 82:
              {
                com.google.analytics.admin.v1alpha.AccessOrderBy m =
                    input.readMessage(
                        com.google.analytics.admin.v1alpha.AccessOrderBy.parser(),
                        extensionRegistry);
                if (orderBysBuilder_ == null) {
                  ensureOrderBysIsMutable();
                  orderBys_.add(m);
                } else {
                  orderBysBuilder_.addMessage(m);
                }
                break;
              } // case 82
            case 88:
              {
                returnEntityQuota_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
            case 96:
              {
                includeAllUsers_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
            case 104:
              {
                expandGroups_ = input.readBool();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object entity_ = "";
    /**
     *
     *
     * <pre>
     * The Data Access Report supports requesting at the property level or account
     * level. If requested at the account level, Data Access Reports include all
     * access for all properties under that account.
     *
     * To request at the property level, entity should be for example
     * 'properties/123' if "123" is your Google Analytics property ID. To request
     * at the account level, entity should be for example 'accounts/1234' if
     * "1234" is your Google Analytics Account ID.
     * </pre>
     *
     * <code>string entity = 1;</code>
     *
     * @return The entity.
     */
    public java.lang.String getEntity() {
      java.lang.Object ref = entity_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entity_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The Data Access Report supports requesting at the property level or account
     * level. If requested at the account level, Data Access Reports include all
     * access for all properties under that account.
     *
     * To request at the property level, entity should be for example
     * 'properties/123' if "123" is your Google Analytics property ID. To request
     * at the account level, entity should be for example 'accounts/1234' if
     * "1234" is your Google Analytics Account ID.
     * </pre>
     *
     * <code>string entity = 1;</code>
     *
     * @return The bytes for entity.
     */
    public com.google.protobuf.ByteString getEntityBytes() {
      java.lang.Object ref = entity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        entity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The Data Access Report supports requesting at the property level or account
     * level. If requested at the account level, Data Access Reports include all
     * access for all properties under that account.
     *
     * To request at the property level, entity should be for example
     * 'properties/123' if "123" is your Google Analytics property ID. To request
     * at the account level, entity should be for example 'accounts/1234' if
     * "1234" is your Google Analytics Account ID.
     * </pre>
     *
     * <code>string entity = 1;</code>
     *
     * @param value The entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntity(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      entity_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Data Access Report supports requesting at the property level or account
     * level. If requested at the account level, Data Access Reports include all
     * access for all properties under that account.
     *
     * To request at the property level, entity should be for example
     * 'properties/123' if "123" is your Google Analytics property ID. To request
     * at the account level, entity should be for example 'accounts/1234' if
     * "1234" is your Google Analytics Account ID.
     * </pre>
     *
     * <code>string entity = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEntity() {
      entity_ = getDefaultInstance().getEntity();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Data Access Report supports requesting at the property level or account
     * level. If requested at the account level, Data Access Reports include all
     * access for all properties under that account.
     *
     * To request at the property level, entity should be for example
     * 'properties/123' if "123" is your Google Analytics property ID. To request
     * at the account level, entity should be for example 'accounts/1234' if
     * "1234" is your Google Analytics Account ID.
     * </pre>
     *
     * <code>string entity = 1;</code>
     *
     * @param value The bytes for entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntityBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      entity_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<com.google.analytics.admin.v1alpha.AccessDimension> dimensions_ =
        java.util.Collections.emptyList();

    private void ensureDimensionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        dimensions_ =
            new java.util.ArrayList<com.google.analytics.admin.v1alpha.AccessDimension>(
                dimensions_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessDimension,
            com.google.analytics.admin.v1alpha.AccessDimension.Builder,
            com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder>
        dimensionsBuilder_;

    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessDimension> getDimensionsList() {
      if (dimensionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dimensions_);
      } else {
        return dimensionsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public int getDimensionsCount() {
      if (dimensionsBuilder_ == null) {
        return dimensions_.size();
      } else {
        return dimensionsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDimension getDimensions(int index) {
      if (dimensionsBuilder_ == null) {
        return dimensions_.get(index);
      } else {
        return dimensionsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder setDimensions(
        int index, com.google.analytics.admin.v1alpha.AccessDimension value) {
      if (dimensionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDimensionsIsMutable();
        dimensions_.set(index, value);
        onChanged();
      } else {
        dimensionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder setDimensions(
        int index, com.google.analytics.admin.v1alpha.AccessDimension.Builder builderForValue) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.set(index, builderForValue.build());
        onChanged();
      } else {
        dimensionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder addDimensions(com.google.analytics.admin.v1alpha.AccessDimension value) {
      if (dimensionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDimensionsIsMutable();
        dimensions_.add(value);
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder addDimensions(
        int index, com.google.analytics.admin.v1alpha.AccessDimension value) {
      if (dimensionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDimensionsIsMutable();
        dimensions_.add(index, value);
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder addDimensions(
        com.google.analytics.admin.v1alpha.AccessDimension.Builder builderForValue) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.add(builderForValue.build());
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder addDimensions(
        int index, com.google.analytics.admin.v1alpha.AccessDimension.Builder builderForValue) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.add(index, builderForValue.build());
        onChanged();
      } else {
        dimensionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder addAllDimensions(
        java.lang.Iterable<? extends com.google.analytics.admin.v1alpha.AccessDimension> values) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, dimensions_);
        onChanged();
      } else {
        dimensionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder clearDimensions() {
      if (dimensionsBuilder_ == null) {
        dimensions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        dimensionsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public Builder removeDimensions(int index) {
      if (dimensionsBuilder_ == null) {
        ensureDimensionsIsMutable();
        dimensions_.remove(index);
        onChanged();
      } else {
        dimensionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDimension.Builder getDimensionsBuilder(
        int index) {
      return getDimensionsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder getDimensionsOrBuilder(
        int index) {
      if (dimensionsBuilder_ == null) {
        return dimensions_.get(index);
      } else {
        return dimensionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder>
        getDimensionsOrBuilderList() {
      if (dimensionsBuilder_ != null) {
        return dimensionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dimensions_);
      }
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDimension.Builder addDimensionsBuilder() {
      return getDimensionsFieldBuilder()
          .addBuilder(com.google.analytics.admin.v1alpha.AccessDimension.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDimension.Builder addDimensionsBuilder(
        int index) {
      return getDimensionsFieldBuilder()
          .addBuilder(
              index, com.google.analytics.admin.v1alpha.AccessDimension.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The dimensions requested and displayed in the response. Requests are
     * allowed up to 9 dimensions.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDimension dimensions = 2;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessDimension.Builder>
        getDimensionsBuilderList() {
      return getDimensionsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessDimension,
            com.google.analytics.admin.v1alpha.AccessDimension.Builder,
            com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder>
        getDimensionsFieldBuilder() {
      if (dimensionsBuilder_ == null) {
        dimensionsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.analytics.admin.v1alpha.AccessDimension,
                com.google.analytics.admin.v1alpha.AccessDimension.Builder,
                com.google.analytics.admin.v1alpha.AccessDimensionOrBuilder>(
                dimensions_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        dimensions_ = null;
      }
      return dimensionsBuilder_;
    }

    private java.util.List<com.google.analytics.admin.v1alpha.AccessMetric> metrics_ =
        java.util.Collections.emptyList();

    private void ensureMetricsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        metrics_ =
            new java.util.ArrayList<com.google.analytics.admin.v1alpha.AccessMetric>(metrics_);
        bitField0_ |= 0x00000004;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessMetric,
            com.google.analytics.admin.v1alpha.AccessMetric.Builder,
            com.google.analytics.admin.v1alpha.AccessMetricOrBuilder>
        metricsBuilder_;

    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessMetric> getMetricsList() {
      if (metricsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(metrics_);
      } else {
        return metricsBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public int getMetricsCount() {
      if (metricsBuilder_ == null) {
        return metrics_.size();
      } else {
        return metricsBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessMetric getMetrics(int index) {
      if (metricsBuilder_ == null) {
        return metrics_.get(index);
      } else {
        return metricsBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder setMetrics(int index, com.google.analytics.admin.v1alpha.AccessMetric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.set(index, value);
        onChanged();
      } else {
        metricsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder setMetrics(
        int index, com.google.analytics.admin.v1alpha.AccessMetric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.set(index, builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder addMetrics(com.google.analytics.admin.v1alpha.AccessMetric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(value);
        onChanged();
      } else {
        metricsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder addMetrics(int index, com.google.analytics.admin.v1alpha.AccessMetric value) {
      if (metricsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricsIsMutable();
        metrics_.add(index, value);
        onChanged();
      } else {
        metricsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder addMetrics(
        com.google.analytics.admin.v1alpha.AccessMetric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.add(builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder addMetrics(
        int index, com.google.analytics.admin.v1alpha.AccessMetric.Builder builderForValue) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.add(index, builderForValue.build());
        onChanged();
      } else {
        metricsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder addAllMetrics(
        java.lang.Iterable<? extends com.google.analytics.admin.v1alpha.AccessMetric> values) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, metrics_);
        onChanged();
      } else {
        metricsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder clearMetrics() {
      if (metricsBuilder_ == null) {
        metrics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        metricsBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public Builder removeMetrics(int index) {
      if (metricsBuilder_ == null) {
        ensureMetricsIsMutable();
        metrics_.remove(index);
        onChanged();
      } else {
        metricsBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessMetric.Builder getMetricsBuilder(int index) {
      return getMetricsFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessMetricOrBuilder getMetricsOrBuilder(int index) {
      if (metricsBuilder_ == null) {
        return metrics_.get(index);
      } else {
        return metricsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessMetricOrBuilder>
        getMetricsOrBuilderList() {
      if (metricsBuilder_ != null) {
        return metricsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(metrics_);
      }
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessMetric.Builder addMetricsBuilder() {
      return getMetricsFieldBuilder()
          .addBuilder(com.google.analytics.admin.v1alpha.AccessMetric.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessMetric.Builder addMetricsBuilder(int index) {
      return getMetricsFieldBuilder()
          .addBuilder(index, com.google.analytics.admin.v1alpha.AccessMetric.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The metrics requested and displayed in the response. Requests are allowed
     * up to 10 metrics.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessMetric metrics = 3;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessMetric.Builder>
        getMetricsBuilderList() {
      return getMetricsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessMetric,
            com.google.analytics.admin.v1alpha.AccessMetric.Builder,
            com.google.analytics.admin.v1alpha.AccessMetricOrBuilder>
        getMetricsFieldBuilder() {
      if (metricsBuilder_ == null) {
        metricsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.analytics.admin.v1alpha.AccessMetric,
                com.google.analytics.admin.v1alpha.AccessMetric.Builder,
                com.google.analytics.admin.v1alpha.AccessMetricOrBuilder>(
                metrics_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
        metrics_ = null;
      }
      return metricsBuilder_;
    }

    private java.util.List<com.google.analytics.admin.v1alpha.AccessDateRange> dateRanges_ =
        java.util.Collections.emptyList();

    private void ensureDateRangesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        dateRanges_ =
            new java.util.ArrayList<com.google.analytics.admin.v1alpha.AccessDateRange>(
                dateRanges_);
        bitField0_ |= 0x00000008;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessDateRange,
            com.google.analytics.admin.v1alpha.AccessDateRange.Builder,
            com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder>
        dateRangesBuilder_;

    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessDateRange> getDateRangesList() {
      if (dateRangesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dateRanges_);
      } else {
        return dateRangesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public int getDateRangesCount() {
      if (dateRangesBuilder_ == null) {
        return dateRanges_.size();
      } else {
        return dateRangesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDateRange getDateRanges(int index) {
      if (dateRangesBuilder_ == null) {
        return dateRanges_.get(index);
      } else {
        return dateRangesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder setDateRanges(
        int index, com.google.analytics.admin.v1alpha.AccessDateRange value) {
      if (dateRangesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDateRangesIsMutable();
        dateRanges_.set(index, value);
        onChanged();
      } else {
        dateRangesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder setDateRanges(
        int index, com.google.analytics.admin.v1alpha.AccessDateRange.Builder builderForValue) {
      if (dateRangesBuilder_ == null) {
        ensureDateRangesIsMutable();
        dateRanges_.set(index, builderForValue.build());
        onChanged();
      } else {
        dateRangesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder addDateRanges(com.google.analytics.admin.v1alpha.AccessDateRange value) {
      if (dateRangesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDateRangesIsMutable();
        dateRanges_.add(value);
        onChanged();
      } else {
        dateRangesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder addDateRanges(
        int index, com.google.analytics.admin.v1alpha.AccessDateRange value) {
      if (dateRangesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDateRangesIsMutable();
        dateRanges_.add(index, value);
        onChanged();
      } else {
        dateRangesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder addDateRanges(
        com.google.analytics.admin.v1alpha.AccessDateRange.Builder builderForValue) {
      if (dateRangesBuilder_ == null) {
        ensureDateRangesIsMutable();
        dateRanges_.add(builderForValue.build());
        onChanged();
      } else {
        dateRangesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder addDateRanges(
        int index, com.google.analytics.admin.v1alpha.AccessDateRange.Builder builderForValue) {
      if (dateRangesBuilder_ == null) {
        ensureDateRangesIsMutable();
        dateRanges_.add(index, builderForValue.build());
        onChanged();
      } else {
        dateRangesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder addAllDateRanges(
        java.lang.Iterable<? extends com.google.analytics.admin.v1alpha.AccessDateRange> values) {
      if (dateRangesBuilder_ == null) {
        ensureDateRangesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, dateRanges_);
        onChanged();
      } else {
        dateRangesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder clearDateRanges() {
      if (dateRangesBuilder_ == null) {
        dateRanges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        dateRangesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public Builder removeDateRanges(int index) {
      if (dateRangesBuilder_ == null) {
        ensureDateRangesIsMutable();
        dateRanges_.remove(index);
        onChanged();
      } else {
        dateRangesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDateRange.Builder getDateRangesBuilder(
        int index) {
      return getDateRangesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder getDateRangesOrBuilder(
        int index) {
      if (dateRangesBuilder_ == null) {
        return dateRanges_.get(index);
      } else {
        return dateRangesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder>
        getDateRangesOrBuilderList() {
      if (dateRangesBuilder_ != null) {
        return dateRangesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dateRanges_);
      }
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDateRange.Builder addDateRangesBuilder() {
      return getDateRangesFieldBuilder()
          .addBuilder(com.google.analytics.admin.v1alpha.AccessDateRange.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessDateRange.Builder addDateRangesBuilder(
        int index) {
      return getDateRangesFieldBuilder()
          .addBuilder(
              index, com.google.analytics.admin.v1alpha.AccessDateRange.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Date ranges of access records to read. If multiple date ranges are
     * requested, each response row will contain a zero based date range index. If
     * two date ranges overlap, the access records for the overlapping days is
     * included in the response rows for both date ranges. Requests are allowed up
     * to 2 date ranges.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessDateRange date_ranges = 4;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessDateRange.Builder>
        getDateRangesBuilderList() {
      return getDateRangesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessDateRange,
            com.google.analytics.admin.v1alpha.AccessDateRange.Builder,
            com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder>
        getDateRangesFieldBuilder() {
      if (dateRangesBuilder_ == null) {
        dateRangesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.analytics.admin.v1alpha.AccessDateRange,
                com.google.analytics.admin.v1alpha.AccessDateRange.Builder,
                com.google.analytics.admin.v1alpha.AccessDateRangeOrBuilder>(
                dateRanges_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
        dateRanges_ = null;
      }
      return dateRangesBuilder_;
    }

    private com.google.analytics.admin.v1alpha.AccessFilterExpression dimensionFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessFilterExpression,
            com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder,
            com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder>
        dimensionFilterBuilder_;
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     *
     * @return Whether the dimensionFilter field is set.
     */
    public boolean hasDimensionFilter() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     *
     * @return The dimensionFilter.
     */
    public com.google.analytics.admin.v1alpha.AccessFilterExpression getDimensionFilter() {
      if (dimensionFilterBuilder_ == null) {
        return dimensionFilter_ == null
            ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
            : dimensionFilter_;
      } else {
        return dimensionFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    public Builder setDimensionFilter(
        com.google.analytics.admin.v1alpha.AccessFilterExpression value) {
      if (dimensionFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dimensionFilter_ = value;
      } else {
        dimensionFilterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    public Builder setDimensionFilter(
        com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder builderForValue) {
      if (dimensionFilterBuilder_ == null) {
        dimensionFilter_ = builderForValue.build();
      } else {
        dimensionFilterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    public Builder mergeDimensionFilter(
        com.google.analytics.admin.v1alpha.AccessFilterExpression value) {
      if (dimensionFilterBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && dimensionFilter_ != null
            && dimensionFilter_
                != com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()) {
          getDimensionFilterBuilder().mergeFrom(value);
        } else {
          dimensionFilter_ = value;
        }
      } else {
        dimensionFilterBuilder_.mergeFrom(value);
      }
      if (dimensionFilter_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    public Builder clearDimensionFilter() {
      bitField0_ = (bitField0_ & ~0x00000010);
      dimensionFilter_ = null;
      if (dimensionFilterBuilder_ != null) {
        dimensionFilterBuilder_.dispose();
        dimensionFilterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder
        getDimensionFilterBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getDimensionFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder
        getDimensionFilterOrBuilder() {
      if (dimensionFilterBuilder_ != null) {
        return dimensionFilterBuilder_.getMessageOrBuilder();
      } else {
        return dimensionFilter_ == null
            ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
            : dimensionFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * Dimension filters let you restrict report response to specific
     * dimension values which match the filter. For example, filtering on access
     * records of a single user. To learn more, see [Fundamentals of Dimension
     * Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
     * for examples. Metrics cannot be used in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression dimension_filter = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessFilterExpression,
            com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder,
            com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder>
        getDimensionFilterFieldBuilder() {
      if (dimensionFilterBuilder_ == null) {
        dimensionFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.analytics.admin.v1alpha.AccessFilterExpression,
                com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder,
                com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder>(
                getDimensionFilter(), getParentForChildren(), isClean());
        dimensionFilter_ = null;
      }
      return dimensionFilterBuilder_;
    }

    private com.google.analytics.admin.v1alpha.AccessFilterExpression metricFilter_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessFilterExpression,
            com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder,
            com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder>
        metricFilterBuilder_;
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     *
     * @return Whether the metricFilter field is set.
     */
    public boolean hasMetricFilter() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     *
     * @return The metricFilter.
     */
    public com.google.analytics.admin.v1alpha.AccessFilterExpression getMetricFilter() {
      if (metricFilterBuilder_ == null) {
        return metricFilter_ == null
            ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
            : metricFilter_;
      } else {
        return metricFilterBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    public Builder setMetricFilter(
        com.google.analytics.admin.v1alpha.AccessFilterExpression value) {
      if (metricFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metricFilter_ = value;
      } else {
        metricFilterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    public Builder setMetricFilter(
        com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder builderForValue) {
      if (metricFilterBuilder_ == null) {
        metricFilter_ = builderForValue.build();
      } else {
        metricFilterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    public Builder mergeMetricFilter(
        com.google.analytics.admin.v1alpha.AccessFilterExpression value) {
      if (metricFilterBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)
            && metricFilter_ != null
            && metricFilter_
                != com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()) {
          getMetricFilterBuilder().mergeFrom(value);
        } else {
          metricFilter_ = value;
        }
      } else {
        metricFilterBuilder_.mergeFrom(value);
      }
      if (metricFilter_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    public Builder clearMetricFilter() {
      bitField0_ = (bitField0_ & ~0x00000020);
      metricFilter_ = null;
      if (metricFilterBuilder_ != null) {
        metricFilterBuilder_.dispose();
        metricFilterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder
        getMetricFilterBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getMetricFilterFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder
        getMetricFilterOrBuilder() {
      if (metricFilterBuilder_ != null) {
        return metricFilterBuilder_.getMessageOrBuilder();
      } else {
        return metricFilter_ == null
            ? com.google.analytics.admin.v1alpha.AccessFilterExpression.getDefaultInstance()
            : metricFilter_;
      }
    }
    /**
     *
     *
     * <pre>
     * Metric filters allow you to restrict report response to specific metric
     * values which match the filter. Metric filters are applied after aggregating
     * the report's rows, similar to SQL having-clause. Dimensions cannot be used
     * in this filter.
     * </pre>
     *
     * <code>.google.analytics.admin.v1alpha.AccessFilterExpression metric_filter = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessFilterExpression,
            com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder,
            com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder>
        getMetricFilterFieldBuilder() {
      if (metricFilterBuilder_ == null) {
        metricFilterBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.analytics.admin.v1alpha.AccessFilterExpression,
                com.google.analytics.admin.v1alpha.AccessFilterExpression.Builder,
                com.google.analytics.admin.v1alpha.AccessFilterExpressionOrBuilder>(
                getMetricFilter(), getParentForChildren(), isClean());
        metricFilter_ = null;
      }
      return metricFilterBuilder_;
    }

    private long offset_;
    /**
     *
     *
     * <pre>
     * The row count of the start row. The first row is counted as row 0. If
     * offset is unspecified, it is treated as 0. If offset is zero, then this
     * method will return the first page of results with `limit` entries.
     *
     * To learn more about this pagination parameter, see
     * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     * </pre>
     *
     * <code>int64 offset = 7;</code>
     *
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     *
     *
     * <pre>
     * The row count of the start row. The first row is counted as row 0. If
     * offset is unspecified, it is treated as 0. If offset is zero, then this
     * method will return the first page of results with `limit` entries.
     *
     * To learn more about this pagination parameter, see
     * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     * </pre>
     *
     * <code>int64 offset = 7;</code>
     *
     * @param value The offset to set.
     * @return This builder for chaining.
     */
    public Builder setOffset(long value) {

      offset_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The row count of the start row. The first row is counted as row 0. If
     * offset is unspecified, it is treated as 0. If offset is zero, then this
     * method will return the first page of results with `limit` entries.
     *
     * To learn more about this pagination parameter, see
     * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     * </pre>
     *
     * <code>int64 offset = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearOffset() {
      bitField0_ = (bitField0_ & ~0x00000040);
      offset_ = 0L;
      onChanged();
      return this;
    }

    private long limit_;
    /**
     *
     *
     * <pre>
     * The number of rows to return. If unspecified, 10,000 rows are returned. The
     * API returns a maximum of 100,000 rows per request, no matter how many you
     * ask for. `limit` must be positive.
     *
     * The API may return fewer rows than the requested `limit`, if there aren't
     * as many remaining rows as the `limit`. For instance, there are fewer than
     * 300 possible values for the dimension `country`, so when reporting on only
     * `country`, you can't get more than 300 rows, even if you set `limit` to a
     * higher value.
     *
     * To learn more about this pagination parameter, see
     * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     * </pre>
     *
     * <code>int64 limit = 8;</code>
     *
     * @return The limit.
     */
    @java.lang.Override
    public long getLimit() {
      return limit_;
    }
    /**
     *
     *
     * <pre>
     * The number of rows to return. If unspecified, 10,000 rows are returned. The
     * API returns a maximum of 100,000 rows per request, no matter how many you
     * ask for. `limit` must be positive.
     *
     * The API may return fewer rows than the requested `limit`, if there aren't
     * as many remaining rows as the `limit`. For instance, there are fewer than
     * 300 possible values for the dimension `country`, so when reporting on only
     * `country`, you can't get more than 300 rows, even if you set `limit` to a
     * higher value.
     *
     * To learn more about this pagination parameter, see
     * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     * </pre>
     *
     * <code>int64 limit = 8;</code>
     *
     * @param value The limit to set.
     * @return This builder for chaining.
     */
    public Builder setLimit(long value) {

      limit_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of rows to return. If unspecified, 10,000 rows are returned. The
     * API returns a maximum of 100,000 rows per request, no matter how many you
     * ask for. `limit` must be positive.
     *
     * The API may return fewer rows than the requested `limit`, if there aren't
     * as many remaining rows as the `limit`. For instance, there are fewer than
     * 300 possible values for the dimension `country`, so when reporting on only
     * `country`, you can't get more than 300 rows, even if you set `limit` to a
     * higher value.
     *
     * To learn more about this pagination parameter, see
     * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     * </pre>
     *
     * <code>int64 limit = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearLimit() {
      bitField0_ = (bitField0_ & ~0x00000080);
      limit_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object timeZone_ = "";
    /**
     *
     *
     * <pre>
     * This request's time zone if specified. If unspecified, the property's time
     * zone is used. The request's time zone is used to interpret the start &amp; end
     * dates of the report.
     *
     * Formatted as strings from the IANA Time Zone database
     * (https://www.iana.org/time-zones); for example "America/New_York" or
     * "Asia/Tokyo".
     * </pre>
     *
     * <code>string time_zone = 9;</code>
     *
     * @return The timeZone.
     */
    public java.lang.String getTimeZone() {
      java.lang.Object ref = timeZone_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timeZone_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This request's time zone if specified. If unspecified, the property's time
     * zone is used. The request's time zone is used to interpret the start &amp; end
     * dates of the report.
     *
     * Formatted as strings from the IANA Time Zone database
     * (https://www.iana.org/time-zones); for example "America/New_York" or
     * "Asia/Tokyo".
     * </pre>
     *
     * <code>string time_zone = 9;</code>
     *
     * @return The bytes for timeZone.
     */
    public com.google.protobuf.ByteString getTimeZoneBytes() {
      java.lang.Object ref = timeZone_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        timeZone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * This request's time zone if specified. If unspecified, the property's time
     * zone is used. The request's time zone is used to interpret the start &amp; end
     * dates of the report.
     *
     * Formatted as strings from the IANA Time Zone database
     * (https://www.iana.org/time-zones); for example "America/New_York" or
     * "Asia/Tokyo".
     * </pre>
     *
     * <code>string time_zone = 9;</code>
     *
     * @param value The timeZone to set.
     * @return This builder for chaining.
     */
    public Builder setTimeZone(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      timeZone_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This request's time zone if specified. If unspecified, the property's time
     * zone is used. The request's time zone is used to interpret the start &amp; end
     * dates of the report.
     *
     * Formatted as strings from the IANA Time Zone database
     * (https://www.iana.org/time-zones); for example "America/New_York" or
     * "Asia/Tokyo".
     * </pre>
     *
     * <code>string time_zone = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTimeZone() {
      timeZone_ = getDefaultInstance().getTimeZone();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This request's time zone if specified. If unspecified, the property's time
     * zone is used. The request's time zone is used to interpret the start &amp; end
     * dates of the report.
     *
     * Formatted as strings from the IANA Time Zone database
     * (https://www.iana.org/time-zones); for example "America/New_York" or
     * "Asia/Tokyo".
     * </pre>
     *
     * <code>string time_zone = 9;</code>
     *
     * @param value The bytes for timeZone to set.
     * @return This builder for chaining.
     */
    public Builder setTimeZoneBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      timeZone_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private java.util.List<com.google.analytics.admin.v1alpha.AccessOrderBy> orderBys_ =
        java.util.Collections.emptyList();

    private void ensureOrderBysIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        orderBys_ =
            new java.util.ArrayList<com.google.analytics.admin.v1alpha.AccessOrderBy>(orderBys_);
        bitField0_ |= 0x00000200;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessOrderBy,
            com.google.analytics.admin.v1alpha.AccessOrderBy.Builder,
            com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder>
        orderBysBuilder_;

    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessOrderBy> getOrderBysList() {
      if (orderBysBuilder_ == null) {
        return java.util.Collections.unmodifiableList(orderBys_);
      } else {
        return orderBysBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public int getOrderBysCount() {
      if (orderBysBuilder_ == null) {
        return orderBys_.size();
      } else {
        return orderBysBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessOrderBy getOrderBys(int index) {
      if (orderBysBuilder_ == null) {
        return orderBys_.get(index);
      } else {
        return orderBysBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder setOrderBys(int index, com.google.analytics.admin.v1alpha.AccessOrderBy value) {
      if (orderBysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOrderBysIsMutable();
        orderBys_.set(index, value);
        onChanged();
      } else {
        orderBysBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder setOrderBys(
        int index, com.google.analytics.admin.v1alpha.AccessOrderBy.Builder builderForValue) {
      if (orderBysBuilder_ == null) {
        ensureOrderBysIsMutable();
        orderBys_.set(index, builderForValue.build());
        onChanged();
      } else {
        orderBysBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder addOrderBys(com.google.analytics.admin.v1alpha.AccessOrderBy value) {
      if (orderBysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOrderBysIsMutable();
        orderBys_.add(value);
        onChanged();
      } else {
        orderBysBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder addOrderBys(int index, com.google.analytics.admin.v1alpha.AccessOrderBy value) {
      if (orderBysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOrderBysIsMutable();
        orderBys_.add(index, value);
        onChanged();
      } else {
        orderBysBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder addOrderBys(
        com.google.analytics.admin.v1alpha.AccessOrderBy.Builder builderForValue) {
      if (orderBysBuilder_ == null) {
        ensureOrderBysIsMutable();
        orderBys_.add(builderForValue.build());
        onChanged();
      } else {
        orderBysBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder addOrderBys(
        int index, com.google.analytics.admin.v1alpha.AccessOrderBy.Builder builderForValue) {
      if (orderBysBuilder_ == null) {
        ensureOrderBysIsMutable();
        orderBys_.add(index, builderForValue.build());
        onChanged();
      } else {
        orderBysBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder addAllOrderBys(
        java.lang.Iterable<? extends com.google.analytics.admin.v1alpha.AccessOrderBy> values) {
      if (orderBysBuilder_ == null) {
        ensureOrderBysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, orderBys_);
        onChanged();
      } else {
        orderBysBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder clearOrderBys() {
      if (orderBysBuilder_ == null) {
        orderBys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        orderBysBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public Builder removeOrderBys(int index) {
      if (orderBysBuilder_ == null) {
        ensureOrderBysIsMutable();
        orderBys_.remove(index);
        onChanged();
      } else {
        orderBysBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessOrderBy.Builder getOrderBysBuilder(int index) {
      return getOrderBysFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder getOrderBysOrBuilder(
        int index) {
      if (orderBysBuilder_ == null) {
        return orderBys_.get(index);
      } else {
        return orderBysBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public java.util.List<? extends com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder>
        getOrderBysOrBuilderList() {
      if (orderBysBuilder_ != null) {
        return orderBysBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(orderBys_);
      }
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessOrderBy.Builder addOrderBysBuilder() {
      return getOrderBysFieldBuilder()
          .addBuilder(com.google.analytics.admin.v1alpha.AccessOrderBy.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public com.google.analytics.admin.v1alpha.AccessOrderBy.Builder addOrderBysBuilder(int index) {
      return getOrderBysFieldBuilder()
          .addBuilder(index, com.google.analytics.admin.v1alpha.AccessOrderBy.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Specifies how rows are ordered in the response.
     * </pre>
     *
     * <code>repeated .google.analytics.admin.v1alpha.AccessOrderBy order_bys = 10;</code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.AccessOrderBy.Builder>
        getOrderBysBuilderList() {
      return getOrderBysFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.AccessOrderBy,
            com.google.analytics.admin.v1alpha.AccessOrderBy.Builder,
            com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder>
        getOrderBysFieldBuilder() {
      if (orderBysBuilder_ == null) {
        orderBysBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.analytics.admin.v1alpha.AccessOrderBy,
                com.google.analytics.admin.v1alpha.AccessOrderBy.Builder,
                com.google.analytics.admin.v1alpha.AccessOrderByOrBuilder>(
                orderBys_, ((bitField0_ & 0x00000200) != 0), getParentForChildren(), isClean());
        orderBys_ = null;
      }
      return orderBysBuilder_;
    }

    private boolean returnEntityQuota_;
    /**
     *
     *
     * <pre>
     * Toggles whether to return the current state of this Analytics Property's
     * quota. Quota is returned in [AccessQuota](#AccessQuota). For account-level
     * requests, this field must be false.
     * </pre>
     *
     * <code>bool return_entity_quota = 11;</code>
     *
     * @return The returnEntityQuota.
     */
    @java.lang.Override
    public boolean getReturnEntityQuota() {
      return returnEntityQuota_;
    }
    /**
     *
     *
     * <pre>
     * Toggles whether to return the current state of this Analytics Property's
     * quota. Quota is returned in [AccessQuota](#AccessQuota). For account-level
     * requests, this field must be false.
     * </pre>
     *
     * <code>bool return_entity_quota = 11;</code>
     *
     * @param value The returnEntityQuota to set.
     * @return This builder for chaining.
     */
    public Builder setReturnEntityQuota(boolean value) {

      returnEntityQuota_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Toggles whether to return the current state of this Analytics Property's
     * quota. Quota is returned in [AccessQuota](#AccessQuota). For account-level
     * requests, this field must be false.
     * </pre>
     *
     * <code>bool return_entity_quota = 11;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearReturnEntityQuota() {
      bitField0_ = (bitField0_ & ~0x00000400);
      returnEntityQuota_ = false;
      onChanged();
      return this;
    }

    private boolean includeAllUsers_;
    /**
     *
     *
     * <pre>
     * Optional. Determines whether to include users who have never made an API
     * call in the response. If true, all users with access to the specified
     * property or account are included in the response, regardless of whether
     * they have made an API call or not. If false, only the users who have made
     * an API call will be included.
     * </pre>
     *
     * <code>bool include_all_users = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The includeAllUsers.
     */
    @java.lang.Override
    public boolean getIncludeAllUsers() {
      return includeAllUsers_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Determines whether to include users who have never made an API
     * call in the response. If true, all users with access to the specified
     * property or account are included in the response, regardless of whether
     * they have made an API call or not. If false, only the users who have made
     * an API call will be included.
     * </pre>
     *
     * <code>bool include_all_users = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The includeAllUsers to set.
     * @return This builder for chaining.
     */
    public Builder setIncludeAllUsers(boolean value) {

      includeAllUsers_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Determines whether to include users who have never made an API
     * call in the response. If true, all users with access to the specified
     * property or account are included in the response, regardless of whether
     * they have made an API call or not. If false, only the users who have made
     * an API call will be included.
     * </pre>
     *
     * <code>bool include_all_users = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIncludeAllUsers() {
      bitField0_ = (bitField0_ & ~0x00000800);
      includeAllUsers_ = false;
      onChanged();
      return this;
    }

    private boolean expandGroups_;
    /**
     *
     *
     * <pre>
     * Optional. Decides whether to return the users within user groups. This
     * field works only when include_all_users is set to true. If true, it will
     * return all users with access to the specified property or account.
     * If false, only the users with direct access will be returned.
     * </pre>
     *
     * <code>bool expand_groups = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The expandGroups.
     */
    @java.lang.Override
    public boolean getExpandGroups() {
      return expandGroups_;
    }
    /**
     *
     *
     * <pre>
     * Optional. Decides whether to return the users within user groups. This
     * field works only when include_all_users is set to true. If true, it will
     * return all users with access to the specified property or account.
     * If false, only the users with direct access will be returned.
     * </pre>
     *
     * <code>bool expand_groups = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The expandGroups to set.
     * @return This builder for chaining.
     */
    public Builder setExpandGroups(boolean value) {

      expandGroups_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. Decides whether to return the users within user groups. This
     * field works only when include_all_users is set to true. If true, it will
     * return all users with access to the specified property or account.
     * If false, only the users with direct access will be returned.
     * </pre>
     *
     * <code>bool expand_groups = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearExpandGroups() {
      bitField0_ = (bitField0_ & ~0x00001000);
      expandGroups_ = false;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.analytics.admin.v1alpha.RunAccessReportRequest)
  }

  // @@protoc_insertion_point(class_scope:google.analytics.admin.v1alpha.RunAccessReportRequest)
  private static final com.google.analytics.admin.v1alpha.RunAccessReportRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.analytics.admin.v1alpha.RunAccessReportRequest();
  }

  public static com.google.analytics.admin.v1alpha.RunAccessReportRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RunAccessReportRequest> PARSER =
      new com.google.protobuf.AbstractParser<RunAccessReportRequest>() {
        @java.lang.Override
        public RunAccessReportRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<RunAccessReportRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RunAccessReportRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.analytics.admin.v1alpha.RunAccessReportRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
