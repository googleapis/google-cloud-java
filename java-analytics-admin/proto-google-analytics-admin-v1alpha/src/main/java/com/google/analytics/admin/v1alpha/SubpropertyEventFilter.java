/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/admin/v1alpha/subproperty_event_filter.proto

// Protobuf Java Version: 3.25.5
package com.google.analytics.admin.v1alpha;

/**
 *
 *
 * <pre>
 * A resource message representing a Google Analytics subproperty event filter.
 * </pre>
 *
 * Protobuf type {@code google.analytics.admin.v1alpha.SubpropertyEventFilter}
 */
public final class SubpropertyEventFilter extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.analytics.admin.v1alpha.SubpropertyEventFilter)
    SubpropertyEventFilterOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SubpropertyEventFilter.newBuilder() to construct.
  private SubpropertyEventFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SubpropertyEventFilter() {
    name_ = "";
    applyToProperty_ = "";
    filterClauses_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SubpropertyEventFilter();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.analytics.admin.v1alpha.SubpropertyEventFilterProto
        .internal_static_google_analytics_admin_v1alpha_SubpropertyEventFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.analytics.admin.v1alpha.SubpropertyEventFilterProto
        .internal_static_google_analytics_admin_v1alpha_SubpropertyEventFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.analytics.admin.v1alpha.SubpropertyEventFilter.class,
            com.google.analytics.admin.v1alpha.SubpropertyEventFilter.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Output only. Format:
   * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
   * Example: properties/1234/subpropertyEventFilters/5678
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. Format:
   * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
   * Example: properties/1234/subpropertyEventFilters/5678
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APPLY_TO_PROPERTY_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object applyToProperty_ = "";
  /**
   *
   *
   * <pre>
   * Immutable. Resource name of the Subproperty that uses this filter.
   * </pre>
   *
   * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return Whether the applyToProperty field is set.
   */
  @java.lang.Override
  public boolean hasApplyToProperty() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Immutable. Resource name of the Subproperty that uses this filter.
   * </pre>
   *
   * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The applyToProperty.
   */
  @java.lang.Override
  public java.lang.String getApplyToProperty() {
    java.lang.Object ref = applyToProperty_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      applyToProperty_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Immutable. Resource name of the Subproperty that uses this filter.
   * </pre>
   *
   * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for applyToProperty.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getApplyToPropertyBytes() {
    java.lang.Object ref = applyToProperty_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      applyToProperty_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTER_CLAUSES_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private java.util.List<com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>
      filterClauses_;
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>
      getFilterClausesList() {
    return filterClauses_;
  }
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder>
      getFilterClausesOrBuilderList() {
    return filterClauses_;
  }
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  @java.lang.Override
  public int getFilterClausesCount() {
    return filterClauses_.size();
  }
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause getFilterClauses(
      int index) {
    return filterClauses_.get(index);
  }
  /**
   *
   *
   * <pre>
   * Required. Unordered list. Filter clauses that define the
   * SubpropertyEventFilter. All clauses are AND'ed together to determine what
   * data is sent to the subproperty.
   * </pre>
   *
   * <code>
   * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
   * </code>
   */
  @java.lang.Override
  public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder
      getFilterClausesOrBuilder(int index) {
    return filterClauses_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, applyToProperty_);
    }
    for (int i = 0; i < filterClauses_.size(); i++) {
      output.writeMessage(3, filterClauses_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, applyToProperty_);
    }
    for (int i = 0; i < filterClauses_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, filterClauses_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.analytics.admin.v1alpha.SubpropertyEventFilter)) {
      return super.equals(obj);
    }
    com.google.analytics.admin.v1alpha.SubpropertyEventFilter other =
        (com.google.analytics.admin.v1alpha.SubpropertyEventFilter) obj;

    if (!getName().equals(other.getName())) return false;
    if (hasApplyToProperty() != other.hasApplyToProperty()) return false;
    if (hasApplyToProperty()) {
      if (!getApplyToProperty().equals(other.getApplyToProperty())) return false;
    }
    if (!getFilterClausesList().equals(other.getFilterClausesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasApplyToProperty()) {
      hash = (37 * hash) + APPLY_TO_PROPERTY_FIELD_NUMBER;
      hash = (53 * hash) + getApplyToProperty().hashCode();
    }
    if (getFilterClausesCount() > 0) {
      hash = (37 * hash) + FILTER_CLAUSES_FIELD_NUMBER;
      hash = (53 * hash) + getFilterClausesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.analytics.admin.v1alpha.SubpropertyEventFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A resource message representing a Google Analytics subproperty event filter.
   * </pre>
   *
   * Protobuf type {@code google.analytics.admin.v1alpha.SubpropertyEventFilter}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.analytics.admin.v1alpha.SubpropertyEventFilter)
      com.google.analytics.admin.v1alpha.SubpropertyEventFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.analytics.admin.v1alpha.SubpropertyEventFilterProto
          .internal_static_google_analytics_admin_v1alpha_SubpropertyEventFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.analytics.admin.v1alpha.SubpropertyEventFilterProto
          .internal_static_google_analytics_admin_v1alpha_SubpropertyEventFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.analytics.admin.v1alpha.SubpropertyEventFilter.class,
              com.google.analytics.admin.v1alpha.SubpropertyEventFilter.Builder.class);
    }

    // Construct using com.google.analytics.admin.v1alpha.SubpropertyEventFilter.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      applyToProperty_ = "";
      if (filterClausesBuilder_ == null) {
        filterClauses_ = java.util.Collections.emptyList();
      } else {
        filterClauses_ = null;
        filterClausesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.analytics.admin.v1alpha.SubpropertyEventFilterProto
          .internal_static_google_analytics_admin_v1alpha_SubpropertyEventFilter_descriptor;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilter getDefaultInstanceForType() {
      return com.google.analytics.admin.v1alpha.SubpropertyEventFilter.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilter build() {
      com.google.analytics.admin.v1alpha.SubpropertyEventFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilter buildPartial() {
      com.google.analytics.admin.v1alpha.SubpropertyEventFilter result =
          new com.google.analytics.admin.v1alpha.SubpropertyEventFilter(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.analytics.admin.v1alpha.SubpropertyEventFilter result) {
      if (filterClausesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          filterClauses_ = java.util.Collections.unmodifiableList(filterClauses_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.filterClauses_ = filterClauses_;
      } else {
        result.filterClauses_ = filterClausesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.analytics.admin.v1alpha.SubpropertyEventFilter result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.applyToProperty_ = applyToProperty_;
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.analytics.admin.v1alpha.SubpropertyEventFilter) {
        return mergeFrom((com.google.analytics.admin.v1alpha.SubpropertyEventFilter) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.analytics.admin.v1alpha.SubpropertyEventFilter other) {
      if (other == com.google.analytics.admin.v1alpha.SubpropertyEventFilter.getDefaultInstance())
        return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasApplyToProperty()) {
        applyToProperty_ = other.applyToProperty_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (filterClausesBuilder_ == null) {
        if (!other.filterClauses_.isEmpty()) {
          if (filterClauses_.isEmpty()) {
            filterClauses_ = other.filterClauses_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFilterClausesIsMutable();
            filterClauses_.addAll(other.filterClauses_);
          }
          onChanged();
        }
      } else {
        if (!other.filterClauses_.isEmpty()) {
          if (filterClausesBuilder_.isEmpty()) {
            filterClausesBuilder_.dispose();
            filterClausesBuilder_ = null;
            filterClauses_ = other.filterClauses_;
            bitField0_ = (bitField0_ & ~0x00000004);
            filterClausesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getFilterClausesFieldBuilder()
                    : null;
          } else {
            filterClausesBuilder_.addAllMessages(other.filterClauses_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                applyToProperty_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause m =
                    input.readMessage(
                        com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.parser(),
                        extensionRegistry);
                if (filterClausesBuilder_ == null) {
                  ensureFilterClausesIsMutable();
                  filterClauses_.add(m);
                } else {
                  filterClausesBuilder_.addMessage(m);
                }
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Output only. Format:
     * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
     * Example: properties/1234/subpropertyEventFilters/5678
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Format:
     * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
     * Example: properties/1234/subpropertyEventFilters/5678
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Format:
     * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
     * Example: properties/1234/subpropertyEventFilters/5678
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Format:
     * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
     * Example: properties/1234/subpropertyEventFilters/5678
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Format:
     * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
     * Example: properties/1234/subpropertyEventFilters/5678
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object applyToProperty_ = "";
    /**
     *
     *
     * <pre>
     * Immutable. Resource name of the Subproperty that uses this filter.
     * </pre>
     *
     * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return Whether the applyToProperty field is set.
     */
    public boolean hasApplyToProperty() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Immutable. Resource name of the Subproperty that uses this filter.
     * </pre>
     *
     * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The applyToProperty.
     */
    public java.lang.String getApplyToProperty() {
      java.lang.Object ref = applyToProperty_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        applyToProperty_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Immutable. Resource name of the Subproperty that uses this filter.
     * </pre>
     *
     * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The bytes for applyToProperty.
     */
    public com.google.protobuf.ByteString getApplyToPropertyBytes() {
      java.lang.Object ref = applyToProperty_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        applyToProperty_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Immutable. Resource name of the Subproperty that uses this filter.
     * </pre>
     *
     * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @param value The applyToProperty to set.
     * @return This builder for chaining.
     */
    public Builder setApplyToProperty(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      applyToProperty_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. Resource name of the Subproperty that uses this filter.
     * </pre>
     *
     * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearApplyToProperty() {
      applyToProperty_ = getDefaultInstance().getApplyToProperty();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. Resource name of the Subproperty that uses this filter.
     * </pre>
     *
     * <code>optional string apply_to_property = 2 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @param value The bytes for applyToProperty to set.
     * @return This builder for chaining.
     */
    public Builder setApplyToPropertyBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      applyToProperty_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>
        filterClauses_ = java.util.Collections.emptyList();

    private void ensureFilterClausesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        filterClauses_ =
            new java.util.ArrayList<
                com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>(filterClauses_);
        bitField0_ |= 0x00000004;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause,
            com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder,
            com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder>
        filterClausesBuilder_;

    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>
        getFilterClausesList() {
      if (filterClausesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filterClauses_);
      } else {
        return filterClausesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public int getFilterClausesCount() {
      if (filterClausesBuilder_ == null) {
        return filterClauses_.size();
      } else {
        return filterClausesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause getFilterClauses(
        int index) {
      if (filterClausesBuilder_ == null) {
        return filterClauses_.get(index);
      } else {
        return filterClausesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder setFilterClauses(
        int index, com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause value) {
      if (filterClausesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterClausesIsMutable();
        filterClauses_.set(index, value);
        onChanged();
      } else {
        filterClausesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder setFilterClauses(
        int index,
        com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder builderForValue) {
      if (filterClausesBuilder_ == null) {
        ensureFilterClausesIsMutable();
        filterClauses_.set(index, builderForValue.build());
        onChanged();
      } else {
        filterClausesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder addFilterClauses(
        com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause value) {
      if (filterClausesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterClausesIsMutable();
        filterClauses_.add(value);
        onChanged();
      } else {
        filterClausesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder addFilterClauses(
        int index, com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause value) {
      if (filterClausesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterClausesIsMutable();
        filterClauses_.add(index, value);
        onChanged();
      } else {
        filterClausesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder addFilterClauses(
        com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder builderForValue) {
      if (filterClausesBuilder_ == null) {
        ensureFilterClausesIsMutable();
        filterClauses_.add(builderForValue.build());
        onChanged();
      } else {
        filterClausesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder addFilterClauses(
        int index,
        com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder builderForValue) {
      if (filterClausesBuilder_ == null) {
        ensureFilterClausesIsMutable();
        filterClauses_.add(index, builderForValue.build());
        onChanged();
      } else {
        filterClausesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder addAllFilterClauses(
        java.lang.Iterable<
                ? extends com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause>
            values) {
      if (filterClausesBuilder_ == null) {
        ensureFilterClausesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, filterClauses_);
        onChanged();
      } else {
        filterClausesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder clearFilterClauses() {
      if (filterClausesBuilder_ == null) {
        filterClauses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        filterClausesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public Builder removeFilterClauses(int index) {
      if (filterClausesBuilder_ == null) {
        ensureFilterClausesIsMutable();
        filterClauses_.remove(index);
        onChanged();
      } else {
        filterClausesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder
        getFilterClausesBuilder(int index) {
      return getFilterClausesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder
        getFilterClausesOrBuilder(int index) {
      if (filterClausesBuilder_ == null) {
        return filterClauses_.get(index);
      } else {
        return filterClausesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public java.util.List<
            ? extends com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder>
        getFilterClausesOrBuilderList() {
      if (filterClausesBuilder_ != null) {
        return filterClausesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filterClauses_);
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder
        addFilterClausesBuilder() {
      return getFilterClausesFieldBuilder()
          .addBuilder(
              com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder
        addFilterClausesBuilder(int index) {
      return getFilterClausesFieldBuilder()
          .addBuilder(
              index,
              com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * Required. Unordered list. Filter clauses that define the
     * SubpropertyEventFilter. All clauses are AND'ed together to determine what
     * data is sent to the subproperty.
     * </pre>
     *
     * <code>
     * repeated .google.analytics.admin.v1alpha.SubpropertyEventFilterClause filter_clauses = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = UNORDERED_LIST];
     * </code>
     */
    public java.util.List<com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder>
        getFilterClausesBuilderList() {
      return getFilterClausesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause,
            com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder,
            com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder>
        getFilterClausesFieldBuilder() {
      if (filterClausesBuilder_ == null) {
        filterClausesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause,
                com.google.analytics.admin.v1alpha.SubpropertyEventFilterClause.Builder,
                com.google.analytics.admin.v1alpha.SubpropertyEventFilterClauseOrBuilder>(
                filterClauses_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        filterClauses_ = null;
      }
      return filterClausesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.analytics.admin.v1alpha.SubpropertyEventFilter)
  }

  // @@protoc_insertion_point(class_scope:google.analytics.admin.v1alpha.SubpropertyEventFilter)
  private static final com.google.analytics.admin.v1alpha.SubpropertyEventFilter DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.analytics.admin.v1alpha.SubpropertyEventFilter();
  }

  public static com.google.analytics.admin.v1alpha.SubpropertyEventFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SubpropertyEventFilter> PARSER =
      new com.google.protobuf.AbstractParser<SubpropertyEventFilter>() {
        @java.lang.Override
        public SubpropertyEventFilter parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<SubpropertyEventFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SubpropertyEventFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.analytics.admin.v1alpha.SubpropertyEventFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
