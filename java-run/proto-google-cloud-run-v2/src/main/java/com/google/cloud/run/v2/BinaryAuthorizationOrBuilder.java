/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/run/v2/vendor_settings.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.run.v2;

public interface BinaryAuthorizationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.run.v2.BinaryAuthorization)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. If True, indicates to use the default project's binary
   * authorization policy. If False, binary authorization will be disabled.
   * </pre>
   *
   * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the useDefault field is set.
   */
  boolean hasUseDefault();
  /**
   *
   *
   * <pre>
   * Optional. If True, indicates to use the default project's binary
   * authorization policy. If False, binary authorization will be disabled.
   * </pre>
   *
   * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The useDefault.
   */
  boolean getUseDefault();

  /**
   *
   *
   * <pre>
   * Optional. The path to a binary authorization policy.
   * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
   * </pre>
   *
   * <code>
   * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return Whether the policy field is set.
   */
  boolean hasPolicy();
  /**
   *
   *
   * <pre>
   * Optional. The path to a binary authorization policy.
   * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
   * </pre>
   *
   * <code>
   * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The policy.
   */
  java.lang.String getPolicy();
  /**
   *
   *
   * <pre>
   * Optional. The path to a binary authorization policy.
   * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
   * </pre>
   *
   * <code>
   * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for policy.
   */
  com.google.protobuf.ByteString getPolicyBytes();

  /**
   *
   *
   * <pre>
   * Optional. If present, indicates to use Breakglass using this justification.
   * If use_default is False, then it must be empty.
   * For more information on breakglass, see
   * https://cloud.google.com/binary-authorization/docs/using-breakglass
   * </pre>
   *
   * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The breakglassJustification.
   */
  java.lang.String getBreakglassJustification();
  /**
   *
   *
   * <pre>
   * Optional. If present, indicates to use Breakglass using this justification.
   * If use_default is False, then it must be empty.
   * For more information on breakglass, see
   * https://cloud.google.com/binary-authorization/docs/using-breakglass
   * </pre>
   *
   * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for breakglassJustification.
   */
  com.google.protobuf.ByteString getBreakglassJustificationBytes();

  com.google.cloud.run.v2.BinaryAuthorization.BinauthzMethodCase getBinauthzMethodCase();
}
