/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/run/v2/vendor_settings.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.run.v2;

/**
 *
 *
 * <pre>
 * Settings for Binary Authorization feature.
 * </pre>
 *
 * Protobuf type {@code google.cloud.run.v2.BinaryAuthorization}
 */
public final class BinaryAuthorization extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.run.v2.BinaryAuthorization)
    BinaryAuthorizationOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use BinaryAuthorization.newBuilder() to construct.
  private BinaryAuthorization(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private BinaryAuthorization() {
    breakglassJustification_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new BinaryAuthorization();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.run.v2.VendorSettingsProto
        .internal_static_google_cloud_run_v2_BinaryAuthorization_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.run.v2.VendorSettingsProto
        .internal_static_google_cloud_run_v2_BinaryAuthorization_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.run.v2.BinaryAuthorization.class,
            com.google.cloud.run.v2.BinaryAuthorization.Builder.class);
  }

  private int binauthzMethodCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object binauthzMethod_;

  public enum BinauthzMethodCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    USE_DEFAULT(1),
    POLICY(3),
    BINAUTHZMETHOD_NOT_SET(0);
    private final int value;

    private BinauthzMethodCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BinauthzMethodCase valueOf(int value) {
      return forNumber(value);
    }

    public static BinauthzMethodCase forNumber(int value) {
      switch (value) {
        case 1:
          return USE_DEFAULT;
        case 3:
          return POLICY;
        case 0:
          return BINAUTHZMETHOD_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public BinauthzMethodCase getBinauthzMethodCase() {
    return BinauthzMethodCase.forNumber(binauthzMethodCase_);
  }

  public static final int USE_DEFAULT_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   * Optional. If True, indicates to use the default project's binary
   * authorization policy. If False, binary authorization will be disabled.
   * </pre>
   *
   * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return Whether the useDefault field is set.
   */
  @java.lang.Override
  public boolean hasUseDefault() {
    return binauthzMethodCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   * Optional. If True, indicates to use the default project's binary
   * authorization policy. If False, binary authorization will be disabled.
   * </pre>
   *
   * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The useDefault.
   */
  @java.lang.Override
  public boolean getUseDefault() {
    if (binauthzMethodCase_ == 1) {
      return (java.lang.Boolean) binauthzMethod_;
    }
    return false;
  }

  public static final int POLICY_FIELD_NUMBER = 3;
  /**
   *
   *
   * <pre>
   * Optional. The path to a binary authorization policy.
   * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
   * </pre>
   *
   * <code>
   * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return Whether the policy field is set.
   */
  public boolean hasPolicy() {
    return binauthzMethodCase_ == 3;
  }
  /**
   *
   *
   * <pre>
   * Optional. The path to a binary authorization policy.
   * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
   * </pre>
   *
   * <code>
   * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The policy.
   */
  public java.lang.String getPolicy() {
    java.lang.Object ref = "";
    if (binauthzMethodCase_ == 3) {
      ref = binauthzMethod_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (binauthzMethodCase_ == 3) {
        binauthzMethod_ = s;
      }
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. The path to a binary authorization policy.
   * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
   * </pre>
   *
   * <code>
   * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for policy.
   */
  public com.google.protobuf.ByteString getPolicyBytes() {
    java.lang.Object ref = "";
    if (binauthzMethodCase_ == 3) {
      ref = binauthzMethod_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (binauthzMethodCase_ == 3) {
        binauthzMethod_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BREAKGLASS_JUSTIFICATION_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object breakglassJustification_ = "";
  /**
   *
   *
   * <pre>
   * Optional. If present, indicates to use Breakglass using this justification.
   * If use_default is False, then it must be empty.
   * For more information on breakglass, see
   * https://cloud.google.com/binary-authorization/docs/using-breakglass
   * </pre>
   *
   * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The breakglassJustification.
   */
  @java.lang.Override
  public java.lang.String getBreakglassJustification() {
    java.lang.Object ref = breakglassJustification_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      breakglassJustification_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional. If present, indicates to use Breakglass using this justification.
   * If use_default is False, then it must be empty.
   * For more information on breakglass, see
   * https://cloud.google.com/binary-authorization/docs/using-breakglass
   * </pre>
   *
   * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for breakglassJustification.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBreakglassJustificationBytes() {
    java.lang.Object ref = breakglassJustification_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      breakglassJustification_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (binauthzMethodCase_ == 1) {
      output.writeBool(1, (boolean) ((java.lang.Boolean) binauthzMethod_));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(breakglassJustification_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, breakglassJustification_);
    }
    if (binauthzMethodCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, binauthzMethod_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (binauthzMethodCase_ == 1) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              1, (boolean) ((java.lang.Boolean) binauthzMethod_));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(breakglassJustification_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, breakglassJustification_);
    }
    if (binauthzMethodCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, binauthzMethod_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.run.v2.BinaryAuthorization)) {
      return super.equals(obj);
    }
    com.google.cloud.run.v2.BinaryAuthorization other =
        (com.google.cloud.run.v2.BinaryAuthorization) obj;

    if (!getBreakglassJustification().equals(other.getBreakglassJustification())) return false;
    if (!getBinauthzMethodCase().equals(other.getBinauthzMethodCase())) return false;
    switch (binauthzMethodCase_) {
      case 1:
        if (getUseDefault() != other.getUseDefault()) return false;
        break;
      case 3:
        if (!getPolicy().equals(other.getPolicy())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BREAKGLASS_JUSTIFICATION_FIELD_NUMBER;
    hash = (53 * hash) + getBreakglassJustification().hashCode();
    switch (binauthzMethodCase_) {
      case 1:
        hash = (37 * hash) + USE_DEFAULT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getUseDefault());
        break;
      case 3:
        hash = (37 * hash) + POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getPolicy().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.run.v2.BinaryAuthorization parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.run.v2.BinaryAuthorization prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Settings for Binary Authorization feature.
   * </pre>
   *
   * Protobuf type {@code google.cloud.run.v2.BinaryAuthorization}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.run.v2.BinaryAuthorization)
      com.google.cloud.run.v2.BinaryAuthorizationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.run.v2.VendorSettingsProto
          .internal_static_google_cloud_run_v2_BinaryAuthorization_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.run.v2.VendorSettingsProto
          .internal_static_google_cloud_run_v2_BinaryAuthorization_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.run.v2.BinaryAuthorization.class,
              com.google.cloud.run.v2.BinaryAuthorization.Builder.class);
    }

    // Construct using com.google.cloud.run.v2.BinaryAuthorization.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      breakglassJustification_ = "";
      binauthzMethodCase_ = 0;
      binauthzMethod_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.run.v2.VendorSettingsProto
          .internal_static_google_cloud_run_v2_BinaryAuthorization_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.run.v2.BinaryAuthorization getDefaultInstanceForType() {
      return com.google.cloud.run.v2.BinaryAuthorization.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.run.v2.BinaryAuthorization build() {
      com.google.cloud.run.v2.BinaryAuthorization result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.run.v2.BinaryAuthorization buildPartial() {
      com.google.cloud.run.v2.BinaryAuthorization result =
          new com.google.cloud.run.v2.BinaryAuthorization(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.run.v2.BinaryAuthorization result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.breakglassJustification_ = breakglassJustification_;
      }
    }

    private void buildPartialOneofs(com.google.cloud.run.v2.BinaryAuthorization result) {
      result.binauthzMethodCase_ = binauthzMethodCase_;
      result.binauthzMethod_ = this.binauthzMethod_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.run.v2.BinaryAuthorization) {
        return mergeFrom((com.google.cloud.run.v2.BinaryAuthorization) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.run.v2.BinaryAuthorization other) {
      if (other == com.google.cloud.run.v2.BinaryAuthorization.getDefaultInstance()) return this;
      if (!other.getBreakglassJustification().isEmpty()) {
        breakglassJustification_ = other.breakglassJustification_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      switch (other.getBinauthzMethodCase()) {
        case USE_DEFAULT:
          {
            setUseDefault(other.getUseDefault());
            break;
          }
        case POLICY:
          {
            binauthzMethodCase_ = 3;
            binauthzMethod_ = other.binauthzMethod_;
            onChanged();
            break;
          }
        case BINAUTHZMETHOD_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                binauthzMethod_ = input.readBool();
                binauthzMethodCase_ = 1;
                break;
              } // case 8
            case 18:
              {
                breakglassJustification_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 18
            case 26:
              {
                java.lang.String s = input.readStringRequireUtf8();
                binauthzMethodCase_ = 3;
                binauthzMethod_ = s;
                break;
              } // case 26
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int binauthzMethodCase_ = 0;
    private java.lang.Object binauthzMethod_;

    public BinauthzMethodCase getBinauthzMethodCase() {
      return BinauthzMethodCase.forNumber(binauthzMethodCase_);
    }

    public Builder clearBinauthzMethod() {
      binauthzMethodCase_ = 0;
      binauthzMethod_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     *
     *
     * <pre>
     * Optional. If True, indicates to use the default project's binary
     * authorization policy. If False, binary authorization will be disabled.
     * </pre>
     *
     * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return Whether the useDefault field is set.
     */
    public boolean hasUseDefault() {
      return binauthzMethodCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * Optional. If True, indicates to use the default project's binary
     * authorization policy. If False, binary authorization will be disabled.
     * </pre>
     *
     * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The useDefault.
     */
    public boolean getUseDefault() {
      if (binauthzMethodCase_ == 1) {
        return (java.lang.Boolean) binauthzMethod_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * Optional. If True, indicates to use the default project's binary
     * authorization policy. If False, binary authorization will be disabled.
     * </pre>
     *
     * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The useDefault to set.
     * @return This builder for chaining.
     */
    public Builder setUseDefault(boolean value) {

      binauthzMethodCase_ = 1;
      binauthzMethod_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. If True, indicates to use the default project's binary
     * authorization policy. If False, binary authorization will be disabled.
     * </pre>
     *
     * <code>bool use_default = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearUseDefault() {
      if (binauthzMethodCase_ == 1) {
        binauthzMethodCase_ = 0;
        binauthzMethod_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The path to a binary authorization policy.
     * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
     * </pre>
     *
     * <code>
     * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return Whether the policy field is set.
     */
    @java.lang.Override
    public boolean hasPolicy() {
      return binauthzMethodCase_ == 3;
    }
    /**
     *
     *
     * <pre>
     * Optional. The path to a binary authorization policy.
     * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
     * </pre>
     *
     * <code>
     * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The policy.
     */
    @java.lang.Override
    public java.lang.String getPolicy() {
      java.lang.Object ref = "";
      if (binauthzMethodCase_ == 3) {
        ref = binauthzMethod_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (binauthzMethodCase_ == 3) {
          binauthzMethod_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The path to a binary authorization policy.
     * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
     * </pre>
     *
     * <code>
     * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for policy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPolicyBytes() {
      java.lang.Object ref = "";
      if (binauthzMethodCase_ == 3) {
        ref = binauthzMethod_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (binauthzMethodCase_ == 3) {
          binauthzMethod_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The path to a binary authorization policy.
     * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
     * </pre>
     *
     * <code>
     * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The policy to set.
     * @return This builder for chaining.
     */
    public Builder setPolicy(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      binauthzMethodCase_ = 3;
      binauthzMethod_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The path to a binary authorization policy.
     * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
     * </pre>
     *
     * <code>
     * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPolicy() {
      if (binauthzMethodCase_ == 3) {
        binauthzMethodCase_ = 0;
        binauthzMethod_ = null;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The path to a binary authorization policy.
     * Format: `projects/{project}/platforms/cloudRun/{policy-name}`
     * </pre>
     *
     * <code>
     * string policy = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for policy to set.
     * @return This builder for chaining.
     */
    public Builder setPolicyBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      binauthzMethodCase_ = 3;
      binauthzMethod_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object breakglassJustification_ = "";
    /**
     *
     *
     * <pre>
     * Optional. If present, indicates to use Breakglass using this justification.
     * If use_default is False, then it must be empty.
     * For more information on breakglass, see
     * https://cloud.google.com/binary-authorization/docs/using-breakglass
     * </pre>
     *
     * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The breakglassJustification.
     */
    public java.lang.String getBreakglassJustification() {
      java.lang.Object ref = breakglassJustification_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        breakglassJustification_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. If present, indicates to use Breakglass using this justification.
     * If use_default is False, then it must be empty.
     * For more information on breakglass, see
     * https://cloud.google.com/binary-authorization/docs/using-breakglass
     * </pre>
     *
     * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for breakglassJustification.
     */
    public com.google.protobuf.ByteString getBreakglassJustificationBytes() {
      java.lang.Object ref = breakglassJustification_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        breakglassJustification_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. If present, indicates to use Breakglass using this justification.
     * If use_default is False, then it must be empty.
     * For more information on breakglass, see
     * https://cloud.google.com/binary-authorization/docs/using-breakglass
     * </pre>
     *
     * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The breakglassJustification to set.
     * @return This builder for chaining.
     */
    public Builder setBreakglassJustification(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      breakglassJustification_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. If present, indicates to use Breakglass using this justification.
     * If use_default is False, then it must be empty.
     * For more information on breakglass, see
     * https://cloud.google.com/binary-authorization/docs/using-breakglass
     * </pre>
     *
     * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBreakglassJustification() {
      breakglassJustification_ = getDefaultInstance().getBreakglassJustification();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. If present, indicates to use Breakglass using this justification.
     * If use_default is False, then it must be empty.
     * For more information on breakglass, see
     * https://cloud.google.com/binary-authorization/docs/using-breakglass
     * </pre>
     *
     * <code>string breakglass_justification = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @param value The bytes for breakglassJustification to set.
     * @return This builder for chaining.
     */
    public Builder setBreakglassJustificationBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      breakglassJustification_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.run.v2.BinaryAuthorization)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.run.v2.BinaryAuthorization)
  private static final com.google.cloud.run.v2.BinaryAuthorization DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.run.v2.BinaryAuthorization();
  }

  public static com.google.cloud.run.v2.BinaryAuthorization getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BinaryAuthorization> PARSER =
      new com.google.protobuf.AbstractParser<BinaryAuthorization>() {
        @java.lang.Override
        public BinaryAuthorization parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<BinaryAuthorization> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BinaryAuthorization> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.run.v2.BinaryAuthorization getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
