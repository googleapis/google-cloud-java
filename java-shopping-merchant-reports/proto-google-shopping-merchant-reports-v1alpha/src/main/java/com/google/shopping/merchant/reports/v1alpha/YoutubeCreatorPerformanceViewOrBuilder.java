/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/reports/v1alpha/reports.proto

// Protobuf Java Version: 3.25.8
package com.google.shopping.merchant.reports.v1alpha;

public interface YoutubeCreatorPerformanceViewOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.merchant.reports.v1alpha.YoutubeCreatorPerformanceView)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Date in the merchant timezone to which metrics apply. Segment.
   *
   * Condition on `date` is required in the `WHERE` clause.
   * </pre>
   *
   * <code>.google.type.Date date = 1;</code>
   *
   * @return Whether the date field is set.
   */
  boolean hasDate();

  /**
   *
   *
   * <pre>
   * Date in the merchant timezone to which metrics apply. Segment.
   *
   * Condition on `date` is required in the `WHERE` clause.
   * </pre>
   *
   * <code>.google.type.Date date = 1;</code>
   *
   * @return The date.
   */
  com.google.type.Date getDate();

  /**
   *
   *
   * <pre>
   * Date in the merchant timezone to which metrics apply. Segment.
   *
   * Condition on `date` is required in the `WHERE` clause.
   * </pre>
   *
   * <code>.google.type.Date date = 1;</code>
   */
  com.google.type.DateOrBuilder getDateOrBuilder();

  /**
   *
   *
   * <pre>
   * The title of the creator channel.
   * </pre>
   *
   * <code>optional string title = 2;</code>
   *
   * @return Whether the title field is set.
   */
  boolean hasTitle();

  /**
   *
   *
   * <pre>
   * The title of the creator channel.
   * </pre>
   *
   * <code>optional string title = 2;</code>
   *
   * @return The title.
   */
  java.lang.String getTitle();

  /**
   *
   *
   * <pre>
   * The title of the creator channel.
   * </pre>
   *
   * <code>optional string title = 2;</code>
   *
   * @return The bytes for title.
   */
  com.google.protobuf.ByteString getTitleBytes();

  /**
   *
   *
   * <pre>
   * The id for the creator channel.
   * </pre>
   *
   * <code>optional string channel_id = 3;</code>
   *
   * @return Whether the channelId field is set.
   */
  boolean hasChannelId();

  /**
   *
   *
   * <pre>
   * The id for the creator channel.
   * </pre>
   *
   * <code>optional string channel_id = 3;</code>
   *
   * @return The channelId.
   */
  java.lang.String getChannelId();

  /**
   *
   *
   * <pre>
   * The id for the creator channel.
   * </pre>
   *
   * <code>optional string channel_id = 3;</code>
   *
   * @return The bytes for channelId.
   */
  com.google.protobuf.ByteString getChannelIdBytes();

  /**
   *
   *
   * <pre>
   * The gross sales amount, before refunds.
   * </pre>
   *
   * <code>optional .google.shopping.type.Price gross_sales = 4;</code>
   *
   * @return Whether the grossSales field is set.
   */
  boolean hasGrossSales();

  /**
   *
   *
   * <pre>
   * The gross sales amount, before refunds.
   * </pre>
   *
   * <code>optional .google.shopping.type.Price gross_sales = 4;</code>
   *
   * @return The grossSales.
   */
  com.google.shopping.type.Price getGrossSales();

  /**
   *
   *
   * <pre>
   * The gross sales amount, before refunds.
   * </pre>
   *
   * <code>optional .google.shopping.type.Price gross_sales = 4;</code>
   */
  com.google.shopping.type.PriceOrBuilder getGrossSalesOrBuilder();

  /**
   *
   *
   * <pre>
   * The commissions amount (pending and paid).
   * </pre>
   *
   * <code>optional .google.shopping.type.Price commissions = 5;</code>
   *
   * @return Whether the commissions field is set.
   */
  boolean hasCommissions();

  /**
   *
   *
   * <pre>
   * The commissions amount (pending and paid).
   * </pre>
   *
   * <code>optional .google.shopping.type.Price commissions = 5;</code>
   *
   * @return The commissions.
   */
  com.google.shopping.type.Price getCommissions();

  /**
   *
   *
   * <pre>
   * The commissions amount (pending and paid).
   * </pre>
   *
   * <code>optional .google.shopping.type.Price commissions = 5;</code>
   */
  com.google.shopping.type.PriceOrBuilder getCommissionsOrBuilder();

  /**
   *
   *
   * <pre>
   * The number of orders.
   * </pre>
   *
   * <code>optional int64 orders = 6;</code>
   *
   * @return Whether the orders field is set.
   */
  boolean hasOrders();

  /**
   *
   *
   * <pre>
   * The number of orders.
   * </pre>
   *
   * <code>optional int64 orders = 6;</code>
   *
   * @return The orders.
   */
  long getOrders();

  /**
   *
   *
   * <pre>
   * The number of YouTube views.
   * </pre>
   *
   * <code>optional int64 views = 7;</code>
   *
   * @return Whether the views field is set.
   */
  boolean hasViews();

  /**
   *
   *
   * <pre>
   * The number of YouTube views.
   * </pre>
   *
   * <code>optional int64 views = 7;</code>
   *
   * @return The views.
   */
  long getViews();

  /**
   *
   *
   * <pre>
   * The number of product clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 8;</code>
   *
   * @return Whether the clicks field is set.
   */
  boolean hasClicks();

  /**
   *
   *
   * <pre>
   * The number of product clicks.
   * </pre>
   *
   * <code>optional int64 clicks = 8;</code>
   *
   * @return The clicks.
   */
  long getClicks();

  /**
   *
   *
   * <pre>
   * The net sales amount (includes both purchase and refunds).
   * </pre>
   *
   * <code>optional .google.shopping.type.Price net_sales = 9;</code>
   *
   * @return Whether the netSales field is set.
   */
  boolean hasNetSales();

  /**
   *
   *
   * <pre>
   * The net sales amount (includes both purchase and refunds).
   * </pre>
   *
   * <code>optional .google.shopping.type.Price net_sales = 9;</code>
   *
   * @return The netSales.
   */
  com.google.shopping.type.Price getNetSales();

  /**
   *
   *
   * <pre>
   * The net sales amount (includes both purchase and refunds).
   * </pre>
   *
   * <code>optional .google.shopping.type.Price net_sales = 9;</code>
   */
  com.google.shopping.type.PriceOrBuilder getNetSalesOrBuilder();
}
