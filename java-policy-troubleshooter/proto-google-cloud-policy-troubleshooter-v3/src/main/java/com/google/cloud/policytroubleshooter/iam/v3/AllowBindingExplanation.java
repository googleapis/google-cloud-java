/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.policytroubleshooter.iam.v3;

/**
 *
 *
 * <pre>
 * Details about how a role binding in an allow policy affects a principal's
 * ability to use a permission.
 * </pre>
 *
 * Protobuf type {@code google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation}
 */
public final class AllowBindingExplanation extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation)
    AllowBindingExplanationOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AllowBindingExplanation.newBuilder() to construct.
  private AllowBindingExplanation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AllowBindingExplanation() {
    allowAccessState_ = 0;
    role_ = "";
    rolePermission_ = 0;
    rolePermissionRelevance_ = 0;
    relevance_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AllowBindingExplanation();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
        .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 6:
        return internalGetMemberships();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
        .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.class,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.Builder.class);
  }

  public interface AnnotatedAllowMembershipOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Indicates whether the role binding includes the principal.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
     * </code>
     *
     * @return The enum numeric value on the wire for membership.
     */
    int getMembershipValue();
    /**
     *
     *
     * <pre>
     * Indicates whether the role binding includes the principal.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
     * </code>
     *
     * @return The membership.
     */
    com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState getMembership();

    /**
     *
     *
     * <pre>
     * The relevance of the principal's status to the overall determination for
     * the role binding.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
     *
     * @return The enum numeric value on the wire for relevance.
     */
    int getRelevanceValue();
    /**
     *
     *
     * <pre>
     * The relevance of the principal's status to the overall determination for
     * the role binding.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
     *
     * @return The relevance.
     */
    com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance getRelevance();
  }
  /**
   *
   *
   * <pre>
   * Details about whether the role binding includes the principal.
   * </pre>
   *
   * Protobuf type {@code
   * google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership}
   */
  public static final class AnnotatedAllowMembership extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership)
      AnnotatedAllowMembershipOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use AnnotatedAllowMembership.newBuilder() to construct.
    private AnnotatedAllowMembership(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private AnnotatedAllowMembership() {
      membership_ = 0;
      relevance_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new AnnotatedAllowMembership();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
          .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_AnnotatedAllowMembership_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
          .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_AnnotatedAllowMembership_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership.class,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership.Builder.class);
    }

    public static final int MEMBERSHIP_FIELD_NUMBER = 1;
    private int membership_ = 0;
    /**
     *
     *
     * <pre>
     * Indicates whether the role binding includes the principal.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
     * </code>
     *
     * @return The enum numeric value on the wire for membership.
     */
    @java.lang.Override
    public int getMembershipValue() {
      return membership_;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether the role binding includes the principal.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
     * </code>
     *
     * @return The membership.
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState getMembership() {
      com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState result =
          com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState.forNumber(
              membership_);
      return result == null
          ? com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState.UNRECOGNIZED
          : result;
    }

    public static final int RELEVANCE_FIELD_NUMBER = 2;
    private int relevance_ = 0;
    /**
     *
     *
     * <pre>
     * The relevance of the principal's status to the overall determination for
     * the role binding.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
     *
     * @return The enum numeric value on the wire for relevance.
     */
    @java.lang.Override
    public int getRelevanceValue() {
      return relevance_;
    }
    /**
     *
     *
     * <pre>
     * The relevance of the principal's status to the overall determination for
     * the role binding.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
     *
     * @return The relevance.
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance getRelevance() {
      com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance result =
          com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.forNumber(relevance_);
      return result == null
          ? com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.UNRECOGNIZED
          : result;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (membership_
          != com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState
              .MEMBERSHIP_MATCHING_STATE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(1, membership_);
      }
      if (relevance_
          != com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
              .HEURISTIC_RELEVANCE_UNSPECIFIED
              .getNumber()) {
        output.writeEnum(2, relevance_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (membership_
          != com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState
              .MEMBERSHIP_MATCHING_STATE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, membership_);
      }
      if (relevance_
          != com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
              .HEURISTIC_RELEVANCE_UNSPECIFIED
              .getNumber()) {
        size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, relevance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership)) {
        return super.equals(obj);
      }
      com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership
          other =
              (com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                      .AnnotatedAllowMembership)
                  obj;

      if (membership_ != other.membership_) return false;
      if (relevance_ != other.relevance_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MEMBERSHIP_FIELD_NUMBER;
      hash = (53 * hash) + membership_;
      hash = (37 * hash) + RELEVANCE_FIELD_NUMBER;
      hash = (53 * hash) + relevance_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Details about whether the role binding includes the principal.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership)
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembershipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
            .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_AnnotatedAllowMembership_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
            .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_AnnotatedAllowMembership_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership.class,
                com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership.Builder.class);
      }

      // Construct using
      // com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        membership_ = 0;
        relevance_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
            .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_AnnotatedAllowMembership_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership
          getDefaultInstanceForType() {
        return com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership
          build() {
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership
            result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership
          buildPartial() {
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership
            result =
                new com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership
              result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.membership_ = membership_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.relevance_ = relevance_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership) {
          return mergeFrom(
              (com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                      .AnnotatedAllowMembership)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership
              other) {
        if (other
            == com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.getDefaultInstance()) return this;
        if (other.membership_ != 0) {
          setMembershipValue(other.getMembershipValue());
        }
        if (other.relevance_ != 0) {
          setRelevanceValue(other.getRelevanceValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8:
                {
                  membership_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
              case 16:
                {
                  relevance_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private int membership_ = 0;
      /**
       *
       *
       * <pre>
       * Indicates whether the role binding includes the principal.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
       * </code>
       *
       * @return The enum numeric value on the wire for membership.
       */
      @java.lang.Override
      public int getMembershipValue() {
        return membership_;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether the role binding includes the principal.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
       * </code>
       *
       * @param value The enum numeric value on the wire for membership to set.
       * @return This builder for chaining.
       */
      public Builder setMembershipValue(int value) {
        membership_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether the role binding includes the principal.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
       * </code>
       *
       * @return The membership.
       */
      @java.lang.Override
      public com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState getMembership() {
        com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState result =
            com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState.forNumber(
                membership_);
        return result == null
            ? com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether the role binding includes the principal.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
       * </code>
       *
       * @param value The membership to set.
       * @return This builder for chaining.
       */
      public Builder setMembership(
          com.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        membership_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether the role binding includes the principal.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.MembershipMatchingState membership = 1;
       * </code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMembership() {
        bitField0_ = (bitField0_ & ~0x00000001);
        membership_ = 0;
        onChanged();
        return this;
      }

      private int relevance_ = 0;
      /**
       *
       *
       * <pre>
       * The relevance of the principal's status to the overall determination for
       * the role binding.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
       *
       * @return The enum numeric value on the wire for relevance.
       */
      @java.lang.Override
      public int getRelevanceValue() {
        return relevance_;
      }
      /**
       *
       *
       * <pre>
       * The relevance of the principal's status to the overall determination for
       * the role binding.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
       *
       * @param value The enum numeric value on the wire for relevance to set.
       * @return This builder for chaining.
       */
      public Builder setRelevanceValue(int value) {
        relevance_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The relevance of the principal's status to the overall determination for
       * the role binding.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
       *
       * @return The relevance.
       */
      @java.lang.Override
      public com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance getRelevance() {
        com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance result =
            com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.forNumber(relevance_);
        return result == null
            ? com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.UNRECOGNIZED
            : result;
      }
      /**
       *
       *
       * <pre>
       * The relevance of the principal's status to the overall determination for
       * the role binding.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
       *
       * @param value The relevance to set.
       * @return This builder for chaining.
       */
      public Builder setRelevance(
          com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        relevance_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The relevance of the principal's status to the overall determination for
       * the role binding.
       * </pre>
       *
       * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearRelevance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        relevance_ = 0;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership)
    private static final com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership();
    }

    public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnnotatedAllowMembership> PARSER =
        new com.google.protobuf.AbstractParser<AnnotatedAllowMembership>() {
          @java.lang.Override
          public AnnotatedAllowMembership parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<AnnotatedAllowMembership> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnnotatedAllowMembership> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int ALLOW_ACCESS_STATE_FIELD_NUMBER = 1;
  private int allowAccessState_ = 0;
  /**
   *
   *
   * <pre>
   * Required. Indicates whether _this role binding_ gives the specified
   * permission to the specified principal on the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission on the resource. There might be another role binding that
   * overrides this role binding. To determine whether the principal actually
   * has the permission, use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for allowAccessState.
   */
  @java.lang.Override
  public int getAllowAccessStateValue() {
    return allowAccessState_;
  }
  /**
   *
   *
   * <pre>
   * Required. Indicates whether _this role binding_ gives the specified
   * permission to the specified principal on the specified resource.
   *
   * This field does _not_ indicate whether the principal actually has the
   * permission on the resource. There might be another role binding that
   * overrides this role binding. To determine whether the principal actually
   * has the permission, use the `overall_access_state` field in the
   * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The allowAccessState.
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState getAllowAccessState() {
    com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState result =
        com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState.forNumber(allowAccessState_);
    return result == null
        ? com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState.UNRECOGNIZED
        : result;
  }

  public static final int ROLE_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object role_ = "";
  /**
   *
   *
   * <pre>
   * The role that this role binding grants. For example,
   * `roles/compute.admin`.
   *
   * For a complete list of predefined IAM roles, as well as the permissions in
   * each role, see https://cloud.google.com/iam/help/roles/reference.
   * </pre>
   *
   * <code>string role = 2;</code>
   *
   * @return The role.
   */
  @java.lang.Override
  public java.lang.String getRole() {
    java.lang.Object ref = role_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      role_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The role that this role binding grants. For example,
   * `roles/compute.admin`.
   *
   * For a complete list of predefined IAM roles, as well as the permissions in
   * each role, see https://cloud.google.com/iam/help/roles/reference.
   * </pre>
   *
   * <code>string role = 2;</code>
   *
   * @return The bytes for role.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRoleBytes() {
    java.lang.Object ref = role_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      role_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROLE_PERMISSION_FIELD_NUMBER = 3;
  private int rolePermission_ = 0;
  /**
   *
   *
   * <pre>
   * Indicates whether the role granted by this role binding contains the
   * specified permission.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
   * </code>
   *
   * @return The enum numeric value on the wire for rolePermission.
   */
  @java.lang.Override
  public int getRolePermissionValue() {
    return rolePermission_;
  }
  /**
   *
   *
   * <pre>
   * Indicates whether the role granted by this role binding contains the
   * specified permission.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
   * </code>
   *
   * @return The rolePermission.
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState
      getRolePermission() {
    com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState result =
        com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState.forNumber(
            rolePermission_);
    return result == null
        ? com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState.UNRECOGNIZED
        : result;
  }

  public static final int ROLE_PERMISSION_RELEVANCE_FIELD_NUMBER = 4;
  private int rolePermissionRelevance_ = 0;
  /**
   *
   *
   * <pre>
   * The relevance of the permission's existence, or nonexistence, in the role
   * to the overall determination for the entire policy.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
   * </code>
   *
   * @return The enum numeric value on the wire for rolePermissionRelevance.
   */
  @java.lang.Override
  public int getRolePermissionRelevanceValue() {
    return rolePermissionRelevance_;
  }
  /**
   *
   *
   * <pre>
   * The relevance of the permission's existence, or nonexistence, in the role
   * to the overall determination for the entire policy.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
   * </code>
   *
   * @return The rolePermissionRelevance.
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
      getRolePermissionRelevance() {
    com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance result =
        com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.forNumber(
            rolePermissionRelevance_);
    return result == null
        ? com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.UNRECOGNIZED
        : result;
  }

  public static final int COMBINED_MEMBERSHIP_FIELD_NUMBER = 5;
  private com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
          .AnnotatedAllowMembership
      combinedMembership_;
  /**
   *
   *
   * <pre>
   * The combined result of all memberships. Indicates if the principal is
   * included in any role binding, either directly or indirectly.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
   * </code>
   *
   * @return Whether the combinedMembership field is set.
   */
  @java.lang.Override
  public boolean hasCombinedMembership() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The combined result of all memberships. Indicates if the principal is
   * included in any role binding, either directly or indirectly.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
   * </code>
   *
   * @return The combinedMembership.
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
          .AnnotatedAllowMembership
      getCombinedMembership() {
    return combinedMembership_ == null
        ? com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership.getDefaultInstance()
        : combinedMembership_;
  }
  /**
   *
   *
   * <pre>
   * The combined result of all memberships. Indicates if the principal is
   * included in any role binding, either directly or indirectly.
   * </pre>
   *
   * <code>
   * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
          .AnnotatedAllowMembershipOrBuilder
      getCombinedMembershipOrBuilder() {
    return combinedMembership_ == null
        ? com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership.getDefaultInstance()
        : combinedMembership_;
  }

  public static final int MEMBERSHIPS_FIELD_NUMBER = 6;

  private static final class MembershipsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        defaultEntry =
            com.google.protobuf.MapEntry
                .<java.lang.String,
                    com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                        .AnnotatedAllowMembership>
                    newDefaultInstance(
                        com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
                            .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_MembershipsEntry_descriptor,
                        com.google.protobuf.WireFormat.FieldType.STRING,
                        "",
                        com.google.protobuf.WireFormat.FieldType.MESSAGE,
                        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                            .AnnotatedAllowMembership.getDefaultInstance());
  }

  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
          java.lang.String,
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership>
      memberships_;

  private com.google.protobuf.MapField<
          java.lang.String,
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership>
      internalGetMemberships() {
    if (memberships_ == null) {
      return com.google.protobuf.MapField.emptyMapField(MembershipsDefaultEntryHolder.defaultEntry);
    }
    return memberships_;
  }

  public int getMembershipsCount() {
    return internalGetMemberships().getMap().size();
  }
  /**
   *
   *
   * <pre>
   * Indicates whether each role binding includes the principal specified in the
   * request, either directly or indirectly. Each key identifies a principal in
   * the role binding, and each value indicates whether the principal in the
   * role binding includes the principal in the request.
   *
   * For example, suppose that a role binding includes the following principals:
   *
   * * `user:alice&#64;example.com`
   * * `group:product-eng&#64;example.com`
   *
   * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
   * member of the group `group:product-eng&#64;example.com`.
   *
   * For the first principal in the role binding, the key is
   * `user:alice&#64;example.com`, and the `membership` field in the value is set to
   * `NOT_INCLUDED`.
   *
   * For the second principal in the role binding, the key is
   * `group:product-eng&#64;example.com`, and the `membership` field in the value is
   * set to `INCLUDED`.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
   * </code>
   */
  @java.lang.Override
  public boolean containsMemberships(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    return internalGetMemberships().getMap().containsKey(key);
  }
  /** Use {@link #getMembershipsMap()} instead. */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<
          java.lang.String,
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership>
      getMemberships() {
    return getMembershipsMap();
  }
  /**
   *
   *
   * <pre>
   * Indicates whether each role binding includes the principal specified in the
   * request, either directly or indirectly. Each key identifies a principal in
   * the role binding, and each value indicates whether the principal in the
   * role binding includes the principal in the request.
   *
   * For example, suppose that a role binding includes the following principals:
   *
   * * `user:alice&#64;example.com`
   * * `group:product-eng&#64;example.com`
   *
   * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
   * member of the group `group:product-eng&#64;example.com`.
   *
   * For the first principal in the role binding, the key is
   * `user:alice&#64;example.com`, and the `membership` field in the value is set to
   * `NOT_INCLUDED`.
   *
   * For the second principal in the role binding, the key is
   * `group:product-eng&#64;example.com`, and the `membership` field in the value is
   * set to `INCLUDED`.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
   * </code>
   */
  @java.lang.Override
  public java.util.Map<
          java.lang.String,
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership>
      getMembershipsMap() {
    return internalGetMemberships().getMap();
  }
  /**
   *
   *
   * <pre>
   * Indicates whether each role binding includes the principal specified in the
   * request, either directly or indirectly. Each key identifies a principal in
   * the role binding, and each value indicates whether the principal in the
   * role binding includes the principal in the request.
   *
   * For example, suppose that a role binding includes the following principals:
   *
   * * `user:alice&#64;example.com`
   * * `group:product-eng&#64;example.com`
   *
   * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
   * member of the group `group:product-eng&#64;example.com`.
   *
   * For the first principal in the role binding, the key is
   * `user:alice&#64;example.com`, and the `membership` field in the value is set to
   * `NOT_INCLUDED`.
   *
   * For the second principal in the role binding, the key is
   * `group:product-eng&#64;example.com`, and the `membership` field in the value is
   * set to `INCLUDED`.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
   * </code>
   */
  @java.lang.Override
  public /* nullable */ com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
          .AnnotatedAllowMembership
      getMembershipsOrDefault(
          java.lang.String key,
          /* nullable */
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership
              defaultValue) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        map = internalGetMemberships().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   *
   *
   * <pre>
   * Indicates whether each role binding includes the principal specified in the
   * request, either directly or indirectly. Each key identifies a principal in
   * the role binding, and each value indicates whether the principal in the
   * role binding includes the principal in the request.
   *
   * For example, suppose that a role binding includes the following principals:
   *
   * * `user:alice&#64;example.com`
   * * `group:product-eng&#64;example.com`
   *
   * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
   * member of the group `group:product-eng&#64;example.com`.
   *
   * For the first principal in the role binding, the key is
   * `user:alice&#64;example.com`, and the `membership` field in the value is set to
   * `NOT_INCLUDED`.
   *
   * For the second principal in the role binding, the key is
   * `group:product-eng&#64;example.com`, and the `membership` field in the value is
   * set to `INCLUDED`.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
          .AnnotatedAllowMembership
      getMembershipsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new NullPointerException("map key");
    }
    java.util.Map<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        map = internalGetMemberships().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int RELEVANCE_FIELD_NUMBER = 7;
  private int relevance_ = 0;
  /**
   *
   *
   * <pre>
   * The relevance of this role binding to the overall determination for the
   * entire policy.
   * </pre>
   *
   * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
   *
   * @return The enum numeric value on the wire for relevance.
   */
  @java.lang.Override
  public int getRelevanceValue() {
    return relevance_;
  }
  /**
   *
   *
   * <pre>
   * The relevance of this role binding to the overall determination for the
   * entire policy.
   * </pre>
   *
   * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
   *
   * @return The relevance.
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance getRelevance() {
    com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance result =
        com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.forNumber(relevance_);
    return result == null
        ? com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.UNRECOGNIZED
        : result;
  }

  public static final int CONDITION_FIELD_NUMBER = 8;
  private com.google.type.Expr condition_;
  /**
   *
   *
   * <pre>
   * A condition expression that specifies when the role binding grants access.
   *
   * To learn about IAM Conditions, see
   * https://cloud.google.com/iam/help/conditions/overview.
   * </pre>
   *
   * <code>.google.type.Expr condition = 8;</code>
   *
   * @return Whether the condition field is set.
   */
  @java.lang.Override
  public boolean hasCondition() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * A condition expression that specifies when the role binding grants access.
   *
   * To learn about IAM Conditions, see
   * https://cloud.google.com/iam/help/conditions/overview.
   * </pre>
   *
   * <code>.google.type.Expr condition = 8;</code>
   *
   * @return The condition.
   */
  @java.lang.Override
  public com.google.type.Expr getCondition() {
    return condition_ == null ? com.google.type.Expr.getDefaultInstance() : condition_;
  }
  /**
   *
   *
   * <pre>
   * A condition expression that specifies when the role binding grants access.
   *
   * To learn about IAM Conditions, see
   * https://cloud.google.com/iam/help/conditions/overview.
   * </pre>
   *
   * <code>.google.type.Expr condition = 8;</code>
   */
  @java.lang.Override
  public com.google.type.ExprOrBuilder getConditionOrBuilder() {
    return condition_ == null ? com.google.type.Expr.getDefaultInstance() : condition_;
  }

  public static final int CONDITION_EXPLANATION_FIELD_NUMBER = 9;
  private com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation conditionExplanation_;
  /**
   *
   *
   * <pre>
   * Condition evaluation state for this role binding.
   * </pre>
   *
   * <code>.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
   * </code>
   *
   * @return Whether the conditionExplanation field is set.
   */
  @java.lang.Override
  public boolean hasConditionExplanation() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Condition evaluation state for this role binding.
   * </pre>
   *
   * <code>.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
   * </code>
   *
   * @return The conditionExplanation.
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation
      getConditionExplanation() {
    return conditionExplanation_ == null
        ? com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.getDefaultInstance()
        : conditionExplanation_;
  }
  /**
   *
   *
   * <pre>
   * Condition evaluation state for this role binding.
   * </pre>
   *
   * <code>.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanationOrBuilder
      getConditionExplanationOrBuilder() {
    return conditionExplanation_ == null
        ? com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.getDefaultInstance()
        : conditionExplanation_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (allowAccessState_
        != com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState
            .ALLOW_ACCESS_STATE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(1, allowAccessState_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(role_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, role_);
    }
    if (rolePermission_
        != com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState
            .ROLE_PERMISSION_INCLUSION_STATE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(3, rolePermission_);
    }
    if (rolePermissionRelevance_
        != com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
            .HEURISTIC_RELEVANCE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(4, rolePermissionRelevance_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(5, getCombinedMembership());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetMemberships(), MembershipsDefaultEntryHolder.defaultEntry, 6);
    if (relevance_
        != com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
            .HEURISTIC_RELEVANCE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(7, relevance_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(8, getCondition());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(9, getConditionExplanation());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (allowAccessState_
        != com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState
            .ALLOW_ACCESS_STATE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, allowAccessState_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(role_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, role_);
    }
    if (rolePermission_
        != com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState
            .ROLE_PERMISSION_INCLUSION_STATE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, rolePermission_);
    }
    if (rolePermissionRelevance_
        != com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
            .HEURISTIC_RELEVANCE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, rolePermissionRelevance_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getCombinedMembership());
    }
    for (java.util.Map.Entry<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        entry : internalGetMemberships().getMap().entrySet()) {
      com.google.protobuf.MapEntry<
              java.lang.String,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership>
          memberships__ =
              MembershipsDefaultEntryHolder.defaultEntry
                  .newBuilderForType()
                  .setKey(entry.getKey())
                  .setValue(entry.getValue())
                  .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, memberships__);
    }
    if (relevance_
        != com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
            .HEURISTIC_RELEVANCE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(7, relevance_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getCondition());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(9, getConditionExplanation());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation)) {
      return super.equals(obj);
    }
    com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation other =
        (com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation) obj;

    if (allowAccessState_ != other.allowAccessState_) return false;
    if (!getRole().equals(other.getRole())) return false;
    if (rolePermission_ != other.rolePermission_) return false;
    if (rolePermissionRelevance_ != other.rolePermissionRelevance_) return false;
    if (hasCombinedMembership() != other.hasCombinedMembership()) return false;
    if (hasCombinedMembership()) {
      if (!getCombinedMembership().equals(other.getCombinedMembership())) return false;
    }
    if (!internalGetMemberships().equals(other.internalGetMemberships())) return false;
    if (relevance_ != other.relevance_) return false;
    if (hasCondition() != other.hasCondition()) return false;
    if (hasCondition()) {
      if (!getCondition().equals(other.getCondition())) return false;
    }
    if (hasConditionExplanation() != other.hasConditionExplanation()) return false;
    if (hasConditionExplanation()) {
      if (!getConditionExplanation().equals(other.getConditionExplanation())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ALLOW_ACCESS_STATE_FIELD_NUMBER;
    hash = (53 * hash) + allowAccessState_;
    hash = (37 * hash) + ROLE_FIELD_NUMBER;
    hash = (53 * hash) + getRole().hashCode();
    hash = (37 * hash) + ROLE_PERMISSION_FIELD_NUMBER;
    hash = (53 * hash) + rolePermission_;
    hash = (37 * hash) + ROLE_PERMISSION_RELEVANCE_FIELD_NUMBER;
    hash = (53 * hash) + rolePermissionRelevance_;
    if (hasCombinedMembership()) {
      hash = (37 * hash) + COMBINED_MEMBERSHIP_FIELD_NUMBER;
      hash = (53 * hash) + getCombinedMembership().hashCode();
    }
    if (!internalGetMemberships().getMap().isEmpty()) {
      hash = (37 * hash) + MEMBERSHIPS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMemberships().hashCode();
    }
    hash = (37 * hash) + RELEVANCE_FIELD_NUMBER;
    hash = (53 * hash) + relevance_;
    if (hasCondition()) {
      hash = (37 * hash) + CONDITION_FIELD_NUMBER;
      hash = (53 * hash) + getCondition().hashCode();
    }
    if (hasConditionExplanation()) {
      hash = (37 * hash) + CONDITION_EXPLANATION_FIELD_NUMBER;
      hash = (53 * hash) + getConditionExplanation().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Details about how a role binding in an allow policy affects a principal's
   * ability to use a permission.
   * </pre>
   *
   * Protobuf type {@code google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation)
      com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
          .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 6:
          return internalGetMemberships();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableMemberships();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
          .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.class,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.Builder.class);
    }

    // Construct using
    // com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getCombinedMembershipFieldBuilder();
        getConditionFieldBuilder();
        getConditionExplanationFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      allowAccessState_ = 0;
      role_ = "";
      rolePermission_ = 0;
      rolePermissionRelevance_ = 0;
      combinedMembership_ = null;
      if (combinedMembershipBuilder_ != null) {
        combinedMembershipBuilder_.dispose();
        combinedMembershipBuilder_ = null;
      }
      internalGetMutableMemberships().clear();
      relevance_ = 0;
      condition_ = null;
      if (conditionBuilder_ != null) {
        conditionBuilder_.dispose();
        conditionBuilder_ = null;
      }
      conditionExplanation_ = null;
      if (conditionExplanationBuilder_ != null) {
        conditionExplanationBuilder_.dispose();
        conditionExplanationBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.policytroubleshooter.iam.v3.TroubleshooterProto
          .internal_static_google_cloud_policytroubleshooter_iam_v3_AllowBindingExplanation_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
        getDefaultInstanceForType() {
      return com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation build() {
      com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation buildPartial() {
      com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation result =
          new com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.allowAccessState_ = allowAccessState_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.role_ = role_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.rolePermission_ = rolePermission_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.rolePermissionRelevance_ = rolePermissionRelevance_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.combinedMembership_ =
            combinedMembershipBuilder_ == null
                ? combinedMembership_
                : combinedMembershipBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.memberships_ =
            internalGetMemberships().build(MembershipsDefaultEntryHolder.defaultEntry);
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.relevance_ = relevance_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.condition_ = conditionBuilder_ == null ? condition_ : conditionBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.conditionExplanation_ =
            conditionExplanationBuilder_ == null
                ? conditionExplanation_
                : conditionExplanationBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation) {
        return mergeFrom(
            (com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation other) {
      if (other
          == com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .getDefaultInstance()) return this;
      if (other.allowAccessState_ != 0) {
        setAllowAccessStateValue(other.getAllowAccessStateValue());
      }
      if (!other.getRole().isEmpty()) {
        role_ = other.role_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.rolePermission_ != 0) {
        setRolePermissionValue(other.getRolePermissionValue());
      }
      if (other.rolePermissionRelevance_ != 0) {
        setRolePermissionRelevanceValue(other.getRolePermissionRelevanceValue());
      }
      if (other.hasCombinedMembership()) {
        mergeCombinedMembership(other.getCombinedMembership());
      }
      internalGetMutableMemberships().mergeFrom(other.internalGetMemberships());
      bitField0_ |= 0x00000020;
      if (other.relevance_ != 0) {
        setRelevanceValue(other.getRelevanceValue());
      }
      if (other.hasCondition()) {
        mergeCondition(other.getCondition());
      }
      if (other.hasConditionExplanation()) {
        mergeConditionExplanation(other.getConditionExplanation());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                allowAccessState_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
            case 18:
              {
                role_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 24:
              {
                rolePermission_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 32:
              {
                rolePermissionRelevance_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            case 42:
              {
                input.readMessage(
                    getCombinedMembershipFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            case 50:
              {
                com.google.protobuf.MapEntry<
                        java.lang.String,
                        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                            .AnnotatedAllowMembership>
                    memberships__ =
                        input.readMessage(
                            MembershipsDefaultEntryHolder.defaultEntry.getParserForType(),
                            extensionRegistry);
                internalGetMutableMemberships()
                    .ensureBuilderMap()
                    .put(memberships__.getKey(), memberships__.getValue());
                bitField0_ |= 0x00000020;
                break;
              } // case 50
            case 56:
              {
                relevance_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
            case 66:
              {
                input.readMessage(getConditionFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
            case 74:
              {
                input.readMessage(
                    getConditionExplanationFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private int allowAccessState_ = 0;
    /**
     *
     *
     * <pre>
     * Required. Indicates whether _this role binding_ gives the specified
     * permission to the specified principal on the specified resource.
     *
     * This field does _not_ indicate whether the principal actually has the
     * permission on the resource. There might be another role binding that
     * overrides this role binding. To determine whether the principal actually
     * has the permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for allowAccessState.
     */
    @java.lang.Override
    public int getAllowAccessStateValue() {
      return allowAccessState_;
    }
    /**
     *
     *
     * <pre>
     * Required. Indicates whether _this role binding_ gives the specified
     * permission to the specified principal on the specified resource.
     *
     * This field does _not_ indicate whether the principal actually has the
     * permission on the resource. There might be another role binding that
     * overrides this role binding. To determine whether the principal actually
     * has the permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for allowAccessState to set.
     * @return This builder for chaining.
     */
    public Builder setAllowAccessStateValue(int value) {
      allowAccessState_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Indicates whether _this role binding_ gives the specified
     * permission to the specified principal on the specified resource.
     *
     * This field does _not_ indicate whether the principal actually has the
     * permission on the resource. There might be another role binding that
     * overrides this role binding. To determine whether the principal actually
     * has the permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The allowAccessState.
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState getAllowAccessState() {
      com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState result =
          com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState.forNumber(
              allowAccessState_);
      return result == null
          ? com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. Indicates whether _this role binding_ gives the specified
     * permission to the specified principal on the specified resource.
     *
     * This field does _not_ indicate whether the principal actually has the
     * permission on the resource. There might be another role binding that
     * overrides this role binding. To determine whether the principal actually
     * has the permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The allowAccessState to set.
     * @return This builder for chaining.
     */
    public Builder setAllowAccessState(
        com.google.cloud.policytroubleshooter.iam.v3.AllowAccessState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      allowAccessState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Indicates whether _this role binding_ gives the specified
     * permission to the specified principal on the specified resource.
     *
     * This field does _not_ indicate whether the principal actually has the
     * permission on the resource. There might be another role binding that
     * overrides this role binding. To determine whether the principal actually
     * has the permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowAccessState allow_access_state = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAllowAccessState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      allowAccessState_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object role_ = "";
    /**
     *
     *
     * <pre>
     * The role that this role binding grants. For example,
     * `roles/compute.admin`.
     *
     * For a complete list of predefined IAM roles, as well as the permissions in
     * each role, see https://cloud.google.com/iam/help/roles/reference.
     * </pre>
     *
     * <code>string role = 2;</code>
     *
     * @return The role.
     */
    public java.lang.String getRole() {
      java.lang.Object ref = role_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        role_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The role that this role binding grants. For example,
     * `roles/compute.admin`.
     *
     * For a complete list of predefined IAM roles, as well as the permissions in
     * each role, see https://cloud.google.com/iam/help/roles/reference.
     * </pre>
     *
     * <code>string role = 2;</code>
     *
     * @return The bytes for role.
     */
    public com.google.protobuf.ByteString getRoleBytes() {
      java.lang.Object ref = role_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        role_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The role that this role binding grants. For example,
     * `roles/compute.admin`.
     *
     * For a complete list of predefined IAM roles, as well as the permissions in
     * each role, see https://cloud.google.com/iam/help/roles/reference.
     * </pre>
     *
     * <code>string role = 2;</code>
     *
     * @param value The role to set.
     * @return This builder for chaining.
     */
    public Builder setRole(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      role_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The role that this role binding grants. For example,
     * `roles/compute.admin`.
     *
     * For a complete list of predefined IAM roles, as well as the permissions in
     * each role, see https://cloud.google.com/iam/help/roles/reference.
     * </pre>
     *
     * <code>string role = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRole() {
      role_ = getDefaultInstance().getRole();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The role that this role binding grants. For example,
     * `roles/compute.admin`.
     *
     * For a complete list of predefined IAM roles, as well as the permissions in
     * each role, see https://cloud.google.com/iam/help/roles/reference.
     * </pre>
     *
     * <code>string role = 2;</code>
     *
     * @param value The bytes for role to set.
     * @return This builder for chaining.
     */
    public Builder setRoleBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      role_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int rolePermission_ = 0;
    /**
     *
     *
     * <pre>
     * Indicates whether the role granted by this role binding contains the
     * specified permission.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
     * </code>
     *
     * @return The enum numeric value on the wire for rolePermission.
     */
    @java.lang.Override
    public int getRolePermissionValue() {
      return rolePermission_;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether the role granted by this role binding contains the
     * specified permission.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
     * </code>
     *
     * @param value The enum numeric value on the wire for rolePermission to set.
     * @return This builder for chaining.
     */
    public Builder setRolePermissionValue(int value) {
      rolePermission_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether the role granted by this role binding contains the
     * specified permission.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
     * </code>
     *
     * @return The rolePermission.
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState
        getRolePermission() {
      com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState result =
          com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState.forNumber(
              rolePermission_);
      return result == null
          ? com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether the role granted by this role binding contains the
     * specified permission.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
     * </code>
     *
     * @param value The rolePermission to set.
     * @return This builder for chaining.
     */
    public Builder setRolePermission(
        com.google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      rolePermission_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether the role granted by this role binding contains the
     * specified permission.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.RolePermissionInclusionState role_permission = 3;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRolePermission() {
      bitField0_ = (bitField0_ & ~0x00000004);
      rolePermission_ = 0;
      onChanged();
      return this;
    }

    private int rolePermissionRelevance_ = 0;
    /**
     *
     *
     * <pre>
     * The relevance of the permission's existence, or nonexistence, in the role
     * to the overall determination for the entire policy.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
     * </code>
     *
     * @return The enum numeric value on the wire for rolePermissionRelevance.
     */
    @java.lang.Override
    public int getRolePermissionRelevanceValue() {
      return rolePermissionRelevance_;
    }
    /**
     *
     *
     * <pre>
     * The relevance of the permission's existence, or nonexistence, in the role
     * to the overall determination for the entire policy.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
     * </code>
     *
     * @param value The enum numeric value on the wire for rolePermissionRelevance to set.
     * @return This builder for chaining.
     */
    public Builder setRolePermissionRelevanceValue(int value) {
      rolePermissionRelevance_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The relevance of the permission's existence, or nonexistence, in the role
     * to the overall determination for the entire policy.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
     * </code>
     *
     * @return The rolePermissionRelevance.
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance
        getRolePermissionRelevance() {
      com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance result =
          com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.forNumber(
              rolePermissionRelevance_);
      return result == null
          ? com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The relevance of the permission's existence, or nonexistence, in the role
     * to the overall determination for the entire policy.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
     * </code>
     *
     * @param value The rolePermissionRelevance to set.
     * @return This builder for chaining.
     */
    public Builder setRolePermissionRelevance(
        com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      rolePermissionRelevance_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The relevance of the permission's existence, or nonexistence, in the role
     * to the overall determination for the entire policy.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance role_permission_relevance = 4;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRolePermissionRelevance() {
      bitField0_ = (bitField0_ & ~0x00000008);
      rolePermissionRelevance_ = 0;
      onChanged();
      return this;
    }

    private com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        combinedMembership_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.Builder,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembershipOrBuilder>
        combinedMembershipBuilder_;
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     *
     * @return Whether the combinedMembership field is set.
     */
    public boolean hasCombinedMembership() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     *
     * @return The combinedMembership.
     */
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        getCombinedMembership() {
      if (combinedMembershipBuilder_ == null) {
        return combinedMembership_ == null
            ? com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.getDefaultInstance()
            : combinedMembership_;
      } else {
        return combinedMembershipBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    public Builder setCombinedMembership(
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership
            value) {
      if (combinedMembershipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        combinedMembership_ = value;
      } else {
        combinedMembershipBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    public Builder setCombinedMembership(
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.Builder
            builderForValue) {
      if (combinedMembershipBuilder_ == null) {
        combinedMembership_ = builderForValue.build();
      } else {
        combinedMembershipBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    public Builder mergeCombinedMembership(
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership
            value) {
      if (combinedMembershipBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && combinedMembership_ != null
            && combinedMembership_
                != com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership.getDefaultInstance()) {
          getCombinedMembershipBuilder().mergeFrom(value);
        } else {
          combinedMembership_ = value;
        }
      } else {
        combinedMembershipBuilder_.mergeFrom(value);
      }
      if (combinedMembership_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    public Builder clearCombinedMembership() {
      bitField0_ = (bitField0_ & ~0x00000010);
      combinedMembership_ = null;
      if (combinedMembershipBuilder_ != null) {
        combinedMembershipBuilder_.dispose();
        combinedMembershipBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership.Builder
        getCombinedMembershipBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getCombinedMembershipFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembershipOrBuilder
        getCombinedMembershipOrBuilder() {
      if (combinedMembershipBuilder_ != null) {
        return combinedMembershipBuilder_.getMessageOrBuilder();
      } else {
        return combinedMembership_ == null
            ? com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.getDefaultInstance()
            : combinedMembership_;
      }
    }
    /**
     *
     *
     * <pre>
     * The combined result of all memberships. Indicates if the principal is
     * included in any role binding, either directly or indirectly.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership combined_membership = 5;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.Builder,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembershipOrBuilder>
        getCombinedMembershipFieldBuilder() {
      if (combinedMembershipBuilder_ == null) {
        combinedMembershipBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership,
                com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership.Builder,
                com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembershipOrBuilder>(
                getCombinedMembership(), getParentForChildren(), isClean());
        combinedMembership_ = null;
      }
      return combinedMembershipBuilder_;
    }

    private static final class MembershipsConverter
        implements com.google.protobuf.MapFieldBuilder.Converter<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembershipOrBuilder,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership> {
      @java.lang.Override
      public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership
          build(
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                      .AnnotatedAllowMembershipOrBuilder
                  val) {
        if (val
            instanceof
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership) {
          return (com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership)
              val;
        }
        return ((com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership.Builder)
                val)
            .build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<
              java.lang.String,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership>
          defaultEntry() {
        return MembershipsDefaultEntryHolder.defaultEntry;
      }
    };

    private static final MembershipsConverter membershipsConverter = new MembershipsConverter();

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembershipOrBuilder,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.Builder>
        memberships_;

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembershipOrBuilder,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.Builder>
        internalGetMemberships() {
      if (memberships_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(membershipsConverter);
      }
      return memberships_;
    }

    private com.google.protobuf.MapFieldBuilder<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembershipOrBuilder,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.Builder>
        internalGetMutableMemberships() {
      if (memberships_ == null) {
        memberships_ = new com.google.protobuf.MapFieldBuilder<>(membershipsConverter);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return memberships_;
    }

    public int getMembershipsCount() {
      return internalGetMemberships().ensureBuilderMap().size();
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    @java.lang.Override
    public boolean containsMemberships(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      return internalGetMemberships().ensureBuilderMap().containsKey(key);
    }
    /** Use {@link #getMembershipsMap()} instead. */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        getMemberships() {
      return getMembershipsMap();
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    @java.lang.Override
    public java.util.Map<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        getMembershipsMap() {
      return internalGetMemberships().getImmutableMap();
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    @java.lang.Override
    public /* nullable */ com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        getMembershipsOrDefault(
            java.lang.String key,
            /* nullable */
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership
                defaultValue) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembershipOrBuilder>
          map = internalGetMutableMemberships().ensureBuilderMap();
      return map.containsKey(key) ? membershipsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership
        getMembershipsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      java.util.Map<
              java.lang.String,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembershipOrBuilder>
          map = internalGetMutableMemberships().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return membershipsConverter.build(map.get(key));
    }

    public Builder clearMemberships() {
      bitField0_ = (bitField0_ & ~0x00000020);
      internalGetMutableMemberships().clear();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    public Builder removeMemberships(java.lang.String key) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      internalGetMutableMemberships().ensureBuilderMap().remove(key);
      return this;
    }
    /** Use alternate mutation accessors instead. */
    @java.lang.Deprecated
    public java.util.Map<
            java.lang.String,
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership>
        getMutableMemberships() {
      bitField0_ |= 0x00000020;
      return internalGetMutableMemberships().ensureMessageMap();
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    public Builder putMemberships(
        java.lang.String key,
        com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership
            value) {
      if (key == null) {
        throw new NullPointerException("map key");
      }
      if (value == null) {
        throw new NullPointerException("map value");
      }
      internalGetMutableMemberships().ensureBuilderMap().put(key, value);
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    public Builder putAllMemberships(
        java.util.Map<
                java.lang.String,
                com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                    .AnnotatedAllowMembership>
            values) {
      for (java.util.Map.Entry<
              java.lang.String,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembership>
          e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableMemberships().ensureBuilderMap().putAll(values);
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates whether each role binding includes the principal specified in the
     * request, either directly or indirectly. Each key identifies a principal in
     * the role binding, and each value indicates whether the principal in the
     * role binding includes the principal in the request.
     *
     * For example, suppose that a role binding includes the following principals:
     *
     * * `user:alice&#64;example.com`
     * * `group:product-eng&#64;example.com`
     *
     * You want to troubleshoot access for `user:bob&#64;example.com`. This user is a
     * member of the group `group:product-eng&#64;example.com`.
     *
     * For the first principal in the role binding, the key is
     * `user:alice&#64;example.com`, and the `membership` field in the value is set to
     * `NOT_INCLUDED`.
     *
     * For the second principal in the role binding, the key is
     * `group:product-eng&#64;example.com`, and the `membership` field in the value is
     * set to `INCLUDED`.
     * </pre>
     *
     * <code>
     * map&lt;string, .google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation.AnnotatedAllowMembership&gt; memberships = 6;
     * </code>
     */
    public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
            .AnnotatedAllowMembership.Builder
        putMembershipsBuilderIfAbsent(java.lang.String key) {
      java.util.Map<
              java.lang.String,
              com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                  .AnnotatedAllowMembershipOrBuilder>
          builderMap = internalGetMutableMemberships().ensureBuilderMap();
      com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembershipOrBuilder
          entry = builderMap.get(key);
      if (entry == null) {
        entry =
            com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                .AnnotatedAllowMembership.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry
          instanceof
          com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership) {
        entry =
            ((com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
                        .AnnotatedAllowMembership)
                    entry)
                .toBuilder();
        builderMap.put(key, entry);
      }
      return (com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
              .AnnotatedAllowMembership.Builder)
          entry;
    }

    private int relevance_ = 0;
    /**
     *
     *
     * <pre>
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
     *
     * @return The enum numeric value on the wire for relevance.
     */
    @java.lang.Override
    public int getRelevanceValue() {
      return relevance_;
    }
    /**
     *
     *
     * <pre>
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
     *
     * @param value The enum numeric value on the wire for relevance to set.
     * @return This builder for chaining.
     */
    public Builder setRelevanceValue(int value) {
      relevance_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
     *
     * @return The relevance.
     */
    @java.lang.Override
    public com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance getRelevance() {
      com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance result =
          com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.forNumber(relevance_);
      return result == null
          ? com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
     *
     * @param value The relevance to set.
     * @return This builder for chaining.
     */
    public Builder setRelevance(
        com.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      relevance_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     * </pre>
     *
     * <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRelevance() {
      bitField0_ = (bitField0_ & ~0x00000040);
      relevance_ = 0;
      onChanged();
      return this;
    }

    private com.google.type.Expr condition_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Expr, com.google.type.Expr.Builder, com.google.type.ExprOrBuilder>
        conditionBuilder_;
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     *
     * @return Whether the condition field is set.
     */
    public boolean hasCondition() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     *
     * @return The condition.
     */
    public com.google.type.Expr getCondition() {
      if (conditionBuilder_ == null) {
        return condition_ == null ? com.google.type.Expr.getDefaultInstance() : condition_;
      } else {
        return conditionBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    public Builder setCondition(com.google.type.Expr value) {
      if (conditionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        condition_ = value;
      } else {
        conditionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    public Builder setCondition(com.google.type.Expr.Builder builderForValue) {
      if (conditionBuilder_ == null) {
        condition_ = builderForValue.build();
      } else {
        conditionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    public Builder mergeCondition(com.google.type.Expr value) {
      if (conditionBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)
            && condition_ != null
            && condition_ != com.google.type.Expr.getDefaultInstance()) {
          getConditionBuilder().mergeFrom(value);
        } else {
          condition_ = value;
        }
      } else {
        conditionBuilder_.mergeFrom(value);
      }
      if (condition_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    public Builder clearCondition() {
      bitField0_ = (bitField0_ & ~0x00000080);
      condition_ = null;
      if (conditionBuilder_ != null) {
        conditionBuilder_.dispose();
        conditionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    public com.google.type.Expr.Builder getConditionBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getConditionFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    public com.google.type.ExprOrBuilder getConditionOrBuilder() {
      if (conditionBuilder_ != null) {
        return conditionBuilder_.getMessageOrBuilder();
      } else {
        return condition_ == null ? com.google.type.Expr.getDefaultInstance() : condition_;
      }
    }
    /**
     *
     *
     * <pre>
     * A condition expression that specifies when the role binding grants access.
     *
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     * </pre>
     *
     * <code>.google.type.Expr condition = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Expr, com.google.type.Expr.Builder, com.google.type.ExprOrBuilder>
        getConditionFieldBuilder() {
      if (conditionBuilder_ == null) {
        conditionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Expr, com.google.type.Expr.Builder, com.google.type.ExprOrBuilder>(
                getCondition(), getParentForChildren(), isClean());
        condition_ = null;
      }
      return conditionBuilder_;
    }

    private com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation conditionExplanation_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation,
            com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.Builder,
            com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanationOrBuilder>
        conditionExplanationBuilder_;
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     *
     * @return Whether the conditionExplanation field is set.
     */
    public boolean hasConditionExplanation() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     *
     * @return The conditionExplanation.
     */
    public com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation
        getConditionExplanation() {
      if (conditionExplanationBuilder_ == null) {
        return conditionExplanation_ == null
            ? com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.getDefaultInstance()
            : conditionExplanation_;
      } else {
        return conditionExplanationBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    public Builder setConditionExplanation(
        com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation value) {
      if (conditionExplanationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        conditionExplanation_ = value;
      } else {
        conditionExplanationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    public Builder setConditionExplanation(
        com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.Builder builderForValue) {
      if (conditionExplanationBuilder_ == null) {
        conditionExplanation_ = builderForValue.build();
      } else {
        conditionExplanationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    public Builder mergeConditionExplanation(
        com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation value) {
      if (conditionExplanationBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)
            && conditionExplanation_ != null
            && conditionExplanation_
                != com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation
                    .getDefaultInstance()) {
          getConditionExplanationBuilder().mergeFrom(value);
        } else {
          conditionExplanation_ = value;
        }
      } else {
        conditionExplanationBuilder_.mergeFrom(value);
      }
      if (conditionExplanation_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    public Builder clearConditionExplanation() {
      bitField0_ = (bitField0_ & ~0x00000100);
      conditionExplanation_ = null;
      if (conditionExplanationBuilder_ != null) {
        conditionExplanationBuilder_.dispose();
        conditionExplanationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    public com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.Builder
        getConditionExplanationBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getConditionExplanationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    public com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanationOrBuilder
        getConditionExplanationOrBuilder() {
      if (conditionExplanationBuilder_ != null) {
        return conditionExplanationBuilder_.getMessageOrBuilder();
      } else {
        return conditionExplanation_ == null
            ? com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.getDefaultInstance()
            : conditionExplanation_;
      }
    }
    /**
     *
     *
     * <pre>
     * Condition evaluation state for this role binding.
     * </pre>
     *
     * <code>
     * .google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 9;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation,
            com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.Builder,
            com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanationOrBuilder>
        getConditionExplanationFieldBuilder() {
      if (conditionExplanationBuilder_ == null) {
        conditionExplanationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation,
                com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation.Builder,
                com.google.cloud.policytroubleshooter.iam.v3.ConditionExplanationOrBuilder>(
                getConditionExplanation(), getParentForChildren(), isClean());
        conditionExplanation_ = null;
      }
      return conditionExplanationBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation)
  private static final com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation();
  }

  public static com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AllowBindingExplanation> PARSER =
      new com.google.protobuf.AbstractParser<AllowBindingExplanation>() {
        @java.lang.Override
        public AllowBindingExplanation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<AllowBindingExplanation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllowBindingExplanation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.policytroubleshooter.iam.v3.AllowBindingExplanation
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
