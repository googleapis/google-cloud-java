/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/apps/meet/v2/service.proto

// Protobuf Java Version: 3.25.5
package com.google.apps.meet.v2;

public interface GetSpaceRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.apps.meet.v2.GetSpaceRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. Resource name of the space.
   *
   * Format: `spaces/{space}` or `spaces/{meetingCode}`.
   *
   * `{space}` is the resource identifier for the space. It's a unique,
   * server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`.
   *
   * `{meetingCode}` is an alias for the space. It's a typeable, unique
   * character string and is non-case sensitive. For example, `abc-mnop-xyz`.
   * The maximum length is 128 characters.
   *
   * A `meetingCode` shouldn't be stored long term as it can become
   * dissociated from a meeting space and can be reused for different meeting
   * spaces in the future. Generally, a `meetingCode` expires 365 days after
   * last use. For more information, see [Learn about meeting codes in Google
   * Meet](https://support.google.com/meet/answer/10710509).
   *
   * For more information, see [How Meet identifies a meeting
   * space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Required. Resource name of the space.
   *
   * Format: `spaces/{space}` or `spaces/{meetingCode}`.
   *
   * `{space}` is the resource identifier for the space. It's a unique,
   * server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`.
   *
   * `{meetingCode}` is an alias for the space. It's a typeable, unique
   * character string and is non-case sensitive. For example, `abc-mnop-xyz`.
   * The maximum length is 128 characters.
   *
   * A `meetingCode` shouldn't be stored long term as it can become
   * dissociated from a meeting space and can be reused for different meeting
   * spaces in the future. Generally, a `meetingCode` expires 365 days after
   * last use. For more information, see [Learn about meeting codes in Google
   * Meet](https://support.google.com/meet/answer/10710509).
   *
   * For more information, see [How Meet identifies a meeting
   * space](https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
   * </pre>
   *
   * <code>
   * string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();
}
