/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/delivery/v1/tasks.proto

// Protobuf Java Version: 3.25.5
package com.google.maps.fleetengine.delivery.v1;

/**
 *
 *
 * <pre>
 * A Task in the Delivery API represents a single action to track. In general,
 * there is a distinction between shipment-related Tasks and break Tasks. A
 * shipment can have multiple Tasks associated with it. For example, there could
 * be one Task for the pickup, and one for the drop-off or transfer. Also,
 * different Tasks for a given shipment can be handled by different vehicles.
 * For example, one vehicle could handle the pickup, driving the shipment to the
 * hub, while another vehicle drives the same shipment from the hub to the
 * drop-off location.
 *
 * Note: gRPC and REST APIs use different field naming conventions. For example,
 * the `Task.journey_sharing_info` field in the gRPC API and the
 * `Task.journeySharingInfo` field in the REST API refer to the same
 * field.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.delivery.v1.Task}
 */
public final class Task extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.delivery.v1.Task)
    TaskOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Task.newBuilder() to construct.
  private Task(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Task() {
    name_ = "";
    type_ = 0;
    state_ = 0;
    taskOutcome_ = 0;
    taskOutcomeLocationSource_ = 0;
    trackingId_ = "";
    deliveryVehicleId_ = "";
    attributes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Task();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.fleetengine.delivery.v1.Tasks
        .internal_static_maps_fleetengine_delivery_v1_Task_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.fleetengine.delivery.v1.Tasks
        .internal_static_maps_fleetengine_delivery_v1_Task_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.fleetengine.delivery.v1.Task.class,
            com.google.maps.fleetengine.delivery.v1.Task.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The type of Task.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.Type}
   */
  public enum Type implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default, the Task type is unknown.
     * </pre>
     *
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    TYPE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * A pickup Task is the action taken for picking up a shipment from a
     * customer. Depot or feeder vehicle pickups should use the `SCHEDULED_STOP`
     * type.
     * </pre>
     *
     * <code>PICKUP = 1;</code>
     */
    PICKUP(1),
    /**
     *
     *
     * <pre>
     * A delivery Task is the action taken for delivering a shipment to an end
     * customer. Depot or feeder vehicle dropoffs should use the
     * `SCHEDULED_STOP` type.
     * </pre>
     *
     * <code>DELIVERY = 2;</code>
     */
    DELIVERY(2),
    /**
     *
     *
     * <pre>
     * A scheduled stop Task is used for planning purposes. For example, it
     * could represent picking up or dropping off shipments from feeder vehicles
     * or depots. It shouldn't be used for any shipments that are picked up or
     * dropped off from an end customer.
     * </pre>
     *
     * <code>SCHEDULED_STOP = 3;</code>
     */
    SCHEDULED_STOP(3),
    /**
     *
     *
     * <pre>
     * A Task that means the Vehicle is not available for service. For example,
     * this can happen when the driver takes a break, or when the vehicle
     * is being refueled.
     * </pre>
     *
     * <code>UNAVAILABLE = 4;</code>
     */
    UNAVAILABLE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default, the Task type is unknown.
     * </pre>
     *
     * <code>TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int TYPE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * A pickup Task is the action taken for picking up a shipment from a
     * customer. Depot or feeder vehicle pickups should use the `SCHEDULED_STOP`
     * type.
     * </pre>
     *
     * <code>PICKUP = 1;</code>
     */
    public static final int PICKUP_VALUE = 1;
    /**
     *
     *
     * <pre>
     * A delivery Task is the action taken for delivering a shipment to an end
     * customer. Depot or feeder vehicle dropoffs should use the
     * `SCHEDULED_STOP` type.
     * </pre>
     *
     * <code>DELIVERY = 2;</code>
     */
    public static final int DELIVERY_VALUE = 2;
    /**
     *
     *
     * <pre>
     * A scheduled stop Task is used for planning purposes. For example, it
     * could represent picking up or dropping off shipments from feeder vehicles
     * or depots. It shouldn't be used for any shipments that are picked up or
     * dropped off from an end customer.
     * </pre>
     *
     * <code>SCHEDULED_STOP = 3;</code>
     */
    public static final int SCHEDULED_STOP_VALUE = 3;
    /**
     *
     *
     * <pre>
     * A Task that means the Vehicle is not available for service. For example,
     * this can happen when the driver takes a break, or when the vehicle
     * is being refueled.
     * </pre>
     *
     * <code>UNAVAILABLE = 4;</code>
     */
    public static final int UNAVAILABLE_VALUE = 4;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Type forNumber(int value) {
      switch (value) {
        case 0:
          return TYPE_UNSPECIFIED;
        case 1:
          return PICKUP;
        case 2:
          return DELIVERY;
        case 3:
          return SCHEDULED_STOP;
        case 4:
          return UNAVAILABLE;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Type> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Type>() {
          public Type findValueByNumber(int number) {
            return Type.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.Type)
  }

  /**
   *
   *
   * <pre>
   * The state of a Task. This indicates the Tasks's progress.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.State}
   */
  public enum State implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default. Used for an unspecified or unrecognized Task state.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Either the Task has not yet been assigned to a delivery vehicle, or the
     * delivery vehicle has not yet passed the `Task`'s assigned vehicle stop.
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    OPEN(1),
    /**
     *
     *
     * <pre>
     * When the vehicle passes the vehicle stop for this Task.
     * </pre>
     *
     * <code>CLOSED = 2;</code>
     */
    CLOSED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default. Used for an unspecified or unrecognized Task state.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Either the Task has not yet been assigned to a delivery vehicle, or the
     * delivery vehicle has not yet passed the `Task`'s assigned vehicle stop.
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    public static final int OPEN_VALUE = 1;
    /**
     *
     *
     * <pre>
     * When the vehicle passes the vehicle stop for this Task.
     * </pre>
     *
     * <code>CLOSED = 2;</code>
     */
    public static final int CLOSED_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0:
          return STATE_UNSPECIFIED;
        case 1:
          return OPEN;
        case 2:
          return CLOSED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<State> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<State>() {
          public State findValueByNumber(int number) {
            return State.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(1);
    }

    private static final State[] VALUES = values();

    public static State valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.State)
  }

  /**
   *
   *
   * <pre>
   * The outcome of attempting to execute a Task. When `TaskState` is closed,
   * `TaskOutcome` indicates whether it was completed successfully.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.TaskOutcome}
   */
  public enum TaskOutcome implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * The Task outcome before its value is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_UNSPECIFIED = 0;</code>
     */
    TASK_OUTCOME_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The Task completed successfully.
     * </pre>
     *
     * <code>SUCCEEDED = 1;</code>
     */
    SUCCEEDED(1),
    /**
     *
     *
     * <pre>
     * Either the Task couldn't be completed, or it was cancelled.
     * </pre>
     *
     * <code>FAILED = 2;</code>
     */
    FAILED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * The Task outcome before its value is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_UNSPECIFIED = 0;</code>
     */
    public static final int TASK_OUTCOME_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The Task completed successfully.
     * </pre>
     *
     * <code>SUCCEEDED = 1;</code>
     */
    public static final int SUCCEEDED_VALUE = 1;
    /**
     *
     *
     * <pre>
     * Either the Task couldn't be completed, or it was cancelled.
     * </pre>
     *
     * <code>FAILED = 2;</code>
     */
    public static final int FAILED_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskOutcome valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TaskOutcome forNumber(int value) {
      switch (value) {
        case 0:
          return TASK_OUTCOME_UNSPECIFIED;
        case 1:
          return SUCCEEDED;
        case 2:
          return FAILED;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TaskOutcome> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<TaskOutcome> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TaskOutcome>() {
          public TaskOutcome findValueByNumber(int number) {
            return TaskOutcome.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(2);
    }

    private static final TaskOutcome[] VALUES = values();

    public static TaskOutcome valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TaskOutcome(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.TaskOutcome)
  }

  /**
   *
   *
   * <pre>
   * The identity of the source that populated the `task_outcome_location`.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource}
   */
  public enum TaskOutcomeLocationSource implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * The task outcome before it is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED = 0;</code>
     */
    TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * The provider-specified the `task_outcome_location`.
     * </pre>
     *
     * <code>PROVIDER = 2;</code>
     */
    PROVIDER(2),
    /**
     *
     *
     * <pre>
     * The provider didn't specify the `task_outcome_location`, so Fleet Engine
     * used the last known vehicle location.
     * </pre>
     *
     * <code>LAST_VEHICLE_LOCATION = 3;</code>
     */
    LAST_VEHICLE_LOCATION(3),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * The task outcome before it is set.
     * </pre>
     *
     * <code>TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED = 0;</code>
     */
    public static final int TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED_VALUE = 0;
    /**
     *
     *
     * <pre>
     * The provider-specified the `task_outcome_location`.
     * </pre>
     *
     * <code>PROVIDER = 2;</code>
     */
    public static final int PROVIDER_VALUE = 2;
    /**
     *
     *
     * <pre>
     * The provider didn't specify the `task_outcome_location`, so Fleet Engine
     * used the last known vehicle location.
     * </pre>
     *
     * <code>LAST_VEHICLE_LOCATION = 3;</code>
     */
    public static final int LAST_VEHICLE_LOCATION_VALUE = 3;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskOutcomeLocationSource valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TaskOutcomeLocationSource forNumber(int value) {
      switch (value) {
        case 0:
          return TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED;
        case 2:
          return PROVIDER;
        case 3:
          return LAST_VEHICLE_LOCATION;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TaskOutcomeLocationSource>
        internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<TaskOutcomeLocationSource>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TaskOutcomeLocationSource>() {
              public TaskOutcomeLocationSource findValueByNumber(int number) {
                return TaskOutcomeLocationSource.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.maps.fleetengine.delivery.v1.Task.getDescriptor().getEnumTypes().get(3);
    }

    private static final TaskOutcomeLocationSource[] VALUES = values();

    public static TaskOutcomeLocationSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TaskOutcomeLocationSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource)
  }

  public interface JourneySharingInfoOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    java.util.List<com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>
        getRemainingVehicleJourneySegmentsList();
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment
        getRemainingVehicleJourneySegments(int index);
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    int getRemainingVehicleJourneySegmentsCount();
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    java.util.List<? extends com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>
        getRemainingVehicleJourneySegmentsOrBuilderList();
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder
        getRemainingVehicleJourneySegmentsOrBuilder(int index);

    /**
     *
     *
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     *
     * @return Whether the lastLocation field is set.
     */
    boolean hasLastLocation();
    /**
     *
     *
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     *
     * @return The lastLocation.
     */
    com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation getLastLocation();
    /**
     *
     *
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     */
    com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder
        getLastLocationOrBuilder();

    /**
     *
     *
     * <pre>
     * Indicates whether the vehicle's lastLocation can be snapped to
     * the `current_route_segment`. This value is False if either
     * `last_location` or `current_route_segment` don't exist. This value is
     * computed by Fleet Engine. Updates from clients are ignored.
     * </pre>
     *
     * <code>bool last_location_snappable = 3;</code>
     *
     * @return The lastLocationSnappable.
     */
    boolean getLastLocationSnappable();
  }
  /**
   *
   *
   * <pre>
   * Journey sharing specific fields.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.delivery.v1.Task.JourneySharingInfo}
   */
  public static final class JourneySharingInfo extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
      JourneySharingInfoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use JourneySharingInfo.newBuilder() to construct.
    private JourneySharingInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private JourneySharingInfo() {
      remainingVehicleJourneySegments_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new JourneySharingInfo();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.fleetengine.delivery.v1.Tasks
          .internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.fleetengine.delivery.v1.Tasks
          .internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.class,
              com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder.class);
    }

    private int bitField0_;
    public static final int REMAINING_VEHICLE_JOURNEY_SEGMENTS_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private java.util.List<com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>
        remainingVehicleJourneySegments_;
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.List<com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>
        getRemainingVehicleJourneySegmentsList() {
      return remainingVehicleJourneySegments_;
    }
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>
        getRemainingVehicleJourneySegmentsOrBuilderList() {
      return remainingVehicleJourneySegments_;
    }
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    @java.lang.Override
    public int getRemainingVehicleJourneySegmentsCount() {
      return remainingVehicleJourneySegments_.size();
    }
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment
        getRemainingVehicleJourneySegments(int index) {
      return remainingVehicleJourneySegments_.get(index);
    }
    /**
     *
     *
     * <pre>
     * Tracking information for the stops that the assigned vehicle will make
     * before it completes this Task. Note that this list can contain stops
     * from other tasks.
     *
     * The first segment,
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
     * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
     * contains route information from the driver's last known location to the
     * upcoming `VehicleStop`. Current route information usually comes from the
     * driver app, except for some cases noted in the documentation for
     * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
     * The other segments in
     * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
     * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
     * populated by Fleet Engine. They provide route information between the
     * remaining `VehicleStops`.
     * </pre>
     *
     * <code>
     * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
     * </code>
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder
        getRemainingVehicleJourneySegmentsOrBuilder(int index) {
      return remainingVehicleJourneySegments_.get(index);
    }

    public static final int LAST_LOCATION_FIELD_NUMBER = 2;
    private com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation lastLocation_;
    /**
     *
     *
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     *
     * @return Whether the lastLocation field is set.
     */
    @java.lang.Override
    public boolean hasLastLocation() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     *
     * @return The lastLocation.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation getLastLocation() {
      return lastLocation_ == null
          ? com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance()
          : lastLocation_;
    }
    /**
     *
     *
     * <pre>
     * Indicates the vehicle's last reported location of the assigned vehicle.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder
        getLastLocationOrBuilder() {
      return lastLocation_ == null
          ? com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance()
          : lastLocation_;
    }

    public static final int LAST_LOCATION_SNAPPABLE_FIELD_NUMBER = 3;
    private boolean lastLocationSnappable_ = false;
    /**
     *
     *
     * <pre>
     * Indicates whether the vehicle's lastLocation can be snapped to
     * the `current_route_segment`. This value is False if either
     * `last_location` or `current_route_segment` don't exist. This value is
     * computed by Fleet Engine. Updates from clients are ignored.
     * </pre>
     *
     * <code>bool last_location_snappable = 3;</code>
     *
     * @return The lastLocationSnappable.
     */
    @java.lang.Override
    public boolean getLastLocationSnappable() {
      return lastLocationSnappable_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (int i = 0; i < remainingVehicleJourneySegments_.size(); i++) {
        output.writeMessage(1, remainingVehicleJourneySegments_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getLastLocation());
      }
      if (lastLocationSnappable_ != false) {
        output.writeBool(3, lastLocationSnappable_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < remainingVehicleJourneySegments_.size(); i++) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(
                1, remainingVehicleJourneySegments_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getLastLocation());
      }
      if (lastLocationSnappable_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, lastLocationSnappable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo)) {
        return super.equals(obj);
      }
      com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo other =
          (com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo) obj;

      if (!getRemainingVehicleJourneySegmentsList()
          .equals(other.getRemainingVehicleJourneySegmentsList())) return false;
      if (hasLastLocation() != other.hasLastLocation()) return false;
      if (hasLastLocation()) {
        if (!getLastLocation().equals(other.getLastLocation())) return false;
      }
      if (getLastLocationSnappable() != other.getLastLocationSnappable()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRemainingVehicleJourneySegmentsCount() > 0) {
        hash = (37 * hash) + REMAINING_VEHICLE_JOURNEY_SEGMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getRemainingVehicleJourneySegmentsList().hashCode();
      }
      if (hasLastLocation()) {
        hash = (37 * hash) + LAST_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLastLocation().hashCode();
      }
      hash = (37 * hash) + LAST_LOCATION_SNAPPABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getLastLocationSnappable());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Journey sharing specific fields.
     * </pre>
     *
     * Protobuf type {@code maps.fleetengine.delivery.v1.Task.JourneySharingInfo}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.maps.fleetengine.delivery.v1.Tasks
            .internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.maps.fleetengine.delivery.v1.Tasks
            .internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.class,
                com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder.class);
      }

      // Construct using
      // com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getRemainingVehicleJourneySegmentsFieldBuilder();
          getLastLocationFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          remainingVehicleJourneySegments_ = java.util.Collections.emptyList();
        } else {
          remainingVehicleJourneySegments_ = null;
          remainingVehicleJourneySegmentsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        lastLocation_ = null;
        if (lastLocationBuilder_ != null) {
          lastLocationBuilder_.dispose();
          lastLocationBuilder_ = null;
        }
        lastLocationSnappable_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.maps.fleetengine.delivery.v1.Tasks
            .internal_static_maps_fleetengine_delivery_v1_Task_JourneySharingInfo_descriptor;
      }

      @java.lang.Override
      public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
          getDefaultInstanceForType() {
        return com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo build() {
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo buildPartial() {
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo result =
            new com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(
          com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo result) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            remainingVehicleJourneySegments_ =
                java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.remainingVehicleJourneySegments_ = remainingVehicleJourneySegments_;
        } else {
          result.remainingVehicleJourneySegments_ = remainingVehicleJourneySegmentsBuilder_.build();
        }
      }

      private void buildPartial0(
          com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lastLocation_ =
              lastLocationBuilder_ == null ? lastLocation_ : lastLocationBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.lastLocationSnappable_ = lastLocationSnappable_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo) {
          return mergeFrom((com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo other) {
        if (other
            == com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance())
          return this;
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (!other.remainingVehicleJourneySegments_.isEmpty()) {
            if (remainingVehicleJourneySegments_.isEmpty()) {
              remainingVehicleJourneySegments_ = other.remainingVehicleJourneySegments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRemainingVehicleJourneySegmentsIsMutable();
              remainingVehicleJourneySegments_.addAll(other.remainingVehicleJourneySegments_);
            }
            onChanged();
          }
        } else {
          if (!other.remainingVehicleJourneySegments_.isEmpty()) {
            if (remainingVehicleJourneySegmentsBuilder_.isEmpty()) {
              remainingVehicleJourneySegmentsBuilder_.dispose();
              remainingVehicleJourneySegmentsBuilder_ = null;
              remainingVehicleJourneySegments_ = other.remainingVehicleJourneySegments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              remainingVehicleJourneySegmentsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getRemainingVehicleJourneySegmentsFieldBuilder()
                      : null;
            } else {
              remainingVehicleJourneySegmentsBuilder_.addAllMessages(
                  other.remainingVehicleJourneySegments_);
            }
          }
        }
        if (other.hasLastLocation()) {
          mergeLastLocation(other.getLastLocation());
        }
        if (other.getLastLocationSnappable() != false) {
          setLastLocationSnappable(other.getLastLocationSnappable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment m =
                      input.readMessage(
                          com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.parser(),
                          extensionRegistry);
                  if (remainingVehicleJourneySegmentsBuilder_ == null) {
                    ensureRemainingVehicleJourneySegmentsIsMutable();
                    remainingVehicleJourneySegments_.add(m);
                  } else {
                    remainingVehicleJourneySegmentsBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getLastLocationFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              case 24:
                {
                  lastLocationSnappable_ = input.readBool();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.util.List<com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>
          remainingVehicleJourneySegments_ = java.util.Collections.emptyList();

      private void ensureRemainingVehicleJourneySegmentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          remainingVehicleJourneySegments_ =
              new java.util.ArrayList<
                  com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>(
                  remainingVehicleJourneySegments_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment,
              com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder,
              com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>
          remainingVehicleJourneySegmentsBuilder_;

      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public java.util.List<com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>
          getRemainingVehicleJourneySegmentsList() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public int getRemainingVehicleJourneySegmentsCount() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return remainingVehicleJourneySegments_.size();
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment
          getRemainingVehicleJourneySegments(int index) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return remainingVehicleJourneySegments_.get(index);
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder setRemainingVehicleJourneySegments(
          int index, com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment value) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.set(index, value);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder setRemainingVehicleJourneySegments(
          int index,
          com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder builderForValue) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.set(index, builderForValue.build());
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder addRemainingVehicleJourneySegments(
          com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment value) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(value);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder addRemainingVehicleJourneySegments(
          int index, com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment value) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(index, value);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder addRemainingVehicleJourneySegments(
          com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder builderForValue) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(builderForValue.build());
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder addRemainingVehicleJourneySegments(
          int index,
          com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder builderForValue) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.add(index, builderForValue.build());
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder addAllRemainingVehicleJourneySegments(
          java.lang.Iterable<
                  ? extends com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment>
              values) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, remainingVehicleJourneySegments_);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder clearRemainingVehicleJourneySegments() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          remainingVehicleJourneySegments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public Builder removeRemainingVehicleJourneySegments(int index) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          ensureRemainingVehicleJourneySegmentsIsMutable();
          remainingVehicleJourneySegments_.remove(index);
          onChanged();
        } else {
          remainingVehicleJourneySegmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder
          getRemainingVehicleJourneySegmentsBuilder(int index) {
        return getRemainingVehicleJourneySegmentsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder
          getRemainingVehicleJourneySegmentsOrBuilder(int index) {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          return remainingVehicleJourneySegments_.get(index);
        } else {
          return remainingVehicleJourneySegmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public java.util.List<
              ? extends com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>
          getRemainingVehicleJourneySegmentsOrBuilderList() {
        if (remainingVehicleJourneySegmentsBuilder_ != null) {
          return remainingVehicleJourneySegmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(remainingVehicleJourneySegments_);
        }
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder
          addRemainingVehicleJourneySegmentsBuilder() {
        return getRemainingVehicleJourneySegmentsFieldBuilder()
            .addBuilder(
                com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder
          addRemainingVehicleJourneySegmentsBuilder(int index) {
        return getRemainingVehicleJourneySegmentsFieldBuilder()
            .addBuilder(
                index,
                com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * Tracking information for the stops that the assigned vehicle will make
       * before it completes this Task. Note that this list can contain stops
       * from other tasks.
       *
       * The first segment,
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
       * or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
       * contains route information from the driver's last known location to the
       * upcoming `VehicleStop`. Current route information usually comes from the
       * driver app, except for some cases noted in the documentation for
       * [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
       * The other segments in
       * `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
       * `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
       * populated by Fleet Engine. They provide route information between the
       * remaining `VehicleStops`.
       * </pre>
       *
       * <code>
       * repeated .maps.fleetengine.delivery.v1.VehicleJourneySegment remaining_vehicle_journey_segments = 1;
       * </code>
       */
      public java.util.List<com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder>
          getRemainingVehicleJourneySegmentsBuilderList() {
        return getRemainingVehicleJourneySegmentsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment,
              com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder,
              com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>
          getRemainingVehicleJourneySegmentsFieldBuilder() {
        if (remainingVehicleJourneySegmentsBuilder_ == null) {
          remainingVehicleJourneySegmentsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment,
                  com.google.maps.fleetengine.delivery.v1.VehicleJourneySegment.Builder,
                  com.google.maps.fleetengine.delivery.v1.VehicleJourneySegmentOrBuilder>(
                  remainingVehicleJourneySegments_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          remainingVehicleJourneySegments_ = null;
        }
        return remainingVehicleJourneySegmentsBuilder_;
      }

      private com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation lastLocation_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation,
              com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder,
              com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder>
          lastLocationBuilder_;
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       *
       * @return Whether the lastLocation field is set.
       */
      public boolean hasLastLocation() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       *
       * @return The lastLocation.
       */
      public com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation getLastLocation() {
        if (lastLocationBuilder_ == null) {
          return lastLocation_ == null
              ? com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance()
              : lastLocation_;
        } else {
          return lastLocationBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder setLastLocation(
          com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation value) {
        if (lastLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastLocation_ = value;
        } else {
          lastLocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder setLastLocation(
          com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder builderForValue) {
        if (lastLocationBuilder_ == null) {
          lastLocation_ = builderForValue.build();
        } else {
          lastLocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder mergeLastLocation(
          com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation value) {
        if (lastLocationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && lastLocation_ != null
              && lastLocation_
                  != com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation
                      .getDefaultInstance()) {
            getLastLocationBuilder().mergeFrom(value);
          } else {
            lastLocation_ = value;
          }
        } else {
          lastLocationBuilder_.mergeFrom(value);
        }
        if (lastLocation_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public Builder clearLastLocation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lastLocation_ = null;
        if (lastLocationBuilder_ != null) {
          lastLocationBuilder_.dispose();
          lastLocationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder
          getLastLocationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLastLocationFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      public com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder
          getLastLocationOrBuilder() {
        if (lastLocationBuilder_ != null) {
          return lastLocationBuilder_.getMessageOrBuilder();
        } else {
          return lastLocation_ == null
              ? com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.getDefaultInstance()
              : lastLocation_;
        }
      }
      /**
       *
       *
       * <pre>
       * Indicates the vehicle's last reported location of the assigned vehicle.
       * </pre>
       *
       * <code>.maps.fleetengine.delivery.v1.DeliveryVehicleLocation last_location = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation,
              com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder,
              com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder>
          getLastLocationFieldBuilder() {
        if (lastLocationBuilder_ == null) {
          lastLocationBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation,
                  com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocation.Builder,
                  com.google.maps.fleetengine.delivery.v1.DeliveryVehicleLocationOrBuilder>(
                  getLastLocation(), getParentForChildren(), isClean());
          lastLocation_ = null;
        }
        return lastLocationBuilder_;
      }

      private boolean lastLocationSnappable_;
      /**
       *
       *
       * <pre>
       * Indicates whether the vehicle's lastLocation can be snapped to
       * the `current_route_segment`. This value is False if either
       * `last_location` or `current_route_segment` don't exist. This value is
       * computed by Fleet Engine. Updates from clients are ignored.
       * </pre>
       *
       * <code>bool last_location_snappable = 3;</code>
       *
       * @return The lastLocationSnappable.
       */
      @java.lang.Override
      public boolean getLastLocationSnappable() {
        return lastLocationSnappable_;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether the vehicle's lastLocation can be snapped to
       * the `current_route_segment`. This value is False if either
       * `last_location` or `current_route_segment` don't exist. This value is
       * computed by Fleet Engine. Updates from clients are ignored.
       * </pre>
       *
       * <code>bool last_location_snappable = 3;</code>
       *
       * @param value The lastLocationSnappable to set.
       * @return This builder for chaining.
       */
      public Builder setLastLocationSnappable(boolean value) {

        lastLocationSnappable_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Indicates whether the vehicle's lastLocation can be snapped to
       * the `current_route_segment`. This value is False if either
       * `last_location` or `current_route_segment` don't exist. This value is
       * computed by Fleet Engine. Updates from clients are ignored.
       * </pre>
       *
       * <code>bool last_location_snappable = 3;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearLastLocationSnappable() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastLocationSnappable_ = false;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
    }

    // @@protoc_insertion_point(class_scope:maps.fleetengine.delivery.v1.Task.JourneySharingInfo)
    private static final com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo();
    }

    public static com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<JourneySharingInfo> PARSER =
        new com.google.protobuf.AbstractParser<JourneySharingInfo>() {
          @java.lang.Override
          public JourneySharingInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<JourneySharingInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<JourneySharingInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   *
   *
   * <pre>
   * Must be in the format `providers/{provider}/tasks/{task}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Must be in the format `providers/{provider}/tasks/{task}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_ = 0;
  /**
   *
   *
   * <pre>
   * Required. Immutable. Defines the type of the Task. For example, a break or
   * shipment.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override
  public int getTypeValue() {
    return type_;
  }
  /**
   *
   *
   * <pre>
   * Required. Immutable. Defines the type of the Task. For example, a break or
   * shipment.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The type.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task.Type getType() {
    com.google.maps.fleetengine.delivery.v1.Task.Type result =
        com.google.maps.fleetengine.delivery.v1.Task.Type.forNumber(type_);
    return result == null ? com.google.maps.fleetengine.delivery.v1.Task.Type.UNRECOGNIZED : result;
  }

  public static final int STATE_FIELD_NUMBER = 3;
  private int state_ = 0;
  /**
   *
   *
   * <pre>
   * Required. The current execution state of the Task.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }
  /**
   *
   *
   * <pre>
   * Required. The current execution state of the Task.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The state.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task.State getState() {
    com.google.maps.fleetengine.delivery.v1.Task.State result =
        com.google.maps.fleetengine.delivery.v1.Task.State.forNumber(state_);
    return result == null
        ? com.google.maps.fleetengine.delivery.v1.Task.State.UNRECOGNIZED
        : result;
  }

  public static final int TASK_OUTCOME_FIELD_NUMBER = 9;
  private int taskOutcome_ = 0;
  /**
   *
   *
   * <pre>
   * The outcome of the Task.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
   *
   * @return The enum numeric value on the wire for taskOutcome.
   */
  @java.lang.Override
  public int getTaskOutcomeValue() {
    return taskOutcome_;
  }
  /**
   *
   *
   * <pre>
   * The outcome of the Task.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
   *
   * @return The taskOutcome.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome getTaskOutcome() {
    com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome result =
        com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome.forNumber(taskOutcome_);
    return result == null
        ? com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome.UNRECOGNIZED
        : result;
  }

  public static final int TASK_OUTCOME_TIME_FIELD_NUMBER = 10;
  private com.google.protobuf.Timestamp taskOutcomeTime_;
  /**
   *
   *
   * <pre>
   * The timestamp that indicates when the `Task`'s outcome was set by the
   * provider.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
   *
   * @return Whether the taskOutcomeTime field is set.
   */
  @java.lang.Override
  public boolean hasTaskOutcomeTime() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * The timestamp that indicates when the `Task`'s outcome was set by the
   * provider.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
   *
   * @return The taskOutcomeTime.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getTaskOutcomeTime() {
    return taskOutcomeTime_ == null
        ? com.google.protobuf.Timestamp.getDefaultInstance()
        : taskOutcomeTime_;
  }
  /**
   *
   *
   * <pre>
   * The timestamp that indicates when the `Task`'s outcome was set by the
   * provider.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getTaskOutcomeTimeOrBuilder() {
    return taskOutcomeTime_ == null
        ? com.google.protobuf.Timestamp.getDefaultInstance()
        : taskOutcomeTime_;
  }

  public static final int TASK_OUTCOME_LOCATION_FIELD_NUMBER = 11;
  private com.google.maps.fleetengine.delivery.v1.LocationInfo taskOutcomeLocation_;
  /**
   *
   *
   * <pre>
   * The location where the `Task`'s outcome was set. This value is updated as
   * part of `UpdateTask`. If this value isn't explicitly updated by the
   * provider, then Fleet Engine populates it by default with the last known
   * vehicle location (the *raw* location).
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
   *
   * @return Whether the taskOutcomeLocation field is set.
   */
  @java.lang.Override
  public boolean hasTaskOutcomeLocation() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   *
   *
   * <pre>
   * The location where the `Task`'s outcome was set. This value is updated as
   * part of `UpdateTask`. If this value isn't explicitly updated by the
   * provider, then Fleet Engine populates it by default with the last known
   * vehicle location (the *raw* location).
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
   *
   * @return The taskOutcomeLocation.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.LocationInfo getTaskOutcomeLocation() {
    return taskOutcomeLocation_ == null
        ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
        : taskOutcomeLocation_;
  }
  /**
   *
   *
   * <pre>
   * The location where the `Task`'s outcome was set. This value is updated as
   * part of `UpdateTask`. If this value isn't explicitly updated by the
   * provider, then Fleet Engine populates it by default with the last known
   * vehicle location (the *raw* location).
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder
      getTaskOutcomeLocationOrBuilder() {
    return taskOutcomeLocation_ == null
        ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
        : taskOutcomeLocation_;
  }

  public static final int TASK_OUTCOME_LOCATION_SOURCE_FIELD_NUMBER = 12;
  private int taskOutcomeLocationSource_ = 0;
  /**
   *
   *
   * <pre>
   * Indicates where the value of the `task_outcome_location` came from.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
   * </code>
   *
   * @return The enum numeric value on the wire for taskOutcomeLocationSource.
   */
  @java.lang.Override
  public int getTaskOutcomeLocationSourceValue() {
    return taskOutcomeLocationSource_;
  }
  /**
   *
   *
   * <pre>
   * Indicates where the value of the `task_outcome_location` came from.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
   * </code>
   *
   * @return The taskOutcomeLocationSource.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource
      getTaskOutcomeLocationSource() {
    com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource result =
        com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.forNumber(
            taskOutcomeLocationSource_);
    return result == null
        ? com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.UNRECOGNIZED
        : result;
  }

  public static final int TRACKING_ID_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object trackingId_ = "";
  /**
   *
   *
   * <pre>
   * Immutable. This field facilitates the storing of an ID so you can avoid
   * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
   * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
   * following restrictions:
   *
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The trackingId.
   */
  @java.lang.Override
  public java.lang.String getTrackingId() {
    java.lang.Object ref = trackingId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      trackingId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Immutable. This field facilitates the storing of an ID so you can avoid
   * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
   * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
   * following restrictions:
   *
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
   *
   * @return The bytes for trackingId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTrackingIdBytes() {
    java.lang.Object ref = trackingId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      trackingId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DELIVERY_VEHICLE_ID_FIELD_NUMBER = 5;

  @SuppressWarnings("serial")
  private volatile java.lang.Object deliveryVehicleId_ = "";
  /**
   *
   *
   * <pre>
   * Output only. The ID of the vehicle that is executing this Task. Delivery
   * Vehicle IDs are subject to the following restrictions:
   *
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The deliveryVehicleId.
   */
  @java.lang.Override
  public java.lang.String getDeliveryVehicleId() {
    java.lang.Object ref = deliveryVehicleId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deliveryVehicleId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Output only. The ID of the vehicle that is executing this Task. Delivery
   * Vehicle IDs are subject to the following restrictions:
   *
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   * </pre>
   *
   * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for deliveryVehicleId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDeliveryVehicleIdBytes() {
    java.lang.Object ref = deliveryVehicleId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      deliveryVehicleId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLANNED_LOCATION_FIELD_NUMBER = 6;
  private com.google.maps.fleetengine.delivery.v1.LocationInfo plannedLocation_;
  /**
   *
   *
   * <pre>
   * Immutable. The location where the Task will be completed.
   * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return Whether the plannedLocation field is set.
   */
  @java.lang.Override
  public boolean hasPlannedLocation() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   *
   *
   * <pre>
   * Immutable. The location where the Task will be completed.
   * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The plannedLocation.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.LocationInfo getPlannedLocation() {
    return plannedLocation_ == null
        ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
        : plannedLocation_;
  }
  /**
   *
   *
   * <pre>
   * Immutable. The location where the Task will be completed.
   * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder
      getPlannedLocationOrBuilder() {
    return plannedLocation_ == null
        ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
        : plannedLocation_;
  }

  public static final int TASK_DURATION_FIELD_NUMBER = 7;
  private com.google.protobuf.Duration taskDuration_;
  /**
   *
   *
   * <pre>
   * Required. Immutable. The time needed to execute a Task at this location.
   * </pre>
   *
   * <code>
   * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return Whether the taskDuration field is set.
   */
  @java.lang.Override
  public boolean hasTaskDuration() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   *
   *
   * <pre>
   * Required. Immutable. The time needed to execute a Task at this location.
   * </pre>
   *
   * <code>
   * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   *
   * @return The taskDuration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTaskDuration() {
    return taskDuration_ == null
        ? com.google.protobuf.Duration.getDefaultInstance()
        : taskDuration_;
  }
  /**
   *
   *
   * <pre>
   * Required. Immutable. The time needed to execute a Task at this location.
   * </pre>
   *
   * <code>
   * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
   * </code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTaskDurationOrBuilder() {
    return taskDuration_ == null
        ? com.google.protobuf.Duration.getDefaultInstance()
        : taskDuration_;
  }

  public static final int TARGET_TIME_WINDOW_FIELD_NUMBER = 14;
  private com.google.maps.fleetengine.delivery.v1.TimeWindow targetTimeWindow_;
  /**
   *
   *
   * <pre>
   * The time window during which the task should be completed.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
   *
   * @return Whether the targetTimeWindow field is set.
   */
  @java.lang.Override
  public boolean hasTargetTimeWindow() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   *
   *
   * <pre>
   * The time window during which the task should be completed.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
   *
   * @return The targetTimeWindow.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.TimeWindow getTargetTimeWindow() {
    return targetTimeWindow_ == null
        ? com.google.maps.fleetengine.delivery.v1.TimeWindow.getDefaultInstance()
        : targetTimeWindow_;
  }
  /**
   *
   *
   * <pre>
   * The time window during which the task should be completed.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.TimeWindowOrBuilder
      getTargetTimeWindowOrBuilder() {
    return targetTimeWindow_ == null
        ? com.google.maps.fleetengine.delivery.v1.TimeWindow.getDefaultInstance()
        : targetTimeWindow_;
  }

  public static final int JOURNEY_SHARING_INFO_FIELD_NUMBER = 8;
  private com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journeySharingInfo_;
  /**
   *
   *
   * <pre>
   * Output only. Journey sharing-specific fields. Not populated when state is
   * `CLOSED`.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the journeySharingInfo field is set.
   */
  @java.lang.Override
  public boolean hasJourneySharingInfo() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   *
   *
   * <pre>
   * Output only. Journey sharing-specific fields. Not populated when state is
   * `CLOSED`.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The journeySharingInfo.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getJourneySharingInfo() {
    return journeySharingInfo_ == null
        ? com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance()
        : journeySharingInfo_;
  }
  /**
   *
   *
   * <pre>
   * Output only. Journey sharing-specific fields. Not populated when state is
   * `CLOSED`.
   * </pre>
   *
   * <code>
   * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder
      getJourneySharingInfoOrBuilder() {
    return journeySharingInfo_ == null
        ? com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance()
        : journeySharingInfo_;
  }

  public static final int TASK_TRACKING_VIEW_CONFIG_FIELD_NUMBER = 13;
  private com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig taskTrackingViewConfig_;
  /**
   *
   *
   * <pre>
   * The configuration for task tracking that specifies which data elements are
   * visible to the end users under what circumstances.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
   * </code>
   *
   * @return Whether the taskTrackingViewConfig field is set.
   */
  @java.lang.Override
  public boolean hasTaskTrackingViewConfig() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   *
   *
   * <pre>
   * The configuration for task tracking that specifies which data elements are
   * visible to the end users under what circumstances.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
   * </code>
   *
   * @return The taskTrackingViewConfig.
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig
      getTaskTrackingViewConfig() {
    return taskTrackingViewConfig_ == null
        ? com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.getDefaultInstance()
        : taskTrackingViewConfig_;
  }
  /**
   *
   *
   * <pre>
   * The configuration for task tracking that specifies which data elements are
   * visible to the end users under what circumstances.
   * </pre>
   *
   * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
   * </code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfigOrBuilder
      getTaskTrackingViewConfigOrBuilder() {
    return taskTrackingViewConfig_ == null
        ? com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.getDefaultInstance()
        : taskTrackingViewConfig_;
  }

  public static final int ATTRIBUTES_FIELD_NUMBER = 15;

  @SuppressWarnings("serial")
  private java.util.List<com.google.maps.fleetengine.delivery.v1.TaskAttribute> attributes_;
  /**
   *
   *
   * <pre>
   * A list of custom Task attributes. Each attribute must have a unique key.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.maps.fleetengine.delivery.v1.TaskAttribute> getAttributesList() {
    return attributes_;
  }
  /**
   *
   *
   * <pre>
   * A list of custom Task attributes. Each attribute must have a unique key.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder>
      getAttributesOrBuilderList() {
    return attributes_;
  }
  /**
   *
   *
   * <pre>
   * A list of custom Task attributes. Each attribute must have a unique key.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
   */
  @java.lang.Override
  public int getAttributesCount() {
    return attributes_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of custom Task attributes. Each attribute must have a unique key.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.TaskAttribute getAttributes(int index) {
    return attributes_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of custom Task attributes. Each attribute must have a unique key.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
   */
  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder getAttributesOrBuilder(
      int index) {
    return attributes_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (type_ != com.google.maps.fleetengine.delivery.v1.Task.Type.TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, type_);
    }
    if (state_
        != com.google.maps.fleetengine.delivery.v1.Task.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, state_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(trackingId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, trackingId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deliveryVehicleId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, deliveryVehicleId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(6, getPlannedLocation());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(7, getTaskDuration());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(8, getJourneySharingInfo());
    }
    if (taskOutcome_
        != com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome.TASK_OUTCOME_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(9, taskOutcome_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(10, getTaskOutcomeTime());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(11, getTaskOutcomeLocation());
    }
    if (taskOutcomeLocationSource_
        != com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource
            .TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(12, taskOutcomeLocationSource_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(13, getTaskTrackingViewConfig());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(14, getTargetTimeWindow());
    }
    for (int i = 0; i < attributes_.size(); i++) {
      output.writeMessage(15, attributes_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (type_ != com.google.maps.fleetengine.delivery.v1.Task.Type.TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, type_);
    }
    if (state_
        != com.google.maps.fleetengine.delivery.v1.Task.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, state_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(trackingId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, trackingId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deliveryVehicleId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, deliveryVehicleId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getPlannedLocation());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, getTaskDuration());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getJourneySharingInfo());
    }
    if (taskOutcome_
        != com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome.TASK_OUTCOME_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(9, taskOutcome_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, getTaskOutcomeTime());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(11, getTaskOutcomeLocation());
    }
    if (taskOutcomeLocationSource_
        != com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource
            .TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(12, taskOutcomeLocationSource_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(13, getTaskTrackingViewConfig());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, getTargetTimeWindow());
    }
    for (int i = 0; i < attributes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(15, attributes_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.fleetengine.delivery.v1.Task)) {
      return super.equals(obj);
    }
    com.google.maps.fleetengine.delivery.v1.Task other =
        (com.google.maps.fleetengine.delivery.v1.Task) obj;

    if (!getName().equals(other.getName())) return false;
    if (type_ != other.type_) return false;
    if (state_ != other.state_) return false;
    if (taskOutcome_ != other.taskOutcome_) return false;
    if (hasTaskOutcomeTime() != other.hasTaskOutcomeTime()) return false;
    if (hasTaskOutcomeTime()) {
      if (!getTaskOutcomeTime().equals(other.getTaskOutcomeTime())) return false;
    }
    if (hasTaskOutcomeLocation() != other.hasTaskOutcomeLocation()) return false;
    if (hasTaskOutcomeLocation()) {
      if (!getTaskOutcomeLocation().equals(other.getTaskOutcomeLocation())) return false;
    }
    if (taskOutcomeLocationSource_ != other.taskOutcomeLocationSource_) return false;
    if (!getTrackingId().equals(other.getTrackingId())) return false;
    if (!getDeliveryVehicleId().equals(other.getDeliveryVehicleId())) return false;
    if (hasPlannedLocation() != other.hasPlannedLocation()) return false;
    if (hasPlannedLocation()) {
      if (!getPlannedLocation().equals(other.getPlannedLocation())) return false;
    }
    if (hasTaskDuration() != other.hasTaskDuration()) return false;
    if (hasTaskDuration()) {
      if (!getTaskDuration().equals(other.getTaskDuration())) return false;
    }
    if (hasTargetTimeWindow() != other.hasTargetTimeWindow()) return false;
    if (hasTargetTimeWindow()) {
      if (!getTargetTimeWindow().equals(other.getTargetTimeWindow())) return false;
    }
    if (hasJourneySharingInfo() != other.hasJourneySharingInfo()) return false;
    if (hasJourneySharingInfo()) {
      if (!getJourneySharingInfo().equals(other.getJourneySharingInfo())) return false;
    }
    if (hasTaskTrackingViewConfig() != other.hasTaskTrackingViewConfig()) return false;
    if (hasTaskTrackingViewConfig()) {
      if (!getTaskTrackingViewConfig().equals(other.getTaskTrackingViewConfig())) return false;
    }
    if (!getAttributesList().equals(other.getAttributesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (37 * hash) + TASK_OUTCOME_FIELD_NUMBER;
    hash = (53 * hash) + taskOutcome_;
    if (hasTaskOutcomeTime()) {
      hash = (37 * hash) + TASK_OUTCOME_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTaskOutcomeTime().hashCode();
    }
    if (hasTaskOutcomeLocation()) {
      hash = (37 * hash) + TASK_OUTCOME_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getTaskOutcomeLocation().hashCode();
    }
    hash = (37 * hash) + TASK_OUTCOME_LOCATION_SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + taskOutcomeLocationSource_;
    hash = (37 * hash) + TRACKING_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTrackingId().hashCode();
    hash = (37 * hash) + DELIVERY_VEHICLE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDeliveryVehicleId().hashCode();
    if (hasPlannedLocation()) {
      hash = (37 * hash) + PLANNED_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getPlannedLocation().hashCode();
    }
    if (hasTaskDuration()) {
      hash = (37 * hash) + TASK_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getTaskDuration().hashCode();
    }
    if (hasTargetTimeWindow()) {
      hash = (37 * hash) + TARGET_TIME_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + getTargetTimeWindow().hashCode();
    }
    if (hasJourneySharingInfo()) {
      hash = (37 * hash) + JOURNEY_SHARING_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getJourneySharingInfo().hashCode();
    }
    if (hasTaskTrackingViewConfig()) {
      hash = (37 * hash) + TASK_TRACKING_VIEW_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getTaskTrackingViewConfig().hashCode();
    }
    if (getAttributesCount() > 0) {
      hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + getAttributesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.fleetengine.delivery.v1.Task parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.fleetengine.delivery.v1.Task prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A Task in the Delivery API represents a single action to track. In general,
   * there is a distinction between shipment-related Tasks and break Tasks. A
   * shipment can have multiple Tasks associated with it. For example, there could
   * be one Task for the pickup, and one for the drop-off or transfer. Also,
   * different Tasks for a given shipment can be handled by different vehicles.
   * For example, one vehicle could handle the pickup, driving the shipment to the
   * hub, while another vehicle drives the same shipment from the hub to the
   * drop-off location.
   *
   * Note: gRPC and REST APIs use different field naming conventions. For example,
   * the `Task.journey_sharing_info` field in the gRPC API and the
   * `Task.journeySharingInfo` field in the REST API refer to the same
   * field.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.delivery.v1.Task}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.delivery.v1.Task)
      com.google.maps.fleetengine.delivery.v1.TaskOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.fleetengine.delivery.v1.Tasks
          .internal_static_maps_fleetengine_delivery_v1_Task_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.fleetengine.delivery.v1.Tasks
          .internal_static_maps_fleetengine_delivery_v1_Task_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.fleetengine.delivery.v1.Task.class,
              com.google.maps.fleetengine.delivery.v1.Task.Builder.class);
    }

    // Construct using com.google.maps.fleetengine.delivery.v1.Task.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getTaskOutcomeTimeFieldBuilder();
        getTaskOutcomeLocationFieldBuilder();
        getPlannedLocationFieldBuilder();
        getTaskDurationFieldBuilder();
        getTargetTimeWindowFieldBuilder();
        getJourneySharingInfoFieldBuilder();
        getTaskTrackingViewConfigFieldBuilder();
        getAttributesFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      type_ = 0;
      state_ = 0;
      taskOutcome_ = 0;
      taskOutcomeTime_ = null;
      if (taskOutcomeTimeBuilder_ != null) {
        taskOutcomeTimeBuilder_.dispose();
        taskOutcomeTimeBuilder_ = null;
      }
      taskOutcomeLocation_ = null;
      if (taskOutcomeLocationBuilder_ != null) {
        taskOutcomeLocationBuilder_.dispose();
        taskOutcomeLocationBuilder_ = null;
      }
      taskOutcomeLocationSource_ = 0;
      trackingId_ = "";
      deliveryVehicleId_ = "";
      plannedLocation_ = null;
      if (plannedLocationBuilder_ != null) {
        plannedLocationBuilder_.dispose();
        plannedLocationBuilder_ = null;
      }
      taskDuration_ = null;
      if (taskDurationBuilder_ != null) {
        taskDurationBuilder_.dispose();
        taskDurationBuilder_ = null;
      }
      targetTimeWindow_ = null;
      if (targetTimeWindowBuilder_ != null) {
        targetTimeWindowBuilder_.dispose();
        targetTimeWindowBuilder_ = null;
      }
      journeySharingInfo_ = null;
      if (journeySharingInfoBuilder_ != null) {
        journeySharingInfoBuilder_.dispose();
        journeySharingInfoBuilder_ = null;
      }
      taskTrackingViewConfig_ = null;
      if (taskTrackingViewConfigBuilder_ != null) {
        taskTrackingViewConfigBuilder_.dispose();
        taskTrackingViewConfigBuilder_ = null;
      }
      if (attributesBuilder_ == null) {
        attributes_ = java.util.Collections.emptyList();
      } else {
        attributes_ = null;
        attributesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.fleetengine.delivery.v1.Tasks
          .internal_static_maps_fleetengine_delivery_v1_Task_descriptor;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task getDefaultInstanceForType() {
      return com.google.maps.fleetengine.delivery.v1.Task.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task build() {
      com.google.maps.fleetengine.delivery.v1.Task result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task buildPartial() {
      com.google.maps.fleetengine.delivery.v1.Task result =
          new com.google.maps.fleetengine.delivery.v1.Task(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.google.maps.fleetengine.delivery.v1.Task result) {
      if (attributesBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)) {
          attributes_ = java.util.Collections.unmodifiableList(attributes_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.attributes_ = attributes_;
      } else {
        result.attributes_ = attributesBuilder_.build();
      }
    }

    private void buildPartial0(com.google.maps.fleetengine.delivery.v1.Task result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.state_ = state_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.taskOutcome_ = taskOutcome_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.taskOutcomeTime_ =
            taskOutcomeTimeBuilder_ == null ? taskOutcomeTime_ : taskOutcomeTimeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.taskOutcomeLocation_ =
            taskOutcomeLocationBuilder_ == null
                ? taskOutcomeLocation_
                : taskOutcomeLocationBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.taskOutcomeLocationSource_ = taskOutcomeLocationSource_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.trackingId_ = trackingId_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.deliveryVehicleId_ = deliveryVehicleId_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.plannedLocation_ =
            plannedLocationBuilder_ == null ? plannedLocation_ : plannedLocationBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.taskDuration_ =
            taskDurationBuilder_ == null ? taskDuration_ : taskDurationBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.targetTimeWindow_ =
            targetTimeWindowBuilder_ == null ? targetTimeWindow_ : targetTimeWindowBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.journeySharingInfo_ =
            journeySharingInfoBuilder_ == null
                ? journeySharingInfo_
                : journeySharingInfoBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.taskTrackingViewConfig_ =
            taskTrackingViewConfigBuilder_ == null
                ? taskTrackingViewConfig_
                : taskTrackingViewConfigBuilder_.build();
        to_bitField0_ |= 0x00000040;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.fleetengine.delivery.v1.Task) {
        return mergeFrom((com.google.maps.fleetengine.delivery.v1.Task) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.fleetengine.delivery.v1.Task other) {
      if (other == com.google.maps.fleetengine.delivery.v1.Task.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (other.taskOutcome_ != 0) {
        setTaskOutcomeValue(other.getTaskOutcomeValue());
      }
      if (other.hasTaskOutcomeTime()) {
        mergeTaskOutcomeTime(other.getTaskOutcomeTime());
      }
      if (other.hasTaskOutcomeLocation()) {
        mergeTaskOutcomeLocation(other.getTaskOutcomeLocation());
      }
      if (other.taskOutcomeLocationSource_ != 0) {
        setTaskOutcomeLocationSourceValue(other.getTaskOutcomeLocationSourceValue());
      }
      if (!other.getTrackingId().isEmpty()) {
        trackingId_ = other.trackingId_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.getDeliveryVehicleId().isEmpty()) {
        deliveryVehicleId_ = other.deliveryVehicleId_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.hasPlannedLocation()) {
        mergePlannedLocation(other.getPlannedLocation());
      }
      if (other.hasTaskDuration()) {
        mergeTaskDuration(other.getTaskDuration());
      }
      if (other.hasTargetTimeWindow()) {
        mergeTargetTimeWindow(other.getTargetTimeWindow());
      }
      if (other.hasJourneySharingInfo()) {
        mergeJourneySharingInfo(other.getJourneySharingInfo());
      }
      if (other.hasTaskTrackingViewConfig()) {
        mergeTaskTrackingViewConfig(other.getTaskTrackingViewConfig());
      }
      if (attributesBuilder_ == null) {
        if (!other.attributes_.isEmpty()) {
          if (attributes_.isEmpty()) {
            attributes_ = other.attributes_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureAttributesIsMutable();
            attributes_.addAll(other.attributes_);
          }
          onChanged();
        }
      } else {
        if (!other.attributes_.isEmpty()) {
          if (attributesBuilder_.isEmpty()) {
            attributesBuilder_.dispose();
            attributesBuilder_ = null;
            attributes_ = other.attributes_;
            bitField0_ = (bitField0_ & ~0x00004000);
            attributesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getAttributesFieldBuilder()
                    : null;
          } else {
            attributesBuilder_.addAllMessages(other.attributes_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 16:
              {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
            case 24:
              {
                state_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            case 34:
              {
                trackingId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 34
            case 42:
              {
                deliveryVehicleId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000100;
                break;
              } // case 42
            case 50:
              {
                input.readMessage(getPlannedLocationFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 50
            case 58:
              {
                input.readMessage(getTaskDurationFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 58
            case 66:
              {
                input.readMessage(
                    getJourneySharingInfoFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 66
            case 72:
              {
                taskOutcome_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 72
            case 82:
              {
                input.readMessage(getTaskOutcomeTimeFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 82
            case 90:
              {
                input.readMessage(
                    getTaskOutcomeLocationFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 90
            case 96:
              {
                taskOutcomeLocationSource_ = input.readEnum();
                bitField0_ |= 0x00000040;
                break;
              } // case 96
            case 106:
              {
                input.readMessage(
                    getTaskTrackingViewConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00002000;
                break;
              } // case 106
            case 114:
              {
                input.readMessage(
                    getTargetTimeWindowFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 114
            case 122:
              {
                com.google.maps.fleetengine.delivery.v1.TaskAttribute m =
                    input.readMessage(
                        com.google.maps.fleetengine.delivery.v1.TaskAttribute.parser(),
                        extensionRegistry);
                if (attributesBuilder_ == null) {
                  ensureAttributesIsMutable();
                  attributes_.add(m);
                } else {
                  attributesBuilder_.addMessage(m);
                }
                break;
              } // case 122
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     *
     *
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Must be in the format `providers/{provider}/tasks/{task}`.
     * </pre>
     *
     * <code>string name = 1;</code>
     *
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     *
     *
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or
     * shipment.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or
     * shipment.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or
     * shipment.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The type.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task.Type getType() {
      com.google.maps.fleetengine.delivery.v1.Task.Type result =
          com.google.maps.fleetengine.delivery.v1.Task.Type.forNumber(type_);
      return result == null
          ? com.google.maps.fleetengine.delivery.v1.Task.Type.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or
     * shipment.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.google.maps.fleetengine.delivery.v1.Task.Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. Defines the type of the Task. For example, a break or
     * shipment.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.Type type = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      type_ = 0;
      onChanged();
      return this;
    }

    private int state_ = 0;
    /**
     *
     *
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return state_;
    }
    /**
     *
     *
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      state_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The state.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task.State getState() {
      com.google.maps.fleetengine.delivery.v1.Task.State result =
          com.google.maps.fleetengine.delivery.v1.Task.State.forNumber(state_);
      return result == null
          ? com.google.maps.fleetengine.delivery.v1.Task.State.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.google.maps.fleetengine.delivery.v1.Task.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The current execution state of the Task.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.State state = 3 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      state_ = 0;
      onChanged();
      return this;
    }

    private int taskOutcome_ = 0;
    /**
     *
     *
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     *
     * @return The enum numeric value on the wire for taskOutcome.
     */
    @java.lang.Override
    public int getTaskOutcomeValue() {
      return taskOutcome_;
    }
    /**
     *
     *
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     *
     * @param value The enum numeric value on the wire for taskOutcome to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcomeValue(int value) {
      taskOutcome_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     *
     * @return The taskOutcome.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome getTaskOutcome() {
      com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome result =
          com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome.forNumber(taskOutcome_);
      return result == null
          ? com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     *
     * @param value The taskOutcome to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcome(com.google.maps.fleetengine.delivery.v1.Task.TaskOutcome value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      taskOutcome_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The outcome of the Task.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.Task.TaskOutcome task_outcome = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTaskOutcome() {
      bitField0_ = (bitField0_ & ~0x00000008);
      taskOutcome_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp taskOutcomeTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        taskOutcomeTimeBuilder_;
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     *
     * @return Whether the taskOutcomeTime field is set.
     */
    public boolean hasTaskOutcomeTime() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     *
     * @return The taskOutcomeTime.
     */
    public com.google.protobuf.Timestamp getTaskOutcomeTime() {
      if (taskOutcomeTimeBuilder_ == null) {
        return taskOutcomeTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : taskOutcomeTime_;
      } else {
        return taskOutcomeTimeBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder setTaskOutcomeTime(com.google.protobuf.Timestamp value) {
      if (taskOutcomeTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskOutcomeTime_ = value;
      } else {
        taskOutcomeTimeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder setTaskOutcomeTime(com.google.protobuf.Timestamp.Builder builderForValue) {
      if (taskOutcomeTimeBuilder_ == null) {
        taskOutcomeTime_ = builderForValue.build();
      } else {
        taskOutcomeTimeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder mergeTaskOutcomeTime(com.google.protobuf.Timestamp value) {
      if (taskOutcomeTimeBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && taskOutcomeTime_ != null
            && taskOutcomeTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
          getTaskOutcomeTimeBuilder().mergeFrom(value);
        } else {
          taskOutcomeTime_ = value;
        }
      } else {
        taskOutcomeTimeBuilder_.mergeFrom(value);
      }
      if (taskOutcomeTime_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public Builder clearTaskOutcomeTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      taskOutcomeTime_ = null;
      if (taskOutcomeTimeBuilder_ != null) {
        taskOutcomeTimeBuilder_.dispose();
        taskOutcomeTimeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public com.google.protobuf.Timestamp.Builder getTaskOutcomeTimeBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getTaskOutcomeTimeFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTaskOutcomeTimeOrBuilder() {
      if (taskOutcomeTimeBuilder_ != null) {
        return taskOutcomeTimeBuilder_.getMessageOrBuilder();
      } else {
        return taskOutcomeTime_ == null
            ? com.google.protobuf.Timestamp.getDefaultInstance()
            : taskOutcomeTime_;
      }
    }
    /**
     *
     *
     * <pre>
     * The timestamp that indicates when the `Task`'s outcome was set by the
     * provider.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp task_outcome_time = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp,
            com.google.protobuf.Timestamp.Builder,
            com.google.protobuf.TimestampOrBuilder>
        getTaskOutcomeTimeFieldBuilder() {
      if (taskOutcomeTimeBuilder_ == null) {
        taskOutcomeTimeBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp,
                com.google.protobuf.Timestamp.Builder,
                com.google.protobuf.TimestampOrBuilder>(
                getTaskOutcomeTime(), getParentForChildren(), isClean());
        taskOutcomeTime_ = null;
      }
      return taskOutcomeTimeBuilder_;
    }

    private com.google.maps.fleetengine.delivery.v1.LocationInfo taskOutcomeLocation_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.LocationInfo,
            com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder,
            com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>
        taskOutcomeLocationBuilder_;
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     *
     * @return Whether the taskOutcomeLocation field is set.
     */
    public boolean hasTaskOutcomeLocation() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     *
     * @return The taskOutcomeLocation.
     */
    public com.google.maps.fleetengine.delivery.v1.LocationInfo getTaskOutcomeLocation() {
      if (taskOutcomeLocationBuilder_ == null) {
        return taskOutcomeLocation_ == null
            ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
            : taskOutcomeLocation_;
      } else {
        return taskOutcomeLocationBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder setTaskOutcomeLocation(
        com.google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (taskOutcomeLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskOutcomeLocation_ = value;
      } else {
        taskOutcomeLocationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder setTaskOutcomeLocation(
        com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder builderForValue) {
      if (taskOutcomeLocationBuilder_ == null) {
        taskOutcomeLocation_ = builderForValue.build();
      } else {
        taskOutcomeLocationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder mergeTaskOutcomeLocation(
        com.google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (taskOutcomeLocationBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)
            && taskOutcomeLocation_ != null
            && taskOutcomeLocation_
                != com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()) {
          getTaskOutcomeLocationBuilder().mergeFrom(value);
        } else {
          taskOutcomeLocation_ = value;
        }
      } else {
        taskOutcomeLocationBuilder_.mergeFrom(value);
      }
      if (taskOutcomeLocation_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public Builder clearTaskOutcomeLocation() {
      bitField0_ = (bitField0_ & ~0x00000020);
      taskOutcomeLocation_ = null;
      if (taskOutcomeLocationBuilder_ != null) {
        taskOutcomeLocationBuilder_.dispose();
        taskOutcomeLocationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder
        getTaskOutcomeLocationBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getTaskOutcomeLocationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder
        getTaskOutcomeLocationOrBuilder() {
      if (taskOutcomeLocationBuilder_ != null) {
        return taskOutcomeLocationBuilder_.getMessageOrBuilder();
      } else {
        return taskOutcomeLocation_ == null
            ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
            : taskOutcomeLocation_;
      }
    }
    /**
     *
     *
     * <pre>
     * The location where the `Task`'s outcome was set. This value is updated as
     * part of `UpdateTask`. If this value isn't explicitly updated by the
     * provider, then Fleet Engine populates it by default with the last known
     * vehicle location (the *raw* location).
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.LocationInfo task_outcome_location = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.LocationInfo,
            com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder,
            com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>
        getTaskOutcomeLocationFieldBuilder() {
      if (taskOutcomeLocationBuilder_ == null) {
        taskOutcomeLocationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.fleetengine.delivery.v1.LocationInfo,
                com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder,
                com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>(
                getTaskOutcomeLocation(), getParentForChildren(), isClean());
        taskOutcomeLocation_ = null;
      }
      return taskOutcomeLocationBuilder_;
    }

    private int taskOutcomeLocationSource_ = 0;
    /**
     *
     *
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
     * </code>
     *
     * @return The enum numeric value on the wire for taskOutcomeLocationSource.
     */
    @java.lang.Override
    public int getTaskOutcomeLocationSourceValue() {
      return taskOutcomeLocationSource_;
    }
    /**
     *
     *
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
     * </code>
     *
     * @param value The enum numeric value on the wire for taskOutcomeLocationSource to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcomeLocationSourceValue(int value) {
      taskOutcomeLocationSource_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
     * </code>
     *
     * @return The taskOutcomeLocationSource.
     */
    @java.lang.Override
    public com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource
        getTaskOutcomeLocationSource() {
      com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource result =
          com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.forNumber(
              taskOutcomeLocationSource_);
      return result == null
          ? com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource.UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
     * </code>
     *
     * @param value The taskOutcomeLocationSource to set.
     * @return This builder for chaining.
     */
    public Builder setTaskOutcomeLocationSource(
        com.google.maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      taskOutcomeLocationSource_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Indicates where the value of the `task_outcome_location` came from.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.TaskOutcomeLocationSource task_outcome_location_source = 12;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTaskOutcomeLocationSource() {
      bitField0_ = (bitField0_ & ~0x00000040);
      taskOutcomeLocationSource_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object trackingId_ = "";
    /**
     *
     *
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid
     * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @return The trackingId.
     */
    public java.lang.String getTrackingId() {
      java.lang.Object ref = trackingId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        trackingId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid
     * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @return The bytes for trackingId.
     */
    public com.google.protobuf.ByteString getTrackingIdBytes() {
      java.lang.Object ref = trackingId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        trackingId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid
     * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @param value The trackingId to set.
     * @return This builder for chaining.
     */
    public Builder setTrackingId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      trackingId_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid
     * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTrackingId() {
      trackingId_ = getDefaultInstance().getTrackingId();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. This field facilitates the storing of an ID so you can avoid
     * using a complicated mapping. You cannot set `tracking_id` for Tasks of type
     * `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
     * following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string tracking_id = 4 [(.google.api.field_behavior) = IMMUTABLE];</code>
     *
     * @param value The bytes for trackingId to set.
     * @return This builder for chaining.
     */
    public Builder setTrackingIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      trackingId_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object deliveryVehicleId_ = "";
    /**
     *
     *
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery
     * Vehicle IDs are subject to the following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The deliveryVehicleId.
     */
    public java.lang.String getDeliveryVehicleId() {
      java.lang.Object ref = deliveryVehicleId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deliveryVehicleId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery
     * Vehicle IDs are subject to the following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return The bytes for deliveryVehicleId.
     */
    public com.google.protobuf.ByteString getDeliveryVehicleIdBytes() {
      java.lang.Object ref = deliveryVehicleId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        deliveryVehicleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery
     * Vehicle IDs are subject to the following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The deliveryVehicleId to set.
     * @return This builder for chaining.
     */
    public Builder setDeliveryVehicleId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      deliveryVehicleId_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery
     * Vehicle IDs are subject to the following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDeliveryVehicleId() {
      deliveryVehicleId_ = getDefaultInstance().getDeliveryVehicleId();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. The ID of the vehicle that is executing this Task. Delivery
     * Vehicle IDs are subject to the following restrictions:
     *
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     * </pre>
     *
     * <code>string delivery_vehicle_id = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     *
     * @param value The bytes for deliveryVehicleId to set.
     * @return This builder for chaining.
     */
    public Builder setDeliveryVehicleIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      deliveryVehicleId_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private com.google.maps.fleetengine.delivery.v1.LocationInfo plannedLocation_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.LocationInfo,
            com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder,
            com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>
        plannedLocationBuilder_;
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return Whether the plannedLocation field is set.
     */
    public boolean hasPlannedLocation() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The plannedLocation.
     */
    public com.google.maps.fleetengine.delivery.v1.LocationInfo getPlannedLocation() {
      if (plannedLocationBuilder_ == null) {
        return plannedLocation_ == null
            ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
            : plannedLocation_;
      } else {
        return plannedLocationBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder setPlannedLocation(com.google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (plannedLocationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        plannedLocation_ = value;
      } else {
        plannedLocationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder setPlannedLocation(
        com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder builderForValue) {
      if (plannedLocationBuilder_ == null) {
        plannedLocation_ = builderForValue.build();
      } else {
        plannedLocationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder mergePlannedLocation(
        com.google.maps.fleetengine.delivery.v1.LocationInfo value) {
      if (plannedLocationBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)
            && plannedLocation_ != null
            && plannedLocation_
                != com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()) {
          getPlannedLocationBuilder().mergeFrom(value);
        } else {
          plannedLocation_ = value;
        }
      } else {
        plannedLocationBuilder_.mergeFrom(value);
      }
      if (plannedLocation_ != null) {
        bitField0_ |= 0x00000200;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder clearPlannedLocation() {
      bitField0_ = (bitField0_ & ~0x00000200);
      plannedLocation_ = null;
      if (plannedLocationBuilder_ != null) {
        plannedLocationBuilder_.dispose();
        plannedLocationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder
        getPlannedLocationBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getPlannedLocationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder
        getPlannedLocationOrBuilder() {
      if (plannedLocationBuilder_ != null) {
        return plannedLocationBuilder_.getMessageOrBuilder();
      } else {
        return plannedLocation_ == null
            ? com.google.maps.fleetengine.delivery.v1.LocationInfo.getDefaultInstance()
            : plannedLocation_;
      }
    }
    /**
     *
     *
     * <pre>
     * Immutable. The location where the Task will be completed.
     * Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.LocationInfo planned_location = 6 [(.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.LocationInfo,
            com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder,
            com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>
        getPlannedLocationFieldBuilder() {
      if (plannedLocationBuilder_ == null) {
        plannedLocationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.fleetengine.delivery.v1.LocationInfo,
                com.google.maps.fleetengine.delivery.v1.LocationInfo.Builder,
                com.google.maps.fleetengine.delivery.v1.LocationInfoOrBuilder>(
                getPlannedLocation(), getParentForChildren(), isClean());
        plannedLocation_ = null;
      }
      return plannedLocationBuilder_;
    }

    private com.google.protobuf.Duration taskDuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        taskDurationBuilder_;
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return Whether the taskDuration field is set.
     */
    public boolean hasTaskDuration() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     *
     * @return The taskDuration.
     */
    public com.google.protobuf.Duration getTaskDuration() {
      if (taskDurationBuilder_ == null) {
        return taskDuration_ == null
            ? com.google.protobuf.Duration.getDefaultInstance()
            : taskDuration_;
      } else {
        return taskDurationBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder setTaskDuration(com.google.protobuf.Duration value) {
      if (taskDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskDuration_ = value;
      } else {
        taskDurationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder setTaskDuration(com.google.protobuf.Duration.Builder builderForValue) {
      if (taskDurationBuilder_ == null) {
        taskDuration_ = builderForValue.build();
      } else {
        taskDurationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder mergeTaskDuration(com.google.protobuf.Duration value) {
      if (taskDurationBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)
            && taskDuration_ != null
            && taskDuration_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getTaskDurationBuilder().mergeFrom(value);
        } else {
          taskDuration_ = value;
        }
      } else {
        taskDurationBuilder_.mergeFrom(value);
      }
      if (taskDuration_ != null) {
        bitField0_ |= 0x00000400;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public Builder clearTaskDuration() {
      bitField0_ = (bitField0_ & ~0x00000400);
      taskDuration_ = null;
      if (taskDurationBuilder_ != null) {
        taskDurationBuilder_.dispose();
        taskDurationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public com.google.protobuf.Duration.Builder getTaskDurationBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getTaskDurationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    public com.google.protobuf.DurationOrBuilder getTaskDurationOrBuilder() {
      if (taskDurationBuilder_ != null) {
        return taskDurationBuilder_.getMessageOrBuilder();
      } else {
        return taskDuration_ == null
            ? com.google.protobuf.Duration.getDefaultInstance()
            : taskDuration_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Immutable. The time needed to execute a Task at this location.
     * </pre>
     *
     * <code>
     * .google.protobuf.Duration task_duration = 7 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        getTaskDurationFieldBuilder() {
      if (taskDurationBuilder_ == null) {
        taskDurationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration,
                com.google.protobuf.Duration.Builder,
                com.google.protobuf.DurationOrBuilder>(
                getTaskDuration(), getParentForChildren(), isClean());
        taskDuration_ = null;
      }
      return taskDurationBuilder_;
    }

    private com.google.maps.fleetengine.delivery.v1.TimeWindow targetTimeWindow_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.TimeWindow,
            com.google.maps.fleetengine.delivery.v1.TimeWindow.Builder,
            com.google.maps.fleetengine.delivery.v1.TimeWindowOrBuilder>
        targetTimeWindowBuilder_;
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     *
     * @return Whether the targetTimeWindow field is set.
     */
    public boolean hasTargetTimeWindow() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     *
     * @return The targetTimeWindow.
     */
    public com.google.maps.fleetengine.delivery.v1.TimeWindow getTargetTimeWindow() {
      if (targetTimeWindowBuilder_ == null) {
        return targetTimeWindow_ == null
            ? com.google.maps.fleetengine.delivery.v1.TimeWindow.getDefaultInstance()
            : targetTimeWindow_;
      } else {
        return targetTimeWindowBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    public Builder setTargetTimeWindow(com.google.maps.fleetengine.delivery.v1.TimeWindow value) {
      if (targetTimeWindowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        targetTimeWindow_ = value;
      } else {
        targetTimeWindowBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    public Builder setTargetTimeWindow(
        com.google.maps.fleetengine.delivery.v1.TimeWindow.Builder builderForValue) {
      if (targetTimeWindowBuilder_ == null) {
        targetTimeWindow_ = builderForValue.build();
      } else {
        targetTimeWindowBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    public Builder mergeTargetTimeWindow(com.google.maps.fleetengine.delivery.v1.TimeWindow value) {
      if (targetTimeWindowBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)
            && targetTimeWindow_ != null
            && targetTimeWindow_
                != com.google.maps.fleetengine.delivery.v1.TimeWindow.getDefaultInstance()) {
          getTargetTimeWindowBuilder().mergeFrom(value);
        } else {
          targetTimeWindow_ = value;
        }
      } else {
        targetTimeWindowBuilder_.mergeFrom(value);
      }
      if (targetTimeWindow_ != null) {
        bitField0_ |= 0x00000800;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    public Builder clearTargetTimeWindow() {
      bitField0_ = (bitField0_ & ~0x00000800);
      targetTimeWindow_ = null;
      if (targetTimeWindowBuilder_ != null) {
        targetTimeWindowBuilder_.dispose();
        targetTimeWindowBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TimeWindow.Builder getTargetTimeWindowBuilder() {
      bitField0_ |= 0x00000800;
      onChanged();
      return getTargetTimeWindowFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TimeWindowOrBuilder
        getTargetTimeWindowOrBuilder() {
      if (targetTimeWindowBuilder_ != null) {
        return targetTimeWindowBuilder_.getMessageOrBuilder();
      } else {
        return targetTimeWindow_ == null
            ? com.google.maps.fleetengine.delivery.v1.TimeWindow.getDefaultInstance()
            : targetTimeWindow_;
      }
    }
    /**
     *
     *
     * <pre>
     * The time window during which the task should be completed.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TimeWindow target_time_window = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.TimeWindow,
            com.google.maps.fleetengine.delivery.v1.TimeWindow.Builder,
            com.google.maps.fleetengine.delivery.v1.TimeWindowOrBuilder>
        getTargetTimeWindowFieldBuilder() {
      if (targetTimeWindowBuilder_ == null) {
        targetTimeWindowBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.fleetengine.delivery.v1.TimeWindow,
                com.google.maps.fleetengine.delivery.v1.TimeWindow.Builder,
                com.google.maps.fleetengine.delivery.v1.TimeWindowOrBuilder>(
                getTargetTimeWindow(), getParentForChildren(), isClean());
        targetTimeWindow_ = null;
      }
      return targetTimeWindowBuilder_;
    }

    private com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo journeySharingInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo,
            com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder,
            com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder>
        journeySharingInfoBuilder_;
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return Whether the journeySharingInfo field is set.
     */
    public boolean hasJourneySharingInfo() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     *
     * @return The journeySharingInfo.
     */
    public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo getJourneySharingInfo() {
      if (journeySharingInfoBuilder_ == null) {
        return journeySharingInfo_ == null
            ? com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance()
            : journeySharingInfo_;
      } else {
        return journeySharingInfoBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setJourneySharingInfo(
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo value) {
      if (journeySharingInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        journeySharingInfo_ = value;
      } else {
        journeySharingInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setJourneySharingInfo(
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder builderForValue) {
      if (journeySharingInfoBuilder_ == null) {
        journeySharingInfo_ = builderForValue.build();
      } else {
        journeySharingInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder mergeJourneySharingInfo(
        com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo value) {
      if (journeySharingInfoBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)
            && journeySharingInfo_ != null
            && journeySharingInfo_
                != com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo
                    .getDefaultInstance()) {
          getJourneySharingInfoBuilder().mergeFrom(value);
        } else {
          journeySharingInfo_ = value;
        }
      } else {
        journeySharingInfoBuilder_.mergeFrom(value);
      }
      if (journeySharingInfo_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearJourneySharingInfo() {
      bitField0_ = (bitField0_ & ~0x00001000);
      journeySharingInfo_ = null;
      if (journeySharingInfoBuilder_ != null) {
        journeySharingInfoBuilder_.dispose();
        journeySharingInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder
        getJourneySharingInfoBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getJourneySharingInfoFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder
        getJourneySharingInfoOrBuilder() {
      if (journeySharingInfoBuilder_ != null) {
        return journeySharingInfoBuilder_.getMessageOrBuilder();
      } else {
        return journeySharingInfo_ == null
            ? com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.getDefaultInstance()
            : journeySharingInfo_;
      }
    }
    /**
     *
     *
     * <pre>
     * Output only. Journey sharing-specific fields. Not populated when state is
     * `CLOSED`.
     * </pre>
     *
     * <code>
     * .maps.fleetengine.delivery.v1.Task.JourneySharingInfo journey_sharing_info = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo,
            com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder,
            com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder>
        getJourneySharingInfoFieldBuilder() {
      if (journeySharingInfoBuilder_ == null) {
        journeySharingInfoBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo,
                com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfo.Builder,
                com.google.maps.fleetengine.delivery.v1.Task.JourneySharingInfoOrBuilder>(
                getJourneySharingInfo(), getParentForChildren(), isClean());
        journeySharingInfo_ = null;
      }
      return journeySharingInfoBuilder_;
    }

    private com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig taskTrackingViewConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig,
            com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.Builder,
            com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfigOrBuilder>
        taskTrackingViewConfigBuilder_;
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     *
     * @return Whether the taskTrackingViewConfig field is set.
     */
    public boolean hasTaskTrackingViewConfig() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     *
     * @return The taskTrackingViewConfig.
     */
    public com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig
        getTaskTrackingViewConfig() {
      if (taskTrackingViewConfigBuilder_ == null) {
        return taskTrackingViewConfig_ == null
            ? com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.getDefaultInstance()
            : taskTrackingViewConfig_;
      } else {
        return taskTrackingViewConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    public Builder setTaskTrackingViewConfig(
        com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig value) {
      if (taskTrackingViewConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskTrackingViewConfig_ = value;
      } else {
        taskTrackingViewConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    public Builder setTaskTrackingViewConfig(
        com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.Builder builderForValue) {
      if (taskTrackingViewConfigBuilder_ == null) {
        taskTrackingViewConfig_ = builderForValue.build();
      } else {
        taskTrackingViewConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    public Builder mergeTaskTrackingViewConfig(
        com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig value) {
      if (taskTrackingViewConfigBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0)
            && taskTrackingViewConfig_ != null
            && taskTrackingViewConfig_
                != com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig
                    .getDefaultInstance()) {
          getTaskTrackingViewConfigBuilder().mergeFrom(value);
        } else {
          taskTrackingViewConfig_ = value;
        }
      } else {
        taskTrackingViewConfigBuilder_.mergeFrom(value);
      }
      if (taskTrackingViewConfig_ != null) {
        bitField0_ |= 0x00002000;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    public Builder clearTaskTrackingViewConfig() {
      bitField0_ = (bitField0_ & ~0x00002000);
      taskTrackingViewConfig_ = null;
      if (taskTrackingViewConfigBuilder_ != null) {
        taskTrackingViewConfigBuilder_.dispose();
        taskTrackingViewConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.Builder
        getTaskTrackingViewConfigBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getTaskTrackingViewConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfigOrBuilder
        getTaskTrackingViewConfigOrBuilder() {
      if (taskTrackingViewConfigBuilder_ != null) {
        return taskTrackingViewConfigBuilder_.getMessageOrBuilder();
      } else {
        return taskTrackingViewConfig_ == null
            ? com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.getDefaultInstance()
            : taskTrackingViewConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * The configuration for task tracking that specifies which data elements are
     * visible to the end users under what circumstances.
     * </pre>
     *
     * <code>.maps.fleetengine.delivery.v1.TaskTrackingViewConfig task_tracking_view_config = 13;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig,
            com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.Builder,
            com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfigOrBuilder>
        getTaskTrackingViewConfigFieldBuilder() {
      if (taskTrackingViewConfigBuilder_ == null) {
        taskTrackingViewConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig,
                com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfig.Builder,
                com.google.maps.fleetengine.delivery.v1.TaskTrackingViewConfigOrBuilder>(
                getTaskTrackingViewConfig(), getParentForChildren(), isClean());
        taskTrackingViewConfig_ = null;
      }
      return taskTrackingViewConfigBuilder_;
    }

    private java.util.List<com.google.maps.fleetengine.delivery.v1.TaskAttribute> attributes_ =
        java.util.Collections.emptyList();

    private void ensureAttributesIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        attributes_ =
            new java.util.ArrayList<com.google.maps.fleetengine.delivery.v1.TaskAttribute>(
                attributes_);
        bitField0_ |= 0x00004000;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.TaskAttribute,
            com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder,
            com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder>
        attributesBuilder_;

    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public java.util.List<com.google.maps.fleetengine.delivery.v1.TaskAttribute>
        getAttributesList() {
      if (attributesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(attributes_);
      } else {
        return attributesBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public int getAttributesCount() {
      if (attributesBuilder_ == null) {
        return attributes_.size();
      } else {
        return attributesBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskAttribute getAttributes(int index) {
      if (attributesBuilder_ == null) {
        return attributes_.get(index);
      } else {
        return attributesBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder setAttributes(
        int index, com.google.maps.fleetengine.delivery.v1.TaskAttribute value) {
      if (attributesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributesIsMutable();
        attributes_.set(index, value);
        onChanged();
      } else {
        attributesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder setAttributes(
        int index, com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder builderForValue) {
      if (attributesBuilder_ == null) {
        ensureAttributesIsMutable();
        attributes_.set(index, builderForValue.build());
        onChanged();
      } else {
        attributesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder addAttributes(com.google.maps.fleetengine.delivery.v1.TaskAttribute value) {
      if (attributesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributesIsMutable();
        attributes_.add(value);
        onChanged();
      } else {
        attributesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder addAttributes(
        int index, com.google.maps.fleetengine.delivery.v1.TaskAttribute value) {
      if (attributesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAttributesIsMutable();
        attributes_.add(index, value);
        onChanged();
      } else {
        attributesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder addAttributes(
        com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder builderForValue) {
      if (attributesBuilder_ == null) {
        ensureAttributesIsMutable();
        attributes_.add(builderForValue.build());
        onChanged();
      } else {
        attributesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder addAttributes(
        int index, com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder builderForValue) {
      if (attributesBuilder_ == null) {
        ensureAttributesIsMutable();
        attributes_.add(index, builderForValue.build());
        onChanged();
      } else {
        attributesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder addAllAttributes(
        java.lang.Iterable<? extends com.google.maps.fleetengine.delivery.v1.TaskAttribute>
            values) {
      if (attributesBuilder_ == null) {
        ensureAttributesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, attributes_);
        onChanged();
      } else {
        attributesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder clearAttributes() {
      if (attributesBuilder_ == null) {
        attributes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        attributesBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public Builder removeAttributes(int index) {
      if (attributesBuilder_ == null) {
        ensureAttributesIsMutable();
        attributes_.remove(index);
        onChanged();
      } else {
        attributesBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder getAttributesBuilder(
        int index) {
      return getAttributesFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder getAttributesOrBuilder(
        int index) {
      if (attributesBuilder_ == null) {
        return attributes_.get(index);
      } else {
        return attributesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public java.util.List<? extends com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder>
        getAttributesOrBuilderList() {
      if (attributesBuilder_ != null) {
        return attributesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(attributes_);
      }
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder addAttributesBuilder() {
      return getAttributesFieldBuilder()
          .addBuilder(com.google.maps.fleetengine.delivery.v1.TaskAttribute.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder addAttributesBuilder(
        int index) {
      return getAttributesFieldBuilder()
          .addBuilder(
              index, com.google.maps.fleetengine.delivery.v1.TaskAttribute.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * A list of custom Task attributes. Each attribute must have a unique key.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.delivery.v1.TaskAttribute attributes = 15;</code>
     */
    public java.util.List<com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder>
        getAttributesBuilderList() {
      return getAttributesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.maps.fleetengine.delivery.v1.TaskAttribute,
            com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder,
            com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder>
        getAttributesFieldBuilder() {
      if (attributesBuilder_ == null) {
        attributesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.maps.fleetengine.delivery.v1.TaskAttribute,
                com.google.maps.fleetengine.delivery.v1.TaskAttribute.Builder,
                com.google.maps.fleetengine.delivery.v1.TaskAttributeOrBuilder>(
                attributes_, ((bitField0_ & 0x00004000) != 0), getParentForChildren(), isClean());
        attributes_ = null;
      }
      return attributesBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:maps.fleetengine.delivery.v1.Task)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.delivery.v1.Task)
  private static final com.google.maps.fleetengine.delivery.v1.Task DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.fleetengine.delivery.v1.Task();
  }

  public static com.google.maps.fleetengine.delivery.v1.Task getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Task> PARSER =
      new com.google.protobuf.AbstractParser<Task>() {
        @java.lang.Override
        public Task parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Task> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Task> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.fleetengine.delivery.v1.Task getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
