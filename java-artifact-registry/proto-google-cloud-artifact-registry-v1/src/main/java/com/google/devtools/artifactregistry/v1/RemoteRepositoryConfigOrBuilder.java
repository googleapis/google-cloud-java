/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/artifactregistry/v1/repository.proto

// Protobuf Java Version: 3.25.5
package com.google.devtools.artifactregistry.v1;

public interface RemoteRepositoryConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.devtools.artifactregistry.v1.RemoteRepositoryConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Specific settings for a Docker remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository docker_repository = 2;
   * </code>
   *
   * @return Whether the dockerRepository field is set.
   */
  boolean hasDockerRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Docker remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository docker_repository = 2;
   * </code>
   *
   * @return The dockerRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository
      getDockerRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Docker remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepository docker_repository = 2;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.DockerRepositoryOrBuilder
      getDockerRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * Specific settings for a Maven remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository maven_repository = 3;
   * </code>
   *
   * @return Whether the mavenRepository field is set.
   */
  boolean hasMavenRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Maven remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository maven_repository = 3;
   * </code>
   *
   * @return The mavenRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository
      getMavenRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Maven remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepository maven_repository = 3;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.MavenRepositoryOrBuilder
      getMavenRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * Specific settings for an Npm remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository npm_repository = 4;
   * </code>
   *
   * @return Whether the npmRepository field is set.
   */
  boolean hasNpmRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for an Npm remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository npm_repository = 4;
   * </code>
   *
   * @return The npmRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository getNpmRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for an Npm remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepository npm_repository = 4;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.NpmRepositoryOrBuilder
      getNpmRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * Specific settings for a Python remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository python_repository = 5;
   * </code>
   *
   * @return Whether the pythonRepository field is set.
   */
  boolean hasPythonRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Python remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository python_repository = 5;
   * </code>
   *
   * @return The pythonRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository
      getPythonRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Python remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepository python_repository = 5;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.PythonRepositoryOrBuilder
      getPythonRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * Specific settings for an Apt remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository apt_repository = 6;
   * </code>
   *
   * @return Whether the aptRepository field is set.
   */
  boolean hasAptRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for an Apt remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository apt_repository = 6;
   * </code>
   *
   * @return The aptRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository getAptRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for an Apt remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepository apt_repository = 6;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.AptRepositoryOrBuilder
      getAptRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * Specific settings for a Yum remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository yum_repository = 7;
   * </code>
   *
   * @return Whether the yumRepository field is set.
   */
  boolean hasYumRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Yum remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository yum_repository = 7;
   * </code>
   *
   * @return The yumRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository getYumRepository();
  /**
   *
   *
   * <pre>
   * Specific settings for a Yum remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository yum_repository = 7;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepositoryOrBuilder
      getYumRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * Common remote repository settings.
   * Used as the remote repository upstream URL.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository common_repository = 14;
   * </code>
   *
   * @return Whether the commonRepository field is set.
   */
  boolean hasCommonRepository();
  /**
   *
   *
   * <pre>
   * Common remote repository settings.
   * Used as the remote repository upstream URL.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository common_repository = 14;
   * </code>
   *
   * @return The commonRepository.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository
      getCommonRepository();
  /**
   *
   *
   * <pre>
   * Common remote repository settings.
   * Used as the remote repository upstream URL.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepository common_repository = 14;
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.CommonRemoteRepositoryOrBuilder
      getCommonRepositoryOrBuilder();

  /**
   *
   *
   * <pre>
   * The description of the remote source.
   * </pre>
   *
   * <code>string description = 1;</code>
   *
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   *
   *
   * <pre>
   * The description of the remote source.
   * </pre>
   *
   * <code>string description = 1;</code>
   *
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString getDescriptionBytes();

  /**
   *
   *
   * <pre>
   * Optional. The credentials used to access the remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials upstream_credentials = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the upstreamCredentials field is set.
   */
  boolean hasUpstreamCredentials();
  /**
   *
   *
   * <pre>
   * Optional. The credentials used to access the remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials upstream_credentials = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The upstreamCredentials.
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials
      getUpstreamCredentials();
  /**
   *
   *
   * <pre>
   * Optional. The credentials used to access the remote repository.
   * </pre>
   *
   * <code>
   * .google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentials upstream_credentials = 9 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.UpstreamCredentialsOrBuilder
      getUpstreamCredentialsOrBuilder();

  /**
   *
   *
   * <pre>
   * Input only. A create/update remote repo option to avoid making a HEAD/GET
   * request to validate a remote repo and any supplied upstream credentials.
   * </pre>
   *
   * <code>bool disable_upstream_validation = 12 [(.google.api.field_behavior) = INPUT_ONLY];</code>
   *
   * @return The disableUpstreamValidation.
   */
  boolean getDisableUpstreamValidation();

  com.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.RemoteSourceCase
      getRemoteSourceCase();
}
