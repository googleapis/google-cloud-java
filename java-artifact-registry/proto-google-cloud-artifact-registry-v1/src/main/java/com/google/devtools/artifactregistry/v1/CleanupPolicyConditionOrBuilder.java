/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/artifactregistry/v1/repository.proto

// Protobuf Java Version: 3.25.5
package com.google.devtools.artifactregistry.v1;

public interface CleanupPolicyConditionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.devtools.artifactregistry.v1.CleanupPolicyCondition)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Match versions by tag status.
   * </pre>
   *
   * <code>
   * optional .google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState tag_state = 2;
   * </code>
   *
   * @return Whether the tagState field is set.
   */
  boolean hasTagState();
  /**
   *
   *
   * <pre>
   * Match versions by tag status.
   * </pre>
   *
   * <code>
   * optional .google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState tag_state = 2;
   * </code>
   *
   * @return The enum numeric value on the wire for tagState.
   */
  int getTagStateValue();
  /**
   *
   *
   * <pre>
   * Match versions by tag status.
   * </pre>
   *
   * <code>
   * optional .google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState tag_state = 2;
   * </code>
   *
   * @return The tagState.
   */
  com.google.devtools.artifactregistry.v1.CleanupPolicyCondition.TagState getTagState();

  /**
   *
   *
   * <pre>
   * Match versions by tag prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string tag_prefixes = 3;</code>
   *
   * @return A list containing the tagPrefixes.
   */
  java.util.List<java.lang.String> getTagPrefixesList();
  /**
   *
   *
   * <pre>
   * Match versions by tag prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string tag_prefixes = 3;</code>
   *
   * @return The count of tagPrefixes.
   */
  int getTagPrefixesCount();
  /**
   *
   *
   * <pre>
   * Match versions by tag prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string tag_prefixes = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The tagPrefixes at the given index.
   */
  java.lang.String getTagPrefixes(int index);
  /**
   *
   *
   * <pre>
   * Match versions by tag prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string tag_prefixes = 3;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the tagPrefixes at the given index.
   */
  com.google.protobuf.ByteString getTagPrefixesBytes(int index);

  /**
   *
   *
   * <pre>
   * Match versions by version name prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string version_name_prefixes = 4;</code>
   *
   * @return A list containing the versionNamePrefixes.
   */
  java.util.List<java.lang.String> getVersionNamePrefixesList();
  /**
   *
   *
   * <pre>
   * Match versions by version name prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string version_name_prefixes = 4;</code>
   *
   * @return The count of versionNamePrefixes.
   */
  int getVersionNamePrefixesCount();
  /**
   *
   *
   * <pre>
   * Match versions by version name prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string version_name_prefixes = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The versionNamePrefixes at the given index.
   */
  java.lang.String getVersionNamePrefixes(int index);
  /**
   *
   *
   * <pre>
   * Match versions by version name prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string version_name_prefixes = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the versionNamePrefixes at the given index.
   */
  com.google.protobuf.ByteString getVersionNamePrefixesBytes(int index);

  /**
   *
   *
   * <pre>
   * Match versions by package prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string package_name_prefixes = 5;</code>
   *
   * @return A list containing the packageNamePrefixes.
   */
  java.util.List<java.lang.String> getPackageNamePrefixesList();
  /**
   *
   *
   * <pre>
   * Match versions by package prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string package_name_prefixes = 5;</code>
   *
   * @return The count of packageNamePrefixes.
   */
  int getPackageNamePrefixesCount();
  /**
   *
   *
   * <pre>
   * Match versions by package prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string package_name_prefixes = 5;</code>
   *
   * @param index The index of the element to return.
   * @return The packageNamePrefixes at the given index.
   */
  java.lang.String getPackageNamePrefixes(int index);
  /**
   *
   *
   * <pre>
   * Match versions by package prefix. Applied on any prefix match.
   * </pre>
   *
   * <code>repeated string package_name_prefixes = 5;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the packageNamePrefixes at the given index.
   */
  com.google.protobuf.ByteString getPackageNamePrefixesBytes(int index);

  /**
   *
   *
   * <pre>
   * Match versions older than a duration.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration older_than = 6;</code>
   *
   * @return Whether the olderThan field is set.
   */
  boolean hasOlderThan();
  /**
   *
   *
   * <pre>
   * Match versions older than a duration.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration older_than = 6;</code>
   *
   * @return The olderThan.
   */
  com.google.protobuf.Duration getOlderThan();
  /**
   *
   *
   * <pre>
   * Match versions older than a duration.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration older_than = 6;</code>
   */
  com.google.protobuf.DurationOrBuilder getOlderThanOrBuilder();

  /**
   *
   *
   * <pre>
   * Match versions newer than a duration.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration newer_than = 7;</code>
   *
   * @return Whether the newerThan field is set.
   */
  boolean hasNewerThan();
  /**
   *
   *
   * <pre>
   * Match versions newer than a duration.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration newer_than = 7;</code>
   *
   * @return The newerThan.
   */
  com.google.protobuf.Duration getNewerThan();
  /**
   *
   *
   * <pre>
   * Match versions newer than a duration.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration newer_than = 7;</code>
   */
  com.google.protobuf.DurationOrBuilder getNewerThanOrBuilder();
}
