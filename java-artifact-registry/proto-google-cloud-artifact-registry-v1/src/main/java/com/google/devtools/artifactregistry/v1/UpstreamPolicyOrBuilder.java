/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/artifactregistry/v1/repository.proto

// Protobuf Java Version: 3.25.5
package com.google.devtools.artifactregistry.v1;

public interface UpstreamPolicyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.devtools.artifactregistry.v1.UpstreamPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The user-provided ID of the upstream policy.
   * </pre>
   *
   * <code>string id = 1;</code>
   *
   * @return The id.
   */
  java.lang.String getId();
  /**
   *
   *
   * <pre>
   * The user-provided ID of the upstream policy.
   * </pre>
   *
   * <code>string id = 1;</code>
   *
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString getIdBytes();

  /**
   *
   *
   * <pre>
   * A reference to the repository resource, for example:
   * `projects/p1/locations/us-central1/repositories/repo1`.
   * </pre>
   *
   * <code>string repository = 2 [(.google.api.resource_reference) = { ... }</code>
   *
   * @return The repository.
   */
  java.lang.String getRepository();
  /**
   *
   *
   * <pre>
   * A reference to the repository resource, for example:
   * `projects/p1/locations/us-central1/repositories/repo1`.
   * </pre>
   *
   * <code>string repository = 2 [(.google.api.resource_reference) = { ... }</code>
   *
   * @return The bytes for repository.
   */
  com.google.protobuf.ByteString getRepositoryBytes();

  /**
   *
   *
   * <pre>
   * Entries with a greater priority value take precedence in the pull order.
   * </pre>
   *
   * <code>int32 priority = 3;</code>
   *
   * @return The priority.
   */
  int getPriority();
}
