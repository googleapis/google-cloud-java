/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/artifactregistry/v1/kfp_artifact.proto

// Protobuf Java Version: 3.25.5
package com.google.devtools.artifactregistry.v1;

public final class KfpArtifactProto {
  private KfpArtifactProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_devtools_artifactregistry_v1_KfpArtifact_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_devtools_artifactregistry_v1_KfpArtifact_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n6google/devtools/artifactregistry/v1/kf"
          + "p_artifact.proto\022#google.devtools.artifa"
          + "ctregistry.v1\032\037google/api/field_behavior"
          + ".proto\032\031google/api/resource.proto\"\304\001\n\013Kf"
          + "pArtifact\022\021\n\004name\030\001 \001(\tB\003\340A\003\022\017\n\007version\030"
          + "\002 \001(\t:\220\001\352A\214\001\n+artifactregistry.googleapi"
          + "s.com/KfpArtifact\022]projects/{project}/lo"
          + "cations/{location}/repositories/{reposit"
          + "ory}/kfpArtifacts/{kfp_artifact}B\373\001\n\'com"
          + ".google.devtools.artifactregistry.v1B\020Kf"
          + "pArtifactProtoP\001ZPcloud.google.com/go/ar"
          + "tifactregistry/apiv1/artifactregistrypb;"
          + "artifactregistrypb\252\002 Google.Cloud.Artifa"
          + "ctRegistry.V1\312\002 Google\\Cloud\\ArtifactReg"
          + "istry\\V1\352\002#Google::Cloud::ArtifactRegist"
          + "ry::V1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.FieldBehaviorProto.getDescriptor(),
              com.google.api.ResourceProto.getDescriptor(),
            });
    internal_static_google_devtools_artifactregistry_v1_KfpArtifact_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_devtools_artifactregistry_v1_KfpArtifact_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_devtools_artifactregistry_v1_KfpArtifact_descriptor,
            new java.lang.String[] {
              "Name", "Version",
            });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    registry.add(com.google.api.ResourceProto.resource);
    com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(
        descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.api.ResourceProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
