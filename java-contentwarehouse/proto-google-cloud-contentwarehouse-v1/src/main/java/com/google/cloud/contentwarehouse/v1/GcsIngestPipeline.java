/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/contentwarehouse/v1/pipelines.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.contentwarehouse.v1;

/**
 *
 *
 * <pre>
 * The configuration of the Cloud Storage Ingestion pipeline.
 * </pre>
 *
 * Protobuf type {@code google.cloud.contentwarehouse.v1.GcsIngestPipeline}
 */
public final class GcsIngestPipeline extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.contentwarehouse.v1.GcsIngestPipeline)
    GcsIngestPipelineOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GcsIngestPipeline.newBuilder() to construct.
  private GcsIngestPipeline(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GcsIngestPipeline() {
    inputPath_ = "";
    schemaName_ = "";
    processorType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GcsIngestPipeline();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.contentwarehouse.v1.PipelinesProto
        .internal_static_google_cloud_contentwarehouse_v1_GcsIngestPipeline_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.contentwarehouse.v1.PipelinesProto
        .internal_static_google_cloud_contentwarehouse_v1_GcsIngestPipeline_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.class,
            com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.Builder.class);
  }

  private int bitField0_;
  public static final int INPUT_PATH_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object inputPath_ = "";
  /**
   *
   *
   * <pre>
   * The input Cloud Storage folder. All files under this folder will be
   * imported to Document Warehouse.
   * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
   * </pre>
   *
   * <code>string input_path = 1;</code>
   *
   * @return The inputPath.
   */
  @java.lang.Override
  public java.lang.String getInputPath() {
    java.lang.Object ref = inputPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      inputPath_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The input Cloud Storage folder. All files under this folder will be
   * imported to Document Warehouse.
   * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
   * </pre>
   *
   * <code>string input_path = 1;</code>
   *
   * @return The bytes for inputPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getInputPathBytes() {
    java.lang.Object ref = inputPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      inputPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEMA_NAME_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object schemaName_ = "";
  /**
   *
   *
   * <pre>
   * The Document Warehouse schema resource name. All documents processed by
   * this pipeline will use this schema.
   * Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * </pre>
   *
   * <code>string schema_name = 2;</code>
   *
   * @return The schemaName.
   */
  @java.lang.Override
  public java.lang.String getSchemaName() {
    java.lang.Object ref = schemaName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      schemaName_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The Document Warehouse schema resource name. All documents processed by
   * this pipeline will use this schema.
   * Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * </pre>
   *
   * <code>string schema_name = 2;</code>
   *
   * @return The bytes for schemaName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSchemaNameBytes() {
    java.lang.Object ref = schemaName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      schemaName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROCESSOR_TYPE_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object processorType_ = "";
  /**
   *
   *
   * <pre>
   * The Doc AI processor type name. Only used when the format of ingested
   * files is Doc AI Document proto format.
   * </pre>
   *
   * <code>string processor_type = 3;</code>
   *
   * @return The processorType.
   */
  @java.lang.Override
  public java.lang.String getProcessorType() {
    java.lang.Object ref = processorType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      processorType_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The Doc AI processor type name. Only used when the format of ingested
   * files is Doc AI Document proto format.
   * </pre>
   *
   * <code>string processor_type = 3;</code>
   *
   * @return The bytes for processorType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getProcessorTypeBytes() {
    java.lang.Object ref = processorType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      processorType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SKIP_INGESTED_DOCUMENTS_FIELD_NUMBER = 4;
  private boolean skipIngestedDocuments_ = false;
  /**
   *
   *
   * <pre>
   * The flag whether to skip ingested documents.
   * If it is set to true, documents in Cloud Storage contains key "status" with
   * value "status=ingested" in custom metadata will be skipped to ingest.
   * </pre>
   *
   * <code>bool skip_ingested_documents = 4;</code>
   *
   * @return The skipIngestedDocuments.
   */
  @java.lang.Override
  public boolean getSkipIngestedDocuments() {
    return skipIngestedDocuments_;
  }

  public static final int PIPELINE_CONFIG_FIELD_NUMBER = 5;
  private com.google.cloud.contentwarehouse.v1.IngestPipelineConfig pipelineConfig_;
  /**
   *
   *
   * <pre>
   * Optional. The config for the Cloud Storage Ingestion pipeline.
   * It provides additional customization options to run the pipeline and can be
   * skipped if it is not applicable.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the pipelineConfig field is set.
   */
  @java.lang.Override
  public boolean hasPipelineConfig() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   *
   *
   * <pre>
   * Optional. The config for the Cloud Storage Ingestion pipeline.
   * It provides additional customization options to run the pipeline and can be
   * skipped if it is not applicable.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The pipelineConfig.
   */
  @java.lang.Override
  public com.google.cloud.contentwarehouse.v1.IngestPipelineConfig getPipelineConfig() {
    return pipelineConfig_ == null
        ? com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.getDefaultInstance()
        : pipelineConfig_;
  }
  /**
   *
   *
   * <pre>
   * Optional. The config for the Cloud Storage Ingestion pipeline.
   * It provides additional customization options to run the pipeline and can be
   * skipped if it is not applicable.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.contentwarehouse.v1.IngestPipelineConfigOrBuilder
      getPipelineConfigOrBuilder() {
    return pipelineConfig_ == null
        ? com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.getDefaultInstance()
        : pipelineConfig_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(inputPath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, inputPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schemaName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, schemaName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(processorType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, processorType_);
    }
    if (skipIngestedDocuments_ != false) {
      output.writeBool(4, skipIngestedDocuments_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(5, getPipelineConfig());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(inputPath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, inputPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schemaName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, schemaName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(processorType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, processorType_);
    }
    if (skipIngestedDocuments_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, skipIngestedDocuments_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getPipelineConfig());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.contentwarehouse.v1.GcsIngestPipeline)) {
      return super.equals(obj);
    }
    com.google.cloud.contentwarehouse.v1.GcsIngestPipeline other =
        (com.google.cloud.contentwarehouse.v1.GcsIngestPipeline) obj;

    if (!getInputPath().equals(other.getInputPath())) return false;
    if (!getSchemaName().equals(other.getSchemaName())) return false;
    if (!getProcessorType().equals(other.getProcessorType())) return false;
    if (getSkipIngestedDocuments() != other.getSkipIngestedDocuments()) return false;
    if (hasPipelineConfig() != other.hasPipelineConfig()) return false;
    if (hasPipelineConfig()) {
      if (!getPipelineConfig().equals(other.getPipelineConfig())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INPUT_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getInputPath().hashCode();
    hash = (37 * hash) + SCHEMA_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaName().hashCode();
    hash = (37 * hash) + PROCESSOR_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getProcessorType().hashCode();
    hash = (37 * hash) + SKIP_INGESTED_DOCUMENTS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getSkipIngestedDocuments());
    if (hasPipelineConfig()) {
      hash = (37 * hash) + PIPELINE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getPipelineConfig().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.contentwarehouse.v1.GcsIngestPipeline prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The configuration of the Cloud Storage Ingestion pipeline.
   * </pre>
   *
   * Protobuf type {@code google.cloud.contentwarehouse.v1.GcsIngestPipeline}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.contentwarehouse.v1.GcsIngestPipeline)
      com.google.cloud.contentwarehouse.v1.GcsIngestPipelineOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.contentwarehouse.v1.PipelinesProto
          .internal_static_google_cloud_contentwarehouse_v1_GcsIngestPipeline_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.contentwarehouse.v1.PipelinesProto
          .internal_static_google_cloud_contentwarehouse_v1_GcsIngestPipeline_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.class,
              com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.Builder.class);
    }

    // Construct using com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getPipelineConfigFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      inputPath_ = "";
      schemaName_ = "";
      processorType_ = "";
      skipIngestedDocuments_ = false;
      pipelineConfig_ = null;
      if (pipelineConfigBuilder_ != null) {
        pipelineConfigBuilder_.dispose();
        pipelineConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.contentwarehouse.v1.PipelinesProto
          .internal_static_google_cloud_contentwarehouse_v1_GcsIngestPipeline_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.GcsIngestPipeline getDefaultInstanceForType() {
      return com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.GcsIngestPipeline build() {
      com.google.cloud.contentwarehouse.v1.GcsIngestPipeline result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.GcsIngestPipeline buildPartial() {
      com.google.cloud.contentwarehouse.v1.GcsIngestPipeline result =
          new com.google.cloud.contentwarehouse.v1.GcsIngestPipeline(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.contentwarehouse.v1.GcsIngestPipeline result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.inputPath_ = inputPath_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.schemaName_ = schemaName_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.processorType_ = processorType_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.skipIngestedDocuments_ = skipIngestedDocuments_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.pipelineConfig_ =
            pipelineConfigBuilder_ == null ? pipelineConfig_ : pipelineConfigBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.contentwarehouse.v1.GcsIngestPipeline) {
        return mergeFrom((com.google.cloud.contentwarehouse.v1.GcsIngestPipeline) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.contentwarehouse.v1.GcsIngestPipeline other) {
      if (other == com.google.cloud.contentwarehouse.v1.GcsIngestPipeline.getDefaultInstance())
        return this;
      if (!other.getInputPath().isEmpty()) {
        inputPath_ = other.inputPath_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getSchemaName().isEmpty()) {
        schemaName_ = other.schemaName_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getProcessorType().isEmpty()) {
        processorType_ = other.processorType_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getSkipIngestedDocuments() != false) {
        setSkipIngestedDocuments(other.getSkipIngestedDocuments());
      }
      if (other.hasPipelineConfig()) {
        mergePipelineConfig(other.getPipelineConfig());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                inputPath_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                schemaName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                processorType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 32:
              {
                skipIngestedDocuments_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
            case 42:
              {
                input.readMessage(getPipelineConfigFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object inputPath_ = "";
    /**
     *
     *
     * <pre>
     * The input Cloud Storage folder. All files under this folder will be
     * imported to Document Warehouse.
     * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
     * </pre>
     *
     * <code>string input_path = 1;</code>
     *
     * @return The inputPath.
     */
    public java.lang.String getInputPath() {
      java.lang.Object ref = inputPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inputPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The input Cloud Storage folder. All files under this folder will be
     * imported to Document Warehouse.
     * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
     * </pre>
     *
     * <code>string input_path = 1;</code>
     *
     * @return The bytes for inputPath.
     */
    public com.google.protobuf.ByteString getInputPathBytes() {
      java.lang.Object ref = inputPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        inputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The input Cloud Storage folder. All files under this folder will be
     * imported to Document Warehouse.
     * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
     * </pre>
     *
     * <code>string input_path = 1;</code>
     *
     * @param value The inputPath to set.
     * @return This builder for chaining.
     */
    public Builder setInputPath(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      inputPath_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The input Cloud Storage folder. All files under this folder will be
     * imported to Document Warehouse.
     * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
     * </pre>
     *
     * <code>string input_path = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearInputPath() {
      inputPath_ = getDefaultInstance().getInputPath();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The input Cloud Storage folder. All files under this folder will be
     * imported to Document Warehouse.
     * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
     * </pre>
     *
     * <code>string input_path = 1;</code>
     *
     * @param value The bytes for inputPath to set.
     * @return This builder for chaining.
     */
    public Builder setInputPathBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      inputPath_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object schemaName_ = "";
    /**
     *
     *
     * <pre>
     * The Document Warehouse schema resource name. All documents processed by
     * this pipeline will use this schema.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>string schema_name = 2;</code>
     *
     * @return The schemaName.
     */
    public java.lang.String getSchemaName() {
      java.lang.Object ref = schemaName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schemaName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The Document Warehouse schema resource name. All documents processed by
     * this pipeline will use this schema.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>string schema_name = 2;</code>
     *
     * @return The bytes for schemaName.
     */
    public com.google.protobuf.ByteString getSchemaNameBytes() {
      java.lang.Object ref = schemaName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        schemaName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The Document Warehouse schema resource name. All documents processed by
     * this pipeline will use this schema.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>string schema_name = 2;</code>
     *
     * @param value The schemaName to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaName(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      schemaName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Document Warehouse schema resource name. All documents processed by
     * this pipeline will use this schema.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>string schema_name = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSchemaName() {
      schemaName_ = getDefaultInstance().getSchemaName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Document Warehouse schema resource name. All documents processed by
     * this pipeline will use this schema.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>string schema_name = 2;</code>
     *
     * @param value The bytes for schemaName to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaNameBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      schemaName_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object processorType_ = "";
    /**
     *
     *
     * <pre>
     * The Doc AI processor type name. Only used when the format of ingested
     * files is Doc AI Document proto format.
     * </pre>
     *
     * <code>string processor_type = 3;</code>
     *
     * @return The processorType.
     */
    public java.lang.String getProcessorType() {
      java.lang.Object ref = processorType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processorType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The Doc AI processor type name. Only used when the format of ingested
     * files is Doc AI Document proto format.
     * </pre>
     *
     * <code>string processor_type = 3;</code>
     *
     * @return The bytes for processorType.
     */
    public com.google.protobuf.ByteString getProcessorTypeBytes() {
      java.lang.Object ref = processorType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        processorType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The Doc AI processor type name. Only used when the format of ingested
     * files is Doc AI Document proto format.
     * </pre>
     *
     * <code>string processor_type = 3;</code>
     *
     * @param value The processorType to set.
     * @return This builder for chaining.
     */
    public Builder setProcessorType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      processorType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Doc AI processor type name. Only used when the format of ingested
     * files is Doc AI Document proto format.
     * </pre>
     *
     * <code>string processor_type = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProcessorType() {
      processorType_ = getDefaultInstance().getProcessorType();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The Doc AI processor type name. Only used when the format of ingested
     * files is Doc AI Document proto format.
     * </pre>
     *
     * <code>string processor_type = 3;</code>
     *
     * @param value The bytes for processorType to set.
     * @return This builder for chaining.
     */
    public Builder setProcessorTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      processorType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean skipIngestedDocuments_;
    /**
     *
     *
     * <pre>
     * The flag whether to skip ingested documents.
     * If it is set to true, documents in Cloud Storage contains key "status" with
     * value "status=ingested" in custom metadata will be skipped to ingest.
     * </pre>
     *
     * <code>bool skip_ingested_documents = 4;</code>
     *
     * @return The skipIngestedDocuments.
     */
    @java.lang.Override
    public boolean getSkipIngestedDocuments() {
      return skipIngestedDocuments_;
    }
    /**
     *
     *
     * <pre>
     * The flag whether to skip ingested documents.
     * If it is set to true, documents in Cloud Storage contains key "status" with
     * value "status=ingested" in custom metadata will be skipped to ingest.
     * </pre>
     *
     * <code>bool skip_ingested_documents = 4;</code>
     *
     * @param value The skipIngestedDocuments to set.
     * @return This builder for chaining.
     */
    public Builder setSkipIngestedDocuments(boolean value) {

      skipIngestedDocuments_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The flag whether to skip ingested documents.
     * If it is set to true, documents in Cloud Storage contains key "status" with
     * value "status=ingested" in custom metadata will be skipped to ingest.
     * </pre>
     *
     * <code>bool skip_ingested_documents = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSkipIngestedDocuments() {
      bitField0_ = (bitField0_ & ~0x00000008);
      skipIngestedDocuments_ = false;
      onChanged();
      return this;
    }

    private com.google.cloud.contentwarehouse.v1.IngestPipelineConfig pipelineConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.contentwarehouse.v1.IngestPipelineConfig,
            com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.Builder,
            com.google.cloud.contentwarehouse.v1.IngestPipelineConfigOrBuilder>
        pipelineConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the pipelineConfig field is set.
     */
    public boolean hasPipelineConfig() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The pipelineConfig.
     */
    public com.google.cloud.contentwarehouse.v1.IngestPipelineConfig getPipelineConfig() {
      if (pipelineConfigBuilder_ == null) {
        return pipelineConfig_ == null
            ? com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.getDefaultInstance()
            : pipelineConfig_;
      } else {
        return pipelineConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setPipelineConfig(
        com.google.cloud.contentwarehouse.v1.IngestPipelineConfig value) {
      if (pipelineConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pipelineConfig_ = value;
      } else {
        pipelineConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setPipelineConfig(
        com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.Builder builderForValue) {
      if (pipelineConfigBuilder_ == null) {
        pipelineConfig_ = builderForValue.build();
      } else {
        pipelineConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder mergePipelineConfig(
        com.google.cloud.contentwarehouse.v1.IngestPipelineConfig value) {
      if (pipelineConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)
            && pipelineConfig_ != null
            && pipelineConfig_
                != com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.getDefaultInstance()) {
          getPipelineConfigBuilder().mergeFrom(value);
        } else {
          pipelineConfig_ = value;
        }
      } else {
        pipelineConfigBuilder_.mergeFrom(value);
      }
      if (pipelineConfig_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearPipelineConfig() {
      bitField0_ = (bitField0_ & ~0x00000010);
      pipelineConfig_ = null;
      if (pipelineConfigBuilder_ != null) {
        pipelineConfigBuilder_.dispose();
        pipelineConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.Builder
        getPipelineConfigBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getPipelineConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.contentwarehouse.v1.IngestPipelineConfigOrBuilder
        getPipelineConfigOrBuilder() {
      if (pipelineConfigBuilder_ != null) {
        return pipelineConfigBuilder_.getMessageOrBuilder();
      } else {
        return pipelineConfig_ == null
            ? com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.getDefaultInstance()
            : pipelineConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional. The config for the Cloud Storage Ingestion pipeline.
     * It provides additional customization options to run the pipeline and can be
     * skipped if it is not applicable.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 5 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.contentwarehouse.v1.IngestPipelineConfig,
            com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.Builder,
            com.google.cloud.contentwarehouse.v1.IngestPipelineConfigOrBuilder>
        getPipelineConfigFieldBuilder() {
      if (pipelineConfigBuilder_ == null) {
        pipelineConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.contentwarehouse.v1.IngestPipelineConfig,
                com.google.cloud.contentwarehouse.v1.IngestPipelineConfig.Builder,
                com.google.cloud.contentwarehouse.v1.IngestPipelineConfigOrBuilder>(
                getPipelineConfig(), getParentForChildren(), isClean());
        pipelineConfig_ = null;
      }
      return pipelineConfigBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.contentwarehouse.v1.GcsIngestPipeline)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.contentwarehouse.v1.GcsIngestPipeline)
  private static final com.google.cloud.contentwarehouse.v1.GcsIngestPipeline DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.contentwarehouse.v1.GcsIngestPipeline();
  }

  public static com.google.cloud.contentwarehouse.v1.GcsIngestPipeline getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GcsIngestPipeline> PARSER =
      new com.google.protobuf.AbstractParser<GcsIngestPipeline>() {
        @java.lang.Override
        public GcsIngestPipeline parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GcsIngestPipeline> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GcsIngestPipeline> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.contentwarehouse.v1.GcsIngestPipeline getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
