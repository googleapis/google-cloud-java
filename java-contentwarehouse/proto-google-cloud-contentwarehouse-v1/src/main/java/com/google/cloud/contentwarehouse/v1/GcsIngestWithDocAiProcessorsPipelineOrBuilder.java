/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/contentwarehouse/v1/pipelines.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.contentwarehouse.v1;

public interface GcsIngestWithDocAiProcessorsPipelineOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.contentwarehouse.v1.GcsIngestWithDocAiProcessorsPipeline)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The input Cloud Storage folder. All files under this folder will be
   * imported to Document Warehouse.
   * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
   * </pre>
   *
   * <code>string input_path = 1;</code>
   *
   * @return The inputPath.
   */
  java.lang.String getInputPath();
  /**
   *
   *
   * <pre>
   * The input Cloud Storage folder. All files under this folder will be
   * imported to Document Warehouse.
   * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
   * </pre>
   *
   * <code>string input_path = 1;</code>
   *
   * @return The bytes for inputPath.
   */
  com.google.protobuf.ByteString getInputPathBytes();

  /**
   *
   *
   * <pre>
   * The split and classify processor information.
   * The split and classify result will be used to find a matched extract
   * processor.
   * </pre>
   *
   * <code>.google.cloud.contentwarehouse.v1.ProcessorInfo split_classify_processor_info = 2;</code>
   *
   * @return Whether the splitClassifyProcessorInfo field is set.
   */
  boolean hasSplitClassifyProcessorInfo();
  /**
   *
   *
   * <pre>
   * The split and classify processor information.
   * The split and classify result will be used to find a matched extract
   * processor.
   * </pre>
   *
   * <code>.google.cloud.contentwarehouse.v1.ProcessorInfo split_classify_processor_info = 2;</code>
   *
   * @return The splitClassifyProcessorInfo.
   */
  com.google.cloud.contentwarehouse.v1.ProcessorInfo getSplitClassifyProcessorInfo();
  /**
   *
   *
   * <pre>
   * The split and classify processor information.
   * The split and classify result will be used to find a matched extract
   * processor.
   * </pre>
   *
   * <code>.google.cloud.contentwarehouse.v1.ProcessorInfo split_classify_processor_info = 2;</code>
   */
  com.google.cloud.contentwarehouse.v1.ProcessorInfoOrBuilder
      getSplitClassifyProcessorInfoOrBuilder();

  /**
   *
   *
   * <pre>
   * The extract processors information.
   * One matched extract processor will be used to process documents based on
   * the classify processor result. If no classify processor is specified, the
   * first extract processor will be used.
   * </pre>
   *
   * <code>repeated .google.cloud.contentwarehouse.v1.ProcessorInfo extract_processor_infos = 3;
   * </code>
   */
  java.util.List<com.google.cloud.contentwarehouse.v1.ProcessorInfo> getExtractProcessorInfosList();
  /**
   *
   *
   * <pre>
   * The extract processors information.
   * One matched extract processor will be used to process documents based on
   * the classify processor result. If no classify processor is specified, the
   * first extract processor will be used.
   * </pre>
   *
   * <code>repeated .google.cloud.contentwarehouse.v1.ProcessorInfo extract_processor_infos = 3;
   * </code>
   */
  com.google.cloud.contentwarehouse.v1.ProcessorInfo getExtractProcessorInfos(int index);
  /**
   *
   *
   * <pre>
   * The extract processors information.
   * One matched extract processor will be used to process documents based on
   * the classify processor result. If no classify processor is specified, the
   * first extract processor will be used.
   * </pre>
   *
   * <code>repeated .google.cloud.contentwarehouse.v1.ProcessorInfo extract_processor_infos = 3;
   * </code>
   */
  int getExtractProcessorInfosCount();
  /**
   *
   *
   * <pre>
   * The extract processors information.
   * One matched extract processor will be used to process documents based on
   * the classify processor result. If no classify processor is specified, the
   * first extract processor will be used.
   * </pre>
   *
   * <code>repeated .google.cloud.contentwarehouse.v1.ProcessorInfo extract_processor_infos = 3;
   * </code>
   */
  java.util.List<? extends com.google.cloud.contentwarehouse.v1.ProcessorInfoOrBuilder>
      getExtractProcessorInfosOrBuilderList();
  /**
   *
   *
   * <pre>
   * The extract processors information.
   * One matched extract processor will be used to process documents based on
   * the classify processor result. If no classify processor is specified, the
   * first extract processor will be used.
   * </pre>
   *
   * <code>repeated .google.cloud.contentwarehouse.v1.ProcessorInfo extract_processor_infos = 3;
   * </code>
   */
  com.google.cloud.contentwarehouse.v1.ProcessorInfoOrBuilder getExtractProcessorInfosOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * The Cloud Storage folder path used to store the raw results from
   * processors.
   * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
   * </pre>
   *
   * <code>string processor_results_folder_path = 4;</code>
   *
   * @return The processorResultsFolderPath.
   */
  java.lang.String getProcessorResultsFolderPath();
  /**
   *
   *
   * <pre>
   * The Cloud Storage folder path used to store the raw results from
   * processors.
   * Format: `gs://&lt;bucket-name&gt;/&lt;folder-name&gt;`.
   * </pre>
   *
   * <code>string processor_results_folder_path = 4;</code>
   *
   * @return The bytes for processorResultsFolderPath.
   */
  com.google.protobuf.ByteString getProcessorResultsFolderPathBytes();

  /**
   *
   *
   * <pre>
   * The flag whether to skip ingested documents.
   * If it is set to true, documents in Cloud Storage contains key "status" with
   * value "status=ingested" in custom metadata will be skipped to ingest.
   * </pre>
   *
   * <code>bool skip_ingested_documents = 5;</code>
   *
   * @return The skipIngestedDocuments.
   */
  boolean getSkipIngestedDocuments();

  /**
   *
   *
   * <pre>
   * Optional. The config for the Cloud Storage Ingestion with DocAI Processors
   * pipeline. It provides additional customization options to run the pipeline
   * and can be skipped if it is not applicable.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the pipelineConfig field is set.
   */
  boolean hasPipelineConfig();
  /**
   *
   *
   * <pre>
   * Optional. The config for the Cloud Storage Ingestion with DocAI Processors
   * pipeline. It provides additional customization options to run the pipeline
   * and can be skipped if it is not applicable.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The pipelineConfig.
   */
  com.google.cloud.contentwarehouse.v1.IngestPipelineConfig getPipelineConfig();
  /**
   *
   *
   * <pre>
   * Optional. The config for the Cloud Storage Ingestion with DocAI Processors
   * pipeline. It provides additional customization options to run the pipeline
   * and can be skipped if it is not applicable.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.IngestPipelineConfig pipeline_config = 6 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.contentwarehouse.v1.IngestPipelineConfigOrBuilder getPipelineConfigOrBuilder();
}
