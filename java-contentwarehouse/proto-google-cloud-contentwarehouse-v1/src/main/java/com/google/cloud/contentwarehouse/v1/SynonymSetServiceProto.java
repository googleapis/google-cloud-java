/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/contentwarehouse/v1/synonymset_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.contentwarehouse.v1;

public final class SynonymSetServiceProto {
  private SynonymSetServiceProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n9google/cloud/contentwarehouse/v1/synon"
          + "ymset_service.proto\022 google.cloud.conten"
          + "twarehouse.v1\032\034google/api/annotations.pr"
          + "oto\032\027google/api/client.proto\0321google/clo"
          + "ud/contentwarehouse/v1/synonymset.proto\032"
          + "Agoogle/cloud/contentwarehouse/v1/synony"
          + "mset_service_request.proto\032\033google/proto"
          + "buf/empty.proto2\303\010\n\021SynonymSetService\022\326\001"
          + "\n\020CreateSynonymSet\0229.google.cloud.conten"
          + "twarehouse.v1.CreateSynonymSetRequest\032,."
          + "google.cloud.contentwarehouse.v1.Synonym"
          + "Set\"Y\332A\022parent,synonym_set\202\323\344\223\002>\"//v1/{p"
          + "arent=projects/*/locations/*}/synonymSet"
          + "s:\013synonym_set\022\265\001\n\rGetSynonymSet\0226.googl"
          + "e.cloud.contentwarehouse.v1.GetSynonymSe"
          + "tRequest\032,.google.cloud.contentwarehouse"
          + ".v1.SynonymSet\">\332A\004name\202\323\344\223\0021\022//v1/{name"
          + "=projects/*/locations/*/synonymSets/*}\022\324"
          + "\001\n\020UpdateSynonymSet\0229.google.cloud.conte"
          + "ntwarehouse.v1.UpdateSynonymSetRequest\032,"
          + ".google.cloud.contentwarehouse.v1.Synony"
          + "mSet\"W\332A\020name,synonym_set\202\323\344\223\002>2//v1/{na"
          + "me=projects/*/locations/*/synonymSets/*}"
          + ":\013synonym_set\022\245\001\n\020DeleteSynonymSet\0229.goo"
          + "gle.cloud.contentwarehouse.v1.DeleteSyno"
          + "nymSetRequest\032\026.google.protobuf.Empty\">\332"
          + "A\004name\202\323\344\223\0021*//v1/{name=projects/*/locat"
          + "ions/*/synonymSets/*}\022\310\001\n\017ListSynonymSet"
          + "s\0228.google.cloud.contentwarehouse.v1.Lis"
          + "tSynonymSetsRequest\0329.google.cloud.conte"
          + "ntwarehouse.v1.ListSynonymSetsResponse\"@"
          + "\332A\006parent\202\323\344\223\0021\022//v1/{parent=projects/*/"
          + "locations/*}/synonymSets\032S\312A\037contentware"
          + "house.googleapis.com\322A.https://www.googl"
          + "eapis.com/auth/cloud-platformB\376\001\n$com.go"
          + "ogle.cloud.contentwarehouse.v1B\026SynonymS"
          + "etServiceProtoP\001ZPcloud.google.com/go/co"
          + "ntentwarehouse/apiv1/contentwarehousepb;"
          + "contentwarehousepb\252\002 Google.Cloud.Conten"
          + "tWarehouse.V1\312\002 Google\\Cloud\\ContentWare"
          + "house\\V1\352\002#Google::Cloud::ContentWarehou"
          + "se::V1b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.AnnotationsProto.getDescriptor(),
              com.google.api.ClientProto.getDescriptor(),
              com.google.cloud.contentwarehouse.v1.SynonymSetProto.getDescriptor(),
              com.google.cloud.contentwarehouse.v1.SynonymSetServiceRequestProto.getDescriptor(),
              com.google.protobuf.EmptyProto.getDescriptor(),
            });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.ClientProto.defaultHost);
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(com.google.api.ClientProto.methodSignature);
    registry.add(com.google.api.ClientProto.oauthScopes);
    com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(
        descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.api.ClientProto.getDescriptor();
    com.google.cloud.contentwarehouse.v1.SynonymSetProto.getDescriptor();
    com.google.cloud.contentwarehouse.v1.SynonymSetServiceRequestProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
