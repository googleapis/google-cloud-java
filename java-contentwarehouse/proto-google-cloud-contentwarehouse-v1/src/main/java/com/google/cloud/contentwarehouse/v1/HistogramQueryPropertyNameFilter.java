/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/contentwarehouse/v1/histogram.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.contentwarehouse.v1;

/** Protobuf type {@code google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} */
public final class HistogramQueryPropertyNameFilter extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter)
    HistogramQueryPropertyNameFilterOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use HistogramQueryPropertyNameFilter.newBuilder() to construct.
  private HistogramQueryPropertyNameFilter(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private HistogramQueryPropertyNameFilter() {
    documentSchemas_ = com.google.protobuf.LazyStringArrayList.emptyList();
    propertyNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
    yAxis_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new HistogramQueryPropertyNameFilter();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.contentwarehouse.v1.HistogramProto
        .internal_static_google_cloud_contentwarehouse_v1_HistogramQueryPropertyNameFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.contentwarehouse.v1.HistogramProto
        .internal_static_google_cloud_contentwarehouse_v1_HistogramQueryPropertyNameFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.class,
            com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * The result of the histogram query count('FilterableProperties') using
   * HISTOGRAM_YAXIS_DOCUMENT will be:
   * invoice_id: 2
   * address: 1
   * payment_method: 2
   * line_item_description: 1
   * </pre>
   *
   * Protobuf enum {@code
   * google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis}
   */
  public enum HistogramYAxis implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Count the documents per property name.
     * </pre>
     *
     * <code>HISTOGRAM_YAXIS_DOCUMENT = 0;</code>
     */
    HISTOGRAM_YAXIS_DOCUMENT(0),
    /**
     *
     *
     * <pre>
     * Count the properties per property name.
     * </pre>
     *
     * <code>HISTOGRAM_YAXIS_PROPERTY = 1;</code>
     */
    HISTOGRAM_YAXIS_PROPERTY(1),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Count the documents per property name.
     * </pre>
     *
     * <code>HISTOGRAM_YAXIS_DOCUMENT = 0;</code>
     */
    public static final int HISTOGRAM_YAXIS_DOCUMENT_VALUE = 0;
    /**
     *
     *
     * <pre>
     * Count the properties per property name.
     * </pre>
     *
     * <code>HISTOGRAM_YAXIS_PROPERTY = 1;</code>
     */
    public static final int HISTOGRAM_YAXIS_PROPERTY_VALUE = 1;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HistogramYAxis valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static HistogramYAxis forNumber(int value) {
      switch (value) {
        case 0:
          return HISTOGRAM_YAXIS_DOCUMENT;
        case 1:
          return HISTOGRAM_YAXIS_PROPERTY;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HistogramYAxis> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<HistogramYAxis> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<HistogramYAxis>() {
          public HistogramYAxis findValueByNumber(int number) {
            return HistogramYAxis.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final HistogramYAxis[] VALUES = values();

    public static HistogramYAxis valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HistogramYAxis(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis)
  }

  public static final int DOCUMENT_SCHEMAS_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList documentSchemas_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * This filter specifies the exact document schema(s)
   * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
   * to run histogram query against. It is optional. It will perform histogram
   * for property names for all the document schemas if it is not set.
   *
   * At most 10 document schema names are allowed.
   * Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * </pre>
   *
   * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
   *
   * @return A list containing the documentSchemas.
   */
  public com.google.protobuf.ProtocolStringList getDocumentSchemasList() {
    return documentSchemas_;
  }
  /**
   *
   *
   * <pre>
   * This filter specifies the exact document schema(s)
   * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
   * to run histogram query against. It is optional. It will perform histogram
   * for property names for all the document schemas if it is not set.
   *
   * At most 10 document schema names are allowed.
   * Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * </pre>
   *
   * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
   *
   * @return The count of documentSchemas.
   */
  public int getDocumentSchemasCount() {
    return documentSchemas_.size();
  }
  /**
   *
   *
   * <pre>
   * This filter specifies the exact document schema(s)
   * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
   * to run histogram query against. It is optional. It will perform histogram
   * for property names for all the document schemas if it is not set.
   *
   * At most 10 document schema names are allowed.
   * Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * </pre>
   *
   * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
   *
   * @param index The index of the element to return.
   * @return The documentSchemas at the given index.
   */
  public java.lang.String getDocumentSchemas(int index) {
    return documentSchemas_.get(index);
  }
  /**
   *
   *
   * <pre>
   * This filter specifies the exact document schema(s)
   * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
   * to run histogram query against. It is optional. It will perform histogram
   * for property names for all the document schemas if it is not set.
   *
   * At most 10 document schema names are allowed.
   * Format:
   * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
   * </pre>
   *
   * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the documentSchemas at the given index.
   */
  public com.google.protobuf.ByteString getDocumentSchemasBytes(int index) {
    return documentSchemas_.getByteString(index);
  }

  public static final int PROPERTY_NAMES_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList propertyNames_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   *
   *
   * <pre>
   * It is optional. It will perform histogram for all the property names if it
   * is not set.
   * The properties need to be defined with the is_filterable flag set to
   * true and the name of the property should be in the format:
   * "schemaId.propertyName". The property needs to be defined in the schema.
   * Example: the schema id is abc. Then the name of property for property
   * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
   * </pre>
   *
   * <code>repeated string property_names = 2;</code>
   *
   * @return A list containing the propertyNames.
   */
  public com.google.protobuf.ProtocolStringList getPropertyNamesList() {
    return propertyNames_;
  }
  /**
   *
   *
   * <pre>
   * It is optional. It will perform histogram for all the property names if it
   * is not set.
   * The properties need to be defined with the is_filterable flag set to
   * true and the name of the property should be in the format:
   * "schemaId.propertyName". The property needs to be defined in the schema.
   * Example: the schema id is abc. Then the name of property for property
   * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
   * </pre>
   *
   * <code>repeated string property_names = 2;</code>
   *
   * @return The count of propertyNames.
   */
  public int getPropertyNamesCount() {
    return propertyNames_.size();
  }
  /**
   *
   *
   * <pre>
   * It is optional. It will perform histogram for all the property names if it
   * is not set.
   * The properties need to be defined with the is_filterable flag set to
   * true and the name of the property should be in the format:
   * "schemaId.propertyName". The property needs to be defined in the schema.
   * Example: the schema id is abc. Then the name of property for property
   * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
   * </pre>
   *
   * <code>repeated string property_names = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The propertyNames at the given index.
   */
  public java.lang.String getPropertyNames(int index) {
    return propertyNames_.get(index);
  }
  /**
   *
   *
   * <pre>
   * It is optional. It will perform histogram for all the property names if it
   * is not set.
   * The properties need to be defined with the is_filterable flag set to
   * true and the name of the property should be in the format:
   * "schemaId.propertyName". The property needs to be defined in the schema.
   * Example: the schema id is abc. Then the name of property for property
   * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
   * </pre>
   *
   * <code>repeated string property_names = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the propertyNames at the given index.
   */
  public com.google.protobuf.ByteString getPropertyNamesBytes(int index) {
    return propertyNames_.getByteString(index);
  }

  public static final int Y_AXIS_FIELD_NUMBER = 3;
  private int yAxis_ = 0;
  /**
   *
   *
   * <pre>
   * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
   * set.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
   * </code>
   *
   * @return The enum numeric value on the wire for yAxis.
   */
  @java.lang.Override
  public int getYAxisValue() {
    return yAxis_;
  }
  /**
   *
   *
   * <pre>
   * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
   * set.
   * </pre>
   *
   * <code>
   * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
   * </code>
   *
   * @return The yAxis.
   */
  @java.lang.Override
  public com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
      getYAxis() {
    com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis result =
        com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
            .forNumber(yAxis_);
    return result == null
        ? com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
            .UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < documentSchemas_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, documentSchemas_.getRaw(i));
    }
    for (int i = 0; i < propertyNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, propertyNames_.getRaw(i));
    }
    if (yAxis_
        != com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
            .HISTOGRAM_YAXIS_DOCUMENT
            .getNumber()) {
      output.writeEnum(3, yAxis_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < documentSchemas_.size(); i++) {
        dataSize += computeStringSizeNoTag(documentSchemas_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDocumentSchemasList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < propertyNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(propertyNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPropertyNamesList().size();
    }
    if (yAxis_
        != com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
            .HISTOGRAM_YAXIS_DOCUMENT
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, yAxis_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter)) {
      return super.equals(obj);
    }
    com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter other =
        (com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter) obj;

    if (!getDocumentSchemasList().equals(other.getDocumentSchemasList())) return false;
    if (!getPropertyNamesList().equals(other.getPropertyNamesList())) return false;
    if (yAxis_ != other.yAxis_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDocumentSchemasCount() > 0) {
      hash = (37 * hash) + DOCUMENT_SCHEMAS_FIELD_NUMBER;
      hash = (53 * hash) + getDocumentSchemasList().hashCode();
    }
    if (getPropertyNamesCount() > 0) {
      hash = (37 * hash) + PROPERTY_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getPropertyNamesList().hashCode();
    }
    hash = (37 * hash) + Y_AXIS_FIELD_NUMBER;
    hash = (53 * hash) + yAxis_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /** Protobuf type {@code google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter)
      com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.contentwarehouse.v1.HistogramProto
          .internal_static_google_cloud_contentwarehouse_v1_HistogramQueryPropertyNameFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.contentwarehouse.v1.HistogramProto
          .internal_static_google_cloud_contentwarehouse_v1_HistogramQueryPropertyNameFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.class,
              com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.Builder.class);
    }

    // Construct using
    // com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      documentSchemas_ = com.google.protobuf.LazyStringArrayList.emptyList();
      propertyNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
      yAxis_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.contentwarehouse.v1.HistogramProto
          .internal_static_google_cloud_contentwarehouse_v1_HistogramQueryPropertyNameFilter_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
        getDefaultInstanceForType() {
      return com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter build() {
      com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter buildPartial() {
      com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter result =
          new com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        documentSchemas_.makeImmutable();
        result.documentSchemas_ = documentSchemas_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        propertyNames_.makeImmutable();
        result.propertyNames_ = propertyNames_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.yAxis_ = yAxis_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter) {
        return mergeFrom(
            (com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter other) {
      if (other
          == com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
              .getDefaultInstance()) return this;
      if (!other.documentSchemas_.isEmpty()) {
        if (documentSchemas_.isEmpty()) {
          documentSchemas_ = other.documentSchemas_;
          bitField0_ |= 0x00000001;
        } else {
          ensureDocumentSchemasIsMutable();
          documentSchemas_.addAll(other.documentSchemas_);
        }
        onChanged();
      }
      if (!other.propertyNames_.isEmpty()) {
        if (propertyNames_.isEmpty()) {
          propertyNames_ = other.propertyNames_;
          bitField0_ |= 0x00000002;
        } else {
          ensurePropertyNamesIsMutable();
          propertyNames_.addAll(other.propertyNames_);
        }
        onChanged();
      }
      if (other.yAxis_ != 0) {
        setYAxisValue(other.getYAxisValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDocumentSchemasIsMutable();
                documentSchemas_.add(s);
                break;
              } // case 10
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                ensurePropertyNamesIsMutable();
                propertyNames_.add(s);
                break;
              } // case 18
            case 24:
              {
                yAxis_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.LazyStringArrayList documentSchemas_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensureDocumentSchemasIsMutable() {
      if (!documentSchemas_.isModifiable()) {
        documentSchemas_ = new com.google.protobuf.LazyStringArrayList(documentSchemas_);
      }
      bitField0_ |= 0x00000001;
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return A list containing the documentSchemas.
     */
    public com.google.protobuf.ProtocolStringList getDocumentSchemasList() {
      documentSchemas_.makeImmutable();
      return documentSchemas_;
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return The count of documentSchemas.
     */
    public int getDocumentSchemasCount() {
      return documentSchemas_.size();
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @param index The index of the element to return.
     * @return The documentSchemas at the given index.
     */
    public java.lang.String getDocumentSchemas(int index) {
      return documentSchemas_.get(index);
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the documentSchemas at the given index.
     */
    public com.google.protobuf.ByteString getDocumentSchemasBytes(int index) {
      return documentSchemas_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @param index The index to set the value at.
     * @param value The documentSchemas to set.
     * @return This builder for chaining.
     */
    public Builder setDocumentSchemas(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocumentSchemasIsMutable();
      documentSchemas_.set(index, value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @param value The documentSchemas to add.
     * @return This builder for chaining.
     */
    public Builder addDocumentSchemas(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDocumentSchemasIsMutable();
      documentSchemas_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @param values The documentSchemas to add.
     * @return This builder for chaining.
     */
    public Builder addAllDocumentSchemas(java.lang.Iterable<java.lang.String> values) {
      ensureDocumentSchemasIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, documentSchemas_);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDocumentSchemas() {
      documentSchemas_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * This filter specifies the exact document schema(s)
     * [Document.document_schema_name][google.cloud.contentwarehouse.v1.Document.document_schema_name]
     * to run histogram query against. It is optional. It will perform histogram
     * for property names for all the document schemas if it is not set.
     *
     * At most 10 document schema names are allowed.
     * Format:
     * projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
     * </pre>
     *
     * <code>repeated string document_schemas = 1 [(.google.api.resource_reference) = { ... }</code>
     *
     * @param value The bytes of the documentSchemas to add.
     * @return This builder for chaining.
     */
    public Builder addDocumentSchemasBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureDocumentSchemasIsMutable();
      documentSchemas_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList propertyNames_ =
        com.google.protobuf.LazyStringArrayList.emptyList();

    private void ensurePropertyNamesIsMutable() {
      if (!propertyNames_.isModifiable()) {
        propertyNames_ = new com.google.protobuf.LazyStringArrayList(propertyNames_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @return A list containing the propertyNames.
     */
    public com.google.protobuf.ProtocolStringList getPropertyNamesList() {
      propertyNames_.makeImmutable();
      return propertyNames_;
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @return The count of propertyNames.
     */
    public int getPropertyNamesCount() {
      return propertyNames_.size();
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @param index The index of the element to return.
     * @return The propertyNames at the given index.
     */
    public java.lang.String getPropertyNames(int index) {
      return propertyNames_.get(index);
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the propertyNames at the given index.
     */
    public com.google.protobuf.ByteString getPropertyNamesBytes(int index) {
      return propertyNames_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @param index The index to set the value at.
     * @param value The propertyNames to set.
     * @return This builder for chaining.
     */
    public Builder setPropertyNames(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropertyNamesIsMutable();
      propertyNames_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @param value The propertyNames to add.
     * @return This builder for chaining.
     */
    public Builder addPropertyNames(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePropertyNamesIsMutable();
      propertyNames_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @param values The propertyNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllPropertyNames(java.lang.Iterable<java.lang.String> values) {
      ensurePropertyNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, propertyNames_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPropertyNames() {
      propertyNames_ = com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      ;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * It is optional. It will perform histogram for all the property names if it
     * is not set.
     * The properties need to be defined with the is_filterable flag set to
     * true and the name of the property should be in the format:
     * "schemaId.propertyName". The property needs to be defined in the schema.
     * Example: the schema id is abc. Then the name of property for property
     * MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
     * </pre>
     *
     * <code>repeated string property_names = 2;</code>
     *
     * @param value The bytes of the propertyNames to add.
     * @return This builder for chaining.
     */
    public Builder addPropertyNamesBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensurePropertyNamesIsMutable();
      propertyNames_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int yAxis_ = 0;
    /**
     *
     *
     * <pre>
     * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
     * set.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
     * </code>
     *
     * @return The enum numeric value on the wire for yAxis.
     */
    @java.lang.Override
    public int getYAxisValue() {
      return yAxis_;
    }
    /**
     *
     *
     * <pre>
     * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
     * set.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
     * </code>
     *
     * @param value The enum numeric value on the wire for yAxis to set.
     * @return This builder for chaining.
     */
    public Builder setYAxisValue(int value) {
      yAxis_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
     * set.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
     * </code>
     *
     * @return The yAxis.
     */
    @java.lang.Override
    public com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
        getYAxis() {
      com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis result =
          com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
              .forNumber(yAxis_);
      return result == null
          ? com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
              .UNRECOGNIZED
          : result;
    }
    /**
     *
     *
     * <pre>
     * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
     * set.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
     * </code>
     *
     * @param value The yAxis to set.
     * @return This builder for chaining.
     */
    public Builder setYAxis(
        com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
            value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      yAxis_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is not
     * set.
     * </pre>
     *
     * <code>
     * .google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis y_axis = 3;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearYAxis() {
      bitField0_ = (bitField0_ & ~0x00000004);
      yAxis_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter)
  private static final com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter();
  }

  public static com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HistogramQueryPropertyNameFilter> PARSER =
      new com.google.protobuf.AbstractParser<HistogramQueryPropertyNameFilter>() {
        @java.lang.Override
        public HistogramQueryPropertyNameFilter parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<HistogramQueryPropertyNameFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HistogramQueryPropertyNameFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
