/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/policysimulator/v1/orgpolicy.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.policysimulator.v1;

/**
 *
 *
 * <pre>
 * The proposed changes to OrgPolicy.
 * </pre>
 *
 * Protobuf type {@code google.cloud.policysimulator.v1.OrgPolicyOverlay}
 */
public final class OrgPolicyOverlay extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.policysimulator.v1.OrgPolicyOverlay)
    OrgPolicyOverlayOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use OrgPolicyOverlay.newBuilder() to construct.
  private OrgPolicyOverlay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private OrgPolicyOverlay() {
    policies_ = java.util.Collections.emptyList();
    customConstraints_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new OrgPolicyOverlay();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.policysimulator.v1.OrgpolicyProto
        .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.policysimulator.v1.OrgpolicyProto
        .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.class,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.Builder.class);
  }

  public interface PolicyOverlayOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Optional. The parent of the policy we are attaching to.
     * Example: "projects/123456"
     * </pre>
     *
     * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The policyParent.
     */
    java.lang.String getPolicyParent();

    /**
     *
     *
     * <pre>
     * Optional. The parent of the policy we are attaching to.
     * Example: "projects/123456"
     * </pre>
     *
     * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for policyParent.
     */
    com.google.protobuf.ByteString getPolicyParentBytes();

    /**
     *
     *
     * <pre>
     * Optional. The new or updated OrgPolicy.
     * </pre>
     *
     * <code>.google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the policy field is set.
     */
    boolean hasPolicy();

    /**
     *
     *
     * <pre>
     * Optional. The new or updated OrgPolicy.
     * </pre>
     *
     * <code>.google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The policy.
     */
    com.google.cloud.orgpolicy.v2.Policy getPolicy();

    /**
     *
     *
     * <pre>
     * Optional. The new or updated OrgPolicy.
     * </pre>
     *
     * <code>.google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    com.google.cloud.orgpolicy.v2.PolicyOrBuilder getPolicyOrBuilder();
  }

  /**
   *
   *
   * <pre>
   * A change to an OrgPolicy.
   * </pre>
   *
   * Protobuf type {@code google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay}
   */
  public static final class PolicyOverlay extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay)
      PolicyOverlayOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use PolicyOverlay.newBuilder() to construct.
    private PolicyOverlay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private PolicyOverlay() {
      policyParent_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new PolicyOverlay();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_PolicyOverlay_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_PolicyOverlay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.class,
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder.class);
    }

    private int bitField0_;
    public static final int POLICY_PARENT_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object policyParent_ = "";

    /**
     *
     *
     * <pre>
     * Optional. The parent of the policy we are attaching to.
     * Example: "projects/123456"
     * </pre>
     *
     * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The policyParent.
     */
    @java.lang.Override
    public java.lang.String getPolicyParent() {
      java.lang.Object ref = policyParent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        policyParent_ = s;
        return s;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The parent of the policy we are attaching to.
     * Example: "projects/123456"
     * </pre>
     *
     * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for policyParent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPolicyParentBytes() {
      java.lang.Object ref = policyParent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        policyParent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POLICY_FIELD_NUMBER = 2;
    private com.google.cloud.orgpolicy.v2.Policy policy_;

    /**
     *
     *
     * <pre>
     * Optional. The new or updated OrgPolicy.
     * </pre>
     *
     * <code>.google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the policy field is set.
     */
    @java.lang.Override
    public boolean hasPolicy() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. The new or updated OrgPolicy.
     * </pre>
     *
     * <code>.google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The policy.
     */
    @java.lang.Override
    public com.google.cloud.orgpolicy.v2.Policy getPolicy() {
      return policy_ == null ? com.google.cloud.orgpolicy.v2.Policy.getDefaultInstance() : policy_;
    }

    /**
     *
     *
     * <pre>
     * Optional. The new or updated OrgPolicy.
     * </pre>
     *
     * <code>.google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.orgpolicy.v2.PolicyOrBuilder getPolicyOrBuilder() {
      return policy_ == null ? com.google.cloud.orgpolicy.v2.Policy.getDefaultInstance() : policy_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyParent_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, policyParent_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getPolicy());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyParent_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, policyParent_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getPolicy());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay)) {
        return super.equals(obj);
      }
      com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay other =
          (com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay) obj;

      if (!getPolicyParent().equals(other.getPolicyParent())) return false;
      if (hasPolicy() != other.hasPolicy()) return false;
      if (hasPolicy()) {
        if (!getPolicy().equals(other.getPolicy())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + POLICY_PARENT_FIELD_NUMBER;
      hash = (53 * hash) + getPolicyParent().hashCode();
      if (hasPolicy()) {
        hash = (37 * hash) + POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getPolicy().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * A change to an OrgPolicy.
     * </pre>
     *
     * Protobuf type {@code google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay)
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.policysimulator.v1.OrgpolicyProto
            .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_PolicyOverlay_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.policysimulator.v1.OrgpolicyProto
            .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_PolicyOverlay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.class,
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder.class);
      }

      // Construct using
      // com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getPolicyFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        policyParent_ = "";
        policy_ = null;
        if (policyBuilder_ != null) {
          policyBuilder_.dispose();
          policyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.policysimulator.v1.OrgpolicyProto
            .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_PolicyOverlay_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
          getDefaultInstanceForType() {
        return com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay build() {
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay buildPartial() {
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay result =
            new com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.policyParent_ = policyParent_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.policy_ = policyBuilder_ == null ? policy_ : policyBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay) {
          return mergeFrom(
              (com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay other) {
        if (other
            == com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
                .getDefaultInstance()) return this;
        if (!other.getPolicyParent().isEmpty()) {
          policyParent_ = other.policyParent_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPolicy()) {
          mergePolicy(other.getPolicy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  policyParent_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(getPolicyFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object policyParent_ = "";

      /**
       *
       *
       * <pre>
       * Optional. The parent of the policy we are attaching to.
       * Example: "projects/123456"
       * </pre>
       *
       * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The policyParent.
       */
      public java.lang.String getPolicyParent() {
        java.lang.Object ref = policyParent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          policyParent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. The parent of the policy we are attaching to.
       * Example: "projects/123456"
       * </pre>
       *
       * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The bytes for policyParent.
       */
      public com.google.protobuf.ByteString getPolicyParentBytes() {
        java.lang.Object ref = policyParent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          policyParent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. The parent of the policy we are attaching to.
       * Example: "projects/123456"
       * </pre>
       *
       * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The policyParent to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyParent(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        policyParent_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The parent of the policy we are attaching to.
       * Example: "projects/123456"
       * </pre>
       *
       * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearPolicyParent() {
        policyParent_ = getDefaultInstance().getPolicyParent();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The parent of the policy we are attaching to.
       * Example: "projects/123456"
       * </pre>
       *
       * <code>string policy_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The bytes for policyParent to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyParentBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        policyParent_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.cloud.orgpolicy.v2.Policy policy_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.orgpolicy.v2.Policy,
              com.google.cloud.orgpolicy.v2.Policy.Builder,
              com.google.cloud.orgpolicy.v2.PolicyOrBuilder>
          policyBuilder_;

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return Whether the policy field is set.
       */
      public boolean hasPolicy() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return The policy.
       */
      public com.google.cloud.orgpolicy.v2.Policy getPolicy() {
        if (policyBuilder_ == null) {
          return policy_ == null
              ? com.google.cloud.orgpolicy.v2.Policy.getDefaultInstance()
              : policy_;
        } else {
          return policyBuilder_.getMessage();
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder setPolicy(com.google.cloud.orgpolicy.v2.Policy value) {
        if (policyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policy_ = value;
        } else {
          policyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder setPolicy(com.google.cloud.orgpolicy.v2.Policy.Builder builderForValue) {
        if (policyBuilder_ == null) {
          policy_ = builderForValue.build();
        } else {
          policyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder mergePolicy(com.google.cloud.orgpolicy.v2.Policy value) {
        if (policyBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && policy_ != null
              && policy_ != com.google.cloud.orgpolicy.v2.Policy.getDefaultInstance()) {
            getPolicyBuilder().mergeFrom(value);
          } else {
            policy_ = value;
          }
        } else {
          policyBuilder_.mergeFrom(value);
        }
        if (policy_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder clearPolicy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        policy_ = null;
        if (policyBuilder_ != null) {
          policyBuilder_.dispose();
          policyBuilder_ = null;
        }
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public com.google.cloud.orgpolicy.v2.Policy.Builder getPolicyBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPolicyFieldBuilder().getBuilder();
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public com.google.cloud.orgpolicy.v2.PolicyOrBuilder getPolicyOrBuilder() {
        if (policyBuilder_ != null) {
          return policyBuilder_.getMessageOrBuilder();
        } else {
          return policy_ == null
              ? com.google.cloud.orgpolicy.v2.Policy.getDefaultInstance()
              : policy_;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated OrgPolicy.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.Policy policy = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.orgpolicy.v2.Policy,
              com.google.cloud.orgpolicy.v2.Policy.Builder,
              com.google.cloud.orgpolicy.v2.PolicyOrBuilder>
          getPolicyFieldBuilder() {
        if (policyBuilder_ == null) {
          policyBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.cloud.orgpolicy.v2.Policy,
                  com.google.cloud.orgpolicy.v2.Policy.Builder,
                  com.google.cloud.orgpolicy.v2.PolicyOrBuilder>(
                  getPolicy(), getParentForChildren(), isClean());
          policy_ = null;
        }
        return policyBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay)
    private static final com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay();
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PolicyOverlay> PARSER =
        new com.google.protobuf.AbstractParser<PolicyOverlay>() {
          @java.lang.Override
          public PolicyOverlay parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<PolicyOverlay> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PolicyOverlay> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface CustomConstraintOverlayOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Optional. Resource the constraint is attached to.
     * Example: "organization/987654"
     * </pre>
     *
     * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The customConstraintParent.
     */
    java.lang.String getCustomConstraintParent();

    /**
     *
     *
     * <pre>
     * Optional. Resource the constraint is attached to.
     * Example: "organization/987654"
     * </pre>
     *
     * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for customConstraintParent.
     */
    com.google.protobuf.ByteString getCustomConstraintParentBytes();

    /**
     *
     *
     * <pre>
     * Optional. The new or updated custom constraint.
     * </pre>
     *
     * <code>
     * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the customConstraint field is set.
     */
    boolean hasCustomConstraint();

    /**
     *
     *
     * <pre>
     * Optional. The new or updated custom constraint.
     * </pre>
     *
     * <code>
     * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The customConstraint.
     */
    com.google.cloud.orgpolicy.v2.CustomConstraint getCustomConstraint();

    /**
     *
     *
     * <pre>
     * Optional. The new or updated custom constraint.
     * </pre>
     *
     * <code>
     * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    com.google.cloud.orgpolicy.v2.CustomConstraintOrBuilder getCustomConstraintOrBuilder();
  }

  /**
   *
   *
   * <pre>
   * A change to an OrgPolicy custom constraint.
   * </pre>
   *
   * Protobuf type {@code google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay}
   */
  public static final class CustomConstraintOverlay extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay)
      CustomConstraintOverlayOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use CustomConstraintOverlay.newBuilder() to construct.
    private CustomConstraintOverlay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private CustomConstraintOverlay() {
      customConstraintParent_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new CustomConstraintOverlay();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_CustomConstraintOverlay_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_CustomConstraintOverlay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.class,
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
                  .class);
    }

    private int bitField0_;
    public static final int CUSTOM_CONSTRAINT_PARENT_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object customConstraintParent_ = "";

    /**
     *
     *
     * <pre>
     * Optional. Resource the constraint is attached to.
     * Example: "organization/987654"
     * </pre>
     *
     * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The customConstraintParent.
     */
    @java.lang.Override
    public java.lang.String getCustomConstraintParent() {
      java.lang.Object ref = customConstraintParent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customConstraintParent_ = s;
        return s;
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. Resource the constraint is attached to.
     * Example: "organization/987654"
     * </pre>
     *
     * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The bytes for customConstraintParent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCustomConstraintParentBytes() {
      java.lang.Object ref = customConstraintParent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        customConstraintParent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUSTOM_CONSTRAINT_FIELD_NUMBER = 2;
    private com.google.cloud.orgpolicy.v2.CustomConstraint customConstraint_;

    /**
     *
     *
     * <pre>
     * Optional. The new or updated custom constraint.
     * </pre>
     *
     * <code>
     * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the customConstraint field is set.
     */
    @java.lang.Override
    public boolean hasCustomConstraint() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. The new or updated custom constraint.
     * </pre>
     *
     * <code>
     * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The customConstraint.
     */
    @java.lang.Override
    public com.google.cloud.orgpolicy.v2.CustomConstraint getCustomConstraint() {
      return customConstraint_ == null
          ? com.google.cloud.orgpolicy.v2.CustomConstraint.getDefaultInstance()
          : customConstraint_;
    }

    /**
     *
     *
     * <pre>
     * Optional. The new or updated custom constraint.
     * </pre>
     *
     * <code>
     * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.orgpolicy.v2.CustomConstraintOrBuilder getCustomConstraintOrBuilder() {
      return customConstraint_ == null
          ? com.google.cloud.orgpolicy.v2.CustomConstraint.getDefaultInstance()
          : customConstraint_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customConstraintParent_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, customConstraintParent_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getCustomConstraint());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customConstraintParent_)) {
        size +=
            com.google.protobuf.GeneratedMessageV3.computeStringSize(1, customConstraintParent_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getCustomConstraint());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay)) {
        return super.equals(obj);
      }
      com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay other =
          (com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay) obj;

      if (!getCustomConstraintParent().equals(other.getCustomConstraintParent())) return false;
      if (hasCustomConstraint() != other.hasCustomConstraint()) return false;
      if (hasCustomConstraint()) {
        if (!getCustomConstraint().equals(other.getCustomConstraint())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CUSTOM_CONSTRAINT_PARENT_FIELD_NUMBER;
      hash = (53 * hash) + getCustomConstraintParent().hashCode();
      if (hasCustomConstraint()) {
        hash = (37 * hash) + CUSTOM_CONSTRAINT_FIELD_NUMBER;
        hash = (53 * hash) + getCustomConstraint().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * A change to an OrgPolicy custom constraint.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay)
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.policysimulator.v1.OrgpolicyProto
            .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_CustomConstraintOverlay_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.policysimulator.v1.OrgpolicyProto
            .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_CustomConstraintOverlay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.class,
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
                    .class);
      }

      // Construct using
      // com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getCustomConstraintFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        customConstraintParent_ = "";
        customConstraint_ = null;
        if (customConstraintBuilder_ != null) {
          customConstraintBuilder_.dispose();
          customConstraintBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.policysimulator.v1.OrgpolicyProto
            .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_CustomConstraintOverlay_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
          getDefaultInstanceForType() {
        return com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay build() {
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
          buildPartial() {
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay result =
            new com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.customConstraintParent_ = customConstraintParent_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.customConstraint_ =
              customConstraintBuilder_ == null
                  ? customConstraint_
                  : customConstraintBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay) {
          return mergeFrom(
              (com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay other) {
        if (other
            == com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
                .getDefaultInstance()) return this;
        if (!other.getCustomConstraintParent().isEmpty()) {
          customConstraintParent_ = other.customConstraintParent_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasCustomConstraint()) {
          mergeCustomConstraint(other.getCustomConstraint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  customConstraintParent_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  input.readMessage(
                      getCustomConstraintFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object customConstraintParent_ = "";

      /**
       *
       *
       * <pre>
       * Optional. Resource the constraint is attached to.
       * Example: "organization/987654"
       * </pre>
       *
       * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The customConstraintParent.
       */
      public java.lang.String getCustomConstraintParent() {
        java.lang.Object ref = customConstraintParent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          customConstraintParent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. Resource the constraint is attached to.
       * Example: "organization/987654"
       * </pre>
       *
       * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The bytes for customConstraintParent.
       */
      public com.google.protobuf.ByteString getCustomConstraintParentBytes() {
        java.lang.Object ref = customConstraintParent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          customConstraintParent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. Resource the constraint is attached to.
       * Example: "organization/987654"
       * </pre>
       *
       * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The customConstraintParent to set.
       * @return This builder for chaining.
       */
      public Builder setCustomConstraintParent(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        customConstraintParent_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. Resource the constraint is attached to.
       * Example: "organization/987654"
       * </pre>
       *
       * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearCustomConstraintParent() {
        customConstraintParent_ = getDefaultInstance().getCustomConstraintParent();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. Resource the constraint is attached to.
       * Example: "organization/987654"
       * </pre>
       *
       * <code>string custom_constraint_parent = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The bytes for customConstraintParent to set.
       * @return This builder for chaining.
       */
      public Builder setCustomConstraintParentBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        customConstraintParent_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.cloud.orgpolicy.v2.CustomConstraint customConstraint_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.orgpolicy.v2.CustomConstraint,
              com.google.cloud.orgpolicy.v2.CustomConstraint.Builder,
              com.google.cloud.orgpolicy.v2.CustomConstraintOrBuilder>
          customConstraintBuilder_;

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return Whether the customConstraint field is set.
       */
      public boolean hasCustomConstraint() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return The customConstraint.
       */
      public com.google.cloud.orgpolicy.v2.CustomConstraint getCustomConstraint() {
        if (customConstraintBuilder_ == null) {
          return customConstraint_ == null
              ? com.google.cloud.orgpolicy.v2.CustomConstraint.getDefaultInstance()
              : customConstraint_;
        } else {
          return customConstraintBuilder_.getMessage();
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder setCustomConstraint(com.google.cloud.orgpolicy.v2.CustomConstraint value) {
        if (customConstraintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customConstraint_ = value;
        } else {
          customConstraintBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder setCustomConstraint(
          com.google.cloud.orgpolicy.v2.CustomConstraint.Builder builderForValue) {
        if (customConstraintBuilder_ == null) {
          customConstraint_ = builderForValue.build();
        } else {
          customConstraintBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder mergeCustomConstraint(com.google.cloud.orgpolicy.v2.CustomConstraint value) {
        if (customConstraintBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)
              && customConstraint_ != null
              && customConstraint_
                  != com.google.cloud.orgpolicy.v2.CustomConstraint.getDefaultInstance()) {
            getCustomConstraintBuilder().mergeFrom(value);
          } else {
            customConstraint_ = value;
          }
        } else {
          customConstraintBuilder_.mergeFrom(value);
        }
        if (customConstraint_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder clearCustomConstraint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        customConstraint_ = null;
        if (customConstraintBuilder_ != null) {
          customConstraintBuilder_.dispose();
          customConstraintBuilder_ = null;
        }
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public com.google.cloud.orgpolicy.v2.CustomConstraint.Builder getCustomConstraintBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCustomConstraintFieldBuilder().getBuilder();
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public com.google.cloud.orgpolicy.v2.CustomConstraintOrBuilder
          getCustomConstraintOrBuilder() {
        if (customConstraintBuilder_ != null) {
          return customConstraintBuilder_.getMessageOrBuilder();
        } else {
          return customConstraint_ == null
              ? com.google.cloud.orgpolicy.v2.CustomConstraint.getDefaultInstance()
              : customConstraint_;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. The new or updated custom constraint.
       * </pre>
       *
       * <code>
       * .google.cloud.orgpolicy.v2.CustomConstraint custom_constraint = 2 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.orgpolicy.v2.CustomConstraint,
              com.google.cloud.orgpolicy.v2.CustomConstraint.Builder,
              com.google.cloud.orgpolicy.v2.CustomConstraintOrBuilder>
          getCustomConstraintFieldBuilder() {
        if (customConstraintBuilder_ == null) {
          customConstraintBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.cloud.orgpolicy.v2.CustomConstraint,
                  com.google.cloud.orgpolicy.v2.CustomConstraint.Builder,
                  com.google.cloud.orgpolicy.v2.CustomConstraintOrBuilder>(
                  getCustomConstraint(), getParentForChildren(), isClean());
          customConstraint_ = null;
        }
        return customConstraintBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay)
    private static final com.google.cloud.policysimulator.v1.OrgPolicyOverlay
            .CustomConstraintOverlay
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay();
    }

    public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CustomConstraintOverlay> PARSER =
        new com.google.protobuf.AbstractParser<CustomConstraintOverlay>() {
          @java.lang.Override
          public CustomConstraintOverlay parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<CustomConstraintOverlay> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CustomConstraintOverlay> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int POLICIES_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay>
      policies_;

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy changes to preview violations for.
   *
   * Any existing OrgPolicies with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * policies in the overlay were created or updated.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay>
      getPoliciesList() {
    return policies_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy changes to preview violations for.
   *
   * Any existing OrgPolicies with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * policies in the overlay were created or updated.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder>
      getPoliciesOrBuilderList() {
    return policies_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy changes to preview violations for.
   *
   * Any existing OrgPolicies with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * policies in the overlay were created or updated.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getPoliciesCount() {
    return policies_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy changes to preview violations for.
   *
   * Any existing OrgPolicies with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * policies in the overlay were created or updated.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay getPolicies(int index) {
    return policies_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy changes to preview violations for.
   *
   * Any existing OrgPolicies with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * policies in the overlay were created or updated.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder
      getPoliciesOrBuilder(int index) {
    return policies_.get(index);
  }

  public static final int CUSTOM_CONSTRAINTS_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay>
      customConstraints_;

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
   *
   * Any existing CustomConstraints with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * custom constraints in the overlay were instantiated.
   *
   * Only a single custom_constraint is supported in the overlay at a time.
   * For evaluating multiple constraints, multiple
   * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
   * evaluates a single constraint.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay>
      getCustomConstraintsList() {
    return customConstraints_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
   *
   * Any existing CustomConstraints with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * custom constraints in the overlay were instantiated.
   *
   * Only a single custom_constraint is supported in the overlay at a time.
   * For evaluating multiple constraints, multiple
   * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
   * evaluates a single constraint.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlayOrBuilder>
      getCustomConstraintsOrBuilderList() {
    return customConstraints_;
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
   *
   * Any existing CustomConstraints with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * custom constraints in the overlay were instantiated.
   *
   * Only a single custom_constraint is supported in the overlay at a time.
   * For evaluating multiple constraints, multiple
   * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
   * evaluates a single constraint.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public int getCustomConstraintsCount() {
    return customConstraints_.size();
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
   *
   * Any existing CustomConstraints with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * custom constraints in the overlay were instantiated.
   *
   * Only a single custom_constraint is supported in the overlay at a time.
   * For evaluating multiple constraints, multiple
   * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
   * evaluates a single constraint.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
      getCustomConstraints(int index) {
    return customConstraints_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
   *
   * Any existing CustomConstraints with the same name will be overridden
   * in the simulation. That is, violations will be determined as if all
   * custom constraints in the overlay were instantiated.
   *
   * Only a single custom_constraint is supported in the overlay at a time.
   * For evaluating multiple constraints, multiple
   * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
   * evaluates a single constraint.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlayOrBuilder
      getCustomConstraintsOrBuilder(int index) {
    return customConstraints_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < policies_.size(); i++) {
      output.writeMessage(1, policies_.get(i));
    }
    for (int i = 0; i < customConstraints_.size(); i++) {
      output.writeMessage(2, customConstraints_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < policies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, policies_.get(i));
    }
    for (int i = 0; i < customConstraints_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(2, customConstraints_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.policysimulator.v1.OrgPolicyOverlay)) {
      return super.equals(obj);
    }
    com.google.cloud.policysimulator.v1.OrgPolicyOverlay other =
        (com.google.cloud.policysimulator.v1.OrgPolicyOverlay) obj;

    if (!getPoliciesList().equals(other.getPoliciesList())) return false;
    if (!getCustomConstraintsList().equals(other.getCustomConstraintsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPoliciesCount() > 0) {
      hash = (37 * hash) + POLICIES_FIELD_NUMBER;
      hash = (53 * hash) + getPoliciesList().hashCode();
    }
    if (getCustomConstraintsCount() > 0) {
      hash = (37 * hash) + CUSTOM_CONSTRAINTS_FIELD_NUMBER;
      hash = (53 * hash) + getCustomConstraintsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.policysimulator.v1.OrgPolicyOverlay prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * The proposed changes to OrgPolicy.
   * </pre>
   *
   * Protobuf type {@code google.cloud.policysimulator.v1.OrgPolicyOverlay}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.policysimulator.v1.OrgPolicyOverlay)
      com.google.cloud.policysimulator.v1.OrgPolicyOverlayOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.class,
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.Builder.class);
    }

    // Construct using com.google.cloud.policysimulator.v1.OrgPolicyOverlay.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (policiesBuilder_ == null) {
        policies_ = java.util.Collections.emptyList();
      } else {
        policies_ = null;
        policiesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (customConstraintsBuilder_ == null) {
        customConstraints_ = java.util.Collections.emptyList();
      } else {
        customConstraints_ = null;
        customConstraintsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.policysimulator.v1.OrgpolicyProto
          .internal_static_google_cloud_policysimulator_v1_OrgPolicyOverlay_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay getDefaultInstanceForType() {
      return com.google.cloud.policysimulator.v1.OrgPolicyOverlay.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay build() {
      com.google.cloud.policysimulator.v1.OrgPolicyOverlay result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay buildPartial() {
      com.google.cloud.policysimulator.v1.OrgPolicyOverlay result =
          new com.google.cloud.policysimulator.v1.OrgPolicyOverlay(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay result) {
      if (policiesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          policies_ = java.util.Collections.unmodifiableList(policies_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.policies_ = policies_;
      } else {
        result.policies_ = policiesBuilder_.build();
      }
      if (customConstraintsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          customConstraints_ = java.util.Collections.unmodifiableList(customConstraints_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.customConstraints_ = customConstraints_;
      } else {
        result.customConstraints_ = customConstraintsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.cloud.policysimulator.v1.OrgPolicyOverlay result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.policysimulator.v1.OrgPolicyOverlay) {
        return mergeFrom((com.google.cloud.policysimulator.v1.OrgPolicyOverlay) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.policysimulator.v1.OrgPolicyOverlay other) {
      if (other == com.google.cloud.policysimulator.v1.OrgPolicyOverlay.getDefaultInstance())
        return this;
      if (policiesBuilder_ == null) {
        if (!other.policies_.isEmpty()) {
          if (policies_.isEmpty()) {
            policies_ = other.policies_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePoliciesIsMutable();
            policies_.addAll(other.policies_);
          }
          onChanged();
        }
      } else {
        if (!other.policies_.isEmpty()) {
          if (policiesBuilder_.isEmpty()) {
            policiesBuilder_.dispose();
            policiesBuilder_ = null;
            policies_ = other.policies_;
            bitField0_ = (bitField0_ & ~0x00000001);
            policiesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getPoliciesFieldBuilder()
                    : null;
          } else {
            policiesBuilder_.addAllMessages(other.policies_);
          }
        }
      }
      if (customConstraintsBuilder_ == null) {
        if (!other.customConstraints_.isEmpty()) {
          if (customConstraints_.isEmpty()) {
            customConstraints_ = other.customConstraints_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCustomConstraintsIsMutable();
            customConstraints_.addAll(other.customConstraints_);
          }
          onChanged();
        }
      } else {
        if (!other.customConstraints_.isEmpty()) {
          if (customConstraintsBuilder_.isEmpty()) {
            customConstraintsBuilder_.dispose();
            customConstraintsBuilder_ = null;
            customConstraints_ = other.customConstraints_;
            bitField0_ = (bitField0_ & ~0x00000002);
            customConstraintsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getCustomConstraintsFieldBuilder()
                    : null;
          } else {
            customConstraintsBuilder_.addAllMessages(other.customConstraints_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay m =
                    input.readMessage(
                        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.parser(),
                        extensionRegistry);
                if (policiesBuilder_ == null) {
                  ensurePoliciesIsMutable();
                  policies_.add(m);
                } else {
                  policiesBuilder_.addMessage(m);
                }
                break;
              } // case 10
            case 18:
              {
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay m =
                    input.readMessage(
                        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
                            .parser(),
                        extensionRegistry);
                if (customConstraintsBuilder_ == null) {
                  ensureCustomConstraintsIsMutable();
                  customConstraints_.add(m);
                } else {
                  customConstraintsBuilder_.addMessage(m);
                }
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay>
        policies_ = java.util.Collections.emptyList();

    private void ensurePoliciesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        policies_ =
            new java.util.ArrayList<
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay>(policies_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder>
        policiesBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay>
        getPoliciesList() {
      if (policiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(policies_);
      } else {
        return policiesBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getPoliciesCount() {
      if (policiesBuilder_ == null) {
        return policies_.size();
      } else {
        return policiesBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay getPolicies(
        int index) {
      if (policiesBuilder_ == null) {
        return policies_.get(index);
      } else {
        return policiesBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setPolicies(
        int index, com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay value) {
      if (policiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePoliciesIsMutable();
        policies_.set(index, value);
        onChanged();
      } else {
        policiesBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setPolicies(
        int index,
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder
            builderForValue) {
      if (policiesBuilder_ == null) {
        ensurePoliciesIsMutable();
        policies_.set(index, builderForValue.build());
        onChanged();
      } else {
        policiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addPolicies(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay value) {
      if (policiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePoliciesIsMutable();
        policies_.add(value);
        onChanged();
      } else {
        policiesBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addPolicies(
        int index, com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay value) {
      if (policiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePoliciesIsMutable();
        policies_.add(index, value);
        onChanged();
      } else {
        policiesBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addPolicies(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder
            builderForValue) {
      if (policiesBuilder_ == null) {
        ensurePoliciesIsMutable();
        policies_.add(builderForValue.build());
        onChanged();
      } else {
        policiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addPolicies(
        int index,
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder
            builderForValue) {
      if (policiesBuilder_ == null) {
        ensurePoliciesIsMutable();
        policies_.add(index, builderForValue.build());
        onChanged();
      } else {
        policiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllPolicies(
        java.lang.Iterable<
                ? extends com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay>
            values) {
      if (policiesBuilder_ == null) {
        ensurePoliciesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, policies_);
        onChanged();
      } else {
        policiesBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearPolicies() {
      if (policiesBuilder_ == null) {
        policies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        policiesBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removePolicies(int index) {
      if (policiesBuilder_ == null) {
        ensurePoliciesIsMutable();
        policies_.remove(index);
        onChanged();
      } else {
        policiesBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder
        getPoliciesBuilder(int index) {
      return getPoliciesFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder
        getPoliciesOrBuilder(int index) {
      if (policiesBuilder_ == null) {
        return policies_.get(index);
      } else {
        return policiesBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder>
        getPoliciesOrBuilderList() {
      if (policiesBuilder_ != null) {
        return policiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(policies_);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder
        addPoliciesBuilder() {
      return getPoliciesFieldBuilder()
          .addBuilder(
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder
        addPoliciesBuilder(int index) {
      return getPoliciesFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy changes to preview violations for.
     *
     * Any existing OrgPolicies with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * policies in the overlay were created or updated.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay policies = 1 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder>
        getPoliciesBuilderList() {
      return getPoliciesFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder>
        getPoliciesFieldBuilder() {
      if (policiesBuilder_ == null) {
        policiesBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay,
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlay.Builder,
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.PolicyOverlayOrBuilder>(
                policies_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
        policies_ = null;
      }
      return policiesBuilder_;
    }

    private java.util.List<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay>
        customConstraints_ = java.util.Collections.emptyList();

    private void ensureCustomConstraintsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        customConstraints_ =
            new java.util.ArrayList<
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay>(
                customConstraints_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlayOrBuilder>
        customConstraintsBuilder_;

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay>
        getCustomConstraintsList() {
      if (customConstraintsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(customConstraints_);
      } else {
        return customConstraintsBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public int getCustomConstraintsCount() {
      if (customConstraintsBuilder_ == null) {
        return customConstraints_.size();
      } else {
        return customConstraintsBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
        getCustomConstraints(int index) {
      if (customConstraintsBuilder_ == null) {
        return customConstraints_.get(index);
      } else {
        return customConstraintsBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setCustomConstraints(
        int index,
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay value) {
      if (customConstraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCustomConstraintsIsMutable();
        customConstraints_.set(index, value);
        onChanged();
      } else {
        customConstraintsBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder setCustomConstraints(
        int index,
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
            builderForValue) {
      if (customConstraintsBuilder_ == null) {
        ensureCustomConstraintsIsMutable();
        customConstraints_.set(index, builderForValue.build());
        onChanged();
      } else {
        customConstraintsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addCustomConstraints(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay value) {
      if (customConstraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCustomConstraintsIsMutable();
        customConstraints_.add(value);
        onChanged();
      } else {
        customConstraintsBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addCustomConstraints(
        int index,
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay value) {
      if (customConstraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCustomConstraintsIsMutable();
        customConstraints_.add(index, value);
        onChanged();
      } else {
        customConstraintsBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addCustomConstraints(
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
            builderForValue) {
      if (customConstraintsBuilder_ == null) {
        ensureCustomConstraintsIsMutable();
        customConstraints_.add(builderForValue.build());
        onChanged();
      } else {
        customConstraintsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addCustomConstraints(
        int index,
        com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
            builderForValue) {
      if (customConstraintsBuilder_ == null) {
        ensureCustomConstraintsIsMutable();
        customConstraints_.add(index, builderForValue.build());
        onChanged();
      } else {
        customConstraintsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder addAllCustomConstraints(
        java.lang.Iterable<
                ? extends
                    com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay>
            values) {
      if (customConstraintsBuilder_ == null) {
        ensureCustomConstraintsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, customConstraints_);
        onChanged();
      } else {
        customConstraintsBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder clearCustomConstraints() {
      if (customConstraintsBuilder_ == null) {
        customConstraints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        customConstraintsBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public Builder removeCustomConstraints(int index) {
      if (customConstraintsBuilder_ == null) {
        ensureCustomConstraintsIsMutable();
        customConstraints_.remove(index);
        onChanged();
      } else {
        customConstraintsBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
        getCustomConstraintsBuilder(int index) {
      return getCustomConstraintsFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlayOrBuilder
        getCustomConstraintsOrBuilder(int index) {
      if (customConstraintsBuilder_ == null) {
        return customConstraints_.get(index);
      } else {
        return customConstraintsBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            ? extends
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay
                    .CustomConstraintOverlayOrBuilder>
        getCustomConstraintsOrBuilderList() {
      if (customConstraintsBuilder_ != null) {
        return customConstraintsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(customConstraints_);
      }
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
        addCustomConstraintsBuilder() {
      return getCustomConstraintsFieldBuilder()
          .addBuilder(
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder
        addCustomConstraintsBuilder(int index) {
      return getCustomConstraintsFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
                  .getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Optional. The OrgPolicy CustomConstraint changes to preview violations for.
     *
     * Any existing CustomConstraints with the same name will be overridden
     * in the simulation. That is, violations will be determined as if all
     * custom constraints in the overlay were instantiated.
     *
     * Only a single custom_constraint is supported in the overlay at a time.
     * For evaluating multiple constraints, multiple
     * `GenerateOrgPolicyViolationsPreview` requests are made, where each request
     * evaluates a single constraint.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay custom_constraints = 2 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    public java.util.List<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder>
        getCustomConstraintsBuilderList() {
      return getCustomConstraintsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay.Builder,
            com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlayOrBuilder>
        getCustomConstraintsFieldBuilder() {
      if (customConstraintsBuilder_ == null) {
        customConstraintsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay,
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay.CustomConstraintOverlay
                    .Builder,
                com.google.cloud.policysimulator.v1.OrgPolicyOverlay
                    .CustomConstraintOverlayOrBuilder>(
                customConstraints_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        customConstraints_ = null;
      }
      return customConstraintsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.policysimulator.v1.OrgPolicyOverlay)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.policysimulator.v1.OrgPolicyOverlay)
  private static final com.google.cloud.policysimulator.v1.OrgPolicyOverlay DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.policysimulator.v1.OrgPolicyOverlay();
  }

  public static com.google.cloud.policysimulator.v1.OrgPolicyOverlay getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OrgPolicyOverlay> PARSER =
      new com.google.protobuf.AbstractParser<OrgPolicyOverlay>() {
        @java.lang.Override
        public OrgPolicyOverlay parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<OrgPolicyOverlay> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OrgPolicyOverlay> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.policysimulator.v1.OrgPolicyOverlay getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
