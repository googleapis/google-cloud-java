/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/policysimulator/v1/simulator.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.policysimulator.v1;

public interface ExplainedAccessOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.policysimulator.v1.ExplainedAccess)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Whether the principal in the access tuple has permission to access the
   * resource in the access tuple under the given policies.
   * </pre>
   *
   * <code>.google.cloud.policysimulator.v1.AccessState access_state = 1;</code>
   *
   * @return The enum numeric value on the wire for accessState.
   */
  int getAccessStateValue();
  /**
   *
   *
   * <pre>
   * Whether the principal in the access tuple has permission to access the
   * resource in the access tuple under the given policies.
   * </pre>
   *
   * <code>.google.cloud.policysimulator.v1.AccessState access_state = 1;</code>
   *
   * @return The accessState.
   */
  com.google.cloud.policysimulator.v1.AccessState getAccessState();

  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains the policies that led to that result.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.cloud.policysimulator.v1.ExplainedPolicy policies = 2;</code>
   */
  java.util.List<com.google.cloud.policysimulator.v1.ExplainedPolicy> getPoliciesList();
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains the policies that led to that result.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.cloud.policysimulator.v1.ExplainedPolicy policies = 2;</code>
   */
  com.google.cloud.policysimulator.v1.ExplainedPolicy getPolicies(int index);
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains the policies that led to that result.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.cloud.policysimulator.v1.ExplainedPolicy policies = 2;</code>
   */
  int getPoliciesCount();
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains the policies that led to that result.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.cloud.policysimulator.v1.ExplainedPolicy policies = 2;</code>
   */
  java.util.List<? extends com.google.cloud.policysimulator.v1.ExplainedPolicyOrBuilder>
      getPoliciesOrBuilderList();
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains the policies that led to that result.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.cloud.policysimulator.v1.ExplainedPolicy policies = 2;</code>
   */
  com.google.cloud.policysimulator.v1.ExplainedPolicyOrBuilder getPoliciesOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains a list of errors explaining why the result
   * is `UNKNOWN`.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.rpc.Status errors = 3;</code>
   */
  java.util.List<com.google.rpc.Status> getErrorsList();
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains a list of errors explaining why the result
   * is `UNKNOWN`.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.rpc.Status errors = 3;</code>
   */
  com.google.rpc.Status getErrors(int index);
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains a list of errors explaining why the result
   * is `UNKNOWN`.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.rpc.Status errors = 3;</code>
   */
  int getErrorsCount();
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains a list of errors explaining why the result
   * is `UNKNOWN`.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.rpc.Status errors = 3;</code>
   */
  java.util.List<? extends com.google.rpc.StatusOrBuilder> getErrorsOrBuilderList();
  /**
   *
   *
   * <pre>
   * If the [AccessState][google.cloud.policysimulator.v1.AccessState] is
   * `UNKNOWN`, this field contains a list of errors explaining why the result
   * is `UNKNOWN`.
   *
   * If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is
   * omitted.
   * </pre>
   *
   * <code>repeated .google.rpc.Status errors = 3;</code>
   */
  com.google.rpc.StatusOrBuilder getErrorsOrBuilder(int index);
}
