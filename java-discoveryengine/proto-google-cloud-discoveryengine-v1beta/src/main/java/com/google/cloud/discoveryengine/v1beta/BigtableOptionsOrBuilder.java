/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/discoveryengine/v1beta/import_config.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.discoveryengine.v1beta;

public interface BigtableOptionsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.discoveryengine.v1beta.BigtableOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The field name used for saving row key value in the document. The name has
   * to match the pattern `[a-zA-Z0-9][a-zA-Z0-9-_]*`.
   * </pre>
   *
   * <code>string key_field_name = 1;</code>
   *
   * @return The keyFieldName.
   */
  java.lang.String getKeyFieldName();
  /**
   *
   *
   * <pre>
   * The field name used for saving row key value in the document. The name has
   * to match the pattern `[a-zA-Z0-9][a-zA-Z0-9-_]*`.
   * </pre>
   *
   * <code>string key_field_name = 1;</code>
   *
   * @return The bytes for keyFieldName.
   */
  com.google.protobuf.ByteString getKeyFieldNameBytes();

  /**
   *
   *
   * <pre>
   * The mapping from family names to an object that contains column families
   * level information for the given column family. If a family is not present
   * in this map it will be ignored.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily&gt; families = 2;
   * </code>
   */
  int getFamiliesCount();
  /**
   *
   *
   * <pre>
   * The mapping from family names to an object that contains column families
   * level information for the given column family. If a family is not present
   * in this map it will be ignored.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily&gt; families = 2;
   * </code>
   */
  boolean containsFamilies(java.lang.String key);
  /** Use {@link #getFamiliesMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<
          java.lang.String,
          com.google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily>
      getFamilies();
  /**
   *
   *
   * <pre>
   * The mapping from family names to an object that contains column families
   * level information for the given column family. If a family is not present
   * in this map it will be ignored.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily&gt; families = 2;
   * </code>
   */
  java.util.Map<
          java.lang.String,
          com.google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily>
      getFamiliesMap();
  /**
   *
   *
   * <pre>
   * The mapping from family names to an object that contains column families
   * level information for the given column family. If a family is not present
   * in this map it will be ignored.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily&gt; families = 2;
   * </code>
   */
  /* nullable */
  com.google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily getFamiliesOrDefault(
      java.lang.String key,
      /* nullable */
      com.google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily defaultValue);
  /**
   *
   *
   * <pre>
   * The mapping from family names to an object that contains column families
   * level information for the given column family. If a family is not present
   * in this map it will be ignored.
   * </pre>
   *
   * <code>
   * map&lt;string, .google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily&gt; families = 2;
   * </code>
   */
  com.google.cloud.discoveryengine.v1beta.BigtableOptions.BigtableColumnFamily getFamiliesOrThrow(
      java.lang.String key);
}
