/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/discoveryengine/v1beta/site_search_engine_service.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.discoveryengine.v1beta;

public interface RecrawlUrisMetadataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.discoveryengine.v1beta.RecrawlUrisMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Operation create time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   *
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   *
   *
   * <pre>
   * Operation create time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   *
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   *
   *
   * <pre>
   * Operation create time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   *
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   *
   *
   * <pre>
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   *
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   *
   *
   * <pre>
   * Operation last update time. If the operation is done, this is also the
   * finish time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Unique URIs in the request that have invalid format. Sample limited to
   * 1000.
   * </pre>
   *
   * <code>repeated string invalid_uris = 3;</code>
   *
   * @return A list containing the invalidUris.
   */
  java.util.List<java.lang.String> getInvalidUris3List();
  /**
   *
   *
   * <pre>
   * Unique URIs in the request that have invalid format. Sample limited to
   * 1000.
   * </pre>
   *
   * <code>repeated string invalid_uris = 3;</code>
   *
   * @return The count of invalidUris.
   */
  int getInvalidUris3Count();
  /**
   *
   *
   * <pre>
   * Unique URIs in the request that have invalid format. Sample limited to
   * 1000.
   * </pre>
   *
   * <code>repeated string invalid_uris = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The invalidUris at the given index.
   */
  java.lang.String getInvalidUris3(int index);
  /**
   *
   *
   * <pre>
   * Unique URIs in the request that have invalid format. Sample limited to
   * 1000.
   * </pre>
   *
   * <code>repeated string invalid_uris = 3;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the invalidUris at the given index.
   */
  com.google.protobuf.ByteString getInvalidUris3Bytes(int index);

  /**
   *
   *
   * <pre>
   * Total number of unique URIs in the request that have invalid format.
   * </pre>
   *
   * <code>int32 invalid_uris_count = 8;</code>
   *
   * @return The invalidUrisCount.
   */
  int getInvalidUrisCount8();

  /**
   *
   *
   * <pre>
   * Unique URIs in the request that don't match any TargetSite in the
   * DataStore, only match TargetSites that haven't been fully indexed, or match
   * a TargetSite with type EXCLUDE. Sample limited to 1000.
   * </pre>
   *
   * <code>repeated string uris_not_matching_target_sites = 9;</code>
   *
   * @return A list containing the urisNotMatchingTargetSites.
   */
  java.util.List<java.lang.String> getUrisNotMatchingTargetSites9List();
  /**
   *
   *
   * <pre>
   * Unique URIs in the request that don't match any TargetSite in the
   * DataStore, only match TargetSites that haven't been fully indexed, or match
   * a TargetSite with type EXCLUDE. Sample limited to 1000.
   * </pre>
   *
   * <code>repeated string uris_not_matching_target_sites = 9;</code>
   *
   * @return The count of urisNotMatchingTargetSites.
   */
  int getUrisNotMatchingTargetSites9Count();
  /**
   *
   *
   * <pre>
   * Unique URIs in the request that don't match any TargetSite in the
   * DataStore, only match TargetSites that haven't been fully indexed, or match
   * a TargetSite with type EXCLUDE. Sample limited to 1000.
   * </pre>
   *
   * <code>repeated string uris_not_matching_target_sites = 9;</code>
   *
   * @param index The index of the element to return.
   * @return The urisNotMatchingTargetSites at the given index.
   */
  java.lang.String getUrisNotMatchingTargetSites9(int index);
  /**
   *
   *
   * <pre>
   * Unique URIs in the request that don't match any TargetSite in the
   * DataStore, only match TargetSites that haven't been fully indexed, or match
   * a TargetSite with type EXCLUDE. Sample limited to 1000.
   * </pre>
   *
   * <code>repeated string uris_not_matching_target_sites = 9;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the urisNotMatchingTargetSites at the given index.
   */
  com.google.protobuf.ByteString getUrisNotMatchingTargetSites9Bytes(int index);

  /**
   *
   *
   * <pre>
   * Total number of URIs that don't match any TargetSites.
   * </pre>
   *
   * <code>int32 uris_not_matching_target_sites_count = 10;</code>
   *
   * @return The urisNotMatchingTargetSitesCount.
   */
  int getUrisNotMatchingTargetSitesCount10();

  /**
   *
   *
   * <pre>
   * Total number of unique URIs in the request that are not in invalid_uris.
   * </pre>
   *
   * <code>int32 valid_uris_count = 4;</code>
   *
   * @return The validUrisCount.
   */
  int getValidUrisCount();

  /**
   *
   *
   * <pre>
   * Total number of URIs that have been crawled so far.
   * </pre>
   *
   * <code>int32 success_count = 5;</code>
   *
   * @return The successCount.
   */
  int getSuccessCount();

  /**
   *
   *
   * <pre>
   * Total number of URIs that have yet to be crawled.
   * </pre>
   *
   * <code>int32 pending_count = 6;</code>
   *
   * @return The pendingCount.
   */
  int getPendingCount();

  /**
   *
   *
   * <pre>
   * Total number of URIs that were rejected due to insufficient indexing
   * resources.
   * </pre>
   *
   * <code>int32 quota_exceeded_count = 7;</code>
   *
   * @return The quotaExceededCount.
   */
  int getQuotaExceededCount();
}
