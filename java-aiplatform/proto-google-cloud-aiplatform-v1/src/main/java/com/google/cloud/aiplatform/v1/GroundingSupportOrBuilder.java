/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1/content.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1;

public interface GroundingSupportOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1.GroundingSupport)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Segment of the content this support belongs to.
   * </pre>
   *
   * <code>optional .google.cloud.aiplatform.v1.Segment segment = 1;</code>
   *
   * @return Whether the segment field is set.
   */
  boolean hasSegment();
  /**
   *
   *
   * <pre>
   * Segment of the content this support belongs to.
   * </pre>
   *
   * <code>optional .google.cloud.aiplatform.v1.Segment segment = 1;</code>
   *
   * @return The segment.
   */
  com.google.cloud.aiplatform.v1.Segment getSegment();
  /**
   *
   *
   * <pre>
   * Segment of the content this support belongs to.
   * </pre>
   *
   * <code>optional .google.cloud.aiplatform.v1.Segment segment = 1;</code>
   */
  com.google.cloud.aiplatform.v1.SegmentOrBuilder getSegmentOrBuilder();

  /**
   *
   *
   * <pre>
   * A list of indices (into 'grounding_chunk') specifying the
   * citations associated with the claim. For instance [1,3,4] means
   * that grounding_chunk[1], grounding_chunk[3],
   * grounding_chunk[4] are the retrieved content attributed to the claim.
   * </pre>
   *
   * <code>repeated int32 grounding_chunk_indices = 2;</code>
   *
   * @return A list containing the groundingChunkIndices.
   */
  java.util.List<java.lang.Integer> getGroundingChunkIndicesList();
  /**
   *
   *
   * <pre>
   * A list of indices (into 'grounding_chunk') specifying the
   * citations associated with the claim. For instance [1,3,4] means
   * that grounding_chunk[1], grounding_chunk[3],
   * grounding_chunk[4] are the retrieved content attributed to the claim.
   * </pre>
   *
   * <code>repeated int32 grounding_chunk_indices = 2;</code>
   *
   * @return The count of groundingChunkIndices.
   */
  int getGroundingChunkIndicesCount();
  /**
   *
   *
   * <pre>
   * A list of indices (into 'grounding_chunk') specifying the
   * citations associated with the claim. For instance [1,3,4] means
   * that grounding_chunk[1], grounding_chunk[3],
   * grounding_chunk[4] are the retrieved content attributed to the claim.
   * </pre>
   *
   * <code>repeated int32 grounding_chunk_indices = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The groundingChunkIndices at the given index.
   */
  int getGroundingChunkIndices(int index);

  /**
   *
   *
   * <pre>
   * Confidence score of the support references. Ranges from 0 to 1. 1 is the
   * most confident. This list must have the same size as the
   * grounding_chunk_indices.
   * </pre>
   *
   * <code>repeated float confidence_scores = 3;</code>
   *
   * @return A list containing the confidenceScores.
   */
  java.util.List<java.lang.Float> getConfidenceScoresList();
  /**
   *
   *
   * <pre>
   * Confidence score of the support references. Ranges from 0 to 1. 1 is the
   * most confident. This list must have the same size as the
   * grounding_chunk_indices.
   * </pre>
   *
   * <code>repeated float confidence_scores = 3;</code>
   *
   * @return The count of confidenceScores.
   */
  int getConfidenceScoresCount();
  /**
   *
   *
   * <pre>
   * Confidence score of the support references. Ranges from 0 to 1. 1 is the
   * most confident. This list must have the same size as the
   * grounding_chunk_indices.
   * </pre>
   *
   * <code>repeated float confidence_scores = 3;</code>
   *
   * @param index The index of the element to return.
   * @return The confidenceScores at the given index.
   */
  float getConfidenceScores(int index);
}
