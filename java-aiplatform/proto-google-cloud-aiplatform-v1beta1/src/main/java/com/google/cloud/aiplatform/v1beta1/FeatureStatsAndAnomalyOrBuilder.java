/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/feature_monitor.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1beta1;

public interface FeatureStatsAndAnomalyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.FeatureStatsAndAnomaly)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Feature Id.
   * </pre>
   *
   * <code>string feature_id = 1;</code>
   *
   * @return The featureId.
   */
  java.lang.String getFeatureId();
  /**
   *
   *
   * <pre>
   * Feature Id.
   * </pre>
   *
   * <code>string feature_id = 1;</code>
   *
   * @return The bytes for featureId.
   */
  com.google.protobuf.ByteString getFeatureIdBytes();

  /**
   *
   *
   * <pre>
   * Feature stats. e.g. histogram buckets.
   * In the format of tensorflow.metadata.v0.DatasetFeatureStatistics.
   * </pre>
   *
   * <code>.google.protobuf.Value feature_stats = 2;</code>
   *
   * @return Whether the featureStats field is set.
   */
  boolean hasFeatureStats();
  /**
   *
   *
   * <pre>
   * Feature stats. e.g. histogram buckets.
   * In the format of tensorflow.metadata.v0.DatasetFeatureStatistics.
   * </pre>
   *
   * <code>.google.protobuf.Value feature_stats = 2;</code>
   *
   * @return The featureStats.
   */
  com.google.protobuf.Value getFeatureStats();
  /**
   *
   *
   * <pre>
   * Feature stats. e.g. histogram buckets.
   * In the format of tensorflow.metadata.v0.DatasetFeatureStatistics.
   * </pre>
   *
   * <code>.google.protobuf.Value feature_stats = 2;</code>
   */
  com.google.protobuf.ValueOrBuilder getFeatureStatsOrBuilder();

  /**
   *
   *
   * <pre>
   * Deviation from the current stats to baseline stats.
   *   1. For categorical feature, the distribution distance is calculated by
   *      L-inifinity norm.
   *   2. For numerical feature, the distribution distance is calculated by
   *      Jensenâ€“Shannon divergence.
   * </pre>
   *
   * <code>double distribution_deviation = 3;</code>
   *
   * @return The distributionDeviation.
   */
  double getDistributionDeviation();

  /**
   *
   *
   * <pre>
   * This is the threshold used when detecting drifts, which is set in
   * FeatureMonitor.FeatureSelectionConfig.FeatureConfig.drift_threshold
   * </pre>
   *
   * <code>double drift_detection_threshold = 4;</code>
   *
   * @return The driftDetectionThreshold.
   */
  double getDriftDetectionThreshold();

  /**
   *
   *
   * <pre>
   * If set to true, indicates current stats is detected as and comparing
   * with baseline stats.
   * </pre>
   *
   * <code>bool drift_detected = 5;</code>
   *
   * @return The driftDetected.
   */
  boolean getDriftDetected();

  /**
   *
   *
   * <pre>
   * The timestamp we take snapshot for feature values to generate stats.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp stats_time = 6;</code>
   *
   * @return Whether the statsTime field is set.
   */
  boolean hasStatsTime();
  /**
   *
   *
   * <pre>
   * The timestamp we take snapshot for feature values to generate stats.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp stats_time = 6;</code>
   *
   * @return The statsTime.
   */
  com.google.protobuf.Timestamp getStatsTime();
  /**
   *
   *
   * <pre>
   * The timestamp we take snapshot for feature values to generate stats.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp stats_time = 6;</code>
   */
  com.google.protobuf.TimestampOrBuilder getStatsTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * The ID of the FeatureMonitorJob that generated this FeatureStatsAndAnomaly.
   * </pre>
   *
   * <code>int64 feature_monitor_job_id = 7;</code>
   *
   * @return The featureMonitorJobId.
   */
  long getFeatureMonitorJobId();

  /**
   *
   *
   * <pre>
   * The ID of the FeatureMonitor that this FeatureStatsAndAnomaly generated
   * according to.
   * </pre>
   *
   * <code>string feature_monitor_id = 8;</code>
   *
   * @return The featureMonitorId.
   */
  java.lang.String getFeatureMonitorId();
  /**
   *
   *
   * <pre>
   * The ID of the FeatureMonitor that this FeatureStatsAndAnomaly generated
   * according to.
   * </pre>
   *
   * <code>string feature_monitor_id = 8;</code>
   *
   * @return The bytes for featureMonitorId.
   */
  com.google.protobuf.ByteString getFeatureMonitorIdBytes();
}
