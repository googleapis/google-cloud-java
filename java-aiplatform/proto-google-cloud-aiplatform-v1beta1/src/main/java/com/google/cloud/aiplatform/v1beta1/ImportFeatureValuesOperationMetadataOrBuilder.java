/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/featurestore_service.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1beta1;

public interface ImportFeatureValuesOperationMetadataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.ImportFeatureValuesOperationMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Operation metadata for Featurestore import Feature values.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;</code>
   *
   * @return Whether the genericMetadata field is set.
   */
  boolean hasGenericMetadata();
  /**
   *
   *
   * <pre>
   * Operation metadata for Featurestore import Feature values.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;</code>
   *
   * @return The genericMetadata.
   */
  com.google.cloud.aiplatform.v1beta1.GenericOperationMetadata getGenericMetadata();
  /**
   *
   *
   * <pre>
   * Operation metadata for Featurestore import Feature values.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;</code>
   */
  com.google.cloud.aiplatform.v1beta1.GenericOperationMetadataOrBuilder
      getGenericMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * Number of entities that have been imported by the operation.
   * </pre>
   *
   * <code>int64 imported_entity_count = 2;</code>
   *
   * @return The importedEntityCount.
   */
  long getImportedEntityCount();

  /**
   *
   *
   * <pre>
   * Number of Feature values that have been imported by the operation.
   * </pre>
   *
   * <code>int64 imported_feature_value_count = 3;</code>
   *
   * @return The importedFeatureValueCount.
   */
  long getImportedFeatureValueCount();

  /**
   *
   *
   * <pre>
   * The source URI from where Feature values are imported.
   * </pre>
   *
   * <code>repeated string source_uris = 4;</code>
   *
   * @return A list containing the sourceUris.
   */
  java.util.List<java.lang.String> getSourceUrisList();
  /**
   *
   *
   * <pre>
   * The source URI from where Feature values are imported.
   * </pre>
   *
   * <code>repeated string source_uris = 4;</code>
   *
   * @return The count of sourceUris.
   */
  int getSourceUrisCount();
  /**
   *
   *
   * <pre>
   * The source URI from where Feature values are imported.
   * </pre>
   *
   * <code>repeated string source_uris = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The sourceUris at the given index.
   */
  java.lang.String getSourceUris(int index);
  /**
   *
   *
   * <pre>
   * The source URI from where Feature values are imported.
   * </pre>
   *
   * <code>repeated string source_uris = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the sourceUris at the given index.
   */
  com.google.protobuf.ByteString getSourceUrisBytes(int index);

  /**
   *
   *
   * <pre>
   * The number of rows in input source that weren't imported due to either
   * * Not having any featureValues.
   * * Having a null entityId.
   * * Having a null timestamp.
   * * Not being parsable (applicable for CSV sources).
   * </pre>
   *
   * <code>int64 invalid_row_count = 6;</code>
   *
   * @return The invalidRowCount.
   */
  long getInvalidRowCount();

  /**
   *
   *
   * <pre>
   * The number rows that weren't ingested due to having timestamps outside the
   * retention boundary.
   * </pre>
   *
   * <code>int64 timestamp_outside_retention_rows_count = 7;</code>
   *
   * @return The timestampOutsideRetentionRowsCount.
   */
  long getTimestampOutsideRetentionRowsCount();

  /**
   *
   *
   * <pre>
   * List of ImportFeatureValues operations running under a single EntityType
   * that are blocking this operation.
   * </pre>
   *
   * <code>repeated int64 blocking_operation_ids = 8;</code>
   *
   * @return A list containing the blockingOperationIds.
   */
  java.util.List<java.lang.Long> getBlockingOperationIdsList();
  /**
   *
   *
   * <pre>
   * List of ImportFeatureValues operations running under a single EntityType
   * that are blocking this operation.
   * </pre>
   *
   * <code>repeated int64 blocking_operation_ids = 8;</code>
   *
   * @return The count of blockingOperationIds.
   */
  int getBlockingOperationIdsCount();
  /**
   *
   *
   * <pre>
   * List of ImportFeatureValues operations running under a single EntityType
   * that are blocking this operation.
   * </pre>
   *
   * <code>repeated int64 blocking_operation_ids = 8;</code>
   *
   * @param index The index of the element to return.
   * @return The blockingOperationIds at the given index.
   */
  long getBlockingOperationIds(int index);
}
