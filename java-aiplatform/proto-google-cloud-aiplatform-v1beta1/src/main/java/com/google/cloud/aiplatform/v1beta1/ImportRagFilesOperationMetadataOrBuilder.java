/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/vertex_rag_data_service.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1beta1;

public interface ImportRagFilesOperationMetadataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.ImportRagFilesOperationMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The operation generic information.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;</code>
   *
   * @return Whether the genericMetadata field is set.
   */
  boolean hasGenericMetadata();
  /**
   *
   *
   * <pre>
   * The operation generic information.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;</code>
   *
   * @return The genericMetadata.
   */
  com.google.cloud.aiplatform.v1beta1.GenericOperationMetadata getGenericMetadata();
  /**
   *
   *
   * <pre>
   * The operation generic information.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.GenericOperationMetadata generic_metadata = 1;</code>
   */
  com.google.cloud.aiplatform.v1beta1.GenericOperationMetadataOrBuilder
      getGenericMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * The resource ID of RagCorpus that this operation is executed on.
   * </pre>
   *
   * <code>int64 rag_corpus_id = 2;</code>
   *
   * @return The ragCorpusId.
   */
  long getRagCorpusId();

  /**
   *
   *
   * <pre>
   * Output only. The config that was passed in the ImportRagFilesRequest.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.ImportRagFilesConfig import_rag_files_config = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the importRagFilesConfig field is set.
   */
  boolean hasImportRagFilesConfig();
  /**
   *
   *
   * <pre>
   * Output only. The config that was passed in the ImportRagFilesRequest.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.ImportRagFilesConfig import_rag_files_config = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The importRagFilesConfig.
   */
  com.google.cloud.aiplatform.v1beta1.ImportRagFilesConfig getImportRagFilesConfig();
  /**
   *
   *
   * <pre>
   * Output only. The config that was passed in the ImportRagFilesRequest.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.ImportRagFilesConfig import_rag_files_config = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.ImportRagFilesConfigOrBuilder
      getImportRagFilesConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * The progress percentage of the operation. Value is in the range [0, 100].
   * This percentage is calculated as follows:
   *    progress_percentage = 100 * (successes + failures + skips) / total
   * </pre>
   *
   * <code>int32 progress_percentage = 4;</code>
   *
   * @return The progressPercentage.
   */
  int getProgressPercentage();
}
