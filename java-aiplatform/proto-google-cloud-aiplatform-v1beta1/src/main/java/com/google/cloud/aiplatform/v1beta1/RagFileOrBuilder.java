/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/vertex_rag_data.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1beta1;

public interface RagFileOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.RagFile)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. Google Cloud Storage location of the RagFile.
   * It does not support wildcards in the Cloud Storage uri for now.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.GcsSource gcs_source = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the gcsSource field is set.
   */
  boolean hasGcsSource();
  /**
   *
   *
   * <pre>
   * Output only. Google Cloud Storage location of the RagFile.
   * It does not support wildcards in the Cloud Storage uri for now.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.GcsSource gcs_source = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The gcsSource.
   */
  com.google.cloud.aiplatform.v1beta1.GcsSource getGcsSource();
  /**
   *
   *
   * <pre>
   * Output only. Google Cloud Storage location of the RagFile.
   * It does not support wildcards in the Cloud Storage uri for now.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.GcsSource gcs_source = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.GcsSourceOrBuilder getGcsSourceOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Google Drive location. Supports importing individual files
   * as well as Google Drive folders.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.GoogleDriveSource google_drive_source = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the googleDriveSource field is set.
   */
  boolean hasGoogleDriveSource();
  /**
   *
   *
   * <pre>
   * Output only. Google Drive location. Supports importing individual files
   * as well as Google Drive folders.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.GoogleDriveSource google_drive_source = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The googleDriveSource.
   */
  com.google.cloud.aiplatform.v1beta1.GoogleDriveSource getGoogleDriveSource();
  /**
   *
   *
   * <pre>
   * Output only. Google Drive location. Supports importing individual files
   * as well as Google Drive folders.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.GoogleDriveSource google_drive_source = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.GoogleDriveSourceOrBuilder getGoogleDriveSourceOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The RagFile is encapsulated and uploaded in the
   * UploadRagFile request.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.DirectUploadSource direct_upload_source = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the directUploadSource field is set.
   */
  boolean hasDirectUploadSource();
  /**
   *
   *
   * <pre>
   * Output only. The RagFile is encapsulated and uploaded in the
   * UploadRagFile request.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.DirectUploadSource direct_upload_source = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The directUploadSource.
   */
  com.google.cloud.aiplatform.v1beta1.DirectUploadSource getDirectUploadSource();
  /**
   *
   *
   * <pre>
   * Output only. The RagFile is encapsulated and uploaded in the
   * UploadRagFile request.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.DirectUploadSource direct_upload_source = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.DirectUploadSourceOrBuilder getDirectUploadSourceOrBuilder();

  /**
   *
   *
   * <pre>
   * The RagFile is imported from a Slack channel.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SlackSource slack_source = 11;</code>
   *
   * @return Whether the slackSource field is set.
   */
  boolean hasSlackSource();
  /**
   *
   *
   * <pre>
   * The RagFile is imported from a Slack channel.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SlackSource slack_source = 11;</code>
   *
   * @return The slackSource.
   */
  com.google.cloud.aiplatform.v1beta1.SlackSource getSlackSource();
  /**
   *
   *
   * <pre>
   * The RagFile is imported from a Slack channel.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SlackSource slack_source = 11;</code>
   */
  com.google.cloud.aiplatform.v1beta1.SlackSourceOrBuilder getSlackSourceOrBuilder();

  /**
   *
   *
   * <pre>
   * The RagFile is imported from a Jira query.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.JiraSource jira_source = 12;</code>
   *
   * @return Whether the jiraSource field is set.
   */
  boolean hasJiraSource();
  /**
   *
   *
   * <pre>
   * The RagFile is imported from a Jira query.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.JiraSource jira_source = 12;</code>
   *
   * @return The jiraSource.
   */
  com.google.cloud.aiplatform.v1beta1.JiraSource getJiraSource();
  /**
   *
   *
   * <pre>
   * The RagFile is imported from a Jira query.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.JiraSource jira_source = 12;</code>
   */
  com.google.cloud.aiplatform.v1beta1.JiraSourceOrBuilder getJiraSourceOrBuilder();

  /**
   *
   *
   * <pre>
   * The RagFile is imported from a SharePoint source.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SharePointSources share_point_sources = 14;</code>
   *
   * @return Whether the sharePointSources field is set.
   */
  boolean hasSharePointSources();
  /**
   *
   *
   * <pre>
   * The RagFile is imported from a SharePoint source.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SharePointSources share_point_sources = 14;</code>
   *
   * @return The sharePointSources.
   */
  com.google.cloud.aiplatform.v1beta1.SharePointSources getSharePointSources();
  /**
   *
   *
   * <pre>
   * The RagFile is imported from a SharePoint source.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SharePointSources share_point_sources = 14;</code>
   */
  com.google.cloud.aiplatform.v1beta1.SharePointSourcesOrBuilder getSharePointSourcesOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The resource name of the RagFile.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The name.
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * Output only. The resource name of the RagFile.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Required. The display name of the RagFile.
   * The name can be up to 128 characters long and can consist of any UTF-8
   * characters.
   * </pre>
   *
   * <code>string display_name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   *
   *
   * <pre>
   * Required. The display name of the RagFile.
   * The name can be up to 128 characters long and can consist of any UTF-8
   * characters.
   * </pre>
   *
   * <code>string display_name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString getDisplayNameBytes();

  /**
   *
   *
   * <pre>
   * Optional. The description of the RagFile.
   * </pre>
   *
   * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   *
   *
   * <pre>
   * Optional. The description of the RagFile.
   * </pre>
   *
   * <code>string description = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString getDescriptionBytes();

  /**
   *
   *
   * <pre>
   * Output only. The size of the RagFile in bytes.
   * </pre>
   *
   * <code>int64 size_bytes = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   *
   * @return The sizeBytes.
   */
  long getSizeBytes();

  /**
   *
   *
   * <pre>
   * Output only. The type of the RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFile.RagFileType rag_file_type = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The enum numeric value on the wire for ragFileType.
   */
  int getRagFileTypeValue();
  /**
   *
   *
   * <pre>
   * Output only. The type of the RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFile.RagFileType rag_file_type = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The ragFileType.
   */
  com.google.cloud.aiplatform.v1beta1.RagFile.RagFileType getRagFileType();

  /**
   *
   *
   * <pre>
   * Output only. Timestamp when this RagFile was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   *
   *
   * <pre>
   * Output only. Timestamp when this RagFile was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   *
   *
   * <pre>
   * Output only. Timestamp when this RagFile was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. Timestamp when this RagFile was last updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   *
   *
   * <pre>
   * Output only. Timestamp when this RagFile was last updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   *
   *
   * <pre>
   * Output only. Timestamp when this RagFile was last updated.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. State of the RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.FileStatus file_status = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return Whether the fileStatus field is set.
   */
  boolean hasFileStatus();
  /**
   *
   *
   * <pre>
   * Output only. State of the RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.FileStatus file_status = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   *
   * @return The fileStatus.
   */
  com.google.cloud.aiplatform.v1beta1.FileStatus getFileStatus();
  /**
   *
   *
   * <pre>
   * Output only. State of the RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.FileStatus file_status = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.FileStatusOrBuilder getFileStatusOrBuilder();

  com.google.cloud.aiplatform.v1beta1.RagFile.RagFileSourceCase getRagFileSourceCase();
}
