/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/vertex_rag_service.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1beta1;

public interface FactOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.Fact)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Query that is used to retrieve this fact.
   * </pre>
   *
   * <code>optional string query = 1;</code>
   *
   * @return Whether the query field is set.
   */
  boolean hasQuery();

  /**
   *
   *
   * <pre>
   * Query that is used to retrieve this fact.
   * </pre>
   *
   * <code>optional string query = 1;</code>
   *
   * @return The query.
   */
  java.lang.String getQuery();

  /**
   *
   *
   * <pre>
   * Query that is used to retrieve this fact.
   * </pre>
   *
   * <code>optional string query = 1;</code>
   *
   * @return The bytes for query.
   */
  com.google.protobuf.ByteString getQueryBytes();

  /**
   *
   *
   * <pre>
   * If present, it refers to the title of this fact.
   * </pre>
   *
   * <code>optional string title = 2;</code>
   *
   * @return Whether the title field is set.
   */
  boolean hasTitle();

  /**
   *
   *
   * <pre>
   * If present, it refers to the title of this fact.
   * </pre>
   *
   * <code>optional string title = 2;</code>
   *
   * @return The title.
   */
  java.lang.String getTitle();

  /**
   *
   *
   * <pre>
   * If present, it refers to the title of this fact.
   * </pre>
   *
   * <code>optional string title = 2;</code>
   *
   * @return The bytes for title.
   */
  com.google.protobuf.ByteString getTitleBytes();

  /**
   *
   *
   * <pre>
   * If present, this uri links to the source of the fact.
   * </pre>
   *
   * <code>optional string uri = 3;</code>
   *
   * @return Whether the uri field is set.
   */
  boolean hasUri();

  /**
   *
   *
   * <pre>
   * If present, this uri links to the source of the fact.
   * </pre>
   *
   * <code>optional string uri = 3;</code>
   *
   * @return The uri.
   */
  java.lang.String getUri();

  /**
   *
   *
   * <pre>
   * If present, this uri links to the source of the fact.
   * </pre>
   *
   * <code>optional string uri = 3;</code>
   *
   * @return The bytes for uri.
   */
  com.google.protobuf.ByteString getUriBytes();

  /**
   *
   *
   * <pre>
   * If present, the summary/snippet of the fact.
   * </pre>
   *
   * <code>optional string summary = 4;</code>
   *
   * @return Whether the summary field is set.
   */
  boolean hasSummary();

  /**
   *
   *
   * <pre>
   * If present, the summary/snippet of the fact.
   * </pre>
   *
   * <code>optional string summary = 4;</code>
   *
   * @return The summary.
   */
  java.lang.String getSummary();

  /**
   *
   *
   * <pre>
   * If present, the summary/snippet of the fact.
   * </pre>
   *
   * <code>optional string summary = 4;</code>
   *
   * @return The bytes for summary.
   */
  com.google.protobuf.ByteString getSummaryBytes();

  /**
   *
   *
   * <pre>
   * If present, the distance between the query vector and this fact vector.
   * </pre>
   *
   * <code>optional double vector_distance = 5 [deprecated = true];</code>
   *
   * @deprecated google.cloud.aiplatform.v1beta1.Fact.vector_distance is deprecated. See
   *     google/cloud/aiplatform/v1beta1/vertex_rag_service.proto;l=318
   * @return Whether the vectorDistance field is set.
   */
  @java.lang.Deprecated
  boolean hasVectorDistance();

  /**
   *
   *
   * <pre>
   * If present, the distance between the query vector and this fact vector.
   * </pre>
   *
   * <code>optional double vector_distance = 5 [deprecated = true];</code>
   *
   * @deprecated google.cloud.aiplatform.v1beta1.Fact.vector_distance is deprecated. See
   *     google/cloud/aiplatform/v1beta1/vertex_rag_service.proto;l=318
   * @return The vectorDistance.
   */
  @java.lang.Deprecated
  double getVectorDistance();

  /**
   *
   *
   * <pre>
   * If present, according to the underlying Vector DB and the selected metric
   * type, the score can be either the distance or the similarity between the
   * query and the fact and its range depends on the metric type.
   *
   * For example, if the metric type is COSINE_DISTANCE, it represents the
   * distance between the query and the fact. The larger the distance, the less
   * relevant the fact is to the query. The range is [0, 2], while 0 means the
   * most relevant and 2 means the least relevant.
   * </pre>
   *
   * <code>optional double score = 6;</code>
   *
   * @return Whether the score field is set.
   */
  boolean hasScore();

  /**
   *
   *
   * <pre>
   * If present, according to the underlying Vector DB and the selected metric
   * type, the score can be either the distance or the similarity between the
   * query and the fact and its range depends on the metric type.
   *
   * For example, if the metric type is COSINE_DISTANCE, it represents the
   * distance between the query and the fact. The larger the distance, the less
   * relevant the fact is to the query. The range is [0, 2], while 0 means the
   * most relevant and 2 means the least relevant.
   * </pre>
   *
   * <code>optional double score = 6;</code>
   *
   * @return The score.
   */
  double getScore();

  /**
   *
   *
   * <pre>
   * If present, chunk properties.
   * </pre>
   *
   * <code>optional .google.cloud.aiplatform.v1beta1.RagChunk chunk = 7;</code>
   *
   * @return Whether the chunk field is set.
   */
  boolean hasChunk();

  /**
   *
   *
   * <pre>
   * If present, chunk properties.
   * </pre>
   *
   * <code>optional .google.cloud.aiplatform.v1beta1.RagChunk chunk = 7;</code>
   *
   * @return The chunk.
   */
  com.google.cloud.aiplatform.v1beta1.RagChunk getChunk();

  /**
   *
   *
   * <pre>
   * If present, chunk properties.
   * </pre>
   *
   * <code>optional .google.cloud.aiplatform.v1beta1.RagChunk chunk = 7;</code>
   */
  com.google.cloud.aiplatform.v1beta1.RagChunkOrBuilder getChunkOrBuilder();
}
