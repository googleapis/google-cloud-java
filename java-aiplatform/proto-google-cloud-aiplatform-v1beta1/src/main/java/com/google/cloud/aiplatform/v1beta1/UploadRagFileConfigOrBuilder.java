/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/vertex_rag_data.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.aiplatform.v1beta1;

public interface UploadRagFileConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.UploadRagFileConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Specifies the size and overlap of chunks after uploading RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileChunkingConfig rag_file_chunking_config = 1 [deprecated = true];
   * </code>
   *
   * @deprecated google.cloud.aiplatform.v1beta1.UploadRagFileConfig.rag_file_chunking_config is
   *     deprecated. See google/cloud/aiplatform/v1beta1/vertex_rag_data.proto;l=644
   * @return Whether the ragFileChunkingConfig field is set.
   */
  @java.lang.Deprecated
  boolean hasRagFileChunkingConfig();

  /**
   *
   *
   * <pre>
   * Specifies the size and overlap of chunks after uploading RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileChunkingConfig rag_file_chunking_config = 1 [deprecated = true];
   * </code>
   *
   * @deprecated google.cloud.aiplatform.v1beta1.UploadRagFileConfig.rag_file_chunking_config is
   *     deprecated. See google/cloud/aiplatform/v1beta1/vertex_rag_data.proto;l=644
   * @return The ragFileChunkingConfig.
   */
  @java.lang.Deprecated
  com.google.cloud.aiplatform.v1beta1.RagFileChunkingConfig getRagFileChunkingConfig();

  /**
   *
   *
   * <pre>
   * Specifies the size and overlap of chunks after uploading RagFile.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileChunkingConfig rag_file_chunking_config = 1 [deprecated = true];
   * </code>
   */
  @java.lang.Deprecated
  com.google.cloud.aiplatform.v1beta1.RagFileChunkingConfigOrBuilder
      getRagFileChunkingConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Specifies the transformation config for RagFiles.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileTransformationConfig rag_file_transformation_config = 3;
   * </code>
   *
   * @return Whether the ragFileTransformationConfig field is set.
   */
  boolean hasRagFileTransformationConfig();

  /**
   *
   *
   * <pre>
   * Specifies the transformation config for RagFiles.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileTransformationConfig rag_file_transformation_config = 3;
   * </code>
   *
   * @return The ragFileTransformationConfig.
   */
  com.google.cloud.aiplatform.v1beta1.RagFileTransformationConfig getRagFileTransformationConfig();

  /**
   *
   *
   * <pre>
   * Specifies the transformation config for RagFiles.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileTransformationConfig rag_file_transformation_config = 3;
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.RagFileTransformationConfigOrBuilder
      getRagFileTransformationConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Specifies the metadata config for RagFiles.
   * Including paths for metadata schema and metadata.
   * Alteratively, inline metadata schema and metadata can be provided.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.RagFileMetadataConfig rag_file_metadata_config = 4;
   * </code>
   *
   * @return Whether the ragFileMetadataConfig field is set.
   */
  boolean hasRagFileMetadataConfig();

  /**
   *
   *
   * <pre>
   * Specifies the metadata config for RagFiles.
   * Including paths for metadata schema and metadata.
   * Alteratively, inline metadata schema and metadata can be provided.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.RagFileMetadataConfig rag_file_metadata_config = 4;
   * </code>
   *
   * @return The ragFileMetadataConfig.
   */
  com.google.cloud.aiplatform.v1beta1.RagFileMetadataConfig getRagFileMetadataConfig();

  /**
   *
   *
   * <pre>
   * Specifies the metadata config for RagFiles.
   * Including paths for metadata schema and metadata.
   * Alteratively, inline metadata schema and metadata can be provided.
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.RagFileMetadataConfig rag_file_metadata_config = 4;
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.RagFileMetadataConfigOrBuilder
      getRagFileMetadataConfigOrBuilder();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the parsing config for RagFiles.
   * RAG will use the default parser if this field is not set.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileParsingConfig rag_file_parsing_config = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the ragFileParsingConfig field is set.
   */
  boolean hasRagFileParsingConfig();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the parsing config for RagFiles.
   * RAG will use the default parser if this field is not set.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileParsingConfig rag_file_parsing_config = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The ragFileParsingConfig.
   */
  com.google.cloud.aiplatform.v1beta1.RagFileParsingConfig getRagFileParsingConfig();

  /**
   *
   *
   * <pre>
   * Optional. Specifies the parsing config for RagFiles.
   * RAG will use the default parser if this field is not set.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1beta1.RagFileParsingConfig rag_file_parsing_config = 5 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.RagFileParsingConfigOrBuilder
      getRagFileParsingConfigOrBuilder();
}
