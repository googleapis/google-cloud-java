/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/tool.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.aiplatform.v1beta1;

public interface VertexAISearchOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.VertexAISearch)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. Fully-qualified Vertex AI Search data store resource ID.
   * Format:
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
   * </pre>
   *
   * <code>string datastore = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The datastore.
   */
  java.lang.String getDatastore();

  /**
   *
   *
   * <pre>
   * Optional. Fully-qualified Vertex AI Search data store resource ID.
   * Format:
   * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
   * </pre>
   *
   * <code>string datastore = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for datastore.
   */
  com.google.protobuf.ByteString getDatastoreBytes();

  /**
   *
   *
   * <pre>
   * Optional. Fully-qualified Vertex AI Search engine resource ID.
   * Format:
   * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
   * </pre>
   *
   * <code>string engine = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The engine.
   */
  java.lang.String getEngine();

  /**
   *
   *
   * <pre>
   * Optional. Fully-qualified Vertex AI Search engine resource ID.
   * Format:
   * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
   * </pre>
   *
   * <code>string engine = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for engine.
   */
  com.google.protobuf.ByteString getEngineBytes();

  /**
   *
   *
   * <pre>
   * Optional. Number of search results to return per query.
   * The default value is 10.
   * The maximumm allowed value is 10.
   * </pre>
   *
   * <code>int32 max_results = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The maxResults.
   */
  int getMaxResults();

  /**
   *
   *
   * <pre>
   * Optional. Filter strings to be passed to the search API.
   * </pre>
   *
   * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The filter.
   */
  java.lang.String getFilter();

  /**
   *
   *
   * <pre>
   * Optional. Filter strings to be passed to the search API.
   * </pre>
   *
   * <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for filter.
   */
  com.google.protobuf.ByteString getFilterBytes();

  /**
   *
   *
   * <pre>
   * Specifications that define the specific DataStores to be searched, along
   * with configurations for those data stores. This is only considered for
   * Engines with multiple data stores.
   * It should only be set if engine is used.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec data_store_specs = 5;
   * </code>
   */
  java.util.List<com.google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec>
      getDataStoreSpecsList();

  /**
   *
   *
   * <pre>
   * Specifications that define the specific DataStores to be searched, along
   * with configurations for those data stores. This is only considered for
   * Engines with multiple data stores.
   * It should only be set if engine is used.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec data_store_specs = 5;
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec getDataStoreSpecs(int index);

  /**
   *
   *
   * <pre>
   * Specifications that define the specific DataStores to be searched, along
   * with configurations for those data stores. This is only considered for
   * Engines with multiple data stores.
   * It should only be set if engine is used.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec data_store_specs = 5;
   * </code>
   */
  int getDataStoreSpecsCount();

  /**
   *
   *
   * <pre>
   * Specifications that define the specific DataStores to be searched, along
   * with configurations for those data stores. This is only considered for
   * Engines with multiple data stores.
   * It should only be set if engine is used.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec data_store_specs = 5;
   * </code>
   */
  java.util.List<
          ? extends com.google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpecOrBuilder>
      getDataStoreSpecsOrBuilderList();

  /**
   *
   *
   * <pre>
   * Specifications that define the specific DataStores to be searched, along
   * with configurations for those data stores. This is only considered for
   * Engines with multiple data stores.
   * It should only be set if engine is used.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpec data_store_specs = 5;
   * </code>
   */
  com.google.cloud.aiplatform.v1beta1.VertexAISearch.DataStoreSpecOrBuilder
      getDataStoreSpecsOrBuilder(int index);
}
