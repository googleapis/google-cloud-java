/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/products/v1/products_common.proto

// Protobuf Java Version: 3.25.8
package com.google.shopping.merchant.products.v1;

/**
 *
 *
 * <pre>
 * Target [age group](https://support.google.com/merchants/answer/6324463) of
 * the item.
 * </pre>
 *
 * Protobuf enum {@code google.shopping.merchant.products.v1.AgeGroup}
 */
public enum AgeGroup implements com.google.protobuf.ProtocolMessageEnum {
  /**
   *
   *
   * <pre>
   * Age group is not specified.
   * </pre>
   *
   * <code>AGE_GROUP_UNSPECIFIED = 0;</code>
   */
  AGE_GROUP_UNSPECIFIED(0),
  /**
   *
   *
   * <pre>
   * Teens or older.
   * </pre>
   *
   * <code>ADULT = 1;</code>
   */
  ADULT(1),
  /**
   *
   *
   * <pre>
   * 5-13 years old.
   * </pre>
   *
   * <code>KIDS = 2;</code>
   */
  KIDS(2),
  /**
   *
   *
   * <pre>
   * 1-5 years old.
   * </pre>
   *
   * <code>TODDLER = 3;</code>
   */
  TODDLER(3),
  /**
   *
   *
   * <pre>
   * 3-12 months old.
   * </pre>
   *
   * <code>INFANT = 4;</code>
   */
  INFANT(4),
  /**
   *
   *
   * <pre>
   * 0-3 months old.
   * </pre>
   *
   * <code>NEWBORN = 5;</code>
   */
  NEWBORN(5),
  UNRECOGNIZED(-1),
  ;

  /**
   *
   *
   * <pre>
   * Age group is not specified.
   * </pre>
   *
   * <code>AGE_GROUP_UNSPECIFIED = 0;</code>
   */
  public static final int AGE_GROUP_UNSPECIFIED_VALUE = 0;

  /**
   *
   *
   * <pre>
   * Teens or older.
   * </pre>
   *
   * <code>ADULT = 1;</code>
   */
  public static final int ADULT_VALUE = 1;

  /**
   *
   *
   * <pre>
   * 5-13 years old.
   * </pre>
   *
   * <code>KIDS = 2;</code>
   */
  public static final int KIDS_VALUE = 2;

  /**
   *
   *
   * <pre>
   * 1-5 years old.
   * </pre>
   *
   * <code>TODDLER = 3;</code>
   */
  public static final int TODDLER_VALUE = 3;

  /**
   *
   *
   * <pre>
   * 3-12 months old.
   * </pre>
   *
   * <code>INFANT = 4;</code>
   */
  public static final int INFANT_VALUE = 4;

  /**
   *
   *
   * <pre>
   * 0-3 months old.
   * </pre>
   *
   * <code>NEWBORN = 5;</code>
   */
  public static final int NEWBORN_VALUE = 5;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AgeGroup valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AgeGroup forNumber(int value) {
    switch (value) {
      case 0:
        return AGE_GROUP_UNSPECIFIED;
      case 1:
        return ADULT;
      case 2:
        return KIDS;
      case 3:
        return TODDLER;
      case 4:
        return INFANT;
      case 5:
        return NEWBORN;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AgeGroup> internalGetValueMap() {
    return internalValueMap;
  }

  private static final com.google.protobuf.Internal.EnumLiteMap<AgeGroup> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<AgeGroup>() {
        public AgeGroup findValueByNumber(int number) {
          return AgeGroup.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }

  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }

  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return com.google.shopping.merchant.products.v1.ProductsCommonProto.getDescriptor()
        .getEnumTypes()
        .get(1);
  }

  private static final AgeGroup[] VALUES = values();

  public static AgeGroup valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AgeGroup(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.shopping.merchant.products.v1.AgeGroup)
}
