/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/products/v1beta/products_common.proto

// Protobuf Java Version: 3.25.5
package com.google.shopping.merchant.products.v1beta;

public interface CloudExportAdditionalPropertiesOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.merchant.products.v1beta.CloudExportAdditionalProperties)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Name of the given property. For example,
   * "Screen-Resolution" for a TV product. Maximum string size is 256
   * characters.
   * </pre>
   *
   * <code>optional string property_name = 1;</code>
   *
   * @return Whether the propertyName field is set.
   */
  boolean hasPropertyName();
  /**
   *
   *
   * <pre>
   * Name of the given property. For example,
   * "Screen-Resolution" for a TV product. Maximum string size is 256
   * characters.
   * </pre>
   *
   * <code>optional string property_name = 1;</code>
   *
   * @return The propertyName.
   */
  java.lang.String getPropertyName();
  /**
   *
   *
   * <pre>
   * Name of the given property. For example,
   * "Screen-Resolution" for a TV product. Maximum string size is 256
   * characters.
   * </pre>
   *
   * <code>optional string property_name = 1;</code>
   *
   * @return The bytes for propertyName.
   */
  com.google.protobuf.ByteString getPropertyNameBytes();

  /**
   *
   *
   * <pre>
   * Text value of the given property. For example,
   * "8K(UHD)" could be a text value for a TV product. Maximum
   * repeatedness of this value is 400. Values are stored in an arbitrary but
   * consistent order. Maximum string size is 256 characters.
   * </pre>
   *
   * <code>repeated string text_value = 2;</code>
   *
   * @return A list containing the textValue.
   */
  java.util.List<java.lang.String> getTextValueList();
  /**
   *
   *
   * <pre>
   * Text value of the given property. For example,
   * "8K(UHD)" could be a text value for a TV product. Maximum
   * repeatedness of this value is 400. Values are stored in an arbitrary but
   * consistent order. Maximum string size is 256 characters.
   * </pre>
   *
   * <code>repeated string text_value = 2;</code>
   *
   * @return The count of textValue.
   */
  int getTextValueCount();
  /**
   *
   *
   * <pre>
   * Text value of the given property. For example,
   * "8K(UHD)" could be a text value for a TV product. Maximum
   * repeatedness of this value is 400. Values are stored in an arbitrary but
   * consistent order. Maximum string size is 256 characters.
   * </pre>
   *
   * <code>repeated string text_value = 2;</code>
   *
   * @param index The index of the element to return.
   * @return The textValue at the given index.
   */
  java.lang.String getTextValue(int index);
  /**
   *
   *
   * <pre>
   * Text value of the given property. For example,
   * "8K(UHD)" could be a text value for a TV product. Maximum
   * repeatedness of this value is 400. Values are stored in an arbitrary but
   * consistent order. Maximum string size is 256 characters.
   * </pre>
   *
   * <code>repeated string text_value = 2;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the textValue at the given index.
   */
  com.google.protobuf.ByteString getTextValueBytes(int index);

  /**
   *
   *
   * <pre>
   * Boolean value of the given property. For example for a TV product,
   * "True" or "False" if the screen is UHD.
   * </pre>
   *
   * <code>optional bool bool_value = 3;</code>
   *
   * @return Whether the boolValue field is set.
   */
  boolean hasBoolValue();
  /**
   *
   *
   * <pre>
   * Boolean value of the given property. For example for a TV product,
   * "True" or "False" if the screen is UHD.
   * </pre>
   *
   * <code>optional bool bool_value = 3;</code>
   *
   * @return The boolValue.
   */
  boolean getBoolValue();

  /**
   *
   *
   * <pre>
   * Integer values of the given property. For example, 1080 for a TV
   * product's Screen Resolution. Maximum repeatedness of this value
   * is 400. Values are stored in an arbitrary but consistent order.
   * </pre>
   *
   * <code>repeated int64 int_value = 4;</code>
   *
   * @return A list containing the intValue.
   */
  java.util.List<java.lang.Long> getIntValueList();
  /**
   *
   *
   * <pre>
   * Integer values of the given property. For example, 1080 for a TV
   * product's Screen Resolution. Maximum repeatedness of this value
   * is 400. Values are stored in an arbitrary but consistent order.
   * </pre>
   *
   * <code>repeated int64 int_value = 4;</code>
   *
   * @return The count of intValue.
   */
  int getIntValueCount();
  /**
   *
   *
   * <pre>
   * Integer values of the given property. For example, 1080 for a TV
   * product's Screen Resolution. Maximum repeatedness of this value
   * is 400. Values are stored in an arbitrary but consistent order.
   * </pre>
   *
   * <code>repeated int64 int_value = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The intValue at the given index.
   */
  long getIntValue(int index);

  /**
   *
   *
   * <pre>
   * Float values of the given property. For example for a TV product
   * 1.2345. Maximum repeatedness of this value is 400. Values
   * are stored in an arbitrary but consistent order.
   * </pre>
   *
   * <code>repeated float float_value = 5;</code>
   *
   * @return A list containing the floatValue.
   */
  java.util.List<java.lang.Float> getFloatValueList();
  /**
   *
   *
   * <pre>
   * Float values of the given property. For example for a TV product
   * 1.2345. Maximum repeatedness of this value is 400. Values
   * are stored in an arbitrary but consistent order.
   * </pre>
   *
   * <code>repeated float float_value = 5;</code>
   *
   * @return The count of floatValue.
   */
  int getFloatValueCount();
  /**
   *
   *
   * <pre>
   * Float values of the given property. For example for a TV product
   * 1.2345. Maximum repeatedness of this value is 400. Values
   * are stored in an arbitrary but consistent order.
   * </pre>
   *
   * <code>repeated float float_value = 5;</code>
   *
   * @param index The index of the element to return.
   * @return The floatValue at the given index.
   */
  float getFloatValue(int index);

  /**
   *
   *
   * <pre>
   * Minimum float value of the given property. For example for a TV
   * product 1.00.
   * </pre>
   *
   * <code>optional float min_value = 6;</code>
   *
   * @return Whether the minValue field is set.
   */
  boolean hasMinValue();
  /**
   *
   *
   * <pre>
   * Minimum float value of the given property. For example for a TV
   * product 1.00.
   * </pre>
   *
   * <code>optional float min_value = 6;</code>
   *
   * @return The minValue.
   */
  float getMinValue();

  /**
   *
   *
   * <pre>
   * Maximum float value of the given property. For example for a TV
   * product 100.00.
   * </pre>
   *
   * <code>optional float max_value = 7;</code>
   *
   * @return Whether the maxValue field is set.
   */
  boolean hasMaxValue();
  /**
   *
   *
   * <pre>
   * Maximum float value of the given property. For example for a TV
   * product 100.00.
   * </pre>
   *
   * <code>optional float max_value = 7;</code>
   *
   * @return The maxValue.
   */
  float getMaxValue();

  /**
   *
   *
   * <pre>
   * Unit of the given property. For example, "Pixels" for a TV product. Maximum
   * string size is 256B.
   * </pre>
   *
   * <code>optional string unit_code = 8;</code>
   *
   * @return Whether the unitCode field is set.
   */
  boolean hasUnitCode();
  /**
   *
   *
   * <pre>
   * Unit of the given property. For example, "Pixels" for a TV product. Maximum
   * string size is 256B.
   * </pre>
   *
   * <code>optional string unit_code = 8;</code>
   *
   * @return The unitCode.
   */
  java.lang.String getUnitCode();
  /**
   *
   *
   * <pre>
   * Unit of the given property. For example, "Pixels" for a TV product. Maximum
   * string size is 256B.
   * </pre>
   *
   * <code>optional string unit_code = 8;</code>
   *
   * @return The bytes for unitCode.
   */
  com.google.protobuf.ByteString getUnitCodeBytes();
}
