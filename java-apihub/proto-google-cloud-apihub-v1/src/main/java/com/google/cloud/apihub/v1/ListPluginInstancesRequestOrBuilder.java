/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/apihub/v1/plugin_service.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.apihub.v1;

public interface ListPluginInstancesRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.apihub.v1.ListPluginInstancesRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Required. The parent resource where this plugin will be created.
   * Format: `projects/{project}/locations/{location}/plugins/{plugin}`.
   * To list plugin instances for multiple plugins,
   * use the - character instead of the plugin ID.
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The parent.
   */
  java.lang.String getParent();

  /**
   *
   *
   * <pre>
   * Required. The parent resource where this plugin will be created.
   * Format: `projects/{project}/locations/{location}/plugins/{plugin}`.
   * To list plugin instances for multiple plugins,
   * use the - character instead of the plugin ID.
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString getParentBytes();

  /**
   *
   *
   * <pre>
   * Optional. An expression that filters the list of plugin instances.
   *
   * A filter expression consists of a field name, a comparison
   * operator, and a value for filtering. The value must be a string. The
   * comparison operator must be one of: `&lt;`, `&gt;` or
   * `=`. Filters are not case sensitive.
   *
   * The following fields in the `PluginInstances` are eligible for filtering:
   *
   *   * `state` - The state of the Plugin Instance. Allowed
   *   comparison operators: `=`.
   *
   * A filter function is also supported in the filter string. The filter
   * function is `id(name)`. The `id(name)` function returns the id of the
   * resource name. For example, `id(name) = &#92;"plugin-instance-1&#92;"` is
   * equivalent to `name =
   * &#92;"projects/test-project-id/locations/test-location-id/plugins/plugin-1/instances/plugin-instance-1&#92;"`
   * provided the parent is
   * `projects/test-project-id/locations/test-location-id/plugins/plugin-1`.
   *
   * Expressions are combined with either `AND` logic operator or `OR` logical
   * operator but not both of them together i.e. only one of the `AND` or `OR`
   * operator can be used throughout the filter string and both the operators
   * cannot be used together. No other logical operators are
   * supported. At most three filter fields are allowed in the filter
   * string and if provided more than that then `INVALID_ARGUMENT` error is
   * returned by the API.
   * Here are a few examples:
   *
   *   * `state = ENABLED` - The plugin instance is in enabled state.
   * </pre>
   *
   * <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The filter.
   */
  java.lang.String getFilter();

  /**
   *
   *
   * <pre>
   * Optional. An expression that filters the list of plugin instances.
   *
   * A filter expression consists of a field name, a comparison
   * operator, and a value for filtering. The value must be a string. The
   * comparison operator must be one of: `&lt;`, `&gt;` or
   * `=`. Filters are not case sensitive.
   *
   * The following fields in the `PluginInstances` are eligible for filtering:
   *
   *   * `state` - The state of the Plugin Instance. Allowed
   *   comparison operators: `=`.
   *
   * A filter function is also supported in the filter string. The filter
   * function is `id(name)`. The `id(name)` function returns the id of the
   * resource name. For example, `id(name) = &#92;"plugin-instance-1&#92;"` is
   * equivalent to `name =
   * &#92;"projects/test-project-id/locations/test-location-id/plugins/plugin-1/instances/plugin-instance-1&#92;"`
   * provided the parent is
   * `projects/test-project-id/locations/test-location-id/plugins/plugin-1`.
   *
   * Expressions are combined with either `AND` logic operator or `OR` logical
   * operator but not both of them together i.e. only one of the `AND` or `OR`
   * operator can be used throughout the filter string and both the operators
   * cannot be used together. No other logical operators are
   * supported. At most three filter fields are allowed in the filter
   * string and if provided more than that then `INVALID_ARGUMENT` error is
   * returned by the API.
   * Here are a few examples:
   *
   *   * `state = ENABLED` - The plugin instance is in enabled state.
   * </pre>
   *
   * <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for filter.
   */
  com.google.protobuf.ByteString getFilterBytes();

  /**
   *
   *
   * <pre>
   * Optional. The maximum number of hub plugins to return. The service may
   * return fewer than this value. If unspecified, at most 50 hub plugins will
   * be returned. The maximum value is 1000; values above 1000 will be coerced
   * to 1000.
   * </pre>
   *
   * <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageSize.
   */
  int getPageSize();

  /**
   *
   *
   * <pre>
   * Optional. A page token, received from a previous `ListPluginInstances`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListPluginInstances`
   * must match the call that provided the page token.
   * </pre>
   *
   * <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The pageToken.
   */
  java.lang.String getPageToken();

  /**
   *
   *
   * <pre>
   * Optional. A page token, received from a previous `ListPluginInstances`
   * call. Provide this to retrieve the subsequent page.
   *
   * When paginating, all other parameters provided to `ListPluginInstances`
   * must match the call that provided the page token.
   * </pre>
   *
   * <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString getPageTokenBytes();
}
