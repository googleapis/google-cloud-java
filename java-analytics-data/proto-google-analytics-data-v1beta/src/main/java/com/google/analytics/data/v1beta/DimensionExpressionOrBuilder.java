/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1beta/data.proto

// Protobuf Java Version: 3.25.5
package com.google.analytics.data.v1beta;

public interface DimensionExpressionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.analytics.data.v1beta.DimensionExpression)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Used to convert a dimension value to lower case.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.CaseExpression lower_case = 4;</code>
   *
   * @return Whether the lowerCase field is set.
   */
  boolean hasLowerCase();
  /**
   *
   *
   * <pre>
   * Used to convert a dimension value to lower case.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.CaseExpression lower_case = 4;</code>
   *
   * @return The lowerCase.
   */
  com.google.analytics.data.v1beta.DimensionExpression.CaseExpression getLowerCase();
  /**
   *
   *
   * <pre>
   * Used to convert a dimension value to lower case.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.CaseExpression lower_case = 4;</code>
   */
  com.google.analytics.data.v1beta.DimensionExpression.CaseExpressionOrBuilder
      getLowerCaseOrBuilder();

  /**
   *
   *
   * <pre>
   * Used to convert a dimension value to upper case.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.CaseExpression upper_case = 5;</code>
   *
   * @return Whether the upperCase field is set.
   */
  boolean hasUpperCase();
  /**
   *
   *
   * <pre>
   * Used to convert a dimension value to upper case.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.CaseExpression upper_case = 5;</code>
   *
   * @return The upperCase.
   */
  com.google.analytics.data.v1beta.DimensionExpression.CaseExpression getUpperCase();
  /**
   *
   *
   * <pre>
   * Used to convert a dimension value to upper case.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.CaseExpression upper_case = 5;</code>
   */
  com.google.analytics.data.v1beta.DimensionExpression.CaseExpressionOrBuilder
      getUpperCaseOrBuilder();

  /**
   *
   *
   * <pre>
   * Used to combine dimension values to a single dimension.
   * For example, dimension "country, city": concatenate(country, ", ", city).
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression concatenate = 6;
   * </code>
   *
   * @return Whether the concatenate field is set.
   */
  boolean hasConcatenate();
  /**
   *
   *
   * <pre>
   * Used to combine dimension values to a single dimension.
   * For example, dimension "country, city": concatenate(country, ", ", city).
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression concatenate = 6;
   * </code>
   *
   * @return The concatenate.
   */
  com.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression getConcatenate();
  /**
   *
   *
   * <pre>
   * Used to combine dimension values to a single dimension.
   * For example, dimension "country, city": concatenate(country, ", ", city).
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpression concatenate = 6;
   * </code>
   */
  com.google.analytics.data.v1beta.DimensionExpression.ConcatenateExpressionOrBuilder
      getConcatenateOrBuilder();

  com.google.analytics.data.v1beta.DimensionExpression.OneExpressionCase getOneExpressionCase();
}
