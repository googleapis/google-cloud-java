/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/analytics/data/v1beta/analytics_data_api.proto

// Protobuf Java Version: 3.25.5
package com.google.analytics.data.v1beta;

public interface RunReportResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.analytics.data.v1beta.RunReportResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Describes dimension columns. The number of DimensionHeaders and ordering of
   * DimensionHeaders matches the dimensions present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.DimensionHeader dimension_headers = 1;</code>
   */
  java.util.List<com.google.analytics.data.v1beta.DimensionHeader> getDimensionHeadersList();
  /**
   *
   *
   * <pre>
   * Describes dimension columns. The number of DimensionHeaders and ordering of
   * DimensionHeaders matches the dimensions present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.DimensionHeader dimension_headers = 1;</code>
   */
  com.google.analytics.data.v1beta.DimensionHeader getDimensionHeaders(int index);
  /**
   *
   *
   * <pre>
   * Describes dimension columns. The number of DimensionHeaders and ordering of
   * DimensionHeaders matches the dimensions present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.DimensionHeader dimension_headers = 1;</code>
   */
  int getDimensionHeadersCount();
  /**
   *
   *
   * <pre>
   * Describes dimension columns. The number of DimensionHeaders and ordering of
   * DimensionHeaders matches the dimensions present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.DimensionHeader dimension_headers = 1;</code>
   */
  java.util.List<? extends com.google.analytics.data.v1beta.DimensionHeaderOrBuilder>
      getDimensionHeadersOrBuilderList();
  /**
   *
   *
   * <pre>
   * Describes dimension columns. The number of DimensionHeaders and ordering of
   * DimensionHeaders matches the dimensions present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.DimensionHeader dimension_headers = 1;</code>
   */
  com.google.analytics.data.v1beta.DimensionHeaderOrBuilder getDimensionHeadersOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Describes metric columns. The number of MetricHeaders and ordering of
   * MetricHeaders matches the metrics present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.MetricHeader metric_headers = 2;</code>
   */
  java.util.List<com.google.analytics.data.v1beta.MetricHeader> getMetricHeadersList();
  /**
   *
   *
   * <pre>
   * Describes metric columns. The number of MetricHeaders and ordering of
   * MetricHeaders matches the metrics present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.MetricHeader metric_headers = 2;</code>
   */
  com.google.analytics.data.v1beta.MetricHeader getMetricHeaders(int index);
  /**
   *
   *
   * <pre>
   * Describes metric columns. The number of MetricHeaders and ordering of
   * MetricHeaders matches the metrics present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.MetricHeader metric_headers = 2;</code>
   */
  int getMetricHeadersCount();
  /**
   *
   *
   * <pre>
   * Describes metric columns. The number of MetricHeaders and ordering of
   * MetricHeaders matches the metrics present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.MetricHeader metric_headers = 2;</code>
   */
  java.util.List<? extends com.google.analytics.data.v1beta.MetricHeaderOrBuilder>
      getMetricHeadersOrBuilderList();
  /**
   *
   *
   * <pre>
   * Describes metric columns. The number of MetricHeaders and ordering of
   * MetricHeaders matches the metrics present in rows.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.MetricHeader metric_headers = 2;</code>
   */
  com.google.analytics.data.v1beta.MetricHeaderOrBuilder getMetricHeadersOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Rows of dimension value combinations and metric values in the report.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row rows = 3;</code>
   */
  java.util.List<com.google.analytics.data.v1beta.Row> getRowsList();
  /**
   *
   *
   * <pre>
   * Rows of dimension value combinations and metric values in the report.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row rows = 3;</code>
   */
  com.google.analytics.data.v1beta.Row getRows(int index);
  /**
   *
   *
   * <pre>
   * Rows of dimension value combinations and metric values in the report.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row rows = 3;</code>
   */
  int getRowsCount();
  /**
   *
   *
   * <pre>
   * Rows of dimension value combinations and metric values in the report.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row rows = 3;</code>
   */
  java.util.List<? extends com.google.analytics.data.v1beta.RowOrBuilder> getRowsOrBuilderList();
  /**
   *
   *
   * <pre>
   * Rows of dimension value combinations and metric values in the report.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row rows = 3;</code>
   */
  com.google.analytics.data.v1beta.RowOrBuilder getRowsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * If requested, the totaled values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row totals = 4;</code>
   */
  java.util.List<com.google.analytics.data.v1beta.Row> getTotalsList();
  /**
   *
   *
   * <pre>
   * If requested, the totaled values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row totals = 4;</code>
   */
  com.google.analytics.data.v1beta.Row getTotals(int index);
  /**
   *
   *
   * <pre>
   * If requested, the totaled values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row totals = 4;</code>
   */
  int getTotalsCount();
  /**
   *
   *
   * <pre>
   * If requested, the totaled values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row totals = 4;</code>
   */
  java.util.List<? extends com.google.analytics.data.v1beta.RowOrBuilder> getTotalsOrBuilderList();
  /**
   *
   *
   * <pre>
   * If requested, the totaled values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row totals = 4;</code>
   */
  com.google.analytics.data.v1beta.RowOrBuilder getTotalsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * If requested, the maximum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row maximums = 5;</code>
   */
  java.util.List<com.google.analytics.data.v1beta.Row> getMaximumsList();
  /**
   *
   *
   * <pre>
   * If requested, the maximum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row maximums = 5;</code>
   */
  com.google.analytics.data.v1beta.Row getMaximums(int index);
  /**
   *
   *
   * <pre>
   * If requested, the maximum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row maximums = 5;</code>
   */
  int getMaximumsCount();
  /**
   *
   *
   * <pre>
   * If requested, the maximum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row maximums = 5;</code>
   */
  java.util.List<? extends com.google.analytics.data.v1beta.RowOrBuilder>
      getMaximumsOrBuilderList();
  /**
   *
   *
   * <pre>
   * If requested, the maximum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row maximums = 5;</code>
   */
  com.google.analytics.data.v1beta.RowOrBuilder getMaximumsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * If requested, the minimum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row minimums = 6;</code>
   */
  java.util.List<com.google.analytics.data.v1beta.Row> getMinimumsList();
  /**
   *
   *
   * <pre>
   * If requested, the minimum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row minimums = 6;</code>
   */
  com.google.analytics.data.v1beta.Row getMinimums(int index);
  /**
   *
   *
   * <pre>
   * If requested, the minimum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row minimums = 6;</code>
   */
  int getMinimumsCount();
  /**
   *
   *
   * <pre>
   * If requested, the minimum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row minimums = 6;</code>
   */
  java.util.List<? extends com.google.analytics.data.v1beta.RowOrBuilder>
      getMinimumsOrBuilderList();
  /**
   *
   *
   * <pre>
   * If requested, the minimum values of metrics.
   * </pre>
   *
   * <code>repeated .google.analytics.data.v1beta.Row minimums = 6;</code>
   */
  com.google.analytics.data.v1beta.RowOrBuilder getMinimumsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The total number of rows in the query result. `rowCount` is independent of
   * the number of rows returned in the response, the `limit` request
   * parameter, and the `offset` request parameter. For example if a query
   * returns 175 rows and includes `limit` of 50 in the API request, the
   * response will contain `rowCount` of 175 but only 50 rows.
   *
   * To learn more about this pagination parameter, see
   * [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
   * </pre>
   *
   * <code>int32 row_count = 7;</code>
   *
   * @return The rowCount.
   */
  int getRowCount();

  /**
   *
   *
   * <pre>
   * Metadata for the report.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.ResponseMetaData metadata = 8;</code>
   *
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   *
   *
   * <pre>
   * Metadata for the report.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.ResponseMetaData metadata = 8;</code>
   *
   * @return The metadata.
   */
  com.google.analytics.data.v1beta.ResponseMetaData getMetadata();
  /**
   *
   *
   * <pre>
   * Metadata for the report.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.ResponseMetaData metadata = 8;</code>
   */
  com.google.analytics.data.v1beta.ResponseMetaDataOrBuilder getMetadataOrBuilder();

  /**
   *
   *
   * <pre>
   * This Google Analytics property's quota state including this request.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.PropertyQuota property_quota = 9;</code>
   *
   * @return Whether the propertyQuota field is set.
   */
  boolean hasPropertyQuota();
  /**
   *
   *
   * <pre>
   * This Google Analytics property's quota state including this request.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.PropertyQuota property_quota = 9;</code>
   *
   * @return The propertyQuota.
   */
  com.google.analytics.data.v1beta.PropertyQuota getPropertyQuota();
  /**
   *
   *
   * <pre>
   * This Google Analytics property's quota state including this request.
   * </pre>
   *
   * <code>.google.analytics.data.v1beta.PropertyQuota property_quota = 9;</code>
   */
  com.google.analytics.data.v1beta.PropertyQuotaOrBuilder getPropertyQuotaOrBuilder();

  /**
   *
   *
   * <pre>
   * Identifies what kind of resource this message is. This `kind` is always the
   * fixed string "analyticsData#runReport". Useful to distinguish between
   * response types in JSON.
   * </pre>
   *
   * <code>string kind = 10;</code>
   *
   * @return The kind.
   */
  java.lang.String getKind();
  /**
   *
   *
   * <pre>
   * Identifies what kind of resource this message is. This `kind` is always the
   * fixed string "analyticsData#runReport". Useful to distinguish between
   * response types in JSON.
   * </pre>
   *
   * <code>string kind = 10;</code>
   *
   * @return The bytes for kind.
   */
  com.google.protobuf.ByteString getKindBytes();
}
