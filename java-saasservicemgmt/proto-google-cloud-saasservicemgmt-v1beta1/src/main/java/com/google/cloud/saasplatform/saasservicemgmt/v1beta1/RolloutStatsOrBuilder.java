/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/saasplatform/saasservicemgmt/v1beta1/rollouts_resources.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.saasplatform.saasservicemgmt.v1beta1;

public interface RolloutStatsOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.List<com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>
      getOperationsByStateList();

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate getOperationsByState(int index);

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  int getOperationsByStateCount();

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.List<? extends com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder>
      getOperationsByStateOrBuilderList();

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder
      getOperationsByStateOrBuilder(int index);
}
