/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/saasplatform/saasservicemgmt/v1beta1/rollouts_resources.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.saasplatform.saasservicemgmt.v1beta1;

/**
 *
 *
 * <pre>
 * RolloutStats contains information about the progress of a rollout.
 * </pre>
 *
 * Protobuf type {@code google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats}
 */
public final class RolloutStats extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats)
    RolloutStatsOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use RolloutStats.newBuilder() to construct.
  private RolloutStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private RolloutStats() {
    operationsByState_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new RolloutStats();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRolloutsResourcesProto
        .internal_static_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutStats_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRolloutsResourcesProto
        .internal_static_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats.class,
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats.Builder.class);
  }

  public static final int OPERATIONS_BY_STATE_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private java.util.List<com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>
      operationsByState_;

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>
      getOperationsByStateList() {
    return operationsByState_;
  }

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder>
      getOperationsByStateOrBuilderList() {
    return operationsByState_;
  }

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public int getOperationsByStateCount() {
    return operationsByState_.size();
  }

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate getOperationsByState(
      int index) {
    return operationsByState_.get(index);
  }

  /**
   *
   *
   * <pre>
   * Output only. A breakdown of the progress of operations triggered by the
   * rollout. Provides a count of Operations by their state. This can be used to
   * determine the number of units which have been updated, or are scheduled to
   * be updated.
   *
   * There will be at most one entry per group.
   * Possible values for operation groups are:
   * - "SCHEDULED"
   * - "PENDING"
   * - "RUNNING"
   * - "SUCCEEDED"
   * - "FAILED"
   * - "CANCELLED"
   * </pre>
   *
   * <code>
   * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  @java.lang.Override
  public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder
      getOperationsByStateOrBuilder(int index) {
    return operationsByState_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    for (int i = 0; i < operationsByState_.size(); i++) {
      output.writeMessage(2, operationsByState_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < operationsByState_.size(); i++) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(2, operationsByState_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats)) {
      return super.equals(obj);
    }
    com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats other =
        (com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats) obj;

    if (!getOperationsByStateList().equals(other.getOperationsByStateList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getOperationsByStateCount() > 0) {
      hash = (37 * hash) + OPERATIONS_BY_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getOperationsByStateList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * RolloutStats contains information about the progress of a rollout.
   * </pre>
   *
   * Protobuf type {@code google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats)
      com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRolloutsResourcesProto
          .internal_static_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRolloutsResourcesProto
          .internal_static_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats.class,
              com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats.Builder.class);
    }

    // Construct using
    // com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (operationsByStateBuilder_ == null) {
        operationsByState_ = java.util.Collections.emptyList();
      } else {
        operationsByState_ = null;
        operationsByStateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.saasplatform.saasservicemgmt.v1beta1.SaasRolloutsResourcesProto
          .internal_static_google_cloud_saasplatform_saasservicemgmt_v1beta1_RolloutStats_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
        getDefaultInstanceForType() {
      return com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats build() {
      com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats buildPartial() {
      com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats result =
          new com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats result) {
      if (operationsByStateBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          operationsByState_ = java.util.Collections.unmodifiableList(operationsByState_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.operationsByState_ = operationsByState_;
      } else {
        result.operationsByState_ = operationsByStateBuilder_.build();
      }
    }

    private void buildPartial0(
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats) {
        return mergeFrom(
            (com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats other) {
      if (other
          == com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
              .getDefaultInstance()) return this;
      if (operationsByStateBuilder_ == null) {
        if (!other.operationsByState_.isEmpty()) {
          if (operationsByState_.isEmpty()) {
            operationsByState_ = other.operationsByState_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOperationsByStateIsMutable();
            operationsByState_.addAll(other.operationsByState_);
          }
          onChanged();
        }
      } else {
        if (!other.operationsByState_.isEmpty()) {
          if (operationsByStateBuilder_.isEmpty()) {
            operationsByStateBuilder_.dispose();
            operationsByStateBuilder_ = null;
            operationsByState_ = other.operationsByState_;
            bitField0_ = (bitField0_ & ~0x00000001);
            operationsByStateBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getOperationsByStateFieldBuilder()
                    : null;
          } else {
            operationsByStateBuilder_.addAllMessages(other.operationsByState_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18:
              {
                com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate m =
                    input.readMessage(
                        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.parser(),
                        extensionRegistry);
                if (operationsByStateBuilder_ == null) {
                  ensureOperationsByStateIsMutable();
                  operationsByState_.add(m);
                } else {
                  operationsByStateBuilder_.addMessage(m);
                }
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.util.List<com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>
        operationsByState_ = java.util.Collections.emptyList();

    private void ensureOperationsByStateIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        operationsByState_ =
            new java.util.ArrayList<
                com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>(
                operationsByState_);
        bitField0_ |= 0x00000001;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate,
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder,
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder>
        operationsByStateBuilder_;

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>
        getOperationsByStateList() {
      if (operationsByStateBuilder_ == null) {
        return java.util.Collections.unmodifiableList(operationsByState_);
      } else {
        return operationsByStateBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public int getOperationsByStateCount() {
      if (operationsByStateBuilder_ == null) {
        return operationsByState_.size();
      } else {
        return operationsByStateBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate getOperationsByState(
        int index) {
      if (operationsByStateBuilder_ == null) {
        return operationsByState_.get(index);
      } else {
        return operationsByStateBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setOperationsByState(
        int index, com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate value) {
      if (operationsByStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperationsByStateIsMutable();
        operationsByState_.set(index, value);
        onChanged();
      } else {
        operationsByStateBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder setOperationsByState(
        int index,
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder builderForValue) {
      if (operationsByStateBuilder_ == null) {
        ensureOperationsByStateIsMutable();
        operationsByState_.set(index, builderForValue.build());
        onChanged();
      } else {
        operationsByStateBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addOperationsByState(
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate value) {
      if (operationsByStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperationsByStateIsMutable();
        operationsByState_.add(value);
        onChanged();
      } else {
        operationsByStateBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addOperationsByState(
        int index, com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate value) {
      if (operationsByStateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperationsByStateIsMutable();
        operationsByState_.add(index, value);
        onChanged();
      } else {
        operationsByStateBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addOperationsByState(
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder builderForValue) {
      if (operationsByStateBuilder_ == null) {
        ensureOperationsByStateIsMutable();
        operationsByState_.add(builderForValue.build());
        onChanged();
      } else {
        operationsByStateBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addOperationsByState(
        int index,
        com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder builderForValue) {
      if (operationsByStateBuilder_ == null) {
        ensureOperationsByStateIsMutable();
        operationsByState_.add(index, builderForValue.build());
        onChanged();
      } else {
        operationsByStateBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder addAllOperationsByState(
        java.lang.Iterable<
                ? extends com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate>
            values) {
      if (operationsByStateBuilder_ == null) {
        ensureOperationsByStateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, operationsByState_);
        onChanged();
      } else {
        operationsByStateBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder clearOperationsByState() {
      if (operationsByStateBuilder_ == null) {
        operationsByState_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        operationsByStateBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public Builder removeOperationsByState(int index) {
      if (operationsByStateBuilder_ == null) {
        ensureOperationsByStateIsMutable();
        operationsByState_.remove(index);
        onChanged();
      } else {
        operationsByStateBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder
        getOperationsByStateBuilder(int index) {
      return getOperationsByStateFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder
        getOperationsByStateOrBuilder(int index) {
      if (operationsByStateBuilder_ == null) {
        return operationsByState_.get(index);
      } else {
        return operationsByStateBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder>
        getOperationsByStateOrBuilderList() {
      if (operationsByStateBuilder_ != null) {
        return operationsByStateBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(operationsByState_);
      }
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder
        addOperationsByStateBuilder() {
      return getOperationsByStateFieldBuilder()
          .addBuilder(
              com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder
        addOperationsByStateBuilder(int index) {
      return getOperationsByStateFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * Output only. A breakdown of the progress of operations triggered by the
     * rollout. Provides a count of Operations by their state. This can be used to
     * determine the number of units which have been updated, or are scheduled to
     * be updated.
     *
     * There will be at most one entry per group.
     * Possible values for operation groups are:
     * - "SCHEDULED"
     * - "PENDING"
     * - "RUNNING"
     * - "SUCCEEDED"
     * - "FAILED"
     * - "CANCELLED"
     * </pre>
     *
     * <code>
     * repeated .google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate operations_by_state = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
     * </code>
     */
    public java.util.List<com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder>
        getOperationsByStateBuilderList() {
      return getOperationsByStateFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate,
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder,
            com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder>
        getOperationsByStateFieldBuilder() {
      if (operationsByStateBuilder_ == null) {
        operationsByStateBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate,
                com.google.cloud.saasplatform.saasservicemgmt.v1beta1.Aggregate.Builder,
                com.google.cloud.saasplatform.saasservicemgmt.v1beta1.AggregateOrBuilder>(
                operationsByState_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        operationsByState_ = null;
      }
      return operationsByStateBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats)
  private static final com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats();
  }

  public static com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RolloutStats> PARSER =
      new com.google.protobuf.AbstractParser<RolloutStats>() {
        @java.lang.Override
        public RolloutStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<RolloutStats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RolloutStats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.saasplatform.saasservicemgmt.v1beta1.RolloutStats
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
