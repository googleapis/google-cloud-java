/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudbuild/v1/cloudbuild.proto

// Protobuf Java Version: 3.25.5
package com.google.cloudbuild.v1;

/**
 *
 *
 * <pre>
 * A dependency that the Cloud Build worker will fetch before executing user
 * steps.
 * </pre>
 *
 * Protobuf type {@code google.devtools.cloudbuild.v1.Dependency}
 */
public final class Dependency extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.devtools.cloudbuild.v1.Dependency)
    DependencyOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use Dependency.newBuilder() to construct.
  private Dependency(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Dependency() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Dependency();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloudbuild.v1.Cloudbuild
        .internal_static_google_devtools_cloudbuild_v1_Dependency_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloudbuild.v1.Cloudbuild
        .internal_static_google_devtools_cloudbuild_v1_Dependency_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloudbuild.v1.Dependency.class,
            com.google.cloudbuild.v1.Dependency.Builder.class);
  }

  public interface GitSourceDependencyOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.devtools.cloudbuild.v1.Dependency.GitSourceDependency)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The kind of repo (url or dev connect).
     * </pre>
     *
     * <code>
     * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the repository field is set.
     */
    boolean hasRepository();
    /**
     *
     *
     * <pre>
     * Required. The kind of repo (url or dev connect).
     * </pre>
     *
     * <code>
     * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The repository.
     */
    com.google.cloudbuild.v1.Dependency.GitSourceRepository getRepository();
    /**
     *
     *
     * <pre>
     * Required. The kind of repo (url or dev connect).
     * </pre>
     *
     * <code>
     * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder getRepositoryOrBuilder();

    /**
     *
     *
     * <pre>
     * Required. The revision that we will fetch the repo at.
     * </pre>
     *
     * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The revision.
     */
    java.lang.String getRevision();
    /**
     *
     *
     * <pre>
     * Required. The revision that we will fetch the repo at.
     * </pre>
     *
     * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for revision.
     */
    com.google.protobuf.ByteString getRevisionBytes();

    /**
     *
     *
     * <pre>
     * Optional. True if submodules should be fetched too (default false).
     * </pre>
     *
     * <code>bool recurse_submodules = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The recurseSubmodules.
     */
    boolean getRecurseSubmodules();

    /**
     *
     *
     * <pre>
     * Optional. How much history should be fetched for the build (default 1, -1
     * for all history).
     * </pre>
     *
     * <code>int64 depth = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The depth.
     */
    long getDepth();

    /**
     *
     *
     * <pre>
     * Required. Where should the files be placed on the worker.
     * </pre>
     *
     * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The destPath.
     */
    java.lang.String getDestPath();
    /**
     *
     *
     * <pre>
     * Required. Where should the files be placed on the worker.
     * </pre>
     *
     * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for destPath.
     */
    com.google.protobuf.ByteString getDestPathBytes();
  }
  /**
   *
   *
   * <pre>
   * Represents a git repository as a build dependency.
   * </pre>
   *
   * Protobuf type {@code google.devtools.cloudbuild.v1.Dependency.GitSourceDependency}
   */
  public static final class GitSourceDependency extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.devtools.cloudbuild.v1.Dependency.GitSourceDependency)
      GitSourceDependencyOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use GitSourceDependency.newBuilder() to construct.
    private GitSourceDependency(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GitSourceDependency() {
      revision_ = "";
      destPath_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new GitSourceDependency();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceDependency_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceDependency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloudbuild.v1.Dependency.GitSourceDependency.class,
              com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder.class);
    }

    private int bitField0_;
    public static final int REPOSITORY_FIELD_NUMBER = 1;
    private com.google.cloudbuild.v1.Dependency.GitSourceRepository repository_;
    /**
     *
     *
     * <pre>
     * Required. The kind of repo (url or dev connect).
     * </pre>
     *
     * <code>
     * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the repository field is set.
     */
    @java.lang.Override
    public boolean hasRepository() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     *
     *
     * <pre>
     * Required. The kind of repo (url or dev connect).
     * </pre>
     *
     * <code>
     * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The repository.
     */
    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency.GitSourceRepository getRepository() {
      return repository_ == null
          ? com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance()
          : repository_;
    }
    /**
     *
     *
     * <pre>
     * Required. The kind of repo (url or dev connect).
     * </pre>
     *
     * <code>
     * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder
        getRepositoryOrBuilder() {
      return repository_ == null
          ? com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance()
          : repository_;
    }

    public static final int REVISION_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private volatile java.lang.Object revision_ = "";
    /**
     *
     *
     * <pre>
     * Required. The revision that we will fetch the repo at.
     * </pre>
     *
     * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The revision.
     */
    @java.lang.Override
    public java.lang.String getRevision() {
      java.lang.Object ref = revision_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        revision_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The revision that we will fetch the repo at.
     * </pre>
     *
     * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for revision.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRevisionBytes() {
      java.lang.Object ref = revision_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        revision_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECURSE_SUBMODULES_FIELD_NUMBER = 3;
    private boolean recurseSubmodules_ = false;
    /**
     *
     *
     * <pre>
     * Optional. True if submodules should be fetched too (default false).
     * </pre>
     *
     * <code>bool recurse_submodules = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The recurseSubmodules.
     */
    @java.lang.Override
    public boolean getRecurseSubmodules() {
      return recurseSubmodules_;
    }

    public static final int DEPTH_FIELD_NUMBER = 4;
    private long depth_ = 0L;
    /**
     *
     *
     * <pre>
     * Optional. How much history should be fetched for the build (default 1, -1
     * for all history).
     * </pre>
     *
     * <code>int64 depth = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     *
     * @return The depth.
     */
    @java.lang.Override
    public long getDepth() {
      return depth_;
    }

    public static final int DEST_PATH_FIELD_NUMBER = 5;

    @SuppressWarnings("serial")
    private volatile java.lang.Object destPath_ = "";
    /**
     *
     *
     * <pre>
     * Required. Where should the files be placed on the worker.
     * </pre>
     *
     * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The destPath.
     */
    @java.lang.Override
    public java.lang.String getDestPath() {
      java.lang.Object ref = destPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        destPath_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Where should the files be placed on the worker.
     * </pre>
     *
     * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for destPath.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDestPathBytes() {
      java.lang.Object ref = destPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        destPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getRepository());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(revision_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, revision_);
      }
      if (recurseSubmodules_ != false) {
        output.writeBool(3, recurseSubmodules_);
      }
      if (depth_ != 0L) {
        output.writeInt64(4, depth_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(destPath_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, destPath_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getRepository());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(revision_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, revision_);
      }
      if (recurseSubmodules_ != false) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, recurseSubmodules_);
      }
      if (depth_ != 0L) {
        size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, depth_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(destPath_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, destPath_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloudbuild.v1.Dependency.GitSourceDependency)) {
        return super.equals(obj);
      }
      com.google.cloudbuild.v1.Dependency.GitSourceDependency other =
          (com.google.cloudbuild.v1.Dependency.GitSourceDependency) obj;

      if (hasRepository() != other.hasRepository()) return false;
      if (hasRepository()) {
        if (!getRepository().equals(other.getRepository())) return false;
      }
      if (!getRevision().equals(other.getRevision())) return false;
      if (getRecurseSubmodules() != other.getRecurseSubmodules()) return false;
      if (getDepth() != other.getDepth()) return false;
      if (!getDestPath().equals(other.getDestPath())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRepository()) {
        hash = (37 * hash) + REPOSITORY_FIELD_NUMBER;
        hash = (53 * hash) + getRepository().hashCode();
      }
      hash = (37 * hash) + REVISION_FIELD_NUMBER;
      hash = (53 * hash) + getRevision().hashCode();
      hash = (37 * hash) + RECURSE_SUBMODULES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getRecurseSubmodules());
      hash = (37 * hash) + DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDepth());
      hash = (37 * hash) + DEST_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getDestPath().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloudbuild.v1.Dependency.GitSourceDependency prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * Protobuf type {@code google.devtools.cloudbuild.v1.Dependency.GitSourceDependency}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.devtools.cloudbuild.v1.Dependency.GitSourceDependency)
        com.google.cloudbuild.v1.Dependency.GitSourceDependencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloudbuild.v1.Cloudbuild
            .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceDependency_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloudbuild.v1.Cloudbuild
            .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceDependency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloudbuild.v1.Dependency.GitSourceDependency.class,
                com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder.class);
      }

      // Construct using com.google.cloudbuild.v1.Dependency.GitSourceDependency.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getRepositoryFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        repository_ = null;
        if (repositoryBuilder_ != null) {
          repositoryBuilder_.dispose();
          repositoryBuilder_ = null;
        }
        revision_ = "";
        recurseSubmodules_ = false;
        depth_ = 0L;
        destPath_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloudbuild.v1.Cloudbuild
            .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceDependency_descriptor;
      }

      @java.lang.Override
      public com.google.cloudbuild.v1.Dependency.GitSourceDependency getDefaultInstanceForType() {
        return com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloudbuild.v1.Dependency.GitSourceDependency build() {
        com.google.cloudbuild.v1.Dependency.GitSourceDependency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloudbuild.v1.Dependency.GitSourceDependency buildPartial() {
        com.google.cloudbuild.v1.Dependency.GitSourceDependency result =
            new com.google.cloudbuild.v1.Dependency.GitSourceDependency(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloudbuild.v1.Dependency.GitSourceDependency result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.repository_ =
              repositoryBuilder_ == null ? repository_ : repositoryBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.revision_ = revision_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.recurseSubmodules_ = recurseSubmodules_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.depth_ = depth_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.destPath_ = destPath_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloudbuild.v1.Dependency.GitSourceDependency) {
          return mergeFrom((com.google.cloudbuild.v1.Dependency.GitSourceDependency) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloudbuild.v1.Dependency.GitSourceDependency other) {
        if (other == com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance())
          return this;
        if (other.hasRepository()) {
          mergeRepository(other.getRepository());
        }
        if (!other.getRevision().isEmpty()) {
          revision_ = other.revision_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getRecurseSubmodules() != false) {
          setRecurseSubmodules(other.getRecurseSubmodules());
        }
        if (other.getDepth() != 0L) {
          setDepth(other.getDepth());
        }
        if (!other.getDestPath().isEmpty()) {
          destPath_ = other.destPath_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  input.readMessage(getRepositoryFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  revision_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              case 24:
                {
                  recurseSubmodules_ = input.readBool();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
              case 32:
                {
                  depth_ = input.readInt64();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
              case 42:
                {
                  destPath_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private com.google.cloudbuild.v1.Dependency.GitSourceRepository repository_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloudbuild.v1.Dependency.GitSourceRepository,
              com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder,
              com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder>
          repositoryBuilder_;
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return Whether the repository field is set.
       */
      public boolean hasRepository() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The repository.
       */
      public com.google.cloudbuild.v1.Dependency.GitSourceRepository getRepository() {
        if (repositoryBuilder_ == null) {
          return repository_ == null
              ? com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance()
              : repository_;
        } else {
          return repositoryBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder setRepository(com.google.cloudbuild.v1.Dependency.GitSourceRepository value) {
        if (repositoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          repository_ = value;
        } else {
          repositoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder setRepository(
          com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder builderForValue) {
        if (repositoryBuilder_ == null) {
          repository_ = builderForValue.build();
        } else {
          repositoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder mergeRepository(
          com.google.cloudbuild.v1.Dependency.GitSourceRepository value) {
        if (repositoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)
              && repository_ != null
              && repository_
                  != com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance()) {
            getRepositoryBuilder().mergeFrom(value);
          } else {
            repository_ = value;
          }
        } else {
          repositoryBuilder_.mergeFrom(value);
        }
        if (repository_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder clearRepository() {
        bitField0_ = (bitField0_ & ~0x00000001);
        repository_ = null;
        if (repositoryBuilder_ != null) {
          repositoryBuilder_.dispose();
          repositoryBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder
          getRepositoryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRepositoryFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder
          getRepositoryOrBuilder() {
        if (repositoryBuilder_ != null) {
          return repositoryBuilder_.getMessageOrBuilder();
        } else {
          return repository_ == null
              ? com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance()
              : repository_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The kind of repo (url or dev connect).
       * </pre>
       *
       * <code>
       * .google.devtools.cloudbuild.v1.Dependency.GitSourceRepository repository = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloudbuild.v1.Dependency.GitSourceRepository,
              com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder,
              com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder>
          getRepositoryFieldBuilder() {
        if (repositoryBuilder_ == null) {
          repositoryBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.cloudbuild.v1.Dependency.GitSourceRepository,
                  com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder,
                  com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder>(
                  getRepository(), getParentForChildren(), isClean());
          repository_ = null;
        }
        return repositoryBuilder_;
      }

      private java.lang.Object revision_ = "";
      /**
       *
       *
       * <pre>
       * Required. The revision that we will fetch the repo at.
       * </pre>
       *
       * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The revision.
       */
      public java.lang.String getRevision() {
        java.lang.Object ref = revision_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          revision_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The revision that we will fetch the repo at.
       * </pre>
       *
       * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The bytes for revision.
       */
      public com.google.protobuf.ByteString getRevisionBytes() {
        java.lang.Object ref = revision_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          revision_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The revision that we will fetch the repo at.
       * </pre>
       *
       * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        revision_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The revision that we will fetch the repo at.
       * </pre>
       *
       * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        revision_ = getDefaultInstance().getRevision();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The revision that we will fetch the repo at.
       * </pre>
       *
       * <code>string revision = 2 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The bytes for revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevisionBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        revision_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private boolean recurseSubmodules_;
      /**
       *
       *
       * <pre>
       * Optional. True if submodules should be fetched too (default false).
       * </pre>
       *
       * <code>bool recurse_submodules = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The recurseSubmodules.
       */
      @java.lang.Override
      public boolean getRecurseSubmodules() {
        return recurseSubmodules_;
      }
      /**
       *
       *
       * <pre>
       * Optional. True if submodules should be fetched too (default false).
       * </pre>
       *
       * <code>bool recurse_submodules = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The recurseSubmodules to set.
       * @return This builder for chaining.
       */
      public Builder setRecurseSubmodules(boolean value) {

        recurseSubmodules_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. True if submodules should be fetched too (default false).
       * </pre>
       *
       * <code>bool recurse_submodules = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearRecurseSubmodules() {
        bitField0_ = (bitField0_ & ~0x00000004);
        recurseSubmodules_ = false;
        onChanged();
        return this;
      }

      private long depth_;
      /**
       *
       *
       * <pre>
       * Optional. How much history should be fetched for the build (default 1, -1
       * for all history).
       * </pre>
       *
       * <code>int64 depth = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return The depth.
       */
      @java.lang.Override
      public long getDepth() {
        return depth_;
      }
      /**
       *
       *
       * <pre>
       * Optional. How much history should be fetched for the build (default 1, -1
       * for all history).
       * </pre>
       *
       * <code>int64 depth = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @param value The depth to set.
       * @return This builder for chaining.
       */
      public Builder setDepth(long value) {

        depth_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Optional. How much history should be fetched for the build (default 1, -1
       * for all history).
       * </pre>
       *
       * <code>int64 depth = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDepth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        depth_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object destPath_ = "";
      /**
       *
       *
       * <pre>
       * Required. Where should the files be placed on the worker.
       * </pre>
       *
       * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The destPath.
       */
      public java.lang.String getDestPath() {
        java.lang.Object ref = destPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          destPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Where should the files be placed on the worker.
       * </pre>
       *
       * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The bytes for destPath.
       */
      public com.google.protobuf.ByteString getDestPathBytes() {
        java.lang.Object ref = destPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          destPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. Where should the files be placed on the worker.
       * </pre>
       *
       * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The destPath to set.
       * @return This builder for chaining.
       */
      public Builder setDestPath(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        destPath_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Where should the files be placed on the worker.
       * </pre>
       *
       * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDestPath() {
        destPath_ = getDefaultInstance().getDestPath();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. Where should the files be placed on the worker.
       * </pre>
       *
       * <code>string dest_path = 5 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The bytes for destPath to set.
       * @return This builder for chaining.
       */
      public Builder setDestPathBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        destPath_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.devtools.cloudbuild.v1.Dependency.GitSourceDependency)
    }

    // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Dependency.GitSourceDependency)
    private static final com.google.cloudbuild.v1.Dependency.GitSourceDependency DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloudbuild.v1.Dependency.GitSourceDependency();
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceDependency getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GitSourceDependency> PARSER =
        new com.google.protobuf.AbstractParser<GitSourceDependency>() {
          @java.lang.Override
          public GitSourceDependency parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<GitSourceDependency> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GitSourceDependency> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency.GitSourceDependency getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public interface GitSourceRepositoryOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.devtools.cloudbuild.v1.Dependency.GitSourceRepository)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Location of the Git repository.
     * </pre>
     *
     * <code>string url = 1;</code>
     *
     * @return Whether the url field is set.
     */
    boolean hasUrl();
    /**
     *
     *
     * <pre>
     * Location of the Git repository.
     * </pre>
     *
     * <code>string url = 1;</code>
     *
     * @return The url.
     */
    java.lang.String getUrl();
    /**
     *
     *
     * <pre>
     * Location of the Git repository.
     * </pre>
     *
     * <code>string url = 1;</code>
     *
     * @return The bytes for url.
     */
    com.google.protobuf.ByteString getUrlBytes();

    /**
     *
     *
     * <pre>
     * The Developer Connect Git repository link or the url that matches a
     * repository link in the current project, formatted as
     * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
     * </pre>
     *
     * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return Whether the developerConnect field is set.
     */
    boolean hasDeveloperConnect();
    /**
     *
     *
     * <pre>
     * The Developer Connect Git repository link or the url that matches a
     * repository link in the current project, formatted as
     * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
     * </pre>
     *
     * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return The developerConnect.
     */
    java.lang.String getDeveloperConnect();
    /**
     *
     *
     * <pre>
     * The Developer Connect Git repository link or the url that matches a
     * repository link in the current project, formatted as
     * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
     * </pre>
     *
     * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return The bytes for developerConnect.
     */
    com.google.protobuf.ByteString getDeveloperConnectBytes();

    com.google.cloudbuild.v1.Dependency.GitSourceRepository.RepotypeCase getRepotypeCase();
  }
  /**
   *
   *
   * <pre>
   * A repository for a git source.
   * </pre>
   *
   * Protobuf type {@code google.devtools.cloudbuild.v1.Dependency.GitSourceRepository}
   */
  public static final class GitSourceRepository extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.devtools.cloudbuild.v1.Dependency.GitSourceRepository)
      GitSourceRepositoryOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use GitSourceRepository.newBuilder() to construct.
    private GitSourceRepository(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private GitSourceRepository() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new GitSourceRepository();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceRepository_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceRepository_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloudbuild.v1.Dependency.GitSourceRepository.class,
              com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder.class);
    }

    private int repotypeCase_ = 0;

    @SuppressWarnings("serial")
    private java.lang.Object repotype_;

    public enum RepotypeCase
        implements
            com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      URL(1),
      DEVELOPER_CONNECT(2),
      REPOTYPE_NOT_SET(0);
      private final int value;

      private RepotypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RepotypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static RepotypeCase forNumber(int value) {
        switch (value) {
          case 1:
            return URL;
          case 2:
            return DEVELOPER_CONNECT;
          case 0:
            return REPOTYPE_NOT_SET;
          default:
            return null;
        }
      }

      public int getNumber() {
        return this.value;
      }
    };

    public RepotypeCase getRepotypeCase() {
      return RepotypeCase.forNumber(repotypeCase_);
    }

    public static final int URL_FIELD_NUMBER = 1;
    /**
     *
     *
     * <pre>
     * Location of the Git repository.
     * </pre>
     *
     * <code>string url = 1;</code>
     *
     * @return Whether the url field is set.
     */
    public boolean hasUrl() {
      return repotypeCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * Location of the Git repository.
     * </pre>
     *
     * <code>string url = 1;</code>
     *
     * @return The url.
     */
    public java.lang.String getUrl() {
      java.lang.Object ref = "";
      if (repotypeCase_ == 1) {
        ref = repotype_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (repotypeCase_ == 1) {
          repotype_ = s;
        }
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Location of the Git repository.
     * </pre>
     *
     * <code>string url = 1;</code>
     *
     * @return The bytes for url.
     */
    public com.google.protobuf.ByteString getUrlBytes() {
      java.lang.Object ref = "";
      if (repotypeCase_ == 1) {
        ref = repotype_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (repotypeCase_ == 1) {
          repotype_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVELOPER_CONNECT_FIELD_NUMBER = 2;
    /**
     *
     *
     * <pre>
     * The Developer Connect Git repository link or the url that matches a
     * repository link in the current project, formatted as
     * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
     * </pre>
     *
     * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return Whether the developerConnect field is set.
     */
    public boolean hasDeveloperConnect() {
      return repotypeCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * The Developer Connect Git repository link or the url that matches a
     * repository link in the current project, formatted as
     * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
     * </pre>
     *
     * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return The developerConnect.
     */
    public java.lang.String getDeveloperConnect() {
      java.lang.Object ref = "";
      if (repotypeCase_ == 2) {
        ref = repotype_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (repotypeCase_ == 2) {
          repotype_ = s;
        }
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * The Developer Connect Git repository link or the url that matches a
     * repository link in the current project, formatted as
     * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
     * </pre>
     *
     * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
     *
     * @return The bytes for developerConnect.
     */
    public com.google.protobuf.ByteString getDeveloperConnectBytes() {
      java.lang.Object ref = "";
      if (repotypeCase_ == 2) {
        ref = repotype_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (repotypeCase_ == 2) {
          repotype_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (repotypeCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, repotype_);
      }
      if (repotypeCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, repotype_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (repotypeCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, repotype_);
      }
      if (repotypeCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, repotype_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloudbuild.v1.Dependency.GitSourceRepository)) {
        return super.equals(obj);
      }
      com.google.cloudbuild.v1.Dependency.GitSourceRepository other =
          (com.google.cloudbuild.v1.Dependency.GitSourceRepository) obj;

      if (!getRepotypeCase().equals(other.getRepotypeCase())) return false;
      switch (repotypeCase_) {
        case 1:
          if (!getUrl().equals(other.getUrl())) return false;
          break;
        case 2:
          if (!getDeveloperConnect().equals(other.getDeveloperConnect())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (repotypeCase_) {
        case 1:
          hash = (37 * hash) + URL_FIELD_NUMBER;
          hash = (53 * hash) + getUrl().hashCode();
          break;
        case 2:
          hash = (37 * hash) + DEVELOPER_CONNECT_FIELD_NUMBER;
          hash = (53 * hash) + getDeveloperConnect().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloudbuild.v1.Dependency.GitSourceRepository prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * A repository for a git source.
     * </pre>
     *
     * Protobuf type {@code google.devtools.cloudbuild.v1.Dependency.GitSourceRepository}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.devtools.cloudbuild.v1.Dependency.GitSourceRepository)
        com.google.cloudbuild.v1.Dependency.GitSourceRepositoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloudbuild.v1.Cloudbuild
            .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceRepository_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloudbuild.v1.Cloudbuild
            .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceRepository_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloudbuild.v1.Dependency.GitSourceRepository.class,
                com.google.cloudbuild.v1.Dependency.GitSourceRepository.Builder.class);
      }

      // Construct using com.google.cloudbuild.v1.Dependency.GitSourceRepository.newBuilder()
      private Builder() {}

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        repotypeCase_ = 0;
        repotype_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloudbuild.v1.Cloudbuild
            .internal_static_google_devtools_cloudbuild_v1_Dependency_GitSourceRepository_descriptor;
      }

      @java.lang.Override
      public com.google.cloudbuild.v1.Dependency.GitSourceRepository getDefaultInstanceForType() {
        return com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloudbuild.v1.Dependency.GitSourceRepository build() {
        com.google.cloudbuild.v1.Dependency.GitSourceRepository result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloudbuild.v1.Dependency.GitSourceRepository buildPartial() {
        com.google.cloudbuild.v1.Dependency.GitSourceRepository result =
            new com.google.cloudbuild.v1.Dependency.GitSourceRepository(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.google.cloudbuild.v1.Dependency.GitSourceRepository result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(
          com.google.cloudbuild.v1.Dependency.GitSourceRepository result) {
        result.repotypeCase_ = repotypeCase_;
        result.repotype_ = this.repotype_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloudbuild.v1.Dependency.GitSourceRepository) {
          return mergeFrom((com.google.cloudbuild.v1.Dependency.GitSourceRepository) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.cloudbuild.v1.Dependency.GitSourceRepository other) {
        if (other == com.google.cloudbuild.v1.Dependency.GitSourceRepository.getDefaultInstance())
          return this;
        switch (other.getRepotypeCase()) {
          case URL:
            {
              repotypeCase_ = 1;
              repotype_ = other.repotype_;
              onChanged();
              break;
            }
          case DEVELOPER_CONNECT:
            {
              repotypeCase_ = 2;
              repotype_ = other.repotype_;
              onChanged();
              break;
            }
          case REPOTYPE_NOT_SET:
            {
              break;
            }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  repotypeCase_ = 1;
                  repotype_ = s;
                  break;
                } // case 10
              case 18:
                {
                  java.lang.String s = input.readStringRequireUtf8();
                  repotypeCase_ = 2;
                  repotype_ = s;
                  break;
                } // case 18
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int repotypeCase_ = 0;
      private java.lang.Object repotype_;

      public RepotypeCase getRepotypeCase() {
        return RepotypeCase.forNumber(repotypeCase_);
      }

      public Builder clearRepotype() {
        repotypeCase_ = 0;
        repotype_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       *
       *
       * <pre>
       * Location of the Git repository.
       * </pre>
       *
       * <code>string url = 1;</code>
       *
       * @return Whether the url field is set.
       */
      @java.lang.Override
      public boolean hasUrl() {
        return repotypeCase_ == 1;
      }
      /**
       *
       *
       * <pre>
       * Location of the Git repository.
       * </pre>
       *
       * <code>string url = 1;</code>
       *
       * @return The url.
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        java.lang.Object ref = "";
        if (repotypeCase_ == 1) {
          ref = repotype_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (repotypeCase_ == 1) {
            repotype_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Location of the Git repository.
       * </pre>
       *
       * <code>string url = 1;</code>
       *
       * @return The bytes for url.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getUrlBytes() {
        java.lang.Object ref = "";
        if (repotypeCase_ == 1) {
          ref = repotype_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          if (repotypeCase_ == 1) {
            repotype_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Location of the Git repository.
       * </pre>
       *
       * <code>string url = 1;</code>
       *
       * @param value The url to set.
       * @return This builder for chaining.
       */
      public Builder setUrl(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        repotypeCase_ = 1;
        repotype_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Location of the Git repository.
       * </pre>
       *
       * <code>string url = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearUrl() {
        if (repotypeCase_ == 1) {
          repotypeCase_ = 0;
          repotype_ = null;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * Location of the Git repository.
       * </pre>
       *
       * <code>string url = 1;</code>
       *
       * @param value The bytes for url to set.
       * @return This builder for chaining.
       */
      public Builder setUrlBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        repotypeCase_ = 1;
        repotype_ = value;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * The Developer Connect Git repository link or the url that matches a
       * repository link in the current project, formatted as
       * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
       * </pre>
       *
       * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return Whether the developerConnect field is set.
       */
      @java.lang.Override
      public boolean hasDeveloperConnect() {
        return repotypeCase_ == 2;
      }
      /**
       *
       *
       * <pre>
       * The Developer Connect Git repository link or the url that matches a
       * repository link in the current project, formatted as
       * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
       * </pre>
       *
       * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return The developerConnect.
       */
      @java.lang.Override
      public java.lang.String getDeveloperConnect() {
        java.lang.Object ref = "";
        if (repotypeCase_ == 2) {
          ref = repotype_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (repotypeCase_ == 2) {
            repotype_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The Developer Connect Git repository link or the url that matches a
       * repository link in the current project, formatted as
       * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
       * </pre>
       *
       * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return The bytes for developerConnect.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDeveloperConnectBytes() {
        java.lang.Object ref = "";
        if (repotypeCase_ == 2) {
          ref = repotype_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          if (repotypeCase_ == 2) {
            repotype_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * The Developer Connect Git repository link or the url that matches a
       * repository link in the current project, formatted as
       * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
       * </pre>
       *
       * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
       *
       * @param value The developerConnect to set.
       * @return This builder for chaining.
       */
      public Builder setDeveloperConnect(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        repotypeCase_ = 2;
        repotype_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * The Developer Connect Git repository link or the url that matches a
       * repository link in the current project, formatted as
       * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
       * </pre>
       *
       * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDeveloperConnect() {
        if (repotypeCase_ == 2) {
          repotypeCase_ = 0;
          repotype_ = null;
          onChanged();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * The Developer Connect Git repository link or the url that matches a
       * repository link in the current project, formatted as
       * `projects/&#42;&#47;locations/&#42;&#47;connections/&#42;&#47;gitRepositoryLink/&#42;`
       * </pre>
       *
       * <code>string developer_connect = 2 [(.google.api.resource_reference) = { ... }</code>
       *
       * @param value The bytes for developerConnect to set.
       * @return This builder for chaining.
       */
      public Builder setDeveloperConnectBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        repotypeCase_ = 2;
        repotype_ = value;
        onChanged();
        return this;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.devtools.cloudbuild.v1.Dependency.GitSourceRepository)
    }

    // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Dependency.GitSourceRepository)
    private static final com.google.cloudbuild.v1.Dependency.GitSourceRepository DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloudbuild.v1.Dependency.GitSourceRepository();
    }

    public static com.google.cloudbuild.v1.Dependency.GitSourceRepository getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GitSourceRepository> PARSER =
        new com.google.protobuf.AbstractParser<GitSourceRepository>() {
          @java.lang.Override
          public GitSourceRepository parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<GitSourceRepository> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GitSourceRepository> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency.GitSourceRepository getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int depCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object dep_;

  public enum DepCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    EMPTY(1),
    GIT_SOURCE(2),
    DEP_NOT_SET(0);
    private final int value;

    private DepCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DepCase valueOf(int value) {
      return forNumber(value);
    }

    public static DepCase forNumber(int value) {
      switch (value) {
        case 1:
          return EMPTY;
        case 2:
          return GIT_SOURCE;
        case 0:
          return DEP_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public DepCase getDepCase() {
    return DepCase.forNumber(depCase_);
  }

  public static final int EMPTY_FIELD_NUMBER = 1;
  /**
   *
   *
   * <pre>
   * If set to true disable all dependency fetching (ignoring the default
   * source as well).
   * </pre>
   *
   * <code>bool empty = 1;</code>
   *
   * @return Whether the empty field is set.
   */
  @java.lang.Override
  public boolean hasEmpty() {
    return depCase_ == 1;
  }
  /**
   *
   *
   * <pre>
   * If set to true disable all dependency fetching (ignoring the default
   * source as well).
   * </pre>
   *
   * <code>bool empty = 1;</code>
   *
   * @return The empty.
   */
  @java.lang.Override
  public boolean getEmpty() {
    if (depCase_ == 1) {
      return (java.lang.Boolean) dep_;
    }
    return false;
  }

  public static final int GIT_SOURCE_FIELD_NUMBER = 2;
  /**
   *
   *
   * <pre>
   * Represents a git repository as a build dependency.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
   *
   * @return Whether the gitSource field is set.
   */
  @java.lang.Override
  public boolean hasGitSource() {
    return depCase_ == 2;
  }
  /**
   *
   *
   * <pre>
   * Represents a git repository as a build dependency.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
   *
   * @return The gitSource.
   */
  @java.lang.Override
  public com.google.cloudbuild.v1.Dependency.GitSourceDependency getGitSource() {
    if (depCase_ == 2) {
      return (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_;
    }
    return com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Represents a git repository as a build dependency.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
   */
  @java.lang.Override
  public com.google.cloudbuild.v1.Dependency.GitSourceDependencyOrBuilder getGitSourceOrBuilder() {
    if (depCase_ == 2) {
      return (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_;
    }
    return com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (depCase_ == 1) {
      output.writeBool(1, (boolean) ((java.lang.Boolean) dep_));
    }
    if (depCase_ == 2) {
      output.writeMessage(2, (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (depCase_ == 1) {
      size +=
          com.google.protobuf.CodedOutputStream.computeBoolSize(
              1, (boolean) ((java.lang.Boolean) dep_));
    }
    if (depCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloudbuild.v1.Dependency)) {
      return super.equals(obj);
    }
    com.google.cloudbuild.v1.Dependency other = (com.google.cloudbuild.v1.Dependency) obj;

    if (!getDepCase().equals(other.getDepCase())) return false;
    switch (depCase_) {
      case 1:
        if (getEmpty() != other.getEmpty()) return false;
        break;
      case 2:
        if (!getGitSource().equals(other.getGitSource())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (depCase_) {
      case 1:
        hash = (37 * hash) + EMPTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getEmpty());
        break;
      case 2:
        hash = (37 * hash) + GIT_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getGitSource().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloudbuild.v1.Dependency parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloudbuild.v1.Dependency parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloudbuild.v1.Dependency parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloudbuild.v1.Dependency prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * A dependency that the Cloud Build worker will fetch before executing user
   * steps.
   * </pre>
   *
   * Protobuf type {@code google.devtools.cloudbuild.v1.Dependency}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.devtools.cloudbuild.v1.Dependency)
      com.google.cloudbuild.v1.DependencyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloudbuild.v1.Dependency.class,
              com.google.cloudbuild.v1.Dependency.Builder.class);
    }

    // Construct using com.google.cloudbuild.v1.Dependency.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (gitSourceBuilder_ != null) {
        gitSourceBuilder_.clear();
      }
      depCase_ = 0;
      dep_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloudbuild.v1.Cloudbuild
          .internal_static_google_devtools_cloudbuild_v1_Dependency_descriptor;
    }

    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency getDefaultInstanceForType() {
      return com.google.cloudbuild.v1.Dependency.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency build() {
      com.google.cloudbuild.v1.Dependency result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency buildPartial() {
      com.google.cloudbuild.v1.Dependency result = new com.google.cloudbuild.v1.Dependency(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloudbuild.v1.Dependency result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.google.cloudbuild.v1.Dependency result) {
      result.depCase_ = depCase_;
      result.dep_ = this.dep_;
      if (depCase_ == 2 && gitSourceBuilder_ != null) {
        result.dep_ = gitSourceBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloudbuild.v1.Dependency) {
        return mergeFrom((com.google.cloudbuild.v1.Dependency) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloudbuild.v1.Dependency other) {
      if (other == com.google.cloudbuild.v1.Dependency.getDefaultInstance()) return this;
      switch (other.getDepCase()) {
        case EMPTY:
          {
            setEmpty(other.getEmpty());
            break;
          }
        case GIT_SOURCE:
          {
            mergeGitSource(other.getGitSource());
            break;
          }
        case DEP_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8:
              {
                dep_ = input.readBool();
                depCase_ = 1;
                break;
              } // case 8
            case 18:
              {
                input.readMessage(getGitSourceFieldBuilder().getBuilder(), extensionRegistry);
                depCase_ = 2;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int depCase_ = 0;
    private java.lang.Object dep_;

    public DepCase getDepCase() {
      return DepCase.forNumber(depCase_);
    }

    public Builder clearDep() {
      depCase_ = 0;
      dep_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     *
     *
     * <pre>
     * If set to true disable all dependency fetching (ignoring the default
     * source as well).
     * </pre>
     *
     * <code>bool empty = 1;</code>
     *
     * @return Whether the empty field is set.
     */
    public boolean hasEmpty() {
      return depCase_ == 1;
    }
    /**
     *
     *
     * <pre>
     * If set to true disable all dependency fetching (ignoring the default
     * source as well).
     * </pre>
     *
     * <code>bool empty = 1;</code>
     *
     * @return The empty.
     */
    public boolean getEmpty() {
      if (depCase_ == 1) {
        return (java.lang.Boolean) dep_;
      }
      return false;
    }
    /**
     *
     *
     * <pre>
     * If set to true disable all dependency fetching (ignoring the default
     * source as well).
     * </pre>
     *
     * <code>bool empty = 1;</code>
     *
     * @param value The empty to set.
     * @return This builder for chaining.
     */
    public Builder setEmpty(boolean value) {

      depCase_ = 1;
      dep_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * If set to true disable all dependency fetching (ignoring the default
     * source as well).
     * </pre>
     *
     * <code>bool empty = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEmpty() {
      if (depCase_ == 1) {
        depCase_ = 0;
        dep_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloudbuild.v1.Dependency.GitSourceDependency,
            com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder,
            com.google.cloudbuild.v1.Dependency.GitSourceDependencyOrBuilder>
        gitSourceBuilder_;
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     *
     * @return Whether the gitSource field is set.
     */
    @java.lang.Override
    public boolean hasGitSource() {
      return depCase_ == 2;
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     *
     * @return The gitSource.
     */
    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency.GitSourceDependency getGitSource() {
      if (gitSourceBuilder_ == null) {
        if (depCase_ == 2) {
          return (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_;
        }
        return com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
      } else {
        if (depCase_ == 2) {
          return gitSourceBuilder_.getMessage();
        }
        return com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    public Builder setGitSource(com.google.cloudbuild.v1.Dependency.GitSourceDependency value) {
      if (gitSourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dep_ = value;
        onChanged();
      } else {
        gitSourceBuilder_.setMessage(value);
      }
      depCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    public Builder setGitSource(
        com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder builderForValue) {
      if (gitSourceBuilder_ == null) {
        dep_ = builderForValue.build();
        onChanged();
      } else {
        gitSourceBuilder_.setMessage(builderForValue.build());
      }
      depCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    public Builder mergeGitSource(com.google.cloudbuild.v1.Dependency.GitSourceDependency value) {
      if (gitSourceBuilder_ == null) {
        if (depCase_ == 2
            && dep_
                != com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance()) {
          dep_ =
              com.google.cloudbuild.v1.Dependency.GitSourceDependency.newBuilder(
                      (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          dep_ = value;
        }
        onChanged();
      } else {
        if (depCase_ == 2) {
          gitSourceBuilder_.mergeFrom(value);
        } else {
          gitSourceBuilder_.setMessage(value);
        }
      }
      depCase_ = 2;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    public Builder clearGitSource() {
      if (gitSourceBuilder_ == null) {
        if (depCase_ == 2) {
          depCase_ = 0;
          dep_ = null;
          onChanged();
        }
      } else {
        if (depCase_ == 2) {
          depCase_ = 0;
          dep_ = null;
        }
        gitSourceBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    public com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder getGitSourceBuilder() {
      return getGitSourceFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    @java.lang.Override
    public com.google.cloudbuild.v1.Dependency.GitSourceDependencyOrBuilder
        getGitSourceOrBuilder() {
      if ((depCase_ == 2) && (gitSourceBuilder_ != null)) {
        return gitSourceBuilder_.getMessageOrBuilder();
      } else {
        if (depCase_ == 2) {
          return (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_;
        }
        return com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Represents a git repository as a build dependency.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.Dependency.GitSourceDependency git_source = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloudbuild.v1.Dependency.GitSourceDependency,
            com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder,
            com.google.cloudbuild.v1.Dependency.GitSourceDependencyOrBuilder>
        getGitSourceFieldBuilder() {
      if (gitSourceBuilder_ == null) {
        if (!(depCase_ == 2)) {
          dep_ = com.google.cloudbuild.v1.Dependency.GitSourceDependency.getDefaultInstance();
        }
        gitSourceBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloudbuild.v1.Dependency.GitSourceDependency,
                com.google.cloudbuild.v1.Dependency.GitSourceDependency.Builder,
                com.google.cloudbuild.v1.Dependency.GitSourceDependencyOrBuilder>(
                (com.google.cloudbuild.v1.Dependency.GitSourceDependency) dep_,
                getParentForChildren(),
                isClean());
        dep_ = null;
      }
      depCase_ = 2;
      onChanged();
      return gitSourceBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.devtools.cloudbuild.v1.Dependency)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.cloudbuild.v1.Dependency)
  private static final com.google.cloudbuild.v1.Dependency DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloudbuild.v1.Dependency();
  }

  public static com.google.cloudbuild.v1.Dependency getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Dependency> PARSER =
      new com.google.protobuf.AbstractParser<Dependency>() {
        @java.lang.Override
        public Dependency parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Dependency> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Dependency> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloudbuild.v1.Dependency getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
