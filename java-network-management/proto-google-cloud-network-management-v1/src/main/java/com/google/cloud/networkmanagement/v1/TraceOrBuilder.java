/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/networkmanagement/v1/trace.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.networkmanagement.v1;

public interface TraceOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.networkmanagement.v1.Trace)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Derived from the source and destination endpoints definition specified by
   * user request, and validated by the data plane model.
   * If there are multiple traces starting from different source locations, then
   * the endpoint_info may be different between traces.
   * </pre>
   *
   * <code>.google.cloud.networkmanagement.v1.EndpointInfo endpoint_info = 1;</code>
   *
   * @return Whether the endpointInfo field is set.
   */
  boolean hasEndpointInfo();
  /**
   *
   *
   * <pre>
   * Derived from the source and destination endpoints definition specified by
   * user request, and validated by the data plane model.
   * If there are multiple traces starting from different source locations, then
   * the endpoint_info may be different between traces.
   * </pre>
   *
   * <code>.google.cloud.networkmanagement.v1.EndpointInfo endpoint_info = 1;</code>
   *
   * @return The endpointInfo.
   */
  com.google.cloud.networkmanagement.v1.EndpointInfo getEndpointInfo();
  /**
   *
   *
   * <pre>
   * Derived from the source and destination endpoints definition specified by
   * user request, and validated by the data plane model.
   * If there are multiple traces starting from different source locations, then
   * the endpoint_info may be different between traces.
   * </pre>
   *
   * <code>.google.cloud.networkmanagement.v1.EndpointInfo endpoint_info = 1;</code>
   */
  com.google.cloud.networkmanagement.v1.EndpointInfoOrBuilder getEndpointInfoOrBuilder();

  /**
   *
   *
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   *
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1.Step steps = 2;</code>
   */
  java.util.List<com.google.cloud.networkmanagement.v1.Step> getStepsList();
  /**
   *
   *
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   *
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1.Step steps = 2;</code>
   */
  com.google.cloud.networkmanagement.v1.Step getSteps(int index);
  /**
   *
   *
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   *
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1.Step steps = 2;</code>
   */
  int getStepsCount();
  /**
   *
   *
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   *
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1.Step steps = 2;</code>
   */
  java.util.List<? extends com.google.cloud.networkmanagement.v1.StepOrBuilder>
      getStepsOrBuilderList();
  /**
   *
   *
   * <pre>
   * A trace of a test contains multiple steps from the initial state to the
   * final state (delivered, dropped, forwarded, or aborted).
   *
   * The steps are ordered by the processing sequence within the simulated
   * network state machine. It is critical to preserve the order of the steps
   * and avoid reordering or sorting them.
   * </pre>
   *
   * <code>repeated .google.cloud.networkmanagement.v1.Step steps = 2;</code>
   */
  com.google.cloud.networkmanagement.v1.StepOrBuilder getStepsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * ID of trace. For forward traces, this ID is unique for each trace. For
   * return traces, it matches ID of associated forward trace. A single forward
   * trace can be associated with none, one or more than one return trace.
   * </pre>
   *
   * <code>int32 forward_trace_id = 4;</code>
   *
   * @return The forwardTraceId.
   */
  int getForwardTraceId();
}
