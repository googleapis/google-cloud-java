/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/networkmanagement/v1/vpc_flow_logs_config.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.networkmanagement.v1;

public interface EffectiveVpcFlowLogsConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Unique name of the configuration. The name can have one of the following
   * forms:
   *
   * - For project-level configurations:
   * `projects/{project_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
   *
   * - For organization-level configurations:
   * `organizations/{organization_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
   *
   * - For a Compute config, the name will be the path of the subnet:
   * `projects/{project_id}/regions/{region}/subnetworks/{subnet_id}`
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The name.
   */
  java.lang.String getName();

  /**
   *
   *
   * <pre>
   * Unique name of the configuration. The name can have one of the following
   * forms:
   *
   * - For project-level configurations:
   * `projects/{project_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
   *
   * - For organization-level configurations:
   * `organizations/{organization_id}/locations/global/vpcFlowLogsConfigs/{vpc_flow_logs_config_id}`
   *
   * - For a Compute config, the name will be the path of the subnet:
   * `projects/{project_id}/regions/{region}/subnetworks/{subnet_id}`
   * </pre>
   *
   * <code>string name = 1;</code>
   *
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * The state of the VPC Flow Log configuration. Default value is ENABLED.
   * When creating a new configuration, it must be enabled.
   * Setting state=DISABLED will pause the log generation for this config.
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.State state = 3;</code>
   *
   * @return Whether the state field is set.
   */
  boolean hasState();

  /**
   *
   *
   * <pre>
   * The state of the VPC Flow Log configuration. Default value is ENABLED.
   * When creating a new configuration, it must be enabled.
   * Setting state=DISABLED will pause the log generation for this config.
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.State state = 3;</code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();

  /**
   *
   *
   * <pre>
   * The state of the VPC Flow Log configuration. Default value is ENABLED.
   * When creating a new configuration, it must be enabled.
   * Setting state=DISABLED will pause the log generation for this config.
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.State state = 3;</code>
   *
   * @return The state.
   */
  com.google.cloud.networkmanagement.v1.VpcFlowLogsConfig.State getState();

  /**
   *
   *
   * <pre>
   * The aggregation interval for the logs. Default value is INTERVAL_5_SEC.
   * </pre>
   *
   * <code>
   * optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.AggregationInterval aggregation_interval = 4;
   * </code>
   *
   * @return Whether the aggregationInterval field is set.
   */
  boolean hasAggregationInterval();

  /**
   *
   *
   * <pre>
   * The aggregation interval for the logs. Default value is INTERVAL_5_SEC.
   * </pre>
   *
   * <code>
   * optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.AggregationInterval aggregation_interval = 4;
   * </code>
   *
   * @return The enum numeric value on the wire for aggregationInterval.
   */
  int getAggregationIntervalValue();

  /**
   *
   *
   * <pre>
   * The aggregation interval for the logs. Default value is INTERVAL_5_SEC.
   * </pre>
   *
   * <code>
   * optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.AggregationInterval aggregation_interval = 4;
   * </code>
   *
   * @return The aggregationInterval.
   */
  com.google.cloud.networkmanagement.v1.VpcFlowLogsConfig.AggregationInterval
      getAggregationInterval();

  /**
   *
   *
   * <pre>
   * The value of the field must be in (0, 1]. The sampling rate of VPC Flow
   * Logs where 1.0 means all collected logs are reported.
   * Setting the sampling rate to 0.0 is not allowed. If you want to disable VPC
   * Flow Logs, use the state field instead.
   * Default value is 1.0.
   * </pre>
   *
   * <code>optional float flow_sampling = 5;</code>
   *
   * @return Whether the flowSampling field is set.
   */
  boolean hasFlowSampling();

  /**
   *
   *
   * <pre>
   * The value of the field must be in (0, 1]. The sampling rate of VPC Flow
   * Logs where 1.0 means all collected logs are reported.
   * Setting the sampling rate to 0.0 is not allowed. If you want to disable VPC
   * Flow Logs, use the state field instead.
   * Default value is 1.0.
   * </pre>
   *
   * <code>optional float flow_sampling = 5;</code>
   *
   * @return The flowSampling.
   */
  float getFlowSampling();

  /**
   *
   *
   * <pre>
   * Configures whether all, none or a subset of metadata fields should be
   * added to the reported VPC flow logs.
   * Default value is INCLUDE_ALL_METADATA.
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.Metadata metadata = 6;
   * </code>
   *
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();

  /**
   *
   *
   * <pre>
   * Configures whether all, none or a subset of metadata fields should be
   * added to the reported VPC flow logs.
   * Default value is INCLUDE_ALL_METADATA.
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.Metadata metadata = 6;
   * </code>
   *
   * @return The enum numeric value on the wire for metadata.
   */
  int getMetadataValue();

  /**
   *
   *
   * <pre>
   * Configures whether all, none or a subset of metadata fields should be
   * added to the reported VPC flow logs.
   * Default value is INCLUDE_ALL_METADATA.
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.Metadata metadata = 6;
   * </code>
   *
   * @return The metadata.
   */
  com.google.cloud.networkmanagement.v1.VpcFlowLogsConfig.Metadata getMetadata();

  /**
   *
   *
   * <pre>
   * Custom metadata fields to include in the reported VPC flow logs.
   * Can only be specified if "metadata" was set to CUSTOM_METADATA.
   * </pre>
   *
   * <code>repeated string metadata_fields = 7;</code>
   *
   * @return A list containing the metadataFields.
   */
  java.util.List<java.lang.String> getMetadataFieldsList();

  /**
   *
   *
   * <pre>
   * Custom metadata fields to include in the reported VPC flow logs.
   * Can only be specified if "metadata" was set to CUSTOM_METADATA.
   * </pre>
   *
   * <code>repeated string metadata_fields = 7;</code>
   *
   * @return The count of metadataFields.
   */
  int getMetadataFieldsCount();

  /**
   *
   *
   * <pre>
   * Custom metadata fields to include in the reported VPC flow logs.
   * Can only be specified if "metadata" was set to CUSTOM_METADATA.
   * </pre>
   *
   * <code>repeated string metadata_fields = 7;</code>
   *
   * @param index The index of the element to return.
   * @return The metadataFields at the given index.
   */
  java.lang.String getMetadataFields(int index);

  /**
   *
   *
   * <pre>
   * Custom metadata fields to include in the reported VPC flow logs.
   * Can only be specified if "metadata" was set to CUSTOM_METADATA.
   * </pre>
   *
   * <code>repeated string metadata_fields = 7;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the metadataFields at the given index.
   */
  com.google.protobuf.ByteString getMetadataFieldsBytes(int index);

  /**
   *
   *
   * <pre>
   * Export filter used to define which VPC Flow Logs should be logged.
   * </pre>
   *
   * <code>optional string filter_expr = 8;</code>
   *
   * @return Whether the filterExpr field is set.
   */
  boolean hasFilterExpr();

  /**
   *
   *
   * <pre>
   * Export filter used to define which VPC Flow Logs should be logged.
   * </pre>
   *
   * <code>optional string filter_expr = 8;</code>
   *
   * @return The filterExpr.
   */
  java.lang.String getFilterExpr();

  /**
   *
   *
   * <pre>
   * Export filter used to define which VPC Flow Logs should be logged.
   * </pre>
   *
   * <code>optional string filter_expr = 8;</code>
   *
   * @return The bytes for filterExpr.
   */
  com.google.protobuf.ByteString getFilterExprBytes();

  /**
   *
   *
   * <pre>
   * Determines whether to include cross project annotations in the logs.
   * This field is available only for organization configurations. If not
   * specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
   * </pre>
   *
   * <code>
   * optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.CrossProjectMetadata cross_project_metadata = 13;
   * </code>
   *
   * @return Whether the crossProjectMetadata field is set.
   */
  boolean hasCrossProjectMetadata();

  /**
   *
   *
   * <pre>
   * Determines whether to include cross project annotations in the logs.
   * This field is available only for organization configurations. If not
   * specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
   * </pre>
   *
   * <code>
   * optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.CrossProjectMetadata cross_project_metadata = 13;
   * </code>
   *
   * @return The enum numeric value on the wire for crossProjectMetadata.
   */
  int getCrossProjectMetadataValue();

  /**
   *
   *
   * <pre>
   * Determines whether to include cross project annotations in the logs.
   * This field is available only for organization configurations. If not
   * specified in org configs will be set to CROSS_PROJECT_METADATA_ENABLED.
   * </pre>
   *
   * <code>
   * optional .google.cloud.networkmanagement.v1.VpcFlowLogsConfig.CrossProjectMetadata cross_project_metadata = 13;
   * </code>
   *
   * @return The crossProjectMetadata.
   */
  com.google.cloud.networkmanagement.v1.VpcFlowLogsConfig.CrossProjectMetadata
      getCrossProjectMetadata();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from VMs, VPN tunnels and Interconnect Attachments
   * within the network.
   * Format: projects/{project_id}/global/networks/{name}
   * </pre>
   *
   * <code>string network = 100;</code>
   *
   * @return Whether the network field is set.
   */
  boolean hasNetwork();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from VMs, VPN tunnels and Interconnect Attachments
   * within the network.
   * Format: projects/{project_id}/global/networks/{name}
   * </pre>
   *
   * <code>string network = 100;</code>
   *
   * @return The network.
   */
  java.lang.String getNetwork();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from VMs, VPN tunnels and Interconnect Attachments
   * within the network.
   * Format: projects/{project_id}/global/networks/{name}
   * </pre>
   *
   * <code>string network = 100;</code>
   *
   * @return The bytes for network.
   */
  com.google.protobuf.ByteString getNetworkBytes();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from VMs within the subnetwork.
   * Format: projects/{project_id}/regions/{region}/subnetworks/{name}
   * </pre>
   *
   * <code>string subnet = 101;</code>
   *
   * @return Whether the subnet field is set.
   */
  boolean hasSubnet();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from VMs within the subnetwork.
   * Format: projects/{project_id}/regions/{region}/subnetworks/{name}
   * </pre>
   *
   * <code>string subnet = 101;</code>
   *
   * @return The subnet.
   */
  java.lang.String getSubnet();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from VMs within the subnetwork.
   * Format: projects/{project_id}/regions/{region}/subnetworks/{name}
   * </pre>
   *
   * <code>string subnet = 101;</code>
   *
   * @return The bytes for subnet.
   */
  com.google.protobuf.ByteString getSubnetBytes();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from the Interconnect Attachment.
   * Format:
   * projects/{project_id}/regions/{region}/interconnectAttachments/{name}
   * </pre>
   *
   * <code>string interconnect_attachment = 102;</code>
   *
   * @return Whether the interconnectAttachment field is set.
   */
  boolean hasInterconnectAttachment();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from the Interconnect Attachment.
   * Format:
   * projects/{project_id}/regions/{region}/interconnectAttachments/{name}
   * </pre>
   *
   * <code>string interconnect_attachment = 102;</code>
   *
   * @return The interconnectAttachment.
   */
  java.lang.String getInterconnectAttachment();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from the Interconnect Attachment.
   * Format:
   * projects/{project_id}/regions/{region}/interconnectAttachments/{name}
   * </pre>
   *
   * <code>string interconnect_attachment = 102;</code>
   *
   * @return The bytes for interconnectAttachment.
   */
  com.google.protobuf.ByteString getInterconnectAttachmentBytes();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from the VPN Tunnel.
   * Format: projects/{project_id}/regions/{region}/vpnTunnels/{name}
   * </pre>
   *
   * <code>string vpn_tunnel = 103;</code>
   *
   * @return Whether the vpnTunnel field is set.
   */
  boolean hasVpnTunnel();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from the VPN Tunnel.
   * Format: projects/{project_id}/regions/{region}/vpnTunnels/{name}
   * </pre>
   *
   * <code>string vpn_tunnel = 103;</code>
   *
   * @return The vpnTunnel.
   */
  java.lang.String getVpnTunnel();

  /**
   *
   *
   * <pre>
   * Traffic will be logged from the VPN Tunnel.
   * Format: projects/{project_id}/regions/{region}/vpnTunnels/{name}
   * </pre>
   *
   * <code>string vpn_tunnel = 103;</code>
   *
   * @return The bytes for vpnTunnel.
   */
  com.google.protobuf.ByteString getVpnTunnelBytes();

  /**
   *
   *
   * <pre>
   * Specifies the scope of the config (e.g., SUBNET, NETWORK, ORGANIZATION..).
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig.Scope scope = 12;
   * </code>
   *
   * @return Whether the scope field is set.
   */
  boolean hasScope();

  /**
   *
   *
   * <pre>
   * Specifies the scope of the config (e.g., SUBNET, NETWORK, ORGANIZATION..).
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig.Scope scope = 12;
   * </code>
   *
   * @return The enum numeric value on the wire for scope.
   */
  int getScopeValue();

  /**
   *
   *
   * <pre>
   * Specifies the scope of the config (e.g., SUBNET, NETWORK, ORGANIZATION..).
   * </pre>
   *
   * <code>optional .google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig.Scope scope = 12;
   * </code>
   *
   * @return The scope.
   */
  com.google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig.Scope getScope();

  com.google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig.TargetResourceCase
      getTargetResourceCase();
}
