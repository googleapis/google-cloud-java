/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/dataproc/v1/clusters.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.dataproc.v1;

public interface EndpointConfigOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.dataproc.v1.EndpointConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Output only. The map of port descriptions to URLs. Will only be populated
   * if enable_http_port_access is true.
   * </pre>
   *
   * <code>map&lt;string, string&gt; http_ports = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  int getHttpPortsCount();
  /**
   *
   *
   * <pre>
   * Output only. The map of port descriptions to URLs. Will only be populated
   * if enable_http_port_access is true.
   * </pre>
   *
   * <code>map&lt;string, string&gt; http_ports = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  boolean containsHttpPorts(java.lang.String key);
  /** Use {@link #getHttpPortsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getHttpPorts();
  /**
   *
   *
   * <pre>
   * Output only. The map of port descriptions to URLs. Will only be populated
   * if enable_http_port_access is true.
   * </pre>
   *
   * <code>map&lt;string, string&gt; http_ports = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.util.Map<java.lang.String, java.lang.String> getHttpPortsMap();
  /**
   *
   *
   * <pre>
   * Output only. The map of port descriptions to URLs. Will only be populated
   * if enable_http_port_access is true.
   * </pre>
   *
   * <code>map&lt;string, string&gt; http_ports = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  /* nullable */
  java.lang.String getHttpPortsOrDefault(
      java.lang.String key,
      /* nullable */
      java.lang.String defaultValue);
  /**
   *
   *
   * <pre>
   * Output only. The map of port descriptions to URLs. Will only be populated
   * if enable_http_port_access is true.
   * </pre>
   *
   * <code>map&lt;string, string&gt; http_ports = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
   * </code>
   */
  java.lang.String getHttpPortsOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * Optional. If true, enable http access to specific ports on the cluster
   * from external sources. Defaults to false.
   * </pre>
   *
   * <code>bool enable_http_port_access = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The enableHttpPortAccess.
   */
  boolean getEnableHttpPortAccess();
}
