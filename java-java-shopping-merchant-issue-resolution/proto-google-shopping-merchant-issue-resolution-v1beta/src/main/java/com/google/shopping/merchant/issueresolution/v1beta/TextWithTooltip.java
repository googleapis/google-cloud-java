/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/issueresolution/v1beta/issueresolution.proto

// Protobuf Java Version: 3.25.5
package com.google.shopping.merchant.issueresolution.v1beta;

/**
 *
 *
 * <pre>
 * Block of text that may contain a tooltip with more information.
 * </pre>
 *
 * Protobuf type {@code google.shopping.merchant.issueresolution.v1beta.TextWithTooltip}
 */
public final class TextWithTooltip extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.shopping.merchant.issueresolution.v1beta.TextWithTooltip)
    TextWithTooltipOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use TextWithTooltip.newBuilder() to construct.
  private TextWithTooltip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private TextWithTooltip() {
    tooltipIconStyle_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new TextWithTooltip();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.shopping.merchant.issueresolution.v1beta.IssueResolutionProto
        .internal_static_google_shopping_merchant_issueresolution_v1beta_TextWithTooltip_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.shopping.merchant.issueresolution.v1beta.IssueResolutionProto
        .internal_static_google_shopping_merchant_issueresolution_v1beta_TextWithTooltip_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.class,
            com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.Builder.class);
  }

  /**
   *
   *
   * <pre>
   * Enum specifying the type of an icon that is being used to display a
   * corresponding tooltip in the Merchant Center.
   * </pre>
   *
   * Protobuf enum {@code
   * google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle}
   */
  public enum TooltipIconStyle implements com.google.protobuf.ProtocolMessageEnum {
    /**
     *
     *
     * <pre>
     * Default value. Will never be provided by the API.
     * </pre>
     *
     * <code>TOOLTIP_ICON_STYLE_UNSPECIFIED = 0;</code>
     */
    TOOLTIP_ICON_STYLE_UNSPECIFIED(0),
    /**
     *
     *
     * <pre>
     * Used when the tooltip adds additional information to the context,
     * the 'i' can be used as an icon.
     * </pre>
     *
     * <code>INFO = 1;</code>
     */
    INFO(1),
    /**
     *
     *
     * <pre>
     * Used when the tooltip shows helpful information, the '?' can be used as
     * an icon.
     * </pre>
     *
     * <code>QUESTION = 2;</code>
     */
    QUESTION(2),
    UNRECOGNIZED(-1),
    ;

    /**
     *
     *
     * <pre>
     * Default value. Will never be provided by the API.
     * </pre>
     *
     * <code>TOOLTIP_ICON_STYLE_UNSPECIFIED = 0;</code>
     */
    public static final int TOOLTIP_ICON_STYLE_UNSPECIFIED_VALUE = 0;

    /**
     *
     *
     * <pre>
     * Used when the tooltip adds additional information to the context,
     * the 'i' can be used as an icon.
     * </pre>
     *
     * <code>INFO = 1;</code>
     */
    public static final int INFO_VALUE = 1;

    /**
     *
     *
     * <pre>
     * Used when the tooltip shows helpful information, the '?' can be used as
     * an icon.
     * </pre>
     *
     * <code>QUESTION = 2;</code>
     */
    public static final int QUESTION_VALUE = 2;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TooltipIconStyle valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TooltipIconStyle forNumber(int value) {
      switch (value) {
        case 0:
          return TOOLTIP_ICON_STYLE_UNSPECIFIED;
        case 1:
          return INFO;
        case 2:
          return QUESTION;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TooltipIconStyle> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<TooltipIconStyle>
        internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TooltipIconStyle>() {
              public TooltipIconStyle findValueByNumber(int number) {
                return TooltipIconStyle.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.getDescriptor()
          .getEnumTypes()
          .get(0);
    }

    private static final TooltipIconStyle[] VALUES = values();

    public static TooltipIconStyle valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TooltipIconStyle(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle)
  }

  private int valueCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object value_;

  public enum ValueCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SIMPLE_VALUE(1),
    VALUE_NOT_SET(0);
    private final int value;

    private ValueCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 1:
          return SIMPLE_VALUE;
        case 0:
          return VALUE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase getValueCase() {
    return ValueCase.forNumber(valueCase_);
  }

  private int tooltipValueCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object tooltipValue_;

  public enum TooltipValueCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SIMPLE_TOOLTIP_VALUE(2),
    TOOLTIPVALUE_NOT_SET(0);
    private final int value;

    private TooltipValueCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TooltipValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static TooltipValueCase forNumber(int value) {
      switch (value) {
        case 2:
          return SIMPLE_TOOLTIP_VALUE;
        case 0:
          return TOOLTIPVALUE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public TooltipValueCase getTooltipValueCase() {
    return TooltipValueCase.forNumber(tooltipValueCase_);
  }

  public static final int SIMPLE_VALUE_FIELD_NUMBER = 1;

  /**
   *
   *
   * <pre>
   * Value of the message as a simple text.
   * </pre>
   *
   * <code>string simple_value = 1;</code>
   *
   * @return Whether the simpleValue field is set.
   */
  public boolean hasSimpleValue() {
    return valueCase_ == 1;
  }

  /**
   *
   *
   * <pre>
   * Value of the message as a simple text.
   * </pre>
   *
   * <code>string simple_value = 1;</code>
   *
   * @return The simpleValue.
   */
  public java.lang.String getSimpleValue() {
    java.lang.Object ref = "";
    if (valueCase_ == 1) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (valueCase_ == 1) {
        value_ = s;
      }
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Value of the message as a simple text.
   * </pre>
   *
   * <code>string simple_value = 1;</code>
   *
   * @return The bytes for simpleValue.
   */
  public com.google.protobuf.ByteString getSimpleValueBytes() {
    java.lang.Object ref = "";
    if (valueCase_ == 1) {
      ref = value_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (valueCase_ == 1) {
        value_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIMPLE_TOOLTIP_VALUE_FIELD_NUMBER = 2;

  /**
   *
   *
   * <pre>
   * Value of the tooltip as a simple text.
   * </pre>
   *
   * <code>string simple_tooltip_value = 2;</code>
   *
   * @return Whether the simpleTooltipValue field is set.
   */
  public boolean hasSimpleTooltipValue() {
    return tooltipValueCase_ == 2;
  }

  /**
   *
   *
   * <pre>
   * Value of the tooltip as a simple text.
   * </pre>
   *
   * <code>string simple_tooltip_value = 2;</code>
   *
   * @return The simpleTooltipValue.
   */
  public java.lang.String getSimpleTooltipValue() {
    java.lang.Object ref = "";
    if (tooltipValueCase_ == 2) {
      ref = tooltipValue_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (tooltipValueCase_ == 2) {
        tooltipValue_ = s;
      }
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Value of the tooltip as a simple text.
   * </pre>
   *
   * <code>string simple_tooltip_value = 2;</code>
   *
   * @return The bytes for simpleTooltipValue.
   */
  public com.google.protobuf.ByteString getSimpleTooltipValueBytes() {
    java.lang.Object ref = "";
    if (tooltipValueCase_ == 2) {
      ref = tooltipValue_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      if (tooltipValueCase_ == 2) {
        tooltipValue_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOOLTIP_ICON_STYLE_FIELD_NUMBER = 3;
  private int tooltipIconStyle_ = 0;

  /**
   *
   *
   * <pre>
   * The suggested type of an icon for tooltip, if a tooltip is present.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
   * </code>
   *
   * @return The enum numeric value on the wire for tooltipIconStyle.
   */
  @java.lang.Override
  public int getTooltipIconStyleValue() {
    return tooltipIconStyle_;
  }

  /**
   *
   *
   * <pre>
   * The suggested type of an icon for tooltip, if a tooltip is present.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
   * </code>
   *
   * @return The tooltipIconStyle.
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
      getTooltipIconStyle() {
    com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle result =
        com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
            .forNumber(tooltipIconStyle_);
    return result == null
        ? com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
            .UNRECOGNIZED
        : result;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (valueCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, value_);
    }
    if (tooltipValueCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tooltipValue_);
    }
    if (tooltipIconStyle_
        != com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
            .TOOLTIP_ICON_STYLE_UNSPECIFIED
            .getNumber()) {
      output.writeEnum(3, tooltipIconStyle_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valueCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, value_);
    }
    if (tooltipValueCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tooltipValue_);
    }
    if (tooltipIconStyle_
        != com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
            .TOOLTIP_ICON_STYLE_UNSPECIFIED
            .getNumber()) {
      size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, tooltipIconStyle_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip)) {
      return super.equals(obj);
    }
    com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip other =
        (com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip) obj;

    if (tooltipIconStyle_ != other.tooltipIconStyle_) return false;
    if (!getValueCase().equals(other.getValueCase())) return false;
    switch (valueCase_) {
      case 1:
        if (!getSimpleValue().equals(other.getSimpleValue())) return false;
        break;
      case 0:
      default:
    }
    if (!getTooltipValueCase().equals(other.getTooltipValueCase())) return false;
    switch (tooltipValueCase_) {
      case 2:
        if (!getSimpleTooltipValue().equals(other.getSimpleTooltipValue())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOOLTIP_ICON_STYLE_FIELD_NUMBER;
    hash = (53 * hash) + tooltipIconStyle_;
    switch (valueCase_) {
      case 1:
        hash = (37 * hash) + SIMPLE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getSimpleValue().hashCode();
        break;
      case 0:
      default:
    }
    switch (tooltipValueCase_) {
      case 2:
        hash = (37 * hash) + SIMPLE_TOOLTIP_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getSimpleTooltipValue().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * Block of text that may contain a tooltip with more information.
   * </pre>
   *
   * Protobuf type {@code google.shopping.merchant.issueresolution.v1beta.TextWithTooltip}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.shopping.merchant.issueresolution.v1beta.TextWithTooltip)
      com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltipOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.shopping.merchant.issueresolution.v1beta.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1beta_TextWithTooltip_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.shopping.merchant.issueresolution.v1beta.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1beta_TextWithTooltip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.class,
              com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.Builder.class);
    }

    // Construct using
    // com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tooltipIconStyle_ = 0;
      valueCase_ = 0;
      value_ = null;
      tooltipValueCase_ = 0;
      tooltipValue_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.shopping.merchant.issueresolution.v1beta.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1beta_TextWithTooltip_descriptor;
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
        getDefaultInstanceForType() {
      return com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip build() {
      com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip buildPartial() {
      com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip result =
          new com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(
        com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.tooltipIconStyle_ = tooltipIconStyle_;
      }
    }

    private void buildPartialOneofs(
        com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip result) {
      result.valueCase_ = valueCase_;
      result.value_ = this.value_;
      result.tooltipValueCase_ = tooltipValueCase_;
      result.tooltipValue_ = this.tooltipValue_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip) {
        return mergeFrom(
            (com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip other) {
      if (other
          == com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
              .getDefaultInstance()) return this;
      if (other.tooltipIconStyle_ != 0) {
        setTooltipIconStyleValue(other.getTooltipIconStyleValue());
      }
      switch (other.getValueCase()) {
        case SIMPLE_VALUE:
          {
            valueCase_ = 1;
            value_ = other.value_;
            onChanged();
            break;
          }
        case VALUE_NOT_SET:
          {
            break;
          }
      }
      switch (other.getTooltipValueCase()) {
        case SIMPLE_TOOLTIP_VALUE:
          {
            tooltipValueCase_ = 2;
            tooltipValue_ = other.tooltipValue_;
            onChanged();
            break;
          }
        case TOOLTIPVALUE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();
                valueCase_ = 1;
                value_ = s;
                break;
              } // case 10
            case 18:
              {
                java.lang.String s = input.readStringRequireUtf8();
                tooltipValueCase_ = 2;
                tooltipValue_ = s;
                break;
              } // case 18
            case 24:
              {
                tooltipIconStyle_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;

    public ValueCase getValueCase() {
      return ValueCase.forNumber(valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }

    private int tooltipValueCase_ = 0;
    private java.lang.Object tooltipValue_;

    public TooltipValueCase getTooltipValueCase() {
      return TooltipValueCase.forNumber(tooltipValueCase_);
    }

    public Builder clearTooltipValue() {
      tooltipValueCase_ = 0;
      tooltipValue_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     *
     *
     * <pre>
     * Value of the message as a simple text.
     * </pre>
     *
     * <code>string simple_value = 1;</code>
     *
     * @return Whether the simpleValue field is set.
     */
    @java.lang.Override
    public boolean hasSimpleValue() {
      return valueCase_ == 1;
    }

    /**
     *
     *
     * <pre>
     * Value of the message as a simple text.
     * </pre>
     *
     * <code>string simple_value = 1;</code>
     *
     * @return The simpleValue.
     */
    @java.lang.Override
    public java.lang.String getSimpleValue() {
      java.lang.Object ref = "";
      if (valueCase_ == 1) {
        ref = value_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 1) {
          value_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Value of the message as a simple text.
     * </pre>
     *
     * <code>string simple_value = 1;</code>
     *
     * @return The bytes for simpleValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSimpleValueBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 1) {
        ref = value_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (valueCase_ == 1) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Value of the message as a simple text.
     * </pre>
     *
     * <code>string simple_value = 1;</code>
     *
     * @param value The simpleValue to set.
     * @return This builder for chaining.
     */
    public Builder setSimpleValue(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      valueCase_ = 1;
      value_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Value of the message as a simple text.
     * </pre>
     *
     * <code>string simple_value = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSimpleValue() {
      if (valueCase_ == 1) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Value of the message as a simple text.
     * </pre>
     *
     * <code>string simple_value = 1;</code>
     *
     * @param value The bytes for simpleValue to set.
     * @return This builder for chaining.
     */
    public Builder setSimpleValueBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      valueCase_ = 1;
      value_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Value of the tooltip as a simple text.
     * </pre>
     *
     * <code>string simple_tooltip_value = 2;</code>
     *
     * @return Whether the simpleTooltipValue field is set.
     */
    @java.lang.Override
    public boolean hasSimpleTooltipValue() {
      return tooltipValueCase_ == 2;
    }

    /**
     *
     *
     * <pre>
     * Value of the tooltip as a simple text.
     * </pre>
     *
     * <code>string simple_tooltip_value = 2;</code>
     *
     * @return The simpleTooltipValue.
     */
    @java.lang.Override
    public java.lang.String getSimpleTooltipValue() {
      java.lang.Object ref = "";
      if (tooltipValueCase_ == 2) {
        ref = tooltipValue_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (tooltipValueCase_ == 2) {
          tooltipValue_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Value of the tooltip as a simple text.
     * </pre>
     *
     * <code>string simple_tooltip_value = 2;</code>
     *
     * @return The bytes for simpleTooltipValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSimpleTooltipValueBytes() {
      java.lang.Object ref = "";
      if (tooltipValueCase_ == 2) {
        ref = tooltipValue_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        if (tooltipValueCase_ == 2) {
          tooltipValue_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Value of the tooltip as a simple text.
     * </pre>
     *
     * <code>string simple_tooltip_value = 2;</code>
     *
     * @param value The simpleTooltipValue to set.
     * @return This builder for chaining.
     */
    public Builder setSimpleTooltipValue(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      tooltipValueCase_ = 2;
      tooltipValue_ = value;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Value of the tooltip as a simple text.
     * </pre>
     *
     * <code>string simple_tooltip_value = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSimpleTooltipValue() {
      if (tooltipValueCase_ == 2) {
        tooltipValueCase_ = 0;
        tooltipValue_ = null;
        onChanged();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Value of the tooltip as a simple text.
     * </pre>
     *
     * <code>string simple_tooltip_value = 2;</code>
     *
     * @param value The bytes for simpleTooltipValue to set.
     * @return This builder for chaining.
     */
    public Builder setSimpleTooltipValueBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      tooltipValueCase_ = 2;
      tooltipValue_ = value;
      onChanged();
      return this;
    }

    private int tooltipIconStyle_ = 0;

    /**
     *
     *
     * <pre>
     * The suggested type of an icon for tooltip, if a tooltip is present.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
     * </code>
     *
     * @return The enum numeric value on the wire for tooltipIconStyle.
     */
    @java.lang.Override
    public int getTooltipIconStyleValue() {
      return tooltipIconStyle_;
    }

    /**
     *
     *
     * <pre>
     * The suggested type of an icon for tooltip, if a tooltip is present.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
     * </code>
     *
     * @param value The enum numeric value on the wire for tooltipIconStyle to set.
     * @return This builder for chaining.
     */
    public Builder setTooltipIconStyleValue(int value) {
      tooltipIconStyle_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The suggested type of an icon for tooltip, if a tooltip is present.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
     * </code>
     *
     * @return The tooltipIconStyle.
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
        getTooltipIconStyle() {
      com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle result =
          com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
              .forNumber(tooltipIconStyle_);
      return result == null
          ? com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
              .UNRECOGNIZED
          : result;
    }

    /**
     *
     *
     * <pre>
     * The suggested type of an icon for tooltip, if a tooltip is present.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
     * </code>
     *
     * @param value The tooltipIconStyle to set.
     * @return This builder for chaining.
     */
    public Builder setTooltipIconStyle(
        com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle
            value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      tooltipIconStyle_ = value.getNumber();
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The suggested type of an icon for tooltip, if a tooltip is present.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1beta.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTooltipIconStyle() {
      bitField0_ = (bitField0_ & ~0x00000004);
      tooltipIconStyle_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.shopping.merchant.issueresolution.v1beta.TextWithTooltip)
  }

  // @@protoc_insertion_point(class_scope:google.shopping.merchant.issueresolution.v1beta.TextWithTooltip)
  private static final com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip();
  }

  public static com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TextWithTooltip> PARSER =
      new com.google.protobuf.AbstractParser<TextWithTooltip>() {
        @java.lang.Override
        public TextWithTooltip parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<TextWithTooltip> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TextWithTooltip> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1beta.TextWithTooltip
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
