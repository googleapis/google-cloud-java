/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/issueresolution/v1beta/issueresolution.proto

// Protobuf Java Version: 3.25.5
package com.google.shopping.merchant.issueresolution.v1beta;

public interface ActionOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.merchant.issueresolution.v1beta.Action)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application. The
   * application should point the business to the place, where they can access
   * the corresponding functionality or provide instructions, if the specific
   * functionality is not available.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.BuiltInSimpleAction builtin_simple_action = 2;
   * </code>
   *
   * @return Whether the builtinSimpleAction field is set.
   */
  boolean hasBuiltinSimpleAction();

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application. The
   * application should point the business to the place, where they can access
   * the corresponding functionality or provide instructions, if the specific
   * functionality is not available.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.BuiltInSimpleAction builtin_simple_action = 2;
   * </code>
   *
   * @return The builtinSimpleAction.
   */
  com.google.shopping.merchant.issueresolution.v1beta.BuiltInSimpleAction getBuiltinSimpleAction();

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application. The
   * application should point the business to the place, where they can access
   * the corresponding functionality or provide instructions, if the specific
   * functionality is not available.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.BuiltInSimpleAction builtin_simple_action = 2;
   * </code>
   */
  com.google.shopping.merchant.issueresolution.v1beta.BuiltInSimpleActionOrBuilder
      getBuiltinSimpleActionOrBuilder();

  /**
   *
   *
   * <pre>
   * Action that is implemented and performed outside of (your) third-party
   * application. The application needs to redirect the business to the
   * external location where they can perform the action.
   * </pre>
   *
   * <code>.google.shopping.merchant.issueresolution.v1beta.ExternalAction external_action = 3;
   * </code>
   *
   * @return Whether the externalAction field is set.
   */
  boolean hasExternalAction();

  /**
   *
   *
   * <pre>
   * Action that is implemented and performed outside of (your) third-party
   * application. The application needs to redirect the business to the
   * external location where they can perform the action.
   * </pre>
   *
   * <code>.google.shopping.merchant.issueresolution.v1beta.ExternalAction external_action = 3;
   * </code>
   *
   * @return The externalAction.
   */
  com.google.shopping.merchant.issueresolution.v1beta.ExternalAction getExternalAction();

  /**
   *
   *
   * <pre>
   * Action that is implemented and performed outside of (your) third-party
   * application. The application needs to redirect the business to the
   * external location where they can perform the action.
   * </pre>
   *
   * <code>.google.shopping.merchant.issueresolution.v1beta.ExternalAction external_action = 3;
   * </code>
   */
  com.google.shopping.merchant.issueresolution.v1beta.ExternalActionOrBuilder
      getExternalActionOrBuilder();

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application.
   * The application needs to show an additional content and input form to the
   * business as specified for given action. They can trigger the action only
   * when they provided all required inputs.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.BuiltInUserInputAction builtin_user_input_action = 7;
   * </code>
   *
   * @return Whether the builtinUserInputAction field is set.
   */
  boolean hasBuiltinUserInputAction();

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application.
   * The application needs to show an additional content and input form to the
   * business as specified for given action. They can trigger the action only
   * when they provided all required inputs.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.BuiltInUserInputAction builtin_user_input_action = 7;
   * </code>
   *
   * @return The builtinUserInputAction.
   */
  com.google.shopping.merchant.issueresolution.v1beta.BuiltInUserInputAction
      getBuiltinUserInputAction();

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application.
   * The application needs to show an additional content and input form to the
   * business as specified for given action. They can trigger the action only
   * when they provided all required inputs.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1beta.BuiltInUserInputAction builtin_user_input_action = 7;
   * </code>
   */
  com.google.shopping.merchant.issueresolution.v1beta.BuiltInUserInputActionOrBuilder
      getBuiltinUserInputActionOrBuilder();

  /**
   *
   *
   * <pre>
   * Label of the action button.
   * </pre>
   *
   * <code>string button_label = 4;</code>
   *
   * @return The buttonLabel.
   */
  java.lang.String getButtonLabel();

  /**
   *
   *
   * <pre>
   * Label of the action button.
   * </pre>
   *
   * <code>string button_label = 4;</code>
   *
   * @return The bytes for buttonLabel.
   */
  com.google.protobuf.ByteString getButtonLabelBytes();

  /**
   *
   *
   * <pre>
   * Controlling whether the button is active or disabled. The value is 'false'
   * when the action was already requested or is not available. If the action is
   * not available then a
   * [reason][google.shopping.merchant.issueresolution.v1beta.Action.reasons]
   * will be present. If (your) third-party application shows a disabled button
   * for action that is not available, then it should also show reasons.
   * </pre>
   *
   * <code>bool is_available = 5;</code>
   *
   * @return The isAvailable.
   */
  boolean getIsAvailable();

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1beta.Action.Reason reasons = 6;
   * </code>
   */
  java.util.List<com.google.shopping.merchant.issueresolution.v1beta.Action.Reason>
      getReasonsList();

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1beta.Action.Reason reasons = 6;
   * </code>
   */
  com.google.shopping.merchant.issueresolution.v1beta.Action.Reason getReasons(int index);

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1beta.Action.Reason reasons = 6;
   * </code>
   */
  int getReasonsCount();

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1beta.Action.Reason reasons = 6;
   * </code>
   */
  java.util.List<
          ? extends com.google.shopping.merchant.issueresolution.v1beta.Action.ReasonOrBuilder>
      getReasonsOrBuilderList();

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1beta.Action.Reason reasons = 6;
   * </code>
   */
  com.google.shopping.merchant.issueresolution.v1beta.Action.ReasonOrBuilder getReasonsOrBuilder(
      int index);

  com.google.shopping.merchant.issueresolution.v1beta.Action.ActionCase getActionCase();
}
