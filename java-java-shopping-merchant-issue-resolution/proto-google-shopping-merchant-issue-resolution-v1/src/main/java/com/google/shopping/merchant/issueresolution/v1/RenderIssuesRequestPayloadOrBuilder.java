/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/issueresolution/v1/issueresolution.proto

// Protobuf Java Version: 3.25.8
package com.google.shopping.merchant.issueresolution.v1;

public interface RenderIssuesRequestPayloadOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.shopping.merchant.issueresolution.v1.RenderIssuesRequestPayload)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Optional. How the detailed content should be returned. Default option is to
   * return the content as a pre-rendered HTML text.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.issueresolution.v1.ContentOption content_option = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the contentOption field is set.
   */
  boolean hasContentOption();

  /**
   *
   *
   * <pre>
   * Optional. How the detailed content should be returned. Default option is to
   * return the content as a pre-rendered HTML text.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.issueresolution.v1.ContentOption content_option = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for contentOption.
   */
  int getContentOptionValue();

  /**
   *
   *
   * <pre>
   * Optional. How the detailed content should be returned. Default option is to
   * return the content as a pre-rendered HTML text.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.issueresolution.v1.ContentOption content_option = 1 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The contentOption.
   */
  com.google.shopping.merchant.issueresolution.v1.ContentOption getContentOption();

  /**
   *
   *
   * <pre>
   * Optional. How actions with user input form should be handled. If not
   * provided, actions will be returned as links that points the business to
   * Merchant Center where they can request the action.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.issueresolution.v1.UserInputActionRenderingOption user_input_action_option = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return Whether the userInputActionOption field is set.
   */
  boolean hasUserInputActionOption();

  /**
   *
   *
   * <pre>
   * Optional. How actions with user input form should be handled. If not
   * provided, actions will be returned as links that points the business to
   * Merchant Center where they can request the action.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.issueresolution.v1.UserInputActionRenderingOption user_input_action_option = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The enum numeric value on the wire for userInputActionOption.
   */
  int getUserInputActionOptionValue();

  /**
   *
   *
   * <pre>
   * Optional. How actions with user input form should be handled. If not
   * provided, actions will be returned as links that points the business to
   * Merchant Center where they can request the action.
   * </pre>
   *
   * <code>
   * optional .google.shopping.merchant.issueresolution.v1.UserInputActionRenderingOption user_input_action_option = 2 [(.google.api.field_behavior) = OPTIONAL];
   * </code>
   *
   * @return The userInputActionOption.
   */
  com.google.shopping.merchant.issueresolution.v1.UserInputActionRenderingOption
      getUserInputActionOption();
}
