/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/shopping/merchant/issueresolution/v1/issueresolution.proto

// Protobuf Java Version: 3.25.8
package com.google.shopping.merchant.issueresolution.v1;

/**
 *
 *
 * <pre>
 * An actionable step that can be executed to solve the issue.
 * </pre>
 *
 * Protobuf type {@code google.shopping.merchant.issueresolution.v1.Action}
 */
public final class Action extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.shopping.merchant.issueresolution.v1.Action)
    ActionOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use Action.newBuilder() to construct.
  private Action(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private Action() {
    buttonLabel_ = "";
    reasons_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new Action();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
        .internal_static_google_shopping_merchant_issueresolution_v1_Action_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
        .internal_static_google_shopping_merchant_issueresolution_v1_Action_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.shopping.merchant.issueresolution.v1.Action.class,
            com.google.shopping.merchant.issueresolution.v1.Action.Builder.class);
  }

  public interface ReasonOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.shopping.merchant.issueresolution.v1.Action.Reason)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Messages summarizing the reason, why the action is not available.
     * For example: "Review requested on Jan 03. Review requests can take a few
     * days to complete."
     * </pre>
     *
     * <code>string message = 1;</code>
     *
     * @return The message.
     */
    java.lang.String getMessage();

    /**
     *
     *
     * <pre>
     * Messages summarizing the reason, why the action is not available.
     * For example: "Review requested on Jan 03. Review requests can take a few
     * days to complete."
     * </pre>
     *
     * <code>string message = 1;</code>
     *
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString getMessageBytes();

    /**
     *
     *
     * <pre>
     * Detailed explanation of the reason. Should be displayed as a hint if
     * present.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     *
     * @return Whether the detail field is set.
     */
    boolean hasDetail();

    /**
     *
     *
     * <pre>
     * Detailed explanation of the reason. Should be displayed as a hint if
     * present.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     *
     * @return The detail.
     */
    java.lang.String getDetail();

    /**
     *
     *
     * <pre>
     * Detailed explanation of the reason. Should be displayed as a hint if
     * present.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     *
     * @return The bytes for detail.
     */
    com.google.protobuf.ByteString getDetailBytes();

    /**
     *
     *
     * <pre>
     * Optional. An action that needs to be performed to solve the problem
     * represented by this reason. This action will always be available. Should
     * be rendered as a link or button next to the summarizing message.
     *
     * For example, the review may be available only once the business configure
     * all required attributes. In such a situation this action can be a link to
     * the form, where they can fill the missing attribute to unblock the main
     * action.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the action field is set.
     */
    boolean hasAction();

    /**
     *
     *
     * <pre>
     * Optional. An action that needs to be performed to solve the problem
     * represented by this reason. This action will always be available. Should
     * be rendered as a link or button next to the summarizing message.
     *
     * For example, the review may be available only once the business configure
     * all required attributes. In such a situation this action can be a link to
     * the form, where they can fill the missing attribute to unblock the main
     * action.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The action.
     */
    com.google.shopping.merchant.issueresolution.v1.Action getAction();

    /**
     *
     *
     * <pre>
     * Optional. An action that needs to be performed to solve the problem
     * represented by this reason. This action will always be available. Should
     * be rendered as a link or button next to the summarizing message.
     *
     * For example, the review may be available only once the business configure
     * all required attributes. In such a situation this action can be a link to
     * the form, where they can fill the missing attribute to unblock the main
     * action.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder getActionOrBuilder();
  }

  /**
   *
   *
   * <pre>
   * A single reason why the action is not available.
   * </pre>
   *
   * Protobuf type {@code google.shopping.merchant.issueresolution.v1.Action.Reason}
   */
  public static final class Reason extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.shopping.merchant.issueresolution.v1.Action.Reason)
      ReasonOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Reason.newBuilder() to construct.
    private Reason(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private Reason() {
      message_ = "";
      detail_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new Reason();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1_Action_Reason_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1_Action_Reason_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.shopping.merchant.issueresolution.v1.Action.Reason.class,
              com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder.class);
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";

    /**
     *
     *
     * <pre>
     * Messages summarizing the reason, why the action is not available.
     * For example: "Review requested on Jan 03. Review requests can take a few
     * days to complete."
     * </pre>
     *
     * <code>string message = 1;</code>
     *
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }

    /**
     *
     *
     * <pre>
     * Messages summarizing the reason, why the action is not available.
     * For example: "Review requested on Jan 03. Review requests can take a few
     * days to complete."
     * </pre>
     *
     * <code>string message = 1;</code>
     *
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DETAIL_FIELD_NUMBER = 2;

    @SuppressWarnings("serial")
    private volatile java.lang.Object detail_ = "";

    /**
     *
     *
     * <pre>
     * Detailed explanation of the reason. Should be displayed as a hint if
     * present.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     *
     * @return Whether the detail field is set.
     */
    @java.lang.Override
    public boolean hasDetail() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Detailed explanation of the reason. Should be displayed as a hint if
     * present.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     *
     * @return The detail.
     */
    @java.lang.Override
    public java.lang.String getDetail() {
      java.lang.Object ref = detail_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        detail_ = s;
        return s;
      }
    }

    /**
     *
     *
     * <pre>
     * Detailed explanation of the reason. Should be displayed as a hint if
     * present.
     * </pre>
     *
     * <code>optional string detail = 2;</code>
     *
     * @return The bytes for detail.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDetailBytes() {
      java.lang.Object ref = detail_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        detail_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTION_FIELD_NUMBER = 3;
    private com.google.shopping.merchant.issueresolution.v1.Action action_;

    /**
     *
     *
     * <pre>
     * Optional. An action that needs to be performed to solve the problem
     * represented by this reason. This action will always be available. Should
     * be rendered as a link or button next to the summarizing message.
     *
     * For example, the review may be available only once the business configure
     * all required attributes. In such a situation this action can be a link to
     * the form, where they can fill the missing attribute to unblock the main
     * action.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return Whether the action field is set.
     */
    @java.lang.Override
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * Optional. An action that needs to be performed to solve the problem
     * represented by this reason. This action will always be available. Should
     * be rendered as a link or button next to the summarizing message.
     *
     * For example, the review may be available only once the business configure
     * all required attributes. In such a situation this action can be a link to
     * the form, where they can fill the missing attribute to unblock the main
     * action.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     *
     * @return The action.
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.Action getAction() {
      return action_ == null
          ? com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance()
          : action_;
    }

    /**
     *
     *
     * <pre>
     * Optional. An action that needs to be performed to solve the problem
     * represented by this reason. This action will always be available. Should
     * be rendered as a link or button next to the summarizing message.
     *
     * For example, the review may be available only once the business configure
     * all required attributes. In such a situation this action can be a link to
     * the form, where they can fill the missing attribute to unblock the main
     * action.
     * </pre>
     *
     * <code>
     * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder getActionOrBuilder() {
      return action_ == null
          ? com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance()
          : action_;
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, detail_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getAction());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, detail_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getAction());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.shopping.merchant.issueresolution.v1.Action.Reason)) {
        return super.equals(obj);
      }
      com.google.shopping.merchant.issueresolution.v1.Action.Reason other =
          (com.google.shopping.merchant.issueresolution.v1.Action.Reason) obj;

      if (!getMessage().equals(other.getMessage())) return false;
      if (hasDetail() != other.hasDetail()) return false;
      if (hasDetail()) {
        if (!getDetail().equals(other.getDetail())) return false;
      }
      if (hasAction() != other.hasAction()) return false;
      if (hasAction()) {
        if (!getAction().equals(other.getAction())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      if (hasDetail()) {
        hash = (37 * hash) + DETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getDetail().hashCode();
      }
      if (hasAction()) {
        hash = (37 * hash) + ACTION_FIELD_NUMBER;
        hash = (53 * hash) + getAction().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseDelimitedFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.shopping.merchant.issueresolution.v1.Action.Reason prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    /**
     *
     *
     * <pre>
     * A single reason why the action is not available.
     * </pre>
     *
     * Protobuf type {@code google.shopping.merchant.issueresolution.v1.Action.Reason}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.shopping.merchant.issueresolution.v1.Action.Reason)
        com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
            .internal_static_google_shopping_merchant_issueresolution_v1_Action_Reason_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
            .internal_static_google_shopping_merchant_issueresolution_v1_Action_Reason_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.shopping.merchant.issueresolution.v1.Action.Reason.class,
                com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder.class);
      }

      // Construct using com.google.shopping.merchant.issueresolution.v1.Action.Reason.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getActionFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        message_ = "";
        detail_ = "";
        action_ = null;
        if (actionBuilder_ != null) {
          actionBuilder_.dispose();
          actionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
            .internal_static_google_shopping_merchant_issueresolution_v1_Action_Reason_descriptor;
      }

      @java.lang.Override
      public com.google.shopping.merchant.issueresolution.v1.Action.Reason
          getDefaultInstanceForType() {
        return com.google.shopping.merchant.issueresolution.v1.Action.Reason.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.shopping.merchant.issueresolution.v1.Action.Reason build() {
        com.google.shopping.merchant.issueresolution.v1.Action.Reason result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.shopping.merchant.issueresolution.v1.Action.Reason buildPartial() {
        com.google.shopping.merchant.issueresolution.v1.Action.Reason result =
            new com.google.shopping.merchant.issueresolution.v1.Action.Reason(this);
        if (bitField0_ != 0) {
          buildPartial0(result);
        }
        onBuilt();
        return result;
      }

      private void buildPartial0(
          com.google.shopping.merchant.issueresolution.v1.Action.Reason result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.message_ = message_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.detail_ = detail_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.action_ = actionBuilder_ == null ? action_ : actionBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.shopping.merchant.issueresolution.v1.Action.Reason) {
          return mergeFrom((com.google.shopping.merchant.issueresolution.v1.Action.Reason) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.shopping.merchant.issueresolution.v1.Action.Reason other) {
        if (other
            == com.google.shopping.merchant.issueresolution.v1.Action.Reason.getDefaultInstance())
          return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDetail()) {
          detail_ = other.detail_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasAction()) {
          mergeAction(other.getAction());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10:
                {
                  message_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
              case 18:
                {
                  detail_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
              case 26:
                {
                  input.readMessage(getActionFieldBuilder().getBuilder(), extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
              default:
                {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int bitField0_;

      private java.lang.Object message_ = "";

      /**
       *
       *
       * <pre>
       * Messages summarizing the reason, why the action is not available.
       * For example: "Review requested on Jan 03. Review requests can take a few
       * days to complete."
       * </pre>
       *
       * <code>string message = 1;</code>
       *
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Messages summarizing the reason, why the action is not available.
       * For example: "Review requested on Jan 03. Review requests can take a few
       * days to complete."
       * </pre>
       *
       * <code>string message = 1;</code>
       *
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Messages summarizing the reason, why the action is not available.
       * For example: "Review requested on Jan 03. Review requests can take a few
       * days to complete."
       * </pre>
       *
       * <code>string message = 1;</code>
       *
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Messages summarizing the reason, why the action is not available.
       * For example: "Review requested on Jan 03. Review requests can take a few
       * days to complete."
       * </pre>
       *
       * <code>string message = 1;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Messages summarizing the reason, why the action is not available.
       * For example: "Review requested on Jan 03. Review requests can take a few
       * days to complete."
       * </pre>
       *
       * <code>string message = 1;</code>
       *
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        message_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object detail_ = "";

      /**
       *
       *
       * <pre>
       * Detailed explanation of the reason. Should be displayed as a hint if
       * present.
       * </pre>
       *
       * <code>optional string detail = 2;</code>
       *
       * @return Whether the detail field is set.
       */
      public boolean hasDetail() {
        return ((bitField0_ & 0x00000002) != 0);
      }

      /**
       *
       *
       * <pre>
       * Detailed explanation of the reason. Should be displayed as a hint if
       * present.
       * </pre>
       *
       * <code>optional string detail = 2;</code>
       *
       * @return The detail.
       */
      public java.lang.String getDetail() {
        java.lang.Object ref = detail_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          detail_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Detailed explanation of the reason. Should be displayed as a hint if
       * present.
       * </pre>
       *
       * <code>optional string detail = 2;</code>
       *
       * @return The bytes for detail.
       */
      public com.google.protobuf.ByteString getDetailBytes() {
        java.lang.Object ref = detail_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          detail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       *
       *
       * <pre>
       * Detailed explanation of the reason. Should be displayed as a hint if
       * present.
       * </pre>
       *
       * <code>optional string detail = 2;</code>
       *
       * @param value The detail to set.
       * @return This builder for chaining.
       */
      public Builder setDetail(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        detail_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Detailed explanation of the reason. Should be displayed as a hint if
       * present.
       * </pre>
       *
       * <code>optional string detail = 2;</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearDetail() {
        detail_ = getDefaultInstance().getDetail();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Detailed explanation of the reason. Should be displayed as a hint if
       * present.
       * </pre>
       *
       * <code>optional string detail = 2;</code>
       *
       * @param value The bytes for detail to set.
       * @return This builder for chaining.
       */
      public Builder setDetailBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);
        detail_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.shopping.merchant.issueresolution.v1.Action action_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.shopping.merchant.issueresolution.v1.Action,
              com.google.shopping.merchant.issueresolution.v1.Action.Builder,
              com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder>
          actionBuilder_;

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return Whether the action field is set.
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000004) != 0);
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       *
       * @return The action.
       */
      public com.google.shopping.merchant.issueresolution.v1.Action getAction() {
        if (actionBuilder_ == null) {
          return action_ == null
              ? com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance()
              : action_;
        } else {
          return actionBuilder_.getMessage();
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder setAction(com.google.shopping.merchant.issueresolution.v1.Action value) {
        if (actionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
        } else {
          actionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder setAction(
          com.google.shopping.merchant.issueresolution.v1.Action.Builder builderForValue) {
        if (actionBuilder_ == null) {
          action_ = builderForValue.build();
        } else {
          actionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder mergeAction(com.google.shopping.merchant.issueresolution.v1.Action value) {
        if (actionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)
              && action_ != null
              && action_
                  != com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance()) {
            getActionBuilder().mergeFrom(value);
          } else {
            action_ = value;
          }
        } else {
          actionBuilder_.mergeFrom(value);
        }
        if (action_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        action_ = null;
        if (actionBuilder_ != null) {
          actionBuilder_.dispose();
          actionBuilder_ = null;
        }
        onChanged();
        return this;
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public com.google.shopping.merchant.issueresolution.v1.Action.Builder getActionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getActionFieldBuilder().getBuilder();
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      public com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder getActionOrBuilder() {
        if (actionBuilder_ != null) {
          return actionBuilder_.getMessageOrBuilder();
        } else {
          return action_ == null
              ? com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance()
              : action_;
        }
      }

      /**
       *
       *
       * <pre>
       * Optional. An action that needs to be performed to solve the problem
       * represented by this reason. This action will always be available. Should
       * be rendered as a link or button next to the summarizing message.
       *
       * For example, the review may be available only once the business configure
       * all required attributes. In such a situation this action can be a link to
       * the form, where they can fill the missing attribute to unblock the main
       * action.
       * </pre>
       *
       * <code>
       * optional .google.shopping.merchant.issueresolution.v1.Action action = 3 [(.google.api.field_behavior) = OPTIONAL];
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.shopping.merchant.issueresolution.v1.Action,
              com.google.shopping.merchant.issueresolution.v1.Action.Builder,
              com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder>
          getActionFieldBuilder() {
        if (actionBuilder_ == null) {
          actionBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.shopping.merchant.issueresolution.v1.Action,
                  com.google.shopping.merchant.issueresolution.v1.Action.Builder,
                  com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder>(
                  getAction(), getParentForChildren(), isClean());
          action_ = null;
        }
        return actionBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.shopping.merchant.issueresolution.v1.Action.Reason)
    }

    // @@protoc_insertion_point(class_scope:google.shopping.merchant.issueresolution.v1.Action.Reason)
    private static final com.google.shopping.merchant.issueresolution.v1.Action.Reason
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.shopping.merchant.issueresolution.v1.Action.Reason();
    }

    public static com.google.shopping.merchant.issueresolution.v1.Action.Reason
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Reason> PARSER =
        new com.google.protobuf.AbstractParser<Reason>() {
          @java.lang.Override
          public Reason parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException()
                  .setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

    public static com.google.protobuf.Parser<Reason> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Reason> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.Action.Reason
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  private int actionCase_ = 0;

  @SuppressWarnings("serial")
  private java.lang.Object action_;

  public enum ActionCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BUILTIN_SIMPLE_ACTION(2),
    EXTERNAL_ACTION(3),
    BUILTIN_USER_INPUT_ACTION(7),
    ACTION_NOT_SET(0);
    private final int value;

    private ActionCase(int value) {
      this.value = value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ActionCase forNumber(int value) {
      switch (value) {
        case 2:
          return BUILTIN_SIMPLE_ACTION;
        case 3:
          return EXTERNAL_ACTION;
        case 7:
          return BUILTIN_USER_INPUT_ACTION;
        case 0:
          return ACTION_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public ActionCase getActionCase() {
    return ActionCase.forNumber(actionCase_);
  }

  public static final int BUILTIN_SIMPLE_ACTION_FIELD_NUMBER = 2;

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application. The
   * application should point the business to the place, where they can access
   * the corresponding functionality or provide instructions, if the specific
   * functionality is not available.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
   * </code>
   *
   * @return Whether the builtinSimpleAction field is set.
   */
  @java.lang.Override
  public boolean hasBuiltinSimpleAction() {
    return actionCase_ == 2;
  }

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application. The
   * application should point the business to the place, where they can access
   * the corresponding functionality or provide instructions, if the specific
   * functionality is not available.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
   * </code>
   *
   * @return The builtinSimpleAction.
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
      getBuiltinSimpleAction() {
    if (actionCase_ == 2) {
      return (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_;
    }
    return com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application. The
   * application should point the business to the place, where they can access
   * the corresponding functionality or provide instructions, if the specific
   * functionality is not available.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleActionOrBuilder
      getBuiltinSimpleActionOrBuilder() {
    if (actionCase_ == 2) {
      return (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_;
    }
    return com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.getDefaultInstance();
  }

  public static final int EXTERNAL_ACTION_FIELD_NUMBER = 3;

  /**
   *
   *
   * <pre>
   * Action that is implemented and performed outside of (your) third-party
   * application. The application needs to redirect the business to the
   * external location where they can perform the action.
   * </pre>
   *
   * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
   *
   * @return Whether the externalAction field is set.
   */
  @java.lang.Override
  public boolean hasExternalAction() {
    return actionCase_ == 3;
  }

  /**
   *
   *
   * <pre>
   * Action that is implemented and performed outside of (your) third-party
   * application. The application needs to redirect the business to the
   * external location where they can perform the action.
   * </pre>
   *
   * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
   *
   * @return The externalAction.
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.ExternalAction getExternalAction() {
    if (actionCase_ == 3) {
      return (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_;
    }
    return com.google.shopping.merchant.issueresolution.v1.ExternalAction.getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Action that is implemented and performed outside of (your) third-party
   * application. The application needs to redirect the business to the
   * external location where they can perform the action.
   * </pre>
   *
   * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.ExternalActionOrBuilder
      getExternalActionOrBuilder() {
    if (actionCase_ == 3) {
      return (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_;
    }
    return com.google.shopping.merchant.issueresolution.v1.ExternalAction.getDefaultInstance();
  }

  public static final int BUILTIN_USER_INPUT_ACTION_FIELD_NUMBER = 7;

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application.
   * The application needs to show an additional content and input form to the
   * business as specified for given action. They can trigger the action only
   * when they provided all required inputs.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
   * </code>
   *
   * @return Whether the builtinUserInputAction field is set.
   */
  @java.lang.Override
  public boolean hasBuiltinUserInputAction() {
    return actionCase_ == 7;
  }

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application.
   * The application needs to show an additional content and input form to the
   * business as specified for given action. They can trigger the action only
   * when they provided all required inputs.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
   * </code>
   *
   * @return The builtinUserInputAction.
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
      getBuiltinUserInputAction() {
    if (actionCase_ == 7) {
      return (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_;
    }
    return com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
        .getDefaultInstance();
  }

  /**
   *
   *
   * <pre>
   * Action implemented and performed in (your) third-party application.
   * The application needs to show an additional content and input form to the
   * business as specified for given action. They can trigger the action only
   * when they provided all required inputs.
   * </pre>
   *
   * <code>
   * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
   * </code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputActionOrBuilder
      getBuiltinUserInputActionOrBuilder() {
    if (actionCase_ == 7) {
      return (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_;
    }
    return com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
        .getDefaultInstance();
  }

  public static final int BUTTON_LABEL_FIELD_NUMBER = 4;

  @SuppressWarnings("serial")
  private volatile java.lang.Object buttonLabel_ = "";

  /**
   *
   *
   * <pre>
   * Label of the action button.
   * </pre>
   *
   * <code>string button_label = 4;</code>
   *
   * @return The buttonLabel.
   */
  @java.lang.Override
  public java.lang.String getButtonLabel() {
    java.lang.Object ref = buttonLabel_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      buttonLabel_ = s;
      return s;
    }
  }

  /**
   *
   *
   * <pre>
   * Label of the action button.
   * </pre>
   *
   * <code>string button_label = 4;</code>
   *
   * @return The bytes for buttonLabel.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getButtonLabelBytes() {
    java.lang.Object ref = buttonLabel_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      buttonLabel_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IS_AVAILABLE_FIELD_NUMBER = 5;
  private boolean isAvailable_ = false;

  /**
   *
   *
   * <pre>
   * Controlling whether the button is active or disabled. The value is 'false'
   * when the action was already requested or is not available. If the action is
   * not available then a
   * [reason][google.shopping.merchant.issueresolution.v1.Action.reasons] will
   * be present. If (your) third-party application shows a disabled button for
   * action that is not available, then it should also show reasons.
   * </pre>
   *
   * <code>bool is_available = 5;</code>
   *
   * @return The isAvailable.
   */
  @java.lang.Override
  public boolean getIsAvailable() {
    return isAvailable_;
  }

  public static final int REASONS_FIELD_NUMBER = 6;

  @SuppressWarnings("serial")
  private java.util.List<com.google.shopping.merchant.issueresolution.v1.Action.Reason> reasons_;

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.shopping.merchant.issueresolution.v1.Action.Reason>
      getReasonsList() {
    return reasons_;
  }

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder>
      getReasonsOrBuilderList() {
    return reasons_;
  }

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
   */
  @java.lang.Override
  public int getReasonsCount() {
    return reasons_.size();
  }

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.Action.Reason getReasons(int index) {
    return reasons_.get(index);
  }

  /**
   *
   *
   * <pre>
   * List of reasons why the action is not available. The list of reasons is
   * empty if the action is available. If there is only one reason, it can be
   * displayed next to the disabled button. If there are more reasons, all of
   * them should be displayed, for example in a pop-up dialog.
   * </pre>
   *
   * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
   */
  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder getReasonsOrBuilder(
      int index) {
    return reasons_.get(index);
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (actionCase_ == 2) {
      output.writeMessage(
          2, (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_);
    }
    if (actionCase_ == 3) {
      output.writeMessage(
          3, (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(buttonLabel_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, buttonLabel_);
    }
    if (isAvailable_ != false) {
      output.writeBool(5, isAvailable_);
    }
    for (int i = 0; i < reasons_.size(); i++) {
      output.writeMessage(6, reasons_.get(i));
    }
    if (actionCase_ == 7) {
      output.writeMessage(
          7, (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (actionCase_ == 2) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              2, (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_);
    }
    if (actionCase_ == 3) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              3, (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(buttonLabel_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, buttonLabel_);
    }
    if (isAvailable_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, isAvailable_);
    }
    for (int i = 0; i < reasons_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, reasons_.get(i));
    }
    if (actionCase_ == 7) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              7, (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.shopping.merchant.issueresolution.v1.Action)) {
      return super.equals(obj);
    }
    com.google.shopping.merchant.issueresolution.v1.Action other =
        (com.google.shopping.merchant.issueresolution.v1.Action) obj;

    if (!getButtonLabel().equals(other.getButtonLabel())) return false;
    if (getIsAvailable() != other.getIsAvailable()) return false;
    if (!getReasonsList().equals(other.getReasonsList())) return false;
    if (!getActionCase().equals(other.getActionCase())) return false;
    switch (actionCase_) {
      case 2:
        if (!getBuiltinSimpleAction().equals(other.getBuiltinSimpleAction())) return false;
        break;
      case 3:
        if (!getExternalAction().equals(other.getExternalAction())) return false;
        break;
      case 7:
        if (!getBuiltinUserInputAction().equals(other.getBuiltinUserInputAction())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BUTTON_LABEL_FIELD_NUMBER;
    hash = (53 * hash) + getButtonLabel().hashCode();
    hash = (37 * hash) + IS_AVAILABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getIsAvailable());
    if (getReasonsCount() > 0) {
      hash = (37 * hash) + REASONS_FIELD_NUMBER;
      hash = (53 * hash) + getReasonsList().hashCode();
    }
    switch (actionCase_) {
      case 2:
        hash = (37 * hash) + BUILTIN_SIMPLE_ACTION_FIELD_NUMBER;
        hash = (53 * hash) + getBuiltinSimpleAction().hashCode();
        break;
      case 3:
        hash = (37 * hash) + EXTERNAL_ACTION_FIELD_NUMBER;
        hash = (53 * hash) + getExternalAction().hashCode();
        break;
      case 7:
        hash = (37 * hash) + BUILTIN_USER_INPUT_ACTION_FIELD_NUMBER;
        hash = (53 * hash) + getBuiltinUserInputAction().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.shopping.merchant.issueresolution.v1.Action prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * An actionable step that can be executed to solve the issue.
   * </pre>
   *
   * Protobuf type {@code google.shopping.merchant.issueresolution.v1.Action}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.shopping.merchant.issueresolution.v1.Action)
      com.google.shopping.merchant.issueresolution.v1.ActionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1_Action_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1_Action_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.shopping.merchant.issueresolution.v1.Action.class,
              com.google.shopping.merchant.issueresolution.v1.Action.Builder.class);
    }

    // Construct using com.google.shopping.merchant.issueresolution.v1.Action.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (builtinSimpleActionBuilder_ != null) {
        builtinSimpleActionBuilder_.clear();
      }
      if (externalActionBuilder_ != null) {
        externalActionBuilder_.clear();
      }
      if (builtinUserInputActionBuilder_ != null) {
        builtinUserInputActionBuilder_.clear();
      }
      buttonLabel_ = "";
      isAvailable_ = false;
      if (reasonsBuilder_ == null) {
        reasons_ = java.util.Collections.emptyList();
      } else {
        reasons_ = null;
        reasonsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      actionCase_ = 0;
      action_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.shopping.merchant.issueresolution.v1.IssueResolutionProto
          .internal_static_google_shopping_merchant_issueresolution_v1_Action_descriptor;
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.Action getDefaultInstanceForType() {
      return com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.Action build() {
      com.google.shopping.merchant.issueresolution.v1.Action result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.Action buildPartial() {
      com.google.shopping.merchant.issueresolution.v1.Action result =
          new com.google.shopping.merchant.issueresolution.v1.Action(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(
        com.google.shopping.merchant.issueresolution.v1.Action result) {
      if (reasonsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          reasons_ = java.util.Collections.unmodifiableList(reasons_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.reasons_ = reasons_;
      } else {
        result.reasons_ = reasonsBuilder_.build();
      }
    }

    private void buildPartial0(com.google.shopping.merchant.issueresolution.v1.Action result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.buttonLabel_ = buttonLabel_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.isAvailable_ = isAvailable_;
      }
    }

    private void buildPartialOneofs(com.google.shopping.merchant.issueresolution.v1.Action result) {
      result.actionCase_ = actionCase_;
      result.action_ = this.action_;
      if (actionCase_ == 2 && builtinSimpleActionBuilder_ != null) {
        result.action_ = builtinSimpleActionBuilder_.build();
      }
      if (actionCase_ == 3 && externalActionBuilder_ != null) {
        result.action_ = externalActionBuilder_.build();
      }
      if (actionCase_ == 7 && builtinUserInputActionBuilder_ != null) {
        result.action_ = builtinUserInputActionBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.shopping.merchant.issueresolution.v1.Action) {
        return mergeFrom((com.google.shopping.merchant.issueresolution.v1.Action) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.shopping.merchant.issueresolution.v1.Action other) {
      if (other == com.google.shopping.merchant.issueresolution.v1.Action.getDefaultInstance())
        return this;
      if (!other.getButtonLabel().isEmpty()) {
        buttonLabel_ = other.buttonLabel_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getIsAvailable() != false) {
        setIsAvailable(other.getIsAvailable());
      }
      if (reasonsBuilder_ == null) {
        if (!other.reasons_.isEmpty()) {
          if (reasons_.isEmpty()) {
            reasons_ = other.reasons_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureReasonsIsMutable();
            reasons_.addAll(other.reasons_);
          }
          onChanged();
        }
      } else {
        if (!other.reasons_.isEmpty()) {
          if (reasonsBuilder_.isEmpty()) {
            reasonsBuilder_.dispose();
            reasonsBuilder_ = null;
            reasons_ = other.reasons_;
            bitField0_ = (bitField0_ & ~0x00000020);
            reasonsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getReasonsFieldBuilder()
                    : null;
          } else {
            reasonsBuilder_.addAllMessages(other.reasons_);
          }
        }
      }
      switch (other.getActionCase()) {
        case BUILTIN_SIMPLE_ACTION:
          {
            mergeBuiltinSimpleAction(other.getBuiltinSimpleAction());
            break;
          }
        case EXTERNAL_ACTION:
          {
            mergeExternalAction(other.getExternalAction());
            break;
          }
        case BUILTIN_USER_INPUT_ACTION:
          {
            mergeBuiltinUserInputAction(other.getBuiltinUserInputAction());
            break;
          }
        case ACTION_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18:
              {
                input.readMessage(
                    getBuiltinSimpleActionFieldBuilder().getBuilder(), extensionRegistry);
                actionCase_ = 2;
                break;
              } // case 18
            case 26:
              {
                input.readMessage(getExternalActionFieldBuilder().getBuilder(), extensionRegistry);
                actionCase_ = 3;
                break;
              } // case 26
            case 34:
              {
                buttonLabel_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
            case 40:
              {
                isAvailable_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
            case 50:
              {
                com.google.shopping.merchant.issueresolution.v1.Action.Reason m =
                    input.readMessage(
                        com.google.shopping.merchant.issueresolution.v1.Action.Reason.parser(),
                        extensionRegistry);
                if (reasonsBuilder_ == null) {
                  ensureReasonsIsMutable();
                  reasons_.add(m);
                } else {
                  reasonsBuilder_.addMessage(m);
                }
                break;
              } // case 50
            case 58:
              {
                input.readMessage(
                    getBuiltinUserInputActionFieldBuilder().getBuilder(), extensionRegistry);
                actionCase_ = 7;
                break;
              } // case 58
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int actionCase_ = 0;
    private java.lang.Object action_;

    public ActionCase getActionCase() {
      return ActionCase.forNumber(actionCase_);
    }

    public Builder clearAction() {
      actionCase_ = 0;
      action_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction,
            com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.Builder,
            com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleActionOrBuilder>
        builtinSimpleActionBuilder_;

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     *
     * @return Whether the builtinSimpleAction field is set.
     */
    @java.lang.Override
    public boolean hasBuiltinSimpleAction() {
      return actionCase_ == 2;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     *
     * @return The builtinSimpleAction.
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
        getBuiltinSimpleAction() {
      if (builtinSimpleActionBuilder_ == null) {
        if (actionCase_ == 2) {
          return (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_;
        }
        return com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
            .getDefaultInstance();
      } else {
        if (actionCase_ == 2) {
          return builtinSimpleActionBuilder_.getMessage();
        }
        return com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    public Builder setBuiltinSimpleAction(
        com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction value) {
      if (builtinSimpleActionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        builtinSimpleActionBuilder_.setMessage(value);
      }
      actionCase_ = 2;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    public Builder setBuiltinSimpleAction(
        com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.Builder
            builderForValue) {
      if (builtinSimpleActionBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        builtinSimpleActionBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 2;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    public Builder mergeBuiltinSimpleAction(
        com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction value) {
      if (builtinSimpleActionBuilder_ == null) {
        if (actionCase_ == 2
            && action_
                != com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
                    .getDefaultInstance()) {
          action_ =
              com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.newBuilder(
                      (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 2) {
          builtinSimpleActionBuilder_.mergeFrom(value);
        } else {
          builtinSimpleActionBuilder_.setMessage(value);
        }
      }
      actionCase_ = 2;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    public Builder clearBuiltinSimpleAction() {
      if (builtinSimpleActionBuilder_ == null) {
        if (actionCase_ == 2) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 2) {
          actionCase_ = 0;
          action_ = null;
        }
        builtinSimpleActionBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    public com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.Builder
        getBuiltinSimpleActionBuilder() {
      return getBuiltinSimpleActionFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleActionOrBuilder
        getBuiltinSimpleActionOrBuilder() {
      if ((actionCase_ == 2) && (builtinSimpleActionBuilder_ != null)) {
        return builtinSimpleActionBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 2) {
          return (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_;
        }
        return com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application. The
     * application should point the business to the place, where they can access
     * the corresponding functionality or provide instructions, if the specific
     * functionality is not available.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction builtin_simple_action = 2;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction,
            com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.Builder,
            com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleActionOrBuilder>
        getBuiltinSimpleActionFieldBuilder() {
      if (builtinSimpleActionBuilder_ == null) {
        if (!(actionCase_ == 2)) {
          action_ =
              com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction
                  .getDefaultInstance();
        }
        builtinSimpleActionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction,
                com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction.Builder,
                com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleActionOrBuilder>(
                (com.google.shopping.merchant.issueresolution.v1.BuiltInSimpleAction) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 2;
      onChanged();
      return builtinSimpleActionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.ExternalAction,
            com.google.shopping.merchant.issueresolution.v1.ExternalAction.Builder,
            com.google.shopping.merchant.issueresolution.v1.ExternalActionOrBuilder>
        externalActionBuilder_;

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     *
     * @return Whether the externalAction field is set.
     */
    @java.lang.Override
    public boolean hasExternalAction() {
      return actionCase_ == 3;
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     *
     * @return The externalAction.
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.ExternalAction getExternalAction() {
      if (externalActionBuilder_ == null) {
        if (actionCase_ == 3) {
          return (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_;
        }
        return com.google.shopping.merchant.issueresolution.v1.ExternalAction.getDefaultInstance();
      } else {
        if (actionCase_ == 3) {
          return externalActionBuilder_.getMessage();
        }
        return com.google.shopping.merchant.issueresolution.v1.ExternalAction.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    public Builder setExternalAction(
        com.google.shopping.merchant.issueresolution.v1.ExternalAction value) {
      if (externalActionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        externalActionBuilder_.setMessage(value);
      }
      actionCase_ = 3;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    public Builder setExternalAction(
        com.google.shopping.merchant.issueresolution.v1.ExternalAction.Builder builderForValue) {
      if (externalActionBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        externalActionBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 3;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    public Builder mergeExternalAction(
        com.google.shopping.merchant.issueresolution.v1.ExternalAction value) {
      if (externalActionBuilder_ == null) {
        if (actionCase_ == 3
            && action_
                != com.google.shopping.merchant.issueresolution.v1.ExternalAction
                    .getDefaultInstance()) {
          action_ =
              com.google.shopping.merchant.issueresolution.v1.ExternalAction.newBuilder(
                      (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 3) {
          externalActionBuilder_.mergeFrom(value);
        } else {
          externalActionBuilder_.setMessage(value);
        }
      }
      actionCase_ = 3;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    public Builder clearExternalAction() {
      if (externalActionBuilder_ == null) {
        if (actionCase_ == 3) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 3) {
          actionCase_ = 0;
          action_ = null;
        }
        externalActionBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    public com.google.shopping.merchant.issueresolution.v1.ExternalAction.Builder
        getExternalActionBuilder() {
      return getExternalActionFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.ExternalActionOrBuilder
        getExternalActionOrBuilder() {
      if ((actionCase_ == 3) && (externalActionBuilder_ != null)) {
        return externalActionBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 3) {
          return (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_;
        }
        return com.google.shopping.merchant.issueresolution.v1.ExternalAction.getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Action that is implemented and performed outside of (your) third-party
     * application. The application needs to redirect the business to the
     * external location where they can perform the action.
     * </pre>
     *
     * <code>.google.shopping.merchant.issueresolution.v1.ExternalAction external_action = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.ExternalAction,
            com.google.shopping.merchant.issueresolution.v1.ExternalAction.Builder,
            com.google.shopping.merchant.issueresolution.v1.ExternalActionOrBuilder>
        getExternalActionFieldBuilder() {
      if (externalActionBuilder_ == null) {
        if (!(actionCase_ == 3)) {
          action_ =
              com.google.shopping.merchant.issueresolution.v1.ExternalAction.getDefaultInstance();
        }
        externalActionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.issueresolution.v1.ExternalAction,
                com.google.shopping.merchant.issueresolution.v1.ExternalAction.Builder,
                com.google.shopping.merchant.issueresolution.v1.ExternalActionOrBuilder>(
                (com.google.shopping.merchant.issueresolution.v1.ExternalAction) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 3;
      onChanged();
      return externalActionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction,
            com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction.Builder,
            com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputActionOrBuilder>
        builtinUserInputActionBuilder_;

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     *
     * @return Whether the builtinUserInputAction field is set.
     */
    @java.lang.Override
    public boolean hasBuiltinUserInputAction() {
      return actionCase_ == 7;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     *
     * @return The builtinUserInputAction.
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
        getBuiltinUserInputAction() {
      if (builtinUserInputActionBuilder_ == null) {
        if (actionCase_ == 7) {
          return (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_;
        }
        return com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
            .getDefaultInstance();
      } else {
        if (actionCase_ == 7) {
          return builtinUserInputActionBuilder_.getMessage();
        }
        return com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    public Builder setBuiltinUserInputAction(
        com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction value) {
      if (builtinUserInputActionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        builtinUserInputActionBuilder_.setMessage(value);
      }
      actionCase_ = 7;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    public Builder setBuiltinUserInputAction(
        com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction.Builder
            builderForValue) {
      if (builtinUserInputActionBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        builtinUserInputActionBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 7;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    public Builder mergeBuiltinUserInputAction(
        com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction value) {
      if (builtinUserInputActionBuilder_ == null) {
        if (actionCase_ == 7
            && action_
                != com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
                    .getDefaultInstance()) {
          action_ =
              com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction.newBuilder(
                      (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction)
                          action_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 7) {
          builtinUserInputActionBuilder_.mergeFrom(value);
        } else {
          builtinUserInputActionBuilder_.setMessage(value);
        }
      }
      actionCase_ = 7;
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    public Builder clearBuiltinUserInputAction() {
      if (builtinUserInputActionBuilder_ == null) {
        if (actionCase_ == 7) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 7) {
          actionCase_ = 0;
          action_ = null;
        }
        builtinUserInputActionBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    public com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction.Builder
        getBuiltinUserInputActionBuilder() {
      return getBuiltinUserInputActionFieldBuilder().getBuilder();
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    @java.lang.Override
    public com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputActionOrBuilder
        getBuiltinUserInputActionOrBuilder() {
      if ((actionCase_ == 7) && (builtinUserInputActionBuilder_ != null)) {
        return builtinUserInputActionBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 7) {
          return (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_;
        }
        return com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
            .getDefaultInstance();
      }
    }

    /**
     *
     *
     * <pre>
     * Action implemented and performed in (your) third-party application.
     * The application needs to show an additional content and input form to the
     * business as specified for given action. They can trigger the action only
     * when they provided all required inputs.
     * </pre>
     *
     * <code>
     * .google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction builtin_user_input_action = 7;
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction,
            com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction.Builder,
            com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputActionOrBuilder>
        getBuiltinUserInputActionFieldBuilder() {
      if (builtinUserInputActionBuilder_ == null) {
        if (!(actionCase_ == 7)) {
          action_ =
              com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction
                  .getDefaultInstance();
        }
        builtinUserInputActionBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction,
                com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction.Builder,
                com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputActionOrBuilder>(
                (com.google.shopping.merchant.issueresolution.v1.BuiltInUserInputAction) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 7;
      onChanged();
      return builtinUserInputActionBuilder_;
    }

    private java.lang.Object buttonLabel_ = "";

    /**
     *
     *
     * <pre>
     * Label of the action button.
     * </pre>
     *
     * <code>string button_label = 4;</code>
     *
     * @return The buttonLabel.
     */
    public java.lang.String getButtonLabel() {
      java.lang.Object ref = buttonLabel_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        buttonLabel_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Label of the action button.
     * </pre>
     *
     * <code>string button_label = 4;</code>
     *
     * @return The bytes for buttonLabel.
     */
    public com.google.protobuf.ByteString getButtonLabelBytes() {
      java.lang.Object ref = buttonLabel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        buttonLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     *
     *
     * <pre>
     * Label of the action button.
     * </pre>
     *
     * <code>string button_label = 4;</code>
     *
     * @param value The buttonLabel to set.
     * @return This builder for chaining.
     */
    public Builder setButtonLabel(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      buttonLabel_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Label of the action button.
     * </pre>
     *
     * <code>string button_label = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearButtonLabel() {
      buttonLabel_ = getDefaultInstance().getButtonLabel();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Label of the action button.
     * </pre>
     *
     * <code>string button_label = 4;</code>
     *
     * @param value The bytes for buttonLabel to set.
     * @return This builder for chaining.
     */
    public Builder setButtonLabelBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      buttonLabel_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private boolean isAvailable_;

    /**
     *
     *
     * <pre>
     * Controlling whether the button is active or disabled. The value is 'false'
     * when the action was already requested or is not available. If the action is
     * not available then a
     * [reason][google.shopping.merchant.issueresolution.v1.Action.reasons] will
     * be present. If (your) third-party application shows a disabled button for
     * action that is not available, then it should also show reasons.
     * </pre>
     *
     * <code>bool is_available = 5;</code>
     *
     * @return The isAvailable.
     */
    @java.lang.Override
    public boolean getIsAvailable() {
      return isAvailable_;
    }

    /**
     *
     *
     * <pre>
     * Controlling whether the button is active or disabled. The value is 'false'
     * when the action was already requested or is not available. If the action is
     * not available then a
     * [reason][google.shopping.merchant.issueresolution.v1.Action.reasons] will
     * be present. If (your) third-party application shows a disabled button for
     * action that is not available, then it should also show reasons.
     * </pre>
     *
     * <code>bool is_available = 5;</code>
     *
     * @param value The isAvailable to set.
     * @return This builder for chaining.
     */
    public Builder setIsAvailable(boolean value) {

      isAvailable_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Controlling whether the button is active or disabled. The value is 'false'
     * when the action was already requested or is not available. If the action is
     * not available then a
     * [reason][google.shopping.merchant.issueresolution.v1.Action.reasons] will
     * be present. If (your) third-party application shows a disabled button for
     * action that is not available, then it should also show reasons.
     * </pre>
     *
     * <code>bool is_available = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearIsAvailable() {
      bitField0_ = (bitField0_ & ~0x00000010);
      isAvailable_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.google.shopping.merchant.issueresolution.v1.Action.Reason> reasons_ =
        java.util.Collections.emptyList();

    private void ensureReasonsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        reasons_ =
            new java.util.ArrayList<com.google.shopping.merchant.issueresolution.v1.Action.Reason>(
                reasons_);
        bitField0_ |= 0x00000020;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.Action.Reason,
            com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder,
            com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder>
        reasonsBuilder_;

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public java.util.List<com.google.shopping.merchant.issueresolution.v1.Action.Reason>
        getReasonsList() {
      if (reasonsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(reasons_);
      } else {
        return reasonsBuilder_.getMessageList();
      }
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public int getReasonsCount() {
      if (reasonsBuilder_ == null) {
        return reasons_.size();
      } else {
        return reasonsBuilder_.getCount();
      }
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public com.google.shopping.merchant.issueresolution.v1.Action.Reason getReasons(int index) {
      if (reasonsBuilder_ == null) {
        return reasons_.get(index);
      } else {
        return reasonsBuilder_.getMessage(index);
      }
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder setReasons(
        int index, com.google.shopping.merchant.issueresolution.v1.Action.Reason value) {
      if (reasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReasonsIsMutable();
        reasons_.set(index, value);
        onChanged();
      } else {
        reasonsBuilder_.setMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder setReasons(
        int index,
        com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder builderForValue) {
      if (reasonsBuilder_ == null) {
        ensureReasonsIsMutable();
        reasons_.set(index, builderForValue.build());
        onChanged();
      } else {
        reasonsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder addReasons(com.google.shopping.merchant.issueresolution.v1.Action.Reason value) {
      if (reasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReasonsIsMutable();
        reasons_.add(value);
        onChanged();
      } else {
        reasonsBuilder_.addMessage(value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder addReasons(
        int index, com.google.shopping.merchant.issueresolution.v1.Action.Reason value) {
      if (reasonsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReasonsIsMutable();
        reasons_.add(index, value);
        onChanged();
      } else {
        reasonsBuilder_.addMessage(index, value);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder addReasons(
        com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder builderForValue) {
      if (reasonsBuilder_ == null) {
        ensureReasonsIsMutable();
        reasons_.add(builderForValue.build());
        onChanged();
      } else {
        reasonsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder addReasons(
        int index,
        com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder builderForValue) {
      if (reasonsBuilder_ == null) {
        ensureReasonsIsMutable();
        reasons_.add(index, builderForValue.build());
        onChanged();
      } else {
        reasonsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder addAllReasons(
        java.lang.Iterable<? extends com.google.shopping.merchant.issueresolution.v1.Action.Reason>
            values) {
      if (reasonsBuilder_ == null) {
        ensureReasonsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, reasons_);
        onChanged();
      } else {
        reasonsBuilder_.addAllMessages(values);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder clearReasons() {
      if (reasonsBuilder_ == null) {
        reasons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        reasonsBuilder_.clear();
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public Builder removeReasons(int index) {
      if (reasonsBuilder_ == null) {
        ensureReasonsIsMutable();
        reasons_.remove(index);
        onChanged();
      } else {
        reasonsBuilder_.remove(index);
      }
      return this;
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder getReasonsBuilder(
        int index) {
      return getReasonsFieldBuilder().getBuilder(index);
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder
        getReasonsOrBuilder(int index) {
      if (reasonsBuilder_ == null) {
        return reasons_.get(index);
      } else {
        return reasonsBuilder_.getMessageOrBuilder(index);
      }
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public java.util.List<
            ? extends com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder>
        getReasonsOrBuilderList() {
      if (reasonsBuilder_ != null) {
        return reasonsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(reasons_);
      }
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder
        addReasonsBuilder() {
      return getReasonsFieldBuilder()
          .addBuilder(
              com.google.shopping.merchant.issueresolution.v1.Action.Reason.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder addReasonsBuilder(
        int index) {
      return getReasonsFieldBuilder()
          .addBuilder(
              index,
              com.google.shopping.merchant.issueresolution.v1.Action.Reason.getDefaultInstance());
    }

    /**
     *
     *
     * <pre>
     * List of reasons why the action is not available. The list of reasons is
     * empty if the action is available. If there is only one reason, it can be
     * displayed next to the disabled button. If there are more reasons, all of
     * them should be displayed, for example in a pop-up dialog.
     * </pre>
     *
     * <code>repeated .google.shopping.merchant.issueresolution.v1.Action.Reason reasons = 6;</code>
     */
    public java.util.List<com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder>
        getReasonsBuilderList() {
      return getReasonsFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.shopping.merchant.issueresolution.v1.Action.Reason,
            com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder,
            com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder>
        getReasonsFieldBuilder() {
      if (reasonsBuilder_ == null) {
        reasonsBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.shopping.merchant.issueresolution.v1.Action.Reason,
                com.google.shopping.merchant.issueresolution.v1.Action.Reason.Builder,
                com.google.shopping.merchant.issueresolution.v1.Action.ReasonOrBuilder>(
                reasons_, ((bitField0_ & 0x00000020) != 0), getParentForChildren(), isClean());
        reasons_ = null;
      }
      return reasonsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.shopping.merchant.issueresolution.v1.Action)
  }

  // @@protoc_insertion_point(class_scope:google.shopping.merchant.issueresolution.v1.Action)
  private static final com.google.shopping.merchant.issueresolution.v1.Action DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.shopping.merchant.issueresolution.v1.Action();
  }

  public static com.google.shopping.merchant.issueresolution.v1.Action getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Action> PARSER =
      new com.google.protobuf.AbstractParser<Action>() {
        @java.lang.Override
        public Action parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<Action> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Action> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.shopping.merchant.issueresolution.v1.Action getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
