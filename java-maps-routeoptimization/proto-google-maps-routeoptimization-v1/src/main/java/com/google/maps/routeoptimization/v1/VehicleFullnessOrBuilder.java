/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routeoptimization/v1/route_optimization_service.proto

// Protobuf Java Version: 3.25.8
package com.google.maps.routeoptimization.v1;

public interface VehicleFullnessOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.routeoptimization.v1.VehicleFullness)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Maximum of all other fields in this message.
   * </pre>
   *
   * <code>optional double max_fullness = 1;</code>
   *
   * @return Whether the maxFullness field is set.
   */
  boolean hasMaxFullness();

  /**
   *
   *
   * <pre>
   * Maximum of all other fields in this message.
   * </pre>
   *
   * <code>optional double max_fullness = 1;</code>
   *
   * @return The maxFullness.
   */
  double getMaxFullness();

  /**
   *
   *
   * <pre>
   * The ratio between
   * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
   * and
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
   * If
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double distance = 2;</code>
   *
   * @return Whether the distance field is set.
   */
  boolean hasDistance();

  /**
   *
   *
   * <pre>
   * The ratio between
   * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
   * and
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
   * If
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double distance = 2;</code>
   *
   * @return The distance.
   */
  double getDistance();

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
   * If
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double travel_duration = 3;</code>
   *
   * @return Whether the travelDuration field is set.
   */
  boolean hasTravelDuration();

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
   * If
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double travel_duration = 3;</code>
   *
   * @return The travelDuration.
   */
  double getTravelDuration();

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.total_duration_seconds][] and
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
   * If
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double active_duration = 4;</code>
   *
   * @return Whether the activeDuration field is set.
   */
  boolean hasActiveDuration();

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.total_duration_seconds][] and
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
   * If
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double active_duration = 4;</code>
   *
   * @return The activeDuration.
   */
  double getActiveDuration();

  /**
   *
   *
   * <pre>
   * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
   * their respective
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
   * If all
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
   * fields are unset, this field will be unset.
   * </pre>
   *
   * <code>optional double max_load = 5;</code>
   *
   * @return Whether the maxLoad field is set.
   */
  boolean hasMaxLoad();

  /**
   *
   *
   * <pre>
   * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
   * their respective
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
   * If all
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
   * fields are unset, this field will be unset.
   * </pre>
   *
   * <code>optional double max_load = 5;</code>
   *
   * @return The maxLoad.
   */
  double getMaxLoad();

  /**
   *
   *
   * <pre>
   * The ratio (vehicle_end_time - vehicle_start_time) /
   * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
   * vehicle. If the denominator is not present, it uses
   * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
   * -
   * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
   * instead.
   * </pre>
   *
   * <code>optional double active_span = 6;</code>
   *
   * @return Whether the activeSpan field is set.
   */
  boolean hasActiveSpan();

  /**
   *
   *
   * <pre>
   * The ratio (vehicle_end_time - vehicle_start_time) /
   * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
   * vehicle. If the denominator is not present, it uses
   * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
   * -
   * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
   * instead.
   * </pre>
   *
   * <code>optional double active_span = 6;</code>
   *
   * @return The activeSpan.
   */
  double getActiveSpan();
}
