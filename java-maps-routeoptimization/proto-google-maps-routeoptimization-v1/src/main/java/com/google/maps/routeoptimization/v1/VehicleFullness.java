/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routeoptimization/v1/route_optimization_service.proto

// Protobuf Java Version: 3.25.8
package com.google.maps.routeoptimization.v1;

/**
 *
 *
 * <pre>
 * [VehicleFullness][google.maps.routeoptimization.v1.VehicleFullness] is a
 * metric which computes how full a vehicle is. Each
 * [VehicleFullness][google.maps.routeoptimization.v1.VehicleFullness] field is
 * between 0 and 1, computed as the ratio between a capped metric field (e.g.
 * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters])
 * and its related vehicle limit (e.g.
 * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]),
 * if it exists. Otherwise the fullness ratio stays unset. If the limit is 0,
 * the field is set to 1. Note: when a route is subject to traffic
 * infeasibilities, some raw fullness ratios might exceed 1.0, e.g. the vehicle
 * might exceed its distance limit. In these cases, we cap the fullness values
 * at 1.0.
 * </pre>
 *
 * Protobuf type {@code google.maps.routeoptimization.v1.VehicleFullness}
 */
public final class VehicleFullness extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.maps.routeoptimization.v1.VehicleFullness)
    VehicleFullnessOrBuilder {
  private static final long serialVersionUID = 0L;

  // Use VehicleFullness.newBuilder() to construct.
  private VehicleFullness(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private VehicleFullness() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new VehicleFullness();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.maps.routeoptimization.v1.RouteOptimizationServiceProto
        .internal_static_google_maps_routeoptimization_v1_VehicleFullness_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.maps.routeoptimization.v1.RouteOptimizationServiceProto
        .internal_static_google_maps_routeoptimization_v1_VehicleFullness_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.maps.routeoptimization.v1.VehicleFullness.class,
            com.google.maps.routeoptimization.v1.VehicleFullness.Builder.class);
  }

  private int bitField0_;
  public static final int MAX_FULLNESS_FIELD_NUMBER = 1;
  private double maxFullness_ = 0D;

  /**
   *
   *
   * <pre>
   * Maximum of all other fields in this message.
   * </pre>
   *
   * <code>optional double max_fullness = 1;</code>
   *
   * @return Whether the maxFullness field is set.
   */
  @java.lang.Override
  public boolean hasMaxFullness() {
    return ((bitField0_ & 0x00000001) != 0);
  }

  /**
   *
   *
   * <pre>
   * Maximum of all other fields in this message.
   * </pre>
   *
   * <code>optional double max_fullness = 1;</code>
   *
   * @return The maxFullness.
   */
  @java.lang.Override
  public double getMaxFullness() {
    return maxFullness_;
  }

  public static final int DISTANCE_FIELD_NUMBER = 2;
  private double distance_ = 0D;

  /**
   *
   *
   * <pre>
   * The ratio between
   * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
   * and
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
   * If
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double distance = 2;</code>
   *
   * @return Whether the distance field is set.
   */
  @java.lang.Override
  public boolean hasDistance() {
    return ((bitField0_ & 0x00000002) != 0);
  }

  /**
   *
   *
   * <pre>
   * The ratio between
   * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
   * and
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
   * If
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double distance = 2;</code>
   *
   * @return The distance.
   */
  @java.lang.Override
  public double getDistance() {
    return distance_;
  }

  public static final int TRAVEL_DURATION_FIELD_NUMBER = 3;
  private double travelDuration_ = 0D;

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
   * If
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double travel_duration = 3;</code>
   *
   * @return Whether the travelDuration field is set.
   */
  @java.lang.Override
  public boolean hasTravelDuration() {
    return ((bitField0_ & 0x00000004) != 0);
  }

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
   * If
   * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double travel_duration = 3;</code>
   *
   * @return The travelDuration.
   */
  @java.lang.Override
  public double getTravelDuration() {
    return travelDuration_;
  }

  public static final int ACTIVE_DURATION_FIELD_NUMBER = 4;
  private double activeDuration_ = 0D;

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.total_duration_seconds][] and
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
   * If
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double active_duration = 4;</code>
   *
   * @return Whether the activeDuration field is set.
   */
  @java.lang.Override
  public boolean hasActiveDuration() {
    return ((bitField0_ & 0x00000008) != 0);
  }

  /**
   *
   *
   * <pre>
   * The ratio between [AggregatedMetrics.total_duration_seconds][] and
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
   * If
   * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
   * is unset, this field will be unset.
   * </pre>
   *
   * <code>optional double active_duration = 4;</code>
   *
   * @return The activeDuration.
   */
  @java.lang.Override
  public double getActiveDuration() {
    return activeDuration_;
  }

  public static final int MAX_LOAD_FIELD_NUMBER = 5;
  private double maxLoad_ = 0D;

  /**
   *
   *
   * <pre>
   * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
   * their respective
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
   * If all
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
   * fields are unset, this field will be unset.
   * </pre>
   *
   * <code>optional double max_load = 5;</code>
   *
   * @return Whether the maxLoad field is set.
   */
  @java.lang.Override
  public boolean hasMaxLoad() {
    return ((bitField0_ & 0x00000010) != 0);
  }

  /**
   *
   *
   * <pre>
   * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
   * their respective
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
   * If all
   * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
   * fields are unset, this field will be unset.
   * </pre>
   *
   * <code>optional double max_load = 5;</code>
   *
   * @return The maxLoad.
   */
  @java.lang.Override
  public double getMaxLoad() {
    return maxLoad_;
  }

  public static final int ACTIVE_SPAN_FIELD_NUMBER = 6;
  private double activeSpan_ = 0D;

  /**
   *
   *
   * <pre>
   * The ratio (vehicle_end_time - vehicle_start_time) /
   * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
   * vehicle. If the denominator is not present, it uses
   * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
   * -
   * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
   * instead.
   * </pre>
   *
   * <code>optional double active_span = 6;</code>
   *
   * @return Whether the activeSpan field is set.
   */
  @java.lang.Override
  public boolean hasActiveSpan() {
    return ((bitField0_ & 0x00000020) != 0);
  }

  /**
   *
   *
   * <pre>
   * The ratio (vehicle_end_time - vehicle_start_time) /
   * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
   * vehicle. If the denominator is not present, it uses
   * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
   * -
   * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
   * instead.
   * </pre>
   *
   * <code>optional double active_span = 6;</code>
   *
   * @return The activeSpan.
   */
  @java.lang.Override
  public double getActiveSpan() {
    return activeSpan_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeDouble(1, maxFullness_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeDouble(2, distance_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeDouble(3, travelDuration_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeDouble(4, activeDuration_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeDouble(5, maxLoad_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeDouble(6, activeSpan_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(1, maxFullness_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, distance_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, travelDuration_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(4, activeDuration_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(5, maxLoad_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(6, activeSpan_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.maps.routeoptimization.v1.VehicleFullness)) {
      return super.equals(obj);
    }
    com.google.maps.routeoptimization.v1.VehicleFullness other =
        (com.google.maps.routeoptimization.v1.VehicleFullness) obj;

    if (hasMaxFullness() != other.hasMaxFullness()) return false;
    if (hasMaxFullness()) {
      if (java.lang.Double.doubleToLongBits(getMaxFullness())
          != java.lang.Double.doubleToLongBits(other.getMaxFullness())) return false;
    }
    if (hasDistance() != other.hasDistance()) return false;
    if (hasDistance()) {
      if (java.lang.Double.doubleToLongBits(getDistance())
          != java.lang.Double.doubleToLongBits(other.getDistance())) return false;
    }
    if (hasTravelDuration() != other.hasTravelDuration()) return false;
    if (hasTravelDuration()) {
      if (java.lang.Double.doubleToLongBits(getTravelDuration())
          != java.lang.Double.doubleToLongBits(other.getTravelDuration())) return false;
    }
    if (hasActiveDuration() != other.hasActiveDuration()) return false;
    if (hasActiveDuration()) {
      if (java.lang.Double.doubleToLongBits(getActiveDuration())
          != java.lang.Double.doubleToLongBits(other.getActiveDuration())) return false;
    }
    if (hasMaxLoad() != other.hasMaxLoad()) return false;
    if (hasMaxLoad()) {
      if (java.lang.Double.doubleToLongBits(getMaxLoad())
          != java.lang.Double.doubleToLongBits(other.getMaxLoad())) return false;
    }
    if (hasActiveSpan() != other.hasActiveSpan()) return false;
    if (hasActiveSpan()) {
      if (java.lang.Double.doubleToLongBits(getActiveSpan())
          != java.lang.Double.doubleToLongBits(other.getActiveSpan())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMaxFullness()) {
      hash = (37 * hash) + MAX_FULLNESS_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getMaxFullness()));
    }
    if (hasDistance()) {
      hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getDistance()));
    }
    if (hasTravelDuration()) {
      hash = (37 * hash) + TRAVEL_DURATION_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getTravelDuration()));
    }
    if (hasActiveDuration()) {
      hash = (37 * hash) + ACTIVE_DURATION_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getActiveDuration()));
    }
    if (hasMaxLoad()) {
      hash = (37 * hash) + MAX_LOAD_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getMaxLoad()));
    }
    if (hasActiveSpan()) {
      hash = (37 * hash) + ACTIVE_SPAN_FIELD_NUMBER;
      hash =
          (53 * hash)
              + com.google.protobuf.Internal.hashLong(
                  java.lang.Double.doubleToLongBits(getActiveSpan()));
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.maps.routeoptimization.v1.VehicleFullness prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /**
   *
   *
   * <pre>
   * [VehicleFullness][google.maps.routeoptimization.v1.VehicleFullness] is a
   * metric which computes how full a vehicle is. Each
   * [VehicleFullness][google.maps.routeoptimization.v1.VehicleFullness] field is
   * between 0 and 1, computed as the ratio between a capped metric field (e.g.
   * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters])
   * and its related vehicle limit (e.g.
   * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]),
   * if it exists. Otherwise the fullness ratio stays unset. If the limit is 0,
   * the field is set to 1. Note: when a route is subject to traffic
   * infeasibilities, some raw fullness ratios might exceed 1.0, e.g. the vehicle
   * might exceed its distance limit. In these cases, we cap the fullness values
   * at 1.0.
   * </pre>
   *
   * Protobuf type {@code google.maps.routeoptimization.v1.VehicleFullness}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.maps.routeoptimization.v1.VehicleFullness)
      com.google.maps.routeoptimization.v1.VehicleFullnessOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.maps.routeoptimization.v1.RouteOptimizationServiceProto
          .internal_static_google_maps_routeoptimization_v1_VehicleFullness_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.maps.routeoptimization.v1.RouteOptimizationServiceProto
          .internal_static_google_maps_routeoptimization_v1_VehicleFullness_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.maps.routeoptimization.v1.VehicleFullness.class,
              com.google.maps.routeoptimization.v1.VehicleFullness.Builder.class);
    }

    // Construct using com.google.maps.routeoptimization.v1.VehicleFullness.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      maxFullness_ = 0D;
      distance_ = 0D;
      travelDuration_ = 0D;
      activeDuration_ = 0D;
      maxLoad_ = 0D;
      activeSpan_ = 0D;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.maps.routeoptimization.v1.RouteOptimizationServiceProto
          .internal_static_google_maps_routeoptimization_v1_VehicleFullness_descriptor;
    }

    @java.lang.Override
    public com.google.maps.routeoptimization.v1.VehicleFullness getDefaultInstanceForType() {
      return com.google.maps.routeoptimization.v1.VehicleFullness.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.maps.routeoptimization.v1.VehicleFullness build() {
      com.google.maps.routeoptimization.v1.VehicleFullness result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.maps.routeoptimization.v1.VehicleFullness buildPartial() {
      com.google.maps.routeoptimization.v1.VehicleFullness result =
          new com.google.maps.routeoptimization.v1.VehicleFullness(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.maps.routeoptimization.v1.VehicleFullness result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.maxFullness_ = maxFullness_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.distance_ = distance_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.travelDuration_ = travelDuration_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.activeDuration_ = activeDuration_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.maxLoad_ = maxLoad_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.activeSpan_ = activeSpan_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.maps.routeoptimization.v1.VehicleFullness) {
        return mergeFrom((com.google.maps.routeoptimization.v1.VehicleFullness) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.maps.routeoptimization.v1.VehicleFullness other) {
      if (other == com.google.maps.routeoptimization.v1.VehicleFullness.getDefaultInstance())
        return this;
      if (other.hasMaxFullness()) {
        setMaxFullness(other.getMaxFullness());
      }
      if (other.hasDistance()) {
        setDistance(other.getDistance());
      }
      if (other.hasTravelDuration()) {
        setTravelDuration(other.getTravelDuration());
      }
      if (other.hasActiveDuration()) {
        setActiveDuration(other.getActiveDuration());
      }
      if (other.hasMaxLoad()) {
        setMaxLoad(other.getMaxLoad());
      }
      if (other.hasActiveSpan()) {
        setActiveSpan(other.getActiveSpan());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9:
              {
                maxFullness_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
            case 17:
              {
                distance_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
            case 25:
              {
                travelDuration_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
            case 33:
              {
                activeDuration_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
            case 41:
              {
                maxLoad_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
            case 49:
              {
                activeSpan_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private double maxFullness_;

    /**
     *
     *
     * <pre>
     * Maximum of all other fields in this message.
     * </pre>
     *
     * <code>optional double max_fullness = 1;</code>
     *
     * @return Whether the maxFullness field is set.
     */
    @java.lang.Override
    public boolean hasMaxFullness() {
      return ((bitField0_ & 0x00000001) != 0);
    }

    /**
     *
     *
     * <pre>
     * Maximum of all other fields in this message.
     * </pre>
     *
     * <code>optional double max_fullness = 1;</code>
     *
     * @return The maxFullness.
     */
    @java.lang.Override
    public double getMaxFullness() {
      return maxFullness_;
    }

    /**
     *
     *
     * <pre>
     * Maximum of all other fields in this message.
     * </pre>
     *
     * <code>optional double max_fullness = 1;</code>
     *
     * @param value The maxFullness to set.
     * @return This builder for chaining.
     */
    public Builder setMaxFullness(double value) {

      maxFullness_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Maximum of all other fields in this message.
     * </pre>
     *
     * <code>optional double max_fullness = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxFullness() {
      bitField0_ = (bitField0_ & ~0x00000001);
      maxFullness_ = 0D;
      onChanged();
      return this;
    }

    private double distance_;

    /**
     *
     *
     * <pre>
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     *
     * @return Whether the distance field is set.
     */
    @java.lang.Override
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000002) != 0);
    }

    /**
     *
     *
     * <pre>
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     *
     * @return The distance.
     */
    @java.lang.Override
    public double getDistance() {
      return distance_;
    }

    /**
     *
     *
     * <pre>
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     *
     * @param value The distance to set.
     * @return This builder for chaining.
     */
    public Builder setDistance(double value) {

      distance_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double distance = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearDistance() {
      bitField0_ = (bitField0_ & ~0x00000002);
      distance_ = 0D;
      onChanged();
      return this;
    }

    private double travelDuration_;

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double travel_duration = 3;</code>
     *
     * @return Whether the travelDuration field is set.
     */
    @java.lang.Override
    public boolean hasTravelDuration() {
      return ((bitField0_ & 0x00000004) != 0);
    }

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double travel_duration = 3;</code>
     *
     * @return The travelDuration.
     */
    @java.lang.Override
    public double getTravelDuration() {
      return travelDuration_;
    }

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double travel_duration = 3;</code>
     *
     * @param value The travelDuration to set.
     * @return This builder for chaining.
     */
    public Builder setTravelDuration(double value) {

      travelDuration_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double travel_duration = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTravelDuration() {
      bitField0_ = (bitField0_ & ~0x00000004);
      travelDuration_ = 0D;
      onChanged();
      return this;
    }

    private double activeDuration_;

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double active_duration = 4;</code>
     *
     * @return Whether the activeDuration field is set.
     */
    @java.lang.Override
    public boolean hasActiveDuration() {
      return ((bitField0_ & 0x00000008) != 0);
    }

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double active_duration = 4;</code>
     *
     * @return The activeDuration.
     */
    @java.lang.Override
    public double getActiveDuration() {
      return activeDuration_;
    }

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double active_duration = 4;</code>
     *
     * @param value The activeDuration to set.
     * @return This builder for chaining.
     */
    public Builder setActiveDuration(double value) {

      activeDuration_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     * </pre>
     *
     * <code>optional double active_duration = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearActiveDuration() {
      bitField0_ = (bitField0_ & ~0x00000008);
      activeDuration_ = 0D;
      onChanged();
      return this;
    }

    private double maxLoad_;

    /**
     *
     *
     * <pre>
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     * </pre>
     *
     * <code>optional double max_load = 5;</code>
     *
     * @return Whether the maxLoad field is set.
     */
    @java.lang.Override
    public boolean hasMaxLoad() {
      return ((bitField0_ & 0x00000010) != 0);
    }

    /**
     *
     *
     * <pre>
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     * </pre>
     *
     * <code>optional double max_load = 5;</code>
     *
     * @return The maxLoad.
     */
    @java.lang.Override
    public double getMaxLoad() {
      return maxLoad_;
    }

    /**
     *
     *
     * <pre>
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     * </pre>
     *
     * <code>optional double max_load = 5;</code>
     *
     * @param value The maxLoad to set.
     * @return This builder for chaining.
     */
    public Builder setMaxLoad(double value) {

      maxLoad_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     * </pre>
     *
     * <code>optional double max_load = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearMaxLoad() {
      bitField0_ = (bitField0_ & ~0x00000010);
      maxLoad_ = 0D;
      onChanged();
      return this;
    }

    private double activeSpan_;

    /**
     *
     *
     * <pre>
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     * </pre>
     *
     * <code>optional double active_span = 6;</code>
     *
     * @return Whether the activeSpan field is set.
     */
    @java.lang.Override
    public boolean hasActiveSpan() {
      return ((bitField0_ & 0x00000020) != 0);
    }

    /**
     *
     *
     * <pre>
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     * </pre>
     *
     * <code>optional double active_span = 6;</code>
     *
     * @return The activeSpan.
     */
    @java.lang.Override
    public double getActiveSpan() {
      return activeSpan_;
    }

    /**
     *
     *
     * <pre>
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     * </pre>
     *
     * <code>optional double active_span = 6;</code>
     *
     * @param value The activeSpan to set.
     * @return This builder for chaining.
     */
    public Builder setActiveSpan(double value) {

      activeSpan_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     * </pre>
     *
     * <code>optional double active_span = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearActiveSpan() {
      bitField0_ = (bitField0_ & ~0x00000020);
      activeSpan_ = 0D;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.maps.routeoptimization.v1.VehicleFullness)
  }

  // @@protoc_insertion_point(class_scope:google.maps.routeoptimization.v1.VehicleFullness)
  private static final com.google.maps.routeoptimization.v1.VehicleFullness DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.maps.routeoptimization.v1.VehicleFullness();
  }

  public static com.google.maps.routeoptimization.v1.VehicleFullness getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VehicleFullness> PARSER =
      new com.google.protobuf.AbstractParser<VehicleFullness>() {
        @java.lang.Override
        public VehicleFullness parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<VehicleFullness> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VehicleFullness> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.maps.routeoptimization.v1.VehicleFullness getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
