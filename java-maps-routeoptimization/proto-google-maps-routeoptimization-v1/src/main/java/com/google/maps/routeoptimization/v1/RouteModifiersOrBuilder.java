/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/routeoptimization/v1/route_optimization_service.proto

// Protobuf Java Version: 3.25.8
package com.google.maps.routeoptimization.v1;

public interface RouteModifiersOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.maps.routeoptimization.v1.RouteModifiers)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Specifies whether to avoid toll roads where reasonable. Preference will be
   * given to routes not containing toll roads. Applies only to motorized travel
   * modes.
   * </pre>
   *
   * <code>bool avoid_tolls = 2;</code>
   *
   * @return The avoidTolls.
   */
  boolean getAvoidTolls();

  /**
   *
   *
   * <pre>
   * Specifies whether to avoid highways where reasonable. Preference will be
   * given to routes not containing highways. Applies only to motorized travel
   * modes.
   * </pre>
   *
   * <code>bool avoid_highways = 3;</code>
   *
   * @return The avoidHighways.
   */
  boolean getAvoidHighways();

  /**
   *
   *
   * <pre>
   * Specifies whether to avoid ferries where reasonable. Preference will be
   * given to routes not containing travel by ferries. Applies only to motorized
   * travel modes.
   * </pre>
   *
   * <code>bool avoid_ferries = 4;</code>
   *
   * @return The avoidFerries.
   */
  boolean getAvoidFerries();

  /**
   *
   *
   * <pre>
   * Optional. Specifies whether to avoid navigating indoors where reasonable.
   * Preference will be given to routes not containing indoor navigation.
   * Applies only to the `WALKING` travel mode.
   * </pre>
   *
   * <code>bool avoid_indoor = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   *
   * @return The avoidIndoor.
   */
  boolean getAvoidIndoor();
}
