/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/securitycenter/v2/access.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.securitycenter.v2;

public interface ServiceAccountDelegationInfoOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.securitycenter.v2.ServiceAccountDelegationInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The email address of a Google account.
   * </pre>
   *
   * <code>string principal_email = 1;</code>
   *
   * @return The principalEmail.
   */
  java.lang.String getPrincipalEmail();
  /**
   *
   *
   * <pre>
   * The email address of a Google account.
   * </pre>
   *
   * <code>string principal_email = 1;</code>
   *
   * @return The bytes for principalEmail.
   */
  com.google.protobuf.ByteString getPrincipalEmailBytes();

  /**
   *
   *
   * <pre>
   * A string representing the principal_subject associated with the identity.
   * As compared to `principal_email`, supports principals that aren't
   * associated with email addresses, such as third party principals. For most
   * identities, the format will be `principal://iam.googleapis.com/{identity
   * pool name}/subjects/{subject}` except for some GKE identities
   * (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy
   * format `serviceAccount:{identity pool name}[{subject}]`
   * </pre>
   *
   * <code>string principal_subject = 2;</code>
   *
   * @return The principalSubject.
   */
  java.lang.String getPrincipalSubject();
  /**
   *
   *
   * <pre>
   * A string representing the principal_subject associated with the identity.
   * As compared to `principal_email`, supports principals that aren't
   * associated with email addresses, such as third party principals. For most
   * identities, the format will be `principal://iam.googleapis.com/{identity
   * pool name}/subjects/{subject}` except for some GKE identities
   * (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy
   * format `serviceAccount:{identity pool name}[{subject}]`
   * </pre>
   *
   * <code>string principal_subject = 2;</code>
   *
   * @return The bytes for principalSubject.
   */
  com.google.protobuf.ByteString getPrincipalSubjectBytes();
}
