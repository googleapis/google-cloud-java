/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/securitycenter/v2/securitycenter_service.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.securitycenter.v2;

/**
 *
 *
 * <pre>
 * Request message for grouping by findings.
 * </pre>
 *
 * Protobuf type {@code google.cloud.securitycenter.v2.GroupFindingsRequest}
 */
public final class GroupFindingsRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.securitycenter.v2.GroupFindingsRequest)
    GroupFindingsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use GroupFindingsRequest.newBuilder() to construct.
  private GroupFindingsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private GroupFindingsRequest() {
    parent_ = "";
    filter_ = "";
    groupBy_ = "";
    pageToken_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new GroupFindingsRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.securitycenter.v2.SecuritycenterServiceProto
        .internal_static_google_cloud_securitycenter_v2_GroupFindingsRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.securitycenter.v2.SecuritycenterServiceProto
        .internal_static_google_cloud_securitycenter_v2_GroupFindingsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.securitycenter.v2.GroupFindingsRequest.class,
            com.google.cloud.securitycenter.v2.GroupFindingsRequest.Builder.class);
  }

  public static final int PARENT_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object parent_ = "";
  /**
   *
   *
   * <pre>
   * Required. Name of the source to groupBy. If no location is specified,
   * finding is assumed to be in global.
   *  The following list shows some examples:
   *
   * + `organizations/[organization_id]/sources/[source_id]`
   * +
   * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   * + `folders/[folder_id]/sources/[source_id]`
   * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   * + `projects/[project_id]/sources/[source_id]`
   * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   * To groupBy across all sources provide a source_id of `-`. The following
   * list shows some examples:
   *
   * + `organizations/{organization_id}/sources/-`
   * + `organizations/{organization_id}/sources/-/locations/[location_id]`
   * + `folders/{folder_id}/sources/-`
   * + `folders/{folder_id}/sources/-/locations/[location_id]`
   * + `projects/{project_id}/sources/-`
   * + `projects/{project_id}/sources/-/locations/[location_id]`
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. Name of the source to groupBy. If no location is specified,
   * finding is assumed to be in global.
   *  The following list shows some examples:
   *
   * + `organizations/[organization_id]/sources/[source_id]`
   * +
   * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   * + `folders/[folder_id]/sources/[source_id]`
   * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   * + `projects/[project_id]/sources/[source_id]`
   * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   * To groupBy across all sources provide a source_id of `-`. The following
   * list shows some examples:
   *
   * + `organizations/{organization_id}/sources/-`
   * + `organizations/{organization_id}/sources/-/locations/[location_id]`
   * + `folders/{folder_id}/sources/-`
   * + `folders/{folder_id}/sources/-/locations/[location_id]`
   * + `projects/{project_id}/sources/-`
   * + `projects/{project_id}/sources/-/locations/[location_id]`
   * </pre>
   *
   * <code>
   * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTER_FIELD_NUMBER = 2;

  @SuppressWarnings("serial")
  private volatile java.lang.Object filter_ = "";
  /**
   *
   *
   * <pre>
   * Expression that defines the filter to apply across findings.
   * The expression is a list of one or more restrictions combined via logical
   * operators `AND` and `OR`.
   * Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
   * character in front of them to indicate negation. Examples include:
   *
   *  * name
   *  * security_marks.marks.marka
   *
   * The supported operators are:
   *
   * * `=` for all value types.
   * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
   * * `:`, meaning substring matching, for strings.
   *
   * The supported value types are:
   *
   * * string literals in quotes.
   * * integer literals without quotes.
   * * boolean literals `true` and `false` without quotes.
   *
   * The following field and operator combinations are supported:
   *
   * * name: `=`
   * * parent: `=`, `:`
   * * resource_name: `=`, `:`
   * * state: `=`, `:`
   * * category: `=`, `:`
   * * external_uri: `=`, `:`
   * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
   *
   *   Usage: This should be milliseconds since epoch or an RFC3339 string.
   *   Examples:
   *     `event_time = "2019-06-10T16:07:18-07:00"`
   *     `event_time = 1560208038000`
   *
   * * severity: `=`, `:`
   * * security_marks.marks: `=`, `:`
   * * resource:
   *   * resource.name: `=`, `:`
   *   * resource.parent_name: `=`, `:`
   *   * resource.parent_display_name: `=`, `:`
   *   * resource.project_name: `=`, `:`
   *   * resource.project_display_name: `=`, `:`
   *   * resource.type: `=`, `:`
   * </pre>
   *
   * <code>string filter = 2;</code>
   *
   * @return The filter.
   */
  @java.lang.Override
  public java.lang.String getFilter() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filter_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Expression that defines the filter to apply across findings.
   * The expression is a list of one or more restrictions combined via logical
   * operators `AND` and `OR`.
   * Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
   * character in front of them to indicate negation. Examples include:
   *
   *  * name
   *  * security_marks.marks.marka
   *
   * The supported operators are:
   *
   * * `=` for all value types.
   * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
   * * `:`, meaning substring matching, for strings.
   *
   * The supported value types are:
   *
   * * string literals in quotes.
   * * integer literals without quotes.
   * * boolean literals `true` and `false` without quotes.
   *
   * The following field and operator combinations are supported:
   *
   * * name: `=`
   * * parent: `=`, `:`
   * * resource_name: `=`, `:`
   * * state: `=`, `:`
   * * category: `=`, `:`
   * * external_uri: `=`, `:`
   * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
   *
   *   Usage: This should be milliseconds since epoch or an RFC3339 string.
   *   Examples:
   *     `event_time = "2019-06-10T16:07:18-07:00"`
   *     `event_time = 1560208038000`
   *
   * * severity: `=`, `:`
   * * security_marks.marks: `=`, `:`
   * * resource:
   *   * resource.name: `=`, `:`
   *   * resource.parent_name: `=`, `:`
   *   * resource.parent_display_name: `=`, `:`
   *   * resource.project_name: `=`, `:`
   *   * resource.project_display_name: `=`, `:`
   *   * resource.type: `=`, `:`
   * </pre>
   *
   * <code>string filter = 2;</code>
   *
   * @return The bytes for filter.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getFilterBytes() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      filter_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_BY_FIELD_NUMBER = 3;

  @SuppressWarnings("serial")
  private volatile java.lang.Object groupBy_ = "";
  /**
   *
   *
   * <pre>
   * Required. Expression that defines what assets fields to use for grouping.
   * The string value should follow SQL syntax: comma separated list of fields.
   * For example: "parent,resource_name".
   * </pre>
   *
   * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The groupBy.
   */
  @java.lang.Override
  public java.lang.String getGroupBy() {
    java.lang.Object ref = groupBy_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupBy_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. Expression that defines what assets fields to use for grouping.
   * The string value should follow SQL syntax: comma separated list of fields.
   * For example: "parent,resource_name".
   * </pre>
   *
   * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for groupBy.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getGroupByBytes() {
    java.lang.Object ref = groupBy_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      groupBy_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 7;

  @SuppressWarnings("serial")
  private volatile java.lang.Object pageToken_ = "";
  /**
   *
   *
   * <pre>
   * The value returned by the last `GroupFindingsResponse`; indicates
   * that this is a continuation of a prior `GroupFindings` call, and
   * that the system should return the next page of data.
   * </pre>
   *
   * <code>string page_token = 7;</code>
   *
   * @return The pageToken.
   */
  @java.lang.Override
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The value returned by the last `GroupFindingsResponse`; indicates
   * that this is a continuation of a prior `GroupFindings` call, and
   * that the system should return the next page of data.
   * </pre>
   *
   * <code>string page_token = 7;</code>
   *
   * @return The bytes for pageToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 8;
  private int pageSize_ = 0;
  /**
   *
   *
   * <pre>
   * The maximum number of results to return in a single response. Default is
   * 10, minimum is 1, maximum is 1000.
   * </pre>
   *
   * <code>int32 page_size = 8;</code>
   *
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, parent_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filter_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupBy_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, groupBy_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, pageToken_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(8, pageSize_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parent_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, parent_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filter_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filter_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupBy_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, groupBy_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(pageToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, pageToken_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(8, pageSize_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.securitycenter.v2.GroupFindingsRequest)) {
      return super.equals(obj);
    }
    com.google.cloud.securitycenter.v2.GroupFindingsRequest other =
        (com.google.cloud.securitycenter.v2.GroupFindingsRequest) obj;

    if (!getParent().equals(other.getParent())) return false;
    if (!getFilter().equals(other.getFilter())) return false;
    if (!getGroupBy().equals(other.getGroupBy())) return false;
    if (!getPageToken().equals(other.getPageToken())) return false;
    if (getPageSize() != other.getPageSize()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PARENT_FIELD_NUMBER;
    hash = (53 * hash) + getParent().hashCode();
    hash = (37 * hash) + FILTER_FIELD_NUMBER;
    hash = (53 * hash) + getFilter().hashCode();
    hash = (37 * hash) + GROUP_BY_FIELD_NUMBER;
    hash = (53 * hash) + getGroupBy().hashCode();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.securitycenter.v2.GroupFindingsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Request message for grouping by findings.
   * </pre>
   *
   * Protobuf type {@code google.cloud.securitycenter.v2.GroupFindingsRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.securitycenter.v2.GroupFindingsRequest)
      com.google.cloud.securitycenter.v2.GroupFindingsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.securitycenter.v2.SecuritycenterServiceProto
          .internal_static_google_cloud_securitycenter_v2_GroupFindingsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.securitycenter.v2.SecuritycenterServiceProto
          .internal_static_google_cloud_securitycenter_v2_GroupFindingsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.securitycenter.v2.GroupFindingsRequest.class,
              com.google.cloud.securitycenter.v2.GroupFindingsRequest.Builder.class);
    }

    // Construct using com.google.cloud.securitycenter.v2.GroupFindingsRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      parent_ = "";
      filter_ = "";
      groupBy_ = "";
      pageToken_ = "";
      pageSize_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.securitycenter.v2.SecuritycenterServiceProto
          .internal_static_google_cloud_securitycenter_v2_GroupFindingsRequest_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.securitycenter.v2.GroupFindingsRequest getDefaultInstanceForType() {
      return com.google.cloud.securitycenter.v2.GroupFindingsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.securitycenter.v2.GroupFindingsRequest build() {
      com.google.cloud.securitycenter.v2.GroupFindingsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.securitycenter.v2.GroupFindingsRequest buildPartial() {
      com.google.cloud.securitycenter.v2.GroupFindingsRequest result =
          new com.google.cloud.securitycenter.v2.GroupFindingsRequest(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.cloud.securitycenter.v2.GroupFindingsRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.parent_ = parent_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.filter_ = filter_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.groupBy_ = groupBy_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.pageToken_ = pageToken_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.pageSize_ = pageSize_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.securitycenter.v2.GroupFindingsRequest) {
        return mergeFrom((com.google.cloud.securitycenter.v2.GroupFindingsRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.securitycenter.v2.GroupFindingsRequest other) {
      if (other == com.google.cloud.securitycenter.v2.GroupFindingsRequest.getDefaultInstance())
        return this;
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getFilter().isEmpty()) {
        filter_ = other.filter_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getGroupBy().isEmpty()) {
        groupBy_ = other.groupBy_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                parent_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                filter_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            case 26:
              {
                groupBy_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
            case 58:
              {
                pageToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 58
            case 64:
              {
                pageSize_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 64
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object parent_ = "";
    /**
     *
     *
     * <pre>
     * Required. Name of the source to groupBy. If no location is specified,
     * finding is assumed to be in global.
     *  The following list shows some examples:
     *
     * + `organizations/[organization_id]/sources/[source_id]`
     * +
     * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
     * + `folders/[folder_id]/sources/[source_id]`
     * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
     * + `projects/[project_id]/sources/[source_id]`
     * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
     *
     * To groupBy across all sources provide a source_id of `-`. The following
     * list shows some examples:
     *
     * + `organizations/{organization_id}/sources/-`
     * + `organizations/{organization_id}/sources/-/locations/[location_id]`
     * + `folders/{folder_id}/sources/-`
     * + `folders/{folder_id}/sources/-/locations/[location_id]`
     * + `projects/{project_id}/sources/-`
     * + `projects/{project_id}/sources/-/locations/[location_id]`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The parent.
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Name of the source to groupBy. If no location is specified,
     * finding is assumed to be in global.
     *  The following list shows some examples:
     *
     * + `organizations/[organization_id]/sources/[source_id]`
     * +
     * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
     * + `folders/[folder_id]/sources/[source_id]`
     * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
     * + `projects/[project_id]/sources/[source_id]`
     * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
     *
     * To groupBy across all sources provide a source_id of `-`. The following
     * list shows some examples:
     *
     * + `organizations/{organization_id}/sources/-`
     * + `organizations/{organization_id}/sources/-/locations/[location_id]`
     * + `folders/{folder_id}/sources/-`
     * + `folders/{folder_id}/sources/-/locations/[location_id]`
     * + `projects/{project_id}/sources/-`
     * + `projects/{project_id}/sources/-/locations/[location_id]`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for parent.
     */
    public com.google.protobuf.ByteString getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Name of the source to groupBy. If no location is specified,
     * finding is assumed to be in global.
     *  The following list shows some examples:
     *
     * + `organizations/[organization_id]/sources/[source_id]`
     * +
     * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
     * + `folders/[folder_id]/sources/[source_id]`
     * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
     * + `projects/[project_id]/sources/[source_id]`
     * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
     *
     * To groupBy across all sources provide a source_id of `-`. The following
     * list shows some examples:
     *
     * + `organizations/{organization_id}/sources/-`
     * + `organizations/{organization_id}/sources/-/locations/[location_id]`
     * + `folders/{folder_id}/sources/-`
     * + `folders/{folder_id}/sources/-/locations/[location_id]`
     * + `projects/{project_id}/sources/-`
     * + `projects/{project_id}/sources/-/locations/[location_id]`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parent_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Name of the source to groupBy. If no location is specified,
     * finding is assumed to be in global.
     *  The following list shows some examples:
     *
     * + `organizations/[organization_id]/sources/[source_id]`
     * +
     * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
     * + `folders/[folder_id]/sources/[source_id]`
     * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
     * + `projects/[project_id]/sources/[source_id]`
     * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
     *
     * To groupBy across all sources provide a source_id of `-`. The following
     * list shows some examples:
     *
     * + `organizations/{organization_id}/sources/-`
     * + `organizations/{organization_id}/sources/-/locations/[location_id]`
     * + `folders/{folder_id}/sources/-`
     * + `folders/{folder_id}/sources/-/locations/[location_id]`
     * + `projects/{project_id}/sources/-`
     * + `projects/{project_id}/sources/-/locations/[location_id]`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      parent_ = getDefaultInstance().getParent();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Name of the source to groupBy. If no location is specified,
     * finding is assumed to be in global.
     *  The following list shows some examples:
     *
     * + `organizations/[organization_id]/sources/[source_id]`
     * +
     * `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
     * + `folders/[folder_id]/sources/[source_id]`
     * + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
     * + `projects/[project_id]/sources/[source_id]`
     * + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
     *
     * To groupBy across all sources provide a source_id of `-`. The following
     * list shows some examples:
     *
     * + `organizations/{organization_id}/sources/-`
     * + `organizations/{organization_id}/sources/-/locations/[location_id]`
     * + `folders/{folder_id}/sources/-`
     * + `folders/{folder_id}/sources/-/locations/[location_id]`
     * + `projects/{project_id}/sources/-`
     * + `projects/{project_id}/sources/-/locations/[location_id]`
     * </pre>
     *
     * <code>
     * string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      parent_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object filter_ = "";
    /**
     *
     *
     * <pre>
     * Expression that defines the filter to apply across findings.
     * The expression is a list of one or more restrictions combined via logical
     * operators `AND` and `OR`.
     * Parentheses are supported, and `OR` has higher precedence than `AND`.
     *
     * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
     * character in front of them to indicate negation. Examples include:
     *
     *  * name
     *  * security_marks.marks.marka
     *
     * The supported operators are:
     *
     * * `=` for all value types.
     * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
     * * `:`, meaning substring matching, for strings.
     *
     * The supported value types are:
     *
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals `true` and `false` without quotes.
     *
     * The following field and operator combinations are supported:
     *
     * * name: `=`
     * * parent: `=`, `:`
     * * resource_name: `=`, `:`
     * * state: `=`, `:`
     * * category: `=`, `:`
     * * external_uri: `=`, `:`
     * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
     *
     *   Usage: This should be milliseconds since epoch or an RFC3339 string.
     *   Examples:
     *     `event_time = "2019-06-10T16:07:18-07:00"`
     *     `event_time = 1560208038000`
     *
     * * severity: `=`, `:`
     * * security_marks.marks: `=`, `:`
     * * resource:
     *   * resource.name: `=`, `:`
     *   * resource.parent_name: `=`, `:`
     *   * resource.parent_display_name: `=`, `:`
     *   * resource.project_name: `=`, `:`
     *   * resource.project_display_name: `=`, `:`
     *   * resource.type: `=`, `:`
     * </pre>
     *
     * <code>string filter = 2;</code>
     *
     * @return The filter.
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Expression that defines the filter to apply across findings.
     * The expression is a list of one or more restrictions combined via logical
     * operators `AND` and `OR`.
     * Parentheses are supported, and `OR` has higher precedence than `AND`.
     *
     * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
     * character in front of them to indicate negation. Examples include:
     *
     *  * name
     *  * security_marks.marks.marka
     *
     * The supported operators are:
     *
     * * `=` for all value types.
     * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
     * * `:`, meaning substring matching, for strings.
     *
     * The supported value types are:
     *
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals `true` and `false` without quotes.
     *
     * The following field and operator combinations are supported:
     *
     * * name: `=`
     * * parent: `=`, `:`
     * * resource_name: `=`, `:`
     * * state: `=`, `:`
     * * category: `=`, `:`
     * * external_uri: `=`, `:`
     * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
     *
     *   Usage: This should be milliseconds since epoch or an RFC3339 string.
     *   Examples:
     *     `event_time = "2019-06-10T16:07:18-07:00"`
     *     `event_time = 1560208038000`
     *
     * * severity: `=`, `:`
     * * security_marks.marks: `=`, `:`
     * * resource:
     *   * resource.name: `=`, `:`
     *   * resource.parent_name: `=`, `:`
     *   * resource.parent_display_name: `=`, `:`
     *   * resource.project_name: `=`, `:`
     *   * resource.project_display_name: `=`, `:`
     *   * resource.type: `=`, `:`
     * </pre>
     *
     * <code>string filter = 2;</code>
     *
     * @return The bytes for filter.
     */
    public com.google.protobuf.ByteString getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Expression that defines the filter to apply across findings.
     * The expression is a list of one or more restrictions combined via logical
     * operators `AND` and `OR`.
     * Parentheses are supported, and `OR` has higher precedence than `AND`.
     *
     * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
     * character in front of them to indicate negation. Examples include:
     *
     *  * name
     *  * security_marks.marks.marka
     *
     * The supported operators are:
     *
     * * `=` for all value types.
     * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
     * * `:`, meaning substring matching, for strings.
     *
     * The supported value types are:
     *
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals `true` and `false` without quotes.
     *
     * The following field and operator combinations are supported:
     *
     * * name: `=`
     * * parent: `=`, `:`
     * * resource_name: `=`, `:`
     * * state: `=`, `:`
     * * category: `=`, `:`
     * * external_uri: `=`, `:`
     * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
     *
     *   Usage: This should be milliseconds since epoch or an RFC3339 string.
     *   Examples:
     *     `event_time = "2019-06-10T16:07:18-07:00"`
     *     `event_time = 1560208038000`
     *
     * * severity: `=`, `:`
     * * security_marks.marks: `=`, `:`
     * * resource:
     *   * resource.name: `=`, `:`
     *   * resource.parent_name: `=`, `:`
     *   * resource.parent_display_name: `=`, `:`
     *   * resource.project_name: `=`, `:`
     *   * resource.project_display_name: `=`, `:`
     *   * resource.type: `=`, `:`
     * </pre>
     *
     * <code>string filter = 2;</code>
     *
     * @param value The filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilter(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      filter_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Expression that defines the filter to apply across findings.
     * The expression is a list of one or more restrictions combined via logical
     * operators `AND` and `OR`.
     * Parentheses are supported, and `OR` has higher precedence than `AND`.
     *
     * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
     * character in front of them to indicate negation. Examples include:
     *
     *  * name
     *  * security_marks.marks.marka
     *
     * The supported operators are:
     *
     * * `=` for all value types.
     * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
     * * `:`, meaning substring matching, for strings.
     *
     * The supported value types are:
     *
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals `true` and `false` without quotes.
     *
     * The following field and operator combinations are supported:
     *
     * * name: `=`
     * * parent: `=`, `:`
     * * resource_name: `=`, `:`
     * * state: `=`, `:`
     * * category: `=`, `:`
     * * external_uri: `=`, `:`
     * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
     *
     *   Usage: This should be milliseconds since epoch or an RFC3339 string.
     *   Examples:
     *     `event_time = "2019-06-10T16:07:18-07:00"`
     *     `event_time = 1560208038000`
     *
     * * severity: `=`, `:`
     * * security_marks.marks: `=`, `:`
     * * resource:
     *   * resource.name: `=`, `:`
     *   * resource.parent_name: `=`, `:`
     *   * resource.parent_display_name: `=`, `:`
     *   * resource.project_name: `=`, `:`
     *   * resource.project_display_name: `=`, `:`
     *   * resource.type: `=`, `:`
     * </pre>
     *
     * <code>string filter = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFilter() {
      filter_ = getDefaultInstance().getFilter();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Expression that defines the filter to apply across findings.
     * The expression is a list of one or more restrictions combined via logical
     * operators `AND` and `OR`.
     * Parentheses are supported, and `OR` has higher precedence than `AND`.
     *
     * Restrictions have the form `&lt;field&gt; &lt;operator&gt; &lt;value&gt;` and may have a `-`
     * character in front of them to indicate negation. Examples include:
     *
     *  * name
     *  * security_marks.marks.marka
     *
     * The supported operators are:
     *
     * * `=` for all value types.
     * * `&gt;`, `&lt;`, `&gt;=`, `&lt;=` for integer values.
     * * `:`, meaning substring matching, for strings.
     *
     * The supported value types are:
     *
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals `true` and `false` without quotes.
     *
     * The following field and operator combinations are supported:
     *
     * * name: `=`
     * * parent: `=`, `:`
     * * resource_name: `=`, `:`
     * * state: `=`, `:`
     * * category: `=`, `:`
     * * external_uri: `=`, `:`
     * * event_time: `=`, `&gt;`, `&lt;`, `&gt;=`, `&lt;=`
     *
     *   Usage: This should be milliseconds since epoch or an RFC3339 string.
     *   Examples:
     *     `event_time = "2019-06-10T16:07:18-07:00"`
     *     `event_time = 1560208038000`
     *
     * * severity: `=`, `:`
     * * security_marks.marks: `=`, `:`
     * * resource:
     *   * resource.name: `=`, `:`
     *   * resource.parent_name: `=`, `:`
     *   * resource.parent_display_name: `=`, `:`
     *   * resource.project_name: `=`, `:`
     *   * resource.project_display_name: `=`, `:`
     *   * resource.type: `=`, `:`
     * </pre>
     *
     * <code>string filter = 2;</code>
     *
     * @param value The bytes for filter to set.
     * @return This builder for chaining.
     */
    public Builder setFilterBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      filter_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object groupBy_ = "";
    /**
     *
     *
     * <pre>
     * Required. Expression that defines what assets fields to use for grouping.
     * The string value should follow SQL syntax: comma separated list of fields.
     * For example: "parent,resource_name".
     * </pre>
     *
     * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The groupBy.
     */
    public java.lang.String getGroupBy() {
      java.lang.Object ref = groupBy_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupBy_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Expression that defines what assets fields to use for grouping.
     * The string value should follow SQL syntax: comma separated list of fields.
     * For example: "parent,resource_name".
     * </pre>
     *
     * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for groupBy.
     */
    public com.google.protobuf.ByteString getGroupByBytes() {
      java.lang.Object ref = groupBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        groupBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Expression that defines what assets fields to use for grouping.
     * The string value should follow SQL syntax: comma separated list of fields.
     * For example: "parent,resource_name".
     * </pre>
     *
     * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The groupBy to set.
     * @return This builder for chaining.
     */
    public Builder setGroupBy(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      groupBy_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Expression that defines what assets fields to use for grouping.
     * The string value should follow SQL syntax: comma separated list of fields.
     * For example: "parent,resource_name".
     * </pre>
     *
     * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearGroupBy() {
      groupBy_ = getDefaultInstance().getGroupBy();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Expression that defines what assets fields to use for grouping.
     * The string value should follow SQL syntax: comma separated list of fields.
     * For example: "parent,resource_name".
     * </pre>
     *
     * <code>string group_by = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for groupBy to set.
     * @return This builder for chaining.
     */
    public Builder setGroupByBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      groupBy_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     *
     *
     * <pre>
     * The value returned by the last `GroupFindingsResponse`; indicates
     * that this is a continuation of a prior `GroupFindings` call, and
     * that the system should return the next page of data.
     * </pre>
     *
     * <code>string page_token = 7;</code>
     *
     * @return The pageToken.
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The value returned by the last `GroupFindingsResponse`; indicates
     * that this is a continuation of a prior `GroupFindings` call, and
     * that the system should return the next page of data.
     * </pre>
     *
     * <code>string page_token = 7;</code>
     *
     * @return The bytes for pageToken.
     */
    public com.google.protobuf.ByteString getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The value returned by the last `GroupFindingsResponse`; indicates
     * that this is a continuation of a prior `GroupFindings` call, and
     * that the system should return the next page of data.
     * </pre>
     *
     * <code>string page_token = 7;</code>
     *
     * @param value The pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageToken(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pageToken_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value returned by the last `GroupFindingsResponse`; indicates
     * that this is a continuation of a prior `GroupFindings` call, and
     * that the system should return the next page of data.
     * </pre>
     *
     * <code>string page_token = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPageToken() {
      pageToken_ = getDefaultInstance().getPageToken();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The value returned by the last `GroupFindingsResponse`; indicates
     * that this is a continuation of a prior `GroupFindings` call, and
     * that the system should return the next page of data.
     * </pre>
     *
     * <code>string page_token = 7;</code>
     *
     * @param value The bytes for pageToken to set.
     * @return This builder for chaining.
     */
    public Builder setPageTokenBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      pageToken_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private int pageSize_;
    /**
     *
     *
     * <pre>
     * The maximum number of results to return in a single response. Default is
     * 10, minimum is 1, maximum is 1000.
     * </pre>
     *
     * <code>int32 page_size = 8;</code>
     *
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     *
     *
     * <pre>
     * The maximum number of results to return in a single response. Default is
     * 10, minimum is 1, maximum is 1000.
     * </pre>
     *
     * <code>int32 page_size = 8;</code>
     *
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {

      pageSize_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The maximum number of results to return in a single response. Default is
     * 10, minimum is 1, maximum is 1000.
     * </pre>
     *
     * <code>int32 page_size = 8;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      bitField0_ = (bitField0_ & ~0x00000010);
      pageSize_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.securitycenter.v2.GroupFindingsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.securitycenter.v2.GroupFindingsRequest)
  private static final com.google.cloud.securitycenter.v2.GroupFindingsRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.securitycenter.v2.GroupFindingsRequest();
  }

  public static com.google.cloud.securitycenter.v2.GroupFindingsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GroupFindingsRequest> PARSER =
      new com.google.protobuf.AbstractParser<GroupFindingsRequest>() {
        @java.lang.Override
        public GroupFindingsRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<GroupFindingsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GroupFindingsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.securitycenter.v2.GroupFindingsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
