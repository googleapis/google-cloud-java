/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/securitycenter/v2/ip_rules.proto

// Protobuf Java Version: 3.25.8
package com.google.cloud.securitycenter.v2;

public interface IpRulesOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.securitycenter.v2.IpRules)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The direction that the rule is applicable to, one of ingress or egress.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.IpRules.Direction direction = 1;</code>
   *
   * @return The enum numeric value on the wire for direction.
   */
  int getDirectionValue();

  /**
   *
   *
   * <pre>
   * The direction that the rule is applicable to, one of ingress or egress.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.IpRules.Direction direction = 1;</code>
   *
   * @return The direction.
   */
  com.google.cloud.securitycenter.v2.IpRules.Direction getDirection();

  /**
   *
   *
   * <pre>
   * Tuple with allowed rules.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.Allowed allowed = 2;</code>
   *
   * @return Whether the allowed field is set.
   */
  boolean hasAllowed();

  /**
   *
   *
   * <pre>
   * Tuple with allowed rules.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.Allowed allowed = 2;</code>
   *
   * @return The allowed.
   */
  com.google.cloud.securitycenter.v2.Allowed getAllowed();

  /**
   *
   *
   * <pre>
   * Tuple with allowed rules.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.Allowed allowed = 2;</code>
   */
  com.google.cloud.securitycenter.v2.AllowedOrBuilder getAllowedOrBuilder();

  /**
   *
   *
   * <pre>
   * Tuple with denied rules.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.Denied denied = 3;</code>
   *
   * @return Whether the denied field is set.
   */
  boolean hasDenied();

  /**
   *
   *
   * <pre>
   * Tuple with denied rules.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.Denied denied = 3;</code>
   *
   * @return The denied.
   */
  com.google.cloud.securitycenter.v2.Denied getDenied();

  /**
   *
   *
   * <pre>
   * Tuple with denied rules.
   * </pre>
   *
   * <code>.google.cloud.securitycenter.v2.Denied denied = 3;</code>
   */
  com.google.cloud.securitycenter.v2.DeniedOrBuilder getDeniedOrBuilder();

  /**
   *
   *
   * <pre>
   * If source IP ranges are specified, the firewall rule applies only to
   * traffic that has a source IP address in these ranges. These ranges must be
   * expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string source_ip_ranges = 4;</code>
   *
   * @return A list containing the sourceIpRanges.
   */
  java.util.List<java.lang.String> getSourceIpRangesList();

  /**
   *
   *
   * <pre>
   * If source IP ranges are specified, the firewall rule applies only to
   * traffic that has a source IP address in these ranges. These ranges must be
   * expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string source_ip_ranges = 4;</code>
   *
   * @return The count of sourceIpRanges.
   */
  int getSourceIpRangesCount();

  /**
   *
   *
   * <pre>
   * If source IP ranges are specified, the firewall rule applies only to
   * traffic that has a source IP address in these ranges. These ranges must be
   * expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string source_ip_ranges = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The sourceIpRanges at the given index.
   */
  java.lang.String getSourceIpRanges(int index);

  /**
   *
   *
   * <pre>
   * If source IP ranges are specified, the firewall rule applies only to
   * traffic that has a source IP address in these ranges. These ranges must be
   * expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string source_ip_ranges = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the sourceIpRanges at the given index.
   */
  com.google.protobuf.ByteString getSourceIpRangesBytes(int index);

  /**
   *
   *
   * <pre>
   * If destination IP ranges are specified, the firewall rule applies only to
   * traffic that has a destination IP address in these ranges. These ranges
   * must be expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string destination_ip_ranges = 5;</code>
   *
   * @return A list containing the destinationIpRanges.
   */
  java.util.List<java.lang.String> getDestinationIpRangesList();

  /**
   *
   *
   * <pre>
   * If destination IP ranges are specified, the firewall rule applies only to
   * traffic that has a destination IP address in these ranges. These ranges
   * must be expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string destination_ip_ranges = 5;</code>
   *
   * @return The count of destinationIpRanges.
   */
  int getDestinationIpRangesCount();

  /**
   *
   *
   * <pre>
   * If destination IP ranges are specified, the firewall rule applies only to
   * traffic that has a destination IP address in these ranges. These ranges
   * must be expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string destination_ip_ranges = 5;</code>
   *
   * @param index The index of the element to return.
   * @return The destinationIpRanges at the given index.
   */
  java.lang.String getDestinationIpRanges(int index);

  /**
   *
   *
   * <pre>
   * If destination IP ranges are specified, the firewall rule applies only to
   * traffic that has a destination IP address in these ranges. These ranges
   * must be expressed in CIDR format. Only supports IPv4.
   * </pre>
   *
   * <code>repeated string destination_ip_ranges = 5;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the destinationIpRanges at the given index.
   */
  com.google.protobuf.ByteString getDestinationIpRangesBytes(int index);

  /**
   *
   *
   * <pre>
   * Name of the network protocol service, such as FTP, that is exposed by the
   * open port. Follows the naming convention available at:
   * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
   * </pre>
   *
   * <code>repeated string exposed_services = 6;</code>
   *
   * @return A list containing the exposedServices.
   */
  java.util.List<java.lang.String> getExposedServicesList();

  /**
   *
   *
   * <pre>
   * Name of the network protocol service, such as FTP, that is exposed by the
   * open port. Follows the naming convention available at:
   * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
   * </pre>
   *
   * <code>repeated string exposed_services = 6;</code>
   *
   * @return The count of exposedServices.
   */
  int getExposedServicesCount();

  /**
   *
   *
   * <pre>
   * Name of the network protocol service, such as FTP, that is exposed by the
   * open port. Follows the naming convention available at:
   * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
   * </pre>
   *
   * <code>repeated string exposed_services = 6;</code>
   *
   * @param index The index of the element to return.
   * @return The exposedServices at the given index.
   */
  java.lang.String getExposedServices(int index);

  /**
   *
   *
   * <pre>
   * Name of the network protocol service, such as FTP, that is exposed by the
   * open port. Follows the naming convention available at:
   * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
   * </pre>
   *
   * <code>repeated string exposed_services = 6;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the exposedServices at the given index.
   */
  com.google.protobuf.ByteString getExposedServicesBytes(int index);

  com.google.cloud.securitycenter.v2.IpRules.RulesCase getRulesCase();
}
